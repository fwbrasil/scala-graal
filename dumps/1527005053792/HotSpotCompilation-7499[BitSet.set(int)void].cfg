begin_compilation
  name " HotSpotCompilation-7499[java.util.BitSet.set(int)]"
  method "HotSpotCompilation-7499[java.util.BitSet.set(int)]"
  date 1527005185352
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v151 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: v151  <|@  <|@
f <@~|@floating>@ <|@
tid a225 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v228 v238 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Ljava/util/BitSet;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v524 ?11 v525 v529 j306 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i2 <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v5 i8 ?11 j15 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?3 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<BitSet.set(int)>
duringCall: false
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: BitSet.java
sourceLine: 443
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 i2 - 
=== Succesors ===
=== Usages ===
v228 a267 i517 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2 -  <|@  <|@
f <@~|@floating>@ <|@
tid i4 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.BitSet.set(BitSet.java:443) [bci: 1]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v5 a267 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v5 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.BitSet.set(BitSet.java:443) [bci: 1]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2 
y: i4 
=== Succesors ===
=== Usages ===
v151 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2 y: i4  <|@  <|@
f <@*|@fixed>@ <|@
tid v151 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.BitSet.set(BitSet.java:443) [bci: 1]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v5 
=== Succesors ===
trueSuccessor: v150 
falseSuccessor: v148 
=== Usages ===
=== Predecessor ===
v0 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v5 #trueSuccessor: v150 #falseSuccessor: v148  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v150 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.BitSet.set(BitSet.java:443) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v228 
=== Usages ===
=== Predecessor ===
v151 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v228  <|@  <|@
f <@~|@floating>@ <|@
tid i224 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -22803
stableDimension: 0
stamp: i32 [-22803] ⇊00000000ffffa6ed ⇈00000000ffffa6ed
stampKind: i32
value: int[-22803|0xffffffffffffa6ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
v228 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v228 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?3 
actionAndReason: i224 
speculation: a225 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v150 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?3 actionAndReason: i224 speculation: a225  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B40" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v148 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.BitSet.set(BitSet.java:443) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: i515 
=== Usages ===
=== Predecessor ===
v151 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i515  <|@  <|@
f <@~|@floating>@ <|@
tid v524 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i515 v133 v134 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i515 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: BitSet.wordsInUse
nodeSourcePosition: at java.util.BitSet.expandTo(BitSet.java:351) [bci: 5]
at java.util.BitSet.set(BitSet.java:447) [bci: 38]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v524 
=== Succesors ===
next: v29 
=== Usages ===
v26 
=== Predecessor ===
v148 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v524 #next: v29  <|@  <|@
f <@~|@floating>@ <|@
tid i7 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.BitSet.wordIndex(BitSet.java:112) [bci: 1]
at java.util.BitSet.set(BitSet.java:446) [bci: 32]
rawvalue: 6
stableDimension: 0
stamp: i32 [6] ⇊0000000000000006 ⇈0000000000000006
stampKind: i32
value: int[6|0x6]
=== Inputs ===
=== Succesors ===
=== Usages ===
i8 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i8 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.RightShiftNode$$Lambda$143/1909420937@4b2846e5
nodeSourcePosition: at java.util.BitSet.wordIndex(BitSet.java:112) [bci: 3]
at java.util.BitSet.set(BitSet.java:446) [bci: 32]
stamp: i32 [-33554432 - 33554431]
=== Inputs ===
x: i2 
y: i7 
=== Succesors ===
=== Usages ===
i24 ?11 v113 v527 
=== Predecessor ===
- >@ <|@
instruction <@>>|@org.graalvm.compiler.nodes.calc.RightShiftNode>@ x: i2 y: i7  <|@  <|@
f <@~|@floating>@ <|@
tid i23 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.BitSet.expandTo(BitSet.java:350) [bci: 1]
at java.util.BitSet.set(BitSet.java:447) [bci: 38]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i24 i60 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i24 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.util.BitSet.expandTo(BitSet.java:350) [bci: 2]
at java.util.BitSet.set(BitSet.java:447) [bci: 38]
stamp: i32 [-33554431 - 33554432]
=== Inputs ===
x: i8 
y: i23 
=== Succesors ===
=== Usages ===
v26 v67 v134 v133 v44 i138 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i8 y: i23  <|@  <|@
f <@~|@floating>@ <|@
tid v26 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.BitSet.expandTo(BitSet.java:351) [bci: 9]
at java.util.BitSet.set(BitSet.java:447) [bci: 38]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i515 
y: i24 
=== Succesors ===
=== Usages ===
v29 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i515 y: i24  <|@  <|@
f <@~|@floating>@ <|@
tid j14 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.BitSet.set(BitSet.java:449) [bci: 48]
rawvalue: 1
stableDimension: 0
stamp: i64 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
j15 v294 v327 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v525 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a521 a516 v129 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@*|@fixed>@ <|@
tid v29 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.BitSet.expandTo(BitSet.java:351) [bci: 9]
at java.util.BitSet.set(BitSet.java:447) [bci: 38]
stamp: void
trueSuccessorProbability: 0.1293034473961897
=== Inputs ===
condition: v26 
=== Succesors ===
trueSuccessor: v27 
falseSuccessor: v28 
=== Usages ===
=== Predecessor ===
i515 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v26 #trueSuccessor: v27 #falseSuccessor: v28  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B39" 
    xhandlers
    flags 
    probability 4593826667950625028
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v27 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.BitSet.expandTo(BitSet.java:352) [bci: 12]
at java.util.BitSet.set(BitSet.java:447) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: a516 
=== Usages ===
=== Predecessor ===
v29 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a516  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a516 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: BitSet.words
nodeSourcePosition: at java.util.BitSet.ensureCapacity(BitSet.java:334) [bci: 1]
at java.util.BitSet.expandTo(BitSet.java:352) [bci: 14]
at java.util.BitSet.set(BitSet.java:447) [bci: 38]
nullCheck: false
stamp: n# [J
=== Inputs ===
stateBefore: - 
guard: - 
address: v525 
=== Succesors ===
next: i517 
=== Usages ===
v530 v528 
=== Predecessor ===
v27 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v525 #next: i517  <|@  <|@
f <@~|@floating>@ <|@
tid v528 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a516 
=== Succesors ===
=== Usages ===
i517 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a516  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i517 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.BitSet.ensureCapacity(BitSet.java:334) [bci: 4]
at java.util.BitSet.expandTo(BitSet.java:352) [bci: 14]
at java.util.BitSet.set(BitSet.java:447) [bci: 38]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?3 
guard: - 
address: v528 
=== Succesors ===
next: v47 
=== Usages ===
v44 i60 i205 v182 
=== Predecessor ===
a516 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?3 guard: - address: v528 #next: v47  <|@  <|@
f <@~|@floating>@ <|@
tid v44 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.BitSet.ensureCapacity(BitSet.java:334) [bci: 6]
at java.util.BitSet.expandTo(BitSet.java:352) [bci: 14]
at java.util.BitSet.set(BitSet.java:447) [bci: 38]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i517 
y: i24 
=== Succesors ===
=== Usages ===
v47 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i517 y: i24  <|@  <|@
f <@*|@fixed>@ <|@
tid v47 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.BitSet.ensureCapacity(BitSet.java:334) [bci: 6]
at java.util.BitSet.expandTo(BitSet.java:352) [bci: 14]
at java.util.BitSet.set(BitSet.java:447) [bci: 38]
stamp: void
trueSuccessorProbability: 0.0010368489113086188
=== Inputs ===
condition: v44 
=== Succesors ===
trueSuccessor: v45 
falseSuccessor: v46 
=== Usages ===
=== Predecessor ===
i517 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v44 #trueSuccessor: v45 #falseSuccessor: v46  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B8" 
    xhandlers
    flags 
    probability 4549078265301473639
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v45 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.BitSet.ensureCapacity(BitSet.java:336) [bci: 9]
at java.util.BitSet.expandTo(BitSet.java:352) [bci: 14]
at java.util.BitSet.set(BitSet.java:447) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: j246 
=== Usages ===
=== Predecessor ===
v47 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j246  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j246 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:772) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:319) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$g, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:66) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:137) [bci: 58]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
at java.util.BitSet.expandTo(BitSet.java:352) [bci: 14]
at java.util.BitSet.set(BitSet.java:447) [bci: 38]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j290 
=== Usages ===
v532 v533 
=== Predecessor ===
v45 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j290  <|@  <|@
f <@~|@floating>@ <|@
tid v532 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j246 
index: - 
=== Succesors ===
=== Usages ===
j290 v292 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j246 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j290 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:245) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:320) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$g, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:66) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:137) [bci: 58]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
at java.util.BitSet.expandTo(BitSet.java:352) [bci: 14]
at java.util.BitSet.set(BitSet.java:447) [bci: 38]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v532 
=== Succesors ===
next: j291 
=== Usages ===
j250 v534 v535 a266 v540 v536 v537 v538 v539 
=== Predecessor ===
j246 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v532 #next: j291  <|@  <|@
f <@~|@floating>@ <|@
tid v533 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j246 
index: - 
=== Succesors ===
=== Usages ===
j291 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j246 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j291 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:249) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:321) [bci: 25]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$g, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:66) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:137) [bci: 58]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
at java.util.BitSet.expandTo(BitSet.java:352) [bci: 14]
at java.util.BitSet.set(BitSet.java:447) [bci: 38]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v533 
=== Succesors ===
next: v255 
=== Usages ===
v256 
=== Predecessor ===
j290 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v533 #next: v255  <|@  <|@
f <@~|@floating>@ <|@
tid i60 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at java.util.BitSet.ensureCapacity(BitSet.java:336) [bci: 15]
at java.util.BitSet.expandTo(BitSet.java:352) [bci: 14]
at java.util.BitSet.set(BitSet.java:447) [bci: 38]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i517 
y: i23 
=== Succesors ===
=== Usages ===
i138 v67 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i517 y: i23  <|@  <|@
f <@~|@floating>@ <|@
tid v67 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 2]
at java.util.BitSet.ensureCapacity(BitSet.java:336) [bci: 17]
at java.util.BitSet.expandTo(BitSet.java:352) [bci: 14]
at java.util.BitSet.set(BitSet.java:447) [bci: 38]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i60 
y: i24 
=== Succesors ===
=== Usages ===
i138 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i60 y: i24  <|@  <|@
f <@~|@floating>@ <|@
tid i138 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-2147483648 - 2147483646]
=== Inputs ===
condition: v67 
trueValue: i24 
falseValue: i60 
=== Succesors ===
=== Usages ===
j316 v252 v182 i205 a267 v293 i243 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v67 trueValue: i24 falseValue: i60  <|@  <|@
f <@~|@floating>@ <|@
tid i251 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 48]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$g, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:66) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:137) [bci: 58]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
at java.util.BitSet.expandTo(BitSet.java:352) [bci: 14]
at java.util.BitSet.set(BitSet.java:447) [bci: 38]
rawvalue: 16777215
stableDimension: 0
stamp: i32 [16777215] ⇊0000000000ffffff ⇈0000000000ffffff
stampKind: i32
value: int[16777215|0xffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v252 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v252 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.core.common.calc.UnsignedMath.belowThan(int, int) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 50]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$g, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:66) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:137) [bci: 58]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
at java.util.BitSet.expandTo(BitSet.java:352) [bci: 14]
at java.util.BitSet.set(BitSet.java:447) [bci: 38]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i138 
y: i251 
=== Succesors ===
=== Usages ===
v255 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i138 y: i251  <|@  <|@
f <@*|@fixed>@ <|@
tid v255 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 64]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$g, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:66) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:137) [bci: 58]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
at java.util.BitSet.expandTo(BitSet.java:352) [bci: 14]
at java.util.BitSet.set(BitSet.java:447) [bci: 38]
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v252 
=== Succesors ===
trueSuccessor: v254 
falseSuccessor: v253 
=== Usages ===
=== Predecessor ===
j291 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v252 #trueSuccessor: v254 #falseSuccessor: v253  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4548531658701817683
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v254 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 67]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$g, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:66) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:137) [bci: 58]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
at java.util.BitSet.expandTo(BitSet.java:352) [bci: 14]
at java.util.BitSet.set(BitSet.java:447) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: v262 
=== Usages ===
=== Predecessor ===
v255 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v262  <|@  <|@
f <@~|@floating>@ <|@
tid i106 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.BitSet.set(BitSet.java:449) [bci: 47]
rawvalue: 3
stableDimension: 0
stamp: i32 [3] ⇊0000000000000003 ⇈0000000000000003
stampKind: i32
value: int[3|0x3]
=== Inputs ===
=== Succesors ===
=== Usages ===
i243 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i243 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 8]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$g, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:66) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:137) [bci: 58]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
at java.util.BitSet.expandTo(BitSet.java:352) [bci: 14]
at java.util.BitSet.set(BitSet.java:447) [bci: 38]
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i138 
y: i106 
=== Succesors ===
=== Usages ===
i275 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i138 y: i106  <|@  <|@
f <@~|@floating>@ <|@
tid i274 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$g, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:66) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:137) [bci: 58]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
at java.util.BitSet.expandTo(BitSet.java:352) [bci: 14]
at java.util.BitSet.set(BitSet.java:447) [bci: 38]
rawvalue: 23
stableDimension: 0
stamp: i32 [23] ⇊0000000000000017 ⇈0000000000000017
stampKind: i32
value: int[23|0x17]
=== Inputs ===
=== Succesors ===
=== Usages ===
i275 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i275 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$g, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:66) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:137) [bci: 58]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
at java.util.BitSet.expandTo(BitSet.java:352) [bci: 14]
at java.util.BitSet.set(BitSet.java:447) [bci: 38]
stamp: i32 [-2147483641 - 2147483647] ⇊0000000000000007
=== Inputs ===
x: i243 
y: i274 
=== Succesors ===
=== Usages ===
i245 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i243 y: i274  <|@  <|@
f <@~|@floating>@ <|@
tid i244 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:603) [bci: 23]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$g, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:66) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:137) [bci: 58]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
at java.util.BitSet.expandTo(BitSet.java:352) [bci: 14]
at java.util.BitSet.set(BitSet.java:447) [bci: 38]
rawvalue: -8
stableDimension: 0
stamp: i32 [-8] ⇊00000000fffffff8 ⇈00000000fffffff8
stampKind: i32
value: int[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
i245 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i245 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:604) [bci: 30]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$g, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:66) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:137) [bci: 58]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
at java.util.BitSet.expandTo(BitSet.java:352) [bci: 14]
at java.util.BitSet.set(BitSet.java:447) [bci: 38]
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i275 
y: i244 
=== Succesors ===
=== Usages ===
j249 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i275 y: i244  <|@  <|@
f <@~|@floating>@ <|@
tid j249 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$g, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:66) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:137) [bci: 58]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
at java.util.BitSet.expandTo(BitSet.java:352) [bci: 14]
at java.util.BitSet.set(BitSet.java:447) [bci: 38]
resultBits: 64
stamp: i64 [-2147483648 - 2147483640] ⇈fffffffffffffff8
=== Inputs ===
value: i245 
=== Succesors ===
=== Usages ===
j250 v536 v537 v538 v539 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i245  <|@  <|@
f <@~|@floating>@ <|@
tid j250 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$g, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:66) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:137) [bci: 58]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
at java.util.BitSet.expandTo(BitSet.java:352) [bci: 14]
at java.util.BitSet.set(BitSet.java:447) [bci: 38]
stamp: i64
=== Inputs ===
x: j249 
y: j290 
=== Succesors ===
=== Usages ===
v256 v292 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j249 y: j290  <|@  <|@
f <@~|@floating>@ <|@
tid v256 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 83]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$g, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:66) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:137) [bci: 58]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
at java.util.BitSet.expandTo(BitSet.java:352) [bci: 14]
at java.util.BitSet.set(BitSet.java:447) [bci: 38]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j291 
y: j250 
=== Succesors ===
=== Usages ===
v262 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j291 y: j250  <|@  <|@
f <@*|@fixed>@ <|@
tid v262 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 89]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$g, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:66) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:137) [bci: 58]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
at java.util.BitSet.expandTo(BitSet.java:352) [bci: 14]
at java.util.BitSet.set(BitSet.java:447) [bci: 38]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v256 
=== Succesors ===
trueSuccessor: v261 
falseSuccessor: v260 
=== Usages ===
=== Predecessor ===
v254 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v256 #trueSuccessor: v261 #falseSuccessor: v260  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4518304896585145935
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v261 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$g, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:66) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:137) [bci: 58]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
at java.util.BitSet.expandTo(BitSet.java:352) [bci: 14]
at java.util.BitSet.set(BitSet.java:447) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: v259 
=== Usages ===
=== Predecessor ===
v262 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v259  <|@  <|@
f <@*|@fixed>@ <|@
tid v259 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$g, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:66) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:137) [bci: 58]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
at java.util.BitSet.expandTo(BitSet.java:352) [bci: 14]
at java.util.BitSet.set(BitSet.java:447) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v258 
=== Predecessor ===
v261 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B10" 
    xhandlers
    flags 
    probability 4548442626358694106
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v260 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 92]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$g, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:66) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:137) [bci: 58]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
at java.util.BitSet.expandTo(BitSet.java:352) [bci: 14]
at java.util.BitSet.set(BitSet.java:447) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: v292 
=== Usages ===
=== Predecessor ===
v262 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v292  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v292 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:257) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 96]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$g, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:66) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:137) [bci: 58]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
at java.util.BitSet.expandTo(BitSet.java:352) [bci: 14]
at java.util.BitSet.set(BitSet.java:447) [bci: 38]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v532 
value: j250 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v279 
=== Usages ===
=== Predecessor ===
v260 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v532 value: j250 stateAfter: - lastLocationAccess: - #next: v279  <|@  <|@
f <@~|@floating>@ <|@
tid v536 <|@
d <@d|@=== Debug Properties ===
displacement: 192
scale: Times1
stamp: void*
=== Inputs ===
base: j249 
index: j290 
=== Succesors ===
=== Usages ===
v279 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j249 index: j290  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v279 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$g, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:66) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:137) [bci: 58]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
at java.util.BitSet.expandTo(BitSet.java:352) [bci: 14]
at java.util.BitSet.set(BitSet.java:447) [bci: 38]
stamp: void
=== Inputs ===
address: v536 
=== Succesors ===
next: v282 
=== Usages ===
=== Predecessor ===
v292 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v536 #next: v282  <|@  <|@
f <@~|@floating>@ <|@
tid v537 <|@
d <@d|@=== Debug Properties ===
displacement: 256
scale: Times1
stamp: void*
=== Inputs ===
base: j249 
index: j290 
=== Succesors ===
=== Usages ===
v282 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j249 index: j290  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v282 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$g, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:66) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:137) [bci: 58]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
at java.util.BitSet.expandTo(BitSet.java:352) [bci: 14]
at java.util.BitSet.set(BitSet.java:447) [bci: 38]
stamp: void
=== Inputs ===
address: v537 
=== Succesors ===
next: v285 
=== Usages ===
=== Predecessor ===
v279 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v537 #next: v285  <|@  <|@
f <@~|@floating>@ <|@
tid v538 <|@
d <@d|@=== Debug Properties ===
displacement: 320
scale: Times1
stamp: void*
=== Inputs ===
base: j249 
index: j290 
=== Succesors ===
=== Usages ===
v285 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j249 index: j290  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v285 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$g, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:66) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:137) [bci: 58]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
at java.util.BitSet.expandTo(BitSet.java:352) [bci: 14]
at java.util.BitSet.set(BitSet.java:447) [bci: 38]
stamp: void
=== Inputs ===
address: v538 
=== Succesors ===
next: v288 
=== Usages ===
=== Predecessor ===
v282 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v538 #next: v288  <|@  <|@
f <@~|@floating>@ <|@
tid v539 <|@
d <@d|@=== Debug Properties ===
displacement: 384
scale: Times1
stamp: void*
=== Inputs ===
base: j249 
index: j290 
=== Succesors ===
=== Usages ===
v288 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j249 index: j290  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v288 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$g, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:66) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:137) [bci: 58]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
at java.util.BitSet.expandTo(BitSet.java:352) [bci: 14]
at java.util.BitSet.set(BitSet.java:447) [bci: 38]
stamp: void
=== Inputs ===
address: v539 
=== Succesors ===
next: v293 
=== Usages ===
=== Predecessor ===
v285 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v539 #next: v293  <|@  <|@
f <@~|@floating>@ <|@
tid v534 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j290 
index: - 
=== Succesors ===
=== Usages ===
v293 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j290 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v293 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:549) [bci: 12]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$g, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:66) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:137) [bci: 58]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
at java.util.BitSet.expandTo(BitSet.java:352) [bci: 14]
at java.util.BitSet.set(BitSet.java:447) [bci: 38]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v534 
value: i138 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v294 
=== Usages ===
=== Predecessor ===
v288 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v534 value: i138 stateAfter: - lastLocationAccess: - #next: v294  <|@  <|@
f <@~|@floating>@ <|@
tid v535 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j290 
index: - 
=== Succesors ===
=== Usages ===
v294 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j290 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v294 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:469) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$g, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:66) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:137) [bci: 58]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
at java.util.BitSet.expandTo(BitSet.java:352) [bci: 14]
at java.util.BitSet.set(BitSet.java:447) [bci: 38]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v535 
value: j14 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v298 
=== Usages ===
=== Predecessor ===
v293 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v535 value: j14 stateAfter: - lastLocationAccess: - #next: v298  <|@  <|@
f <@~|@floating>@ <|@
tid v540 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j290 
index: - 
=== Succesors ===
=== Usages ===
v298 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j290 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v315 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$g, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:66) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:137) [bci: 58]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
at java.util.BitSet.expandTo(BitSet.java:352) [bci: 14]
at java.util.BitSet.set(BitSet.java:447) [bci: 38]
rawvalue: meta{HotSpotType<[J, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<[J, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v298 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v298 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$g, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:66) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:137) [bci: 58]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
at java.util.BitSet.expandTo(BitSet.java:352) [bci: 14]
at java.util.BitSet.set(BitSet.java:447) [bci: 38]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v540 
value: v315 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v265 
=== Usages ===
=== Predecessor ===
v294 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v540 value: v315 stateAfter: - lastLocationAccess: - #next: v265  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v265 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.MembarNode.memoryBarrier(int, LocationIdentity) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:560) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$g, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:66) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:137) [bci: 58]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
at java.util.BitSet.expandTo(BitSet.java:352) [bci: 14]
at java.util.BitSet.set(BitSet.java:447) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: a266 
=== Usages ===
=== Predecessor ===
v298 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a266  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a266 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:561) [bci: 71]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$g, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:66) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:137) [bci: 58]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
at java.util.BitSet.expandTo(BitSet.java:352) [bci: 14]
at java.util.BitSet.set(BitSet.java:447) [bci: 38]
stamp: a! -
trackedPointer: true
=== Inputs ===
input: j290 
=== Succesors ===
next: v268 
=== Usages ===
a271 
=== Predecessor ===
v265 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j290 #next: v268  <|@  <|@
f <@*|@fixed>@ <|@
tid v268 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$g, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:66) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:137) [bci: 58]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
at java.util.BitSet.expandTo(BitSet.java:352) [bci: 14]
at java.util.BitSet.set(BitSet.java:447) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v269 
=== Predecessor ===
a266 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B9" 
    xhandlers
    flags 
    probability 4534031611562777558
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v253 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$g, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:66) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:137) [bci: 58]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
at java.util.BitSet.expandTo(BitSet.java:352) [bci: 14]
at java.util.BitSet.set(BitSet.java:447) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: v257 
=== Usages ===
=== Predecessor ===
v255 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v257  <|@  <|@
f <@*|@fixed>@ <|@
tid v257 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$g, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:66) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:137) [bci: 58]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
at java.util.BitSet.expandTo(BitSet.java:352) [bci: 14]
at java.util.BitSet.set(BitSet.java:447) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v258 
=== Predecessor ===
v253 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4534743870307766176
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v258 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$g, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:66) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:137) [bci: 58]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
at java.util.BitSet.expandTo(BitSet.java:352) [bci: 14]
at java.util.BitSet.set(BitSet.java:447) [bci: 38]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v257 v259 
=== Succesors ===
next: a267 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v257 v259 #next: a267  <|@  <|@
f <@~|@floating>@ <|@
tid v242 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$g, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:66) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:137) [bci: 58]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
at java.util.BitSet.expandTo(BitSet.java:352) [bci: 14]
at java.util.BitSet.set(BitSet.java:447) [bci: 38]
rawvalue: meta{HotSpotType<[J, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[J, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a267 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a267 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.newArray(ForeignCallDescriptor, KlassPointer, int, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 155]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$g, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:66) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:137) [bci: 58]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
at java.util.BitSet.expandTo(BitSet.java:352) [bci: 14]
at java.util.BitSet.set(BitSet.java:447) [bci: 38]
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?3 
arguments: v242 i138 i4 
=== Succesors ===
next: v270 
=== Usages ===
a271 
=== Predecessor ===
v258 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?3 arguments: v242 i138 i4 #next: v270  <|@  <|@
f <@*|@fixed>@ <|@
tid v270 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$g, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:66) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:137) [bci: 58]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
at java.util.BitSet.expandTo(BitSet.java:352) [bci: 14]
at java.util.BitSet.set(BitSet.java:447) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v269 
=== Predecessor ===
a267 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B7" "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4549078265301473639
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a271 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$g, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:66) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:137) [bci: 58]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
at java.util.BitSet.expandTo(BitSet.java:352) [bci: 14]
at java.util.BitSet.set(BitSet.java:447) [bci: 38]
stamp: a! -
valueDescription: a -
=== Inputs ===
merge: v269 
values: a266 a267 
=== Succesors ===
=== Usages ===
v542 a210 v531 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v269 values: a266 a267  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v269 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$g, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:66) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:137) [bci: 58]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
at java.util.BitSet.expandTo(BitSet.java:352) [bci: 14]
at java.util.BitSet.set(BitSet.java:447) [bci: 38]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v268 v270 
=== Succesors ===
next: v420 
=== Usages ===
a271 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v268 v270 #next: v420  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v420 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v330 
=== Usages ===
j421 j423 
=== Predecessor ===
v269 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v330  <|@  <|@
f <@~|@floating>@ <|@
tid v182 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Math.min(Math.java:1336) [bci: 2]
at com.oracle.graal.enterprise.T.c.b(stripped:192) [bci: 4]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:130) [bci: 9]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
at java.util.BitSet.expandTo(BitSet.java:352) [bci: 14]
at java.util.BitSet.set(BitSet.java:447) [bci: 38]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i517 
y: i138 
=== Succesors ===
=== Usages ===
i205 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i517 y: i138  <|@  <|@
f <@~|@floating>@ <|@
tid i205 <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
condition: v182 
trueValue: i517 
falseValue: i138 
=== Succesors ===
=== Usages ===
j317 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v182 trueValue: i517 falseValue: i138  <|@  <|@
f <@~|@floating>@ <|@
tid j317 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i205 
=== Succesors ===
=== Usages ===
j461 v542 j321 v327 v417 j451 j457 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i205  <|@  <|@
f <@~|@floating>@ <|@
tid v327 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j317 
y: j14 
=== Succesors ===
=== Usages ===
v330 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j317 y: j14  <|@  <|@
f <@~|@floating>@ <|@
tid j460 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -1
stableDimension: 0
stamp: i64 [-1] ⇊ffffffffffffffff
stampKind: i64
value: long[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
j461 j494 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j439 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 2
stableDimension: 0
stamp: i64 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i64
value: long[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
j440 j479 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j456 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -2
stableDimension: 0
stamp: i64 [-2] ⇊fffffffffffffffe ⇈fffffffffffffffe
stampKind: i64
value: long[-2|0xfffffffffffffffe]
=== Inputs ===
=== Succesors ===
=== Usages ===
j457 j491 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j448 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 4
stableDimension: 0
stamp: i64 [4] ⇊0000000000000004 ⇈0000000000000004
stampKind: i64
value: long[4|0x4]
=== Inputs ===
=== Succesors ===
=== Usages ===
j449 j485 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j450 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -4
stableDimension: 0
stamp: i64 [-4] ⇊fffffffffffffffc ⇈fffffffffffffffc
stampKind: i64
value: long[-4|0xfffffffffffffffc]
=== Inputs ===
=== Succesors ===
=== Usages ===
j451 j486 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j190 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:134) [bci: 31]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
at java.util.BitSet.expandTo(BitSet.java:352) [bci: 14]
at java.util.BitSet.set(BitSet.java:447) [bci: 38]
rawvalue: 0
stableDimension: 0
stamp: i64 [0] ⇈0000000000000000
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j474 v509 v487 j432 j441 v452 j480 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v330 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v327 
=== Succesors ===
trueSuccessor: v328 
falseSuccessor: v329 
=== Usages ===
=== Predecessor ===
v420 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v327 #trueSuccessor: v328 #falseSuccessor: v329  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B23" 
    xhandlers
    flags 
    probability 4544574665674103143
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v328 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v347 
=== Usages ===
=== Predecessor ===
v330 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v347  <|@  <|@
f <@*|@fixed>@ <|@
tid v347 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v348 
=== Predecessor ===
v328 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4544574665674103143
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v329 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v333 
=== Usages ===
=== Predecessor ===
v330 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v333  <|@  <|@
f <@~|@floating>@ <|@
tid v531 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a271 
index: - 
=== Succesors ===
=== Usages ===
j423 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a271 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j423 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v420 
address: v531 
=== Succesors ===
=== Usages ===
v543 v545 v547 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v420 address: v531  <|@  <|@
f <@~|@floating>@ <|@
tid v530 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a516 
=== Succesors ===
=== Usages ===
j421 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a516  <|@  <|@
f <@~|@floating>@ <|@
tid j421 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v420 
address: v530 
=== Succesors ===
=== Usages ===
v544 v546 v548 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v420 address: v530  <|@  <|@
f <@~|@floating>@ <|@
tid j451 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483652 - 2147483643]
=== Inputs ===
x: j317 
y: j450 
=== Succesors ===
=== Usages ===
v452 v454 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j317 y: j450  <|@  <|@
f <@~|@floating>@ <|@
tid v452 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j451 
y: j190 
=== Succesors ===
=== Usages ===
v333 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j451 y: j190  <|@  <|@
f <@*|@fixed>@ <|@
tid v333 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v452 
=== Succesors ===
trueSuccessor: v331 
falseSuccessor: v332 
=== Usages ===
=== Predecessor ===
v329 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v452 #trueSuccessor: v331 #falseSuccessor: v332  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B17" 
    xhandlers
    flags 
    probability 4542544186689054234
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v331 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v343 
=== Usages ===
=== Predecessor ===
v333 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v343  <|@  <|@
f <@*|@fixed>@ <|@
tid v343 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v344 
=== Predecessor ===
v331 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4535567466419362151
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v332 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v334 
=== Usages ===
=== Predecessor ===
v333 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v334  <|@  <|@
f <@*|@fixed>@ <|@
tid v334 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v335 
=== Predecessor ===
v332 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B38" 
    successors "B16" "B38" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4544574665674103143
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j441 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v335 
values: j190 j449 
=== Succesors ===
=== Usages ===
v548 j449 v547 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v335 values: j190 j449  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v335 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v334 
=== Succesors ===
next: v518 
=== Usages ===
v518 v339 v340 j441 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v334 #next: v518  <|@  <|@
f <@~|@floating>@ <|@
tid v548 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times8
stamp: void*
=== Inputs ===
base: j421 
index: j441 
=== Succesors ===
=== Usages ===
v518 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j421 index: j441  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v518 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: long
nullCheck: false
stamp: <i64,i64,i64,i64>
=== Inputs ===
stateBefore: - 
guard: v335 
address: v548 
=== Succesors ===
next: v506 
=== Usages ===
v506 
=== Predecessor ===
v335 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v335 address: v548 #next: v506  <|@  <|@
f <@~|@floating>@ <|@
tid v547 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times8
stamp: void*
=== Inputs ===
base: j423 
index: j441 
=== Succesors ===
=== Usages ===
v506 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j423 index: j441  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v506 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v547 
value: v518 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v342 
=== Usages ===
=== Predecessor ===
v518 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v547 value: v518 stateAfter: - lastLocationAccess: - #next: v342  <|@  <|@
f <@~|@floating>@ <|@
tid j449 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j441 
y: j448 
=== Succesors ===
=== Usages ===
j432 j441 v454 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j441 y: j448  <|@  <|@
f <@~|@floating>@ <|@
tid v454 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j451 
y: j449 
=== Succesors ===
=== Usages ===
v342 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j451 y: j449  <|@  <|@
f <@*|@fixed>@ <|@
tid v342 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v454 
=== Succesors ===
trueSuccessor: v339 
falseSuccessor: v341 
=== Usages ===
=== Predecessor ===
v506 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v454 #trueSuccessor: v339 #falseSuccessor: v341  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" 
    xhandlers
    flags 
    probability 4535567466419362151
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v339 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v335 
=== Succesors ===
next: v345 
=== Usages ===
=== Predecessor ===
v342 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v335 #next: v345  <|@  <|@
f <@*|@fixed>@ <|@
tid v345 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v344 
=== Predecessor ===
v339 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B13" "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4544574665674103143
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j432 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v344 
values: j190 j449 
=== Succesors ===
=== Usages ===
v546 j440 j424 v458 v545 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v344 values: j190 j449  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v344 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v343 v345 
=== Succesors ===
next: v360 
=== Usages ===
j432 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v343 v345 #next: v360  <|@  <|@
f <@~|@floating>@ <|@
tid j457 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483650 - 2147483645]
=== Inputs ===
x: j317 
y: j456 
=== Succesors ===
=== Usages ===
v458 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j317 y: j456  <|@  <|@
f <@~|@floating>@ <|@
tid v458 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j457 
y: j432 
=== Succesors ===
=== Usages ===
v360 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j457 y: j432  <|@  <|@
f <@*|@fixed>@ <|@
tid v360 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v458 
=== Succesors ===
trueSuccessor: v359 
falseSuccessor: v358 
=== Usages ===
=== Predecessor ===
v344 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v458 #trueSuccessor: v359 #falseSuccessor: v358  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" 
    xhandlers
    flags 
    probability 4535567466419362151
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v359 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v363 
=== Usages ===
=== Predecessor ===
v360 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v363  <|@  <|@
f <@*|@fixed>@ <|@
tid v363 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v355 
=== Predecessor ===
v359 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" 
    xhandlers
    flags 
    probability 4542544186689054234
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v358 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v519 
=== Usages ===
v519 
=== Predecessor ===
v360 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v519  <|@  <|@
f <@~|@floating>@ <|@
tid v546 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times8
stamp: void*
=== Inputs ===
base: j421 
index: j432 
=== Succesors ===
=== Usages ===
v519 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j421 index: j432  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v519 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: long
nullCheck: false
stamp: <i64,i64>
=== Inputs ===
stateBefore: - 
guard: v358 
address: v546 
=== Succesors ===
next: v504 
=== Usages ===
v504 
=== Predecessor ===
v358 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v358 address: v546 #next: v504  <|@  <|@
f <@~|@floating>@ <|@
tid v545 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times8
stamp: void*
=== Inputs ===
base: j423 
index: j432 
=== Succesors ===
=== Usages ===
v504 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j423 index: j432  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v504 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v545 
value: v519 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v354 
=== Usages ===
=== Predecessor ===
v519 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v545 value: v519 stateAfter: - lastLocationAccess: - #next: v354  <|@  <|@
f <@~|@floating>@ <|@
tid j440 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j432 
y: j439 
=== Succesors ===
=== Usages ===
j424 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j432 y: j439  <|@  <|@
f <@*|@fixed>@ <|@
tid v354 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v355 
=== Predecessor ===
v504 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" "B18" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4544574665674103143
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j424 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v355 
values: j440 j432 
=== Succesors ===
=== Usages ===
v544 v462 v543 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v355 values: j440 j432  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v355 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v354 v363 
=== Succesors ===
next: v366 
=== Usages ===
j424 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v354 v363 #next: v366  <|@  <|@
f <@~|@floating>@ <|@
tid j461 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483649 - 2147483646]
=== Inputs ===
x: j317 
y: j460 
=== Succesors ===
=== Usages ===
v462 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j317 y: j460  <|@  <|@
f <@~|@floating>@ <|@
tid v462 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j461 
y: j424 
=== Succesors ===
=== Usages ===
v366 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j461 y: j424  <|@  <|@
f <@*|@fixed>@ <|@
tid v366 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v462 
=== Succesors ===
trueSuccessor: v365 
falseSuccessor: v364 
=== Usages ===
=== Predecessor ===
v355 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v462 #trueSuccessor: v365 #falseSuccessor: v364  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4535567466419362151
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v365 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v369 
=== Usages ===
=== Predecessor ===
v366 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v369  <|@  <|@
f <@*|@fixed>@ <|@
tid v369 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v348 
=== Predecessor ===
v365 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4542544186689054234
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v364 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: j520 
=== Usages ===
j520 
=== Predecessor ===
v366 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j520  <|@  <|@
f <@~|@floating>@ <|@
tid v544 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times8
stamp: void*
=== Inputs ===
base: j421 
index: j424 
=== Succesors ===
=== Usages ===
j520 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j421 index: j424  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j520 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: long
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: v364 
address: v544 
=== Succesors ===
next: v502 
=== Usages ===
v502 
=== Predecessor ===
v364 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v364 address: v544 #next: v502  <|@  <|@
f <@~|@floating>@ <|@
tid v543 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times8
stamp: void*
=== Inputs ===
base: j423 
index: j424 
=== Succesors ===
=== Usages ===
v502 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j423 index: j424  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v502 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v543 
value: j520 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v357 
=== Usages ===
=== Predecessor ===
j520 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v543 value: j520 stateAfter: - lastLocationAccess: - #next: v357  <|@  <|@
f <@*|@fixed>@ <|@
tid v357 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v348 
=== Predecessor ===
v502 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B11" "B22" "B21" 
    successors "B24" "B36" 
    xhandlers
    flags 
    probability 4549078265301473639
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v348 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v347 v357 v369 
=== Succesors ===
next: v465 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v347 v357 v369 #next: v465  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v465 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v376 
=== Usages ===
j467 
=== Predecessor ===
v348 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v376  <|@  <|@
f <@~|@floating>@ <|@
tid j316 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483646]
=== Inputs ===
value: i138 
=== Succesors ===
=== Usages ===
j321 v417 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i138  <|@  <|@
f <@~|@floating>@ <|@
tid v417 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j317 
y: j316 
=== Succesors ===
=== Usages ===
v376 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j317 y: j316  <|@  <|@
f <@*|@fixed>@ <|@
tid v376 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v417 
=== Succesors ===
trueSuccessor: v375 
falseSuccessor: v374 
=== Usages ===
=== Predecessor ===
v465 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v417 #trueSuccessor: v375 #falseSuccessor: v374  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4544574665674103143
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v375 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v379 
=== Usages ===
=== Predecessor ===
v376 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v379  <|@  <|@
f <@~|@floating>@ <|@
tid v542 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: a271 
index: j317 
=== Succesors ===
=== Usages ===
j467 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a271 index: j317  <|@  <|@
f <@~|@floating>@ <|@
tid j467 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v465 
address: v542 
=== Succesors ===
=== Usages ===
v549 v550 v551 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v465 address: v542  <|@  <|@
f <@~|@floating>@ <|@
tid j321 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
stamp: i64 [-4294967295 - 4294967294]
=== Inputs ===
x: j316 
y: j317 
=== Succesors ===
=== Usages ===
j494 j486 j491 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j316 y: j317  <|@  <|@
f <@~|@floating>@ <|@
tid j486 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967299 - 4294967290]
=== Inputs ===
x: j321 
y: j450 
=== Succesors ===
=== Usages ===
v487 v489 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j321 y: j450  <|@  <|@
f <@~|@floating>@ <|@
tid v487 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j486 
y: j190 
=== Succesors ===
=== Usages ===
v379 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j486 y: j190  <|@  <|@
f <@*|@fixed>@ <|@
tid v379 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v487 
=== Succesors ===
trueSuccessor: v377 
falseSuccessor: v378 
=== Usages ===
=== Predecessor ===
v375 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v487 #trueSuccessor: v377 #falseSuccessor: v378  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B29" 
    xhandlers
    flags 
    probability 4542544186689054234
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v377 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v388 
=== Usages ===
=== Predecessor ===
v379 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v388  <|@  <|@
f <@*|@fixed>@ <|@
tid v388 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v389 
=== Predecessor ===
v377 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4535567466419362151
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v378 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v380 
=== Usages ===
=== Predecessor ===
v379 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v380  <|@  <|@
f <@*|@fixed>@ <|@
tid v380 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v381 
=== Predecessor ===
v378 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" "B35" 
    successors "B28" "B35" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4544574665674103143
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j480 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v381 
values: j190 j485 
=== Succesors ===
=== Usages ===
v551 j485 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v381 values: j190 j485  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v381 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v380 
=== Succesors ===
next: v512 
=== Usages ===
j480 v384 v385 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v380 #next: v512  <|@  <|@
f <@~|@floating>@ <|@
tid v551 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times8
stamp: void*
=== Inputs ===
base: j467 
index: j480 
=== Succesors ===
=== Usages ===
v512 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j467 index: j480  <|@  <|@
f <@~|@floating>@ <|@
tid v513 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0>
stableDimension: 0
stamp: <i64 [0] ⇈0000000000000000,i64 [0] ⇈0000000000000000,i64 [0] ⇈0000000000000000,i64 [0] ⇈0000000000000000>
stampKind: <i64,i64,i64,i64>
value: SIMD<0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v512 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v512 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v551 
value: v513 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v387 
=== Usages ===
=== Predecessor ===
v381 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v551 value: v513 stateAfter: - lastLocationAccess: - #next: v387  <|@  <|@
f <@~|@floating>@ <|@
tid j485 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j480 
y: j448 
=== Succesors ===
=== Usages ===
j474 j480 v489 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j480 y: j448  <|@  <|@
f <@~|@floating>@ <|@
tid v489 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j486 
y: j485 
=== Succesors ===
=== Usages ===
v387 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j486 y: j485  <|@  <|@
f <@*|@fixed>@ <|@
tid v387 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v489 
=== Succesors ===
trueSuccessor: v384 
falseSuccessor: v386 
=== Usages ===
=== Predecessor ===
v512 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v489 #trueSuccessor: v384 #falseSuccessor: v386  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B29" 
    xhandlers
    flags 
    probability 4535567466419362151
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v384 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v381 
=== Succesors ===
next: v390 
=== Usages ===
=== Predecessor ===
v387 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v381 #next: v390  <|@  <|@
f <@*|@fixed>@ <|@
tid v390 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v389 
=== Predecessor ===
v384 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B25" "B28" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4544574665674103143
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j474 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v389 
values: j190 j485 
=== Succesors ===
=== Usages ===
v550 j479 j468 v492 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v389 values: j190 j485  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v389 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v388 v390 
=== Succesors ===
next: v405 
=== Usages ===
j474 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v388 v390 #next: v405  <|@  <|@
f <@~|@floating>@ <|@
tid j491 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967297 - 4294967292]
=== Inputs ===
x: j321 
y: j456 
=== Succesors ===
=== Usages ===
v492 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j321 y: j456  <|@  <|@
f <@~|@floating>@ <|@
tid v492 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j491 
y: j474 
=== Succesors ===
=== Usages ===
v405 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j491 y: j474  <|@  <|@
f <@*|@fixed>@ <|@
tid v405 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v492 
=== Succesors ===
trueSuccessor: v404 
falseSuccessor: v403 
=== Usages ===
=== Predecessor ===
v389 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v492 #trueSuccessor: v404 #falseSuccessor: v403  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4535567466419362151
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v404 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v408 
=== Usages ===
=== Predecessor ===
v405 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v408  <|@  <|@
f <@*|@fixed>@ <|@
tid v408 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v400 
=== Predecessor ===
v404 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4542544186689054234
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v403 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v511 
=== Usages ===
=== Predecessor ===
v405 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v511  <|@  <|@
f <@~|@floating>@ <|@
tid v550 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times8
stamp: void*
=== Inputs ===
base: j467 
index: j474 
=== Succesors ===
=== Usages ===
v511 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j467 index: j474  <|@  <|@
f <@~|@floating>@ <|@
tid v514 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0>
stableDimension: 0
stamp: <i64 [0] ⇈0000000000000000,i64 [0] ⇈0000000000000000>
stampKind: <i64,i64>
value: SIMD<0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v511 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v511 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v550 
value: v514 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v399 
=== Usages ===
=== Predecessor ===
v403 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v550 value: v514 stateAfter: - lastLocationAccess: - #next: v399  <|@  <|@
f <@~|@floating>@ <|@
tid j479 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j474 
y: j439 
=== Succesors ===
=== Usages ===
j468 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j474 y: j439  <|@  <|@
f <@*|@fixed>@ <|@
tid v399 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v400 
=== Predecessor ===
v511 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4544574665674103143
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j468 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v400 
values: j479 j474 
=== Succesors ===
=== Usages ===
v549 v495 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v400 values: j479 j474  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v400 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v399 v408 
=== Succesors ===
next: v411 
=== Usages ===
j468 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v399 v408 #next: v411  <|@  <|@
f <@~|@floating>@ <|@
tid j494 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967296 - 4294967293]
=== Inputs ===
x: j321 
y: j460 
=== Succesors ===
=== Usages ===
v495 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j321 y: j460  <|@  <|@
f <@~|@floating>@ <|@
tid v495 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j494 
y: j468 
=== Succesors ===
=== Usages ===
v411 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j494 y: j468  <|@  <|@
f <@*|@fixed>@ <|@
tid v411 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v495 
=== Succesors ===
trueSuccessor: v410 
falseSuccessor: v409 
=== Usages ===
=== Predecessor ===
v400 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v495 #trueSuccessor: v410 #falseSuccessor: v409  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B37" 
    xhandlers
    flags 
    probability 4535567466419362151
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v410 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v414 
=== Usages ===
=== Predecessor ===
v411 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v414  <|@  <|@
f <@*|@fixed>@ <|@
tid v414 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v393 
=== Predecessor ===
v410 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B37" 
    xhandlers
    flags 
    probability 4542544186689054234
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v409 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v509 
=== Usages ===
=== Predecessor ===
v411 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v509  <|@  <|@
f <@~|@floating>@ <|@
tid v549 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times8
stamp: void*
=== Inputs ===
base: j467 
index: j468 
=== Succesors ===
=== Usages ===
v509 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j467 index: j468  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v509 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v549 
value: j190 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v402 
=== Usages ===
=== Predecessor ===
v409 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v549 value: j190 stateAfter: - lastLocationAccess: - #next: v402  <|@  <|@
f <@*|@fixed>@ <|@
tid v402 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v393 
=== Predecessor ===
v509 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B27" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4542544186689054234
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v386 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v385 
=== Usages ===
=== Predecessor ===
v387 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v385  <|@  <|@
f <@*|@fixed>@ <|@
tid v385 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v381 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v386 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v381  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B37" 
    xhandlers
    flags 
    probability 4544574665674103143
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v374 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v392 
=== Usages ===
=== Predecessor ===
v376 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v392  <|@  <|@
f <@*|@fixed>@ <|@
tid v392 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v393 
=== Predecessor ===
v374 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" "B34" "B33" 
    successors "B41" 
    xhandlers
    flags 
    probability 4549078265301473639
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v393 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v392 v402 v414 
=== Succesors ===
next: a210 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v392 v402 v414 #next: a210  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a210 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$g, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:66) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:137) [bci: 58]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
at java.util.BitSet.expandTo(BitSet.java:352) [bci: 14]
at java.util.BitSet.set(BitSet.java:447) [bci: 38]
predefinedStamp: [null]
stamp: a! -
=== Inputs ===
object: a271 
=== Succesors ===
next: v129 
=== Usages ===
a128 
=== Predecessor ===
v393 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a271 #next: v129  <|@  <|@
f <@~|@floating>@ <|@
tid a128 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 30]
at java.util.BitSet.expandTo(BitSet.java:352) [bci: 14]
at java.util.BitSet.set(BitSet.java:447) [bci: 38]
op: Compress
stamp: n! -
=== Inputs ===
value: a210 
=== Succesors ===
=== Usages ===
v129 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a210  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v129 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: BitSet.words
nodeSourcePosition: at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 30]
at java.util.BitSet.expandTo(BitSet.java:352) [bci: 14]
at java.util.BitSet.set(BitSet.java:447) [bci: 38]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v525 
value: a128 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j306 
=== Usages ===
=== Predecessor ===
a210 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v525 value: a128 stateAfter: - lastLocationAccess: - #next: j306  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j306 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 30]
at java.util.BitSet.expandTo(BitSet.java:352) [bci: 14]
at java.util.BitSet.set(BitSet.java:447) [bci: 38]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1 
=== Succesors ===
next: v312 
=== Usages ===
j308 
=== Predecessor ===
v129 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a1 #next: v312  <|@  <|@
f <@~|@floating>@ <|@
tid i307 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.cardTableShift(GraalHotSpotVMConfig) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 30]
at java.util.BitSet.expandTo(BitSet.java:352) [bci: 14]
at java.util.BitSet.set(BitSet.java:447) [bci: 38]
rawvalue: 9
stableDimension: 0
stamp: i32 [9] ⇊0000000000000009 ⇈0000000000000009
stampKind: i32
value: int[9|0x9]
=== Inputs ===
=== Succesors ===
=== Usages ===
j308 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j308 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 30]
at java.util.BitSet.expandTo(BitSet.java:352) [bci: 14]
at java.util.BitSet.set(BitSet.java:447) [bci: 38]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j306 
y: i307 
=== Succesors ===
=== Usages ===
v541 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j306 y: i307  <|@  <|@
f <@~|@floating>@ <|@
tid j311 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.loadLongConfigValue(int) [bci: -1]
at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.cardTableAddress(GraalHotSpotVMConfigNode.java:114) [bci: 6]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:133) [bci: 7]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 30]
at java.util.BitSet.expandTo(BitSet.java:352) [bci: 14]
at java.util.BitSet.set(BitSet.java:447) [bci: 38]
rawvalue: 4682670080
stableDimension: 0
stamp: i64 [4682670080] ⇊00000001171be000 ⇈00000001171be000
stampKind: i64
value: long[4682670080|0x1171be000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v541 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v541 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j308 
index: j311 
=== Succesors ===
=== Usages ===
v312 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j308 index: j311  <|@  <|@
f <@~|@floating>@ <|@
tid i137 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.BitSet.ensureCapacity(BitSet.java:338) [bci: 35]
at java.util.BitSet.expandTo(BitSet.java:352) [bci: 14]
at java.util.BitSet.set(BitSet.java:447) [bci: 38]
rawvalue: 0
stableDimension: 0
stamp: i8 [0] ⇈0000000000000000
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v132 v312 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v312 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 30]
at java.util.BitSet.expandTo(BitSet.java:352) [bci: 14]
at java.util.BitSet.set(BitSet.java:447) [bci: 38]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v541 
value: i137 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v132 
=== Usages ===
=== Predecessor ===
j306 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v541 value: i137 stateAfter: - lastLocationAccess: - #next: v132  <|@  <|@
f <@~|@floating>@ <|@
tid v529 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v132 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v132 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: BitSet.sizeIsSticky
nodeSourcePosition: at java.util.BitSet.ensureCapacity(BitSet.java:338) [bci: 35]
at java.util.BitSet.expandTo(BitSet.java:352) [bci: 14]
at java.util.BitSet.set(BitSet.java:447) [bci: 38]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v529 
value: i137 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v133 
=== Usages ===
=== Predecessor ===
v312 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v529 value: i137 stateAfter: - lastLocationAccess: - #next: v133  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v133 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: BitSet.wordsInUse
nodeSourcePosition: at java.util.BitSet.expandTo(BitSet.java:353) [bci: 19]
at java.util.BitSet.set(BitSet.java:447) [bci: 38]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v524 
value: i24 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v40 
=== Usages ===
=== Predecessor ===
v132 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v524 value: i24 stateAfter: - lastLocationAccess: - #next: v40  <|@  <|@
f <@*|@fixed>@ <|@
tid v40 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v38 
=== Predecessor ===
v133 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B15" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4542544186689054234
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v341 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v340 
=== Usages ===
=== Predecessor ===
v342 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v340  <|@  <|@
f <@*|@fixed>@ <|@
tid v340 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v335 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v341 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v335  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B41" 
    xhandlers
    flags 
    probability 4593821837636870494
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v46 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.BitSet.ensureCapacity(BitSet.java:340) [bci: 38]
at java.util.BitSet.expandTo(BitSet.java:352) [bci: 14]
at java.util.BitSet.set(BitSet.java:447) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: v134 
=== Usages ===
=== Predecessor ===
v47 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v134  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v134 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: BitSet.wordsInUse
nodeSourcePosition: at java.util.BitSet.expandTo(BitSet.java:353) [bci: 19]
at java.util.BitSet.set(BitSet.java:447) [bci: 38]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v524 
value: i24 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v85 
=== Usages ===
=== Predecessor ===
v46 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v524 value: i24 stateAfter: - lastLocationAccess: - #next: v85  <|@  <|@
f <@*|@fixed>@ <|@
tid v85 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v38 
=== Predecessor ===
v134 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B41" 
    xhandlers
    flags 
    probability 4606017756884995007
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v28 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.BitSet.expandTo(BitSet.java:355) [bci: 22]
at java.util.BitSet.set(BitSet.java:447) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: v39 
=== Usages ===
=== Predecessor ===
v29 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v39  <|@  <|@
f <@*|@fixed>@ <|@
tid v39 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v38 
=== Predecessor ===
v28 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" "B37" "B39" 
    successors "B42" "B43" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v38 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v39 v40 v85 
=== Succesors ===
next: a521 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v39 v40 v85 #next: a521  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a521 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: BitSet.words
nodeSourcePosition: at java.util.BitSet.set(BitSet.java:449) [bci: 42]
nullCheck: false
stamp: n# [J
=== Inputs ===
stateBefore: - 
guard: - 
address: v525 
=== Succesors ===
next: i522 
=== Usages ===
a96 v526 
=== Predecessor ===
v38 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v525 #next: i522  <|@  <|@
tid ?11 <|@
d <@d|@=== Debug Properties ===
bci: 41
code: ResolvedJavaMethodBytecode<BitSet.set(int)>
duringCall: false
localsSize: 3
locksSize: 0
nodeSourcePosition: at java.util.BitSet.set(BitSet.java:447) [bci: 38]
rethrowException: false
sourceFile: BitSet.java
sourceLine: 449
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 i2 i8 
=== Succesors ===
=== Usages ===
v238 i522 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2 i8  <|@  <|@
f <@~|@floating>@ <|@
tid v526 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a521 
=== Succesors ===
=== Usages ===
i522 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a521  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i522 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.BitSet.set(BitSet.java:449) [bci: 47]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?11 
guard: - 
address: v526 
=== Succesors ===
next: v163 
=== Usages ===
v113 
=== Predecessor ===
a521 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?11 guard: - address: v526 #next: v163  <|@  <|@
f <@~|@floating>@ <|@
tid v113 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.BitSet.set(BitSet.java:449) [bci: 52]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i8 
y: i522 
=== Succesors ===
=== Usages ===
v163 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i8 y: i522  <|@  <|@
f <@*|@fixed>@ <|@
tid v163 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.BitSet.set(BitSet.java:449) [bci: 52]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v113 
=== Succesors ===
trueSuccessor: v160 
falseSuccessor: v162 
=== Usages ===
=== Predecessor ===
i522 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v113 #trueSuccessor: v160 #falseSuccessor: v162  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v160 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.BitSet.set(BitSet.java:449) [bci: 52]
stamp: void
=== Inputs ===
=== Succesors ===
next: j523 
=== Usages ===
j523 v120 
=== Predecessor ===
v163 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j523  <|@  <|@
f <@~|@floating>@ <|@
tid a96 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.BitSet.set(BitSet.java:449) [bci: 42]
op: Uncompress
stamp: a# [J
=== Inputs ===
value: a521 
=== Succesors ===
=== Usages ===
v527 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a521  <|@  <|@
f <@~|@floating>@ <|@
tid v527 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: a96 
index: i8 
=== Succesors ===
=== Usages ===
v120 j523 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a96 index: i8  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j523 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: long
nodeSourcePosition: at java.util.BitSet.set(BitSet.java:449) [bci: 47]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: v160 
address: v527 
=== Succesors ===
next: v120 
=== Usages ===
j16 
=== Predecessor ===
v160 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v160 address: v527 #next: v120  <|@  <|@
f <@~|@floating>@ <|@
tid j15 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at java.util.BitSet.set(BitSet.java:449) [bci: 50]
stamp: i64
=== Inputs ===
x: j14 
y: i2 
=== Succesors ===
=== Usages ===
j16 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: j14 y: i2  <|@  <|@
f <@~|@floating>@ <|@
tid j16 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.OrNode$$Lambda$69/599890587@2745c573
nodeSourcePosition: at java.util.BitSet.set(BitSet.java:449) [bci: 51]
stamp: i64
=== Inputs ===
x: j15 
y: j523 
=== Succesors ===
=== Usages ===
v120 
=== Predecessor ===
- >@ <|@
instruction <@||@org.graalvm.compiler.nodes.calc.OrNode>@ x: j15 y: j523  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v120 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: long
nodeSourcePosition: at java.util.BitSet.set(BitSet.java:449) [bci: 52]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v160 
address: v527 
value: j16 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v22 
=== Usages ===
=== Predecessor ===
j523 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v160 address: v527 value: j16 stateAfter: - lastLocationAccess: - #next: v22  <|@  <|@
f <@*|@fixed>@ <|@
tid v22 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.BitSet.set(BitSet.java:452) [bci: 57]
stamp: void
=== Inputs ===
result: - 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v120 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: - memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v162 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.BitSet.set(BitSet.java:449) [bci: 52]
stamp: void
=== Inputs ===
=== Succesors ===
next: v238 
=== Usages ===
=== Predecessor ===
v163 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v238  <|@  <|@
f <@~|@floating>@ <|@
tid i240 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -29211
stableDimension: 0
stamp: i32 [-29211] ⇊00000000ffff8de5 ⇈00000000ffff8de5
stampKind: i32
value: int[-29211|0xffffffffffff8de5]
=== Inputs ===
=== Succesors ===
=== Usages ===
v238 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v238 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?11 
actionAndReason: i240 
speculation: a225 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v162 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?11 actionAndReason: i240 speculation: a225  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v151 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: v151  <|@  <|@
f <@~|@floating>@ <|@
tid a225 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v228 v238 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Ljava/util/BitSet;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v524 ?11 v525 v529 j306 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i2 <|@
result v1|DWORD <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v5 i8 ?11 j15 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?3 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<BitSet.set(int)>
duringCall: false
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: BitSet.java
sourceLine: 443
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 i2 - 
=== Succesors ===
=== Usages ===
v228 a267 i517 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2 -  <|@  <|@
f <@~|@floating>@ <|@
tid i4 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.BitSet.set(BitSet.java:443) [bci: 1]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v5 a267 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v5 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.BitSet.set(BitSet.java:443) [bci: 1]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2 
y: i4 
=== Succesors ===
=== Usages ===
v151 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2 y: i4  <|@  <|@
f <@*|@fixed>@ <|@
tid v151 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.BitSet.set(BitSet.java:443) [bci: 1]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v5 
=== Succesors ===
trueSuccessor: v150 
falseSuccessor: v148 
=== Usages ===
=== Predecessor ===
v0 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v5 #trueSuccessor: v150 #falseSuccessor: v148  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@375d8fa slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v1|DWORD, y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v150 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.BitSet.set(BitSet.java:443) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v228 
=== Usages ===
=== Predecessor ===
v151 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v228  <|@  <|@
f <@~|@floating>@ <|@
tid i224 <|@
result int[-22803|0xffffffffffffa6ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -22803
stableDimension: 0
stamp: i32 [-22803] ⇊00000000ffffa6ed ⇈00000000ffffa6ed
stampKind: i32
value: int[-22803|0xffffffffffffa6ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
v228 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v228 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?3 
actionAndReason: i224 
speculation: a225 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v150 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?3 actionAndReason: i224 speculation: a225  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -22803 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.BitSet.set(BitSet.java:443) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B40" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v148 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.BitSet.set(BitSet.java:443) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: i515 
=== Usages ===
=== Predecessor ===
v151 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i515  <|@  <|@
f <@~|@floating>@ <|@
tid v524 <|@
result [v0|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i515 v133 v134 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i515 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: BitSet.wordsInUse
nodeSourcePosition: at java.util.BitSet.expandTo(BitSet.java:351) [bci: 5]
at java.util.BitSet.set(BitSet.java:447) [bci: 38]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v524 
=== Succesors ===
next: v29 
=== Usages ===
v26 
=== Predecessor ===
v148 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v524 #next: v29  <|@  <|@
f <@~|@floating>@ <|@
tid i7 <|@
result int[6|0x6] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.BitSet.wordIndex(BitSet.java:112) [bci: 1]
at java.util.BitSet.set(BitSet.java:446) [bci: 32]
rawvalue: 6
stableDimension: 0
stamp: i32 [6] ⇊0000000000000006 ⇈0000000000000006
stampKind: i32
value: int[6|0x6]
=== Inputs ===
=== Succesors ===
=== Usages ===
i8 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i8 <|@
result v2|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.RightShiftNode$$Lambda$143/1909420937@4b2846e5
nodeSourcePosition: at java.util.BitSet.wordIndex(BitSet.java:112) [bci: 3]
at java.util.BitSet.set(BitSet.java:446) [bci: 32]
stamp: i32 [-33554432 - 33554431]
=== Inputs ===
x: i2 
y: i7 
=== Succesors ===
=== Usages ===
i24 ?11 v113 v527 
=== Predecessor ===
- >@ <|@
instruction <@>>|@org.graalvm.compiler.nodes.calc.RightShiftNode>@ x: i2 y: i7  <|@  <|@
f <@~|@floating>@ <|@
tid i23 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.BitSet.expandTo(BitSet.java:350) [bci: 1]
at java.util.BitSet.set(BitSet.java:447) [bci: 38]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i24 i60 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i24 <|@
result v3|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.util.BitSet.expandTo(BitSet.java:350) [bci: 2]
at java.util.BitSet.set(BitSet.java:447) [bci: 38]
stamp: i32 [-33554431 - 33554432]
=== Inputs ===
x: i8 
y: i23 
=== Succesors ===
=== Usages ===
v26 v67 v134 v133 v44 i138 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i8 y: i23  <|@  <|@
f <@~|@floating>@ <|@
tid v26 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.BitSet.expandTo(BitSet.java:351) [bci: 9]
at java.util.BitSet.set(BitSet.java:447) [bci: 38]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i515 
y: i24 
=== Succesors ===
=== Usages ===
v29 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i515 y: i24  <|@  <|@
f <@~|@floating>@ <|@
tid j14 <|@
result long[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.BitSet.set(BitSet.java:449) [bci: 48]
rawvalue: 1
stableDimension: 0
stamp: i64 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
j15 v294 v327 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v525 <|@
result [v0|QWORD[.] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a521 a516 v129 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@*|@fixed>@ <|@
tid v29 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.BitSet.expandTo(BitSet.java:351) [bci: 9]
at java.util.BitSet.set(BitSet.java:447) [bci: 38]
stamp: void
trueSuccessorProbability: 0.1293034473961897
=== Inputs ===
condition: v26 
=== Succesors ===
trueSuccessor: v27 
falseSuccessor: v28 
=== Usages ===
=== Predecessor ===
i515 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v26 #trueSuccessor: v27 #falseSuccessor: v28  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = SAR v1|DWORD y: 6 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = INC v2|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v3|DWORD, y: [v0|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.1293034473961897 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B39" 
    xhandlers
    flags 
    probability 4593826667950625028
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v27 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.BitSet.expandTo(BitSet.java:352) [bci: 12]
at java.util.BitSet.set(BitSet.java:447) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: a516 
=== Usages ===
=== Predecessor ===
v29 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a516  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a516 <|@
result v4|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: BitSet.words
nodeSourcePosition: at java.util.BitSet.ensureCapacity(BitSet.java:334) [bci: 1]
at java.util.BitSet.expandTo(BitSet.java:352) [bci: 14]
at java.util.BitSet.set(BitSet.java:447) [bci: 38]
nullCheck: false
stamp: n# [J
=== Inputs ===
stateBefore: - 
guard: - 
address: v525 
=== Succesors ===
next: i517 
=== Usages ===
v530 v528 
=== Predecessor ===
v27 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v525 #next: i517  <|@  <|@
f <@~|@floating>@ <|@
tid v528 <|@
result [v4|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a516 
=== Succesors ===
=== Usages ===
i517 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a516  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i517 <|@
result v5|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.BitSet.ensureCapacity(BitSet.java:334) [bci: 4]
at java.util.BitSet.expandTo(BitSet.java:352) [bci: 14]
at java.util.BitSet.set(BitSet.java:447) [bci: 38]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?3 
guard: - 
address: v528 
=== Succesors ===
next: v47 
=== Usages ===
v44 i60 i205 v182 
=== Predecessor ===
a516 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?3 guard: - address: v528 #next: v47  <|@  <|@
f <@~|@floating>@ <|@
tid v44 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.BitSet.ensureCapacity(BitSet.java:334) [bci: 6]
at java.util.BitSet.expandTo(BitSet.java:352) [bci: 14]
at java.util.BitSet.set(BitSet.java:447) [bci: 38]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i517 
y: i24 
=== Succesors ===
=== Usages ===
v47 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i517 y: i24  <|@  <|@
f <@*|@fixed>@ <|@
tid v47 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.BitSet.ensureCapacity(BitSet.java:334) [bci: 6]
at java.util.BitSet.expandTo(BitSet.java:352) [bci: 14]
at java.util.BitSet.set(BitSet.java:447) [bci: 38]
stamp: void
trueSuccessorProbability: 0.0010368489113086188
=== Inputs ===
condition: v44 
=== Succesors ===
trueSuccessor: v45 
falseSuccessor: v46 
=== Usages ===
=== Predecessor ===
i517 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v44 #trueSuccessor: v45 #falseSuccessor: v46  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v4|DWORD[.] = MOV [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.BitSet.set(BitSet.java:443) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction v5|DWORD = MOV [v4|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v3|DWORD, y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0010368489113086188 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B8" 
    xhandlers
    flags 
    probability 4549078265301473639
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v45 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.BitSet.ensureCapacity(BitSet.java:336) [bci: 9]
at java.util.BitSet.expandTo(BitSet.java:352) [bci: 14]
at java.util.BitSet.set(BitSet.java:447) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: j246 
=== Usages ===
=== Predecessor ===
v47 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j246  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j246 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:772) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:319) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$g, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:66) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:137) [bci: 58]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
at java.util.BitSet.expandTo(BitSet.java:352) [bci: 14]
at java.util.BitSet.set(BitSet.java:447) [bci: 38]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j290 
=== Usages ===
v532 v533 
=== Predecessor ===
v45 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j290  <|@  <|@
f <@~|@floating>@ <|@
tid v532 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j246 
index: - 
=== Succesors ===
=== Usages ===
j290 v292 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j246 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j290 <|@
result v6|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:245) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:320) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$g, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:66) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:137) [bci: 58]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
at java.util.BitSet.expandTo(BitSet.java:352) [bci: 14]
at java.util.BitSet.set(BitSet.java:447) [bci: 38]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v532 
=== Succesors ===
next: j291 
=== Usages ===
j250 v534 v535 a266 v540 v536 v537 v538 v539 
=== Predecessor ===
j246 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v532 #next: j291  <|@  <|@
f <@~|@floating>@ <|@
tid v533 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j246 
index: - 
=== Succesors ===
=== Usages ===
j291 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j246 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j291 <|@
result v7|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:249) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:321) [bci: 25]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$g, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:66) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:137) [bci: 58]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
at java.util.BitSet.expandTo(BitSet.java:352) [bci: 14]
at java.util.BitSet.set(BitSet.java:447) [bci: 38]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v533 
=== Succesors ===
next: v255 
=== Usages ===
v256 
=== Predecessor ===
j290 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v533 #next: v255  <|@  <|@
f <@~|@floating>@ <|@
tid i60 <|@
result v8|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at java.util.BitSet.ensureCapacity(BitSet.java:336) [bci: 15]
at java.util.BitSet.expandTo(BitSet.java:352) [bci: 14]
at java.util.BitSet.set(BitSet.java:447) [bci: 38]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i517 
y: i23 
=== Succesors ===
=== Usages ===
i138 v67 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i517 y: i23  <|@  <|@
f <@~|@floating>@ <|@
tid v67 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 2]
at java.util.BitSet.ensureCapacity(BitSet.java:336) [bci: 17]
at java.util.BitSet.expandTo(BitSet.java:352) [bci: 14]
at java.util.BitSet.set(BitSet.java:447) [bci: 38]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i60 
y: i24 
=== Succesors ===
=== Usages ===
i138 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i60 y: i24  <|@  <|@
f <@~|@floating>@ <|@
tid i138 <|@
result v9|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-2147483648 - 2147483646]
=== Inputs ===
condition: v67 
trueValue: i24 
falseValue: i60 
=== Succesors ===
=== Usages ===
j316 v252 v182 i205 a267 v293 i243 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v67 trueValue: i24 falseValue: i60  <|@  <|@
f <@~|@floating>@ <|@
tid i251 <|@
result int[16777215|0xffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 48]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$g, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:66) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:137) [bci: 58]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
at java.util.BitSet.expandTo(BitSet.java:352) [bci: 14]
at java.util.BitSet.set(BitSet.java:447) [bci: 38]
rawvalue: 16777215
stableDimension: 0
stamp: i32 [16777215] ⇊0000000000ffffff ⇈0000000000ffffff
stampKind: i32
value: int[16777215|0xffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v252 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v252 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.core.common.calc.UnsignedMath.belowThan(int, int) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 50]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$g, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:66) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:137) [bci: 58]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
at java.util.BitSet.expandTo(BitSet.java:352) [bci: 14]
at java.util.BitSet.set(BitSet.java:447) [bci: 38]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i138 
y: i251 
=== Succesors ===
=== Usages ===
v255 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i138 y: i251  <|@  <|@
f <@*|@fixed>@ <|@
tid v255 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 64]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$g, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:66) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:137) [bci: 58]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
at java.util.BitSet.expandTo(BitSet.java:352) [bci: 14]
at java.util.BitSet.set(BitSet.java:447) [bci: 38]
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v252 
=== Succesors ===
trueSuccessor: v254 
falseSuccessor: v253 
=== Usages ===
=== Predecessor ===
j291 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v252 #trueSuccessor: v254 #falseSuccessor: v253  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = SHL v5|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v3|DWORD, y: v8|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = CMOVE (falseValue: v8|DWORD, ~trueValue: v3|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction CMP v9|DWORD y: 16777215 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B4 -> B5 falseDestination: B4 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4548531658701817683
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v254 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 67]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$g, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:66) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:137) [bci: 58]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
at java.util.BitSet.expandTo(BitSet.java:352) [bci: 14]
at java.util.BitSet.set(BitSet.java:447) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: v262 
=== Usages ===
=== Predecessor ===
v255 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v262  <|@  <|@
f <@~|@floating>@ <|@
tid i106 <|@
result int[3|0x3] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.BitSet.set(BitSet.java:449) [bci: 47]
rawvalue: 3
stableDimension: 0
stamp: i32 [3] ⇊0000000000000003 ⇈0000000000000003
stampKind: i32
value: int[3|0x3]
=== Inputs ===
=== Succesors ===
=== Usages ===
i243 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i243 <|@
result v10|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 8]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$g, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:66) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:137) [bci: 58]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
at java.util.BitSet.expandTo(BitSet.java:352) [bci: 14]
at java.util.BitSet.set(BitSet.java:447) [bci: 38]
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i138 
y: i106 
=== Succesors ===
=== Usages ===
i275 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i138 y: i106  <|@  <|@
f <@~|@floating>@ <|@
tid i274 <|@
result int[23|0x17] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$g, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:66) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:137) [bci: 58]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
at java.util.BitSet.expandTo(BitSet.java:352) [bci: 14]
at java.util.BitSet.set(BitSet.java:447) [bci: 38]
rawvalue: 23
stableDimension: 0
stamp: i32 [23] ⇊0000000000000017 ⇈0000000000000017
stampKind: i32
value: int[23|0x17]
=== Inputs ===
=== Succesors ===
=== Usages ===
i275 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i275 <|@
result v11|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$g, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:66) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:137) [bci: 58]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
at java.util.BitSet.expandTo(BitSet.java:352) [bci: 14]
at java.util.BitSet.set(BitSet.java:447) [bci: 38]
stamp: i32 [-2147483641 - 2147483647] ⇊0000000000000007
=== Inputs ===
x: i243 
y: i274 
=== Succesors ===
=== Usages ===
i245 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i243 y: i274  <|@  <|@
f <@~|@floating>@ <|@
tid i244 <|@
result int[-8|0xfffffffffffffff8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:603) [bci: 23]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$g, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:66) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:137) [bci: 58]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
at java.util.BitSet.expandTo(BitSet.java:352) [bci: 14]
at java.util.BitSet.set(BitSet.java:447) [bci: 38]
rawvalue: -8
stableDimension: 0
stamp: i32 [-8] ⇊00000000fffffff8 ⇈00000000fffffff8
stampKind: i32
value: int[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
i245 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i245 <|@
result v12|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:604) [bci: 30]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$g, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:66) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:137) [bci: 58]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
at java.util.BitSet.expandTo(BitSet.java:352) [bci: 14]
at java.util.BitSet.set(BitSet.java:447) [bci: 38]
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i275 
y: i244 
=== Succesors ===
=== Usages ===
j249 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i275 y: i244  <|@  <|@
f <@~|@floating>@ <|@
tid j249 <|@
result v13|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$g, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:66) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:137) [bci: 58]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
at java.util.BitSet.expandTo(BitSet.java:352) [bci: 14]
at java.util.BitSet.set(BitSet.java:447) [bci: 38]
resultBits: 64
stamp: i64 [-2147483648 - 2147483640] ⇈fffffffffffffff8
=== Inputs ===
value: i245 
=== Succesors ===
=== Usages ===
j250 v536 v537 v538 v539 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i245  <|@  <|@
f <@~|@floating>@ <|@
tid j250 <|@
result v14|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$g, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:66) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:137) [bci: 58]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
at java.util.BitSet.expandTo(BitSet.java:352) [bci: 14]
at java.util.BitSet.set(BitSet.java:447) [bci: 38]
stamp: i64
=== Inputs ===
x: j249 
y: j290 
=== Succesors ===
=== Usages ===
v256 v292 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j249 y: j290  <|@  <|@
f <@~|@floating>@ <|@
tid v256 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 83]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$g, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:66) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:137) [bci: 58]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
at java.util.BitSet.expandTo(BitSet.java:352) [bci: 14]
at java.util.BitSet.set(BitSet.java:447) [bci: 38]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j291 
y: j250 
=== Succesors ===
=== Usages ===
v262 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j291 y: j250  <|@  <|@
f <@*|@fixed>@ <|@
tid v262 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 89]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$g, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:66) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:137) [bci: 58]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
at java.util.BitSet.expandTo(BitSet.java:352) [bci: 14]
at java.util.BitSet.set(BitSet.java:447) [bci: 38]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v256 
=== Succesors ===
trueSuccessor: v261 
falseSuccessor: v260 
=== Usages ===
=== Predecessor ===
v254 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v256 #trueSuccessor: v261 #falseSuccessor: v260  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = SHL v9|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = LEA [v10|DWORD + 23] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = AND v11|DWORD y: -8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = MOVSXD v12|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = ADD (x: v13|QWORD, y: v6|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v14|QWORD, y: v7|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4518304896585145935
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v261 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$g, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:66) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:137) [bci: 58]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
at java.util.BitSet.expandTo(BitSet.java:352) [bci: 14]
at java.util.BitSet.set(BitSet.java:447) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: v259 
=== Usages ===
=== Predecessor ===
v262 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v259  <|@  <|@
f <@*|@fixed>@ <|@
tid v259 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$g, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:66) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:137) [bci: 58]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
at java.util.BitSet.expandTo(BitSet.java:352) [bci: 14]
at java.util.BitSet.set(BitSet.java:447) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v258 
=== Predecessor ===
v261 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B6 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B10" 
    xhandlers
    flags 
    probability 4548442626358694106
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v260 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 92]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$g, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:66) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:137) [bci: 58]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
at java.util.BitSet.expandTo(BitSet.java:352) [bci: 14]
at java.util.BitSet.set(BitSet.java:447) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: v292 
=== Usages ===
=== Predecessor ===
v262 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v292  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v292 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:257) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 96]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$g, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:66) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:137) [bci: 58]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
at java.util.BitSet.expandTo(BitSet.java:352) [bci: 14]
at java.util.BitSet.set(BitSet.java:447) [bci: 38]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v532 
value: j250 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v279 
=== Usages ===
=== Predecessor ===
v260 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v532 value: j250 stateAfter: - lastLocationAccess: - #next: v279  <|@  <|@
f <@~|@floating>@ <|@
tid v536 <|@
result [v13|QWORD + v6|QWORD * 1 + 192] <|@
d <@d|@=== Debug Properties ===
displacement: 192
scale: Times1
stamp: void*
=== Inputs ===
base: j249 
index: j290 
=== Succesors ===
=== Usages ===
v279 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j249 index: j290  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v279 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$g, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:66) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:137) [bci: 58]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
at java.util.BitSet.expandTo(BitSet.java:352) [bci: 14]
at java.util.BitSet.set(BitSet.java:447) [bci: 38]
stamp: void
=== Inputs ===
address: v536 
=== Succesors ===
next: v282 
=== Usages ===
=== Predecessor ===
v292 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v536 #next: v282  <|@  <|@
f <@~|@floating>@ <|@
tid v537 <|@
result [v13|QWORD + v6|QWORD * 1 + 256] <|@
d <@d|@=== Debug Properties ===
displacement: 256
scale: Times1
stamp: void*
=== Inputs ===
base: j249 
index: j290 
=== Succesors ===
=== Usages ===
v282 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j249 index: j290  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v282 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$g, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:66) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:137) [bci: 58]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
at java.util.BitSet.expandTo(BitSet.java:352) [bci: 14]
at java.util.BitSet.set(BitSet.java:447) [bci: 38]
stamp: void
=== Inputs ===
address: v537 
=== Succesors ===
next: v285 
=== Usages ===
=== Predecessor ===
v279 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v537 #next: v285  <|@  <|@
f <@~|@floating>@ <|@
tid v538 <|@
result [v13|QWORD + v6|QWORD * 1 + 320] <|@
d <@d|@=== Debug Properties ===
displacement: 320
scale: Times1
stamp: void*
=== Inputs ===
base: j249 
index: j290 
=== Succesors ===
=== Usages ===
v285 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j249 index: j290  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v285 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$g, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:66) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:137) [bci: 58]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
at java.util.BitSet.expandTo(BitSet.java:352) [bci: 14]
at java.util.BitSet.set(BitSet.java:447) [bci: 38]
stamp: void
=== Inputs ===
address: v538 
=== Succesors ===
next: v288 
=== Usages ===
=== Predecessor ===
v282 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v538 #next: v288  <|@  <|@
f <@~|@floating>@ <|@
tid v539 <|@
result [v13|QWORD + v6|QWORD * 1 + 384] <|@
d <@d|@=== Debug Properties ===
displacement: 384
scale: Times1
stamp: void*
=== Inputs ===
base: j249 
index: j290 
=== Succesors ===
=== Usages ===
v288 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j249 index: j290  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v288 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$g, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:66) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:137) [bci: 58]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
at java.util.BitSet.expandTo(BitSet.java:352) [bci: 14]
at java.util.BitSet.set(BitSet.java:447) [bci: 38]
stamp: void
=== Inputs ===
address: v539 
=== Succesors ===
next: v293 
=== Usages ===
=== Predecessor ===
v285 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v539 #next: v293  <|@  <|@
f <@~|@floating>@ <|@
tid v534 <|@
result [v6|QWORD + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j290 
index: - 
=== Succesors ===
=== Usages ===
v293 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j290 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v293 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:549) [bci: 12]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$g, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:66) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:137) [bci: 58]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
at java.util.BitSet.expandTo(BitSet.java:352) [bci: 14]
at java.util.BitSet.set(BitSet.java:447) [bci: 38]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v534 
value: i138 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v294 
=== Usages ===
=== Predecessor ===
v288 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v534 value: i138 stateAfter: - lastLocationAccess: - #next: v294  <|@  <|@
f <@~|@floating>@ <|@
tid v535 <|@
result [v6|QWORD] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j290 
index: - 
=== Succesors ===
=== Usages ===
v294 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j290 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v294 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:469) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$g, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:66) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:137) [bci: 58]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
at java.util.BitSet.expandTo(BitSet.java:352) [bci: 14]
at java.util.BitSet.set(BitSet.java:447) [bci: 38]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v535 
value: j14 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v298 
=== Usages ===
=== Predecessor ===
v293 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v535 value: j14 stateAfter: - lastLocationAccess: - #next: v298  <|@  <|@
f <@~|@floating>@ <|@
tid v540 <|@
result [v6|QWORD + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j290 
index: - 
=== Succesors ===
=== Usages ===
v298 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j290 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v315 <|@
result meta{HotSpotType<[J, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$g, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:66) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:137) [bci: 58]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
at java.util.BitSet.expandTo(BitSet.java:352) [bci: 14]
at java.util.BitSet.set(BitSet.java:447) [bci: 38]
rawvalue: meta{HotSpotType<[J, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<[J, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v298 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v298 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$g, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:66) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:137) [bci: 58]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
at java.util.BitSet.expandTo(BitSet.java:352) [bci: 14]
at java.util.BitSet.set(BitSet.java:447) [bci: 38]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v540 
value: v315 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v265 
=== Usages ===
=== Predecessor ===
v294 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v540 value: v315 stateAfter: - lastLocationAccess: - #next: v265  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v265 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.MembarNode.memoryBarrier(int, LocationIdentity) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:560) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$g, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:66) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:137) [bci: 58]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
at java.util.BitSet.expandTo(BitSet.java:352) [bci: 14]
at java.util.BitSet.set(BitSet.java:447) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: a266 
=== Usages ===
=== Predecessor ===
v298 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a266  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a266 <|@
result v15|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:561) [bci: 71]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$g, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:66) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:137) [bci: 58]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
at java.util.BitSet.expandTo(BitSet.java:352) [bci: 14]
at java.util.BitSet.set(BitSet.java:447) [bci: 38]
stamp: a! -
trackedPointer: true
=== Inputs ===
input: j290 
=== Succesors ===
next: v268 
=== Usages ===
a271 
=== Predecessor ===
v265 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j290 #next: v268  <|@  <|@
f <@*|@fixed>@ <|@
tid v268 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$g, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:66) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:137) [bci: 58]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
at java.util.BitSet.expandTo(BitSet.java:352) [bci: 14]
at java.util.BitSet.set(BitSet.java:447) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v269 
=== Predecessor ===
a266 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v14|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v13|QWORD + v6|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v13|QWORD + v6|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v13|QWORD + v6|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v13|QWORD + v6|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v6|QWORD + 12], y: v9|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v6|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v6|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[J, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v15|QWORD[.] = MOVE v6|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v15|QWORD[.]] destination: B7 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B9" 
    xhandlers
    flags 
    probability 4534031611562777558
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v253 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$g, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:66) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:137) [bci: 58]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
at java.util.BitSet.expandTo(BitSet.java:352) [bci: 14]
at java.util.BitSet.set(BitSet.java:447) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: v257 
=== Usages ===
=== Predecessor ===
v255 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v257  <|@  <|@
f <@*|@fixed>@ <|@
tid v257 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$g, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:66) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:137) [bci: 58]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
at java.util.BitSet.expandTo(BitSet.java:352) [bci: 14]
at java.util.BitSet.set(BitSet.java:447) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v258 
=== Predecessor ===
v253 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4534743870307766176
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v258 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$g, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:66) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:137) [bci: 58]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
at java.util.BitSet.expandTo(BitSet.java:352) [bci: 14]
at java.util.BitSet.set(BitSet.java:447) [bci: 38]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v257 v259 
=== Succesors ===
next: a267 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v257 v259 #next: a267  <|@  <|@
f <@~|@floating>@ <|@
tid v242 <|@
result v16|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$g, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:66) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:137) [bci: 58]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
at java.util.BitSet.expandTo(BitSet.java:352) [bci: 14]
at java.util.BitSet.set(BitSet.java:447) [bci: 38]
rawvalue: meta{HotSpotType<[J, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[J, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a267 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a267 <|@
result v17|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.newArray(ForeignCallDescriptor, KlassPointer, int, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 155]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$g, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:66) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:137) [bci: 58]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
at java.util.BitSet.expandTo(BitSet.java:352) [bci: 14]
at java.util.BitSet.set(BitSet.java:447) [bci: 38]
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?3 
arguments: v242 i138 i4 
=== Succesors ===
next: v270 
=== Usages ===
a271 
=== Predecessor ===
v258 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?3 arguments: v242 i138 i4 #next: v270  <|@  <|@
f <@*|@fixed>@ <|@
tid v270 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$g, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:66) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:137) [bci: 58]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
at java.util.BitSet.expandTo(BitSet.java:352) [bci: 14]
at java.util.BitSet.set(BitSet.java:447) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v269 
=== Predecessor ===
a267 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v16|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[J, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v16|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v9|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.BitSet.set(BitSet.java:443) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v17|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v17|QWORD[.]] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B7" "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4549078265301473639
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a271 <|@
result v18|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$g, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:66) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:137) [bci: 58]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
at java.util.BitSet.expandTo(BitSet.java:352) [bci: 14]
at java.util.BitSet.set(BitSet.java:447) [bci: 38]
stamp: a! -
valueDescription: a -
=== Inputs ===
merge: v269 
values: a266 a267 
=== Succesors ===
=== Usages ===
v542 a210 v531 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v269 values: a266 a267  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v269 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$g, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:66) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:137) [bci: 58]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
at java.util.BitSet.expandTo(BitSet.java:352) [bci: 14]
at java.util.BitSet.set(BitSet.java:447) [bci: 38]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v268 v270 
=== Succesors ===
next: v420 
=== Usages ===
a271 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v268 v270 #next: v420  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v420 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v330 
=== Usages ===
j421 j423 
=== Predecessor ===
v269 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v330  <|@  <|@
f <@~|@floating>@ <|@
tid v182 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Math.min(Math.java:1336) [bci: 2]
at com.oracle.graal.enterprise.T.c.b(stripped:192) [bci: 4]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:130) [bci: 9]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
at java.util.BitSet.expandTo(BitSet.java:352) [bci: 14]
at java.util.BitSet.set(BitSet.java:447) [bci: 38]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i517 
y: i138 
=== Succesors ===
=== Usages ===
i205 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i517 y: i138  <|@  <|@
f <@~|@floating>@ <|@
tid i205 <|@
result v19|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
condition: v182 
trueValue: i517 
falseValue: i138 
=== Succesors ===
=== Usages ===
j317 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v182 trueValue: i517 falseValue: i138  <|@  <|@
f <@~|@floating>@ <|@
tid j317 <|@
result v20|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i205 
=== Succesors ===
=== Usages ===
j461 v542 j321 v327 v417 j451 j457 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i205  <|@  <|@
f <@~|@floating>@ <|@
tid v327 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j317 
y: j14 
=== Succesors ===
=== Usages ===
v330 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j317 y: j14  <|@  <|@
f <@~|@floating>@ <|@
tid j460 <|@
result long[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -1
stableDimension: 0
stamp: i64 [-1] ⇊ffffffffffffffff
stampKind: i64
value: long[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
j461 j494 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j439 <|@
result long[2|0x2] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 2
stableDimension: 0
stamp: i64 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i64
value: long[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
j440 j479 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j456 <|@
result long[-2|0xfffffffffffffffe] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -2
stableDimension: 0
stamp: i64 [-2] ⇊fffffffffffffffe ⇈fffffffffffffffe
stampKind: i64
value: long[-2|0xfffffffffffffffe]
=== Inputs ===
=== Succesors ===
=== Usages ===
j457 j491 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j448 <|@
result long[4|0x4] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 4
stableDimension: 0
stamp: i64 [4] ⇊0000000000000004 ⇈0000000000000004
stampKind: i64
value: long[4|0x4]
=== Inputs ===
=== Succesors ===
=== Usages ===
j449 j485 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j450 <|@
result long[-4|0xfffffffffffffffc] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -4
stableDimension: 0
stamp: i64 [-4] ⇊fffffffffffffffc ⇈fffffffffffffffc
stampKind: i64
value: long[-4|0xfffffffffffffffc]
=== Inputs ===
=== Succesors ===
=== Usages ===
j451 j486 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j190 <|@
result long[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:134) [bci: 31]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
at java.util.BitSet.expandTo(BitSet.java:352) [bci: 14]
at java.util.BitSet.set(BitSet.java:447) [bci: 38]
rawvalue: 0
stableDimension: 0
stamp: i64 [0] ⇈0000000000000000
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j474 v509 v487 j432 j441 v452 j480 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v330 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v327 
=== Succesors ===
trueSuccessor: v328 
falseSuccessor: v329 
=== Usages ===
=== Predecessor ===
v420 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v327 #trueSuccessor: v328 #falseSuccessor: v329  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v18|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v9|DWORD, y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v19|DWORD = CMOVE (falseValue: v9|DWORD, ~trueValue: v5|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction v20|QWORD = MOVSXD v19|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v20|QWORD y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B10 -> B11 falseDestination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B23" 
    xhandlers
    flags 
    probability 4544574665674103143
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v328 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v347 
=== Usages ===
=== Predecessor ===
v330 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v347  <|@  <|@
f <@*|@fixed>@ <|@
tid v347 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v348 
=== Predecessor ===
v328 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B11 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4544574665674103143
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v329 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v333 
=== Usages ===
=== Predecessor ===
v330 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v333  <|@  <|@
f <@~|@floating>@ <|@
tid v531 <|@
result [v18|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a271 
index: - 
=== Succesors ===
=== Usages ===
j423 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a271 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j423 <|@
result v21|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v420 
address: v531 
=== Succesors ===
=== Usages ===
v543 v545 v547 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v420 address: v531  <|@  <|@
f <@~|@floating>@ <|@
tid v530 <|@
result [v4|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a516 
=== Succesors ===
=== Usages ===
j421 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a516  <|@  <|@
f <@~|@floating>@ <|@
tid j421 <|@
result v22|QWORD[*] <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v420 
address: v530 
=== Succesors ===
=== Usages ===
v544 v546 v548 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v420 address: v530  <|@  <|@
f <@~|@floating>@ <|@
tid j451 <|@
result v23|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483652 - 2147483643]
=== Inputs ===
x: j317 
y: j450 
=== Succesors ===
=== Usages ===
v452 v454 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j317 y: j450  <|@  <|@
f <@~|@floating>@ <|@
tid v452 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j451 
y: j190 
=== Succesors ===
=== Usages ===
v333 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j451 y: j190  <|@  <|@
f <@*|@fixed>@ <|@
tid v333 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v452 
=== Succesors ===
trueSuccessor: v331 
falseSuccessor: v332 
=== Usages ===
=== Predecessor ===
v329 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v452 #trueSuccessor: v331 #falseSuccessor: v332  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v21|QWORD[.] = LEA [v18|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v22|QWORD[*] = LEA [v4|DWORD[.] * 8 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v23|QWORD = LEA [v20|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v23|QWORD, y: v23|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B12 -> B13 falseDestination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B17" 
    xhandlers
    flags 
    probability 4542544186689054234
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v331 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v343 
=== Usages ===
=== Predecessor ===
v333 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v343  <|@  <|@
f <@*|@fixed>@ <|@
tid v343 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v344 
=== Predecessor ===
v331 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B13 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4535567466419362151
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v332 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v334 
=== Usages ===
=== Predecessor ===
v333 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v334  <|@  <|@
f <@*|@fixed>@ <|@
tid v334 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v335 
=== Predecessor ===
v332 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B38" 
    successors "B16" "B38" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4544574665674103143
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j441 <|@
result v24|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v335 
values: j190 j449 
=== Succesors ===
=== Usages ===
v548 j449 v547 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v335 values: j190 j449  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v335 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v334 
=== Succesors ===
next: v518 
=== Usages ===
v518 v339 v340 j441 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v334 #next: v518  <|@  <|@
f <@~|@floating>@ <|@
tid v548 <|@
result [v22|QWORD[*] + v24|QWORD * 8] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times8
stamp: void*
=== Inputs ===
base: j421 
index: j441 
=== Succesors ===
=== Usages ===
v518 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j421 index: j441  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v518 <|@
result v25|V256_QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: long
nullCheck: false
stamp: <i64,i64,i64,i64>
=== Inputs ===
stateBefore: - 
guard: v335 
address: v548 
=== Succesors ===
next: v506 
=== Usages ===
v506 
=== Predecessor ===
v335 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v335 address: v548 #next: v506  <|@  <|@
f <@~|@floating>@ <|@
tid v547 <|@
result [v21|QWORD[.] + v24|QWORD * 8] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times8
stamp: void*
=== Inputs ===
base: j423 
index: j441 
=== Succesors ===
=== Usages ===
v506 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j423 index: j441  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v506 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v547 
value: v518 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v342 
=== Usages ===
=== Predecessor ===
v518 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v547 value: v518 stateAfter: - lastLocationAccess: - #next: v342  <|@  <|@
f <@~|@floating>@ <|@
tid j449 <|@
result v26|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j441 
y: j448 
=== Succesors ===
=== Usages ===
j432 j441 v454 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j441 y: j448  <|@  <|@
f <@~|@floating>@ <|@
tid v454 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j451 
y: j449 
=== Succesors ===
=== Usages ===
v342 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j451 y: j449  <|@  <|@
f <@*|@fixed>@ <|@
tid v342 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v454 
=== Succesors ===
trueSuccessor: v339 
falseSuccessor: v341 
=== Usages ===
=== Predecessor ===
v506 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v454 #trueSuccessor: v339 #falseSuccessor: v341  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v24|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v25|V256_QWORD = H [v22|QWORD[*] + v24|QWORD * 8] nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v21|QWORD[.] + v24|QWORD * 8], input: v25|V256_QWORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = LEA [v24|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v26|QWORD, y: v23|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" 
    xhandlers
    flags 
    probability 4535567466419362151
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v339 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v335 
=== Succesors ===
next: v345 
=== Usages ===
=== Predecessor ===
v342 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v335 #next: v345  <|@  <|@
f <@*|@fixed>@ <|@
tid v345 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v344 
=== Predecessor ===
v339 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v26|QWORD] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B13" "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4544574665674103143
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j432 <|@
result v27|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v344 
values: j190 j449 
=== Succesors ===
=== Usages ===
v546 j440 j424 v458 v545 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v344 values: j190 j449  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v344 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v343 v345 
=== Succesors ===
next: v360 
=== Usages ===
j432 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v343 v345 #next: v360  <|@  <|@
f <@~|@floating>@ <|@
tid j457 <|@
result v28|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483650 - 2147483645]
=== Inputs ===
x: j317 
y: j456 
=== Succesors ===
=== Usages ===
v458 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j317 y: j456  <|@  <|@
f <@~|@floating>@ <|@
tid v458 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j457 
y: j432 
=== Succesors ===
=== Usages ===
v360 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j457 y: j432  <|@  <|@
f <@*|@fixed>@ <|@
tid v360 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v458 
=== Succesors ===
trueSuccessor: v359 
falseSuccessor: v358 
=== Usages ===
=== Predecessor ===
v344 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v458 #trueSuccessor: v359 #falseSuccessor: v358  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v27|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v28|QWORD = LEA [v20|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v27|QWORD, y: v28|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B17 -> B18 falseDestination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" 
    xhandlers
    flags 
    probability 4535567466419362151
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v359 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v363 
=== Usages ===
=== Predecessor ===
v360 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v363  <|@  <|@
f <@*|@fixed>@ <|@
tid v363 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v355 
=== Predecessor ===
v359 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v27|QWORD] destination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" 
    xhandlers
    flags 
    probability 4542544186689054234
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v358 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v519 
=== Usages ===
v519 
=== Predecessor ===
v360 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v519  <|@  <|@
f <@~|@floating>@ <|@
tid v546 <|@
result [v22|QWORD[*] + v27|QWORD * 8] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times8
stamp: void*
=== Inputs ===
base: j421 
index: j432 
=== Succesors ===
=== Usages ===
v519 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j421 index: j432  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v519 <|@
result v29|V128_QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: long
nullCheck: false
stamp: <i64,i64>
=== Inputs ===
stateBefore: - 
guard: v358 
address: v546 
=== Succesors ===
next: v504 
=== Usages ===
v504 
=== Predecessor ===
v358 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v358 address: v546 #next: v504  <|@  <|@
f <@~|@floating>@ <|@
tid v545 <|@
result [v21|QWORD[.] + v27|QWORD * 8] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times8
stamp: void*
=== Inputs ===
base: j423 
index: j432 
=== Succesors ===
=== Usages ===
v504 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j423 index: j432  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v504 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v545 
value: v519 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v354 
=== Usages ===
=== Predecessor ===
v519 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v545 value: v519 stateAfter: - lastLocationAccess: - #next: v354  <|@  <|@
f <@~|@floating>@ <|@
tid j440 <|@
result v30|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j432 
y: j439 
=== Succesors ===
=== Usages ===
j424 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j432 y: j439  <|@  <|@
f <@*|@fixed>@ <|@
tid v354 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v355 
=== Predecessor ===
v504 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v29|V128_QWORD = H [v22|QWORD[*] + v27|QWORD * 8] nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v21|QWORD[.] + v27|QWORD * 8], input: v29|V128_QWORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v30|QWORD = LEA [v27|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v30|QWORD] destination: B19 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" "B18" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4544574665674103143
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j424 <|@
result v31|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v355 
values: j440 j432 
=== Succesors ===
=== Usages ===
v544 v462 v543 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v355 values: j440 j432  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v355 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v354 v363 
=== Succesors ===
next: v366 
=== Usages ===
j424 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v354 v363 #next: v366  <|@  <|@
f <@~|@floating>@ <|@
tid j461 <|@
result v32|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483649 - 2147483646]
=== Inputs ===
x: j317 
y: j460 
=== Succesors ===
=== Usages ===
v462 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j317 y: j460  <|@  <|@
f <@~|@floating>@ <|@
tid v462 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j461 
y: j424 
=== Succesors ===
=== Usages ===
v366 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j461 y: j424  <|@  <|@
f <@*|@fixed>@ <|@
tid v366 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v462 
=== Succesors ===
trueSuccessor: v365 
falseSuccessor: v364 
=== Usages ===
=== Predecessor ===
v355 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v462 #trueSuccessor: v365 #falseSuccessor: v364  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v31|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v32|QWORD = DEC v20|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v31|QWORD, y: v32|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B20 -> B21 falseDestination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4535567466419362151
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v365 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v369 
=== Usages ===
=== Predecessor ===
v366 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v369  <|@  <|@
f <@*|@fixed>@ <|@
tid v369 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v348 
=== Predecessor ===
v365 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4542544186689054234
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v364 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: j520 
=== Usages ===
j520 
=== Predecessor ===
v366 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j520  <|@  <|@
f <@~|@floating>@ <|@
tid v544 <|@
result [v22|QWORD[*] + v31|QWORD * 8] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times8
stamp: void*
=== Inputs ===
base: j421 
index: j424 
=== Succesors ===
=== Usages ===
j520 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j421 index: j424  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j520 <|@
result v33|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: long
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: v364 
address: v544 
=== Succesors ===
next: v502 
=== Usages ===
v502 
=== Predecessor ===
v364 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v364 address: v544 #next: v502  <|@  <|@
f <@~|@floating>@ <|@
tid v543 <|@
result [v21|QWORD[.] + v31|QWORD * 8] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times8
stamp: void*
=== Inputs ===
base: j423 
index: j424 
=== Succesors ===
=== Usages ===
v502 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j423 index: j424  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v502 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v543 
value: j520 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v357 
=== Usages ===
=== Predecessor ===
j520 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v543 value: j520 stateAfter: - lastLocationAccess: - #next: v357  <|@  <|@
f <@*|@fixed>@ <|@
tid v357 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v348 
=== Predecessor ===
v502 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v33|QWORD = MOV [v22|QWORD[*] + v31|QWORD * 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v21|QWORD[.] + v31|QWORD * 8], y: v33|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B11" "B22" "B21" 
    successors "B24" "B36" 
    xhandlers
    flags 
    probability 4549078265301473639
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v348 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v347 v357 v369 
=== Succesors ===
next: v465 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v347 v357 v369 #next: v465  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v465 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v376 
=== Usages ===
j467 
=== Predecessor ===
v348 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v376  <|@  <|@
f <@~|@floating>@ <|@
tid j316 <|@
result v34|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483646]
=== Inputs ===
value: i138 
=== Succesors ===
=== Usages ===
j321 v417 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i138  <|@  <|@
f <@~|@floating>@ <|@
tid v417 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j317 
y: j316 
=== Succesors ===
=== Usages ===
v376 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j317 y: j316  <|@  <|@
f <@*|@fixed>@ <|@
tid v376 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v417 
=== Succesors ===
trueSuccessor: v375 
falseSuccessor: v374 
=== Usages ===
=== Predecessor ===
v465 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v417 #trueSuccessor: v375 #falseSuccessor: v374  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v34|QWORD = MOVSXD v9|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v34|QWORD, y: v20|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B23 -> B24 falseDestination: B23 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4544574665674103143
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v375 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v379 
=== Usages ===
=== Predecessor ===
v376 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v379  <|@  <|@
f <@~|@floating>@ <|@
tid v542 <|@
result [v18|QWORD[.] + v20|QWORD * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: a271 
index: j317 
=== Succesors ===
=== Usages ===
j467 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a271 index: j317  <|@  <|@
f <@~|@floating>@ <|@
tid j467 <|@
result v35|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v465 
address: v542 
=== Succesors ===
=== Usages ===
v549 v550 v551 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v465 address: v542  <|@  <|@
f <@~|@floating>@ <|@
tid j321 <|@
result v36|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
stamp: i64 [-4294967295 - 4294967294]
=== Inputs ===
x: j316 
y: j317 
=== Succesors ===
=== Usages ===
j494 j486 j491 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j316 y: j317  <|@  <|@
f <@~|@floating>@ <|@
tid j486 <|@
result v37|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967299 - 4294967290]
=== Inputs ===
x: j321 
y: j450 
=== Succesors ===
=== Usages ===
v487 v489 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j321 y: j450  <|@  <|@
f <@~|@floating>@ <|@
tid v487 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j486 
y: j190 
=== Succesors ===
=== Usages ===
v379 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j486 y: j190  <|@  <|@
f <@*|@fixed>@ <|@
tid v379 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v487 
=== Succesors ===
trueSuccessor: v377 
falseSuccessor: v378 
=== Usages ===
=== Predecessor ===
v375 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v487 #trueSuccessor: v377 #falseSuccessor: v378  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v35|QWORD[.] = LEA [v18|QWORD[.] + v20|QWORD * 8 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v36|QWORD = SUB (x: v34|QWORD, ~y: v20|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v37|QWORD = LEA [v36|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v37|QWORD, y: v37|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B24 -> B25 falseDestination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B29" 
    xhandlers
    flags 
    probability 4542544186689054234
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v377 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v388 
=== Usages ===
=== Predecessor ===
v379 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v388  <|@  <|@
f <@*|@fixed>@ <|@
tid v388 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v389 
=== Predecessor ===
v377 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B25 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4535567466419362151
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v378 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v380 
=== Usages ===
=== Predecessor ===
v379 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v380  <|@  <|@
f <@*|@fixed>@ <|@
tid v380 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v381 
=== Predecessor ===
v378 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" "B35" 
    successors "B28" "B35" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4544574665674103143
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j480 <|@
result v38|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v381 
values: j190 j485 
=== Succesors ===
=== Usages ===
v551 j485 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v381 values: j190 j485  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v381 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v380 
=== Succesors ===
next: v512 
=== Usages ===
j480 v384 v385 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v380 #next: v512  <|@  <|@
f <@~|@floating>@ <|@
tid v551 <|@
result [v35|QWORD[.] + v38|QWORD * 8] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times8
stamp: void*
=== Inputs ===
base: j467 
index: j480 
=== Succesors ===
=== Usages ===
v512 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j467 index: j480  <|@  <|@
f <@~|@floating>@ <|@
tid v513 <|@
result v39|V256_QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0>
stableDimension: 0
stamp: <i64 [0] ⇈0000000000000000,i64 [0] ⇈0000000000000000,i64 [0] ⇈0000000000000000,i64 [0] ⇈0000000000000000>
stampKind: <i64,i64,i64,i64>
value: SIMD<0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v512 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v512 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v551 
value: v513 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v387 
=== Usages ===
=== Predecessor ===
v381 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v551 value: v513 stateAfter: - lastLocationAccess: - #next: v387  <|@  <|@
f <@~|@floating>@ <|@
tid j485 <|@
result v40|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j480 
y: j448 
=== Succesors ===
=== Usages ===
j474 j480 v489 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j480 y: j448  <|@  <|@
f <@~|@floating>@ <|@
tid v489 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j486 
y: j485 
=== Succesors ===
=== Usages ===
v387 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j486 y: j485  <|@  <|@
f <@*|@fixed>@ <|@
tid v387 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v489 
=== Succesors ===
trueSuccessor: v384 
falseSuccessor: v386 
=== Usages ===
=== Predecessor ===
v512 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v489 #trueSuccessor: v384 #falseSuccessor: v386  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v38|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v39|V256_QWORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v35|QWORD[.] + v38|QWORD * 8], input: v39|V256_QWORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v40|QWORD = LEA [v38|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v40|QWORD, y: v37|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B27 -> B28 falseDestination: B27 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B29" 
    xhandlers
    flags 
    probability 4535567466419362151
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v384 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v381 
=== Succesors ===
next: v390 
=== Usages ===
=== Predecessor ===
v387 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v381 #next: v390  <|@  <|@
f <@*|@fixed>@ <|@
tid v390 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v389 
=== Predecessor ===
v384 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v40|QWORD] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B25" "B28" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4544574665674103143
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j474 <|@
result v41|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v389 
values: j190 j485 
=== Succesors ===
=== Usages ===
v550 j479 j468 v492 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v389 values: j190 j485  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v389 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v388 v390 
=== Succesors ===
next: v405 
=== Usages ===
j474 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v388 v390 #next: v405  <|@  <|@
f <@~|@floating>@ <|@
tid j491 <|@
result v42|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967297 - 4294967292]
=== Inputs ===
x: j321 
y: j456 
=== Succesors ===
=== Usages ===
v492 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j321 y: j456  <|@  <|@
f <@~|@floating>@ <|@
tid v492 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j491 
y: j474 
=== Succesors ===
=== Usages ===
v405 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j491 y: j474  <|@  <|@
f <@*|@fixed>@ <|@
tid v405 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v492 
=== Succesors ===
trueSuccessor: v404 
falseSuccessor: v403 
=== Usages ===
=== Predecessor ===
v389 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v492 #trueSuccessor: v404 #falseSuccessor: v403  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v41|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v42|QWORD = LEA [v36|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v41|QWORD, y: v42|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4535567466419362151
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v404 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v408 
=== Usages ===
=== Predecessor ===
v405 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v408  <|@  <|@
f <@*|@fixed>@ <|@
tid v408 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v400 
=== Predecessor ===
v404 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v41|QWORD] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4542544186689054234
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v403 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v511 
=== Usages ===
=== Predecessor ===
v405 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v511  <|@  <|@
f <@~|@floating>@ <|@
tid v550 <|@
result [v35|QWORD[.] + v41|QWORD * 8] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times8
stamp: void*
=== Inputs ===
base: j467 
index: j474 
=== Succesors ===
=== Usages ===
v511 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j467 index: j474  <|@  <|@
f <@~|@floating>@ <|@
tid v514 <|@
result v43|V128_QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0>
stableDimension: 0
stamp: <i64 [0] ⇈0000000000000000,i64 [0] ⇈0000000000000000>
stampKind: <i64,i64>
value: SIMD<0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v511 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v511 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v550 
value: v514 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v399 
=== Usages ===
=== Predecessor ===
v403 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v550 value: v514 stateAfter: - lastLocationAccess: - #next: v399  <|@  <|@
f <@~|@floating>@ <|@
tid j479 <|@
result v44|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j474 
y: j439 
=== Succesors ===
=== Usages ===
j468 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j474 y: j439  <|@  <|@
f <@*|@fixed>@ <|@
tid v399 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v400 
=== Predecessor ===
v511 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v43|V128_QWORD = L oc: SIMD<0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v35|QWORD[.] + v41|QWORD * 8], input: v43|V128_QWORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v44|QWORD = LEA [v41|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v44|QWORD] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4544574665674103143
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j468 <|@
result v45|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v400 
values: j479 j474 
=== Succesors ===
=== Usages ===
v549 v495 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v400 values: j479 j474  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v400 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v399 v408 
=== Succesors ===
next: v411 
=== Usages ===
j468 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v399 v408 #next: v411  <|@  <|@
f <@~|@floating>@ <|@
tid j494 <|@
result v46|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967296 - 4294967293]
=== Inputs ===
x: j321 
y: j460 
=== Succesors ===
=== Usages ===
v495 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j321 y: j460  <|@  <|@
f <@~|@floating>@ <|@
tid v495 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j494 
y: j468 
=== Succesors ===
=== Usages ===
v411 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j494 y: j468  <|@  <|@
f <@*|@fixed>@ <|@
tid v411 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v495 
=== Succesors ===
trueSuccessor: v410 
falseSuccessor: v409 
=== Usages ===
=== Predecessor ===
v400 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v495 #trueSuccessor: v410 #falseSuccessor: v409  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v45|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v46|QWORD = DEC v36|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v45|QWORD, y: v46|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B32 -> B33 falseDestination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B37" 
    xhandlers
    flags 
    probability 4535567466419362151
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v410 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v414 
=== Usages ===
=== Predecessor ===
v411 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v414  <|@  <|@
f <@*|@fixed>@ <|@
tid v414 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v393 
=== Predecessor ===
v410 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B33 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B37" 
    xhandlers
    flags 
    probability 4542544186689054234
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v409 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v509 
=== Usages ===
=== Predecessor ===
v411 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v509  <|@  <|@
f <@~|@floating>@ <|@
tid v549 <|@
result [v35|QWORD[.] + v45|QWORD * 8] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times8
stamp: void*
=== Inputs ===
base: j467 
index: j468 
=== Succesors ===
=== Usages ===
v509 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j467 index: j468  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v509 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v549 
value: j190 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v402 
=== Usages ===
=== Predecessor ===
v409 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v549 value: j190 stateAfter: - lastLocationAccess: - #next: v402  <|@  <|@
f <@*|@fixed>@ <|@
tid v402 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v393 
=== Predecessor ===
v509 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v35|QWORD[.] + v45|QWORD * 8], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B34 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B27" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4542544186689054234
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v386 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v385 
=== Usages ===
=== Predecessor ===
v387 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v385  <|@  <|@
f <@*|@fixed>@ <|@
tid v385 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v381 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v386 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v381  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v40|QWORD] destination: B35 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B37" 
    xhandlers
    flags 
    probability 4544574665674103143
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v374 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v392 
=== Usages ===
=== Predecessor ===
v376 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v392  <|@  <|@
f <@*|@fixed>@ <|@
tid v392 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v393 
=== Predecessor ===
v374 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" "B34" "B33" 
    successors "B41" 
    xhandlers
    flags 
    probability 4549078265301473639
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v393 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v392 v402 v414 
=== Succesors ===
next: a210 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v392 v402 v414 #next: a210  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a210 <|@
result v18|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$g, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:66) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfLong(stripped:137) [bci: 58]
at java.util.Arrays.copyOf(long[], int) [bci: -1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 27]
at java.util.BitSet.expandTo(BitSet.java:352) [bci: 14]
at java.util.BitSet.set(BitSet.java:447) [bci: 38]
predefinedStamp: [null]
stamp: a! -
=== Inputs ===
object: a271 
=== Succesors ===
next: v129 
=== Usages ===
a128 
=== Predecessor ===
v393 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a271 #next: v129  <|@  <|@
f <@~|@floating>@ <|@
tid a128 <|@
result v47|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 30]
at java.util.BitSet.expandTo(BitSet.java:352) [bci: 14]
at java.util.BitSet.set(BitSet.java:447) [bci: 38]
op: Compress
stamp: n! -
=== Inputs ===
value: a210 
=== Succesors ===
=== Usages ===
v129 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a210  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v129 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: BitSet.words
nodeSourcePosition: at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 30]
at java.util.BitSet.expandTo(BitSet.java:352) [bci: 14]
at java.util.BitSet.set(BitSet.java:447) [bci: 38]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v525 
value: a128 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j306 
=== Usages ===
=== Predecessor ===
a210 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v525 value: a128 stateAfter: - lastLocationAccess: - #next: j306  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j306 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 1]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 30]
at java.util.BitSet.expandTo(BitSet.java:352) [bci: 14]
at java.util.BitSet.set(BitSet.java:447) [bci: 38]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1 
=== Succesors ===
next: v312 
=== Usages ===
j308 
=== Predecessor ===
v129 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a1 #next: v312  <|@  <|@
f <@~|@floating>@ <|@
tid i307 <|@
result int[9|0x9] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.cardTableShift(GraalHotSpotVMConfig) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 30]
at java.util.BitSet.expandTo(BitSet.java:352) [bci: 14]
at java.util.BitSet.set(BitSet.java:447) [bci: 38]
rawvalue: 9
stableDimension: 0
stamp: i32 [9] ⇊0000000000000009 ⇈0000000000000009
stampKind: i32
value: int[9|0x9]
=== Inputs ===
=== Succesors ===
=== Usages ===
j308 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j308 <|@
result v48|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 30]
at java.util.BitSet.expandTo(BitSet.java:352) [bci: 14]
at java.util.BitSet.set(BitSet.java:447) [bci: 38]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j306 
y: i307 
=== Succesors ===
=== Usages ===
v541 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j306 y: i307  <|@  <|@
f <@~|@floating>@ <|@
tid j311 <|@
result v49|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.loadLongConfigValue(int) [bci: -1]
at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.cardTableAddress(GraalHotSpotVMConfigNode.java:114) [bci: 6]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:133) [bci: 7]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 30]
at java.util.BitSet.expandTo(BitSet.java:352) [bci: 14]
at java.util.BitSet.set(BitSet.java:447) [bci: 38]
rawvalue: 4682670080
stableDimension: 0
stamp: i64 [4682670080] ⇊00000001171be000 ⇈00000001171be000
stampKind: i64
value: long[4682670080|0x1171be000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v541 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v541 <|@
result [v48|QWORD[*] + v49|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j308 
index: j311 
=== Succesors ===
=== Usages ===
v312 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j308 index: j311  <|@  <|@
f <@~|@floating>@ <|@
tid i137 <|@
result byte[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.BitSet.ensureCapacity(BitSet.java:338) [bci: 35]
at java.util.BitSet.expandTo(BitSet.java:352) [bci: 14]
at java.util.BitSet.set(BitSet.java:447) [bci: 38]
rawvalue: 0
stableDimension: 0
stamp: i8 [0] ⇈0000000000000000
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v132 v312 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v312 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.BitSet.ensureCapacity(BitSet.java:337) [bci: 30]
at java.util.BitSet.expandTo(BitSet.java:352) [bci: 14]
at java.util.BitSet.set(BitSet.java:447) [bci: 38]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v541 
value: i137 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v132 
=== Usages ===
=== Predecessor ===
j306 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v541 value: i137 stateAfter: - lastLocationAccess: - #next: v132  <|@  <|@
f <@~|@floating>@ <|@
tid v529 <|@
result [v0|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v132 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v132 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: BitSet.sizeIsSticky
nodeSourcePosition: at java.util.BitSet.ensureCapacity(BitSet.java:338) [bci: 35]
at java.util.BitSet.expandTo(BitSet.java:352) [bci: 14]
at java.util.BitSet.set(BitSet.java:447) [bci: 38]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v529 
value: i137 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v133 
=== Usages ===
=== Predecessor ===
v312 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v529 value: i137 stateAfter: - lastLocationAccess: - #next: v133  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v133 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: BitSet.wordsInUse
nodeSourcePosition: at java.util.BitSet.expandTo(BitSet.java:353) [bci: 19]
at java.util.BitSet.set(BitSet.java:447) [bci: 38]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v524 
value: i24 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v40 
=== Usages ===
=== Predecessor ===
v132 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v524 value: i24 stateAfter: - lastLocationAccess: - #next: v40  <|@  <|@
f <@*|@fixed>@ <|@
tid v40 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v38 
=== Predecessor ===
v133 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v47|DWORD[.] = COMPRESSPOINTER (input: v18|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@64a8e7a9 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v47|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v48|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v49|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v48|QWORD[*] + v49|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v0|QWORD[.] + 16], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B37 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B15" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4542544186689054234
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v341 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v340 
=== Usages ===
=== Predecessor ===
v342 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v340  <|@  <|@
f <@*|@fixed>@ <|@
tid v340 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v335 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v341 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v335  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v26|QWORD] destination: B38 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B41" 
    xhandlers
    flags 
    probability 4593821837636870494
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v46 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.BitSet.ensureCapacity(BitSet.java:340) [bci: 38]
at java.util.BitSet.expandTo(BitSet.java:352) [bci: 14]
at java.util.BitSet.set(BitSet.java:447) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: v134 
=== Usages ===
=== Predecessor ===
v47 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v134  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v134 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: BitSet.wordsInUse
nodeSourcePosition: at java.util.BitSet.expandTo(BitSet.java:353) [bci: 19]
at java.util.BitSet.set(BitSet.java:447) [bci: 38]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v524 
value: i24 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v85 
=== Usages ===
=== Predecessor ===
v46 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v524 value: i24 stateAfter: - lastLocationAccess: - #next: v85  <|@  <|@
f <@*|@fixed>@ <|@
tid v85 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v38 
=== Predecessor ===
v134 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B41" 
    xhandlers
    flags 
    probability 4606017756884995007
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v28 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.BitSet.expandTo(BitSet.java:355) [bci: 22]
at java.util.BitSet.set(BitSet.java:447) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: v39 
=== Usages ===
=== Predecessor ===
v29 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v39  <|@  <|@
f <@*|@fixed>@ <|@
tid v39 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v38 
=== Predecessor ===
v28 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" "B37" "B39" 
    successors "B42" "B43" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v38 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v39 v40 v85 
=== Succesors ===
next: a521 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v39 v40 v85 #next: a521  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a521 <|@
result v50|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: BitSet.words
nodeSourcePosition: at java.util.BitSet.set(BitSet.java:449) [bci: 42]
nullCheck: false
stamp: n# [J
=== Inputs ===
stateBefore: - 
guard: - 
address: v525 
=== Succesors ===
next: i522 
=== Usages ===
a96 v526 
=== Predecessor ===
v38 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v525 #next: i522  <|@  <|@
tid ?11 <|@
d <@d|@=== Debug Properties ===
bci: 41
code: ResolvedJavaMethodBytecode<BitSet.set(int)>
duringCall: false
localsSize: 3
locksSize: 0
nodeSourcePosition: at java.util.BitSet.set(BitSet.java:447) [bci: 38]
rethrowException: false
sourceFile: BitSet.java
sourceLine: 449
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 i2 i8 
=== Succesors ===
=== Usages ===
v238 i522 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2 i8  <|@  <|@
f <@~|@floating>@ <|@
tid v526 <|@
result [v50|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a521 
=== Succesors ===
=== Usages ===
i522 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a521  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i522 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.BitSet.set(BitSet.java:449) [bci: 47]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?11 
guard: - 
address: v526 
=== Succesors ===
next: v163 
=== Usages ===
v113 
=== Predecessor ===
a521 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?11 guard: - address: v526 #next: v163  <|@  <|@
f <@~|@floating>@ <|@
tid v113 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.BitSet.set(BitSet.java:449) [bci: 52]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i8 
y: i522 
=== Succesors ===
=== Usages ===
v163 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i8 y: i522  <|@  <|@
f <@*|@fixed>@ <|@
tid v163 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.BitSet.set(BitSet.java:449) [bci: 52]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v113 
=== Succesors ===
trueSuccessor: v160 
falseSuccessor: v162 
=== Usages ===
=== Predecessor ===
i522 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v113 #trueSuccessor: v160 #falseSuccessor: v162  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v50|DWORD[.] = MOV [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.BitSet.set(BitSet.java:449) [bci: 41]
locals: v0|QWORD[.] v1|DWORD v2|DWORD 
>@ <|@ instruction CMP (x: v2|DWORD, y: [v50|DWORD[.] * 8 + 12]) size: DWORD state [bci:41] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B41 -> B42 falseDestination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v160 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.BitSet.set(BitSet.java:449) [bci: 52]
stamp: void
=== Inputs ===
=== Succesors ===
next: j523 
=== Usages ===
j523 v120 
=== Predecessor ===
v163 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j523  <|@  <|@
f <@~|@floating>@ <|@
tid a96 <|@
result v51|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.BitSet.set(BitSet.java:449) [bci: 42]
op: Uncompress
stamp: a# [J
=== Inputs ===
value: a521 
=== Succesors ===
=== Usages ===
v527 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a521  <|@  <|@
f <@~|@floating>@ <|@
tid v527 <|@
result [v51|QWORD[.] + v2|DWORD * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: a96 
index: i8 
=== Succesors ===
=== Usages ===
v120 j523 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a96 index: i8  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j523 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: long
nodeSourcePosition: at java.util.BitSet.set(BitSet.java:449) [bci: 47]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: v160 
address: v527 
=== Succesors ===
next: v120 
=== Usages ===
j16 
=== Predecessor ===
v160 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v160 address: v527 #next: v120  <|@  <|@
f <@~|@floating>@ <|@
tid j15 <|@
result v52|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at java.util.BitSet.set(BitSet.java:449) [bci: 50]
stamp: i64
=== Inputs ===
x: j14 
y: i2 
=== Succesors ===
=== Usages ===
j16 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: j14 y: i2  <|@  <|@
f <@~|@floating>@ <|@
tid j16 <|@
result v54|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.OrNode$$Lambda$69/599890587@2745c573
nodeSourcePosition: at java.util.BitSet.set(BitSet.java:449) [bci: 51]
stamp: i64
=== Inputs ===
x: j15 
y: j523 
=== Succesors ===
=== Usages ===
v120 
=== Predecessor ===
- >@ <|@
instruction <@||@org.graalvm.compiler.nodes.calc.OrNode>@ x: j15 y: j523  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v120 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: long
nodeSourcePosition: at java.util.BitSet.set(BitSet.java:449) [bci: 52]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v160 
address: v527 
value: j16 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v22 
=== Usages ===
=== Predecessor ===
j523 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v160 address: v527 value: j16 stateAfter: - lastLocationAccess: - #next: v22  <|@  <|@
f <@*|@fixed>@ <|@
tid v22 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.BitSet.set(BitSet.java:452) [bci: 57]
stamp: void
=== Inputs ===
result: - 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v120 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: - memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v51|QWORD[.] = UNCOMPRESSPOINTER (input: v50|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@64a8e7a9 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v53|QWORD = MOVE input: long[1|0x1] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v1|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v52|QWORD = SHL (x: v53|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v54|QWORD = OR (x: v52|QWORD, ~y: [v51|QWORD[.] + v2|DWORD * 8 + 16]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v51|QWORD[.] + v2|DWORD * 8 + 16], y: v54|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v162 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.BitSet.set(BitSet.java:449) [bci: 52]
stamp: void
=== Inputs ===
=== Succesors ===
next: v238 
=== Usages ===
=== Predecessor ===
v163 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v238  <|@  <|@
f <@~|@floating>@ <|@
tid i240 <|@
result int[-29211|0xffffffffffff8de5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -29211
stableDimension: 0
stamp: i32 [-29211] ⇊00000000ffff8de5 ⇈00000000ffff8de5
stampKind: i32
value: int[-29211|0xffffffffffff8de5]
=== Inputs ===
=== Succesors ===
=== Usages ===
v238 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v238 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?11 
actionAndReason: i240 
speculation: a225 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v162 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?11 actionAndReason: i240 speculation: a225  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -29211 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.BitSet.set(BitSet.java:449) [bci: 41]
locals: v0|QWORD[.] v1|DWORD v2|DWORD 
>@ <|@ instruction DEOPT info [bci:41] <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@375d8fa slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v1|DWORD, y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B40" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = SAR v1|DWORD y: 6 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = INC v2|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v3|DWORD, y: [v0|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.1293034473961897 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B41" 
    xhandlers
    flags 
    probability 4606017756884995007
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" "B37" "B39" 
    successors "B42" "B43" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v50|DWORD[.] = MOV [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.BitSet.set(BitSet.java:449) [bci: 41]
locals: v0|QWORD[.] v1|DWORD v2|DWORD 
>@ <|@ instruction CMP (x: v2|DWORD, y: [v50|DWORD[.] * 8 + 12]) size: DWORD state [bci:41] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B41 -> B42 falseDestination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v51|QWORD[.] = UNCOMPRESSPOINTER (input: v50|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@64a8e7a9 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v53|QWORD = MOVE input: long[1|0x1] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v1|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v52|QWORD = SHL (x: v53|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v54|QWORD = OR (x: v52|QWORD, ~y: [v51|QWORD[.] + v2|DWORD * 8 + 16]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v51|QWORD[.] + v2|DWORD * 8 + 16], y: v54|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B39" 
    xhandlers
    flags 
    probability 4593826667950625028
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v4|DWORD[.] = MOV [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.BitSet.set(BitSet.java:443) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction v5|DWORD = MOV [v4|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v3|DWORD, y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0010368489113086188 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B41" 
    xhandlers
    flags 
    probability 4593821837636870494
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B8" 
    xhandlers
    flags 
    probability 4549078265301473639
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = SHL v5|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v3|DWORD, y: v8|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = CMOVE (falseValue: v8|DWORD, ~trueValue: v3|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction CMP v9|DWORD y: 16777215 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B4 -> B5 falseDestination: B4 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4548531658701817683
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = SHL v9|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = LEA [v10|DWORD + 23] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = AND v11|DWORD y: -8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = MOVSXD v12|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = ADD (x: v13|QWORD, y: v6|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v14|QWORD, y: v7|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B10" 
    xhandlers
    flags 
    probability 4548442626358694106
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v14|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v13|QWORD + v6|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v13|QWORD + v6|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v13|QWORD + v6|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v13|QWORD + v6|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v6|QWORD + 12], y: v9|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v6|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v6|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[J, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v15|QWORD[.] = MOVE v6|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v15|QWORD[.]] destination: B7 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B7" "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4549078265301473639
    begin_IR
      LIR
      nr   -1  <|@ instruction [v18|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v9|DWORD, y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v19|DWORD = CMOVE (falseValue: v9|DWORD, ~trueValue: v5|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction v20|QWORD = MOVSXD v19|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v20|QWORD y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B10 -> B11 falseDestination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4544574665674103143
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v21|QWORD[.] = LEA [v18|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v22|QWORD[*] = LEA [v4|DWORD[.] * 8 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v23|QWORD = LEA [v20|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v23|QWORD, y: v23|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B12 -> B13 falseDestination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B17" 
    xhandlers
    flags 
    probability 4542544186689054234
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B13 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B13" "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4544574665674103143
    begin_IR
      LIR
      nr   -1  <|@ instruction [v27|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v28|QWORD = LEA [v20|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v27|QWORD, y: v28|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B17 -> B18 falseDestination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" 
    xhandlers
    flags 
    probability 4542544186689054234
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v29|V128_QWORD = H [v22|QWORD[*] + v27|QWORD * 8] nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v21|QWORD[.] + v27|QWORD * 8], input: v29|V128_QWORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v30|QWORD = LEA [v27|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v30|QWORD] destination: B19 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" "B18" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4544574665674103143
    begin_IR
      LIR
      nr   -1  <|@ instruction [v31|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v32|QWORD = DEC v20|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v31|QWORD, y: v32|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B20 -> B21 falseDestination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4542544186689054234
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v33|QWORD = MOV [v22|QWORD[*] + v31|QWORD * 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v21|QWORD[.] + v31|QWORD * 8], y: v33|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B11" "B22" "B21" 
    successors "B24" "B36" 
    xhandlers
    flags 
    probability 4549078265301473639
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v34|QWORD = MOVSXD v9|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v34|QWORD, y: v20|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B23 -> B24 falseDestination: B23 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B37" 
    xhandlers
    flags 
    probability 4544574665674103143
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" "B34" "B33" 
    successors "B41" 
    xhandlers
    flags 
    probability 4549078265301473639
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v47|DWORD[.] = COMPRESSPOINTER (input: v18|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@64a8e7a9 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v47|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v48|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v49|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v48|QWORD[*] + v49|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v0|QWORD[.] + 16], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B37 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B23" 
    xhandlers
    flags 
    probability 4544574665674103143
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B11 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4544574665674103143
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v35|QWORD[.] = LEA [v18|QWORD[.] + v20|QWORD * 8 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v36|QWORD = SUB (x: v34|QWORD, ~y: v20|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v37|QWORD = LEA [v36|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v37|QWORD, y: v37|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B24 -> B25 falseDestination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B29" 
    xhandlers
    flags 
    probability 4542544186689054234
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B25 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B25" "B28" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4544574665674103143
    begin_IR
      LIR
      nr   -1  <|@ instruction [v41|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v42|QWORD = LEA [v36|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v41|QWORD, y: v42|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4542544186689054234
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v43|V128_QWORD = L oc: SIMD<0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v35|QWORD[.] + v41|QWORD * 8], input: v43|V128_QWORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v44|QWORD = LEA [v41|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v44|QWORD] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4544574665674103143
    begin_IR
      LIR
      nr   -1  <|@ instruction [v45|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v46|QWORD = DEC v36|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v45|QWORD, y: v46|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B32 -> B33 falseDestination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B37" 
    xhandlers
    flags 
    probability 4542544186689054234
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v35|QWORD[.] + v45|QWORD * 8], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B34 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4535567466419362151
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B15" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4542544186689054234
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v26|QWORD] destination: B38 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B38" 
    successors "B16" "B38" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4544574665674103143
    begin_IR
      LIR
      nr   -1  <|@ instruction [v24|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v25|V256_QWORD = H [v22|QWORD[*] + v24|QWORD * 8] nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v21|QWORD[.] + v24|QWORD * 8], input: v25|V256_QWORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = LEA [v24|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v26|QWORD, y: v23|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" 
    xhandlers
    flags 
    probability 4535567466419362151
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v27|QWORD] destination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4535567466419362151
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B37" 
    xhandlers
    flags 
    probability 4535567466419362151
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B33 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" 
    xhandlers
    flags 
    probability 4535567466419362151
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v26|QWORD] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4535567466419362151
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v41|QWORD] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4535567466419362151
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B27" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4542544186689054234
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v40|QWORD] destination: B35 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" "B35" 
    successors "B28" "B35" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4544574665674103143
    begin_IR
      LIR
      nr   -1  <|@ instruction [v38|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v39|V256_QWORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v35|QWORD[.] + v38|QWORD * 8], input: v39|V256_QWORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v40|QWORD = LEA [v38|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v40|QWORD, y: v37|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B27 -> B28 falseDestination: B27 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B29" 
    xhandlers
    flags 
    probability 4535567466419362151
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v40|QWORD] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B9" 
    xhandlers
    flags 
    probability 4534031611562777558
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4534743870307766176
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v16|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[J, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v16|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v9|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.BitSet.set(BitSet.java:443) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v17|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v17|QWORD[.]] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4518304896585145935
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B6 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -29211 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.BitSet.set(BitSet.java:449) [bci: 41]
locals: v0|QWORD[.] v1|DWORD v2|DWORD 
>@ <|@ instruction DEOPT info [bci:41] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -22803 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.BitSet.set(BitSet.java:443) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_1       
     1: ifge          31
     4: new           #42         // java.lang.IndexOutOfBoundsException
     7: dup           
     8: new           #11         // java.lang.StringBuilder
    11: dup           
    12: invokespecial #7          // java.lang.StringBuilder.<init>:()void
    15: ldc           #48         // "bitIndex < 0: "
    17: invokevirtual #8          // java.lang.StringBuilder.append:(java.lang.String)java.lang.StringBuilder
    20: iload_1       
    21: invokevirtual #9          // java.lang.StringBuilder.append:(int)java.lang.StringBuilder
    24: invokevirtual #10         // java.lang.StringBuilder.toString:()java.lang.String
    27: invokespecial #34         // java.lang.IndexOutOfBoundsException.<init>:(java.lang.String)void
    30: athrow        
    31: iload_1       
    32: invokestatic  #12         // wordIndex:(int)int
    35: istore_2      
    36: aload_0       
    37: iload_2       
    38: invokespecial #35         // expandTo:(int)void
    41: aload_0       
    42: getfield      #2          // words:long[]
    45: iload_2       
    46: dup2          
    47: laload        
    48: lconst_1      
    49: iload_1       
    50: lshl          
    51: lor           
    52: lastore       
    53: aload_0       
    54: invokespecial #13         // checkInvariants:()void
    57: return        
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@375d8fa slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction r14|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   10  <|@ instruction TEST (x: r14|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr   12  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B40" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   24  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   26  <|@ instruction r10|DWORD = SAR r14|DWORD y: 6 size: DWORD <|@ <|@
      nr   28  <|@ instruction r11|DWORD = INC r10|DWORD size: DWORD <|@ <|@
      nr   30  <|@ instruction CMP (x: r11|DWORD, y: [r13|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   32  <|@ instruction BRANCH trueDestinationProbability: 0.1293034473961897 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B41" 
    xhandlers
    flags 
    probability 4606017756884995007
    begin_IR
      LIR
      nr  406  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  408  <|@ instruction JUMP ~[] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" "B37" "B39" 
    successors "B42" "B43" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  410  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  412  <|@ instruction rcx|DWORD[.] = MOV [r13|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  414  <|@ st <@st|@reference-map: [rcx:0, r13:0]
live-base-pointers: []
java.util.BitSet.set(BitSet.java:449) [bci: 41]
locals: r13|QWORD[.] r14|DWORD r10|DWORD 
>@ <|@ instruction CMP (x: r10|DWORD, y: [rcx|DWORD[.] * 8 + 12]) size: DWORD state [bci:41] <|@ <|@
      nr  416  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B41 -> B42 falseDestination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  418  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  420  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@64a8e7a9 encoding: base: 0 shift: 3 <|@ <|@
      nr  422  <|@ instruction rdx|QWORD = MOVE input: long[1|0x1] <|@ <|@
      nr  424  <|@ instruction rcx|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  426  <|@ instruction rdx|QWORD = SHL (x: rdx|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr  428  <|@ instruction rdx|QWORD = OR (x: rdx|QWORD, ~y: [rsi|QWORD[.] + r10|DWORD * 8 + 16]) size: QWORD <|@ <|@
      nr  430  <|@ instruction MOV (x: [rsi|QWORD[.] + r10|DWORD * 8 + 16], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  432  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B39" 
    xhandlers
    flags 
    probability 4593826667950625028
    begin_IR
      LIR
      nr   34  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   36  <|@ instruction r8|DWORD[.] = MOV [r13|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   38  <|@ st <@st|@reference-map: [r8:0, r13:0]
live-base-pointers: []
java.util.BitSet.set(BitSet.java:443) [bci: 0]
locals: r13|QWORD[.] r14|DWORD - 
>@ <|@ instruction r9|DWORD = MOV [r8|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   40  <|@ instruction CMP (x: r11|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr   42  <|@ instruction BRANCH trueDestinationProbability: 0.0010368489113086188 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B41" 
    xhandlers
    flags 
    probability 4593821837636870494
    begin_IR
      LIR
      nr  400  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  402  <|@ instruction MOV (x: [r13|QWORD[.] + 12], y: r11|DWORD) size: DWORD <|@ <|@
      nr  404  <|@ instruction JUMP ~[] destination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B8" 
    xhandlers
    flags 
    probability 4549078265301473639
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   46  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   48  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   50  <|@ instruction rcx|DWORD = SHL r9|DWORD size: DWORD <|@ <|@
      nr   52  <|@ instruction CMP (x: r11|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr   54  <|@ instruction rcx|DWORD = CMOVE (falseValue: rcx|DWORD, ~trueValue: r11|DWORD) condition: > <|@ <|@
      nr   56  <|@ instruction CMP rcx|DWORD y: 16777215 size: DWORD <|@ <|@
      nr   58  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B4 -> B5 falseDestination: B4 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4548531658701817683
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   62  <|@ instruction rbx|DWORD = SHL rcx|DWORD y: 3 size: DWORD <|@ <|@
      nr   64  <|@ instruction rbx|DWORD = LEA [rbx|DWORD + 23] size: DWORD <|@ <|@
      nr   66  <|@ instruction rbx|DWORD = AND rbx|DWORD y: -8 size: DWORD <|@ <|@
      nr   68  <|@ instruction rbx|QWORD = MOVSXD rbx|DWORD size: QWORD <|@ <|@
      nr   70  <|@ instruction rdi|QWORD = ADD (x: rbx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr   72  <|@ instruction CMP (x: rdi|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr   74  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B10" 
    xhandlers
    flags 
    probability 4548442626358694106
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   92  <|@ instruction MOV (x: [r15|QWORD + 96], y: rdi|QWORD) size: QWORD <|@ <|@
      nr   94  <|@ instruction AMD64PREFETCH ~[rbx|QWORD + rsi|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr   96  <|@ instruction AMD64PREFETCH ~[rbx|QWORD + rsi|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   98  <|@ instruction AMD64PREFETCH ~[rbx|QWORD + rsi|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  100  <|@ instruction AMD64PREFETCH ~[rbx|QWORD + rsi|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  102  <|@ instruction MOV (x: [rsi|QWORD + 12], y: rcx|DWORD) size: DWORD <|@ <|@
      nr  104  <|@ instruction MOV [rsi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  106  <|@ instruction MOV [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[J, resolved>;compressed} <|@ <|@
      nr  108  <|@ instruction rsi|QWORD[.] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  110  <|@ instruction rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  112  <|@ instruction stack:28|DWORD[.] = MOVE r8|DWORD[.] moveKind: DWORD <|@ <|@
      nr  114  <|@ instruction stack:32|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  116  <|@ instruction stack:36|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  118  <|@ instruction stack:40|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  120  <|@ instruction stack:48|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  122  <|@ instruction r14|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  124  <|@ instruction r13|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  126  <|@ instruction JUMP ~[] destination: B7 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B7" "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4549078265301473639
    begin_IR
      LIR
      nr  160  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  162  <|@ instruction CMP (x: r14|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  164  <|@ instruction rcx|DWORD = CMOVE (falseValue: r14|DWORD, ~trueValue: r13|DWORD) condition: > <|@ <|@
      nr  166  <|@ instruction r10|QWORD = MOVSXD rcx|DWORD size: QWORD <|@ <|@
      nr  168  <|@ instruction CMP r10|QWORD y: 1 size: QWORD <|@ <|@
      nr  170  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B10 -> B11 falseDestination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4544574665674103143
    begin_IR
      LIR
      nr  176  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  178  <|@ instruction r8|DWORD[.] = MOVE stack:28|DWORD[.] moveKind: DWORD <|@ <|@
      nr  180  <|@ instruction r11|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  182  <|@ instruction r8|QWORD[*] = LEA [r8|DWORD[.] * 8 + 16] size: QWORD <|@ <|@
      nr  184  <|@ instruction r9|QWORD = LEA [r10|QWORD - 4] size: QWORD <|@ <|@
      nr  186  <|@ instruction TEST (x: r9|QWORD, y: r9|QWORD) size: QWORD <|@ <|@
      nr  188  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B12 -> B13 falseDestination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B17" 
    xhandlers
    flags 
    probability 4542544186689054234
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  192  <|@ instruction rcx|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  194  <|@ instruction JUMP ~[] destination: B13 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B13" "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4544574665674103143
    begin_IR
      LIR
      nr  218  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  220  <|@ instruction r9|QWORD = LEA [r10|QWORD - 2] size: QWORD <|@ <|@
      nr  222  <|@ instruction CMP (x: rcx|QWORD, y: r9|QWORD) size: QWORD <|@ <|@
      nr  224  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B17 -> B18 falseDestination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" 
    xhandlers
    flags 
    probability 4542544186689054234
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  232  <|@ instruction xmm0|V128_QWORD = H [r8|QWORD[*] + rcx|QWORD * 8] nZ: XMM oh: VMOVDQU <|@ <|@
      nr  234  <|@ instruction J (address: [r11|QWORD[.] + rcx|QWORD * 8], input: xmm0|V128_QWORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr  236  <|@ instruction r9|QWORD = LEA [rcx|QWORD + 2] size: QWORD <|@ <|@
      nr  238  <|@ instruction rcx|QWORD = MOVE r9|QWORD moveKind: QWORD <|@ <|@
      nr  240  <|@ instruction JUMP ~[] destination: B19 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" "B18" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4544574665674103143
    begin_IR
      LIR
      nr  242  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  244  <|@ instruction r9|QWORD = DEC r10|QWORD size: QWORD <|@ <|@
      nr  246  <|@ instruction CMP (x: rcx|QWORD, y: r9|QWORD) size: QWORD <|@ <|@
      nr  248  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B20 -> B21 falseDestination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4542544186689054234
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  256  <|@ instruction r8|QWORD = MOV [r8|QWORD[*] + rcx|QWORD * 8] size: QWORD <|@ <|@
      nr  258  <|@ instruction MOV (x: [r11|QWORD[.] + rcx|QWORD * 8], y: r8|QWORD) size: QWORD <|@ <|@
      nr  260  <|@ instruction JUMP ~[] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B11" "B22" "B21" 
    successors "B24" "B36" 
    xhandlers
    flags 
    probability 4549078265301473639
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  264  <|@ instruction r11|QWORD = MOVSXD r14|DWORD size: QWORD <|@ <|@
      nr  266  <|@ instruction CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  268  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B23 -> B24 falseDestination: B23 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B37" 
    xhandlers
    flags 
    probability 4544574665674103143
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  366  <|@ instruction r11|DWORD = MOVE stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  368  <|@ instruction r10|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  370  <|@ instruction JUMP ~[] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" "B34" "B33" 
    successors "B41" 
    xhandlers
    flags 
    probability 4549078265301473639
    begin_IR
      LIR
      nr  372  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  374  <|@ instruction rax|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@64a8e7a9 encoding: base: 0 shift: 3 <|@ <|@
      nr  376  <|@ instruction MOV (x: [r10|QWORD[.] + 20], y: rax|DWORD[.]) size: DWORD <|@ <|@
      nr  378  <|@ instruction r13|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  380  <|@ instruction r8|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr  382  <|@ instruction MOVB (x: [r13|QWORD[*] + r8|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  384  <|@ instruction MOVB (x: [r10|QWORD[.] + 16], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  386  <|@ instruction MOV (x: [r10|QWORD[.] + 12], y: r11|DWORD) size: DWORD <|@ <|@
      nr  388  <|@ instruction r14|DWORD = MOVE stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  390  <|@ instruction r13|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  392  <|@ instruction r10|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  394  <|@ instruction JUMP ~[] destination: B37 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B23" 
    xhandlers
    flags 
    probability 4544574665674103143
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  174  <|@ instruction JUMP ~[] destination: B11 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4544574665674103143
    begin_IR
      LIR
      nr  270  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  272  <|@ instruction r8|QWORD[.] = LEA [rax|QWORD[.] + r10|QWORD * 8 + 16] size: QWORD <|@ <|@
      nr  274  <|@ instruction r11|QWORD = SUB (x: r11|QWORD, ~y: r10|QWORD) size: QWORD <|@ <|@
      nr  276  <|@ instruction r10|QWORD = LEA [r11|QWORD - 4] size: QWORD <|@ <|@
      nr  278  <|@ instruction TEST (x: r10|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  280  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B24 -> B25 falseDestination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B29" 
    xhandlers
    flags 
    probability 4542544186689054234
    begin_IR
      LIR
      nr  282  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  284  <|@ instruction r9|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  286  <|@ instruction JUMP ~[] destination: B25 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B25" "B28" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4544574665674103143
    begin_IR
      LIR
      nr  310  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  312  <|@ instruction r10|QWORD = LEA [r11|QWORD - 2] size: QWORD <|@ <|@
      nr  314  <|@ instruction CMP (x: r9|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  316  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4542544186689054234
    begin_IR
      LIR
      nr  322  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  324  <|@ instruction xmm0|V128_QWORD = L oc: SIMD<0,0> <|@ <|@
      nr  326  <|@ instruction J (address: [r8|QWORD[.] + r9|QWORD * 8], input: xmm0|V128_QWORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr  328  <|@ instruction r10|QWORD = LEA [r9|QWORD + 2] size: QWORD <|@ <|@
      nr  330  <|@ instruction r9|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  332  <|@ instruction JUMP ~[] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4544574665674103143
    begin_IR
      LIR
      nr  334  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  336  <|@ instruction r11|QWORD = DEC r11|QWORD size: QWORD <|@ <|@
      nr  338  <|@ instruction CMP (x: r9|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  340  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B32 -> B33 falseDestination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B37" 
    xhandlers
    flags 
    probability 4542544186689054234
    begin_IR
      LIR
      nr  350  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  352  <|@ instruction MOV (x: [r8|QWORD[.] + r9|QWORD * 8], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  354  <|@ instruction r11|DWORD = MOVE stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  356  <|@ instruction r10|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  358  <|@ instruction JUMP ~[] destination: B34 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4535567466419362151
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  198  <|@ instruction rcx|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  200  <|@ instruction JUMP ~[] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B15" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4542544186689054234
    begin_IR
      LIR
      nr  396  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  398  <|@ instruction JUMP ~[] destination: B38 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B38" 
    successors "B16" "B38" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4544574665674103143
    begin_IR
      LIR
      nr  202  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  204  <|@ instruction xmm0|V256_QWORD = H [r8|QWORD[*] + rcx|QWORD * 8] nZ: YMM oh: VMOVDQU <|@ <|@
      nr  206  <|@ instruction J (address: [r11|QWORD[.] + rcx|QWORD * 8], input: xmm0|V256_QWORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr  208  <|@ instruction rcx|QWORD = LEA [rcx|QWORD + 4] size: QWORD <|@ <|@
      nr  210  <|@ instruction CMP (x: rcx|QWORD, y: r9|QWORD) size: QWORD <|@ <|@
      nr  212  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" 
    xhandlers
    flags 
    probability 4535567466419362151
    begin_IR
      LIR
      nr  226  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  228  <|@ instruction JUMP ~[] destination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4535567466419362151
    begin_IR
      LIR
      nr  250  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  252  <|@ instruction JUMP ~[] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B37" 
    xhandlers
    flags 
    probability 4535567466419362151
    begin_IR
      LIR
      nr  342  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  344  <|@ instruction r11|DWORD = MOVE stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  346  <|@ instruction r10|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  348  <|@ instruction JUMP ~[] destination: B33 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" 
    xhandlers
    flags 
    probability 4535567466419362151
    begin_IR
      LIR
      nr  214  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  216  <|@ instruction JUMP ~[] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4535567466419362151
    begin_IR
      LIR
      nr  318  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  320  <|@ instruction JUMP ~[] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4535567466419362151
    begin_IR
      LIR
      nr  288  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  290  <|@ instruction r9|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  292  <|@ instruction JUMP ~[] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B27" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4542544186689054234
    begin_IR
      LIR
      nr  360  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  362  <|@ instruction JUMP ~[] destination: B35 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" "B35" 
    successors "B28" "B35" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4544574665674103143
    begin_IR
      LIR
      nr  294  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  296  <|@ instruction xmm0|V256_QWORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr  298  <|@ instruction J (address: [r8|QWORD[.] + r9|QWORD * 8], input: xmm0|V256_QWORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr  300  <|@ instruction r9|QWORD = LEA [r9|QWORD + 4] size: QWORD <|@ <|@
      nr  302  <|@ instruction CMP (x: r9|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  304  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B27 -> B28 falseDestination: B27 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B29" 
    xhandlers
    flags 
    probability 4535567466419362151
    begin_IR
      LIR
      nr  306  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  308  <|@ instruction JUMP ~[] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B9" 
    xhandlers
    flags 
    probability 4534031611562777558
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  130  <|@ instruction stack:28|DWORD[.] = MOVE r8|DWORD[.] moveKind: DWORD <|@ <|@
      nr  132  <|@ instruction stack:32|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  134  <|@ instruction stack:36|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  136  <|@ instruction stack:40|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  138  <|@ instruction stack:48|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  140  <|@ instruction JUMP ~[] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4534743870307766176
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  144  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[J, resolved>} <|@ <|@
      nr  146  <|@ instruction rdx|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  148  <|@ instruction rbx|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  150  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  152  <|@ instruction r13|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  154  <|@ instruction r14|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  156  <|@ st <@st|@reference-map: [stack:0, stack:20]
live-base-pointers: []
java.util.BitSet.set(BitSet.java:443) [bci: 0]
locals: stack:48|QWORD[.] stack:40|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr  158  <|@ instruction JUMP ~[] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4518304896585145935
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   78  <|@ instruction stack:28|DWORD[.] = MOVE r8|DWORD[.] moveKind: DWORD <|@ <|@
      nr   80  <|@ instruction stack:32|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr   82  <|@ instruction stack:36|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr   84  <|@ instruction stack:40|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr   86  <|@ instruction stack:48|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr   88  <|@ instruction JUMP ~[] destination: B6 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  434  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  436  <|@ instruction r11|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  438  <|@ instruction stack:40|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  440  <|@ instruction r10|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  442  <|@ instruction MOV [r15|QWORD + 668] y: -29211 size: DWORD <|@ <|@
      nr  444  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  446  <|@ st <@st|@reference-map: [r10:0]
live-base-pointers: []
java.util.BitSet.set(BitSet.java:449) [bci: 41]
locals: r10|QWORD[.] stack:40|DWORD r11|DWORD 
>@ <|@ instruction DEOPT info [bci:41] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   16  <|@ instruction r10|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr   18  <|@ instruction MOV [r15|QWORD + 668] y: -22803 size: DWORD <|@ <|@
      nr   20  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   22  <|@ st <@st|@reference-map: [r10:0]
live-base-pointers: []
java.util.BitSet.set(BitSet.java:443) [bci: 0]
locals: r10|QWORD[.] r14|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_1       
     1: ifge          31
     4: new           #42         // java.lang.IndexOutOfBoundsException
     7: dup           
     8: new           #11         // java.lang.StringBuilder
    11: dup           
    12: invokespecial #7          // java.lang.StringBuilder.<init>:()void
    15: ldc           #48         // "bitIndex < 0: "
    17: invokevirtual #8          // java.lang.StringBuilder.append:(java.lang.String)java.lang.StringBuilder
    20: iload_1       
    21: invokevirtual #9          // java.lang.StringBuilder.append:(int)java.lang.StringBuilder
    24: invokevirtual #10         // java.lang.StringBuilder.toString:()java.lang.String
    27: invokespecial #34         // java.lang.IndexOutOfBoundsException.<init>:(java.lang.String)void
    30: athrow        
    31: iload_1       
    32: invokestatic  #12         // wordIndex:(int)int
    35: istore_2      
    36: aload_0       
    37: iload_2       
    38: invokespecial #35         // expandTo:(int)void
    41: aload_0       
    42: getfield      #2          // words:long[]
    45: iload_2       
    46: dup2          
    47: laload        
    48: lconst_1      
    49: iload_1       
    50: lshl          
    51: lor           
    52: lastore       
    53: aload_0       
    54: invokespecial #13         // checkInvariants:()void
    57: return        
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@375d8fa slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction r14|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   10  <|@ instruction TEST (x: r14|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr   12  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B41" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   24  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   26  <|@ instruction r10|DWORD = SAR r14|DWORD y: 6 size: DWORD <|@ <|@
      nr   28  <|@ instruction r11|DWORD = INC r10|DWORD size: DWORD <|@ <|@
      nr   30  <|@ instruction CMP (x: r11|DWORD, y: [r13|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   32  <|@ instruction BRANCH trueDestinationProbability: 0.1293034473961897 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B2" "B37" "B39" 
    successors "B42" "B43" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  410  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  412  <|@ instruction rcx|DWORD[.] = MOV [r13|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  414  <|@ st <@st|@reference-map: [rcx:0, r13:0]
live-base-pointers: []
java.util.BitSet.set(BitSet.java:449) [bci: 41]
locals: r13|QWORD[.] r14|DWORD r10|DWORD 
>@ <|@ instruction CMP (x: r10|DWORD, y: [rcx|DWORD[.] * 8 + 12]) size: DWORD state [bci:41] <|@ <|@
      nr  416  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B41 -> B42 falseDestination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  418  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  420  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@64a8e7a9 encoding: base: 0 shift: 3 <|@ <|@
      nr  422  <|@ instruction rdx|QWORD = MOVE input: long[1|0x1] <|@ <|@
      nr  424  <|@ instruction rcx|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  426  <|@ instruction rdx|QWORD = SHL (x: rdx|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr  428  <|@ instruction rdx|QWORD = OR (x: rdx|QWORD, ~y: [rsi|QWORD[.] + r10|DWORD * 8 + 16]) size: QWORD <|@ <|@
      nr  430  <|@ instruction MOV (x: [rsi|QWORD[.] + r10|DWORD * 8 + 16], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  432  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B39" 
    xhandlers
    flags 
    probability 4593826667950625028
    begin_IR
      LIR
      nr   34  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   36  <|@ instruction r8|DWORD[.] = MOV [r13|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   38  <|@ st <@st|@reference-map: [r8:0, r13:0]
live-base-pointers: []
java.util.BitSet.set(BitSet.java:443) [bci: 0]
locals: r13|QWORD[.] r14|DWORD - 
>@ <|@ instruction r9|DWORD = MOV [r8|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   40  <|@ instruction CMP (x: r11|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr   42  <|@ instruction BRANCH trueDestinationProbability: 0.0010368489113086188 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B41" 
    xhandlers
    flags 
    probability 4593821837636870494
    begin_IR
      LIR
      nr  400  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  402  <|@ instruction MOV (x: [r13|QWORD[.] + 12], y: r11|DWORD) size: DWORD <|@ <|@
      nr  404  <|@ instruction JUMP ~[] destination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B9" 
    xhandlers
    flags 
    probability 4549078265301473639
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   46  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   48  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   50  <|@ instruction rcx|DWORD = SHL r9|DWORD size: DWORD <|@ <|@
      nr   52  <|@ instruction CMP (x: r11|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr   54  <|@ instruction rcx|DWORD = CMOVE (falseValue: rcx|DWORD, ~trueValue: r11|DWORD) condition: > <|@ <|@
      nr   56  <|@ instruction CMP rcx|DWORD y: 16777215 size: DWORD <|@ <|@
      nr   58  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B4 -> B5 falseDestination: B4 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B9" "B7" 
    xhandlers
    flags 
    probability 4548531658701817683
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   62  <|@ instruction rbx|DWORD = SHL rcx|DWORD y: 3 size: DWORD <|@ <|@
      nr   64  <|@ instruction rbx|DWORD = LEA [rbx|DWORD + 23] size: DWORD <|@ <|@
      nr   66  <|@ instruction rbx|DWORD = AND rbx|DWORD y: -8 size: DWORD <|@ <|@
      nr   68  <|@ instruction rbx|QWORD = MOVSXD rbx|DWORD size: QWORD <|@ <|@
      nr   70  <|@ instruction rdi|QWORD = ADD (x: rbx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr   72  <|@ instruction CMP (x: rdi|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr   74  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B5 -> B9 falseDestination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B10" 
    xhandlers
    flags 
    probability 4548442626358694106
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   92  <|@ instruction MOV (x: [r15|QWORD + 96], y: rdi|QWORD) size: QWORD <|@ <|@
      nr   94  <|@ instruction AMD64PREFETCH ~[rbx|QWORD + rsi|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr   96  <|@ instruction AMD64PREFETCH ~[rbx|QWORD + rsi|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   98  <|@ instruction AMD64PREFETCH ~[rbx|QWORD + rsi|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  100  <|@ instruction AMD64PREFETCH ~[rbx|QWORD + rsi|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  102  <|@ instruction MOV (x: [rsi|QWORD + 12], y: rcx|DWORD) size: DWORD <|@ <|@
      nr  104  <|@ instruction MOV [rsi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  106  <|@ instruction MOV [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[J, resolved>;compressed} <|@ <|@
      nr  108  <|@ instruction rsi|QWORD[.] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  110  <|@ instruction rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  112  <|@ instruction stack:28|DWORD[.] = MOVE r8|DWORD[.] moveKind: DWORD <|@ <|@
      nr  114  <|@ instruction stack:32|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  116  <|@ instruction stack:36|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  118  <|@ instruction stack:40|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  120  <|@ instruction stack:48|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  122  <|@ instruction r14|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  124  <|@ instruction r13|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  126  <|@ instruction JUMP ~[] destination: B7 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B7" "B9" 
    successors "B23" "B12" 
    xhandlers
    flags 
    probability 4549078265301473639
    begin_IR
      LIR
      nr  160  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  162  <|@ instruction CMP (x: r14|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  164  <|@ instruction rcx|DWORD = CMOVE (falseValue: r14|DWORD, ~trueValue: r13|DWORD) condition: > <|@ <|@
      nr  166  <|@ instruction r10|QWORD = MOVSXD rcx|DWORD size: QWORD <|@ <|@
      nr  168  <|@ instruction CMP r10|QWORD y: 1 size: QWORD <|@ <|@
      nr  170  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B10 -> B23 falseDestination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B17" "B15" 
    xhandlers
    flags 
    probability 4544574665674103143
    begin_IR
      LIR
      nr  176  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  178  <|@ instruction r8|DWORD[.] = MOVE stack:28|DWORD[.] moveKind: DWORD <|@ <|@
      nr  180  <|@ instruction r11|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  182  <|@ instruction r8|QWORD[*] = LEA [r8|DWORD[.] * 8 + 16] size: QWORD <|@ <|@
      nr  184  <|@ instruction r9|QWORD = LEA [r10|QWORD - 4] size: QWORD <|@ <|@
      nr  186  <|@ instruction TEST (x: r9|QWORD, y: r9|QWORD) size: QWORD <|@ <|@
      nr  192  <|@ instruction rcx|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  188  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B12 -> B17 falseDestination: B12 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B12" "B15" 
    successors "B20" "B19" 
    xhandlers
    flags 
    probability 4544574665674103143
    begin_IR
      LIR
      nr  218  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  220  <|@ instruction r9|QWORD = LEA [r10|QWORD - 2] size: QWORD <|@ <|@
      nr  222  <|@ instruction CMP (x: rcx|QWORD, y: r9|QWORD) size: QWORD <|@ <|@
      nr  224  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B17 -> B20 falseDestination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" 
    xhandlers
    flags 
    probability 4542544186689054234
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  232  <|@ instruction xmm0|V128_QWORD = H [r8|QWORD[*] + rcx|QWORD * 8] nZ: XMM oh: VMOVDQU <|@ <|@
      nr  234  <|@ instruction J (address: [r11|QWORD[.] + rcx|QWORD * 8], input: xmm0|V128_QWORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr  236  <|@ instruction r9|QWORD = LEA [rcx|QWORD + 2] size: QWORD <|@ <|@
      nr  238  <|@ instruction rcx|QWORD = MOVE r9|QWORD moveKind: QWORD <|@ <|@
      nr  240  <|@ instruction JUMP ~[] destination: B19 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" "B17" 
    successors "B23" "B22" 
    xhandlers
    flags 
    probability 4544574665674103143
    begin_IR
      LIR
      nr  242  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  244  <|@ instruction r9|QWORD = DEC r10|QWORD size: QWORD <|@ <|@
      nr  246  <|@ instruction CMP (x: rcx|QWORD, y: r9|QWORD) size: QWORD <|@ <|@
      nr  248  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B20 -> B23 falseDestination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4542544186689054234
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  256  <|@ instruction r8|QWORD = MOV [r8|QWORD[*] + rcx|QWORD * 8] size: QWORD <|@ <|@
      nr  258  <|@ instruction MOV (x: [r11|QWORD[.] + rcx|QWORD * 8], y: r8|QWORD) size: QWORD <|@ <|@
      nr  260  <|@ instruction JUMP ~[] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B10" "B22" "B20" 
    successors "B24" "B37" 
    xhandlers
    flags 
    probability 4549078265301473639
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  264  <|@ instruction r11|QWORD = MOVSXD r14|DWORD size: QWORD <|@ <|@
      nr  266  <|@ instruction CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  268  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B23 -> B24 falseDestination: B23 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B23" "B34" "B32" 
    successors "B41" 
    xhandlers
    flags 
    probability 4549078265301473639
    begin_IR
      LIR
      nr  372  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  366  <|@ instruction r11|DWORD = MOVE stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  368  <|@ instruction r10|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  374  <|@ instruction rax|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@64a8e7a9 encoding: base: 0 shift: 3 <|@ <|@
      nr  376  <|@ instruction MOV (x: [r10|QWORD[.] + 20], y: rax|DWORD[.]) size: DWORD <|@ <|@
      nr  378  <|@ instruction r13|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  380  <|@ instruction r8|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr  382  <|@ instruction MOVB (x: [r13|QWORD[*] + r8|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  384  <|@ instruction MOVB (x: [r10|QWORD[.] + 16], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  386  <|@ instruction MOV (x: [r10|QWORD[.] + 12], y: r11|DWORD) size: DWORD <|@ <|@
      nr  388  <|@ instruction r14|DWORD = MOVE stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  390  <|@ instruction r13|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  392  <|@ instruction r10|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  394  <|@ instruction JUMP ~[] destination: B37 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B29" "B27" 
    xhandlers
    flags 
    probability 4544574665674103143
    begin_IR
      LIR
      nr  270  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  272  <|@ instruction r8|QWORD[.] = LEA [rax|QWORD[.] + r10|QWORD * 8 + 16] size: QWORD <|@ <|@
      nr  274  <|@ instruction r11|QWORD = SUB (x: r11|QWORD, ~y: r10|QWORD) size: QWORD <|@ <|@
      nr  276  <|@ instruction r10|QWORD = LEA [r11|QWORD - 4] size: QWORD <|@ <|@
      nr  278  <|@ instruction TEST (x: r10|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  284  <|@ instruction r9|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  280  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B24 -> B29 falseDestination: B24 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B24" "B27" 
    successors "B32" "B31" 
    xhandlers
    flags 
    probability 4544574665674103143
    begin_IR
      LIR
      nr  310  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  312  <|@ instruction r10|QWORD = LEA [r11|QWORD - 2] size: QWORD <|@ <|@
      nr  314  <|@ instruction CMP (x: r9|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  316  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B29 -> B32 falseDestination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4542544186689054234
    begin_IR
      LIR
      nr  322  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  324  <|@ instruction xmm0|V128_QWORD = L oc: SIMD<0,0> <|@ <|@
      nr  326  <|@ instruction J (address: [r8|QWORD[.] + r9|QWORD * 8], input: xmm0|V128_QWORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr  328  <|@ instruction r10|QWORD = LEA [r9|QWORD + 2] size: QWORD <|@ <|@
      nr  330  <|@ instruction r9|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  332  <|@ instruction JUMP ~[] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B29" 
    successors "B37" "B34" 
    xhandlers
    flags 
    probability 4544574665674103143
    begin_IR
      LIR
      nr  334  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  336  <|@ instruction r11|QWORD = DEC r11|QWORD size: QWORD <|@ <|@
      nr  338  <|@ instruction CMP (x: r9|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  340  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B32 -> B37 falseDestination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B37" 
    xhandlers
    flags 
    probability 4542544186689054234
    begin_IR
      LIR
      nr  350  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  352  <|@ instruction MOV (x: [r8|QWORD[.] + r9|QWORD * 8], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  358  <|@ instruction JUMP ~[] destination: B34 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B12" "B15" 
    successors "B17" "B15" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4544574665674103143
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  204  <|@ instruction xmm0|V256_QWORD = H [r8|QWORD[*] + rcx|QWORD * 8] nZ: YMM oh: VMOVDQU <|@ <|@
      nr  206  <|@ instruction J (address: [r11|QWORD[.] + rcx|QWORD * 8], input: xmm0|V256_QWORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr  208  <|@ instruction rcx|QWORD = LEA [rcx|QWORD + 4] size: QWORD <|@ <|@
      nr  210  <|@ instruction CMP (x: rcx|QWORD, y: r9|QWORD) size: QWORD <|@ <|@
      nr  212  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B15 -> B17 falseDestination: B15 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B24" "B27" 
    successors "B29" "B27" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4544574665674103143
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  296  <|@ instruction xmm0|V256_QWORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr  298  <|@ instruction J (address: [r8|QWORD[.] + r9|QWORD * 8], input: xmm0|V256_QWORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr  300  <|@ instruction r9|QWORD = LEA [r9|QWORD + 4] size: QWORD <|@ <|@
      nr  302  <|@ instruction CMP (x: r9|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  304  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B27 -> B29 falseDestination: B27 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B4" "B5" 
    successors "B10" 
    xhandlers
    flags 
    probability 4534743870307766176
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  130  <|@ instruction stack:28|DWORD[.] = MOVE r8|DWORD[.] moveKind: DWORD <|@ <|@
      nr  132  <|@ instruction stack:32|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  134  <|@ instruction stack:36|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  136  <|@ instruction stack:40|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  138  <|@ instruction stack:48|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  144  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[J, resolved>} <|@ <|@
      nr  146  <|@ instruction rdx|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  148  <|@ instruction rbx|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  150  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  152  <|@ instruction r13|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  154  <|@ instruction r14|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  156  <|@ st <@st|@reference-map: [stack:0, stack:20]
live-base-pointers: []
java.util.BitSet.set(BitSet.java:443) [bci: 0]
locals: stack:48|QWORD[.] stack:40|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr  158  <|@ instruction JUMP ~[] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  434  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  436  <|@ instruction r11|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  438  <|@ instruction stack:40|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  440  <|@ instruction r10|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  442  <|@ instruction MOV [r15|QWORD + 668] y: -29211 size: DWORD <|@ <|@
      nr  444  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  446  <|@ st <@st|@reference-map: [r10:0]
live-base-pointers: []
java.util.BitSet.set(BitSet.java:449) [bci: 41]
locals: r10|QWORD[.] stack:40|DWORD r11|DWORD 
>@ <|@ instruction DEOPT info [bci:41] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   16  <|@ instruction r10|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr   18  <|@ instruction MOV [r15|QWORD + 668] y: -22803 size: DWORD <|@ <|@
      nr   20  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   22  <|@ st <@st|@reference-map: [r10:0]
live-base-pointers: []
java.util.BitSet.set(BitSet.java:443) [bci: 0]
locals: r10|QWORD[.] r14|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_1       
     1: ifge          31
     4: new           #42         // java.lang.IndexOutOfBoundsException
     7: dup           
     8: new           #11         // java.lang.StringBuilder
    11: dup           
    12: invokespecial #7          // java.lang.StringBuilder.<init>:()void
    15: ldc           #48         // "bitIndex < 0: "
    17: invokevirtual #8          // java.lang.StringBuilder.append:(java.lang.String)java.lang.StringBuilder
    20: iload_1       
    21: invokevirtual #9          // java.lang.StringBuilder.append:(int)java.lang.StringBuilder
    24: invokevirtual #10         // java.lang.StringBuilder.toString:()java.lang.String
    27: invokespecial #34         // java.lang.IndexOutOfBoundsException.<init>:(java.lang.String)void
    30: athrow        
    31: iload_1       
    32: invokestatic  #12         // wordIndex:(int)int
    35: istore_2      
    36: aload_0       
    37: iload_2       
    38: invokespecial #35         // expandTo:(int)void
    41: aload_0       
    42: getfield      #2          // words:long[]
    45: iload_2       
    46: dup2          
    47: laload        
    48: lconst_1      
    49: iload_1       
    50: lshl          
    51: lor           
    52: lastore       
    53: aload_0       
    54: invokespecial #13         // checkInvariants:()void
    57: return        
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849c1e203493bc20f85efffffff900f1f80000000000f1f800000000089842400c0feff4883ec2848896c24204c8bee448bf24585f60f8cb5020000458bd641c1fa06458bda41ffc3453b5d0c0f8f42000000418b4d14443b14cd0c0000000f83690200008bf148c1e60348c7c201000000418bce48d3e24a0b54d6104a8954d610488b6c24204883c428850500000000c5f877c3458b4514468b0cc50c000000453bd90f8f0600000045895d0ceba3498b7760498b5770418bc9d1e1443bd9410f4fcb81f9ffffff000f83c20100008bd9c1e3038d5b1783e3f84863db488bfb4803fe483bfa0f87a501000049897f600f188433c00000000f188433000100000f188433400100000f18843380010000894e0c48c70601000000c74608addeadde488bc6448944241444895c2410448954240c44897424084c892c24448bf1458be9453bf5418bce410f4fcd4c63d14983fa010f8c5c000000448b4424144c8d58104e8d04c5100000004d8d4afc4d85c948c7c1000000000f8dde0000004d8d4afe493bc90f8f13000000c4c17a6f04c8c4c17a7f04cb4c8d4902498bc94d8bca49ffc9493bc90f8f080000004d8b04c84d8904cb4d63de4d3bda0f8f41000000448b5c24104c8b142448c1e803418942144d8bea49c1ed0949b800e01b170100000047886405004588621045895a0c448b7424084d8bea448b54240ce950feffff4e8d44d0104d2bda4d8d53fc4d85d249c7c1000000000f8d5e0000004d8d53fe4d3bca0f8f11000000c5f9efc0c4817a7f04c84d8d51024d8bca49ffcb4d3bcb0f8f79ffffff4f8924c8e970ffffff6666660f1f840000000000c4c17e6f04c8c4c17e7f04cb488d4904493bc97eebe908ffffff660f1f440000c5f9efc0c4817e7f04c84d8d49044d3bca7eedeb8d448944241444895c2410448954240c44897424084c892c2448beaddeaddeaddeadde8bd18bd9b900000000458be9448bf3e80000000090e975feffff458bda44897424084d8bd541c7879c020000e58dffff4d89a7a8020000e800000000904d8bd541c7879c020000eda6ffff4d89a7a8020000e80000000090e80000000090e80000000090  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@375d8fa slotKind: QWORD  <||@
  Comment 48 6 r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 51 8 r14|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 54 10 TEST (x: r14|DWORD, y: r14|DWORD) size: DWORD  <||@
  Comment 57 12 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2  <||@
  Comment 63 block B2 null  <||@
  Comment 63 24 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 63 26 r10|DWORD = SAR r14|DWORD y: 6 size: DWORD  <||@
  Comment 70 28 r11|DWORD = INC r10|DWORD size: DWORD  <||@
  Comment 76 30 CMP (x: r11|DWORD, y: [r13|QWORD[.] + 12]) size: DWORD  <||@
  Comment 80 32 BRANCH trueDestinationProbability: 0.1293034473961897 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B41  <||@
  Comment 86 block B41 null  <||@
  Comment 86 410 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 86 412 rcx|DWORD[.] = MOV [r13|QWORD[.] + 20] size: DWORD  <||@
  Comment 90 414 CMP (x: r10|DWORD, y: [rcx|DWORD[.] * 8 + 12]) size: DWORD state [bci:41]  <||@
  Comment 90 [rcx:0, r13:0]at java.util.BitSet.set(BitSet.java:449) [bci: 41, duringCall: false, rethrow: false]
              |0             |1          |2         
     locals:  |r13|QWORD[.]  |r14|DWORD  |r10|DWORD   <||@
  Comment 90 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 98 416 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B41 -> B42 falseDestination: B41 -> B43  <||@
  Comment 104 block B42 null  <||@
  Comment 104 418 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 104 420 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@64a8e7a9 encoding: base: 0 shift: 3  <||@
  Comment 110 422 rdx|QWORD = MOVE input: long[1|0x1]  <||@
  Comment 117 424 rcx|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 120 426 rdx|QWORD = SHL (x: rdx|QWORD, ~y: rcx|DWORD) size: QWORD  <||@
  Comment 123 428 rdx|QWORD = OR (x: rdx|QWORD, ~y: [rsi|QWORD[.] + r10|DWORD * 8 + 16]) size: QWORD  <||@
  Comment 128 430 MOV (x: [rsi|QWORD[.] + r10|DWORD * 8 + 16], y: rdx|QWORD) size: QWORD  <||@
  Comment 133 432 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 142 12  <||@
  Comment 152 block B3 null  <||@
  Comment 152 34 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 152 36 r8|DWORD[.] = MOV [r13|QWORD[.] + 20] size: DWORD  <||@
  Comment 156 38 r9|DWORD = MOV [r8|DWORD[.] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 156 [r8:0, r13:0]at java.util.BitSet.set(BitSet.java:443) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2 
     locals:  |r13|QWORD[.]  |r14|DWORD  |-   <||@
  Comment 156 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 164 40 CMP (x: r11|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 167 42 BRANCH trueDestinationProbability: 0.0010368489113086188 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B39  <||@
  Comment 173 block B39 null  <||@
  Comment 173 400 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 173 402 MOV (x: [r13|QWORD[.] + 12], y: r11|DWORD) size: DWORD  <||@
  Comment 177 404 JUMP ~[] destination: B39 -> B41  <||@
  Comment 179 block B4 null  <||@
  Comment 179 44 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 179 46 rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 183 48 rdx|QWORD = MOV [r15|QWORD + 112] size: QWORD  <||@
  Comment 187 50 rcx|DWORD = SHL r9|DWORD size: DWORD  <||@
  Comment 192 52 CMP (x: r11|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 195 54 rcx|DWORD = CMOVE (falseValue: rcx|DWORD, ~trueValue: r11|DWORD) condition: >  <||@
  Comment 199 56 CMP rcx|DWORD y: 16777215 size: DWORD  <||@
  Comment 205 58 BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B4 -> B5 falseDestination: B4 -> B9  <||@
  Comment 211 block B5 null  <||@
  Comment 211 60 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 211 62 rbx|DWORD = SHL rcx|DWORD y: 3 size: DWORD  <||@
  Comment 216 64 rbx|DWORD = LEA [rbx|DWORD + 23] size: DWORD  <||@
  Comment 219 66 rbx|DWORD = AND rbx|DWORD y: -8 size: DWORD  <||@
  Comment 222 68 rbx|QWORD = MOVSXD rbx|DWORD size: QWORD  <||@
  Comment 225 70 rdi|QWORD = ADD (x: rbx|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 231 72 CMP (x: rdi|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 234 74 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B5 -> B9 falseDestination: B5 -> B7  <||@
  Comment 240 block B7 null  <||@
  Comment 240 90 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 240 92 MOV (x: [r15|QWORD + 96], y: rdi|QWORD) size: QWORD  <||@
  Comment 244 94 AMD64PREFETCH ~[rbx|QWORD + rsi|QWORD * 1 + 192] instr: 0  <||@
  Comment 252 96 AMD64PREFETCH ~[rbx|QWORD + rsi|QWORD * 1 + 256] instr: 0  <||@
  Comment 260 98 AMD64PREFETCH ~[rbx|QWORD + rsi|QWORD * 1 + 320] instr: 0  <||@
  Comment 268 100 AMD64PREFETCH ~[rbx|QWORD + rsi|QWORD * 1 + 384] instr: 0  <||@
  Comment 276 102 MOV (x: [rsi|QWORD + 12], y: rcx|DWORD) size: DWORD  <||@
  Comment 279 104 MOV [rsi|QWORD] y: 1 size: QWORD  <||@
  Comment 286 106 MOV [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[J, resolved>;compressed}  <||@
  Comment 286 {meta{HotSpotType<[J, resolved>;compressed}}  <||@
  Comment 293 108 rsi|QWORD[.] = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 293 110 rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 296 112 stack:28|DWORD[.] = MOVE r8|DWORD[.] moveKind: DWORD  <||@
  Comment 301 114 stack:32|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 306 116 stack:36|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 311 118 stack:40|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 316 120 stack:48|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 320 122 r14|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 323 124 r13|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 326 126 JUMP ~[] destination: B7 -> B10  <||@
  Comment 326 block B10 null  <||@
  Comment 326 160 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 326 162 CMP (x: r14|DWORD, y: r13|DWORD) size: DWORD  <||@
  Comment 329 164 rcx|DWORD = CMOVE (falseValue: r14|DWORD, ~trueValue: r13|DWORD) condition: >  <||@
  Comment 336 166 r10|QWORD = MOVSXD rcx|DWORD size: QWORD  <||@
  Comment 339 168 CMP r10|QWORD y: 1 size: QWORD  <||@
  Comment 343 170 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B10 -> B23 falseDestination: B10 -> B12  <||@
  Comment 349 block B12 null  <||@
  Comment 349 176 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 349 178 r8|DWORD[.] = MOVE stack:28|DWORD[.] moveKind: DWORD  <||@
  Comment 354 180 r11|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD  <||@
  Comment 358 182 r8|QWORD[*] = LEA [r8|DWORD[.] * 8 + 16] size: QWORD  <||@
  Comment 366 184 r9|QWORD = LEA [r10|QWORD - 4] size: QWORD  <||@
  Comment 370 186 TEST (x: r9|QWORD, y: r9|QWORD) size: QWORD  <||@
  Comment 373 192 rcx|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 380 188 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B12 -> B17 falseDestination: B12 -> B15  <||@
  Comment 386 block B17 null  <||@
  Comment 386 218 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 386 220 r9|QWORD = LEA [r10|QWORD - 2] size: QWORD  <||@
  Comment 390 222 CMP (x: rcx|QWORD, y: r9|QWORD) size: QWORD  <||@
  Comment 393 224 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B17 -> B20 falseDestination: B17 -> B19  <||@
  Comment 399 block B19 null  <||@
  Comment 399 230 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 399 232 xmm0|V128_QWORD = H [r8|QWORD[*] + rcx|QWORD * 8] nZ: XMM oh: VMOVDQU  <||@
  Comment 405 234 J (address: [r11|QWORD[.] + rcx|QWORD * 8], input: xmm0|V128_QWORD) nZ: XMM oh: VMOVDQU  <||@
  Comment 411 236 r9|QWORD = LEA [rcx|QWORD + 2] size: QWORD  <||@
  Comment 415 238 rcx|QWORD = MOVE r9|QWORD moveKind: QWORD  <||@
  Comment 418 240 JUMP ~[] destination: B19 -> B20  <||@
  Comment 418 block B20 null  <||@
  Comment 418 242 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 418 244 r9|QWORD = DEC r10|QWORD size: QWORD  <||@
  Comment 424 246 CMP (x: rcx|QWORD, y: r9|QWORD) size: QWORD  <||@
  Comment 427 248 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B20 -> B23 falseDestination: B20 -> B22  <||@
  Comment 433 block B22 null  <||@
  Comment 433 254 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 433 256 r8|QWORD = MOV [r8|QWORD[*] + rcx|QWORD * 8] size: QWORD  <||@
  Comment 437 258 MOV (x: [r11|QWORD[.] + rcx|QWORD * 8], y: r8|QWORD) size: QWORD  <||@
  Comment 441 260 JUMP ~[] destination: B22 -> B23  <||@
  Comment 441 block B23 null  <||@
  Comment 441 262 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 441 264 r11|QWORD = MOVSXD r14|DWORD size: QWORD  <||@
  Comment 444 266 CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 447 268 BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B23 -> B24 falseDestination: B23 -> B37  <||@
  Comment 453 block B37 null  <||@
  Comment 453 372 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 453 366 r11|DWORD = MOVE stack:32|DWORD moveKind: DWORD  <||@
  Comment 458 368 r10|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 462 374 rax|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@64a8e7a9 encoding: base: 0 shift: 3  <||@
  Comment 466 376 MOV (x: [r10|QWORD[.] + 20], y: rax|DWORD[.]) size: DWORD  <||@
  Comment 470 378 r13|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD  <||@
  Comment 477 380 r8|QWORD = MOVE input: long[4682670080|0x1171be000]  <||@
  Comment 487 382 MOVB (x: [r13|QWORD[*] + r8|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 492 384 MOVB (x: [r10|QWORD[.] + 16], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 496 386 MOV (x: [r10|QWORD[.] + 12], y: r11|DWORD) size: DWORD  <||@
  Comment 500 388 r14|DWORD = MOVE stack:40|DWORD moveKind: DWORD  <||@
  Comment 505 390 r13|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 508 392 r10|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 513 394 JUMP ~[] destination: B37 -> B41  <||@
  Comment 518 block B24 null  <||@
  Comment 518 270 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 518 272 r8|QWORD[.] = LEA [rax|QWORD[.] + r10|QWORD * 8 + 16] size: QWORD  <||@
  Comment 523 274 r11|QWORD = SUB (x: r11|QWORD, ~y: r10|QWORD) size: QWORD  <||@
  Comment 526 276 r10|QWORD = LEA [r11|QWORD - 4] size: QWORD  <||@
  Comment 530 278 TEST (x: r10|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 533 284 r9|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 540 280 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B24 -> B29 falseDestination: B24 -> B27  <||@
  Comment 546 block B29 null  <||@
  Comment 546 310 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 546 312 r10|QWORD = LEA [r11|QWORD - 2] size: QWORD  <||@
  Comment 550 314 CMP (x: r9|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 553 316 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B29 -> B32 falseDestination: B29 -> B31  <||@
  Comment 559 block B31 null  <||@
  Comment 559 322 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 559 324 xmm0|V128_QWORD = L oc: SIMD<0,0>  <||@
  Comment 563 326 J (address: [r8|QWORD[.] + r9|QWORD * 8], input: xmm0|V128_QWORD) nZ: XMM oh: VMOVDQU  <||@
  Comment 569 328 r10|QWORD = LEA [r9|QWORD + 2] size: QWORD  <||@
  Comment 573 330 r9|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 576 332 JUMP ~[] destination: B31 -> B32  <||@
  Comment 576 block B32 null  <||@
  Comment 576 334 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 576 336 r11|QWORD = DEC r11|QWORD size: QWORD  <||@
  Comment 579 338 CMP (x: r9|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 582 340 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B32 -> B37 falseDestination: B32 -> B34  <||@
  Comment 588 block B34 null  <||@
  Comment 588 350 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 588 352 MOV (x: [r8|QWORD[.] + r9|QWORD * 8], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 592 358 JUMP ~[] destination: B34 -> B37  <||@
  Comment 597 block B15 loop 0 depth 1 header:335|LoopBegin  <||@
  Comment 597 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 608 204 xmm0|V256_QWORD = H [r8|QWORD[*] + rcx|QWORD * 8] nZ: YMM oh: VMOVDQU  <||@
  Comment 614 206 J (address: [r11|QWORD[.] + rcx|QWORD * 8], input: xmm0|V256_QWORD) nZ: YMM oh: VMOVDQU  <||@
  Comment 620 208 rcx|QWORD = LEA [rcx|QWORD + 4] size: QWORD  <||@
  Comment 624 210 CMP (x: rcx|QWORD, y: r9|QWORD) size: QWORD  <||@
  Comment 627 212 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B15 -> B17 falseDestination: B15 -> B15  <||@
  Comment 634 block B27 loop 1 depth 1 header:381|LoopBegin  <||@
  Comment 634 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 640 296 xmm0|V256_QWORD = L oc: SIMD<0,0,0,0>  <||@
  Comment 644 298 J (address: [r8|QWORD[.] + r9|QWORD * 8], input: xmm0|V256_QWORD) nZ: YMM oh: VMOVDQU  <||@
  Comment 650 300 r9|QWORD = LEA [r9|QWORD + 4] size: QWORD  <||@
  Comment 654 302 CMP (x: r9|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 657 304 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B27 -> B29 falseDestination: B27 -> B27  <||@
  Comment 661 block B9 null  <||@
  Comment 661 142 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 661 130 stack:28|DWORD[.] = MOVE r8|DWORD[.] moveKind: DWORD  <||@
  Comment 666 132 stack:32|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 671 134 stack:36|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 676 136 stack:40|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 681 138 stack:48|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 685 144 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[J, resolved>}  <||@
  Comment 685 {meta{HotSpotType<[J, resolved>}}  <||@
  Comment 695 146 rdx|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 697 148 rbx|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 699 150 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 704 152 r13|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 707 154 r14|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 710 156 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0]  <||@
  Comment 710 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 715 [stack:0, stack:20]at java.util.BitSet.set(BitSet.java:443) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1               |2 
     locals:  |stack:48|QWORD[.]  |stack:40|DWORD  |-   <||@
  Comment 716 158 JUMP ~[] destination: B9 -> B10  <||@
  Comment 721 block B43 null  <||@
  Comment 721 434 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 721 436 r11|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 724 438 stack:40|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 729 440 r10|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 732 442 MOV [r15|QWORD + 668] y: -29211 size: DWORD  <||@
  Comment 743 444 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 750 446 DEOPT info [bci:41]  <||@
  Comment 750 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 755 [r10:0]at java.util.BitSet.set(BitSet.java:449) [bci: 41, duringCall: false, rethrow: false]
              |0             |1               |2         
     locals:  |r10|QWORD[.]  |stack:40|DWORD  |r11|DWORD   <||@
  Comment 756 block B1 null  <||@
  Comment 756 14 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 756 16 r10|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 759 18 MOV [r15|QWORD + 668] y: -22803 size: DWORD  <||@
  Comment 770 20 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 777 22 DEOPT info [bci:0]  <||@
  Comment 777 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 782 [r10:0]at java.util.BitSet.set(BitSet.java:443) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2 
     locals:  |r10|QWORD[.]  |r14|DWORD  |-   <||@
  Comment 783 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 783 4  <||@
  Comment 789 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 789 5  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-7499[java.util.BitSet.set(int)]"
  method "HotSpotCompilation-7499[java.util.BitSet.set(int)]"
  date 1527005185560
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 107aea520 448b560849c1e203493bc20f852fb9d1fe900f1f80000000000f1f800000000089842400c0feff4883ec2848896c24204c8bee448bf24585f60f8cb5020000458bd641c1fa06458bda41ffc3453b5d0c0f8f42000000418b4d14443b14cd0c0000000f83690200008bf148c1e60348c7c201000000418bce48d3e24a0b54d6104a8954d610488b6c24204883c4288505524adafcc5f877c3458b4514468b0cc50c000000453bd90f8f0600000045895d0ceba3498b7760498b5770418bc9d1e1443bd9410f4fcb81f9ffffff000f83c20100008bd9c1e3038d5b1783e3f84863db488bfb4803fe483bfa0f87a501000049897f600f188433c00000000f188433000100000f188433400100000f18843380010000894e0c48c70601000000c74608a90100f8488bc6448944241444895c2410448954240c44897424084c892c24448bf1458be9453bf5418bce410f4fcd4c63d14983fa010f8c5c000000448b4424144c8d58104e8d04c5100000004d8d4afc4d85c948c7c1000000000f8dde0000004d8d4afe493bc90f8f13000000c4c17a6f04c8c4c17a7f04cb4c8d4902498bc94d8bca49ffc9493bc90f8f080000004d8b04c84d8904cb4d63de4d3bda0f8f41000000448b5c24104c8b142448c1e803418942144d8bea49c1ed0949b800e01b170100000047886405004588621045895a0c448b7424084d8bea448b54240ce950feffff4e8d44d0104d2bda4d8d53fc4d85d249c7c1000000000f8d5e0000004d8d53fe4d3bca0f8f11000000c5f9efc0c4817a7f04c84d8d51024d8bca49ffcb4d3bcb0f8f79ffffff4f8924c8e970ffffff6666660f1f840000000000c4c17e6f04c8c4c17e7f04cb488d4904493bc97eebe908ffffff660f1f440000c5f9efc0c4817e7f04c84d8d49044d3bca7eedeb8d448944241444895c2410448954240c44897424084c892c2448be480d00c0070000008bd18bd9b900000000458be9448bf3e8f5c54aff90e975feffff458bda44897424084d8bd541c7879c020000e58dffff4d89a7a8020000e8ebcdd1fe904d8bd541c7879c020000eda6ffff4d89a7a8020000e8d0cdd1fe90e8ecfd15ff90e8c6ccd1fe90f4f4f4f4f4  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@375d8fa slotKind: QWORD  <||@
  Comment 48 6 r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 51 8 r14|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 54 10 TEST (x: r14|DWORD, y: r14|DWORD) size: DWORD  <||@
  Comment 57 12 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2  <||@
  Comment 63 block B2 null  <||@
  Comment 63 24 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 63 26 r10|DWORD = SAR r14|DWORD y: 6 size: DWORD  <||@
  Comment 70 28 r11|DWORD = INC r10|DWORD size: DWORD  <||@
  Comment 76 30 CMP (x: r11|DWORD, y: [r13|QWORD[.] + 12]) size: DWORD  <||@
  Comment 80 32 BRANCH trueDestinationProbability: 0.1293034473961897 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B41  <||@
  Comment 86 block B41 null  <||@
  Comment 86 410 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 86 412 rcx|DWORD[.] = MOV [r13|QWORD[.] + 20] size: DWORD  <||@
  Comment 90 414 CMP (x: r10|DWORD, y: [rcx|DWORD[.] * 8 + 12]) size: DWORD state [bci:41]  <||@
  Comment 90 [rcx:0, r13:0]at java.util.BitSet.set(BitSet.java:449) [bci: 41, duringCall: false, rethrow: false]
              |0             |1          |2         
     locals:  |r13|QWORD[.]  |r14|DWORD  |r10|DWORD   <||@
  Comment 90 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 98 416 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B41 -> B42 falseDestination: B41 -> B43  <||@
  Comment 104 block B42 null  <||@
  Comment 104 418 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 104 420 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@64a8e7a9 encoding: base: 0 shift: 3  <||@
  Comment 110 422 rdx|QWORD = MOVE input: long[1|0x1]  <||@
  Comment 117 424 rcx|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 120 426 rdx|QWORD = SHL (x: rdx|QWORD, ~y: rcx|DWORD) size: QWORD  <||@
  Comment 123 428 rdx|QWORD = OR (x: rdx|QWORD, ~y: [rsi|QWORD[.] + r10|DWORD * 8 + 16]) size: QWORD  <||@
  Comment 128 430 MOV (x: [rsi|QWORD[.] + r10|DWORD * 8 + 16], y: rdx|QWORD) size: QWORD  <||@
  Comment 133 432 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 142 12  <||@
  Comment 152 block B3 null  <||@
  Comment 152 34 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 152 36 r8|DWORD[.] = MOV [r13|QWORD[.] + 20] size: DWORD  <||@
  Comment 156 38 r9|DWORD = MOV [r8|DWORD[.] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 156 [r8:0, r13:0]at java.util.BitSet.set(BitSet.java:443) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2 
     locals:  |r13|QWORD[.]  |r14|DWORD  |-   <||@
  Comment 156 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 164 40 CMP (x: r11|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 167 42 BRANCH trueDestinationProbability: 0.0010368489113086188 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B39  <||@
  Comment 173 block B39 null  <||@
  Comment 173 400 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 173 402 MOV (x: [r13|QWORD[.] + 12], y: r11|DWORD) size: DWORD  <||@
  Comment 177 404 JUMP ~[] destination: B39 -> B41  <||@
  Comment 179 block B4 null  <||@
  Comment 179 44 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 179 46 rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 183 48 rdx|QWORD = MOV [r15|QWORD + 112] size: QWORD  <||@
  Comment 187 50 rcx|DWORD = SHL r9|DWORD size: DWORD  <||@
  Comment 192 52 CMP (x: r11|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 195 54 rcx|DWORD = CMOVE (falseValue: rcx|DWORD, ~trueValue: r11|DWORD) condition: >  <||@
  Comment 199 56 CMP rcx|DWORD y: 16777215 size: DWORD  <||@
  Comment 205 58 BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B4 -> B5 falseDestination: B4 -> B9  <||@
  Comment 211 block B5 null  <||@
  Comment 211 60 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 211 62 rbx|DWORD = SHL rcx|DWORD y: 3 size: DWORD  <||@
  Comment 216 64 rbx|DWORD = LEA [rbx|DWORD + 23] size: DWORD  <||@
  Comment 219 66 rbx|DWORD = AND rbx|DWORD y: -8 size: DWORD  <||@
  Comment 222 68 rbx|QWORD = MOVSXD rbx|DWORD size: QWORD  <||@
  Comment 225 70 rdi|QWORD = ADD (x: rbx|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 231 72 CMP (x: rdi|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 234 74 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B5 -> B9 falseDestination: B5 -> B7  <||@
  Comment 240 block B7 null  <||@
  Comment 240 90 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 240 92 MOV (x: [r15|QWORD + 96], y: rdi|QWORD) size: QWORD  <||@
  Comment 244 94 AMD64PREFETCH ~[rbx|QWORD + rsi|QWORD * 1 + 192] instr: 0  <||@
  Comment 252 96 AMD64PREFETCH ~[rbx|QWORD + rsi|QWORD * 1 + 256] instr: 0  <||@
  Comment 260 98 AMD64PREFETCH ~[rbx|QWORD + rsi|QWORD * 1 + 320] instr: 0  <||@
  Comment 268 100 AMD64PREFETCH ~[rbx|QWORD + rsi|QWORD * 1 + 384] instr: 0  <||@
  Comment 276 102 MOV (x: [rsi|QWORD + 12], y: rcx|DWORD) size: DWORD  <||@
  Comment 279 104 MOV [rsi|QWORD] y: 1 size: QWORD  <||@
  Comment 286 106 MOV [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[J, resolved>;compressed}  <||@
  Comment 286 {meta{HotSpotType<[J, resolved>;compressed}}  <||@
  Comment 293 108 rsi|QWORD[.] = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 293 110 rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 296 112 stack:28|DWORD[.] = MOVE r8|DWORD[.] moveKind: DWORD  <||@
  Comment 301 114 stack:32|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 306 116 stack:36|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 311 118 stack:40|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 316 120 stack:48|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 320 122 r14|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 323 124 r13|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 326 126 JUMP ~[] destination: B7 -> B10  <||@
  Comment 326 block B10 null  <||@
  Comment 326 160 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 326 162 CMP (x: r14|DWORD, y: r13|DWORD) size: DWORD  <||@
  Comment 329 164 rcx|DWORD = CMOVE (falseValue: r14|DWORD, ~trueValue: r13|DWORD) condition: >  <||@
  Comment 336 166 r10|QWORD = MOVSXD rcx|DWORD size: QWORD  <||@
  Comment 339 168 CMP r10|QWORD y: 1 size: QWORD  <||@
  Comment 343 170 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B10 -> B23 falseDestination: B10 -> B12  <||@
  Comment 349 block B12 null  <||@
  Comment 349 176 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 349 178 r8|DWORD[.] = MOVE stack:28|DWORD[.] moveKind: DWORD  <||@
  Comment 354 180 r11|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD  <||@
  Comment 358 182 r8|QWORD[*] = LEA [r8|DWORD[.] * 8 + 16] size: QWORD  <||@
  Comment 366 184 r9|QWORD = LEA [r10|QWORD - 4] size: QWORD  <||@
  Comment 370 186 TEST (x: r9|QWORD, y: r9|QWORD) size: QWORD  <||@
  Comment 373 192 rcx|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 380 188 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B12 -> B17 falseDestination: B12 -> B15  <||@
  Comment 386 block B17 null  <||@
  Comment 386 218 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 386 220 r9|QWORD = LEA [r10|QWORD - 2] size: QWORD  <||@
  Comment 390 222 CMP (x: rcx|QWORD, y: r9|QWORD) size: QWORD  <||@
  Comment 393 224 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B17 -> B20 falseDestination: B17 -> B19  <||@
  Comment 399 block B19 null  <||@
  Comment 399 230 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 399 232 xmm0|V128_QWORD = H [r8|QWORD[*] + rcx|QWORD * 8] nZ: XMM oh: VMOVDQU  <||@
  Comment 405 234 J (address: [r11|QWORD[.] + rcx|QWORD * 8], input: xmm0|V128_QWORD) nZ: XMM oh: VMOVDQU  <||@
  Comment 411 236 r9|QWORD = LEA [rcx|QWORD + 2] size: QWORD  <||@
  Comment 415 238 rcx|QWORD = MOVE r9|QWORD moveKind: QWORD  <||@
  Comment 418 240 JUMP ~[] destination: B19 -> B20  <||@
  Comment 418 block B20 null  <||@
  Comment 418 242 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 418 244 r9|QWORD = DEC r10|QWORD size: QWORD  <||@
  Comment 424 246 CMP (x: rcx|QWORD, y: r9|QWORD) size: QWORD  <||@
  Comment 427 248 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B20 -> B23 falseDestination: B20 -> B22  <||@
  Comment 433 block B22 null  <||@
  Comment 433 254 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 433 256 r8|QWORD = MOV [r8|QWORD[*] + rcx|QWORD * 8] size: QWORD  <||@
  Comment 437 258 MOV (x: [r11|QWORD[.] + rcx|QWORD * 8], y: r8|QWORD) size: QWORD  <||@
  Comment 441 260 JUMP ~[] destination: B22 -> B23  <||@
  Comment 441 block B23 null  <||@
  Comment 441 262 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 441 264 r11|QWORD = MOVSXD r14|DWORD size: QWORD  <||@
  Comment 444 266 CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 447 268 BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B23 -> B24 falseDestination: B23 -> B37  <||@
  Comment 453 block B37 null  <||@
  Comment 453 372 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 453 366 r11|DWORD = MOVE stack:32|DWORD moveKind: DWORD  <||@
  Comment 458 368 r10|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 462 374 rax|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@64a8e7a9 encoding: base: 0 shift: 3  <||@
  Comment 466 376 MOV (x: [r10|QWORD[.] + 20], y: rax|DWORD[.]) size: DWORD  <||@
  Comment 470 378 r13|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD  <||@
  Comment 477 380 r8|QWORD = MOVE input: long[4682670080|0x1171be000]  <||@
  Comment 487 382 MOVB (x: [r13|QWORD[*] + r8|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 492 384 MOVB (x: [r10|QWORD[.] + 16], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 496 386 MOV (x: [r10|QWORD[.] + 12], y: r11|DWORD) size: DWORD  <||@
  Comment 500 388 r14|DWORD = MOVE stack:40|DWORD moveKind: DWORD  <||@
  Comment 505 390 r13|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 508 392 r10|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 513 394 JUMP ~[] destination: B37 -> B41  <||@
  Comment 518 block B24 null  <||@
  Comment 518 270 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 518 272 r8|QWORD[.] = LEA [rax|QWORD[.] + r10|QWORD * 8 + 16] size: QWORD  <||@
  Comment 523 274 r11|QWORD = SUB (x: r11|QWORD, ~y: r10|QWORD) size: QWORD  <||@
  Comment 526 276 r10|QWORD = LEA [r11|QWORD - 4] size: QWORD  <||@
  Comment 530 278 TEST (x: r10|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 533 284 r9|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 540 280 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B24 -> B29 falseDestination: B24 -> B27  <||@
  Comment 546 block B29 null  <||@
  Comment 546 310 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 546 312 r10|QWORD = LEA [r11|QWORD - 2] size: QWORD  <||@
  Comment 550 314 CMP (x: r9|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 553 316 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B29 -> B32 falseDestination: B29 -> B31  <||@
  Comment 559 block B31 null  <||@
  Comment 559 322 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 559 324 xmm0|V128_QWORD = L oc: SIMD<0,0>  <||@
  Comment 563 326 J (address: [r8|QWORD[.] + r9|QWORD * 8], input: xmm0|V128_QWORD) nZ: XMM oh: VMOVDQU  <||@
  Comment 569 328 r10|QWORD = LEA [r9|QWORD + 2] size: QWORD  <||@
  Comment 573 330 r9|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 576 332 JUMP ~[] destination: B31 -> B32  <||@
  Comment 576 block B32 null  <||@
  Comment 576 334 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 576 336 r11|QWORD = DEC r11|QWORD size: QWORD  <||@
  Comment 579 338 CMP (x: r9|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 582 340 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B32 -> B37 falseDestination: B32 -> B34  <||@
  Comment 588 block B34 null  <||@
  Comment 588 350 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 588 352 MOV (x: [r8|QWORD[.] + r9|QWORD * 8], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 592 358 JUMP ~[] destination: B34 -> B37  <||@
  Comment 597 block B15 loop 0 depth 1 header:335|LoopBegin  <||@
  Comment 597 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 608 204 xmm0|V256_QWORD = H [r8|QWORD[*] + rcx|QWORD * 8] nZ: YMM oh: VMOVDQU  <||@
  Comment 614 206 J (address: [r11|QWORD[.] + rcx|QWORD * 8], input: xmm0|V256_QWORD) nZ: YMM oh: VMOVDQU  <||@
  Comment 620 208 rcx|QWORD = LEA [rcx|QWORD + 4] size: QWORD  <||@
  Comment 624 210 CMP (x: rcx|QWORD, y: r9|QWORD) size: QWORD  <||@
  Comment 627 212 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B15 -> B17 falseDestination: B15 -> B15  <||@
  Comment 634 block B27 loop 1 depth 1 header:381|LoopBegin  <||@
  Comment 634 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 640 296 xmm0|V256_QWORD = L oc: SIMD<0,0,0,0>  <||@
  Comment 644 298 J (address: [r8|QWORD[.] + r9|QWORD * 8], input: xmm0|V256_QWORD) nZ: YMM oh: VMOVDQU  <||@
  Comment 650 300 r9|QWORD = LEA [r9|QWORD + 4] size: QWORD  <||@
  Comment 654 302 CMP (x: r9|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 657 304 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B27 -> B29 falseDestination: B27 -> B27  <||@
  Comment 661 block B9 null  <||@
  Comment 661 142 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 661 130 stack:28|DWORD[.] = MOVE r8|DWORD[.] moveKind: DWORD  <||@
  Comment 666 132 stack:32|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 671 134 stack:36|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 676 136 stack:40|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 681 138 stack:48|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 685 144 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[J, resolved>}  <||@
  Comment 685 {meta{HotSpotType<[J, resolved>}}  <||@
  Comment 695 146 rdx|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 697 148 rbx|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 699 150 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 704 152 r13|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 707 154 r14|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 710 156 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0]  <||@
  Comment 710 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 715 [stack:0, stack:20]at java.util.BitSet.set(BitSet.java:443) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1               |2 
     locals:  |stack:48|QWORD[.]  |stack:40|DWORD  |-   <||@
  Comment 716 158 JUMP ~[] destination: B9 -> B10  <||@
  Comment 721 block B43 null  <||@
  Comment 721 434 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 721 436 r11|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 724 438 stack:40|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 729 440 r10|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 732 442 MOV [r15|QWORD + 668] y: -29211 size: DWORD  <||@
  Comment 743 444 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 750 446 DEOPT info [bci:41]  <||@
  Comment 750 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 755 [r10:0]at java.util.BitSet.set(BitSet.java:449) [bci: 41, duringCall: false, rethrow: false]
              |0             |1               |2         
     locals:  |r10|QWORD[.]  |stack:40|DWORD  |r11|DWORD   <||@
  Comment 756 block B1 null  <||@
  Comment 756 14 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 756 16 r10|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 759 18 MOV [r15|QWORD + 668] y: -22803 size: DWORD  <||@
  Comment 770 20 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 777 22 DEOPT info [bci:0]  <||@
  Comment 777 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 782 [r10:0]at java.util.BitSet.set(BitSet.java:443) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2 
     locals:  |r10|QWORD[.]  |r14|DWORD  |-   <||@
  Comment 783 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 783 4  <||@
  Comment 789 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 789 5  <||@
  HexCodeFile>>> <|@
end_nmethod
