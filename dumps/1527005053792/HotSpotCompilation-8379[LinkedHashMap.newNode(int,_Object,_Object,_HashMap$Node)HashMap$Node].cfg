begin_compilation
  name " HotSpotCompilation-8379[java.util.LinkedHashMap.newNode(int, Object, Object, HashMap$Node)]"
  method "HotSpotCompilation-8379[java.util.LinkedHashMap.newNode(int, Object, Object, HashMap$Node)]"
  date 1527005193352
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: j97 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: j97  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j97 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j117 
=== Usages ===
v199 v200 
=== Predecessor ===
v0 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j117  <|@  <|@
f <@~|@floating>@ <|@
tid v199 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j97 
index: - 
=== Succesors ===
=== Usages ===
j117 v119 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j97 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j117 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v199 
=== Succesors ===
next: j118 
=== Usages ===
j182 j123 v207 
=== Predecessor ===
j97 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v199 #next: j118  <|@  <|@
f <@~|@floating>@ <|@
tid v200 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j97 
index: - 
=== Succesors ===
=== Usages ===
j118 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j97 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j118 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v200 
=== Succesors ===
next: v105 
=== Usages ===
v102 
=== Predecessor ===
j117 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v200 #next: v105  <|@  <|@
f <@~|@floating>@ <|@
tid j181 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 40
stableDimension: 0
stamp: i64 [40] ⇊0000000000000028 ⇈0000000000000028
stampKind: i64
value: long[40|0x28]
=== Inputs ===
=== Succesors ===
=== Usages ===
j182 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j182 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j117 
y: j181 
=== Succesors ===
=== Usages ===
v102 v119 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j117 y: j181  <|@  <|@
f <@~|@floating>@ <|@
tid v102 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j118 
y: j182 
=== Succesors ===
=== Usages ===
v105 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j118 y: j182  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a! Ljava/util/LinkedHashMap;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?6 v196 v195 j157 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i2 <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?6 v145 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a3 <|@
d <@d|@=== Debug Properties ===
index: 2
stamp: a Ljava/lang/Object;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?6 a80 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a4 <|@
d <@d|@=== Debug Properties ===
index: 3
stamp: a Ljava/lang/Object;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?6 a81 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a5 <|@
d <@d|@=== Debug Properties ===
index: 4
stamp: a Ljava/util/HashMap$Node;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?6 a82 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v105 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v102 
=== Succesors ===
trueSuccessor: v103 
falseSuccessor: v104 
=== Usages ===
=== Predecessor ===
j118 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v102 #trueSuccessor: v103 #falseSuccessor: v104  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v103 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a110 
=== Usages ===
=== Predecessor ===
v105 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a110  <|@  <|@
tid ?6 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<LinkedHashMap.newNode(int, Object, Object, HashMap$Node)>
duringCall: false
localsSize: 6
locksSize: 0
rethrowException: false
sourceFile: LinkedHashMap.java
sourceLine: 256
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 i2 a3 a4 a5 - 
=== Succesors ===
=== Usages ===
a110 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2 a3 a4 a5 -  <|@  <|@
f <@~|@floating>@ <|@
tid v94 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<[I, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[I, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a110 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i184 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 6
stableDimension: 0
stamp: i32 [6] ⇊0000000000000006 ⇈0000000000000006
stampKind: i32
value: int[6|0x6]
=== Inputs ===
=== Succesors ===
=== Usages ===
a110 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i96 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
a110 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a110 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?6 
arguments: v94 i184 i96 
=== Succesors ===
next: j111 
=== Usages ===
j111 
=== Predecessor ===
v103 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?6 arguments: v94 i184 i96 #next: j111  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j111 <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a110 
=== Succesors ===
next: v124 
=== Usages ===
j123 
=== Predecessor ===
a110 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a110 #next: v124  <|@  <|@
f <@*|@fixed>@ <|@
tid v124 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v121 
=== Predecessor ===
j111 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v104 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v119 
=== Usages ===
=== Predecessor ===
v105 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v119  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v119 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v199 
value: j182 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v115 
=== Usages ===
=== Predecessor ===
v104 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v199 value: j182 stateAfter: - lastLocationAccess: - #next: v115  <|@  <|@
f <@~|@floating>@ <|@
tid v207 <|@
d <@d|@=== Debug Properties ===
displacement: 232
scale: Times1
stamp: void*
=== Inputs ===
base: j117 
index: - 
=== Succesors ===
=== Usages ===
v115 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j117 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v115 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v207 
=== Succesors ===
next: v122 
=== Usages ===
=== Predecessor ===
v119 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v207 #next: v122  <|@  <|@
f <@*|@fixed>@ <|@
tid v122 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v121 
=== Predecessor ===
v115 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j123 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v121 
values: j117 j111 
=== Succesors ===
=== Usages ===
v203 v202 a77 v208 v209 v210 v211 v212 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v121 values: j117 j111  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v121 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v122 v124 
=== Succesors ===
next: a77 
=== Usages ===
j123 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v122 v124 #next: a77  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a77 <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j123 
=== Succesors ===
next: j135 
=== Usages ===
a86 
=== Predecessor ===
v121 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j123 #next: j135  <|@  <|@
f <@~|@floating>@ <|@
tid v129 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/util/LinkedHashMap$Entry;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Ljava/util/LinkedHashMap$Entry;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
j130 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j130 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
input: v129 
=== Succesors ===
=== Usages ===
v201 
=== Predecessor ===
- >@ <|@
instruction <@PointerCast|@org.graalvm.compiler.hotspot.word.PointerCastNode>@ input: v129  <|@  <|@
f <@~|@floating>@ <|@
tid v201 <|@
d <@d|@=== Debug Properties ===
displacement: 168
scale: Times1
stamp: void*
=== Inputs ===
base: j130 
index: - 
=== Succesors ===
=== Usages ===
j135 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j130 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j135 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v201 
=== Succesors ===
next: v136 
=== Usages ===
v136 
=== Predecessor ===
a77 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v201 #next: v136  <|@  <|@
f <@~|@floating>@ <|@
tid v202 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j123 
index: - 
=== Succesors ===
=== Usages ===
v136 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j123 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v136 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v202 
value: j135 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v140 
=== Usages ===
=== Predecessor ===
j135 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v202 value: j135 stateAfter: - lastLocationAccess: - #next: v140  <|@  <|@
f <@~|@floating>@ <|@
tid v203 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j123 
index: - 
=== Succesors ===
=== Usages ===
v140 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j123 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v187 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/util/LinkedHashMap$Entry;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/LinkedHashMap$Entry;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v140 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v140 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v203 
value: v187 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v145 
=== Usages ===
=== Predecessor ===
v136 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v203 value: v187 stateAfter: - lastLocationAccess: - #next: v145  <|@  <|@
f <@~|@floating>@ <|@
tid v208 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j123 
index: - 
=== Succesors ===
=== Usages ===
v145 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j123 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v145 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v208 
value: i2 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v148 
=== Usages ===
=== Predecessor ===
v140 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v208 value: i2 stateAfter: - lastLocationAccess: - #next: v148  <|@  <|@
f <@~|@floating>@ <|@
tid v209 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j123 
index: - 
=== Succesors ===
=== Usages ===
v148 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j123 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a80 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Compress
stamp: n Ljava/lang/Object;
=== Inputs ===
value: a3 
=== Succesors ===
=== Usages ===
v148 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a3  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v148 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v209 
value: a80 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v151 
=== Usages ===
=== Predecessor ===
v145 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v209 value: a80 stateAfter: - lastLocationAccess: - #next: v151  <|@  <|@
f <@~|@floating>@ <|@
tid v210 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: j123 
index: - 
=== Succesors ===
=== Usages ===
v151 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j123 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a81 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Compress
stamp: n Ljava/lang/Object;
=== Inputs ===
value: a4 
=== Succesors ===
=== Usages ===
v151 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a4  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v151 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v210 
value: a81 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v154 
=== Usages ===
=== Predecessor ===
v148 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v210 value: a81 stateAfter: - lastLocationAccess: - #next: v154  <|@  <|@
f <@~|@floating>@ <|@
tid v211 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: j123 
index: - 
=== Succesors ===
=== Usages ===
v154 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j123 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a82 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Compress
stamp: n Ljava/util/HashMap$Node;
=== Inputs ===
value: a5 
=== Succesors ===
=== Usages ===
v154 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a5  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v154 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v211 
value: a82 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v156 
=== Usages ===
=== Predecessor ===
v151 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v211 value: a82 stateAfter: - lastLocationAccess: - #next: v156  <|@  <|@
f <@~|@floating>@ <|@
tid v212 <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: j123 
index: - 
=== Succesors ===
=== Usages ===
v156 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j123 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j75 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 0
stableDimension: 0
stamp: i64 [0] ⇈0000000000000000
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v156 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v156 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v212 
value: j75 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a86 
=== Usages ===
=== Predecessor ===
v154 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v212 value: j75 stateAfter: - lastLocationAccess: - #next: a86  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a86 <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a77 
=== Succesors ===
next: v87 
=== Usages ===
a58 v197 v47 v46 j167 
=== Predecessor ===
v156 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a77 #next: v87  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v87 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: a194 
=== Usages ===
=== Predecessor ===
a86 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a194  <|@  <|@
f <@~|@floating>@ <|@
tid v195 <|@
d <@d|@=== Debug Properties ===
displacement: 52
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a194 v59 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a194 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: LinkedHashMap.tail
nodeSourcePosition: at java.util.LinkedHashMap.linkNodeLast(LinkedHashMap.java:223) [bci: 1]
at java.util.LinkedHashMap.newNode(LinkedHashMap.java:258) [bci: 17]
nullCheck: false
stamp: n Ljava/util/LinkedHashMap$Entry;
=== Inputs ===
stateBefore: - 
guard: - 
address: v195 
=== Succesors ===
next: v59 
=== Usages ===
a57 v67 v66 v198 
=== Predecessor ===
v87 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v195 #next: v59  <|@  <|@
f <@~|@floating>@ <|@
tid a58 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.LinkedHashMap.linkNodeLast(LinkedHashMap.java:224) [bci: 7]
at java.util.LinkedHashMap.newNode(LinkedHashMap.java:258) [bci: 17]
op: Compress
stamp: n -
=== Inputs ===
value: a86 
=== Succesors ===
=== Usages ===
v59 v62 v72 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a86  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v59 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: LinkedHashMap.tail
nodeSourcePosition: at java.util.LinkedHashMap.linkNodeLast(LinkedHashMap.java:224) [bci: 7]
at java.util.LinkedHashMap.newNode(LinkedHashMap.java:258) [bci: 17]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v195 
value: a58 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j157 
=== Usages ===
=== Predecessor ===
a194 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v195 value: a58 stateAfter: - lastLocationAccess: - #next: j157  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j157 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 1]
at java.util.LinkedHashMap.linkNodeLast(LinkedHashMap.java:224) [bci: 7]
at java.util.LinkedHashMap.newNode(LinkedHashMap.java:258) [bci: 17]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1 
=== Succesors ===
next: v163 
=== Usages ===
j159 
=== Predecessor ===
v59 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a1 #next: v163  <|@  <|@
f <@~|@floating>@ <|@
tid i158 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.cardTableShift(GraalHotSpotVMConfig) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.LinkedHashMap.linkNodeLast(LinkedHashMap.java:224) [bci: 7]
at java.util.LinkedHashMap.newNode(LinkedHashMap.java:258) [bci: 17]
rawvalue: 9
stableDimension: 0
stamp: i32 [9] ⇊0000000000000009 ⇈0000000000000009
stampKind: i32
value: int[9|0x9]
=== Inputs ===
=== Succesors ===
=== Usages ===
j159 j168 j175 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j159 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.LinkedHashMap.linkNodeLast(LinkedHashMap.java:224) [bci: 7]
at java.util.LinkedHashMap.newNode(LinkedHashMap.java:258) [bci: 17]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j157 
y: i158 
=== Succesors ===
=== Usages ===
v204 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j157 y: i158  <|@  <|@
f <@~|@floating>@ <|@
tid j162 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.loadLongConfigValue(int) [bci: -1]
at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.cardTableAddress(GraalHotSpotVMConfigNode.java:114) [bci: 6]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:133) [bci: 7]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.LinkedHashMap.linkNodeLast(LinkedHashMap.java:224) [bci: 7]
at java.util.LinkedHashMap.newNode(LinkedHashMap.java:258) [bci: 17]
rawvalue: 4682670080
stableDimension: 0
stamp: i64 [4682670080] ⇊00000001171be000 ⇈00000001171be000
stampKind: i64
value: long[4682670080|0x1171be000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v204 v205 v206 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v204 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j159 
index: j162 
=== Succesors ===
=== Usages ===
v163 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j159 index: j162  <|@  <|@
f <@~|@floating>@ <|@
tid i164 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.LinkedHashMap.linkNodeLast(LinkedHashMap.java:224) [bci: 7]
at java.util.LinkedHashMap.newNode(LinkedHashMap.java:258) [bci: 17]
rawvalue: 0
stableDimension: 0
stamp: i8 [0] ⇈0000000000000000
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v163 v171 v178 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v163 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.LinkedHashMap.linkNodeLast(LinkedHashMap.java:224) [bci: 7]
at java.util.LinkedHashMap.newNode(LinkedHashMap.java:258) [bci: 17]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v204 
value: i164 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v33 
=== Usages ===
=== Predecessor ===
j157 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v204 value: i164 stateAfter: - lastLocationAccess: - #next: v33  <|@  <|@
f <@~|@floating>@ <|@
tid v67 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedHashMap.linkNodeLast(LinkedHashMap.java:229) [bci: 29]
at java.util.LinkedHashMap.newNode(LinkedHashMap.java:258) [bci: 17]
stamp: void
=== Inputs ===
value: a194 
=== Succesors ===
=== Usages ===
v33 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a194  <|@  <|@
f <@*|@fixed>@ <|@
tid v33 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedHashMap.linkNodeLast(LinkedHashMap.java:225) [bci: 11]
at java.util.LinkedHashMap.newNode(LinkedHashMap.java:258) [bci: 17]
stamp: void
trueSuccessorProbability: 0.00927591611561196
=== Inputs ===
condition: v67 
=== Succesors ===
trueSuccessor: v31 
falseSuccessor: v32 
=== Usages ===
=== Predecessor ===
v163 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v67 #trueSuccessor: v31 #falseSuccessor: v32  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 4576500823363362560
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v31 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedHashMap.linkNodeLast(LinkedHashMap.java:226) [bci: 14]
at java.util.LinkedHashMap.newNode(LinkedHashMap.java:258) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
next: v62 
=== Usages ===
=== Predecessor ===
v33 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v62  <|@  <|@
f <@~|@floating>@ <|@
tid v196 <|@
d <@d|@=== Debug Properties ===
displacement: 48
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v62 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v62 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: LinkedHashMap.head
nodeSourcePosition: at java.util.LinkedHashMap.linkNodeLast(LinkedHashMap.java:226) [bci: 16]
at java.util.LinkedHashMap.newNode(LinkedHashMap.java:258) [bci: 17]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v196 
value: a58 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v46 
=== Usages ===
=== Predecessor ===
v31 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v196 value: a58 stateAfter: - lastLocationAccess: - #next: v46  <|@  <|@
f <@*|@fixed>@ <|@
tid v46 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
result: a86 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v62 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a86 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 4607098868775293828
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v32 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedHashMap.linkNodeLast(LinkedHashMap.java:228) [bci: 22]
at java.util.LinkedHashMap.newNode(LinkedHashMap.java:258) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
next: v66 
=== Usages ===
=== Predecessor ===
v33 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v66  <|@  <|@
f <@~|@floating>@ <|@
tid v197 <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: a86 
index: - 
=== Succesors ===
=== Usages ===
v66 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a86 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v66 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: LinkedHashMap$Entry.before
nodeSourcePosition: at java.util.LinkedHashMap.linkNodeLast(LinkedHashMap.java:228) [bci: 24]
at java.util.LinkedHashMap.newNode(LinkedHashMap.java:258) [bci: 17]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v197 
value: a194 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j167 
=== Usages ===
=== Predecessor ===
v32 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v197 value: a194 stateAfter: - lastLocationAccess: - #next: j167  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j167 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 1]
at java.util.LinkedHashMap.linkNodeLast(LinkedHashMap.java:228) [bci: 24]
at java.util.LinkedHashMap.newNode(LinkedHashMap.java:258) [bci: 17]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a86 
=== Succesors ===
next: v171 
=== Usages ===
j168 
=== Predecessor ===
v66 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a86 #next: v171  <|@  <|@
f <@~|@floating>@ <|@
tid j168 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.LinkedHashMap.linkNodeLast(LinkedHashMap.java:228) [bci: 24]
at java.util.LinkedHashMap.newNode(LinkedHashMap.java:258) [bci: 17]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j167 
y: i158 
=== Succesors ===
=== Usages ===
v205 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j167 y: i158  <|@  <|@
f <@~|@floating>@ <|@
tid v205 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j168 
index: j162 
=== Succesors ===
=== Usages ===
v171 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j168 index: j162  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v171 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.LinkedHashMap.linkNodeLast(LinkedHashMap.java:228) [bci: 24]
at java.util.LinkedHashMap.newNode(LinkedHashMap.java:258) [bci: 17]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v205 
value: i164 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v72 
=== Usages ===
=== Predecessor ===
j167 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v205 value: i164 stateAfter: - lastLocationAccess: - #next: v72  <|@  <|@
f <@~|@floating>@ <|@
tid v198 <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a194 
=== Succesors ===
=== Usages ===
v72 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a194  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v72 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: LinkedHashMap$Entry.after
nodeSourcePosition: at java.util.LinkedHashMap.linkNodeLast(LinkedHashMap.java:229) [bci: 29]
at java.util.LinkedHashMap.newNode(LinkedHashMap.java:258) [bci: 17]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v198 
value: a58 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j174 
=== Usages ===
=== Predecessor ===
v171 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v198 value: a58 stateAfter: - lastLocationAccess: - #next: j174  <|@  <|@
f <@~|@floating>@ <|@
tid a57 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.LinkedHashMap.linkNodeLast(LinkedHashMap.java:223) [bci: 1]
at java.util.LinkedHashMap.newNode(LinkedHashMap.java:258) [bci: 17]
op: Uncompress
stamp: a Ljava/util/LinkedHashMap$Entry;
=== Inputs ===
value: a194 
=== Succesors ===
=== Usages ===
j174 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a194  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j174 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 1]
at java.util.LinkedHashMap.linkNodeLast(LinkedHashMap.java:229) [bci: 29]
at java.util.LinkedHashMap.newNode(LinkedHashMap.java:258) [bci: 17]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a57 
=== Succesors ===
next: v178 
=== Usages ===
j175 
=== Predecessor ===
v72 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a57 #next: v178  <|@  <|@
f <@~|@floating>@ <|@
tid j175 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.LinkedHashMap.linkNodeLast(LinkedHashMap.java:229) [bci: 29]
at java.util.LinkedHashMap.newNode(LinkedHashMap.java:258) [bci: 17]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j174 
y: i158 
=== Succesors ===
=== Usages ===
v206 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j174 y: i158  <|@  <|@
f <@~|@floating>@ <|@
tid v206 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j175 
index: j162 
=== Succesors ===
=== Usages ===
v178 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j175 index: j162  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v178 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.LinkedHashMap.linkNodeLast(LinkedHashMap.java:229) [bci: 29]
at java.util.LinkedHashMap.newNode(LinkedHashMap.java:258) [bci: 17]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v206 
value: i164 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v47 
=== Usages ===
=== Predecessor ===
j174 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v206 value: i164 stateAfter: - lastLocationAccess: - #next: v47  <|@  <|@
f <@*|@fixed>@ <|@
tid v47 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
result: a86 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v178 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a86 memoryMap: -  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: j97 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: j97  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j97 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j117 
=== Usages ===
v199 v200 
=== Predecessor ===
v0 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j117  <|@  <|@
f <@~|@floating>@ <|@
tid v199 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j97 
index: - 
=== Succesors ===
=== Usages ===
j117 v119 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j97 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j117 <|@
result v5|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v199 
=== Succesors ===
next: j118 
=== Usages ===
j182 j123 v207 
=== Predecessor ===
j97 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v199 #next: j118  <|@  <|@
f <@~|@floating>@ <|@
tid v200 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j97 
index: - 
=== Succesors ===
=== Usages ===
j118 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j97 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j118 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v200 
=== Succesors ===
next: v105 
=== Usages ===
v102 
=== Predecessor ===
j117 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v200 #next: v105  <|@  <|@
f <@~|@floating>@ <|@
tid j181 <|@
result long[40|0x28] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 40
stableDimension: 0
stamp: i64 [40] ⇊0000000000000028 ⇈0000000000000028
stampKind: i64
value: long[40|0x28]
=== Inputs ===
=== Succesors ===
=== Usages ===
j182 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j182 <|@
result v6|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j117 
y: j181 
=== Succesors ===
=== Usages ===
v102 v119 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j117 y: j181  <|@  <|@
f <@~|@floating>@ <|@
tid v102 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j118 
y: j182 
=== Succesors ===
=== Usages ===
v105 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j118 y: j182  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a! Ljava/util/LinkedHashMap;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?6 v196 v195 j157 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i2 <|@
result v1|DWORD <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?6 v145 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a3 <|@
result v2|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 2
stamp: a Ljava/lang/Object;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?6 a80 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a4 <|@
result v3|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 3
stamp: a Ljava/lang/Object;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?6 a81 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a5 <|@
result v4|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 4
stamp: a Ljava/util/HashMap$Node;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?6 a82 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v105 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v102 
=== Succesors ===
trueSuccessor: v103 
falseSuccessor: v104 
=== Usages ===
=== Predecessor ===
j118 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v102 #trueSuccessor: v103 #falseSuccessor: v104  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|QWORD[.], r9|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@3d401b2e slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v4|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = LEA [v5|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v6|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v103 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a110 
=== Usages ===
=== Predecessor ===
v105 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a110  <|@  <|@
tid ?6 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<LinkedHashMap.newNode(int, Object, Object, HashMap$Node)>
duringCall: false
localsSize: 6
locksSize: 0
rethrowException: false
sourceFile: LinkedHashMap.java
sourceLine: 256
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 i2 a3 a4 a5 - 
=== Succesors ===
=== Usages ===
a110 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2 a3 a4 a5 -  <|@  <|@
f <@~|@floating>@ <|@
tid v94 <|@
result v7|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<[I, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[I, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a110 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i184 <|@
result int[6|0x6] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 6
stableDimension: 0
stamp: i32 [6] ⇊0000000000000006 ⇈0000000000000006
stampKind: i32
value: int[6|0x6]
=== Inputs ===
=== Succesors ===
=== Usages ===
a110 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i96 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
a110 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a110 <|@
result v8|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?6 
arguments: v94 i184 i96 
=== Succesors ===
next: j111 
=== Usages ===
j111 
=== Predecessor ===
v103 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?6 arguments: v94 i184 i96 #next: j111  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j111 <|@
result v8|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a110 
=== Succesors ===
next: v124 
=== Usages ===
j123 
=== Predecessor ===
a110 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a110 #next: v124  <|@  <|@
f <@*|@fixed>@ <|@
tid v124 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v121 
=== Predecessor ===
j111 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v7|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[6|0x6] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.LinkedHashMap.newNode(LinkedHashMap.java:256) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v8|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v8|QWORD[.]] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v104 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v119 
=== Usages ===
=== Predecessor ===
v105 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v119  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v119 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v199 
value: j182 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v115 
=== Usages ===
=== Predecessor ===
v104 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v199 value: j182 stateAfter: - lastLocationAccess: - #next: v115  <|@  <|@
f <@~|@floating>@ <|@
tid v207 <|@
result [v5|QWORD + 232] <|@
d <@d|@=== Debug Properties ===
displacement: 232
scale: Times1
stamp: void*
=== Inputs ===
base: j117 
index: - 
=== Succesors ===
=== Usages ===
v115 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j117 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v115 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v207 
=== Succesors ===
next: v122 
=== Usages ===
=== Predecessor ===
v119 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v207 #next: v122  <|@  <|@
f <@*|@fixed>@ <|@
tid v122 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v121 
=== Predecessor ===
v115 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v6|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v5|QWORD + 232] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v5|QWORD] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j123 <|@
result v9|QWORD[*] <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v121 
values: j117 j111 
=== Succesors ===
=== Usages ===
v203 v202 a77 v208 v209 v210 v211 v212 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v121 values: j117 j111  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v121 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v122 v124 
=== Succesors ===
next: a77 
=== Usages ===
j123 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v122 v124 #next: a77  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a77 <|@
result v10|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j123 
=== Succesors ===
next: j135 
=== Usages ===
a86 
=== Predecessor ===
v121 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j123 #next: j135  <|@  <|@
f <@~|@floating>@ <|@
tid v129 <|@
result v11|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/util/LinkedHashMap$Entry;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Ljava/util/LinkedHashMap$Entry;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
j130 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j130 <|@
result v11|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
input: v129 
=== Succesors ===
=== Usages ===
v201 
=== Predecessor ===
- >@ <|@
instruction <@PointerCast|@org.graalvm.compiler.hotspot.word.PointerCastNode>@ input: v129  <|@  <|@
f <@~|@floating>@ <|@
tid v201 <|@
result [v11|QWORD + 168] <|@
d <@d|@=== Debug Properties ===
displacement: 168
scale: Times1
stamp: void*
=== Inputs ===
base: j130 
index: - 
=== Succesors ===
=== Usages ===
j135 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j130 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j135 <|@
result v12|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v201 
=== Succesors ===
next: v136 
=== Usages ===
v136 
=== Predecessor ===
a77 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v201 #next: v136  <|@  <|@
f <@~|@floating>@ <|@
tid v202 <|@
result [v9|QWORD[*]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j123 
index: - 
=== Succesors ===
=== Usages ===
v136 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j123 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v136 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v202 
value: j135 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v140 
=== Usages ===
=== Predecessor ===
j135 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v202 value: j135 stateAfter: - lastLocationAccess: - #next: v140  <|@  <|@
f <@~|@floating>@ <|@
tid v203 <|@
result [v9|QWORD[*] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j123 
index: - 
=== Succesors ===
=== Usages ===
v140 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j123 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v187 <|@
result meta{HotSpotType<Ljava/util/LinkedHashMap$Entry;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/util/LinkedHashMap$Entry;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/LinkedHashMap$Entry;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v140 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v140 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v203 
value: v187 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v145 
=== Usages ===
=== Predecessor ===
v136 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v203 value: v187 stateAfter: - lastLocationAccess: - #next: v145  <|@  <|@
f <@~|@floating>@ <|@
tid v208 <|@
result [v9|QWORD[*] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j123 
index: - 
=== Succesors ===
=== Usages ===
v145 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j123 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v145 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v208 
value: i2 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v148 
=== Usages ===
=== Predecessor ===
v140 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v208 value: i2 stateAfter: - lastLocationAccess: - #next: v148  <|@  <|@
f <@~|@floating>@ <|@
tid v209 <|@
result [v9|QWORD[*] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j123 
index: - 
=== Succesors ===
=== Usages ===
v148 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j123 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a80 <|@
result v13|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Compress
stamp: n Ljava/lang/Object;
=== Inputs ===
value: a3 
=== Succesors ===
=== Usages ===
v148 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a3  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v148 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v209 
value: a80 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v151 
=== Usages ===
=== Predecessor ===
v145 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v209 value: a80 stateAfter: - lastLocationAccess: - #next: v151  <|@  <|@
f <@~|@floating>@ <|@
tid v210 <|@
result [v9|QWORD[*] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: j123 
index: - 
=== Succesors ===
=== Usages ===
v151 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j123 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a81 <|@
result v14|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Compress
stamp: n Ljava/lang/Object;
=== Inputs ===
value: a4 
=== Succesors ===
=== Usages ===
v151 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a4  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v151 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v210 
value: a81 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v154 
=== Usages ===
=== Predecessor ===
v148 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v210 value: a81 stateAfter: - lastLocationAccess: - #next: v154  <|@  <|@
f <@~|@floating>@ <|@
tid v211 <|@
result [v9|QWORD[*] + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: j123 
index: - 
=== Succesors ===
=== Usages ===
v154 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j123 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a82 <|@
result v15|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Compress
stamp: n Ljava/util/HashMap$Node;
=== Inputs ===
value: a5 
=== Succesors ===
=== Usages ===
v154 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a5  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v154 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v211 
value: a82 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v156 
=== Usages ===
=== Predecessor ===
v151 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v211 value: a82 stateAfter: - lastLocationAccess: - #next: v156  <|@  <|@
f <@~|@floating>@ <|@
tid v212 <|@
result [v9|QWORD[*] + 28] <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: j123 
index: - 
=== Succesors ===
=== Usages ===
v156 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j123 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j75 <|@
result long[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 0
stableDimension: 0
stamp: i64 [0] ⇈0000000000000000
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v156 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v156 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v212 
value: j75 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a86 
=== Usages ===
=== Predecessor ===
v154 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v212 value: j75 stateAfter: - lastLocationAccess: - #next: a86  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a86 <|@
result v10|QWORD[.] <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a77 
=== Succesors ===
next: v87 
=== Usages ===
a58 v197 v47 v46 j167 
=== Predecessor ===
v156 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a77 #next: v87  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v87 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: a194 
=== Usages ===
=== Predecessor ===
a86 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a194  <|@  <|@
f <@~|@floating>@ <|@
tid v195 <|@
result [v0|QWORD[.] + 52] <|@
d <@d|@=== Debug Properties ===
displacement: 52
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a194 v59 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a194 <|@
result v16|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: LinkedHashMap.tail
nodeSourcePosition: at java.util.LinkedHashMap.linkNodeLast(LinkedHashMap.java:223) [bci: 1]
at java.util.LinkedHashMap.newNode(LinkedHashMap.java:258) [bci: 17]
nullCheck: false
stamp: n Ljava/util/LinkedHashMap$Entry;
=== Inputs ===
stateBefore: - 
guard: - 
address: v195 
=== Succesors ===
next: v59 
=== Usages ===
a57 v67 v66 v198 
=== Predecessor ===
v87 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v195 #next: v59  <|@  <|@
f <@~|@floating>@ <|@
tid a58 <|@
result v17|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.LinkedHashMap.linkNodeLast(LinkedHashMap.java:224) [bci: 7]
at java.util.LinkedHashMap.newNode(LinkedHashMap.java:258) [bci: 17]
op: Compress
stamp: n -
=== Inputs ===
value: a86 
=== Succesors ===
=== Usages ===
v59 v62 v72 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a86  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v59 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: LinkedHashMap.tail
nodeSourcePosition: at java.util.LinkedHashMap.linkNodeLast(LinkedHashMap.java:224) [bci: 7]
at java.util.LinkedHashMap.newNode(LinkedHashMap.java:258) [bci: 17]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v195 
value: a58 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j157 
=== Usages ===
=== Predecessor ===
a194 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v195 value: a58 stateAfter: - lastLocationAccess: - #next: j157  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j157 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 1]
at java.util.LinkedHashMap.linkNodeLast(LinkedHashMap.java:224) [bci: 7]
at java.util.LinkedHashMap.newNode(LinkedHashMap.java:258) [bci: 17]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1 
=== Succesors ===
next: v163 
=== Usages ===
j159 
=== Predecessor ===
v59 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a1 #next: v163  <|@  <|@
f <@~|@floating>@ <|@
tid i158 <|@
result int[9|0x9] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.cardTableShift(GraalHotSpotVMConfig) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.LinkedHashMap.linkNodeLast(LinkedHashMap.java:224) [bci: 7]
at java.util.LinkedHashMap.newNode(LinkedHashMap.java:258) [bci: 17]
rawvalue: 9
stableDimension: 0
stamp: i32 [9] ⇊0000000000000009 ⇈0000000000000009
stampKind: i32
value: int[9|0x9]
=== Inputs ===
=== Succesors ===
=== Usages ===
j159 j168 j175 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j159 <|@
result v18|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.LinkedHashMap.linkNodeLast(LinkedHashMap.java:224) [bci: 7]
at java.util.LinkedHashMap.newNode(LinkedHashMap.java:258) [bci: 17]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j157 
y: i158 
=== Succesors ===
=== Usages ===
v204 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j157 y: i158  <|@  <|@
f <@~|@floating>@ <|@
tid j162 <|@
result v19|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.loadLongConfigValue(int) [bci: -1]
at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.cardTableAddress(GraalHotSpotVMConfigNode.java:114) [bci: 6]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:133) [bci: 7]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.LinkedHashMap.linkNodeLast(LinkedHashMap.java:224) [bci: 7]
at java.util.LinkedHashMap.newNode(LinkedHashMap.java:258) [bci: 17]
rawvalue: 4682670080
stableDimension: 0
stamp: i64 [4682670080] ⇊00000001171be000 ⇈00000001171be000
stampKind: i64
value: long[4682670080|0x1171be000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v204 v205 v206 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v204 <|@
result [v18|QWORD[*] + v19|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j159 
index: j162 
=== Succesors ===
=== Usages ===
v163 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j159 index: j162  <|@  <|@
f <@~|@floating>@ <|@
tid i164 <|@
result byte[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.LinkedHashMap.linkNodeLast(LinkedHashMap.java:224) [bci: 7]
at java.util.LinkedHashMap.newNode(LinkedHashMap.java:258) [bci: 17]
rawvalue: 0
stableDimension: 0
stamp: i8 [0] ⇈0000000000000000
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v163 v171 v178 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v163 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.LinkedHashMap.linkNodeLast(LinkedHashMap.java:224) [bci: 7]
at java.util.LinkedHashMap.newNode(LinkedHashMap.java:258) [bci: 17]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v204 
value: i164 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v33 
=== Usages ===
=== Predecessor ===
j157 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v204 value: i164 stateAfter: - lastLocationAccess: - #next: v33  <|@  <|@
f <@~|@floating>@ <|@
tid v67 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedHashMap.linkNodeLast(LinkedHashMap.java:229) [bci: 29]
at java.util.LinkedHashMap.newNode(LinkedHashMap.java:258) [bci: 17]
stamp: void
=== Inputs ===
value: a194 
=== Succesors ===
=== Usages ===
v33 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a194  <|@  <|@
f <@*|@fixed>@ <|@
tid v33 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedHashMap.linkNodeLast(LinkedHashMap.java:225) [bci: 11]
at java.util.LinkedHashMap.newNode(LinkedHashMap.java:258) [bci: 17]
stamp: void
trueSuccessorProbability: 0.00927591611561196
=== Inputs ===
condition: v67 
=== Succesors ===
trueSuccessor: v31 
falseSuccessor: v32 
=== Usages ===
=== Predecessor ===
v163 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v67 #trueSuccessor: v31 #falseSuccessor: v32  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v9|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v10|QWORD[.] = MOVE v9|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/LinkedHashMap$Entry;, resolved>} <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = MOV [v11|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v9|QWORD[*]], y: v12|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v9|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/LinkedHashMap$Entry;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v9|QWORD[*] + 12], y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|DWORD[.] = COMPRESSPOINTER (input: v2|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@cd372ee encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v9|QWORD[*] + 16], y: v13|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|DWORD[.] = COMPRESSPOINTER (input: v3|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@cd372ee encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v9|QWORD[*] + 20], y: v14|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|DWORD[.] = COMPRESSPOINTER (input: v4|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@cd372ee encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v9|QWORD[*] + 24], y: v15|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v9|QWORD[*] + 28], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v16|DWORD[.] = MOV [v0|QWORD[.] + 52] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v17|DWORD[.] = COMPRESSPOINTER (input: v10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@cd372ee encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 52], y: v17|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v18|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v18|QWORD[*] + v19|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction TEST (x: v16|DWORD[.], y: v16|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.00927591611561196 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 4576500823363362560
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v31 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedHashMap.linkNodeLast(LinkedHashMap.java:226) [bci: 14]
at java.util.LinkedHashMap.newNode(LinkedHashMap.java:258) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
next: v62 
=== Usages ===
=== Predecessor ===
v33 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v62  <|@  <|@
f <@~|@floating>@ <|@
tid v196 <|@
result [v0|QWORD[.] + 48] <|@
d <@d|@=== Debug Properties ===
displacement: 48
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v62 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v62 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: LinkedHashMap.head
nodeSourcePosition: at java.util.LinkedHashMap.linkNodeLast(LinkedHashMap.java:226) [bci: 16]
at java.util.LinkedHashMap.newNode(LinkedHashMap.java:258) [bci: 17]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v196 
value: a58 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v46 
=== Usages ===
=== Predecessor ===
v31 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v196 value: a58 stateAfter: - lastLocationAccess: - #next: v46  <|@  <|@
f <@*|@fixed>@ <|@
tid v46 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
result: a86 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v62 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a86 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 48], y: v17|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 4607098868775293828
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v32 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedHashMap.linkNodeLast(LinkedHashMap.java:228) [bci: 22]
at java.util.LinkedHashMap.newNode(LinkedHashMap.java:258) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
next: v66 
=== Usages ===
=== Predecessor ===
v33 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v66  <|@  <|@
f <@~|@floating>@ <|@
tid v197 <|@
result [v10|QWORD[.] + 28] <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: a86 
index: - 
=== Succesors ===
=== Usages ===
v66 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a86 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v66 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: LinkedHashMap$Entry.before
nodeSourcePosition: at java.util.LinkedHashMap.linkNodeLast(LinkedHashMap.java:228) [bci: 24]
at java.util.LinkedHashMap.newNode(LinkedHashMap.java:258) [bci: 17]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v197 
value: a194 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j167 
=== Usages ===
=== Predecessor ===
v32 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v197 value: a194 stateAfter: - lastLocationAccess: - #next: j167  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j167 <|@
result v10|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 1]
at java.util.LinkedHashMap.linkNodeLast(LinkedHashMap.java:228) [bci: 24]
at java.util.LinkedHashMap.newNode(LinkedHashMap.java:258) [bci: 17]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a86 
=== Succesors ===
next: v171 
=== Usages ===
j168 
=== Predecessor ===
v66 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a86 #next: v171  <|@  <|@
f <@~|@floating>@ <|@
tid j168 <|@
result v20|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.LinkedHashMap.linkNodeLast(LinkedHashMap.java:228) [bci: 24]
at java.util.LinkedHashMap.newNode(LinkedHashMap.java:258) [bci: 17]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j167 
y: i158 
=== Succesors ===
=== Usages ===
v205 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j167 y: i158  <|@  <|@
f <@~|@floating>@ <|@
tid v205 <|@
result [v20|QWORD[*] + v19|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j168 
index: j162 
=== Succesors ===
=== Usages ===
v171 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j168 index: j162  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v171 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.LinkedHashMap.linkNodeLast(LinkedHashMap.java:228) [bci: 24]
at java.util.LinkedHashMap.newNode(LinkedHashMap.java:258) [bci: 17]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v205 
value: i164 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v72 
=== Usages ===
=== Predecessor ===
j167 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v205 value: i164 stateAfter: - lastLocationAccess: - #next: v72  <|@  <|@
f <@~|@floating>@ <|@
tid v198 <|@
result [v16|DWORD[.] * 8 + 32] <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a194 
=== Succesors ===
=== Usages ===
v72 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a194  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v72 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: LinkedHashMap$Entry.after
nodeSourcePosition: at java.util.LinkedHashMap.linkNodeLast(LinkedHashMap.java:229) [bci: 29]
at java.util.LinkedHashMap.newNode(LinkedHashMap.java:258) [bci: 17]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v198 
value: a58 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j174 
=== Usages ===
=== Predecessor ===
v171 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v198 value: a58 stateAfter: - lastLocationAccess: - #next: j174  <|@  <|@
f <@~|@floating>@ <|@
tid a57 <|@
result v21|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.LinkedHashMap.linkNodeLast(LinkedHashMap.java:223) [bci: 1]
at java.util.LinkedHashMap.newNode(LinkedHashMap.java:258) [bci: 17]
op: Uncompress
stamp: a Ljava/util/LinkedHashMap$Entry;
=== Inputs ===
value: a194 
=== Succesors ===
=== Usages ===
j174 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a194  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j174 <|@
result v21|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 1]
at java.util.LinkedHashMap.linkNodeLast(LinkedHashMap.java:229) [bci: 29]
at java.util.LinkedHashMap.newNode(LinkedHashMap.java:258) [bci: 17]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a57 
=== Succesors ===
next: v178 
=== Usages ===
j175 
=== Predecessor ===
v72 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a57 #next: v178  <|@  <|@
f <@~|@floating>@ <|@
tid j175 <|@
result v22|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.LinkedHashMap.linkNodeLast(LinkedHashMap.java:229) [bci: 29]
at java.util.LinkedHashMap.newNode(LinkedHashMap.java:258) [bci: 17]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j174 
y: i158 
=== Succesors ===
=== Usages ===
v206 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j174 y: i158  <|@  <|@
f <@~|@floating>@ <|@
tid v206 <|@
result [v22|QWORD[*] + v19|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j175 
index: j162 
=== Succesors ===
=== Usages ===
v178 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j175 index: j162  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v178 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.LinkedHashMap.linkNodeLast(LinkedHashMap.java:229) [bci: 29]
at java.util.LinkedHashMap.newNode(LinkedHashMap.java:258) [bci: 17]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v206 
value: i164 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v47 
=== Usages ===
=== Predecessor ===
j174 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v206 value: i164 stateAfter: - lastLocationAccess: - #next: v47  <|@  <|@
f <@*|@fixed>@ <|@
tid v47 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
result: a86 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v178 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a86 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v10|QWORD[.] + 28], y: v16|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD[*] = SHR v10|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v20|QWORD[*] + v19|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v16|DWORD[.] * 8 + 32], y: v17|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v21|QWORD[.] = UNCOMPRESSPOINTER (input: v16|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@cd372ee encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v22|QWORD[*] = SHR v21|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v22|QWORD[*] + v19|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|QWORD[.], r9|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@3d401b2e slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v4|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = LEA [v5|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v6|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v6|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v5|QWORD + 232] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v5|QWORD] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v9|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v10|QWORD[.] = MOVE v9|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/LinkedHashMap$Entry;, resolved>} <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = MOV [v11|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v9|QWORD[*]], y: v12|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v9|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/LinkedHashMap$Entry;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v9|QWORD[*] + 12], y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|DWORD[.] = COMPRESSPOINTER (input: v2|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@cd372ee encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v9|QWORD[*] + 16], y: v13|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|DWORD[.] = COMPRESSPOINTER (input: v3|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@cd372ee encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v9|QWORD[*] + 20], y: v14|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|DWORD[.] = COMPRESSPOINTER (input: v4|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@cd372ee encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v9|QWORD[*] + 24], y: v15|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v9|QWORD[*] + 28], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v16|DWORD[.] = MOV [v0|QWORD[.] + 52] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v17|DWORD[.] = COMPRESSPOINTER (input: v10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@cd372ee encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 52], y: v17|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v18|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v18|QWORD[*] + v19|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction TEST (x: v16|DWORD[.], y: v16|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.00927591611561196 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 4607098868775293828
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v10|QWORD[.] + 28], y: v16|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD[*] = SHR v10|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v20|QWORD[*] + v19|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v16|DWORD[.] * 8 + 32], y: v17|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v21|QWORD[.] = UNCOMPRESSPOINTER (input: v16|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@cd372ee encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v22|QWORD[*] = SHR v21|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v22|QWORD[*] + v19|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v7|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[6|0x6] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.LinkedHashMap.newNode(LinkedHashMap.java:256) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD[.] v3|QWORD[.] v4|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v8|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v8|QWORD[.]] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 4576500823363362560
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 48], y: v17|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: new           #6          // java.util.LinkedHashMap$Entry
     3: dup           
     4: iload_1       
     5: aload_2       
     6: aload_3       
     7: aload         4
     9: invokespecial #5          // java.util.LinkedHashMap$Entry.<init>:(int, java.lang.Object, java.lang.Object, java.util.HashMap$Node)void
    12: astore        5
    14: aload_0       
    15: aload         5
    17: invokespecial #6          // linkNodeLast:(java.util.LinkedHashMap$Entry)void
    20: aload         5
    22: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|QWORD[.], r9|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@3d401b2e slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction r14|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   10  <|@ instruction rax|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   12  <|@ instruction rsi|QWORD = LEA [rax|QWORD + 40] size: QWORD <|@ <|@
      nr   14  <|@ instruction CMP (x: rsi|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   16  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   46  <|@ instruction MOV (x: [r15|QWORD + 96], y: rsi|QWORD) size: QWORD <|@ <|@
      nr   48  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 232] instr: 0 <|@ <|@
      nr   50  <|@ instruction rax|QWORD[*] = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr   52  <|@ instruction JUMP ~[] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   56  <|@ instruction r10|QWORD[.] = MOVE rax|QWORD[*] moveKind: QWORD <|@ <|@
      nr   58  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/LinkedHashMap$Entry;, resolved>} <|@ <|@
      nr   60  <|@ instruction rsi|QWORD = MOV [rsi|QWORD + 168] size: QWORD <|@ <|@
      nr   62  <|@ instruction MOV (x: [rax|QWORD[*]], y: rsi|QWORD) size: QWORD <|@ <|@
      nr   64  <|@ instruction MOV [rax|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/LinkedHashMap$Entry;, resolved>;compressed} <|@ <|@
      nr   66  <|@ instruction MOV (x: [rax|QWORD[*] + 12], y: r14|DWORD) size: DWORD <|@ <|@
      nr   68  <|@ instruction rcx|DWORD[.] = COMPRESSPOINTER (input: rcx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@cd372ee encoding: base: 0 shift: 3 <|@ <|@
      nr   70  <|@ instruction MOV (x: [rax|QWORD[*] + 16], y: rcx|DWORD[.]) size: DWORD <|@ <|@
      nr   72  <|@ instruction r8|DWORD[.] = COMPRESSPOINTER (input: r8|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@cd372ee encoding: base: 0 shift: 3 <|@ <|@
      nr   74  <|@ instruction MOV (x: [rax|QWORD[*] + 20], y: r8|DWORD[.]) size: DWORD <|@ <|@
      nr   76  <|@ instruction r9|DWORD[.] = COMPRESSPOINTER (input: r9|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@cd372ee encoding: base: 0 shift: 3 <|@ <|@
      nr   78  <|@ instruction MOV (x: [rax|QWORD[*] + 24], y: r9|DWORD[.]) size: DWORD <|@ <|@
      nr   80  <|@ instruction MOV (x: [rax|QWORD[*] + 28], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   82  <|@ instruction rax|DWORD[.] = MOV [r13|QWORD[.] + 52] size: DWORD <|@ <|@
      nr   84  <|@ instruction r11|DWORD[.] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@cd372ee encoding: base: 0 shift: 3 <|@ <|@
      nr   86  <|@ instruction MOV (x: [r13|QWORD[.] + 52], y: r11|DWORD[.]) size: DWORD <|@ <|@
      nr   88  <|@ instruction rsi|QWORD[*] = SHR r13|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   90  <|@ instruction rdx|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr   92  <|@ instruction MOVB (x: [rsi|QWORD[*] + rdx|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   94  <|@ instruction TEST (x: rax|DWORD[.], y: rax|DWORD[.]) size: DWORD <|@ <|@
      nr   96  <|@ instruction BRANCH trueDestinationProbability: 0.00927591611561196 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 4607098868775293828
    begin_IR
      LIR
      nr  106  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  108  <|@ instruction MOV (x: [r10|QWORD[.] + 28], y: rax|DWORD[.]) size: DWORD <|@ <|@
      nr  110  <|@ instruction rsi|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  112  <|@ instruction MOVB (x: [rsi|QWORD[*] + rdx|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  114  <|@ instruction MOV (x: [rax|DWORD[.] * 8 + 32], y: r11|DWORD[.]) size: DWORD <|@ <|@
      nr  116  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@cd372ee encoding: base: 0 shift: 3 <|@ <|@
      nr  118  <|@ instruction rax|QWORD[*] = SHR rax|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  120  <|@ instruction MOVB (x: [rax|QWORD[*] + rdx|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  122  <|@ instruction rax|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  124  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   18  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   20  <|@ instruction stack:32|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr   22  <|@ instruction stack:40|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction stack:48|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   28  <|@ instruction rdx|DWORD = MOVE input: int[6|0x6] <|@ <|@
      nr   30  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   32  <|@ st <@st|@reference-map: [r13:0, stack:0, stack:8, stack:16]
live-base-pointers: []
java.util.LinkedHashMap.newNode(LinkedHashMap.java:256) [bci: 0]
locals: r13|QWORD[.] r14|DWORD stack:48|QWORD[.] stack:40|QWORD[.] stack:32|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr   34  <|@ instruction rax|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   36  <|@ instruction r9|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr   38  <|@ instruction r8|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr   40  <|@ instruction rcx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr   42  <|@ instruction JUMP ~[] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 4576500823363362560
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  100  <|@ instruction MOV (x: [r13|QWORD[.] + 48], y: r11|DWORD[.]) size: DWORD <|@ <|@
      nr  102  <|@ instruction rax|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  104  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: new           #6          // java.util.LinkedHashMap$Entry
     3: dup           
     4: iload_1       
     5: aload_2       
     6: aload_3       
     7: aload         4
     9: invokespecial #5          // java.util.LinkedHashMap$Entry.<init>:(int, java.lang.Object, java.lang.Object, java.util.HashMap$Node)void
    12: astore        5
    14: aload_0       
    15: aload         5
    17: invokespecial #6          // linkNodeLast:(java.util.LinkedHashMap$Entry)void
    20: aload         5
    22: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|QWORD[.], r9|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@3d401b2e slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction r14|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   10  <|@ instruction rax|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   12  <|@ instruction rsi|QWORD = LEA [rax|QWORD + 40] size: QWORD <|@ <|@
      nr   14  <|@ instruction CMP (x: rsi|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   16  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   46  <|@ instruction MOV (x: [r15|QWORD + 96], y: rsi|QWORD) size: QWORD <|@ <|@
      nr   48  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 232] instr: 0 <|@ <|@
      nr   50  <|@ instruction rax|QWORD[*] = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr   52  <|@ instruction JUMP ~[] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   56  <|@ instruction r10|QWORD[.] = MOVE rax|QWORD[*] moveKind: QWORD <|@ <|@
      nr   58  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/LinkedHashMap$Entry;, resolved>} <|@ <|@
      nr   60  <|@ instruction rsi|QWORD = MOV [rsi|QWORD + 168] size: QWORD <|@ <|@
      nr   62  <|@ instruction MOV (x: [rax|QWORD[*]], y: rsi|QWORD) size: QWORD <|@ <|@
      nr   64  <|@ instruction MOV [rax|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/LinkedHashMap$Entry;, resolved>;compressed} <|@ <|@
      nr   66  <|@ instruction MOV (x: [rax|QWORD[*] + 12], y: r14|DWORD) size: DWORD <|@ <|@
      nr   68  <|@ instruction rcx|DWORD[.] = COMPRESSPOINTER (input: rcx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@cd372ee encoding: base: 0 shift: 3 <|@ <|@
      nr   70  <|@ instruction MOV (x: [rax|QWORD[*] + 16], y: rcx|DWORD[.]) size: DWORD <|@ <|@
      nr   72  <|@ instruction r8|DWORD[.] = COMPRESSPOINTER (input: r8|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@cd372ee encoding: base: 0 shift: 3 <|@ <|@
      nr   74  <|@ instruction MOV (x: [rax|QWORD[*] + 20], y: r8|DWORD[.]) size: DWORD <|@ <|@
      nr   76  <|@ instruction r9|DWORD[.] = COMPRESSPOINTER (input: r9|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@cd372ee encoding: base: 0 shift: 3 <|@ <|@
      nr   78  <|@ instruction MOV (x: [rax|QWORD[*] + 24], y: r9|DWORD[.]) size: DWORD <|@ <|@
      nr   80  <|@ instruction MOV (x: [rax|QWORD[*] + 28], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   82  <|@ instruction rax|DWORD[.] = MOV [r13|QWORD[.] + 52] size: DWORD <|@ <|@
      nr   84  <|@ instruction r11|DWORD[.] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@cd372ee encoding: base: 0 shift: 3 <|@ <|@
      nr   86  <|@ instruction MOV (x: [r13|QWORD[.] + 52], y: r11|DWORD[.]) size: DWORD <|@ <|@
      nr   88  <|@ instruction rsi|QWORD[*] = SHR r13|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   90  <|@ instruction rdx|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr   92  <|@ instruction MOVB (x: [rsi|QWORD[*] + rdx|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   94  <|@ instruction TEST (x: rax|DWORD[.], y: rax|DWORD[.]) size: DWORD <|@ <|@
      nr   96  <|@ instruction BRANCH trueDestinationProbability: 0.00927591611561196 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 4607098868775293828
    begin_IR
      LIR
      nr  106  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  108  <|@ instruction MOV (x: [r10|QWORD[.] + 28], y: rax|DWORD[.]) size: DWORD <|@ <|@
      nr  110  <|@ instruction rsi|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  112  <|@ instruction MOVB (x: [rsi|QWORD[*] + rdx|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  114  <|@ instruction MOV (x: [rax|DWORD[.] * 8 + 32], y: r11|DWORD[.]) size: DWORD <|@ <|@
      nr  116  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@cd372ee encoding: base: 0 shift: 3 <|@ <|@
      nr  118  <|@ instruction rax|QWORD[*] = SHR rax|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  120  <|@ instruction MOVB (x: [rax|QWORD[*] + rdx|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  122  <|@ instruction rax|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  124  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   18  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   20  <|@ instruction stack:32|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr   22  <|@ instruction stack:40|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction stack:48|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   28  <|@ instruction rdx|DWORD = MOVE input: int[6|0x6] <|@ <|@
      nr   30  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   32  <|@ st <@st|@reference-map: [r13:0, stack:0, stack:8, stack:16]
live-base-pointers: []
java.util.LinkedHashMap.newNode(LinkedHashMap.java:256) [bci: 0]
locals: r13|QWORD[.] r14|DWORD stack:48|QWORD[.] stack:40|QWORD[.] stack:32|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr   34  <|@ instruction rax|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   36  <|@ instruction r9|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr   38  <|@ instruction r8|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr   40  <|@ instruction rcx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr   42  <|@ instruction JUMP ~[] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 4576500823363362560
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  100  <|@ instruction MOV (x: [r13|QWORD[.] + 48], y: r11|DWORD[.]) size: DWORD <|@ <|@
      nr  102  <|@ instruction rax|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  104  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: new           #6          // java.util.LinkedHashMap$Entry
     3: dup           
     4: iload_1       
     5: aload_2       
     6: aload_3       
     7: aload         4
     9: invokespecial #5          // java.util.LinkedHashMap$Entry.<init>:(int, java.lang.Object, java.lang.Object, java.util.HashMap$Node)void
    12: astore        5
    14: aload_0       
    15: aload         5
    17: invokespecial #6          // linkNodeLast:(java.util.LinkedHashMap$Entry)void
    20: aload         5
    22: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849c1e203493bc20f85efffffff900f1f80000000000f1f800000000089842400c0feff4883ec2848896c24204c8bee448bf2498b4760488d7028493b77700f87ad000000498977600f1880e80000004c8bd048beaddeaddeaddeadde488bb6a8000000488930c74008addeadde4489700c48c1e90389481049c1e8034489401449c1e903448948184c89601c418b45344d8bda49c1eb0345895d34498bf548c1ee0948ba00e01b17010000004488241685c00f84740000004189421c498bf248c1ee094488241644891cc52000000048c1e00348c1e80944882410498bc2488b6c24204883c428850500000000c5f877c34c894c24104c8944240848890c2448beaddeaddeaddeaddeba06000000b901000000e800000000904c8b4c24104c8b442408488b0c24e923ffffff45895d30498bc2488b6c24204883c428850500000000c5f877c3e80000000090e80000000090  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|QWORD[.], r9|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@3d401b2e slotKind: QWORD  <||@
  Comment 48 6 r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 51 8 r14|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 54 10 rax|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 58 12 rsi|QWORD = LEA [rax|QWORD + 40] size: QWORD  <||@
  Comment 62 14 CMP (x: rsi|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 66 16 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B2  <||@
  Comment 72 block B2 null  <||@
  Comment 72 44 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 72 46 MOV (x: [r15|QWORD + 96], y: rsi|QWORD) size: QWORD  <||@
  Comment 76 48 AMD64PREFETCH ~[rax|QWORD + 232] instr: 0  <||@
  Comment 83 50 rax|QWORD[*] = MOVE rax|QWORD moveKind: QWORD  <||@
  Comment 83 52 JUMP ~[] destination: B2 -> B3  <||@
  Comment 83 block B3 null  <||@
  Comment 83 54 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 83 56 r10|QWORD[.] = MOVE rax|QWORD[*] moveKind: QWORD  <||@
  Comment 86 58 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/LinkedHashMap$Entry;, resolved>}  <||@
  Comment 86 {meta{HotSpotType<Ljava/util/LinkedHashMap$Entry;, resolved>}}  <||@
  Comment 96 60 rsi|QWORD = MOV [rsi|QWORD + 168] size: QWORD  <||@
  Comment 103 62 MOV (x: [rax|QWORD[*]], y: rsi|QWORD) size: QWORD  <||@
  Comment 106 64 MOV [rax|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/LinkedHashMap$Entry;, resolved>;compressed}  <||@
  Comment 106 {meta{HotSpotType<Ljava/util/LinkedHashMap$Entry;, resolved>;compressed}}  <||@
  Comment 113 66 MOV (x: [rax|QWORD[*] + 12], y: r14|DWORD) size: DWORD  <||@
  Comment 117 68 rcx|DWORD[.] = COMPRESSPOINTER (input: rcx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@cd372ee encoding: base: 0 shift: 3  <||@
  Comment 121 70 MOV (x: [rax|QWORD[*] + 16], y: rcx|DWORD[.]) size: DWORD  <||@
  Comment 124 72 r8|DWORD[.] = COMPRESSPOINTER (input: r8|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@cd372ee encoding: base: 0 shift: 3  <||@
  Comment 128 74 MOV (x: [rax|QWORD[*] + 20], y: r8|DWORD[.]) size: DWORD  <||@
  Comment 132 76 r9|DWORD[.] = COMPRESSPOINTER (input: r9|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@cd372ee encoding: base: 0 shift: 3  <||@
  Comment 136 78 MOV (x: [rax|QWORD[*] + 24], y: r9|DWORD[.]) size: DWORD  <||@
  Comment 140 80 MOV (x: [rax|QWORD[*] + 28], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 144 82 rax|DWORD[.] = MOV [r13|QWORD[.] + 52] size: DWORD  <||@
  Comment 148 84 r11|DWORD[.] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@cd372ee encoding: base: 0 shift: 3  <||@
  Comment 155 86 MOV (x: [r13|QWORD[.] + 52], y: r11|DWORD[.]) size: DWORD  <||@
  Comment 159 88 rsi|QWORD[*] = SHR r13|QWORD[.] y: 9 size: QWORD  <||@
  Comment 166 90 rdx|QWORD = MOVE input: long[4682670080|0x1171be000]  <||@
  Comment 176 92 MOVB (x: [rsi|QWORD[*] + rdx|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 180 94 TEST (x: rax|DWORD[.], y: rax|DWORD[.]) size: DWORD  <||@
  Comment 182 96 BRANCH trueDestinationProbability: 0.00927591611561196 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5  <||@
  Comment 188 block B5 null  <||@
  Comment 188 106 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 188 108 MOV (x: [r10|QWORD[.] + 28], y: rax|DWORD[.]) size: DWORD  <||@
  Comment 192 110 rsi|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD  <||@
  Comment 199 112 MOVB (x: [rsi|QWORD[*] + rdx|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 203 114 MOV (x: [rax|DWORD[.] * 8 + 32], y: r11|DWORD[.]) size: DWORD  <||@
  Comment 211 116 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@cd372ee encoding: base: 0 shift: 3  <||@
  Comment 215 118 rax|QWORD[*] = SHR rax|QWORD[.] y: 9 size: QWORD  <||@
  Comment 219 120 MOVB (x: [rax|QWORD[*] + rdx|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 223 122 rax|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 226 124 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 235 12  <||@
  Comment 245 block B1 null  <||@
  Comment 245 18 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 245 20 stack:32|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD  <||@
  Comment 250 22 stack:40|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 255 24 stack:48|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 259 26 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 259 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 269 28 rdx|DWORD = MOVE input: int[6|0x6]  <||@
  Comment 274 30 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 279 32 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0]  <||@
  Comment 279 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 284 [r13:0, stack:0, stack:8, stack:16]at java.util.LinkedHashMap.newNode(LinkedHashMap.java:256) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2                  |3                  |4                  |5 
     locals:  |r13|QWORD[.]  |r14|DWORD  |stack:48|QWORD[.]  |stack:40|QWORD[.]  |stack:32|QWORD[.]  |-   <||@
  Comment 285 34 rax|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 285 36 r9|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 290 38 r8|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 295 40 rcx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 299 42 JUMP ~[] destination: B1 -> B3  <||@
  Comment 304 block B4 null  <||@
  Comment 304 98 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 304 100 MOV (x: [r13|QWORD[.] + 48], y: r11|DWORD[.]) size: DWORD  <||@
  Comment 308 102 rax|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 311 104 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 320 12  <||@
  Comment 330 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 330 4  <||@
  Comment 336 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 336 5  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-8379[java.util.LinkedHashMap.newNode(int, Object, Object, HashMap$Node)]"
  method "HotSpotCompilation-8379[java.util.LinkedHashMap.newNode(int, Object, Object, HashMap$Node)]"
  date 1527005193413
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 1077ca160 448b560849c1e203493bc20f85efbc03ff900f1f80000000000f1f800000000089842400c0feff4883ec2848896c24204c8bee448bf2498b4760488d7028493b77700f87ad000000498977600f1880e80000004c8bd048bef8c902c007000000488bb6a8000000488930c740083f5900f84489700c48c1e90389481049c1e8034489401449c1e903448948184c89601c418b45344d8bda49c1eb0345895d34498bf548c1ee0948ba00e01b17010000004488241685c00f84740000004189421c498bf248c1ee094488241644891cc52000000048c1e00348c1e80944882410498bc2488b6c24204883c4288505b54d0cfdc5f877c34c894c24104c8944240848890c2448be680b00c007000000ba06000000b901000000e864cb7cff904c8b4c24104c8b442408488b0c24e923ffffff45895d30498bc2488b6c24204883c4288505604d0cfdc5f877c3e8710348ff90e84bd203ff90f4f4  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|QWORD[.], r9|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@3d401b2e slotKind: QWORD  <||@
  Comment 48 6 r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 51 8 r14|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 54 10 rax|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 58 12 rsi|QWORD = LEA [rax|QWORD + 40] size: QWORD  <||@
  Comment 62 14 CMP (x: rsi|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 66 16 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B2  <||@
  Comment 72 block B2 null  <||@
  Comment 72 44 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 72 46 MOV (x: [r15|QWORD + 96], y: rsi|QWORD) size: QWORD  <||@
  Comment 76 48 AMD64PREFETCH ~[rax|QWORD + 232] instr: 0  <||@
  Comment 83 50 rax|QWORD[*] = MOVE rax|QWORD moveKind: QWORD  <||@
  Comment 83 52 JUMP ~[] destination: B2 -> B3  <||@
  Comment 83 block B3 null  <||@
  Comment 83 54 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 83 56 r10|QWORD[.] = MOVE rax|QWORD[*] moveKind: QWORD  <||@
  Comment 86 58 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/LinkedHashMap$Entry;, resolved>}  <||@
  Comment 86 {meta{HotSpotType<Ljava/util/LinkedHashMap$Entry;, resolved>}}  <||@
  Comment 96 60 rsi|QWORD = MOV [rsi|QWORD + 168] size: QWORD  <||@
  Comment 103 62 MOV (x: [rax|QWORD[*]], y: rsi|QWORD) size: QWORD  <||@
  Comment 106 64 MOV [rax|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/LinkedHashMap$Entry;, resolved>;compressed}  <||@
  Comment 106 {meta{HotSpotType<Ljava/util/LinkedHashMap$Entry;, resolved>;compressed}}  <||@
  Comment 113 66 MOV (x: [rax|QWORD[*] + 12], y: r14|DWORD) size: DWORD  <||@
  Comment 117 68 rcx|DWORD[.] = COMPRESSPOINTER (input: rcx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@cd372ee encoding: base: 0 shift: 3  <||@
  Comment 121 70 MOV (x: [rax|QWORD[*] + 16], y: rcx|DWORD[.]) size: DWORD  <||@
  Comment 124 72 r8|DWORD[.] = COMPRESSPOINTER (input: r8|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@cd372ee encoding: base: 0 shift: 3  <||@
  Comment 128 74 MOV (x: [rax|QWORD[*] + 20], y: r8|DWORD[.]) size: DWORD  <||@
  Comment 132 76 r9|DWORD[.] = COMPRESSPOINTER (input: r9|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@cd372ee encoding: base: 0 shift: 3  <||@
  Comment 136 78 MOV (x: [rax|QWORD[*] + 24], y: r9|DWORD[.]) size: DWORD  <||@
  Comment 140 80 MOV (x: [rax|QWORD[*] + 28], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 144 82 rax|DWORD[.] = MOV [r13|QWORD[.] + 52] size: DWORD  <||@
  Comment 148 84 r11|DWORD[.] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@cd372ee encoding: base: 0 shift: 3  <||@
  Comment 155 86 MOV (x: [r13|QWORD[.] + 52], y: r11|DWORD[.]) size: DWORD  <||@
  Comment 159 88 rsi|QWORD[*] = SHR r13|QWORD[.] y: 9 size: QWORD  <||@
  Comment 166 90 rdx|QWORD = MOVE input: long[4682670080|0x1171be000]  <||@
  Comment 176 92 MOVB (x: [rsi|QWORD[*] + rdx|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 180 94 TEST (x: rax|DWORD[.], y: rax|DWORD[.]) size: DWORD  <||@
  Comment 182 96 BRANCH trueDestinationProbability: 0.00927591611561196 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5  <||@
  Comment 188 block B5 null  <||@
  Comment 188 106 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 188 108 MOV (x: [r10|QWORD[.] + 28], y: rax|DWORD[.]) size: DWORD  <||@
  Comment 192 110 rsi|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD  <||@
  Comment 199 112 MOVB (x: [rsi|QWORD[*] + rdx|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 203 114 MOV (x: [rax|DWORD[.] * 8 + 32], y: r11|DWORD[.]) size: DWORD  <||@
  Comment 211 116 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@cd372ee encoding: base: 0 shift: 3  <||@
  Comment 215 118 rax|QWORD[*] = SHR rax|QWORD[.] y: 9 size: QWORD  <||@
  Comment 219 120 MOVB (x: [rax|QWORD[*] + rdx|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 223 122 rax|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 226 124 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 235 12  <||@
  Comment 245 block B1 null  <||@
  Comment 245 18 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 245 20 stack:32|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD  <||@
  Comment 250 22 stack:40|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 255 24 stack:48|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 259 26 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 259 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 269 28 rdx|DWORD = MOVE input: int[6|0x6]  <||@
  Comment 274 30 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 279 32 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0]  <||@
  Comment 279 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 284 [r13:0, stack:0, stack:8, stack:16]at java.util.LinkedHashMap.newNode(LinkedHashMap.java:256) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2                  |3                  |4                  |5 
     locals:  |r13|QWORD[.]  |r14|DWORD  |stack:48|QWORD[.]  |stack:40|QWORD[.]  |stack:32|QWORD[.]  |-   <||@
  Comment 285 34 rax|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 285 36 r9|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 290 38 r8|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 295 40 rcx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 299 42 JUMP ~[] destination: B1 -> B3  <||@
  Comment 304 block B4 null  <||@
  Comment 304 98 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 304 100 MOV (x: [r13|QWORD[.] + 48], y: r11|DWORD[.]) size: DWORD  <||@
  Comment 308 102 rax|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 311 104 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 320 12  <||@
  Comment 330 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 330 4  <||@
  Comment 336 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 336 5  <||@
  HexCodeFile>>> <|@
end_nmethod
