begin_compilation
  name " HotSpotCompilation-10026[java.util.AbstractCollection.toArray(Object[])]"
  method "HotSpotCompilation-10026[java.util.AbstractCollection.toArray(Object[])]"
  date 1527005232267
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v2804 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: v2804  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a! Ljava/util/AbstractCollection;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v2736 v2737 v1305 ?68 ?739 ?838 ?105 ?593 v2753 v2738 a1869 ?594 v2734 v2740 a1801 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a [Ljava/lang/Object;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 ?105 ?838 v2804 a1445 ?93 ?764 ?280 ?604 ?369 ?68 ?2092 ?76 ?268 v2754 v2695 a1444 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?3 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<AbstractCollection.toArray(Object[])>
duringCall: false
localsSize: 6
locksSize: 0
rethrowException: false
sourceFile: AbstractCollection.java
sourceLine: 176
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 - - - - 
=== Succesors ===
=== Usages ===
v2104 v2804 i2614 i2618 i2622 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2804 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?3 
object: a2 
=== Succesors ===
next: v2612 
=== Usages ===
=== Predecessor ===
v0 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?3 object: a2 #next: v2612  <|@  <|@
f <@~|@floating>@ <|@
tid v2753 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v2612 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2612 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 1]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v2753 
=== Succesors ===
next: v115 
=== Usages ===
v2539 v2535 v2537 v2611 
=== Predecessor ===
v2804 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2753 #next: v115  <|@  <|@
f <@~|@floating>@ <|@
tid v2536 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 1]
rawvalue: meta{HotSpotType<Ljava/util/ArrayList$SubList;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/ArrayList$SubList;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v2537 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v2537 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 1]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2612 
y: v2536 
=== Succesors ===
=== Usages ===
v863 v115 v277 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2612 y: v2536  <|@  <|@
f <@~|@floating>@ <|@
tid a2101 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v2104 v2205 v2132 v2122 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v2738 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i2630 i2634 i2620 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v2534 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 1]
rawvalue: meta{HotSpotType<Ljava/util/RandomAccessSubList;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/RandomAccessSubList;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v2535 v2611 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v2737 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i2629 a2631 i2616 a2617 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v2736 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i2628 i2633 i2615 i2619 a2621 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v2734 <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a2626 a2613 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@*|@fixed>@ <|@
tid v115 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/ArrayList$SubList; target_method=size target_method_class=Ljava/util/ArrayList$SubList; position=at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 1]
stamp: void
trueSuccessorProbability: 0.9362023508733385
=== Inputs ===
condition: v2537 
=== Succesors ===
trueSuccessor: v111 
falseSuccessor: v114 
=== Usages ===
=== Predecessor ===
v2612 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2537 #trueSuccessor: v111 #falseSuccessor: v114  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4606607780662349515
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v111 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/ArrayList$SubList; target_method=size target_method_class=Ljava/util/ArrayList$SubList; position=at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2613 
=== Usages ===
=== Predecessor ===
v115 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2613  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2613 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList$SubList.this$0
nodeSourcePosition: at java.util.ArrayList$SubList.checkForComodification(ArrayList.java:1238) [bci: 1]
at java.util.ArrayList$SubList.size(ArrayList.java:1048) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 1]
nullCheck: false
stamp: n# Ljava/util/ArrayList;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2734 
=== Succesors ===
next: i2614 
=== Usages ===
v2744 
=== Predecessor ===
v111 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2734 #next: i2614  <|@  <|@
f <@~|@floating>@ <|@
tid v2744 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2613 
=== Succesors ===
=== Usages ===
i2614 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2613  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2614 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractList.modCount
nodeSourcePosition: at java.util.ArrayList$SubList.checkForComodification(ArrayList.java:1238) [bci: 4]
at java.util.ArrayList$SubList.size(ArrayList.java:1048) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 1]
nullCheck: true
stamp: i32
=== Inputs ===
stateBefore: ?3 
guard: - 
address: v2744 
=== Succesors ===
next: i2615 
=== Usages ===
v264 
=== Predecessor ===
a2613 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?3 guard: - address: v2744 #next: i2615  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2615 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractList.modCount
nodeSourcePosition: at java.util.ArrayList$SubList.checkForComodification(ArrayList.java:1238) [bci: 8]
at java.util.ArrayList$SubList.size(ArrayList.java:1048) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 1]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2736 
=== Succesors ===
next: v1484 
=== Usages ===
v264 
=== Predecessor ===
i2614 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2736 #next: v1484  <|@  <|@
f <@~|@floating>@ <|@
tid v264 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.ArrayList$SubList.checkForComodification(ArrayList.java:1238) [bci: 11]
at java.util.ArrayList$SubList.size(ArrayList.java:1048) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 1]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2614 
y: i2615 
=== Succesors ===
=== Usages ===
v1484 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i2614 y: i2615  <|@  <|@
f <@*|@fixed>@ <|@
tid v1484 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$SubList.checkForComodification(ArrayList.java:1238) [bci: 11]
at java.util.ArrayList$SubList.size(ArrayList.java:1048) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 1]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v264 
=== Succesors ===
trueSuccessor: v1481 
falseSuccessor: v1483 
=== Usages ===
=== Predecessor ===
i2615 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v264 #trueSuccessor: v1481 #falseSuccessor: v1483  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B10" 
    xhandlers
    flags 
    probability 4606607780662349515
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1481 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$SubList.checkForComodification(ArrayList.java:1238) [bci: 11]
at java.util.ArrayList$SubList.size(ArrayList.java:1048) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2616 
=== Usages ===
=== Predecessor ===
v1484 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2616  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2616 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList$SubList.size
nodeSourcePosition: at java.util.ArrayList$SubList.size(ArrayList.java:1049) [bci: 5]
at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 1]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2737 
=== Succesors ===
next: v112 
=== Usages ===
i107 
=== Predecessor ===
v1481 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2737 #next: v112  <|@  <|@
f <@*|@fixed>@ <|@
tid v112 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v104 
=== Predecessor ===
i2616 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B148" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1483 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$SubList.checkForComodification(ArrayList.java:1238) [bci: 11]
at java.util.ArrayList$SubList.size(ArrayList.java:1048) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2111 
=== Usages ===
=== Predecessor ===
v1484 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2111  <|@  <|@
f <@~|@floating>@ <|@
tid i2112 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -336915
stableDimension: 0
stamp: i32 [-336915] ⇊00000000fffadbed ⇈00000000fffadbed
stampKind: i32
value: int[-336915|0xfffffffffffadbed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2102 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2111 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2098 
=== Predecessor ===
v1483 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" "B8" 
    xhandlers
    flags 
    probability 4589261525764508072
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v114 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v124 
=== Usages ===
=== Predecessor ===
v115 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v124  <|@  <|@
f <@~|@floating>@ <|@
tid v2611 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 1]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2612 
y: v2534 
=== Succesors ===
=== Usages ===
v124 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2612 y: v2534  <|@  <|@
f <@*|@fixed>@ <|@
tid v124 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/RandomAccessSubList; target_method=size target_method_class=Ljava/util/SubList; position=at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 1]
stamp: void
trueSuccessorProbability: 0.8661213947481707
=== Inputs ===
condition: v2611 
=== Succesors ===
trueSuccessor: v120 
falseSuccessor: v123 
=== Usages ===
=== Predecessor ===
v114 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2611 #trueSuccessor: v120 #falseSuccessor: v123  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4588124123200152941
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v120 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/RandomAccessSubList; target_method=size target_method_class=Ljava/util/SubList; position=at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2617 
=== Usages ===
=== Predecessor ===
v124 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2617  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2617 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: SubList.l
nodeSourcePosition: at java.util.SubList.checkForComodification(AbstractList.java:768) [bci: 5]
at java.util.SubList.size(AbstractList.java:645) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 1]
nullCheck: false
stamp: n Ljava/util/AbstractList;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2737 
=== Succesors ===
next: i2618 
=== Usages ===
v2745 
=== Predecessor ===
v120 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2737 #next: i2618  <|@  <|@
f <@~|@floating>@ <|@
tid v2745 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2617 
=== Succesors ===
=== Usages ===
i2618 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2617  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2618 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractList.modCount
nodeSourcePosition: at java.util.SubList.checkForComodification(AbstractList.java:768) [bci: 8]
at java.util.SubList.size(AbstractList.java:645) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 1]
nullCheck: true
stamp: i32
=== Inputs ===
stateBefore: ?3 
guard: - 
address: v2745 
=== Succesors ===
next: i2619 
=== Usages ===
v306 
=== Predecessor ===
a2617 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?3 guard: - address: v2745 #next: i2619  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2619 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractList.modCount
nodeSourcePosition: at java.util.SubList.checkForComodification(AbstractList.java:768) [bci: 1]
at java.util.SubList.size(AbstractList.java:645) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 1]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2736 
=== Succesors ===
next: v1492 
=== Usages ===
v306 
=== Predecessor ===
i2618 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2736 #next: v1492  <|@  <|@
f <@~|@floating>@ <|@
tid v306 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.SubList.checkForComodification(AbstractList.java:768) [bci: 11]
at java.util.SubList.size(AbstractList.java:645) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 1]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2618 
y: i2619 
=== Succesors ===
=== Usages ===
v1492 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i2618 y: i2619  <|@  <|@
f <@*|@fixed>@ <|@
tid v1492 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.SubList.checkForComodification(AbstractList.java:768) [bci: 11]
at java.util.SubList.size(AbstractList.java:645) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 1]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v306 
=== Succesors ===
trueSuccessor: v1489 
falseSuccessor: v1491 
=== Usages ===
=== Predecessor ===
i2619 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v306 #trueSuccessor: v1489 #falseSuccessor: v1491  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B10" 
    xhandlers
    flags 
    probability 4588124123200152941
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1489 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.SubList.checkForComodification(AbstractList.java:768) [bci: 11]
at java.util.SubList.size(AbstractList.java:645) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2620 
=== Usages ===
=== Predecessor ===
v1492 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2620  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2620 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: SubList.size
nodeSourcePosition: at java.util.SubList.size(AbstractList.java:646) [bci: 5]
at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 1]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2738 
=== Succesors ===
next: v121 
=== Usages ===
i107 
=== Predecessor ===
v1489 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2738 #next: v121  <|@  <|@
f <@*|@fixed>@ <|@
tid v121 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v104 
=== Predecessor ===
i2620 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B148" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1491 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.SubList.checkForComodification(AbstractList.java:768) [bci: 11]
at java.util.SubList.size(AbstractList.java:645) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2115 
=== Usages ===
=== Predecessor ===
v1492 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2115  <|@  <|@
f <@~|@floating>@ <|@
tid i2116 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -340243
stableDimension: 0
stamp: i32 [-340243] ⇊00000000fffaceed ⇈00000000fffaceed
stampKind: i32
value: int[-340243|0xfffffffffffaceed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2102 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2115 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2098 
=== Predecessor ===
v1491 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B9" "B147" 
    xhandlers
    flags 
    probability 4576077253934364555
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v123 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1496 
=== Usages ===
=== Predecessor ===
v124 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1496  <|@  <|@
f <@~|@floating>@ <|@
tid v2538 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 1]
rawvalue: meta{HotSpotType<Ljava/util/HashSet;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/HashSet;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v2539 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v2539 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 1]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2612 
y: v2538 
=== Succesors ===
=== Usages ===
v1496 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2612 y: v2538  <|@  <|@
f <@*|@fixed>@ <|@
tid v1496 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/HashSet; target_method=size target_method_class=Ljava/util/HashSet; position=at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 1]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v2539 
=== Succesors ===
trueSuccessor: v1493 
falseSuccessor: v1495 
=== Usages ===
=== Predecessor ===
v123 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2539 #trueSuccessor: v1493 #falseSuccessor: v1495  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" 
    xhandlers
    flags 
    probability 4576077253934364555
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1493 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/HashSet; target_method=size target_method_class=Ljava/util/HashSet; position=at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2621 
=== Usages ===
=== Predecessor ===
v1496 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2621  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2621 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashSet.map
nodeSourcePosition: at java.util.HashSet.size(HashSet.java:182) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 1]
nullCheck: false
stamp: n Ljava/util/HashMap;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2736 
=== Succesors ===
next: i2622 
=== Usages ===
v2746 
=== Predecessor ===
v1493 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2736 #next: i2622  <|@  <|@
f <@~|@floating>@ <|@
tid v2746 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2621 
=== Succesors ===
=== Usages ===
i2622 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2621  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2622 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashMap.size
nodeSourcePosition: at java.util.HashMap.size(HashMap.java:526) [bci: 1]
at java.util.HashSet.size(HashSet.java:182) [bci: 4]
at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 1]
nullCheck: true
stamp: i32
=== Inputs ===
stateBefore: ?3 
guard: - 
address: v2746 
=== Succesors ===
next: v130 
=== Usages ===
i107 
=== Predecessor ===
a2621 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?3 guard: - address: v2746 #next: v130  <|@  <|@
f <@*|@fixed>@ <|@
tid v130 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v104 
=== Predecessor ===
i2622 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B2" "B6" "B9" 
    successors "B11" "B24" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i107 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 1]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v104 
values: i2616 i2620 i2622 
=== Succesors ===
=== Usages ===
?105 v8 v2352 a2321 i2281 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v104 values: i2616 i2620 i2622  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v104 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 1]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v112 v121 v130 
=== Succesors ===
next: i2623 
=== Usages ===
i107 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v112 v121 v130 #next: i2623  <|@  <|@
f <@~|@floating>@ <|@
tid v2695 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i2623 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2623 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:177) [bci: 6]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v2695 
=== Succesors ===
next: v11 
=== Usages ===
v8 
=== Predecessor ===
v104 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2695 #next: v11  <|@  <|@
f <@~|@floating>@ <|@
tid v8 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:177) [bci: 8]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2623 
y: i107 
=== Succesors ===
=== Usages ===
v11 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2623 y: i107  <|@  <|@
f <@~|@floating>@ <|@
tid v2572 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v2479 v2587 v2590 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v2566 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/util/SubList$1;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/SubList$1;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v2462 v2585 v2610 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v2558 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
rawvalue: meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeInputList;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeInputList;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v2559 v2589 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v2554 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
rawvalue: meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v2555 v2588 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v2548 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/util/ArrayList$SubList$1;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/ArrayList$SubList$1;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v2409 v2586 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v2370 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<[I, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[I, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a2384 a2438 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i21 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotClassSubstitutions.getComponentType(HotSpotClassSubstitutions.java:121) [bci: 6]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 19]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v444 i75 i2015 v2418 v2466 i902 v612 v661 v1466 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i20 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotClassSubstitutions.getComponentType(HotSpotClassSubstitutions.java:121) [bci: 6]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 19]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i94 i797 i528 i349 v917 i2031 a2321 a2384 a2438 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v11 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:177) [bci: 8]
stamp: void
trueSuccessorProbability: 2.746347358013842E-4
=== Inputs ===
condition: v8 
=== Succesors ===
trueSuccessor: v9 
falseSuccessor: v10 
=== Usages ===
=== Predecessor ===
i2623 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v8 #trueSuccessor: v9 #falseSuccessor: v10  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4553701740329279932
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v9 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:177) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2624 
=== Usages ===
=== Predecessor ===
v11 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2624  <|@  <|@
f <@~|@floating>@ <|@
tid v2754 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
v2624 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2624 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.ClassGetHubNode.readClass(Class) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotClassSubstitutions.getComponentType(HotSpotClassSubstitutions.java:120) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 19]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v2754 
=== Succesors ===
next: a1246 
=== Usages ===
v2254 v2356 v2694 
=== Predecessor ===
v9 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2754 #next: a1246  <|@  <|@
f <@~|@floating>@ <|@
tid v2694 <|@
d <@d|@=== Debug Properties ===
displacement: 224
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: v2624 
=== Succesors ===
=== Usages ===
a1246 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: v2624  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1246 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: ArrayKlass::_component_mirror:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotClassSubstitutions.getComponentType(HotSpotClassSubstitutions.java:124) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 19]
nullCheck: false
stamp: a!# Ljava/lang/Class;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2694 
=== Succesors ===
next: v2261 
=== Usages ===
v2258 
=== Predecessor ===
v2624 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2694 #next: v2261  <|@  <|@
f <@~|@floating>@ <|@
tid a2255 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
rawvalue: Class:void
stableDimension: 0
stamp: a!# Ljava/lang/Class;
stampKind: a -
value: Object[Class:void]
=== Inputs ===
=== Succesors ===
=== Usages ===
v2258 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v2258 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.throwsIllegalArgumentException(DynamicNewArrayNode.java:120) [bci: 2]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:369) [bci: 35]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a1246 
y: a2255 
=== Succesors ===
=== Usages ===
v2261 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.ObjectEqualsNode>@ x: a1246 y: a2255  <|@  <|@
tid ?105 <|@
d <@d|@=== Debug Properties ===
bci: 4
code: ResolvedJavaMethodBytecode<AbstractCollection.toArray(Object[])>
duringCall: false
localsSize: 6
locksSize: 0
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 1]
rethrowException: false
sourceFile: AbstractCollection.java
sourceLine: 176
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: a1 a2 - - - - i107 
=== Succesors ===
=== Usages ===
a2321 v1502 v2262 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 - - - - i107  <|@  <|@
f <@*|@fixed>@ <|@
tid v2261 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:369) [bci: 49]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v2258 
=== Succesors ===
trueSuccessor: v2260 
falseSuccessor: v2259 
=== Usages ===
=== Predecessor ===
a1246 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2258 #trueSuccessor: v2260 #falseSuccessor: v2259  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2260 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:370) [bci: 52]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2262 
=== Usages ===
=== Predecessor ===
v2261 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2262  <|@  <|@
f <@*|@fixed>@ <|@
tid v2262 <|@
d <@d|@=== Debug Properties ===
action: None
debugId: 0
nodeSourcePosition: at org.graalvm.compiler.nodes.DeoptimizeNode.deopt(DeoptimizationAction, DeoptimizationReason) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:370) [bci: 58]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
reason: RuntimeConstraint
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?105 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v2260 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?105  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4553701740329279932
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2259 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:373) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: j2287 
=== Usages ===
=== Predecessor ===
v2261 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j2287  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2287 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:772) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:319) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j2347 
=== Usages ===
v2755 v2756 
=== Predecessor ===
v2259 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j2347  <|@  <|@
f <@~|@floating>@ <|@
tid v2755 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j2287 
index: - 
=== Succesors ===
=== Usages ===
j2347 v2351 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2287 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2347 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:245) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:320) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v2755 
=== Succesors ===
next: j2348 
=== Usages ===
j2291 v2757 v2758 v2764 v2759 a2320 v2760 v2761 v2762 v2763 
=== Predecessor ===
j2287 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2755 #next: j2348  <|@  <|@
f <@~|@floating>@ <|@
tid v2756 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j2287 
index: - 
=== Succesors ===
=== Usages ===
j2348 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2287 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2348 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:249) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:321) [bci: 25]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v2756 
=== Succesors ===
next: v2295 
=== Usages ===
v2292 
=== Predecessor ===
j2347 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2756 #next: v2295  <|@  <|@
f <@~|@floating>@ <|@
tid i1060 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.ArrayList$SubList$1.next(ArrayList.java:1122) [bci: 77]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
rawvalue: 2
stableDimension: 0
stamp: i32 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2281 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i2281 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 8]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
stamp: i32 [-2147483648 - 2147483644] ⇈00000000fffffffc
=== Inputs ===
x: i107 
y: i1060 
=== Succesors ===
=== Usages ===
i2599 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i107 y: i1060  <|@  <|@
f <@~|@floating>@ <|@
tid i2598 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
rawvalue: 23
stableDimension: 0
stamp: i32 [23] ⇊0000000000000017 ⇈0000000000000017
stampKind: i32
value: int[23|0x17]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2599 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i2599 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
stamp: i32 [-2147483645 - 2147483647] ⇊0000000000000003
=== Inputs ===
x: i2281 
y: i2598 
=== Succesors ===
=== Usages ===
i2286 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i2281 y: i2598  <|@  <|@
f <@~|@floating>@ <|@
tid i2285 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:603) [bci: 23]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
rawvalue: -8
stableDimension: 0
stamp: i32 [-8] ⇊00000000fffffff8 ⇈00000000fffffff8
stampKind: i32
value: int[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2286 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i2286 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:604) [bci: 30]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i2599 
y: i2285 
=== Succesors ===
=== Usages ===
j2290 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i2599 y: i2285  <|@  <|@
f <@~|@floating>@ <|@
tid j2290 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
resultBits: 64
stamp: i64 [-2147483648 - 2147483640] ⇈fffffffffffffff8
=== Inputs ===
value: i2286 
=== Succesors ===
=== Usages ===
j2291 v2312 v2760 v2761 v2762 v2763 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i2286  <|@  <|@
f <@~|@floating>@ <|@
tid j2291 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
stamp: i64
=== Inputs ===
x: j2290 
y: j2347 
=== Succesors ===
=== Usages ===
v2292 v2351 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2290 y: j2347  <|@  <|@
f <@~|@floating>@ <|@
tid v2292 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 83]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2348 
y: j2291 
=== Succesors ===
=== Usages ===
v2295 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j2348 y: j2291  <|@  <|@
f <@*|@fixed>@ <|@
tid v2295 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 89]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v2292 
=== Succesors ===
trueSuccessor: v2293 
falseSuccessor: v2294 
=== Usages ===
=== Predecessor ===
j2348 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2292 #trueSuccessor: v2293 #falseSuccessor: v2294  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B19" 
    xhandlers
    flags 
    probability 4523595055609508578
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2293 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2321 
=== Usages ===
=== Predecessor ===
v2295 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2321  <|@  <|@
f <@~|@floating>@ <|@
tid v2254 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.ClassGetHubNode.readClass(Class) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotClassSubstitutions.getComponentType(HotSpotClassSubstitutions.java:120) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 19]
op: Uncompress
stamp: Klass*!
=== Inputs ===
value: v2624 
=== Succesors ===
=== Usages ===
a2321 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: v2624  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2321 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.newArray(ForeignCallDescriptor, KlassPointer, int, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 155]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?105 
arguments: v2254 i107 i20 
=== Succesors ===
next: v2324 
=== Usages ===
a2325 
=== Predecessor ===
v2293 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?105 arguments: v2254 i107 i20 #next: v2324  <|@  <|@
f <@*|@fixed>@ <|@
tid v2324 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2323 
=== Predecessor ===
a2321 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4553651079162429142
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2294 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 92]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2351 
=== Usages ===
=== Predecessor ===
v2295 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2351  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2351 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:257) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 96]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2755 
value: j2291 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2334 
=== Usages ===
=== Predecessor ===
v2294 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2755 value: j2291 stateAfter: - lastLocationAccess: - #next: v2334  <|@  <|@
f <@~|@floating>@ <|@
tid v2760 <|@
d <@d|@=== Debug Properties ===
displacement: 192
scale: Times1
stamp: void*
=== Inputs ===
base: j2290 
index: j2347 
=== Succesors ===
=== Usages ===
v2334 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2290 index: j2347  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2334 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
stamp: void
=== Inputs ===
address: v2760 
=== Succesors ===
next: v2337 
=== Usages ===
=== Predecessor ===
v2351 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v2760 #next: v2337  <|@  <|@
f <@~|@floating>@ <|@
tid v2761 <|@
d <@d|@=== Debug Properties ===
displacement: 256
scale: Times1
stamp: void*
=== Inputs ===
base: j2290 
index: j2347 
=== Succesors ===
=== Usages ===
v2337 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2290 index: j2347  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2337 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
stamp: void
=== Inputs ===
address: v2761 
=== Succesors ===
next: v2340 
=== Usages ===
=== Predecessor ===
v2334 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v2761 #next: v2340  <|@  <|@
f <@~|@floating>@ <|@
tid v2762 <|@
d <@d|@=== Debug Properties ===
displacement: 320
scale: Times1
stamp: void*
=== Inputs ===
base: j2290 
index: j2347 
=== Succesors ===
=== Usages ===
v2340 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2290 index: j2347  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2340 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
stamp: void
=== Inputs ===
address: v2762 
=== Succesors ===
next: v2343 
=== Usages ===
=== Predecessor ===
v2337 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v2762 #next: v2343  <|@  <|@
f <@~|@floating>@ <|@
tid v2763 <|@
d <@d|@=== Debug Properties ===
displacement: 384
scale: Times1
stamp: void*
=== Inputs ===
base: j2290 
index: j2347 
=== Succesors ===
=== Usages ===
v2343 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2290 index: j2347  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2343 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
stamp: void
=== Inputs ===
address: v2763 
=== Succesors ===
next: v2352 
=== Usages ===
=== Predecessor ===
v2340 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v2763 #next: v2352  <|@  <|@
f <@~|@floating>@ <|@
tid v2757 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j2347 
index: - 
=== Succesors ===
=== Usages ===
v2352 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2347 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2352 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:549) [bci: 12]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2757 
value: i107 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2353 
=== Usages ===
=== Predecessor ===
v2343 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2757 value: i107 stateAfter: - lastLocationAccess: - #next: v2353  <|@  <|@
f <@~|@floating>@ <|@
tid v2758 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j2347 
index: - 
=== Succesors ===
=== Usages ===
v2353 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2347 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j2256 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
rawvalue: 1
stableDimension: 0
stamp: i64 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v2353 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2353 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:469) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2758 
value: j2256 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2356 
=== Usages ===
=== Predecessor ===
v2352 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2758 value: j2256 stateAfter: - lastLocationAccess: - #next: v2356  <|@  <|@
f <@~|@floating>@ <|@
tid v2764 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j2347 
index: - 
=== Succesors ===
=== Usages ===
v2356 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2347 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2356 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2764 
value: v2624 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2309 
=== Usages ===
=== Predecessor ===
v2353 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2764 value: v2624 stateAfter: - lastLocationAccess: - #next: v2309  <|@  <|@
f <@~|@floating>@ <|@
tid j1052 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.ArrayList$SubList$1.next(ArrayList.java:1122) [bci: 73]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
rawvalue: 16
stableDimension: 0
stamp: i64 [16] ⇊0000000000000010 ⇈0000000000000010
stampKind: i64
value: long[16|0x10]
=== Inputs ===
=== Succesors ===
=== Usages ===
j2311 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2309 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.fillMemory(NewObjectSnippets.java:489) [bci: 233]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.zeroMemory(NewObjectSnippets.java:449) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:556) [bci: 37]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2310 
=== Predecessor ===
v2356 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B17" 
    successors "B17" "B18" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4558154678789799638
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j2311 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.zeroMemory(NewObjectSnippets.java:449) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:556) [bci: 37]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2310 
values: j1052 j2317 
=== Succesors ===
=== Usages ===
v2312 v2759 j2317 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2310 values: j1052 j2317  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2310 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 2.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.fillMemory(NewObjectSnippets.java:489) [bci: 233]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.zeroMemory(NewObjectSnippets.java:449) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:556) [bci: 37]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v2309 
=== Succesors ===
next: v2315 
=== Usages ===
j2311 v2314 v2318 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v2309 #next: v2315  <|@  <|@
f <@~|@floating>@ <|@
tid v2312 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.fillMemory(NewObjectSnippets.java:489) [bci: 241]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.zeroMemory(NewObjectSnippets.java:449) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:556) [bci: 37]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2311 
y: j2290 
=== Succesors ===
=== Usages ===
v2315 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2311 y: j2290  <|@  <|@
f <@*|@fixed>@ <|@
tid v2315 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.fillMemory(NewObjectSnippets.java:489) [bci: 241]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.zeroMemory(NewObjectSnippets.java:449) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:556) [bci: 37]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v2312 
=== Succesors ===
trueSuccessor: v2313 
falseSuccessor: v2314 
=== Usages ===
=== Predecessor ===
v2310 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2312 #trueSuccessor: v2313 #falseSuccessor: v2314  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B16" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4553651079162429142
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2313 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.fillMemory(NewObjectSnippets.java:490) [bci: 244]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.zeroMemory(NewObjectSnippets.java:449) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:556) [bci: 37]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2357 
=== Usages ===
=== Predecessor ===
v2315 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2357  <|@  <|@
f <@~|@floating>@ <|@
tid v2759 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j2347 
index: j2311 
=== Succesors ===
=== Usages ===
v2357 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2347 index: j2311  <|@  <|@
f <@~|@floating>@ <|@
tid j1796 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 0
stableDimension: 0
stamp: i64 [0] ⇈0000000000000000
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v2357 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2357 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.fillMemory(NewObjectSnippets.java:490) [bci: 251]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.zeroMemory(NewObjectSnippets.java:449) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:556) [bci: 37]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2759 
value: j1796 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2318 
=== Usages ===
=== Predecessor ===
v2313 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2759 value: j1796 stateAfter: - lastLocationAccess: - #next: v2318  <|@  <|@
f <@~|@floating>@ <|@
tid j2248 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 1]
rawvalue: 8
stableDimension: 0
stamp: i64 [8] ⇊0000000000000008 ⇈0000000000000008
stampKind: i64
value: long[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j2317 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j2317 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.fillMemory(NewObjectSnippets.java:489) [bci: 258]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.zeroMemory(NewObjectSnippets.java:449) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:556) [bci: 37]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
stamp: i64
=== Inputs ===
x: j2311 
y: j2248 
=== Succesors ===
=== Usages ===
j2311 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2311 y: j2248  <|@  <|@
f <@*|@fixed>@ <|@
tid v2318 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.fillMemory(NewObjectSnippets.java:489) [bci: 233]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.zeroMemory(NewObjectSnippets.java:449) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:556) [bci: 37]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
stamp: void
=== Inputs ===
loopBegin: v2310 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v2357 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v2310  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4553651079162429142
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2314 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.fillMemory(NewObjectSnippets.java:493) [bci: 266]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.zeroMemory(NewObjectSnippets.java:449) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:556) [bci: 37]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v2310 
=== Succesors ===
next: v2319 
=== Usages ===
=== Predecessor ===
v2315 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v2310 #next: v2319  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2319 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.MembarNode.memoryBarrier(int, LocationIdentity) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:560) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2320 
=== Usages ===
=== Predecessor ===
v2314 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a2320  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2320 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:561) [bci: 71]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
stamp: a! -
trackedPointer: true
=== Inputs ===
input: j2347 
=== Succesors ===
next: v2322 
=== Usages ===
a2325 
=== Predecessor ===
v2319 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j2347 #next: v2322  <|@  <|@
f <@*|@fixed>@ <|@
tid v2322 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2323 
=== Predecessor ===
a2320 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B14" 
    successors "B20" "B23" 
    xhandlers
    flags 
    probability 4553701740329279932
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a2325 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
stamp: a! -
valueDescription: a -
=== Inputs ===
merge: v2323 
values: a2320 a2321 
=== Succesors ===
=== Usages ===
a1444 v2765 a1445 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2323 values: a2320 a2321  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2323 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2322 v2324 
=== Succesors ===
next: v2625 
=== Usages ===
a2325 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2322 v2324 #next: v2625  <|@  <|@
f <@~|@floating>@ <|@
tid v2765 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a2325 
index: - 
=== Succesors ===
=== Usages ===
v2625 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2325 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2625 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 26]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v2765 
=== Succesors ===
next: v1504 
=== Usages ===
v2542 
=== Predecessor ===
v2323 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2765 #next: v1504  <|@  <|@
f <@~|@floating>@ <|@
tid v2541 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 26]
rawvalue: meta{HotSpotType<[Ljava/lang/Class;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<[Ljava/lang/Class;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v2542 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v2542 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 26]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2625 
y: v2541 
=== Succesors ===
=== Usages ===
v1504 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2625 y: v2541  <|@  <|@
f <@*|@fixed>@ <|@
tid v1504 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 26]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v2542 
=== Succesors ===
trueSuccessor: v1501 
falseSuccessor: v1503 
=== Usages ===
=== Predecessor ===
v2625 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2542 #trueSuccessor: v1501 #falseSuccessor: v1503  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4553701740329279932
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1501 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: v277 
=== Usages ===
=== Predecessor ===
v1504 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v277  <|@  <|@
f <@*|@fixed>@ <|@
tid v277 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/ArrayList$SubList; target_method=iterator target_method_class=Ljava/util/ArrayList$SubList; position=at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
trueSuccessorProbability: 0.9362023508733385
=== Inputs ===
condition: v2537 
=== Succesors ===
trueSuccessor: v274 
falseSuccessor: v276 
=== Usages ===
=== Predecessor ===
v1501 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2537 #trueSuccessor: v274 #falseSuccessor: v276  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B26" 
    xhandlers
    flags 
    probability 4553378533994570538
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v274 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/ArrayList$SubList; target_method=iterator target_method_class=Ljava/util/ArrayList$SubList; position=at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: v834 
=== Usages ===
=== Predecessor ===
v277 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v834  <|@  <|@
f <@*|@fixed>@ <|@
tid v834 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v833 
=== Predecessor ===
v274 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B36" 
    xhandlers
    flags 
    probability 4535792526490069278
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v276 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: v837 
=== Usages ===
=== Predecessor ===
v277 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v837  <|@  <|@
f <@*|@fixed>@ <|@
tid v837 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v836 
=== Predecessor ===
v276 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1503 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1502 
=== Usages ===
=== Predecessor ===
v1504 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1502  <|@  <|@
f <@*|@fixed>@ <|@
tid v1502 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 1250
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 26]
reason: TypeCheckedInliningViolated
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?105 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1503 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?105  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B25" "B35" 
    xhandlers
    flags 
    probability 4607179945110229772
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v10 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:177) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: v863 
=== Usages ===
=== Predecessor ===
v11 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v863  <|@  <|@
f <@*|@fixed>@ <|@
tid v863 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/ArrayList$SubList; target_method=iterator target_method_class=Ljava/util/ArrayList$SubList; position=at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
trueSuccessorProbability: 0.9362023508733385
=== Inputs ===
condition: v2537 
=== Succesors ===
trueSuccessor: v861 
falseSuccessor: v862 
=== Usages ===
=== Predecessor ===
v10 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2537 #trueSuccessor: v861 #falseSuccessor: v862  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" 
    xhandlers
    flags 
    probability 4606605464788154999
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v861 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/ArrayList$SubList; target_method=iterator target_method_class=Ljava/util/ArrayList$SubList; position=at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: v835 
=== Usages ===
=== Predecessor ===
v863 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v835  <|@  <|@
f <@*|@fixed>@ <|@
tid v835 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v833 
=== Predecessor ===
v861 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B21" "B25" 
    successors "B27" "B33" 
    xhandlers
    flags 
    probability 4606607780662349515
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a1444 <|@
d <@d|@=== Debug Properties ===
stamp: a! [Ljava/lang/Object;
valueDescription: a -
=== Inputs ===
merge: v833 
values: a2325 a2 
=== Succesors ===
=== Usages ===
?68 a843 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v833 values: a2325 a2  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v833 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v834 v835 
=== Succesors ===
next: a2626 
=== Usages ===
a1444 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v834 v835 #next: a2626  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2626 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList$SubList.this$0
nodeSourcePosition: at java.util.ArrayList$SubList.checkForComodification(ArrayList.java:1238) [bci: 1]
at java.util.ArrayList$SubList.listIterator(ArrayList.java:1099) [bci: 1]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.ArrayList$SubList.iterator(ArrayList.java:1095) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
nullCheck: false
stamp: n# Ljava/util/ArrayList;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2734 
=== Succesors ===
next: i2627 
=== Usages ===
v2735 
=== Predecessor ===
v833 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2734 #next: i2627  <|@  <|@
tid ?68 <|@
d <@d|@=== Debug Properties ===
bci: 32
code: ResolvedJavaMethodBytecode<AbstractCollection.toArray(Object[])>
duringCall: false
localsSize: 6
locksSize: 0
rethrowException: false
sourceFile: AbstractCollection.java
sourceLine: 179
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: a1 a2 - - - - a1444 
=== Succesors ===
=== Usages ===
v2122 a2384 i2627 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 - - - - a1444  <|@  <|@
f <@~|@floating>@ <|@
tid v2735 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2626 
=== Succesors ===
=== Usages ===
i2627 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2626  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2627 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractList.modCount
nodeSourcePosition: at java.util.ArrayList$SubList.checkForComodification(ArrayList.java:1238) [bci: 4]
at java.util.ArrayList$SubList.listIterator(ArrayList.java:1099) [bci: 1]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.ArrayList$SubList.iterator(ArrayList.java:1095) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
nullCheck: true
stamp: i32
=== Inputs ===
stateBefore: ?68 
guard: - 
address: v2735 
=== Succesors ===
next: i2628 
=== Usages ===
v440 v2416 
=== Predecessor ===
a2626 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?68 guard: - address: v2735 #next: i2628  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2628 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractList.modCount
nodeSourcePosition: at java.util.ArrayList$SubList.checkForComodification(ArrayList.java:1238) [bci: 8]
at java.util.ArrayList$SubList.listIterator(ArrayList.java:1099) [bci: 1]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.ArrayList$SubList.iterator(ArrayList.java:1095) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2736 
=== Succesors ===
next: v1512 
=== Usages ===
v440 
=== Predecessor ===
i2627 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2736 #next: v1512  <|@  <|@
f <@~|@floating>@ <|@
tid v440 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.ArrayList$SubList.checkForComodification(ArrayList.java:1238) [bci: 11]
at java.util.ArrayList$SubList.listIterator(ArrayList.java:1099) [bci: 1]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.ArrayList$SubList.iterator(ArrayList.java:1095) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2627 
y: i2628 
=== Succesors ===
=== Usages ===
v1512 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i2627 y: i2628  <|@  <|@
f <@*|@fixed>@ <|@
tid v1512 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$SubList.checkForComodification(ArrayList.java:1238) [bci: 11]
at java.util.ArrayList$SubList.listIterator(ArrayList.java:1099) [bci: 1]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.ArrayList$SubList.iterator(ArrayList.java:1095) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v440 
=== Succesors ===
trueSuccessor: v1509 
falseSuccessor: v1511 
=== Usages ===
=== Predecessor ===
i2628 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v440 #trueSuccessor: v1509 #falseSuccessor: v1511  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4606607780662349515
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1509 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$SubList.checkForComodification(ArrayList.java:1238) [bci: 11]
at java.util.ArrayList$SubList.listIterator(ArrayList.java:1099) [bci: 1]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.ArrayList$SubList.iterator(ArrayList.java:1095) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2629 
=== Usages ===
=== Predecessor ===
v1512 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2629  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2629 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList$SubList.size
nodeSourcePosition: at java.util.ArrayList$SubList.rangeCheckForAdd(ArrayList.java:1229) [bci: 6]
at java.util.ArrayList$SubList.listIterator(ArrayList.java:1100) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.ArrayList$SubList.iterator(ArrayList.java:1095) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2737 
=== Succesors ===
next: v1516 
=== Usages ===
v444 
=== Predecessor ===
v1509 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2737 #next: v1516  <|@  <|@
f <@~|@floating>@ <|@
tid v444 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.ArrayList$SubList.rangeCheckForAdd(ArrayList.java:1229) [bci: 9]
at java.util.ArrayList$SubList.listIterator(ArrayList.java:1100) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.ArrayList$SubList.iterator(ArrayList.java:1095) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2629 
y: i21 
=== Succesors ===
=== Usages ===
v1516 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2629 y: i21  <|@  <|@
f <@*|@fixed>@ <|@
tid v1516 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$SubList.rangeCheckForAdd(ArrayList.java:1229) [bci: 9]
at java.util.ArrayList$SubList.listIterator(ArrayList.java:1100) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.ArrayList$SubList.iterator(ArrayList.java:1095) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v444 
=== Succesors ===
trueSuccessor: v1515 
falseSuccessor: v1513 
=== Usages ===
=== Predecessor ===
i2629 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v444 #trueSuccessor: v1515 #falseSuccessor: v1513  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1515 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$SubList.rangeCheckForAdd(ArrayList.java:1229) [bci: 9]
at java.util.ArrayList$SubList.listIterator(ArrayList.java:1100) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.ArrayList$SubList.iterator(ArrayList.java:1095) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2123 
=== Usages ===
=== Predecessor ===
v1516 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2123  <|@  <|@
f <@~|@floating>@ <|@
tid i2124 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -324115
stableDimension: 0
stamp: i32 [-324115] ⇊00000000fffb0ded ⇈00000000fffb0ded
stampKind: i32
value: int[-324115|0xfffffffffffb0ded]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2120 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2123 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2117 
=== Predecessor ===
v1515 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4606607780662349515
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1513 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$SubList.rangeCheckForAdd(ArrayList.java:1229) [bci: 9]
at java.util.ArrayList$SubList.listIterator(ArrayList.java:1100) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.ArrayList$SubList.iterator(ArrayList.java:1095) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: j2372 
=== Usages ===
=== Predecessor ===
v1516 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j2372  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2372 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j2388 
=== Usages ===
v2766 v2767 
=== Predecessor ===
v1513 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j2388  <|@  <|@
f <@~|@floating>@ <|@
tid v2766 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j2372 
index: - 
=== Succesors ===
=== Usages ===
j2388 v2390 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2372 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2388 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v2766 
=== Succesors ===
next: j2389 
=== Usages ===
j2544 j2394 v2787 
=== Predecessor ===
j2372 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2766 #next: j2389  <|@  <|@
f <@~|@floating>@ <|@
tid v2767 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j2372 
index: - 
=== Succesors ===
=== Usages ===
j2389 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2372 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2389 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v2767 
=== Succesors ===
next: v2380 
=== Usages ===
v2377 
=== Predecessor ===
j2388 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2767 #next: v2380  <|@  <|@
f <@~|@floating>@ <|@
tid j2543 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 40
stableDimension: 0
stamp: i64 [40] ⇊0000000000000028 ⇈0000000000000028
stampKind: i64
value: long[40|0x28]
=== Inputs ===
=== Succesors ===
=== Usages ===
j2544 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j2544 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j2388 
y: j2543 
=== Succesors ===
=== Usages ===
v2377 v2390 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2388 y: j2543  <|@  <|@
f <@~|@floating>@ <|@
tid v2377 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2389 
y: j2544 
=== Succesors ===
=== Usages ===
v2380 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j2389 y: j2544  <|@  <|@
f <@*|@fixed>@ <|@
tid v2380 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v2377 
=== Succesors ===
trueSuccessor: v2378 
falseSuccessor: v2379 
=== Usages ===
=== Predecessor ===
j2389 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2377 #trueSuccessor: v2378 #falseSuccessor: v2379  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4576550460895980228
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2378 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a2384 
=== Usages ===
=== Predecessor ===
v2380 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2384  <|@  <|@
f <@~|@floating>@ <|@
tid i2545 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 6
stableDimension: 0
stamp: i32 [6] ⇊0000000000000006 ⇈0000000000000006
stampKind: i32
value: int[6|0x6]
=== Inputs ===
=== Succesors ===
=== Usages ===
a2384 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2384 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?68 
arguments: v2370 i2545 i20 
=== Succesors ===
next: j2385 
=== Usages ===
j2385 
=== Predecessor ===
v2378 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?68 arguments: v2370 i2545 i20 #next: j2385  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2385 <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a2384 
=== Succesors ===
next: v2395 
=== Usages ===
j2394 
=== Predecessor ===
a2384 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a2384 #next: v2395  <|@  <|@
f <@*|@fixed>@ <|@
tid v2395 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2392 
=== Predecessor ===
j2385 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4606523455051178784
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2379 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2390 
=== Usages ===
=== Predecessor ===
v2380 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2390  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2390 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2766 
value: j2544 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2387 
=== Usages ===
=== Predecessor ===
v2379 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2766 value: j2544 stateAfter: - lastLocationAccess: - #next: v2387  <|@  <|@
f <@~|@floating>@ <|@
tid v2787 <|@
d <@d|@=== Debug Properties ===
displacement: 232
scale: Times1
stamp: void*
=== Inputs ===
base: j2388 
index: - 
=== Succesors ===
=== Usages ===
v2387 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2388 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2387 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v2787 
=== Succesors ===
next: v2393 
=== Usages ===
=== Predecessor ===
v2390 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v2787 #next: v2393  <|@  <|@
f <@*|@fixed>@ <|@
tid v2393 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2392 
=== Predecessor ===
v2387 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B30" 
    successors "B64" 
    xhandlers
    flags 
    probability 4606607780662349515
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j2394 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2392 
values: j2388 j2385 
=== Succesors ===
=== Usages ===
v2770 v2769 a1798 v2788 v2789 v2790 v2791 v2792 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2392 values: j2388 j2385  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2392 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2393 v2395 
=== Succesors ===
next: a1798 
=== Usages ===
j2394 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2393 v2395 #next: a1798  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1798 <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j2394 
=== Succesors ===
next: j2405 
=== Usages ===
a1804 
=== Predecessor ===
v2392 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j2394 #next: j2405  <|@  <|@
f <@~|@floating>@ <|@
tid v1915 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 128]
rawvalue: meta{HotSpotType<Ljava/util/ArrayList$SubList$1;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Ljava/util/ArrayList$SubList$1;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
j2400 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j2400 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
input: v1915 
=== Succesors ===
=== Usages ===
v2768 
=== Predecessor ===
- >@ <|@
instruction <@PointerCast|@org.graalvm.compiler.hotspot.word.PointerCastNode>@ input: v1915  <|@  <|@
f <@~|@floating>@ <|@
tid v2768 <|@
d <@d|@=== Debug Properties ===
displacement: 168
scale: Times1
stamp: void*
=== Inputs ===
base: j2400 
index: - 
=== Succesors ===
=== Usages ===
j2405 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2400 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2405 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v2768 
=== Succesors ===
next: v2406 
=== Usages ===
v2406 
=== Predecessor ===
a1798 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2768 #next: v2406  <|@  <|@
f <@~|@floating>@ <|@
tid v2769 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j2394 
index: - 
=== Succesors ===
=== Usages ===
v2406 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2394 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2406 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2769 
value: j2405 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2409 
=== Usages ===
=== Predecessor ===
j2405 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2769 value: j2405 stateAfter: - lastLocationAccess: - #next: v2409  <|@  <|@
f <@~|@floating>@ <|@
tid v2770 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j2394 
index: - 
=== Succesors ===
=== Usages ===
v2409 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2394 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2409 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2770 
value: v2548 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2414 
=== Usages ===
=== Predecessor ===
v2406 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2770 value: v2548 stateAfter: - lastLocationAccess: - #next: v2414  <|@  <|@
f <@~|@floating>@ <|@
tid v2788 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j2394 
index: - 
=== Succesors ===
=== Usages ===
v2414 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2394 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j2412 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -4294967296
stableDimension: 0
stamp: i64 [-4294967296] ⇊ffffffff00000000 ⇈ffffffff00000000
stampKind: i64
value: long[-4294967296|0xffffffff00000000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v2414 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2414 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2788 
value: j2412 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2416 
=== Usages ===
=== Predecessor ===
v2409 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2788 value: j2412 stateAfter: - lastLocationAccess: - #next: v2416  <|@  <|@
f <@~|@floating>@ <|@
tid v2789 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: j2394 
index: - 
=== Succesors ===
=== Usages ===
v2416 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2394 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2416 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2789 
value: i2627 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2418 
=== Usages ===
=== Predecessor ===
v2414 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2789 value: i2627 stateAfter: - lastLocationAccess: - #next: v2418  <|@  <|@
f <@~|@floating>@ <|@
tid v2790 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: j2394 
index: - 
=== Succesors ===
=== Usages ===
v2418 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2394 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2418 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2790 
value: i21 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: i2630 
=== Usages ===
=== Predecessor ===
v2416 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2790 value: i21 stateAfter: - lastLocationAccess: - #next: i2630  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2630 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList$SubList.offset
nodeSourcePosition: at java.util.ArrayList$SubList.listIterator(ArrayList.java:1101) [bci: 10]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.ArrayList$SubList.iterator(ArrayList.java:1095) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2738 
=== Succesors ===
next: v2420 
=== Usages ===
v2420 
=== Predecessor ===
v2418 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2738 #next: v2420  <|@  <|@
f <@~|@floating>@ <|@
tid v2791 <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: j2394 
index: - 
=== Succesors ===
=== Usages ===
v2420 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2394 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2420 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2791 
value: i2630 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2422 
=== Usages ===
=== Predecessor ===
i2630 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2791 value: i2630 stateAfter: - lastLocationAccess: - #next: v2422  <|@  <|@
f <@~|@floating>@ <|@
tid v2792 <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times1
stamp: void*
=== Inputs ===
base: j2394 
index: - 
=== Succesors ===
=== Usages ===
v2422 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2394 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a1801 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Compress
stamp: n! Ljava/util/AbstractCollection;
=== Inputs ===
value: a1 
=== Succesors ===
=== Usages ===
v2422 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2422 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2792 
value: a1801 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a1804 
=== Usages ===
=== Predecessor ===
v2420 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2792 value: a1801 stateAfter: - lastLocationAccess: - #next: a1804  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1804 <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a1798 
=== Succesors ===
next: v1805 
=== Usages ===
a270 
=== Predecessor ===
v2422 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a1798 #next: v1805  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1805 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v275 
=== Usages ===
=== Predecessor ===
a1804 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v275  <|@  <|@
f <@*|@fixed>@ <|@
tid v275 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v267 
=== Predecessor ===
v1805 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1511 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$SubList.checkForComodification(ArrayList.java:1238) [bci: 11]
at java.util.ArrayList$SubList.listIterator(ArrayList.java:1099) [bci: 1]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.ArrayList$SubList.iterator(ArrayList.java:1095) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2125 
=== Usages ===
=== Predecessor ===
v1512 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2125  <|@  <|@
f <@~|@floating>@ <|@
tid i2126 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -323347
stableDimension: 0
stamp: i32 [-323347] ⇊00000000fffb10ed ⇈00000000fffb10ed
stampKind: i32
value: int[-323347|0xfffffffffffb10ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2120 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2125 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2117 
=== Predecessor ===
v1511 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B28" "B33" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i2120 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-324115 - -321803] ⇊00000000fffb00e5 ⇈00000000fffb1ffd
valueDescription: i32
=== Inputs ===
merge: v2117 
values: i2124 i2126 
=== Succesors ===
=== Usages ===
v2122 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2117 values: i2124 i2126  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2117 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2123 v2125 
=== Succesors ===
next: v2122 
=== Usages ===
i2120 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2123 v2125 #next: v2122  <|@  <|@
f <@*|@fixed>@ <|@
tid v2122 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?68 
actionAndReason: i2120 
speculation: a2101 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v2117 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?68 actionAndReason: i2120 speculation: a2101  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B36" 
    xhandlers
    flags 
    probability 4589260263239763114
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v862 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: v839 
=== Usages ===
=== Predecessor ===
v863 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v839  <|@  <|@
f <@*|@fixed>@ <|@
tid v839 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v836 
=== Predecessor ===
v862 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B22" "B35" 
    successors "B37" "B63" 
    xhandlers
    flags 
    probability 4589261525764508073
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a1445 <|@
d <@d|@=== Debug Properties ===
stamp: a! [Ljava/lang/Object;
valueDescription: a -
=== Inputs ===
merge: v836 
values: a2325 a2 
=== Succesors ===
=== Usages ===
?2092 a843 a843 ?604 ?838 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v836 values: a2325 a2  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v836 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v837 v839 
=== Succesors ===
next: v589 
=== Usages ===
a1445 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v837 v839 #next: v589  <|@  <|@
f <@~|@floating>@ <|@
tid v2535 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 1]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2612 
y: v2534 
=== Succesors ===
=== Usages ===
v589 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2612 y: v2534  <|@  <|@
f <@*|@fixed>@ <|@
tid v589 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/RandomAccessSubList; target_method=iterator target_method_class=Ljava/util/SubList; position=at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
trueSuccessorProbability: 0.8661213947481707
=== Inputs ===
condition: v2535 
=== Succesors ===
trueSuccessor: v586 
falseSuccessor: v588 
=== Usages ===
=== Predecessor ===
v836 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2535 #trueSuccessor: v586 #falseSuccessor: v588  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" "B61" 
    xhandlers
    flags 
    probability 4588124123200152943
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v586 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/RandomAccessSubList; target_method=iterator target_method_class=Ljava/util/SubList; position=at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2631 
=== Usages ===
=== Predecessor ===
v589 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2631  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2631 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: SubList.l
nodeSourcePosition: at java.util.SubList.checkForComodification(AbstractList.java:768) [bci: 5]
at java.util.SubList.listIterator(AbstractList.java:695) [bci: 1]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
nullCheck: false
stamp: n Ljava/util/AbstractList;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2737 
=== Succesors ===
next: i2632 
=== Usages ===
?669 v2489 v2739 v2742 v2771 v2491 ?899 v2806 
=== Predecessor ===
v586 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2737 #next: i2632  <|@  <|@
tid ?838 <|@
d <@d|@=== Debug Properties ===
bci: 32
code: ResolvedJavaMethodBytecode<AbstractCollection.toArray(Object[])>
duringCall: false
localsSize: 6
locksSize: 0
rethrowException: false
sourceFile: AbstractCollection.java
sourceLine: 179
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: a1 a2 - - - - a1445 
=== Succesors ===
=== Usages ===
v2205 i2632 i2638 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 - - - - a1445  <|@  <|@
f <@~|@floating>@ <|@
tid v2739 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2631 
=== Succesors ===
=== Usages ===
i2632 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2631  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2632 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractList.modCount
nodeSourcePosition: at java.util.SubList.checkForComodification(AbstractList.java:768) [bci: 8]
at java.util.SubList.listIterator(AbstractList.java:695) [bci: 1]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
nullCheck: true
stamp: i32
=== Inputs ===
stateBefore: ?838 
guard: - 
address: v2739 
=== Succesors ===
next: i2633 
=== Usages ===
v608 v2487 
=== Predecessor ===
a2631 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?838 guard: - address: v2739 #next: i2633  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2633 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractList.modCount
nodeSourcePosition: at java.util.SubList.checkForComodification(AbstractList.java:768) [bci: 1]
at java.util.SubList.listIterator(AbstractList.java:695) [bci: 1]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2736 
=== Succesors ===
next: v1524 
=== Usages ===
v608 
=== Predecessor ===
i2632 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2736 #next: v1524  <|@  <|@
f <@~|@floating>@ <|@
tid v608 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.SubList.checkForComodification(AbstractList.java:768) [bci: 11]
at java.util.SubList.listIterator(AbstractList.java:695) [bci: 1]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2632 
y: i2633 
=== Succesors ===
=== Usages ===
v1524 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i2632 y: i2633  <|@  <|@
f <@*|@fixed>@ <|@
tid v1524 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.SubList.checkForComodification(AbstractList.java:768) [bci: 11]
at java.util.SubList.listIterator(AbstractList.java:695) [bci: 1]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v608 
=== Succesors ===
trueSuccessor: v1521 
falseSuccessor: v1523 
=== Usages ===
=== Predecessor ===
i2633 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v608 #trueSuccessor: v1521 #falseSuccessor: v1523  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4588124123200152943
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1521 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.SubList.checkForComodification(AbstractList.java:768) [bci: 11]
at java.util.SubList.listIterator(AbstractList.java:695) [bci: 1]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2634 
=== Usages ===
=== Predecessor ===
v1524 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2634  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2634 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: SubList.size
nodeSourcePosition: at java.util.SubList.rangeCheckForAdd(AbstractList.java:759) [bci: 6]
at java.util.SubList.listIterator(AbstractList.java:696) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2738 
=== Succesors ===
next: v1528 
=== Usages ===
v612 
=== Predecessor ===
v1521 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2738 #next: v1528  <|@  <|@
f <@~|@floating>@ <|@
tid v612 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.SubList.rangeCheckForAdd(AbstractList.java:759) [bci: 9]
at java.util.SubList.listIterator(AbstractList.java:696) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2634 
y: i21 
=== Succesors ===
=== Usages ===
v1528 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2634 y: i21  <|@  <|@
f <@*|@fixed>@ <|@
tid v1528 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.SubList.rangeCheckForAdd(AbstractList.java:759) [bci: 9]
at java.util.SubList.listIterator(AbstractList.java:696) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v612 
=== Succesors ===
trueSuccessor: v1527 
falseSuccessor: v1525 
=== Usages ===
=== Predecessor ===
i2634 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v612 #trueSuccessor: v1527 #falseSuccessor: v1525  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1527 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.SubList.rangeCheckForAdd(AbstractList.java:759) [bci: 9]
at java.util.SubList.listIterator(AbstractList.java:696) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2206 
=== Usages ===
=== Predecessor ===
v1528 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2206  <|@  <|@
f <@~|@floating>@ <|@
tid i2207 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -328211
stableDimension: 0
stamp: i32 [-328211] ⇊00000000fffafded ⇈00000000fffafded
stampKind: i32
value: int[-328211|0xfffffffffffafded]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2203 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2206 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2200 
=== Predecessor ===
v1527 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4588124123200152943
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1525 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.SubList.rangeCheckForAdd(AbstractList.java:759) [bci: 9]
at java.util.SubList.listIterator(AbstractList.java:696) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2635 
=== Usages ===
=== Predecessor ===
v1528 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2635  <|@  <|@
f <@~|@floating>@ <|@
tid v2740 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i2635 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2635 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: SubList.offset
nodeSourcePosition: at java.util.SubList.access$000(AbstractList.java:613) [bci: 1]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 30]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2740 
=== Succesors ===
next: v1532 
=== Usages ===
v2483 v917 v666 ?669 v661 v904 ?899 ?899 
=== Predecessor ===
v1525 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2740 #next: v1532  <|@  <|@
f <@~|@floating>@ <|@
tid v661 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 1]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2635 
y: i21 
=== Succesors ===
=== Usages ===
v1532 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2635 y: i21  <|@  <|@
f <@*|@fixed>@ <|@
tid v1532 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 1]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v661 
=== Succesors ===
trueSuccessor: v1531 
falseSuccessor: v1529 
=== Usages ===
=== Predecessor ===
i2635 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v661 #trueSuccessor: v1531 #falseSuccessor: v1529  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1531 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 1]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2210 
=== Usages ===
=== Predecessor ===
v1532 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2210  <|@  <|@
f <@~|@floating>@ <|@
tid i2211 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -330259
stableDimension: 0
stamp: i32 [-330259] ⇊00000000fffaf5ed ⇈00000000fffaf5ed
stampKind: i32
value: int[-330259|0xfffffffffffaf5ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2203 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2210 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2200 
=== Predecessor ===
v1531 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B60" 
    xhandlers
    flags 
    probability 4588124123200152943
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1529 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 1]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2636 
=== Usages ===
=== Predecessor ===
v1532 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2636  <|@  <|@
f <@~|@floating>@ <|@
tid v2771 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2631 
=== Succesors ===
=== Usages ===
v2636 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2631  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2636 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v2771 
=== Succesors ===
next: v1288 
=== Usages ===
v2741 v2555 v2557 v2559 
=== Predecessor ===
v1529 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2771 #next: v1288  <|@  <|@
f <@~|@floating>@ <|@
tid v2741 <|@
d <@d|@=== Debug Properties ===
displacement: 696
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: v2636 
=== Succesors ===
=== Usages ===
v1288 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: v2636  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1288 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ANY_LOCATION
nodeSourcePosition: at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
nullCheck: false
stamp: Method*!
=== Inputs ===
stateBefore: - 
guard: - 
address: v2741 
=== Succesors ===
next: v1536 
=== Usages ===
v648 
=== Predecessor ===
v2636 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2741 #next: v1536  <|@  <|@
f <@~|@floating>@ <|@
tid v646 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
rawvalue: meta{HotSpotMethod<AbstractList.listIterator(int)>}
stableDimension: 0
stamp: Method*!
stampKind: Method*
value: meta{HotSpotMethod<AbstractList.listIterator(int)>}
=== Inputs ===
=== Succesors ===
=== Usages ===
v648 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v648 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1288 
y: v646 
=== Succesors ===
=== Usages ===
v1536 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1288 y: v646  <|@  <|@
f <@*|@fixed>@ <|@
tid v1536 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=null target_method=listIterator target_method_class=Ljava/util/AbstractList; position=at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v648 
=== Succesors ===
trueSuccessor: v1533 
falseSuccessor: v1535 
=== Usages ===
=== Predecessor ===
v1288 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v648 #trueSuccessor: v1533 #falseSuccessor: v1535  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B44" "B47" 
    xhandlers
    flags 
    probability 4588124123200152943
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1533 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=null target_method=listIterator target_method_class=Ljava/util/AbstractList; position=at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: v692 
=== Usages ===
=== Predecessor ===
v1536 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v692  <|@  <|@
f <@~|@floating>@ <|@
tid v2555 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2636 
y: v2554 
=== Succesors ===
=== Usages ===
v692 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2636 y: v2554  <|@  <|@
f <@*|@fixed>@ <|@
tid v692 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/Arrays$ArrayList; target_method=size target_method_class=Ljava/util/Arrays$ArrayList; position=at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
trueSuccessorProbability: 0.5044648172401477
=== Inputs ===
condition: v2555 
=== Succesors ===
trueSuccessor: v688 
falseSuccessor: v691 
=== Usages ===
=== Predecessor ===
v1533 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2555 #trueSuccessor: v688 #falseSuccessor: v691  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4583691632950366314
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v688 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/Arrays$ArrayList; target_method=size target_method_class=Ljava/util/Arrays$ArrayList; position=at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2637 
=== Usages ===
=== Predecessor ===
v692 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2637  <|@  <|@
f <@~|@floating>@ <|@
tid v2742 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2631 
=== Succesors ===
=== Usages ===
a2637 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2631  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2637 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Arrays$ArrayList.a
nodeSourcePosition: at java.util.Arrays$ArrayList.size(Arrays.java:3818) [bci: 1]
at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
nullCheck: false
stamp: n [Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2742 
=== Succesors ===
next: i2638 
=== Usages ===
v2743 
=== Predecessor ===
v688 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2742 #next: i2638  <|@  <|@
f <@~|@floating>@ <|@
tid v2743 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2637 
=== Succesors ===
=== Usages ===
i2638 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2637  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2638 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.Arrays$ArrayList.size(Arrays.java:3818) [bci: 4]
at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?838 
guard: - 
address: v2743 
=== Succesors ===
next: v1544 
=== Usages ===
i902 v904 
=== Predecessor ===
a2637 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?838 guard: - address: v2743 #next: v1544  <|@  <|@
f <@~|@floating>@ <|@
tid v904 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 9]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2638 
y: i2635 
=== Succesors ===
=== Usages ===
v1544 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2638 y: i2635  <|@  <|@
f <@*|@fixed>@ <|@
tid v1544 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 9]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v904 
=== Succesors ===
trueSuccessor: v1543 
falseSuccessor: v1541 
=== Usages ===
=== Predecessor ===
i2638 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v904 #trueSuccessor: v1543 #falseSuccessor: v1541  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1543 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 9]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2216 
=== Usages ===
=== Predecessor ===
v1544 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2216  <|@  <|@
f <@~|@floating>@ <|@
tid i2217 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -332563
stableDimension: 0
stamp: i32 [-332563] ⇊00000000fffaeced ⇈00000000fffaeced
stampKind: i32
value: int[-332563|0xfffffffffffaeced]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2203 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2216 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2200 
=== Predecessor ===
v1543 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B55" 
    xhandlers
    flags 
    probability 4583691632950366314
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1541 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 9]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: v900 
=== Usages ===
=== Predecessor ===
v1544 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v900  <|@  <|@
f <@*|@fixed>@ <|@
tid v900 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v898 
=== Predecessor ===
v1541 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B48" "B51" 
    xhandlers
    flags 
    probability 4583549414195198580
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v691 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: v701 
=== Usages ===
=== Predecessor ===
v692 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v701  <|@  <|@
f <@~|@floating>@ <|@
tid v2556 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
rawvalue: meta{HotSpotType<Ljava/util/Collections$EmptyList;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/Collections$EmptyList;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v2557 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v2557 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2636 
y: v2556 
=== Succesors ===
=== Usages ===
v701 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2636 y: v2556  <|@  <|@
f <@*|@fixed>@ <|@
tid v701 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/Collections$EmptyList; target_method=size target_method_class=Ljava/util/Collections$EmptyList; position=at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
trueSuccessorProbability: 0.525228255646324
=== Inputs ===
condition: v2557 
=== Succesors ===
trueSuccessor: v697 
falseSuccessor: v700 
=== Usages ===
=== Predecessor ===
v691 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2557 #trueSuccessor: v697 #falseSuccessor: v700  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B49" "B50" 
    xhandlers
    flags 
    probability 4579444027082297734
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v697 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/Collections$EmptyList; target_method=size target_method_class=Ljava/util/Collections$EmptyList; position=at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1548 
=== Usages ===
=== Predecessor ===
v701 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1548  <|@  <|@
f <@~|@floating>@ <|@
tid v917 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 9]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2635 
y: i20 
=== Succesors ===
=== Usages ===
v1548 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2635 y: i20  <|@  <|@
f <@*|@fixed>@ <|@
tid v1548 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 9]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v917 
=== Succesors ===
trueSuccessor: v1545 
falseSuccessor: v1547 
=== Usages ===
=== Predecessor ===
v697 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v917 #trueSuccessor: v1545 #falseSuccessor: v1547  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B55" 
    xhandlers
    flags 
    probability 4579444027082297734
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1545 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 9]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: v916 
=== Usages ===
=== Predecessor ===
v1548 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v916  <|@  <|@
f <@*|@fixed>@ <|@
tid v916 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v898 
=== Predecessor ===
v1545 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1547 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 9]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2220 
=== Usages ===
=== Predecessor ===
v1548 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2220  <|@  <|@
f <@~|@floating>@ <|@
tid i2221 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -332819
stableDimension: 0
stamp: i32 [-332819] ⇊00000000fffaebed ⇈00000000fffaebed
stampKind: i32
value: int[-332819|0xfffffffffffaebed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2203 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2220 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2200 
=== Predecessor ===
v1547 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B52" "B59" 
    xhandlers
    flags 
    probability 4578647602053358434
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v700 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1552 
=== Usages ===
=== Predecessor ===
v701 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1552  <|@  <|@
f <@~|@floating>@ <|@
tid v2559 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2636 
y: v2558 
=== Succesors ===
=== Usages ===
v1552 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2636 y: v2558  <|@  <|@
f <@*|@fixed>@ <|@
tid v1552 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Lorg/graalvm/compiler/graph/NodeInputList; target_method=size target_method_class=Lorg/graalvm/compiler/graph/NodeList; position=at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v2559 
=== Succesors ===
trueSuccessor: v1549 
falseSuccessor: v1551 
=== Usages ===
=== Predecessor ===
v700 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2559 #trueSuccessor: v1549 #falseSuccessor: v1551  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B53" "B54" 
    xhandlers
    flags 
    probability 4578647602053358434
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1549 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Lorg/graalvm/compiler/graph/NodeInputList; target_method=size target_method_class=Lorg/graalvm/compiler/graph/NodeList; position=at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2639 
=== Usages ===
=== Predecessor ===
v1552 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2639  <|@  <|@
f <@~|@floating>@ <|@
tid v2806 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2631 
=== Succesors ===
=== Usages ===
i2639 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2631  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2639 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: NodeList.size
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList.size(NodeList.java:119) [bci: 1]
at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2806 
=== Succesors ===
next: v1556 
=== Usages ===
v666 i902 
=== Predecessor ===
v1549 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2806 #next: v1556  <|@  <|@
f <@~|@floating>@ <|@
tid v666 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 9]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2639 
y: i2635 
=== Succesors ===
=== Usages ===
v1556 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2639 y: i2635  <|@  <|@
f <@*|@fixed>@ <|@
tid v1556 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 9]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v666 
=== Succesors ===
trueSuccessor: v1555 
falseSuccessor: v1553 
=== Usages ===
=== Predecessor ===
i2639 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v666 #trueSuccessor: v1555 #falseSuccessor: v1553  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1555 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 9]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2218 
=== Usages ===
=== Predecessor ===
v1556 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2218  <|@  <|@
f <@~|@floating>@ <|@
tid i2219 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -333843
stableDimension: 0
stamp: i32 [-333843] ⇊00000000fffae7ed ⇈00000000fffae7ed
stampKind: i32
value: int[-333843|0xfffffffffffae7ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2203 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2218 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2200 
=== Predecessor ===
v1555 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    probability 4578647602053358434
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1553 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 9]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: v897 
=== Usages ===
=== Predecessor ===
v1556 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v897  <|@  <|@
f <@*|@fixed>@ <|@
tid v897 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v898 
=== Predecessor ===
v1553 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" "B46" "B49" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4588124123200152944
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i902 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v898 
values: i2639 i2638 i21 
=== Succesors ===
=== Usages ===
?899 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v898 values: i2639 i2638 i21  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v898 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v897 v900 v916 
=== Succesors ===
next: j2427 
=== Usages ===
i902 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v897 v900 v916 #next: j2427  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2427 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j2442 
=== Usages ===
v2772 v2773 
=== Predecessor ===
v898 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j2442  <|@  <|@
f <@~|@floating>@ <|@
tid v2772 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j2427 
index: - 
=== Succesors ===
=== Usages ===
j2442 v2444 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2427 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2442 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v2772 
=== Succesors ===
next: j2443 
=== Usages ===
j2561 j2448 v2793 
=== Predecessor ===
j2427 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2772 #next: j2443  <|@  <|@
f <@~|@floating>@ <|@
tid v2773 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j2427 
index: - 
=== Succesors ===
=== Usages ===
j2443 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2427 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2443 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v2773 
=== Succesors ===
next: v2435 
=== Usages ===
v2432 
=== Predecessor ===
j2442 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2773 #next: v2435  <|@  <|@
f <@~|@floating>@ <|@
tid j2560 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 56
stableDimension: 0
stamp: i64 [56] ⇊0000000000000038 ⇈0000000000000038
stampKind: i64
value: long[56|0x38]
=== Inputs ===
=== Succesors ===
=== Usages ===
j2561 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j2561 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j2442 
y: j2560 
=== Succesors ===
=== Usages ===
v2432 v2444 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2442 y: j2560  <|@  <|@
f <@~|@floating>@ <|@
tid v2432 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2443 
y: j2561 
=== Succesors ===
=== Usages ===
v2435 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j2443 y: j2561  <|@  <|@
f <@*|@fixed>@ <|@
tid v2435 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v2432 
=== Succesors ===
trueSuccessor: v2433 
falseSuccessor: v2434 
=== Usages ===
=== Predecessor ===
j2443 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2432 #trueSuccessor: v2433 #falseSuccessor: v2434  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" 
    xhandlers
    flags 
    probability 4558235736656760908
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2433 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a2438 
=== Usages ===
=== Predecessor ===
v2435 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2438  <|@  <|@
tid ?604 <|@
d <@d|@=== Debug Properties ===
bci: 34
code: ResolvedJavaMethodBytecode<AbstractCollection.toArray(Object[])>
duringCall: true
localsSize: 6
locksSize: 0
rethrowException: false
sourceFile: AbstractCollection.java
sourceLine: 180
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - a2 - a1445 - - 
=== Succesors ===
=== Usages ===
?593 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - a2 - a1445 - -  <|@  <|@
tid ?593 <|@
d <@d|@=== Debug Properties ===
bci: 1
code: ResolvedJavaMethodBytecode<SubList.iterator()>
duringCall: true
localsSize: 1
locksSize: 0
nodeSourcePosition: at java.util.SubList.listIterator(AbstractList.java:695) [bci: 1]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
rethrowException: false
sourceFile: AbstractList.java
sourceLine: 691
stackSize: 0
=== Inputs ===
outerFrameState: ?604 
values: a1 
=== Succesors ===
=== Usages ===
?594 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?604 values: a1  <|@  <|@
tid ?594 <|@
d <@d|@=== Debug Properties ===
bci: 2
code: ResolvedJavaMethodBytecode<AbstractList.listIterator()>
duringCall: true
localsSize: 1
locksSize: 0
nodeSourcePosition: at java.util.SubList.listIterator(AbstractList.java:695) [bci: 1]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
rethrowException: false
sourceFile: AbstractList.java
sourceLine: 299
stackSize: 0
=== Inputs ===
outerFrameState: ?593 
values: a1 
=== Succesors ===
=== Usages ===
?632 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?593 values: a1  <|@  <|@
tid a736 <|@
d <@d|@=== Debug Properties ===
fields: [Ljdk.vm.ci.hotspot.HotSpotResolvedJavaField;@724f57db
hasIdentity: true
objectId: 1
stamp: a!# Ljava/util/SubList$1;
type: HotSpotType<Ljava/util/SubList$1;, resolved>
=== Inputs ===
=== Succesors ===
=== Usages ===
?660 ?632 ?739 
=== Predecessor ===
- >@ <|@
instruction <@VirtualInstance|@org.graalvm.compiler.nodes.virtual.VirtualInstanceNode>@  <|@  <|@
tid ?632 <|@
d <@d|@=== Debug Properties ===
bci: 15
code: ResolvedJavaMethodBytecode<SubList.listIterator(int)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: AbstractList.java
sourceLine: 698
stackSize: 1
=== Inputs ===
outerFrameState: ?594 
values: - - a736 
=== Succesors ===
=== Usages ===
?660 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?594 values: - - a736  <|@  <|@
tid ?660 <|@
d <@d|@=== Debug Properties ===
bci: 34
code: ResolvedJavaMethodBytecode<SubList$1.<init>(SubList, int)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: AbstractList.java
sourceLine: 699
stackSize: 1
=== Inputs ===
outerFrameState: ?632 
values: - - - a736 
=== Succesors ===
=== Usages ===
?669 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?632 values: - - - a736  <|@  <|@
tid ?669 <|@
d <@d|@=== Debug Properties ===
bci: 2
code: ResolvedJavaMethodBytecode<AbstractList.listIterator(int)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: AbstractList.java
sourceLine: 325
stackSize: 0
=== Inputs ===
outerFrameState: ?660 
values: a2631 i2635 
=== Succesors ===
=== Usages ===
?899 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?660 values: a2631 i2635  <|@  <|@
tid ?739 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a736 
values: - - a1 
=== Succesors ===
=== Usages ===
?899 
=== Predecessor ===
- >@ <|@
instruction <@VirtualObjectState|@org.graalvm.compiler.virtual.nodes.VirtualObjectState>@ object: a736 values: - - a1  <|@  <|@
tid ?899 <|@
d <@d|@=== Debug Properties ===
bci: 9
code: ResolvedJavaMethodBytecode<AbstractList.rangeCheckForAdd(int)>
duringCall: false
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
rethrowException: false
sourceFile: AbstractList.java
sourceLine: 604
stackSize: 2
=== Inputs ===
outerFrameState: ?669 
values: a2631 i2635 i2635 i902 
virtualObjectMappings: ?739 
=== Succesors ===
=== Usages ===
a2438 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?669 values: a2631 i2635 i2635 i902 virtualObjectMappings: ?739  <|@  <|@
f <@~|@floating>@ <|@
tid i2563 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 10
stableDimension: 0
stamp: i32 [10] ⇊000000000000000a ⇈000000000000000a
stampKind: i32
value: int[10|0xa]
=== Inputs ===
=== Succesors ===
=== Usages ===
a2438 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2438 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?899 
arguments: v2370 i2563 i20 
=== Succesors ===
next: j2439 
=== Usages ===
j2439 
=== Predecessor ===
v2433 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?899 arguments: v2370 i2563 i20 #next: j2439  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2439 <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a2438 
=== Succesors ===
next: v2449 
=== Usages ===
j2448 
=== Predecessor ===
a2438 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a2438 #next: v2449  <|@  <|@
f <@*|@fixed>@ <|@
tid v2449 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2446 
=== Predecessor ===
j2439 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" 
    xhandlers
    flags 
    probability 4588044490178509359
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2434 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2444 
=== Usages ===
=== Predecessor ===
v2435 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2444  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2444 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2772 
value: j2561 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2441 
=== Usages ===
=== Predecessor ===
v2434 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2772 value: j2561 stateAfter: - lastLocationAccess: - #next: v2441  <|@  <|@
f <@~|@floating>@ <|@
tid v2793 <|@
d <@d|@=== Debug Properties ===
displacement: 248
scale: Times1
stamp: void*
=== Inputs ===
base: j2442 
index: - 
=== Succesors ===
=== Usages ===
v2441 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2442 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2441 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v2793 
=== Succesors ===
next: v2447 
=== Usages ===
=== Predecessor ===
v2444 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v2793 #next: v2447  <|@  <|@
f <@*|@fixed>@ <|@
tid v2447 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2446 
=== Predecessor ===
v2441 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" "B56" 
    successors "B64" 
    xhandlers
    flags 
    probability 4588124123200152944
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j2448 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2446 
values: j2442 j2439 
=== Succesors ===
=== Usages ===
v2803 v2775 j1864 a1862 v2776 v2794 v2795 v2796 v2797 v2798 v2799 v2800 v2801 v2802 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2446 values: j2442 j2439  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2446 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2447 v2449 
=== Succesors ===
next: a1862 
=== Usages ===
j2448 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2447 v2449 #next: a1862  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1862 <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j2448 
=== Succesors ===
next: a1865 
=== Usages ===
a1876 
=== Predecessor ===
v2446 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j2448 #next: a1865  <|@  <|@
f <@~|@floating>@ <|@
tid j1022 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.ArrayList$SubList$1.hasNext(ArrayList.java:1109) [bci: 8]
at java.util.AbstractCollection.toArray(AbstractCollection.java:183) [bci: 51]
rawvalue: 24
stableDimension: 0
stamp: i64 [24] ⇊0000000000000018 ⇈0000000000000018
stampKind: i64
value: long[24|0x18]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1864 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1864 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j2448 
y: j1022 
=== Succesors ===
=== Usages ===
a1865 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2448 y: j1022  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1865 <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j1864 
=== Succesors ===
next: j2458 
=== Usages ===
a1877 a1868 
=== Predecessor ===
a1862 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j1864 #next: j2458  <|@  <|@
f <@~|@floating>@ <|@
tid v1897 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 128]
rawvalue: meta{HotSpotType<Ljava/util/SubList$1;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Ljava/util/SubList$1;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
j2454 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j2454 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
input: v1897 
=== Succesors ===
=== Usages ===
v2774 
=== Predecessor ===
- >@ <|@
instruction <@PointerCast|@org.graalvm.compiler.hotspot.word.PointerCastNode>@ input: v1897  <|@  <|@
f <@~|@floating>@ <|@
tid v2774 <|@
d <@d|@=== Debug Properties ===
displacement: 168
scale: Times1
stamp: void*
=== Inputs ===
base: j2454 
index: - 
=== Succesors ===
=== Usages ===
j2458 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2454 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2458 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v2774 
=== Succesors ===
next: v2459 
=== Usages ===
v2459 
=== Predecessor ===
a1865 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2774 #next: v2459  <|@  <|@
f <@~|@floating>@ <|@
tid v2775 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j2448 
index: - 
=== Succesors ===
=== Usages ===
v2459 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2448 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2459 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2775 
value: j2458 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2462 
=== Usages ===
=== Predecessor ===
j2458 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2775 value: j2458 stateAfter: - lastLocationAccess: - #next: v2462  <|@  <|@
f <@~|@floating>@ <|@
tid v2776 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j2448 
index: - 
=== Succesors ===
=== Usages ===
v2462 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2448 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2462 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2776 
value: v2566 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2466 
=== Usages ===
=== Predecessor ===
v2459 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2776 value: v2566 stateAfter: - lastLocationAccess: - #next: v2466  <|@  <|@
f <@~|@floating>@ <|@
tid v2794 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j2448 
index: - 
=== Succesors ===
=== Usages ===
v2466 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2448 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2466 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2794 
value: i21 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2468 
=== Usages ===
=== Predecessor ===
v2462 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2794 value: i21 stateAfter: - lastLocationAccess: - #next: v2468  <|@  <|@
f <@~|@floating>@ <|@
tid v2795 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j2448 
index: - 
=== Succesors ===
=== Usages ===
v2468 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2448 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a1868 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Compress
stamp: n -
=== Inputs ===
value: a1865 
=== Succesors ===
=== Usages ===
v2468 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1865  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2468 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2795 
value: a1868 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2470 
=== Usages ===
=== Predecessor ===
v2466 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2795 value: a1868 stateAfter: - lastLocationAccess: - #next: v2470  <|@  <|@
f <@~|@floating>@ <|@
tid v2796 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: j2448 
index: - 
=== Succesors ===
=== Usages ===
v2470 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2448 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a1869 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Compress
stamp: n! Ljava/util/AbstractCollection;
=== Inputs ===
value: a1 
=== Succesors ===
=== Usages ===
v2470 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2470 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2796 
value: a1869 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j2475 
=== Usages ===
=== Predecessor ===
v2468 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2796 value: a1869 stateAfter: - lastLocationAccess: - #next: j2475  <|@  <|@
f <@~|@floating>@ <|@
tid v1933 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.SubList$1.nextIndex(AbstractList.java:724) [bci: 4]
at java.util.SubList$1.hasNext(AbstractList.java:702) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:183) [bci: 51]
rawvalue: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
j2471 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j2471 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
input: v1933 
=== Succesors ===
=== Usages ===
v2777 
=== Predecessor ===
- >@ <|@
instruction <@PointerCast|@org.graalvm.compiler.hotspot.word.PointerCastNode>@ input: v1933  <|@  <|@
f <@~|@floating>@ <|@
tid v2777 <|@
d <@d|@=== Debug Properties ===
displacement: 168
scale: Times1
stamp: void*
=== Inputs ===
base: j2471 
index: - 
=== Succesors ===
=== Usages ===
j2475 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2471 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2475 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v2777 
=== Succesors ===
next: v2476 
=== Usages ===
v2476 
=== Predecessor ===
v2470 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2777 #next: v2476  <|@  <|@
f <@~|@floating>@ <|@
tid v2797 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: j2448 
index: - 
=== Succesors ===
=== Usages ===
v2476 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2448 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2476 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2797 
value: j2475 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2479 
=== Usages ===
=== Predecessor ===
j2475 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2797 value: j2475 stateAfter: - lastLocationAccess: - #next: v2479  <|@  <|@
f <@~|@floating>@ <|@
tid v2798 <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times1
stamp: void*
=== Inputs ===
base: j2448 
index: - 
=== Succesors ===
=== Usages ===
v2479 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2448 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2479 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2798 
value: v2572 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2483 
=== Usages ===
=== Predecessor ===
v2476 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2798 value: v2572 stateAfter: - lastLocationAccess: - #next: v2483  <|@  <|@
f <@~|@floating>@ <|@
tid v2799 <|@
d <@d|@=== Debug Properties ===
displacement: 36
scale: Times1
stamp: void*
=== Inputs ===
base: j2448 
index: - 
=== Succesors ===
=== Usages ===
v2483 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2448 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2483 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2799 
value: i2635 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2485 
=== Usages ===
=== Predecessor ===
v2479 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2799 value: i2635 stateAfter: - lastLocationAccess: - #next: v2485  <|@  <|@
f <@~|@floating>@ <|@
tid v2800 <|@
d <@d|@=== Debug Properties ===
displacement: 40
scale: Times1
stamp: void*
=== Inputs ===
base: j2448 
index: - 
=== Succesors ===
=== Usages ===
v2485 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2448 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid i507 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.ArrayList$SubList$1.<init>(ArrayList.java:1105) [bci: 28]
at java.util.ArrayList$SubList.listIterator(ArrayList.java:1103) [bci: 21]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.ArrayList$SubList.iterator(ArrayList.java:1095) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1] ⇊00000000ffffffff
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v2485 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2485 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2800 
value: i507 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2487 
=== Usages ===
=== Predecessor ===
v2483 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2800 value: i507 stateAfter: - lastLocationAccess: - #next: v2487  <|@  <|@
f <@~|@floating>@ <|@
tid v2801 <|@
d <@d|@=== Debug Properties ===
displacement: 44
scale: Times1
stamp: void*
=== Inputs ===
base: j2448 
index: - 
=== Succesors ===
=== Usages ===
v2487 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2448 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2487 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2801 
value: i2632 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2489 
=== Usages ===
=== Predecessor ===
v2485 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2801 value: i2632 stateAfter: - lastLocationAccess: - #next: v2489  <|@  <|@
f <@~|@floating>@ <|@
tid v2802 <|@
d <@d|@=== Debug Properties ===
displacement: 48
scale: Times1
stamp: void*
=== Inputs ===
base: j2448 
index: - 
=== Succesors ===
=== Usages ===
v2489 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2448 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2489 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2802 
value: a2631 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2491 
=== Usages ===
=== Predecessor ===
v2487 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2802 value: a2631 stateAfter: - lastLocationAccess: - #next: v2491  <|@  <|@
f <@~|@floating>@ <|@
tid v2803 <|@
d <@d|@=== Debug Properties ===
displacement: 52
scale: Times1
stamp: void*
=== Inputs ===
base: j2448 
index: - 
=== Succesors ===
=== Usages ===
v2491 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2448 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2491 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2803 
value: a2631 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a1876 
=== Usages ===
=== Predecessor ===
v2489 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2803 value: a2631 stateAfter: - lastLocationAccess: - #next: a1876  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1876 <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a1862 
=== Succesors ===
next: a1877 
=== Usages ===
a270 
=== Predecessor ===
v2491 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a1862 #next: a1877  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1877 <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a1865 
=== Succesors ===
next: v1878 
=== Usages ===
=== Predecessor ===
a1876 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a1865 #next: v1878  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1878 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v732 
=== Usages ===
=== Predecessor ===
a1877 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v732  <|@  <|@
f <@*|@fixed>@ <|@
tid v732 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v267 
=== Predecessor ===
v1878 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1551 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Lorg/graalvm/compiler/graph/NodeInputList; target_method=size target_method_class=Lorg/graalvm/compiler/graph/NodeList; position=at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2222 
=== Usages ===
=== Predecessor ===
v1552 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2222  <|@  <|@
f <@~|@floating>@ <|@
tid i2223 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -333107
stableDimension: 0
stamp: i32 [-333107] ⇊00000000fffaeacd ⇈00000000fffaeacd
stampKind: i32
value: int[-333107|0xfffffffffffaeacd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2203 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2222 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2200 
=== Predecessor ===
v1551 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1535 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=null target_method=listIterator target_method_class=Ljava/util/AbstractList; position=at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2214 
=== Usages ===
=== Predecessor ===
v1536 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2214  <|@  <|@
f <@~|@floating>@ <|@
tid i2215 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -330035
stableDimension: 0
stamp: i32 [-330035] ⇊00000000fffaf6cd ⇈00000000fffaf6cd
stampKind: i32
value: int[-330035|0xfffffffffffaf6cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2203 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2214 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2200 
=== Predecessor ===
v1535 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1523 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.SubList.checkForComodification(AbstractList.java:768) [bci: 11]
at java.util.SubList.listIterator(AbstractList.java:695) [bci: 1]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2208 
=== Usages ===
=== Predecessor ===
v1524 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2208  <|@  <|@
f <@~|@floating>@ <|@
tid i2209 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -327443
stableDimension: 0
stamp: i32 [-327443] ⇊00000000fffb00ed ⇈00000000fffb00ed
stampKind: i32
value: int[-327443|0xfffffffffffb00ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2203 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2208 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2200 
=== Predecessor ===
v1523 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B39" "B61" "B41" "B60" "B45" "B53" "B50" "B59" 
    successors 
    xhandlers
    flags 
    probability 2368893403996880896
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i2203 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-333843 - -327443] ⇊00000000fffa00c5 ⇈00000000fffbfffd
valueDescription: i32
=== Inputs ===
merge: v2200 
values: i2207 i2209 i2211 i2215 i2217 i2219 i2221 i2223 
=== Succesors ===
=== Usages ===
v2205 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2200 values: i2207 i2209 i2211 i2215 i2217 i2219 i2221 i2223  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2200 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2206 v2208 v2210 v2214 v2216 v2218 v2220 v2222 
=== Succesors ===
next: v2205 
=== Usages ===
i2203 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2206 v2208 v2210 v2214 v2216 v2218 v2220 v2222 #next: v2205  <|@  <|@
f <@*|@fixed>@ <|@
tid v2205 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?838 
actionAndReason: i2203 
speculation: a2101 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v2200 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?838 actionAndReason: i2203 speculation: a2101  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B64" 
    xhandlers
    flags 
    probability 4576077253934364556
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v588 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: a70 
=== Usages ===
=== Predecessor ===
v589 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a70  <|@  <|@
tid v1305 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
returnStamp: a - (unchecked=a Ljava/util/Iterator;)
signature: [Ljdk.vm.ci.meta.JavaType;@20ee093c
stamp: void
targetMethod: HotSpotMethod<AbstractCollection.iterator()>
=== Inputs ===
arguments: a1 
=== Succesors ===
=== Usages ===
a70 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1  <|@  <|@
tid ?2092 <|@
d <@d|@=== Debug Properties ===
bci: 34
code: ResolvedJavaMethodBytecode<AbstractCollection.toArray(Object[])>
duringCall: true
localsSize: 6
locksSize: 0
rethrowException: false
sourceFile: AbstractCollection.java
sourceLine: 180
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - a2 - a1445 - - 
=== Succesors ===
=== Usages ===
a70 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - a2 - a1445 - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a70 <|@
d <@d|@=== Debug Properties ===
bci: 34
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
polymorphic: false
stamp: a -
targetMethod: Direct#AbstractCollection.iterator
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1305 
stateDuring: ?2092 
=== Succesors ===
next: v269 
=== Usages ===
a270 
=== Predecessor ===
v588 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1305 stateDuring: ?2092 #next: v269  <|@  <|@
f <@*|@fixed>@ <|@
tid v269 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v267 
=== Predecessor ===
a70 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" "B32" "B58" 
    successors "B65" "B66" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a270 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: a -
valueDescription: a -
=== Inputs ===
merge: v267 
values: a70 a1804 a1876 
=== Succesors ===
=== Usages ===
?268 ?76 j2514 ?777 ?369 ?280 ?764 ?93 v2778 ?788 v2722 ?802 v2706 j2504 v2698 v2697 v2704 v2700 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v267 values: a70 a1804 a1876  <|@  <|@
f <@~|@floating>@ <|@
tid a843 <|@
d <@d|@=== Debug Properties ===
stamp: a! [Ljava/lang/Object;
valueDescription: a -
=== Inputs ===
merge: v267 
values: a1445 a1444 a1445 
=== Succesors ===
=== Usages ===
?76 v2729 ?280 ?369 ?369 ?764 ?764 v2779 ?93 v952 v102 v867 ?268 ?280 v2696 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v267 values: a1445 a1444 a1445  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v267 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v269 v275 v732 
=== Succesors ===
next: i2640 
=== Usages ===
a270 a843 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v269 v275 v732 #next: i2640  <|@  <|@
f <@~|@floating>@ <|@
tid v2696 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a843 
index: - 
=== Succesors ===
=== Usages ===
i2640 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a843 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2640 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 45]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v2696 
=== Succesors ===
next: v2608 
=== Usages ===
v78 v1466 j1453 
=== Predecessor ===
v267 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2696 #next: v2608  <|@  <|@
f <@~|@floating>@ <|@
tid j1453 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: true
inputBits: 32
resultBits: 64
stamp: i64 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
value: i2640 
=== Succesors ===
=== Usages ===
j1457 v1459 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i2640  <|@  <|@
f <@~|@floating>@ <|@
tid j1456 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -1
stableDimension: 0
stamp: i64 [-1] ⇊ffffffffffffffff
stampKind: i64
value: long[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1457 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1457 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-1 - 2147483646]
=== Inputs ===
x: j1453 
y: j1456 
=== Succesors ===
=== Usages ===
v1459 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1453 y: j1456  <|@  <|@
f <@~|@floating>@ <|@
tid v1459 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1457 
y: j1453 
=== Succesors ===
=== Usages ===
v2608 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j1457 y: j1453  <|@  <|@
tid ?268 <|@
d <@d|@=== Debug Properties ===
bci: 37
code: ResolvedJavaMethodBytecode<AbstractCollection.toArray(Object[])>
duringCall: false
localsSize: 6
locksSize: 0
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
rethrowException: false
sourceFile: AbstractCollection.java
sourceLine: 180
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: - a2 - a843 - - a270 
=== Succesors ===
=== Usages ===
v2196 v2641 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - a2 - a843 - - a270  <|@  <|@
f <@*|@fixed>@ <|@
tid v2608 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v1459 
=== Succesors ===
trueSuccessor: v2604 
falseSuccessor: v2607 
=== Usages ===
=== Predecessor ===
i2640 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1459 #trueSuccessor: v2604 #falseSuccessor: v2607  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B68" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2604 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2602 
=== Usages ===
=== Predecessor ===
v2608 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2602  <|@  <|@
f <@*|@fixed>@ <|@
tid v2602 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2601 
=== Predecessor ===
v2604 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B67" "B146" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2607 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2606 
=== Usages ===
=== Predecessor ===
v2608 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2606  <|@  <|@
f <@~|@floating>@ <|@
tid v1466 <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2640 
y: i21 
=== Succesors ===
=== Usages ===
v2606 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i2640 y: i21  <|@  <|@
f <@*|@fixed>@ <|@
tid v2606 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1466 
=== Succesors ===
trueSuccessor: v2605 
falseSuccessor: v1559 
=== Usages ===
=== Predecessor ===
v2607 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1466 #trueSuccessor: v2605 #falseSuccessor: v1559  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B68" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2605 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2603 
=== Usages ===
=== Predecessor ===
v2606 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2603  <|@  <|@
f <@*|@fixed>@ <|@
tid v2603 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2601 
=== Predecessor ===
v2605 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B65" "B67" 
    successors "B69" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2601 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2602 v2603 
=== Succesors ===
next: v2641 
=== Usages ===
v1465 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2602 v2603 #next: v2641  <|@  <|@
f <@~|@floating>@ <|@
tid v2778 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a270 
index: - 
=== Succesors ===
=== Usages ===
v2641 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a270 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2641 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 128]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?268 
guard: - 
address: v2778 
=== Succesors ===
next: v2642 
=== Usages ===
v2586 v2584 v2585 v2609 v2610 
=== Predecessor ===
v2601 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?268 guard: - address: v2778 #next: v2642  <|@  <|@
f <@~|@floating>@ <|@
tid v2779 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a843 
index: - 
=== Succesors ===
=== Usages ===
v2642 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a843 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2642 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v2779 
=== Succesors ===
next: v73 
=== Usages ===
v2728 
=== Predecessor ===
v2641 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2779 #next: v73  <|@  <|@
f <@~|@floating>@ <|@
tid v2728 <|@
d <@d|@=== Debug Properties ===
displacement: 232
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: v2642 
=== Succesors ===
=== Usages ===
v2680 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: v2642  <|@  <|@
f <@~|@floating>@ <|@
tid v2586 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 128]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2641 
y: v2548 
=== Succesors ===
=== Usages ===
v184 v150 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2641 y: v2548  <|@  <|@
f <@~|@floating>@ <|@
tid v2706 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a270 
index: - 
=== Succesors ===
=== Usages ===
v1054 a2653 i2677 v1177 a2685 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a270 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v2704 <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: a270 
index: - 
=== Succesors ===
=== Usages ===
i2651 a2670 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a270 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v2700 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: a270 
index: - 
=== Succesors ===
=== Usages ===
i2648 a2655 a2669 v1164 v1189 a2687 a2691 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a270 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v2697 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a270 
index: - 
=== Succesors ===
=== Usages ===
i2645 v1051 i2672 i2684 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a270 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v2698 <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times1
stamp: void*
=== Inputs ===
base: a270 
index: - 
=== Succesors ===
=== Usages ===
a2643 a2682 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a270 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid i1996 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.secondarySuperCacheOffset(GraalHotSpotVMConfig) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:75) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:216) [bci: 77]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
rawvalue: 24
stableDimension: 0
stamp: i32 [24] ⇊0000000000000018 ⇈0000000000000018
stampKind: i32
value: int[24|0x18]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1997 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i2511 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1445) [bci: 43]
at java.util.HashMap$KeyIterator.next(HashMap.java:1466) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
rawvalue: 0
stableDimension: 0
stamp: i8 [0] ⇈0000000000000000
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v2510 v2518 v2528 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i2505 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.cardTableShift(GraalHotSpotVMConfig) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1445) [bci: 43]
at java.util.HashMap$KeyIterator.next(HashMap.java:1466) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
rawvalue: 9
stableDimension: 0
stamp: i32 [9] ⇊0000000000000009 ⇈0000000000000009
stampKind: i32
value: int[9|0x9]
=== Inputs ===
=== Succesors ===
=== Usages ===
j2506 j2515 j2525 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j2509 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.loadLongConfigValue(int) [bci: -1]
at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.cardTableAddress(GraalHotSpotVMConfigNode.java:114) [bci: 6]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:133) [bci: 7]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1445) [bci: 43]
at java.util.HashMap$KeyIterator.next(HashMap.java:1466) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
rawvalue: 4682670080
stableDimension: 0
stamp: i64 [4682670080] ⇊00000001171be000 ⇈00000001171be000
stampKind: i64
value: long[4682670080|0x1171be000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v2782 v2783 v2785 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v2583 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 128]
rawvalue: meta{HotSpotType<Ljava/util/HashMap$KeyIterator;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/HashMap$KeyIterator;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v2584 v2609 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v73 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v74 
=== Predecessor ===
v2642 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" "B122" 
    successors "B70" "B130" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4614662322185081950
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i75 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v74 
values: i21 i94 
=== Succesors ===
=== Usages ===
?76 v78 ?369 ?764 ?764 v2729 ?93 i94 ?369 ?280 ?280 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v74 values: i21 i94  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v74 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: true
inversionCount: 0
loopFrequency: 3.321744384028121
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v73 
=== Succesors ===
next: v83 
=== Usages ===
i75 v81 v95 v1689 v1684 v1643 v1673 v1613 v1598 v1658 v1653 v1603 v1623 v1573 v1633 v1583 v1588 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v73 #next: v83  <|@  <|@
tid ?76 <|@
d <@d|@=== Debug Properties ===
bci: 42
code: ResolvedJavaMethodBytecode<AbstractCollection.toArray(Object[])>
duringCall: false
localsSize: 6
locksSize: 0
rethrowException: false
sourceFile: AbstractCollection.java
sourceLine: 182
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - a2 - a843 a270 i75 
=== Succesors ===
=== Usages ===
v2132 i2683 i2644 i2647 i2650 v2654 i2656 i2660 i2664 i2667 v2805 i2671 v2686 i2688 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - a2 - a843 a270 i75  <|@  <|@
f <@~|@floating>@ <|@
tid v78 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 46]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i75 
y: i2640 
=== Succesors ===
=== Usages ===
v83 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i75 y: i2640  <|@  <|@
f <@*|@fixed>@ <|@
tid v83 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 46]
stamp: void
trueSuccessorProbability: 0.6989533557102465
=== Inputs ===
condition: v78 
=== Succesors ===
trueSuccessor: v79 
falseSuccessor: v81 
=== Usages ===
=== Predecessor ===
v74 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v78 #trueSuccessor: v79 #falseSuccessor: v81  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B71" "B82" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612410522371396702
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v79 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:183) [bci: 49]
stamp: void
=== Inputs ===
=== Succesors ===
next: v184 
=== Usages ===
v1465 
=== Predecessor ===
v83 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v184  <|@  <|@
f <@*|@fixed>@ <|@
tid v184 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/ArrayList$SubList$1; target_method=hasNext target_method_class=Ljava/util/ArrayList$SubList$1; position=at java.util.AbstractCollection.toArray(AbstractCollection.java:183) [bci: 51]
stamp: void
trueSuccessorProbability: 0.8874682121946893
=== Inputs ===
condition: v2586 
=== Succesors ===
trueSuccessor: v178 
falseSuccessor: v183 
=== Usages ===
=== Predecessor ===
v79 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2586 #trueSuccessor: v178 #falseSuccessor: v183  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B72" "B73" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4611822194529678060
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v178 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/ArrayList$SubList$1; target_method=hasNext target_method_class=Ljava/util/ArrayList$SubList$1; position=at java.util.AbstractCollection.toArray(AbstractCollection.java:183) [bci: 51]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2643 
=== Usages ===
=== Predecessor ===
v184 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2643  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2643 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList$SubList$1.this$1
nodeSourcePosition: at java.util.ArrayList$SubList$1.hasNext(ArrayList.java:1109) [bci: 5]
at java.util.AbstractCollection.toArray(AbstractCollection.java:183) [bci: 51]
nullCheck: false
stamp: n# Ljava/util/ArrayList$SubList;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2698 
=== Succesors ===
next: i2644 
=== Usages ===
v2701 v2699 
=== Predecessor ===
v178 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2698 #next: i2644  <|@  <|@
f <@~|@floating>@ <|@
tid v2699 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2643 
=== Succesors ===
=== Usages ===
i2644 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2643  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2644 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList$SubList.size
nodeSourcePosition: at java.util.ArrayList$SubList$1.hasNext(ArrayList.java:1109) [bci: 8]
at java.util.AbstractCollection.toArray(AbstractCollection.java:183) [bci: 51]
nullCheck: true
stamp: i32
=== Inputs ===
stateBefore: ?76 
guard: - 
address: v2699 
=== Succesors ===
next: i2645 
=== Usages ===
v245 v339 
=== Predecessor ===
a2643 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?76 guard: - address: v2699 #next: i2645  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2645 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList$SubList$1.cursor
nodeSourcePosition: at java.util.ArrayList$SubList$1.hasNext(ArrayList.java:1109) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:183) [bci: 51]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2697 
=== Succesors ===
next: v1574 
=== Usages ===
v245 v339 i345 i349 v1054 
=== Predecessor ===
i2644 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2697 #next: v1574  <|@  <|@
f <@~|@floating>@ <|@
tid v245 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.ArrayList$SubList$1.hasNext(ArrayList.java:1109) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:183) [bci: 51]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2644 
y: i2645 
=== Succesors ===
=== Usages ===
v1574 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i2644 y: i2645  <|@  <|@
f <@*|@fixed>@ <|@
tid v1574 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:183) [bci: 56]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v245 
=== Succesors ===
trueSuccessor: v1573 
falseSuccessor: v1570 
=== Usages ===
=== Predecessor ===
i2645 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v245 #trueSuccessor: v1573 #falseSuccessor: v1570  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B145" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1573 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:183) [bci: 56]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v74 
=== Succesors ===
next: v2135 
=== Usages ===
=== Predecessor ===
v1574 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v74 #next: v2135  <|@  <|@
f <@~|@floating>@ <|@
tid i2136 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -262419
stableDimension: 0
stamp: i32 [-262419] ⇊00000000fffbfeed ⇈00000000fffbfeed
stampKind: i32
value: int[-262419|0xfffffffffffbfeed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2130 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2135 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2127 
=== Predecessor ===
v1573 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B74" "B81" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4611822194529678060
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1570 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:183) [bci: 56]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2646 
=== Usages ===
=== Predecessor ===
v1574 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2646  <|@  <|@
f <@~|@floating>@ <|@
tid v2701 <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2643 
=== Succesors ===
=== Usages ===
a2646 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2643  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2646 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList$SubList.this$0
nodeSourcePosition: at java.util.ArrayList$SubList$1.checkForComodification(ArrayList.java:1212) [bci: 8]
at java.util.ArrayList$SubList$1.next(ArrayList.java:1114) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
nullCheck: false
stamp: n# Ljava/util/ArrayList;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2701 
=== Succesors ===
next: i2647 
=== Usages ===
v2703 v2702 
=== Predecessor ===
v1570 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2701 #next: i2647  <|@  <|@
f <@~|@floating>@ <|@
tid v2702 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2646 
=== Succesors ===
=== Usages ===
i2647 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2646  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2647 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractList.modCount
nodeSourcePosition: at java.util.ArrayList$SubList$1.checkForComodification(ArrayList.java:1212) [bci: 11]
at java.util.ArrayList$SubList$1.next(ArrayList.java:1114) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
nullCheck: true
stamp: i32
=== Inputs ===
stateBefore: ?76 
guard: - 
address: v2702 
=== Succesors ===
next: i2648 
=== Usages ===
v421 
=== Predecessor ===
a2646 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?76 guard: - address: v2702 #next: i2648  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2648 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList$SubList$1.expectedModCount
nodeSourcePosition: at java.util.ArrayList$SubList$1.checkForComodification(ArrayList.java:1212) [bci: 1]
at java.util.ArrayList$SubList$1.next(ArrayList.java:1114) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2700 
=== Succesors ===
next: v1584 
=== Usages ===
v421 
=== Predecessor ===
i2647 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2700 #next: v1584  <|@  <|@
f <@~|@floating>@ <|@
tid v421 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.ArrayList$SubList$1.checkForComodification(ArrayList.java:1212) [bci: 14]
at java.util.ArrayList$SubList$1.next(ArrayList.java:1114) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2647 
y: i2648 
=== Succesors ===
=== Usages ===
v1584 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i2647 y: i2648  <|@  <|@
f <@*|@fixed>@ <|@
tid v1584 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$SubList$1.checkForComodification(ArrayList.java:1212) [bci: 14]
at java.util.ArrayList$SubList$1.next(ArrayList.java:1114) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v421 
=== Succesors ===
trueSuccessor: v1580 
falseSuccessor: v1583 
=== Usages ===
=== Predecessor ===
i2648 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v421 #trueSuccessor: v1580 #falseSuccessor: v1583  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B75" "B80" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4611822194529678060
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1580 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$SubList$1.checkForComodification(ArrayList.java:1212) [bci: 14]
at java.util.ArrayList$SubList$1.next(ArrayList.java:1114) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1589 
=== Usages ===
=== Predecessor ===
v1584 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1589  <|@  <|@
f <@~|@floating>@ <|@
tid v339 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.ArrayList$SubList$1.next(ArrayList.java:1116) [bci: 17]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2645 
y: i2644 
=== Succesors ===
=== Usages ===
v1589 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2645 y: i2644  <|@  <|@
f <@*|@fixed>@ <|@
tid v1589 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$SubList$1.next(ArrayList.java:1116) [bci: 17]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v339 
=== Succesors ===
trueSuccessor: v1585 
falseSuccessor: v1588 
=== Usages ===
=== Predecessor ===
v1580 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v339 #trueSuccessor: v1585 #falseSuccessor: v1588  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B76" "B79" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4611822194529678060
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1585 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$SubList$1.next(ArrayList.java:1116) [bci: 17]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2649 
=== Usages ===
=== Predecessor ===
v1589 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2649  <|@  <|@
f <@~|@floating>@ <|@
tid v2703 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2646 
=== Succesors ===
=== Usages ===
a2649 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2646  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2649 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList.elementData
nodeSourcePosition: at java.util.ArrayList$SubList$1.next(ArrayList.java:1118) [bci: 35]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
nullCheck: false
stamp: n [Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2703 
=== Succesors ===
next: i2650 
=== Usages ===
a1041 v2705 
=== Predecessor ===
v1585 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2703 #next: i2650  <|@  <|@
f <@~|@floating>@ <|@
tid v2705 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2649 
=== Succesors ===
=== Usages ===
i2650 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2649  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2650 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.ArrayList$SubList$1.next(ArrayList.java:1119) [bci: 46]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?76 
guard: - 
address: v2705 
=== Succesors ===
next: i2651 
=== Usages ===
v347 v1056 
=== Predecessor ===
a2649 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?76 guard: - address: v2705 #next: i2651  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2651 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList$SubList$1.val$offset
nodeSourcePosition: at java.util.ArrayList$SubList$1.next(ArrayList.java:1119) [bci: 40]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2704 
=== Succesors ===
next: v1599 
=== Usages ===
i345 
=== Predecessor ===
i2650 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2704 #next: v1599  <|@  <|@
f <@~|@floating>@ <|@
tid i345 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.util.ArrayList$SubList$1.next(ArrayList.java:1119) [bci: 44]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: i32
=== Inputs ===
x: i2645 
y: i2651 
=== Succesors ===
=== Usages ===
v347 v2707 v1056 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i2645 y: i2651  <|@  <|@
f <@~|@floating>@ <|@
tid v347 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.ArrayList$SubList$1.next(ArrayList.java:1119) [bci: 47]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i345 
y: i2650 
=== Succesors ===
=== Usages ===
v1599 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i345 y: i2650  <|@  <|@
f <@*|@fixed>@ <|@
tid v1599 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$SubList$1.next(ArrayList.java:1119) [bci: 47]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v347 
=== Succesors ===
trueSuccessor: v1595 
falseSuccessor: v1598 
=== Usages ===
=== Predecessor ===
i2651 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v347 #trueSuccessor: v1595 #falseSuccessor: v1598  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B77" "B78" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4611822194529678060
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1595 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$SubList$1.next(ArrayList.java:1119) [bci: 47]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1604 
=== Usages ===
=== Predecessor ===
v1599 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1604  <|@  <|@
f <@~|@floating>@ <|@
tid v1056 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.ArrayList$SubList$1.next(ArrayList.java:1122) [bci: 77]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i345 
y: i2650 
=== Succesors ===
=== Usages ===
v1604 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i345 y: i2650  <|@  <|@
f <@*|@fixed>@ <|@
tid v1604 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$SubList$1.next(ArrayList.java:1122) [bci: 77]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1056 
=== Succesors ===
trueSuccessor: v1600 
falseSuccessor: v1603 
=== Usages ===
=== Predecessor ===
v1595 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1056 #trueSuccessor: v1600 #falseSuccessor: v1603  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B111" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4611822194529678060
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1600 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$SubList$1.next(ArrayList.java:1122) [bci: 77]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1051 
=== Usages ===
a2652 
=== Predecessor ===
v1604 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1051  <|@  <|@
f <@~|@floating>@ <|@
tid i349 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.util.ArrayList$SubList$1.next(ArrayList.java:1121) [bci: 61]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: i32
=== Inputs ===
x: i2645 
y: i20 
=== Succesors ===
=== Usages ===
v1051 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i2645 y: i20  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1051 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: ArrayList$SubList$1.cursor
nodeSourcePosition: at java.util.ArrayList$SubList$1.next(ArrayList.java:1121) [bci: 62]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2697 
value: i349 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1054 
=== Usages ===
=== Predecessor ===
v1600 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2697 value: i349 stateAfter: - lastLocationAccess: - #next: v1054  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1054 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: ArrayList$SubList$1.lastRet
nodeSourcePosition: at java.util.ArrayList$SubList$1.next(ArrayList.java:1122) [bci: 73]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2706 
value: i2645 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a2652 
=== Usages ===
=== Predecessor ===
v1051 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2706 value: i2645 stateAfter: - lastLocationAccess: - #next: a2652  <|@  <|@
f <@~|@floating>@ <|@
tid a1041 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.ArrayList$SubList$1.next(ArrayList.java:1118) [bci: 35]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
op: Uncompress
stamp: a [Ljava/lang/Object;
=== Inputs ===
value: a2649 
=== Succesors ===
=== Usages ===
v2707 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2649  <|@  <|@
f <@~|@floating>@ <|@
tid v2707 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a1041 
index: i345 
=== Succesors ===
=== Usages ===
a2652 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1041 index: i345  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2652 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nodeSourcePosition: at java.util.ArrayList$SubList$1.next(ArrayList.java:1122) [bci: 77]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: v1600 
address: v2707 
=== Succesors ===
next: v287 
=== Usages ===
a1065 a2095 
=== Predecessor ===
v1054 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1600 address: v2707 #next: v287  <|@  <|@
f <@~|@floating>@ <|@
tid a1065 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.ArrayList$SubList$1.next(ArrayList.java:1122) [bci: 77]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
op: Uncompress
stamp: a Ljava/lang/Object;
=== Inputs ===
value: a2652 
=== Succesors ===
=== Usages ===
a282 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2652  <|@  <|@
f <@*|@fixed>@ <|@
tid v287 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v279 
=== Predecessor ===
a2652 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B145" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1603 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$SubList$1.next(ArrayList.java:1122) [bci: 77]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v74 
=== Succesors ===
next: v2147 
=== Usages ===
=== Predecessor ===
v1604 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v74 #next: v2147  <|@  <|@
f <@~|@floating>@ <|@
tid i2148 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -270619
stableDimension: 0
stamp: i32 [-270619] ⇊00000000fffbdee5 ⇈00000000fffbdee5
stampKind: i32
value: int[-270619|0xfffffffffffbdee5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2130 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2147 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2127 
=== Predecessor ===
v1603 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B145" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1598 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$SubList$1.next(ArrayList.java:1119) [bci: 47]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v74 
=== Succesors ===
next: v2145 
=== Usages ===
=== Predecessor ===
v1599 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v74 #next: v2145  <|@  <|@
f <@~|@floating>@ <|@
tid i2146 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -268819
stableDimension: 0
stamp: i32 [-268819] ⇊00000000fffbe5ed ⇈00000000fffbe5ed
stampKind: i32
value: int[-268819|0xfffffffffffbe5ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2130 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2145 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2127 
=== Predecessor ===
v1598 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B145" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1588 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$SubList$1.next(ArrayList.java:1116) [bci: 17]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v74 
=== Succesors ===
next: v2141 
=== Usages ===
=== Predecessor ===
v1589 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v74 #next: v2141  <|@  <|@
f <@~|@floating>@ <|@
tid i2142 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -265747
stableDimension: 0
stamp: i32 [-265747] ⇊00000000fffbf1ed ⇈00000000fffbf1ed
stampKind: i32
value: int[-265747|0xfffffffffffbf1ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2130 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2141 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2127 
=== Predecessor ===
v1588 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B145" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1583 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$SubList$1.checkForComodification(ArrayList.java:1212) [bci: 14]
at java.util.ArrayList$SubList$1.next(ArrayList.java:1114) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v74 
=== Succesors ===
next: v2139 
=== Usages ===
=== Predecessor ===
v1584 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v74 #next: v2139  <|@  <|@
f <@~|@floating>@ <|@
tid i2140 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -265491
stableDimension: 0
stamp: i32 [-265491] ⇊00000000fffbf2ed ⇈00000000fffbf2ed
stampKind: i32
value: int[-265491|0xfffffffffffbf2ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2130 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2139 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2127 
=== Predecessor ===
v1583 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B83" "B98" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598378242651655054
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v183 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:183) [bci: 51]
stamp: void
=== Inputs ===
=== Succesors ===
next: v193 
=== Usages ===
=== Predecessor ===
v184 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v193  <|@  <|@
f <@~|@floating>@ <|@
tid v2585 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 128]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2641 
y: v2566 
=== Succesors ===
=== Usages ===
v193 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2641 y: v2566  <|@  <|@
f <@*|@fixed>@ <|@
tid v193 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/SubList$1; target_method=hasNext target_method_class=Ljava/util/SubList$1; position=at java.util.AbstractCollection.toArray(AbstractCollection.java:183) [bci: 51]
stamp: void
trueSuccessorProbability: 0.916333823838554
=== Inputs ===
condition: v2585 
=== Succesors ===
trueSuccessor: v189 
falseSuccessor: v192 
=== Usages ===
=== Predecessor ===
v183 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2585 #trueSuccessor: v189 #falseSuccessor: v192  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B84" "B97" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597793695504499049
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v189 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/SubList$1; target_method=hasNext target_method_class=Ljava/util/SubList$1; position=at java.util.AbstractCollection.toArray(AbstractCollection.java:183) [bci: 51]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2653 
=== Usages ===
=== Predecessor ===
v193 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2653  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2653 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: SubList$1.i
nodeSourcePosition: at java.util.SubList$1.nextIndex(AbstractList.java:724) [bci: 1]
at java.util.SubList$1.hasNext(AbstractList.java:702) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:183) [bci: 51]
nullCheck: false
stamp: n -
=== Inputs ===
stateBefore: - 
guard: - 
address: v2706 
=== Succesors ===
next: v2654 
=== Usages ===
?2093 v2780 v2708 v2711 v2713 v2717 
=== Predecessor ===
v189 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2706 #next: v2654  <|@  <|@
f <@~|@floating>@ <|@
tid v2780 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2653 
=== Succesors ===
=== Usages ===
v2654 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2653  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2654 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.SubList$1.nextIndex(AbstractList.java:724) [bci: 4]
at java.util.SubList$1.hasNext(AbstractList.java:702) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:183) [bci: 51]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?76 
guard: - 
address: v2780 
=== Succesors ===
next: v1614 
=== Usages ===
v2587 
=== Predecessor ===
a2653 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?76 guard: - address: v2780 #next: v1614  <|@  <|@
f <@~|@floating>@ <|@
tid v2587 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.SubList$1.nextIndex(AbstractList.java:724) [bci: 4]
at java.util.SubList$1.hasNext(AbstractList.java:702) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:183) [bci: 51]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2654 
y: v2572 
=== Succesors ===
=== Usages ===
v1614 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2654 y: v2572  <|@  <|@
f <@*|@fixed>@ <|@
tid v1614 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/AbstractList$ListItr; target_method=nextIndex target_method_class=Ljava/util/AbstractList$ListItr; position=at java.util.SubList$1.nextIndex(AbstractList.java:724) [bci: 4]
at java.util.SubList$1.hasNext(AbstractList.java:702) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:183) [bci: 51]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v2587 
=== Succesors ===
trueSuccessor: v1610 
falseSuccessor: v1613 
=== Usages ===
=== Predecessor ===
v2654 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2587 #trueSuccessor: v1610 #falseSuccessor: v1613  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B85" "B96" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597793695504499049
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1610 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/AbstractList$ListItr; target_method=nextIndex target_method_class=Ljava/util/AbstractList$ListItr; position=at java.util.SubList$1.nextIndex(AbstractList.java:724) [bci: 4]
at java.util.SubList$1.hasNext(AbstractList.java:702) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:183) [bci: 51]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2655 
=== Usages ===
=== Predecessor ===
v1614 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2655  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2655 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: SubList$1.this$0
nodeSourcePosition: at java.util.SubList$1.nextIndex(AbstractList.java:724) [bci: 10]
at java.util.SubList$1.hasNext(AbstractList.java:702) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:183) [bci: 51]
nullCheck: false
stamp: n Ljava/util/SubList;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2700 
=== Succesors ===
next: i2656 
=== Usages ===
v2710 v2709 
=== Predecessor ===
v1610 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2700 #next: i2656  <|@  <|@
f <@~|@floating>@ <|@
tid v2710 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2655 
=== Succesors ===
=== Usages ===
i2656 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2655  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2656 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: SubList.size
nodeSourcePosition: at java.util.SubList.access$200(AbstractList.java:613) [bci: 1]
at java.util.SubList$1.hasNext(AbstractList.java:702) [bci: 8]
at java.util.AbstractCollection.toArray(AbstractCollection.java:183) [bci: 51]
nullCheck: true
stamp: i32
=== Inputs ===
stateBefore: ?76 
guard: - 
address: v2710 
=== Succesors ===
next: i2657 
=== Usages ===
v253 
=== Predecessor ===
a2655 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?76 guard: - address: v2710 #next: i2657  <|@  <|@
f <@~|@floating>@ <|@
tid v2709 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2655 
=== Succesors ===
=== Usages ===
i2657 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2655  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2657 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: SubList.offset
nodeSourcePosition: at java.util.SubList.access$000(AbstractList.java:613) [bci: 1]
at java.util.SubList$1.nextIndex(AbstractList.java:724) [bci: 13]
at java.util.SubList$1.hasNext(AbstractList.java:702) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:183) [bci: 51]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2709 
=== Succesors ===
next: i2658 
=== Usages ===
i324 
=== Predecessor ===
i2656 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2709 #next: i2658  <|@  <|@
f <@~|@floating>@ <|@
tid v2708 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2653 
=== Succesors ===
=== Usages ===
i2658 v1115 v1134 v1137 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2653  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2658 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractList$Itr.cursor
nodeSourcePosition: at java.util.AbstractList$ListItr.nextIndex(AbstractList.java:413) [bci: 1]
at java.util.SubList$1.nextIndex(AbstractList.java:724) [bci: 4]
at java.util.SubList$1.hasNext(AbstractList.java:702) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:183) [bci: 51]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2708 
=== Succesors ===
next: v1624 
=== Usages ===
i324 v1133 v1135 ?2093 v1136 v1124 i528 v1104 v2720 v2716 v1114 
=== Predecessor ===
i2657 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2708 #next: v1624  <|@  <|@
f <@~|@floating>@ <|@
tid i324 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at java.util.SubList$1.nextIndex(AbstractList.java:724) [bci: 16]
at java.util.SubList$1.hasNext(AbstractList.java:702) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:183) [bci: 51]
stamp: i32
=== Inputs ===
x: i2658 
y: i2657 
=== Succesors ===
=== Usages ===
v253 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i2658 y: i2657  <|@  <|@
f <@~|@floating>@ <|@
tid v253 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.SubList$1.hasNext(AbstractList.java:702) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:183) [bci: 51]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i324 
y: i2656 
=== Succesors ===
=== Usages ===
v1624 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i324 y: i2656  <|@  <|@
f <@*|@fixed>@ <|@
tid v1624 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:183) [bci: 56]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v253 
=== Succesors ===
trueSuccessor: v1620 
falseSuccessor: v1623 
=== Usages ===
=== Predecessor ===
i2658 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v253 #trueSuccessor: v1620 #falseSuccessor: v1623  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B86" "B95" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597793695504499049
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1620 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:183) [bci: 56]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2659 
=== Usages ===
=== Predecessor ===
v1624 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2659  <|@  <|@
f <@~|@floating>@ <|@
tid v2711 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2653 
=== Succesors ===
=== Usages ===
a2659 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2653  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2659 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractList$Itr.this$0
nodeSourcePosition: at java.util.AbstractList$Itr.checkForComodification(AbstractList.java:385) [bci: 1]
at java.util.AbstractList$Itr.next(AbstractList.java:355) [bci: 1]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
nullCheck: false
stamp: n Ljava/util/AbstractList;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2711 
=== Succesors ===
next: i2660 
=== Usages ===
a1086 v2781 v2712 v2714 v2718 
=== Predecessor ===
v1620 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2711 #next: i2660  <|@  <|@
f <@~|@floating>@ <|@
tid v2712 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2659 
=== Succesors ===
=== Usages ===
i2660 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2659  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2660 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractList.modCount
nodeSourcePosition: at java.util.AbstractList$Itr.checkForComodification(AbstractList.java:385) [bci: 4]
at java.util.AbstractList$Itr.next(AbstractList.java:355) [bci: 1]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
nullCheck: true
stamp: i32
=== Inputs ===
stateBefore: ?76 
guard: - 
address: v2712 
=== Succesors ===
next: i2661 
=== Usages ===
v536 
=== Predecessor ===
a2659 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?76 guard: - address: v2712 #next: i2661  <|@  <|@
f <@~|@floating>@ <|@
tid v2713 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2653 
=== Succesors ===
=== Usages ===
i2661 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2653  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2661 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractList$Itr.expectedModCount
nodeSourcePosition: at java.util.AbstractList$Itr.checkForComodification(AbstractList.java:385) [bci: 8]
at java.util.AbstractList$Itr.next(AbstractList.java:355) [bci: 1]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2713 
=== Succesors ===
next: v1634 
=== Usages ===
v536 
=== Predecessor ===
i2660 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2713 #next: v1634  <|@  <|@
f <@~|@floating>@ <|@
tid v536 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.AbstractList$Itr.checkForComodification(AbstractList.java:385) [bci: 11]
at java.util.AbstractList$Itr.next(AbstractList.java:355) [bci: 1]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2660 
y: i2661 
=== Succesors ===
=== Usages ===
v1634 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i2660 y: i2661  <|@  <|@
f <@*|@fixed>@ <|@
tid v1634 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList$Itr.checkForComodification(AbstractList.java:385) [bci: 11]
at java.util.AbstractList$Itr.next(AbstractList.java:355) [bci: 1]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v536 
=== Succesors ===
trueSuccessor: v1630 
falseSuccessor: v1633 
=== Usages ===
=== Predecessor ===
i2661 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v536 #trueSuccessor: v1630 #falseSuccessor: v1633  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B87" "B90" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597793695504499049
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1630 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList$Itr.checkForComodification(AbstractList.java:385) [bci: 11]
at java.util.AbstractList$Itr.next(AbstractList.java:355) [bci: 1]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2662 
=== Usages ===
=== Predecessor ===
v1634 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2662  <|@  <|@
f <@~|@floating>@ <|@
tid v2781 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2659 
=== Succesors ===
=== Usages ===
v2662 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2659  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2662 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v2781 
=== Succesors ===
next: v553 
=== Usages ===
v2589 v2588 
=== Predecessor ===
v1630 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2781 #next: v553  <|@  <|@
f <@~|@floating>@ <|@
tid v2588 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2662 
y: v2554 
=== Succesors ===
=== Usages ===
v553 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2662 y: v2554  <|@  <|@
f <@~|@floating>@ <|@
tid i528 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.util.AbstractList$Itr.next(AbstractList.java:360) [bci: 26]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: i32
=== Inputs ===
x: i2658 
y: i20 
=== Succesors ===
=== Usages ===
v1137 v1115 v1134 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i2658 y: i20  <|@  <|@
f <@~|@floating>@ <|@
tid v2717 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2653 
=== Succesors ===
=== Usages ===
v1114 v1133 v1136 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2653  <|@  <|@
f <@*|@fixed>@ <|@
tid v553 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/Arrays$ArrayList; target_method=get target_method_class=Ljava/util/Arrays$ArrayList; position=at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: void
trueSuccessorProbability: 0.9304948647614187
=== Inputs ===
condition: v2588 
=== Succesors ===
trueSuccessor: v546 
falseSuccessor: v552 
=== Usages ===
=== Predecessor ===
v2662 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2588 #trueSuccessor: v546 #falseSuccessor: v552  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B88" "B89" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597194166782228429
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v546 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/Arrays$ArrayList; target_method=get target_method_class=Ljava/util/Arrays$ArrayList; position=at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2663 
=== Usages ===
=== Predecessor ===
v553 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2663  <|@  <|@
f <@~|@floating>@ <|@
tid v2714 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2659 
=== Succesors ===
=== Usages ===
a2663 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2659  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2663 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Arrays$ArrayList.a
nodeSourcePosition: at java.util.Arrays$ArrayList.get(Arrays.java:3841) [bci: 1]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
nullCheck: false
stamp: n [Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2714 
=== Succesors ===
next: i2664 
=== Usages ===
a1098 v2715 
=== Predecessor ===
v546 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2714 #next: i2664  <|@  <|@
f <@~|@floating>@ <|@
tid v2715 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2663 
=== Succesors ===
=== Usages ===
i2664 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2663  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2664 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.Arrays$ArrayList.get(Arrays.java:3841) [bci: 5]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?76 
guard: - 
address: v2715 
=== Succesors ===
next: v1644 
=== Usages ===
v1104 
=== Predecessor ===
a2663 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?76 guard: - address: v2715 #next: v1644  <|@  <|@
f <@~|@floating>@ <|@
tid v1104 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.Arrays$ArrayList.get(Arrays.java:3841) [bci: 5]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2658 
y: i2664 
=== Succesors ===
=== Usages ===
v1644 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i2658 y: i2664  <|@  <|@
f <@*|@fixed>@ <|@
tid v1644 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays$ArrayList.get(Arrays.java:3841) [bci: 5]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1104 
=== Succesors ===
trueSuccessor: v1640 
falseSuccessor: v1643 
=== Usages ===
=== Predecessor ===
i2664 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1104 #trueSuccessor: v1640 #falseSuccessor: v1643  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B111" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597194166782228429
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1640 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays$ArrayList.get(Arrays.java:3841) [bci: 5]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1114 
=== Usages ===
a2665 
=== Predecessor ===
v1644 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1114  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1114 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: AbstractList$Itr.lastRet
nodeSourcePosition: at java.util.AbstractList$Itr.next(AbstractList.java:359) [bci: 20]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2717 
value: i2658 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1115 
=== Usages ===
=== Predecessor ===
v1640 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2717 value: i2658 stateAfter: - lastLocationAccess: - #next: v1115  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1115 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: AbstractList$Itr.cursor
nodeSourcePosition: at java.util.AbstractList$Itr.next(AbstractList.java:360) [bci: 27]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2708 
value: i528 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a2665 
=== Usages ===
=== Predecessor ===
v1114 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2708 value: i528 stateAfter: - lastLocationAccess: - #next: a2665  <|@  <|@
f <@~|@floating>@ <|@
tid a1098 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.Arrays$ArrayList.get(Arrays.java:3841) [bci: 1]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
op: Uncompress
stamp: a [Ljava/lang/Object;
=== Inputs ===
value: a2663 
=== Succesors ===
=== Usages ===
v2716 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2663  <|@  <|@
f <@~|@floating>@ <|@
tid v2716 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a1098 
index: i2658 
=== Succesors ===
=== Usages ===
a2665 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1098 index: i2658  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2665 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nodeSourcePosition: at java.util.Arrays$ArrayList.get(Arrays.java:3841) [bci: 5]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: v1640 
address: v2716 
=== Succesors ===
next: v878 
=== Usages ===
a1112 a2095 
=== Predecessor ===
v1115 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1640 address: v2716 #next: v878  <|@  <|@
f <@~|@floating>@ <|@
tid a1112 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.Arrays$ArrayList.get(Arrays.java:3841) [bci: 5]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
op: Uncompress
stamp: a Ljava/lang/Object;
=== Inputs ===
value: a2665 
=== Succesors ===
=== Usages ===
a282 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2665  <|@  <|@
f <@*|@fixed>@ <|@
tid v878 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v279 
=== Predecessor ===
a2665 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B145" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1643 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays$ArrayList.get(Arrays.java:3841) [bci: 5]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v74 
=== Succesors ===
next: v2163 
=== Usages ===
=== Predecessor ===
v1644 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v74 #next: v2163  <|@  <|@
f <@~|@floating>@ <|@
tid i2164 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -282907
stableDimension: 0
stamp: i32 [-282907] ⇊00000000fffbaee5 ⇈00000000fffbaee5
stampKind: i32
value: int[-282907|0xfffffffffffbaee5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2130 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2163 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2127 
=== Predecessor ===
v1643 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B91" "B94" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4580453451186588897
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v552 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: void
=== Inputs ===
=== Succesors ===
next: v562 
=== Usages ===
=== Predecessor ===
v553 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v562  <|@  <|@
f <@~|@floating>@ <|@
tid v2589 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2662 
y: v2558 
=== Succesors ===
=== Usages ===
v562 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2662 y: v2558  <|@  <|@
f <@*|@fixed>@ <|@
tid v562 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Lorg/graalvm/compiler/graph/NodeInputList; target_method=get target_method_class=Lorg/graalvm/compiler/graph/NodeList; position=at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: void
trueSuccessorProbability: 0.9931451844203528
=== Inputs ===
condition: v2589 
=== Succesors ===
trueSuccessor: v558 
falseSuccessor: v561 
=== Usages ===
=== Predecessor ===
v552 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2589 #trueSuccessor: v558 #falseSuccessor: v561  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B92" "B93" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4580420573915981964
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v558 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Lorg/graalvm/compiler/graph/NodeInputList; target_method=get target_method_class=Lorg/graalvm/compiler/graph/NodeList; position=at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2666 
=== Usages ===
=== Predecessor ===
v562 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2666  <|@  <|@
f <@~|@floating>@ <|@
tid v2718 <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2659 
=== Succesors ===
=== Usages ===
a2666 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2659  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2666 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: NodeList.nodes
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList.get(NodeList.java:164) [bci: 23]
at org.graalvm.compiler.graph.NodeList.get(NodeList.java:34) [bci: 2]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
nullCheck: false
stamp: n [Lorg/graalvm/compiler/graph/Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2718 
=== Succesors ===
next: i2667 
=== Usages ===
a1118 v2719 
=== Predecessor ===
v558 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2718 #next: i2667  <|@  <|@
f <@~|@floating>@ <|@
tid v2719 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2666 
=== Succesors ===
=== Usages ===
i2667 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2666  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2667 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList.get(NodeList.java:164) [bci: 27]
at org.graalvm.compiler.graph.NodeList.get(NodeList.java:34) [bci: 2]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?76 
guard: - 
address: v2719 
=== Succesors ===
next: v1654 
=== Usages ===
v1124 
=== Predecessor ===
a2666 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?76 guard: - address: v2719 #next: v1654  <|@  <|@
f <@~|@floating>@ <|@
tid v1124 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList.get(NodeList.java:164) [bci: 27]
at org.graalvm.compiler.graph.NodeList.get(NodeList.java:34) [bci: 2]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2658 
y: i2667 
=== Succesors ===
=== Usages ===
v1654 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i2658 y: i2667  <|@  <|@
f <@*|@fixed>@ <|@
tid v1654 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList.get(NodeList.java:164) [bci: 27]
at org.graalvm.compiler.graph.NodeList.get(NodeList.java:34) [bci: 2]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1124 
=== Succesors ===
trueSuccessor: v1650 
falseSuccessor: v1653 
=== Usages ===
=== Predecessor ===
i2667 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1124 #trueSuccessor: v1650 #falseSuccessor: v1653  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B111" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4580420573915981964
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1650 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList.get(NodeList.java:164) [bci: 27]
at org.graalvm.compiler.graph.NodeList.get(NodeList.java:34) [bci: 2]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1133 
=== Usages ===
a2668 
=== Predecessor ===
v1654 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1133  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1133 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: AbstractList$Itr.lastRet
nodeSourcePosition: at java.util.AbstractList$Itr.next(AbstractList.java:359) [bci: 20]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2717 
value: i2658 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1134 
=== Usages ===
=== Predecessor ===
v1650 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2717 value: i2658 stateAfter: - lastLocationAccess: - #next: v1134  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1134 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: AbstractList$Itr.cursor
nodeSourcePosition: at java.util.AbstractList$Itr.next(AbstractList.java:360) [bci: 27]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2708 
value: i528 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a2668 
=== Usages ===
=== Predecessor ===
v1133 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2708 value: i528 stateAfter: - lastLocationAccess: - #next: a2668  <|@  <|@
f <@~|@floating>@ <|@
tid a1118 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList.get(NodeList.java:164) [bci: 23]
at org.graalvm.compiler.graph.NodeList.get(NodeList.java:34) [bci: 2]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
op: Uncompress
stamp: a [Lorg/graalvm/compiler/graph/Node;
=== Inputs ===
value: a2666 
=== Succesors ===
=== Usages ===
v2720 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2666  <|@  <|@
f <@~|@floating>@ <|@
tid v2720 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a1118 
index: i2658 
=== Succesors ===
=== Usages ===
a2668 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1118 index: i2658  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2668 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList.get(NodeList.java:164) [bci: 27]
at org.graalvm.compiler.graph.NodeList.get(NodeList.java:34) [bci: 2]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
nullCheck: false
stamp: n Lorg/graalvm/compiler/graph/Node;
=== Inputs ===
stateBefore: - 
guard: v1650 
address: v2720 
=== Succesors ===
next: v948 
=== Usages ===
a1132 a2095 
=== Predecessor ===
v1134 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1650 address: v2720 #next: v948  <|@  <|@
f <@~|@floating>@ <|@
tid a1132 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList.get(NodeList.java:164) [bci: 27]
at org.graalvm.compiler.graph.NodeList.get(NodeList.java:34) [bci: 2]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
op: Uncompress
stamp: a Lorg/graalvm/compiler/graph/Node;
=== Inputs ===
value: a2668 
=== Succesors ===
=== Usages ===
a282 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2668  <|@  <|@
f <@*|@fixed>@ <|@
tid v948 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v279 
=== Predecessor ===
a2668 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B145" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1653 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList.get(NodeList.java:164) [bci: 27]
at org.graalvm.compiler.graph.NodeList.get(NodeList.java:34) [bci: 2]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v74 
=== Succesors ===
next: v2167 
=== Usages ===
=== Predecessor ===
v1654 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v74 #next: v2167  <|@  <|@
f <@~|@floating>@ <|@
tid i2168 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -288027
stableDimension: 0
stamp: i32 [-288027] ⇊00000000fffb9ae5 ⇈00000000fffb9ae5
stampKind: i32
value: int[-288027|0xfffffffffffb9ae5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2130 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2167 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2127 
=== Predecessor ===
v1653 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B111" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4548045005664834791
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v561 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: void
=== Inputs ===
=== Succesors ===
next: a524 
=== Usages ===
=== Predecessor ===
v562 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a524  <|@  <|@
f <@~|@floating>@ <|@
tid a1086 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.AbstractList$Itr.checkForComodification(AbstractList.java:385) [bci: 1]
at java.util.AbstractList$Itr.next(AbstractList.java:355) [bci: 1]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
op: Uncompress
stamp: a Ljava/util/AbstractList;
=== Inputs ===
value: a2659 
=== Succesors ===
=== Usages ===
v1135 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2659  <|@  <|@
tid v1135 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
returnStamp: a Ljava/lang/Object;
signature: [Ljdk.vm.ci.meta.JavaType;@23a9b6b4
stamp: void
targetMethod: HotSpotMethod<AbstractList.get(int)>
=== Inputs ===
arguments: a1086 i2658 
=== Succesors ===
=== Usages ===
a524 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1086 i2658  <|@  <|@
tid ?369 <|@
d <@d|@=== Debug Properties ===
bci: 114
code: ResolvedJavaMethodBytecode<AbstractCollection.toArray(Object[])>
duringCall: true
localsSize: 6
locksSize: 0
rethrowException: false
sourceFile: AbstractCollection.java
sourceLine: 196
stackSize: 2
=== Inputs ===
outerFrameState: - 
values: - a2 - a843 a270 i75 a843 i75 
=== Succesors ===
=== Usages ===
?532 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - a2 - a843 a270 i75 a843 i75  <|@  <|@
tid ?532 <|@
d <@d|@=== Debug Properties ===
bci: 11
code: ResolvedJavaMethodBytecode<SubList$1.next()>
duringCall: true
localsSize: 1
locksSize: 0
rethrowException: false
sourceFile: AbstractList.java
sourceLine: 707
stackSize: 0
=== Inputs ===
outerFrameState: ?369 
values: - 
=== Succesors ===
=== Usages ===
?2093 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?369 values: -  <|@  <|@
tid ?2093 <|@
d <@d|@=== Debug Properties ===
bci: 14
code: ResolvedJavaMethodBytecode<AbstractList$Itr.next()>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: AbstractList.java
sourceLine: 358
stackSize: 0
=== Inputs ===
outerFrameState: ?532 
values: a2653 i2658 - 
=== Succesors ===
=== Usages ===
a524 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?532 values: a2653 i2658 -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a524 <|@
d <@d|@=== Debug Properties ===
bci: 14
nodeSourcePosition: at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
polymorphic: false
stamp: a Ljava/lang/Object;
targetMethod: Direct#AbstractList.get
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1135 
stateDuring: ?2093 
=== Succesors ===
next: v1136 
=== Usages ===
a282 a2094 
=== Predecessor ===
v561 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1135 stateDuring: ?2093 #next: v1136  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1136 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: AbstractList$Itr.lastRet
nodeSourcePosition: at java.util.AbstractList$Itr.next(AbstractList.java:359) [bci: 20]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2717 
value: i2658 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1137 
=== Usages ===
=== Predecessor ===
a524 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2717 value: i2658 stateAfter: - lastLocationAccess: - #next: v1137  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1137 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: AbstractList$Itr.cursor
nodeSourcePosition: at java.util.AbstractList$Itr.next(AbstractList.java:360) [bci: 27]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2708 
value: i528 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v298 
=== Usages ===
=== Predecessor ===
v1136 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2708 value: i528 stateAfter: - lastLocationAccess: - #next: v298  <|@  <|@
f <@~|@floating>@ <|@
tid a2094 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
op: Compress
stamp: n -
=== Inputs ===
value: a524 
=== Succesors ===
=== Usages ===
a2095 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a524  <|@  <|@
f <@*|@fixed>@ <|@
tid v298 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v279 
=== Predecessor ===
v1137 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B145" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1633 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList$Itr.checkForComodification(AbstractList.java:385) [bci: 11]
at java.util.AbstractList$Itr.next(AbstractList.java:355) [bci: 1]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v74 
=== Succesors ===
next: v2159 
=== Usages ===
=== Predecessor ===
v1634 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v74 #next: v2159  <|@  <|@
f <@~|@floating>@ <|@
tid i2160 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -280083
stableDimension: 0
stamp: i32 [-280083] ⇊00000000fffbb9ed ⇈00000000fffbb9ed
stampKind: i32
value: int[-280083|0xfffffffffffbb9ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2130 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2159 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2127 
=== Predecessor ===
v1633 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B145" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1623 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:183) [bci: 56]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v74 
=== Succesors ===
next: v2155 
=== Usages ===
=== Predecessor ===
v1624 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v74 #next: v2155  <|@  <|@
f <@~|@floating>@ <|@
tid i2156 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -277267
stableDimension: 0
stamp: i32 [-277267] ⇊00000000fffbc4ed ⇈00000000fffbc4ed
stampKind: i32
value: int[-277267|0xfffffffffffbc4ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2130 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2155 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2127 
=== Predecessor ===
v1623 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B145" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1613 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/AbstractList$ListItr; target_method=nextIndex target_method_class=Ljava/util/AbstractList$ListItr; position=at java.util.SubList$1.nextIndex(AbstractList.java:724) [bci: 4]
at java.util.SubList$1.hasNext(AbstractList.java:702) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:183) [bci: 51]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v74 
=== Succesors ===
next: v2151 
=== Usages ===
=== Predecessor ===
v1614 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v74 #next: v2151  <|@  <|@
f <@~|@floating>@ <|@
tid i2152 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -273971
stableDimension: 0
stamp: i32 [-273971] ⇊00000000fffbd1cd ⇈00000000fffbd1cd
stampKind: i32
value: int[-273971|0xfffffffffffbd1cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2130 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2151 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2127 
=== Predecessor ===
v1613 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B99" "B129" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4581957783436701082
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v192 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:183) [bci: 51]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1659 
=== Usages ===
=== Predecessor ===
v193 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1659  <|@  <|@
f <@~|@floating>@ <|@
tid v2584 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 128]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2641 
y: v2583 
=== Succesors ===
=== Usages ===
v1659 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2641 y: v2583  <|@  <|@
f <@*|@fixed>@ <|@
tid v1659 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/HashMap$KeyIterator; target_method=hasNext target_method_class=Ljava/util/HashMap$HashIterator; position=at java.util.AbstractCollection.toArray(AbstractCollection.java:183) [bci: 51]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v2584 
=== Succesors ===
trueSuccessor: v1655 
falseSuccessor: v1658 
=== Usages ===
=== Predecessor ===
v192 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2584 #trueSuccessor: v1655 #falseSuccessor: v1658  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B98" 
    successors "B100" "B128" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4581957783436701082
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1655 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/HashMap$KeyIterator; target_method=hasNext target_method_class=Ljava/util/HashMap$HashIterator; position=at java.util.AbstractCollection.toArray(AbstractCollection.java:183) [bci: 51]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2669 
=== Usages ===
=== Predecessor ===
v1659 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2669  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2669 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashMap$HashIterator.next
nodeSourcePosition: at java.util.HashMap$HashIterator.hasNext(HashMap.java:1435) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:183) [bci: 51]
nullCheck: false
stamp: n Ljava/util/HashMap$Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2700 
=== Succesors ===
next: v2805 
=== Usages ===
?788 v2805 v1156 v2723 v2727 ?777 ?802 
=== Predecessor ===
v1655 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2700 #next: v2805  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2805 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?76 
object: a2669 
=== Succesors ===
next: a2670 
=== Usages ===
=== Predecessor ===
a2669 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?76 object: a2669 #next: a2670  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2670 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashMap$HashIterator.this$0
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1441) [bci: 6]
at java.util.HashMap$KeyIterator.next(HashMap.java:1466) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
nullCheck: false
stamp: n Ljava/util/HashMap;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2704 
=== Succesors ===
next: i2671 
=== Usages ===
v2724 v2721 
=== Predecessor ===
v2805 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2704 #next: i2671  <|@  <|@
f <@~|@floating>@ <|@
tid v2721 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2670 
=== Succesors ===
=== Usages ===
i2671 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2670  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2671 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashMap.modCount
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1441) [bci: 9]
at java.util.HashMap$KeyIterator.next(HashMap.java:1466) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
nullCheck: true
stamp: i32
=== Inputs ===
stateBefore: ?76 
guard: - 
address: v2721 
=== Succesors ===
next: i2672 
=== Usages ===
v769 
=== Predecessor ===
a2670 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?76 guard: - address: v2721 #next: i2672  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2672 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashMap$HashIterator.expectedModCount
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1441) [bci: 13]
at java.util.HashMap$KeyIterator.next(HashMap.java:1466) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2697 
=== Succesors ===
next: v1674 
=== Usages ===
v769 
=== Predecessor ===
i2671 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2697 #next: v1674  <|@  <|@
f <@~|@floating>@ <|@
tid v769 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1441) [bci: 16]
at java.util.HashMap$KeyIterator.next(HashMap.java:1466) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2671 
y: i2672 
=== Succesors ===
=== Usages ===
v1674 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i2671 y: i2672  <|@  <|@
f <@*|@fixed>@ <|@
tid v1674 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1441) [bci: 16]
at java.util.HashMap$KeyIterator.next(HashMap.java:1466) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v769 
=== Succesors ===
trueSuccessor: v1670 
falseSuccessor: v1673 
=== Usages ===
=== Predecessor ===
i2672 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v769 #trueSuccessor: v1670 #falseSuccessor: v1673  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B101" "B110" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4581957783436701082
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1670 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1441) [bci: 16]
at java.util.HashMap$KeyIterator.next(HashMap.java:1466) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1156 
=== Usages ===
=== Predecessor ===
v1674 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1156  <|@  <|@
f <@~|@floating>@ <|@
tid v2722 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a270 
index: - 
=== Succesors ===
=== Usages ===
v1156 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a270 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1156 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: HashMap$HashIterator.current
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1445) [bci: 43]
at java.util.HashMap$KeyIterator.next(HashMap.java:1466) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2722 
value: a2669 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j2504 
=== Usages ===
=== Predecessor ===
v1670 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2722 value: a2669 stateAfter: - lastLocationAccess: - #next: j2504  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2504 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 1]
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1445) [bci: 43]
at java.util.HashMap$KeyIterator.next(HashMap.java:1466) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a270 
=== Succesors ===
next: v2510 
=== Usages ===
j2506 
=== Predecessor ===
v1156 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a270 #next: v2510  <|@  <|@
f <@~|@floating>@ <|@
tid j2506 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1445) [bci: 43]
at java.util.HashMap$KeyIterator.next(HashMap.java:1466) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j2504 
y: i2505 
=== Succesors ===
=== Usages ===
v2782 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j2504 y: i2505  <|@  <|@
f <@~|@floating>@ <|@
tid v2782 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j2506 
index: j2509 
=== Succesors ===
=== Usages ===
v2510 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2506 index: j2509  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2510 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1445) [bci: 43]
at java.util.HashMap$KeyIterator.next(HashMap.java:1466) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2782 
value: i2511 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a2673 
=== Usages ===
=== Predecessor ===
j2504 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2782 value: i2511 stateAfter: - lastLocationAccess: - #next: a2673  <|@  <|@
f <@~|@floating>@ <|@
tid v2723 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2669 
=== Succesors ===
=== Usages ===
a2673 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2669  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2673 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashMap$Node.next
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1445) [bci: 46]
at java.util.HashMap$KeyIterator.next(HashMap.java:1466) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
nullCheck: false
stamp: n Ljava/util/HashMap$Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2723 
=== Succesors ===
next: v1164 
=== Usages ===
v1164 v1343 
=== Predecessor ===
v2510 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2723 #next: v1164  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1164 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: HashMap$HashIterator.next
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1445) [bci: 50]
at java.util.HashMap$KeyIterator.next(HashMap.java:1466) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2700 
value: a2673 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a2674 
=== Usages ===
=== Predecessor ===
a2673 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2700 value: a2673 stateAfter: - lastLocationAccess: - #next: a2674  <|@  <|@
f <@~|@floating>@ <|@
tid v2727 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2669 
=== Succesors ===
=== Usages ===
a2674 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2669  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2674 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashMap$Node.key
nodeSourcePosition: at java.util.HashMap$KeyIterator.next(HashMap.java:1466) [bci: 4]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2727 
=== Succesors ===
next: v781 
=== Usages ===
a1192 a2095 a2095 a2095 
=== Predecessor ===
v1164 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2727 #next: v781  <|@  <|@
f <@~|@floating>@ <|@
tid a1192 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap$KeyIterator.next(HashMap.java:1466) [bci: 4]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
op: Uncompress
stamp: a Ljava/lang/Object;
=== Inputs ===
value: a2674 
=== Succesors ===
=== Usages ===
a282 a282 a282 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2674  <|@  <|@
f <@~|@floating>@ <|@
tid v1343 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1445) [bci: 53]
at java.util.HashMap$KeyIterator.next(HashMap.java:1466) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: void
=== Inputs ===
value: a2673 
=== Succesors ===
=== Usages ===
v781 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a2673  <|@  <|@
f <@*|@fixed>@ <|@
tid v781 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1445) [bci: 53]
at java.util.HashMap$KeyIterator.next(HashMap.java:1466) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: void
trueSuccessorProbability: 0.862846997817839
=== Inputs ===
condition: v1343 
=== Succesors ===
trueSuccessor: v779 
falseSuccessor: v780 
=== Usages ===
=== Predecessor ===
a2674 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1343 #trueSuccessor: v779 #falseSuccessor: v780  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B102" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4581093642439087946
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v779 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1445) [bci: 56]
at java.util.HashMap$KeyIterator.next(HashMap.java:1466) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2675 
=== Usages ===
=== Predecessor ===
v781 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2675  <|@  <|@
f <@~|@floating>@ <|@
tid v2724 <|@
d <@d|@=== Debug Properties ===
displacement: 36
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2670 
=== Succesors ===
=== Usages ===
a2675 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2670  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2675 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashMap.table
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1445) [bci: 60]
at java.util.HashMap$KeyIterator.next(HashMap.java:1466) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
nullCheck: false
stamp: n [Ljava/util/HashMap$Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2724 
=== Succesors ===
next: i2676 
=== Usages ===
a1168 v2725 
=== Predecessor ===
v779 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2724 #next: i2676  <|@  <|@
tid ?764 <|@
d <@d|@=== Debug Properties ===
bci: 114
code: ResolvedJavaMethodBytecode<AbstractCollection.toArray(Object[])>
duringCall: true
localsSize: 6
locksSize: 0
rethrowException: false
sourceFile: AbstractCollection.java
sourceLine: 196
stackSize: 2
=== Inputs ===
outerFrameState: - 
values: - a2 - a843 a270 i75 a843 i75 
=== Succesors ===
=== Usages ===
?812 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - a2 - a843 a270 i75 a843 i75  <|@  <|@
tid ?812 <|@
d <@d|@=== Debug Properties ===
bci: 1
code: ResolvedJavaMethodBytecode<HashMap$KeyIterator.next()>
duringCall: true
localsSize: 1
locksSize: 0
rethrowException: false
sourceFile: HashMap.java
sourceLine: 1466
stackSize: 0
=== Inputs ===
outerFrameState: ?764 
values: - 
=== Succesors ===
=== Usages ===
?802 ?777 ?788 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?764 values: -  <|@  <|@
f <@~|@floating>@ <|@
tid a2692 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: n - NULL
stampKind: n -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?777 ?802 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
tid ?777 <|@
d <@d|@=== Debug Properties ===
bci: 53
code: ResolvedJavaMethodBytecode<HashMap$HashIterator.nextNode()>
duringCall: false
localsSize: 3
locksSize: 0
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1445) [bci: 50]
at java.util.HashMap$KeyIterator.next(HashMap.java:1466) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
rethrowException: false
sourceFile: HashMap.java
sourceLine: 1445
stackSize: 1
=== Inputs ===
outerFrameState: ?812 
values: a270 - a2669 a2692 
=== Succesors ===
=== Usages ===
i2676 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?812 values: a270 - a2669 a2692  <|@  <|@
f <@~|@floating>@ <|@
tid v2725 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2675 
=== Succesors ===
=== Usages ===
i2676 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2675  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2676 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1446) [bci: 73]
at java.util.HashMap$KeyIterator.next(HashMap.java:1466) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?777 
guard: - 
address: v2725 
=== Succesors ===
next: i2677 
=== Usages ===
v791 v1179 
=== Predecessor ===
a2675 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?777 guard: - address: v2725 #next: i2677  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2677 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashMap$HashIterator.index
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1446) [bci: 69]
at java.util.HashMap$KeyIterator.next(HashMap.java:1466) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2706 
=== Succesors ===
next: v786 
=== Usages ===
i2600 
=== Predecessor ===
i2676 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2706 #next: v786  <|@  <|@
f <@~|@floating>@ <|@
tid a1168 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1445) [bci: 60]
at java.util.HashMap$KeyIterator.next(HashMap.java:1466) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
op: Uncompress
stamp: a [Ljava/util/HashMap$Node;
=== Inputs ===
value: a2675 
=== Succesors ===
=== Usages ===
?802 ?788 v2726 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2675  <|@  <|@
tid ?802 <|@
d <@d|@=== Debug Properties ===
bci: 95
code: ResolvedJavaMethodBytecode<HashMap$HashIterator.nextNode()>
duringCall: false
localsSize: 3
locksSize: 0
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1446) [bci: 92]
at java.util.HashMap$KeyIterator.next(HashMap.java:1466) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
rethrowException: false
sourceFile: HashMap.java
sourceLine: 1446
stackSize: 1
=== Inputs ===
outerFrameState: ?812 
values: a270 a1168 a2669 a2692 
=== Succesors ===
=== Usages ===
v1451 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?812 values: a270 a1168 a2669 a2692  <|@  <|@
f <@*|@fixed>@ <|@
tid v786 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1446) [bci: 68]
at java.util.HashMap$KeyIterator.next(HashMap.java:1466) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v787 
=== Predecessor ===
i2677 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B101" "B105" 
    successors "B103" "B109" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 2
    probability 4589007040607145023
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i2600 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v787 
values: i2677 i797 
=== Succesors ===
=== Usages ===
v791 i797 v1179 v2726 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v787 values: i2677 i797  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v787 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: true
inversionCount: 0
loopFrequency: 3.2544276911054864
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1446) [bci: 68]
at java.util.HashMap$KeyIterator.next(HashMap.java:1466) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v786 
=== Succesors ===
next: v795 
=== Usages ===
v793 v804 v805 i2600 v1683 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v786 #next: v795  <|@  <|@
f <@~|@floating>@ <|@
tid v791 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1446) [bci: 74]
at java.util.HashMap$KeyIterator.next(HashMap.java:1466) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2600 
y: i2676 
=== Succesors ===
=== Usages ===
v795 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2600 y: i2676  <|@  <|@
f <@*|@fixed>@ <|@
tid v795 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1446) [bci: 74]
at java.util.HashMap$KeyIterator.next(HashMap.java:1466) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: void
trueSuccessorProbability: 0.973666701969634
=== Inputs ===
condition: v791 
=== Succesors ===
trueSuccessor: v792 
falseSuccessor: v793 
=== Usages ===
=== Predecessor ===
v787 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v791 #trueSuccessor: v792 #falseSuccessor: v793  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B102" 
    successors "B104" "B107" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4588774090470730591
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v792 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1446) [bci: 77]
at java.util.HashMap$KeyIterator.next(HashMap.java:1466) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1685 
=== Usages ===
=== Predecessor ===
v795 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1685  <|@  <|@
f <@~|@floating>@ <|@
tid v1179 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1446) [bci: 90]
at java.util.HashMap$KeyIterator.next(HashMap.java:1466) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2600 
y: i2676 
=== Succesors ===
=== Usages ===
v1685 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i2600 y: i2676  <|@  <|@
f <@*|@fixed>@ <|@
tid v1685 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1446) [bci: 90]
at java.util.HashMap$KeyIterator.next(HashMap.java:1466) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1179 
=== Succesors ===
trueSuccessor: v1680 
falseSuccessor: v1683 
=== Usages ===
=== Predecessor ===
v792 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1179 #trueSuccessor: v1680 #falseSuccessor: v1683  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B105" "B106" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4588774090470730591
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1680 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1446) [bci: 90]
at java.util.HashMap$KeyIterator.next(HashMap.java:1466) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1177 
=== Usages ===
a2678 
=== Predecessor ===
v1685 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1177  <|@  <|@
f <@~|@floating>@ <|@
tid i797 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1446) [bci: 86]
at java.util.HashMap$KeyIterator.next(HashMap.java:1466) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: i32
=== Inputs ===
x: i2600 
y: i20 
=== Succesors ===
=== Usages ===
v1177 i2600 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i2600 y: i20  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1177 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: HashMap$HashIterator.index
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1446) [bci: 87]
at java.util.HashMap$KeyIterator.next(HashMap.java:1466) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2706 
value: i797 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a2678 
=== Usages ===
=== Predecessor ===
v1680 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2706 value: i797 stateAfter: - lastLocationAccess: - #next: a2678  <|@  <|@
f <@~|@floating>@ <|@
tid v2726 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a1168 
index: i2600 
=== Succesors ===
=== Usages ===
a2678 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1168 index: i2600  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2678 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1446) [bci: 90]
at java.util.HashMap$KeyIterator.next(HashMap.java:1466) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
nullCheck: false
stamp: n Ljava/util/HashMap$Node;
=== Inputs ===
stateBefore: - 
guard: v1680 
address: v2726 
=== Succesors ===
next: v1189 
=== Usages ===
v1189 v1345 
=== Predecessor ===
v1177 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1680 address: v2726 #next: v1189  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1189 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: HashMap$HashIterator.next
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1446) [bci: 92]
at java.util.HashMap$KeyIterator.next(HashMap.java:1466) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2700 
value: a2678 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j2514 
=== Usages ===
=== Predecessor ===
a2678 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2700 value: a2678 stateAfter: - lastLocationAccess: - #next: j2514  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2514 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 1]
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1446) [bci: 92]
at java.util.HashMap$KeyIterator.next(HashMap.java:1466) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a270 
=== Succesors ===
next: v2518 
=== Usages ===
j2515 
=== Predecessor ===
v1189 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a270 #next: v2518  <|@  <|@
f <@~|@floating>@ <|@
tid j2515 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1446) [bci: 92]
at java.util.HashMap$KeyIterator.next(HashMap.java:1466) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j2514 
y: i2505 
=== Succesors ===
=== Usages ===
v2783 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j2514 y: i2505  <|@  <|@
f <@~|@floating>@ <|@
tid v2783 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j2515 
index: j2509 
=== Succesors ===
=== Usages ===
v2518 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2515 index: j2509  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2518 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1446) [bci: 92]
at java.util.HashMap$KeyIterator.next(HashMap.java:1466) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2783 
value: i2511 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v808 
=== Usages ===
=== Predecessor ===
j2514 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2783 value: i2511 stateAfter: - lastLocationAccess: - #next: v808  <|@  <|@
f <@~|@floating>@ <|@
tid v1345 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1446) [bci: 95]
at java.util.HashMap$KeyIterator.next(HashMap.java:1466) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: void
=== Inputs ===
value: a2678 
=== Succesors ===
=== Usages ===
v808 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a2678  <|@  <|@
f <@*|@fixed>@ <|@
tid v808 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1446) [bci: 95]
at java.util.HashMap$KeyIterator.next(HashMap.java:1466) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: void
trueSuccessorProbability: 0.7114614377628611
=== Inputs ===
condition: v1345 
=== Succesors ===
trueSuccessor: v807 
falseSuccessor: v805 
=== Usages ===
=== Predecessor ===
v2518 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1345 #trueSuccessor: v807 #falseSuccessor: v805  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B102" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 2
    probability 4586288830091813018
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v807 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1446) [bci: 68]
at java.util.HashMap$KeyIterator.next(HashMap.java:1466) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1451 
=== Usages ===
=== Predecessor ===
v808 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1451  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1451 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?802 
=== Succesors ===
next: v804 
=== Usages ===
=== Predecessor ===
v807 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?802 #next: v804  <|@  <|@
f <@*|@fixed>@ <|@
tid v804 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 0
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1446) [bci: 68]
at java.util.HashMap$KeyIterator.next(HashMap.java:1466) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: void
=== Inputs ===
loopBegin: v787 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1451 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v787  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B111" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4580627742166259083
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v805 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1448) [bci: 98]
at java.util.HashMap$KeyIterator.next(HashMap.java:1466) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v787 
=== Succesors ===
next: v1446 
=== Usages ===
=== Predecessor ===
v808 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v787 #next: v1446  <|@  <|@
f <@*|@fixed>@ <|@
tid v1446 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v279 
=== Predecessor ===
v805 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B108" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1683 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1446) [bci: 90]
at java.util.HashMap$KeyIterator.next(HashMap.java:1466) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v787 
=== Succesors ===
next: v1684 
=== Usages ===
=== Predecessor ===
v1685 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v787 #next: v1684  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B107" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1684 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1446) [bci: 90]
at java.util.HashMap$KeyIterator.next(HashMap.java:1466) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v74 
=== Succesors ===
next: v1681 
=== Usages ===
=== Predecessor ===
v1683 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v74 #next: v1681  <|@  <|@
tid ?788 <|@
d <@d|@=== Debug Properties ===
bci: 68
code: ResolvedJavaMethodBytecode<HashMap$HashIterator.nextNode()>
duringCall: false
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: HashMap.java
sourceLine: 1446
stackSize: 0
=== Inputs ===
outerFrameState: ?812 
values: a270 a1168 a2669 
=== Succesors ===
=== Usages ===
v1681 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?812 values: a270 a1168 a2669  <|@  <|@
f <@*|@fixed>@ <|@
tid v1681 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 1180
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1446) [bci: 90]
at java.util.HashMap$KeyIterator.next(HashMap.java:1466) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
reason: BoundsCheckException
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?788 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1684 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?788  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B102" 
    successors "B111" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4565097227264203764
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v793 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1448) [bci: 98]
at java.util.HashMap$KeyIterator.next(HashMap.java:1466) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v787 
=== Succesors ===
next: v1447 
=== Usages ===
=== Predecessor ===
v795 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v787 #next: v1447  <|@  <|@
f <@*|@fixed>@ <|@
tid v1447 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v279 
=== Predecessor ===
v793 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B111" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4569059550507217536
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v780 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1448) [bci: 98]
at java.util.HashMap$KeyIterator.next(HashMap.java:1466) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: void
=== Inputs ===
=== Succesors ===
next: v281 
=== Usages ===
=== Predecessor ===
v781 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v281  <|@  <|@
f <@*|@fixed>@ <|@
tid v281 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v279 
=== Predecessor ===
v780 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B110" "B77" "B94" "B88" "B92" "B106" "B109" 
    successors "B112" "B113" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612410522371396702
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a282 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: a -
valueDescription: a -
=== Inputs ===
merge: v279 
values: a1192 a1065 a524 a1112 a1132 a1192 a1192 
=== Succesors ===
=== Usages ===
?280 v1201 v2784 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v279 values: a1192 a1065 a524 a1112 a1132 a1192 a1192  <|@  <|@
f <@~|@floating>@ <|@
tid a2095 <|@
d <@d|@=== Debug Properties ===
stamp: n -
valueDescription: n -
=== Inputs ===
merge: v279 
values: a2674 a2652 a2094 a2665 a2668 a2674 a2674 
=== Succesors ===
=== Usages ===
v1209 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v279 values: a2674 a2652 a2094 a2665 a2668 a2674 a2674  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v279 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v281 v287 v298 v878 v948 v1446 v1447 
=== Succesors ===
next: v1988 
=== Usages ===
a282 a2095 v2680 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v281 v287 v298 v878 v948 v1446 v1447 #next: v1988  <|@  <|@
f <@~|@floating>@ <|@
tid v1201 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
stamp: void
=== Inputs ===
value: a282 
=== Succesors ===
=== Usages ===
v1988 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a282  <|@  <|@
f <@*|@fixed>@ <|@
tid v1988 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:204) [bci: 15]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
stamp: void
trueSuccessorProbability: 0.09999999999999998
=== Inputs ===
condition: v1201 
=== Succesors ===
trueSuccessor: v1987 
falseSuccessor: v1986 
=== Usages ===
=== Predecessor ===
v279 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1201 #trueSuccessor: v1987 #falseSuccessor: v1986  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B122" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597532986004742293
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1987 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:205) [bci: 18]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2229 
=== Usages ===
=== Predecessor ===
v1988 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2229  <|@  <|@
f <@*|@fixed>@ <|@
tid v2229 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2227 
=== Predecessor ===
v1987 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B114" "B115" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4611887712014258773
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1986 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:212) [bci: 35]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2679 
=== Usages ===
=== Predecessor ===
v1988 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2679  <|@  <|@
f <@~|@floating>@ <|@
tid v2784 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a282 
index: - 
=== Succesors ===
=== Usages ===
v2679 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a282 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2679 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:213) [bci: 46]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v2784 
=== Succesors ===
next: v2680 
=== Usages ===
v2523 v2748 v2749 v2752 
=== Predecessor ===
v1986 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2784 #next: v2680  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2680 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ObjArrayKlass::_element_klass:final
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
nullCheck: false
stamp: Klass*!
=== Inputs ===
stateBefore: - 
guard: v279 
address: v2728 
=== Succesors ===
next: i2034 
=== Usages ===
v2038 v2027 v2747 v2000 v2007 
=== Predecessor ===
v2679 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v279 address: v2728 #next: i2034  <|@  <|@
f <@~|@floating>@ <|@
tid v2747 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: v2680 
index: - 
=== Succesors ===
=== Usages ===
i2034 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: v2680 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2034 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: Klass::_super_check_offset:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:74) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:216) [bci: 77]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2747 
=== Succesors ===
next: v2681 
=== Usages ===
v1997 j1998 
=== Predecessor ===
v2680 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2747 #next: v2681  <|@  <|@
f <@~|@floating>@ <|@
tid j1998 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:78) [bci: 36]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:216) [bci: 77]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i2034 
=== Succesors ===
=== Usages ===
v2748 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i2034  <|@  <|@
f <@~|@floating>@ <|@
tid v2748 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times8
stamp: void*
=== Inputs ===
base: j1998 
index: v2679 
=== Succesors ===
=== Usages ===
v2681 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1998 index: v2679  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2681 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: PrimarySupers:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:78) [bci: 36]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:216) [bci: 77]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
nullCheck: false
stamp: Klass*
=== Inputs ===
stateBefore: - 
guard: - 
address: v2748 
=== Succesors ===
next: v2003 
=== Usages ===
v2000 
=== Predecessor ===
i2034 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2748 #next: v2003  <|@  <|@
f <@~|@floating>@ <|@
tid v2000 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:78) [bci: 40]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:216) [bci: 77]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2680 
y: v2681 
=== Succesors ===
=== Usages ===
v2003 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2680 y: v2681  <|@  <|@
f <@*|@fixed>@ <|@
tid v2003 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:78) [bci: 43]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:216) [bci: 77]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v2000 
=== Succesors ===
trueSuccessor: v2001 
falseSuccessor: v2002 
=== Usages ===
=== Predecessor ===
v2681 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2000 #trueSuccessor: v2001 #falseSuccessor: v2002  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B113" 
    successors "B122" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4607384112386888277
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2001 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:79) [bci: 46]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:216) [bci: 77]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2045 
=== Usages ===
=== Predecessor ===
v2003 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2045  <|@  <|@
f <@*|@fixed>@ <|@
tid v2045 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2227 
=== Predecessor ===
v2001 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B113" 
    successors "B116" "B125" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4607384112386888277
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2002 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:88) [bci: 70]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:216) [bci: 77]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2006 
=== Usages ===
=== Predecessor ===
v2003 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2006  <|@  <|@
f <@~|@floating>@ <|@
tid v1997 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:75) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:216) [bci: 77]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2034 
y: i1996 
=== Succesors ===
=== Usages ===
v2006 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i2034 y: i1996  <|@  <|@
f <@*|@fixed>@ <|@
tid v2006 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:88) [bci: 72]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:216) [bci: 77]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1997 
=== Succesors ===
trueSuccessor: v2004 
falseSuccessor: v2005 
=== Usages ===
=== Predecessor ===
v2002 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1997 #trueSuccessor: v2004 #falseSuccessor: v2005  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B115" 
    successors "B117" "B118" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4607384112386888277
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2004 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:93) [bci: 84]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:216) [bci: 77]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2010 
=== Usages ===
=== Predecessor ===
v2006 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2010  <|@  <|@
f <@~|@floating>@ <|@
tid v2523 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:213) [bci: 46]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
op: Uncompress
stamp: Klass*!
=== Inputs ===
value: v2679 
=== Succesors ===
=== Usages ===
v2007 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: v2679  <|@  <|@
f <@~|@floating>@ <|@
tid v2007 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:98) [bci: 2]
at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:93) [bci: 87]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:216) [bci: 77]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2523 
y: v2680 
=== Succesors ===
=== Usages ===
v2010 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2523 y: v2680  <|@  <|@
f <@*|@fixed>@ <|@
tid v2010 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:98) [bci: 5]
at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:93) [bci: 87]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:216) [bci: 77]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v2007 
=== Succesors ===
trueSuccessor: v2008 
falseSuccessor: v2009 
=== Usages ===
=== Predecessor ===
v2004 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2007 #trueSuccessor: v2008 #falseSuccessor: v2009  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B116" 
    successors "B122" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4602880512759517781
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2008 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:99) [bci: 8]
at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:93) [bci: 87]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:216) [bci: 77]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2046 
=== Usages ===
=== Predecessor ===
v2010 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2046  <|@  <|@
f <@*|@fixed>@ <|@
tid v2046 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2227 
=== Predecessor ===
v2008 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B116" 
    successors "B119" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4602880512759517781
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2009 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:104) [bci: 17]
at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:93) [bci: 87]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:216) [bci: 77]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
stamp: void
=== Inputs ===
=== Succesors ===
next: j2035 
=== Usages ===
=== Predecessor ===
v2010 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j2035  <|@  <|@
f <@~|@floating>@ <|@
tid v2749 <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: v2679 
=== Succesors ===
=== Usages ===
j2035 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: v2679  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2035 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: SecondarySupers:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:104) [bci: 27]
at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:93) [bci: 87]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:216) [bci: 77]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v2749 
=== Succesors ===
next: i2036 
=== Usages ===
v2750 v2751 
=== Predecessor ===
v2009 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2749 #next: i2036  <|@  <|@
f <@~|@floating>@ <|@
tid v2750 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j2035 
index: - 
=== Succesors ===
=== Usages ===
i2036 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2035 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2036 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: MetaspaceArrayLength:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:105) [bci: 41]
at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:93) [bci: 87]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:216) [bci: 77]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2750 
=== Succesors ===
next: v2013 
=== Usages ===
v2016 
=== Predecessor ===
j2035 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2750 #next: v2013  <|@  <|@
f <@~|@floating>@ <|@
tid i2021 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.loadSecondarySupersElement(TypeCheckSnippetUtils.java:188) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:107) [bci: 63]
at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:93) [bci: 87]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:216) [bci: 77]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
rawvalue: 3
stableDimension: 0
stamp: i32 [3] ⇊0000000000000003 ⇈0000000000000003
stampKind: i32
value: int[3|0x3]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2022 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i2020 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.metaspaceArrayBaseOffset(GraalHotSpotVMConfig) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.loadSecondarySupersElement(TypeCheckSnippetUtils.java:188) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:107) [bci: 63]
at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:93) [bci: 87]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:216) [bci: 77]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
rawvalue: 8
stableDimension: 0
stamp: i32 [8] ⇊0000000000000008 ⇈0000000000000008
stampKind: i32
value: int[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2023 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2013 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:106) [bci: 49]
at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:93) [bci: 87]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:216) [bci: 77]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2014 
=== Predecessor ===
i2036 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B118" "B123" 
    successors "B120" "B124" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 2
    probability 4604897066994192652
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i2015 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:93) [bci: 87]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:216) [bci: 77]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v2014 
values: i21 i2031 
=== Succesors ===
=== Usages ===
v2016 i2022 i2031 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2014 values: i21 i2031  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2014 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 1.4285714285714286
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:106) [bci: 49]
at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:93) [bci: 87]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:216) [bci: 77]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v2013 
=== Succesors ===
next: v2019 
=== Usages ===
i2015 v2018 v2029 v2032 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v2013 #next: v2019  <|@  <|@
f <@~|@floating>@ <|@
tid v2016 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:106) [bci: 53]
at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:93) [bci: 87]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:216) [bci: 77]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2015 
y: i2036 
=== Succesors ===
=== Usages ===
v2019 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2015 y: i2036  <|@  <|@
f <@*|@fixed>@ <|@
tid v2019 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:106) [bci: 53]
at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:93) [bci: 87]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:216) [bci: 77]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v2016 
=== Succesors ===
trueSuccessor: v2017 
falseSuccessor: v2018 
=== Usages ===
=== Predecessor ===
v2014 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2016 #trueSuccessor: v2017 #falseSuccessor: v2018  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B119" 
    successors "B121" "B123" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4604897066994192652
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2017 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:107) [bci: 56]
at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:93) [bci: 87]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:216) [bci: 77]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
stamp: void
=== Inputs ===
=== Succesors ===
next: j2037 
=== Usages ===
=== Predecessor ===
v2019 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j2037  <|@  <|@
f <@~|@floating>@ <|@
tid i2022 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.loadSecondarySupersElement(TypeCheckSnippetUtils.java:188) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:107) [bci: 63]
at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:93) [bci: 87]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:216) [bci: 77]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i2015 
y: i2021 
=== Succesors ===
=== Usages ===
i2023 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i2015 y: i2021  <|@  <|@
f <@~|@floating>@ <|@
tid i2023 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.loadSecondarySupersElement(TypeCheckSnippetUtils.java:188) [bci: 12]
at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:107) [bci: 63]
at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:93) [bci: 87]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:216) [bci: 77]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i2022 
y: i2020 
=== Succesors ===
=== Usages ===
j2024 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i2022 y: i2020  <|@  <|@
f <@~|@floating>@ <|@
tid j2024 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.loadSecondarySupersElement(TypeCheckSnippetUtils.java:188) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:107) [bci: 63]
at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:93) [bci: 87]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:216) [bci: 77]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
resultBits: 64
stamp: i64 [-2147483648 - 2147483640] ⇈fffffffffffffff8
=== Inputs ===
value: i2023 
=== Succesors ===
=== Usages ===
v2751 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i2023  <|@  <|@
f <@~|@floating>@ <|@
tid v2751 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j2035 
index: j2024 
=== Succesors ===
=== Usages ===
j2037 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2035 index: j2024  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2037 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: SecondarySupersElement:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.loadSecondarySupersElement(TypeCheckSnippetUtils.java:188) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:107) [bci: 63]
at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:93) [bci: 87]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:216) [bci: 77]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v2751 
=== Succesors ===
next: v2030 
=== Usages ===
v2026 
=== Predecessor ===
v2017 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2751 #next: v2030  <|@  <|@
f <@~|@floating>@ <|@
tid v2026 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.loadSecondarySupersElement(TypeCheckSnippetUtils.java:188) [bci: 22]
at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:107) [bci: 63]
at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:93) [bci: 87]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:216) [bci: 77]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
stamp: Klass*
=== Inputs ===
input: j2037 
=== Succesors ===
=== Usages ===
v2027 
=== Predecessor ===
- >@ <|@
instruction <@PointerCast|@org.graalvm.compiler.hotspot.word.PointerCastNode>@ input: j2037  <|@  <|@
f <@~|@floating>@ <|@
tid v2027 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:107) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:93) [bci: 87]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:216) [bci: 77]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2026 
y: v2680 
=== Succesors ===
=== Usages ===
v2030 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2026 y: v2680  <|@  <|@
f <@*|@fixed>@ <|@
tid v2030 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:107) [bci: 72]
at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:93) [bci: 87]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:216) [bci: 77]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
stamp: void
trueSuccessorProbability: 0.4
=== Inputs ===
condition: v2027 
=== Succesors ===
trueSuccessor: v2029 
falseSuccessor: v2028 
=== Usages ===
=== Predecessor ===
j2037 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2027 #trueSuccessor: v2029 #falseSuccessor: v2028  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B120" 
    successors "B122" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4599049097877038909
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2029 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:108) [bci: 75]
at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:93) [bci: 87]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:216) [bci: 77]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v2014 
=== Succesors ===
next: v2038 
=== Usages ===
=== Predecessor ===
v2030 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v2014 #next: v2038  <|@  <|@
f <@~|@floating>@ <|@
tid v2752 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: v2679 
=== Succesors ===
=== Usages ===
v2038 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: v2679  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2038 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: SecondarySuperCache
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:108) [bci: 86]
at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:93) [bci: 87]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:216) [bci: 77]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2752 
value: v2680 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2047 
=== Usages ===
=== Predecessor ===
v2029 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2752 value: v2680 stateAfter: - lastLocationAccess: - #next: v2047  <|@  <|@
f <@*|@fixed>@ <|@
tid v2047 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2227 
=== Predecessor ===
v2038 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B112" "B114" "B117" "B121" 
    successors "B69" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4611906383812727985
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2227 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2229 v2045 v2046 v2047 
=== Succesors ===
next: v1209 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2229 v2045 v2046 v2047 #next: v1209  <|@  <|@
f <@~|@floating>@ <|@
tid v1465 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
kf: v2601 v79 
=== Succesors ===
=== Usages ===
v1209 
=== Predecessor ===
- >@ <|@
instruction <@c|@com.oracle.graal.enterprise.k.c>@ kf: v2601 v79  <|@  <|@
f <@~|@floating>@ <|@
tid v2729 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a843 
index: i75 
=== Succesors ===
=== Usages ===
v1209 j2524 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a843 index: i75  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1209 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
location: Array: Object
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1465 
address: v2729 
value: a2095 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j2524 
=== Usages ===
=== Predecessor ===
v2227 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1465 address: v2729 value: a2095 stateAfter: - lastLocationAccess: - #next: j2524  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2524 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v2729 
=== Succesors ===
next: v2528 
=== Usages ===
j2525 
=== Predecessor ===
v1209 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: v2729 #next: v2528  <|@  <|@
f <@~|@floating>@ <|@
tid j2525 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j2524 
y: i2505 
=== Succesors ===
=== Usages ===
v2785 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j2524 y: i2505  <|@  <|@
f <@~|@floating>@ <|@
tid v2785 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j2525 
index: j2509 
=== Succesors ===
=== Usages ===
v2528 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2525 index: j2509  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2528 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2785 
value: i2511 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1450 
=== Usages ===
=== Predecessor ===
j2524 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2785 value: i2511 stateAfter: - lastLocationAccess: - #next: v1450  <|@  <|@
tid ?93 <|@
d <@d|@=== Debug Properties ===
bci: 120
code: ResolvedJavaMethodBytecode<AbstractCollection.toArray(Object[])>
duringCall: false
localsSize: 6
locksSize: 0
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
rethrowException: false
sourceFile: AbstractCollection.java
sourceLine: 182
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - a2 - a843 a270 i75 
=== Succesors ===
=== Usages ===
v1450 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - a2 - a843 a270 i75  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1450 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?93 
=== Succesors ===
next: v95 
=== Usages ===
=== Predecessor ===
v2528 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?93 #next: v95  <|@  <|@
f <@~|@floating>@ <|@
tid i94 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 120]
stamp: i32
=== Inputs ===
x: i75 
y: i20 
=== Succesors ===
=== Usages ===
i75 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i75 y: i20  <|@  <|@
f <@*|@fixed>@ <|@
tid v95 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 0
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42]
stamp: void
=== Inputs ===
loopBegin: v74 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1450 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v74  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B123"
    from_bci -1
    to_bci -1
    predecessors "B120" 
    successors "B119" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 2
    probability 4601737836856605403
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2028 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:106) [bci: 98]
at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:93) [bci: 87]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:216) [bci: 77]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2032 
=== Usages ===
=== Predecessor ===
v2030 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2032  <|@  <|@
f <@~|@floating>@ <|@
tid i2031 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:106) [bci: 98]
at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:93) [bci: 87]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:216) [bci: 77]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
stamp: i32
=== Inputs ===
x: i2015 
y: i20 
=== Succesors ===
=== Usages ===
i2015 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i2015 y: i20  <|@  <|@
f <@*|@fixed>@ <|@
tid v2032 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:106) [bci: 49]
at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:93) [bci: 87]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:216) [bci: 77]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
stamp: void
=== Inputs ===
loopBegin: v2014 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v2028 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v2014  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B124"
    from_bci -1
    to_bci -1
    predecessors "B119" 
    successors "B126" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2018 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:113) [bci: 104]
at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:93) [bci: 87]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:216) [bci: 77]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v2014 
=== Succesors ===
next: v2243 
=== Usages ===
=== Predecessor ===
v2019 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v2014 #next: v2243  <|@  <|@
f <@*|@fixed>@ <|@
tid v2243 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2230 
=== Predecessor ===
v2018 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B125"
    from_bci -1
    to_bci -1
    predecessors "B115" 
    successors "B126" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2005 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:89) [bci: 75]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:216) [bci: 77]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2238 
=== Usages ===
=== Predecessor ===
v2006 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2238  <|@  <|@
f <@*|@fixed>@ <|@
tid v2238 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2230 
=== Predecessor ===
v2005 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B126"
    from_bci -1
    to_bci -1
    predecessors "B125" "B124" 
    successors "B127" 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2230 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2238 v2243 
=== Succesors ===
next: v1689 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2238 v2243 #next: v1689  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B127"
    from_bci -1
    to_bci -1
    predecessors "B126" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1689 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v74 
=== Succesors ===
next: v1687 
=== Usages ===
=== Predecessor ===
v2230 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v74 #next: v1687  <|@  <|@
tid ?280 <|@
d <@d|@=== Debug Properties ===
bci: 119
code: ResolvedJavaMethodBytecode<AbstractCollection.toArray(Object[])>
duringCall: false
localsSize: 6
locksSize: 0
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
rethrowException: false
sourceFile: AbstractCollection.java
sourceLine: 196
stackSize: 3
=== Inputs ===
outerFrameState: - 
values: - a2 - a843 a270 i75 a843 i75 a282 
=== Succesors ===
=== Usages ===
v1687 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - a2 - a843 a270 i75 a843 i75 a282  <|@  <|@
f <@*|@fixed>@ <|@
tid v1687 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 1210
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
reason: ArrayStoreException
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?280 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1689 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?280  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B128"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B145" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1673 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1441) [bci: 16]
at java.util.HashMap$KeyIterator.next(HashMap.java:1466) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v74 
=== Succesors ===
next: v2175 
=== Usages ===
=== Predecessor ===
v1674 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v74 #next: v2175  <|@  <|@
f <@~|@floating>@ <|@
tid i2176 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -295187
stableDimension: 0
stamp: i32 [-295187] ⇊00000000fffb7eed ⇈00000000fffb7eed
stampKind: i32
value: int[-295187|0xfffffffffffb7eed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2130 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2175 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2127 
=== Predecessor ===
v1673 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B129"
    from_bci -1
    to_bci -1
    predecessors "B98" 
    successors "B145" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1658 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/HashMap$KeyIterator; target_method=hasNext target_method_class=Ljava/util/HashMap$HashIterator; position=at java.util.AbstractCollection.toArray(AbstractCollection.java:183) [bci: 51]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v74 
=== Succesors ===
next: v2169 
=== Usages ===
=== Predecessor ===
v1659 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v74 #next: v2169  <|@  <|@
f <@~|@floating>@ <|@
tid i2170 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -291379
stableDimension: 0
stamp: i32 [-291379] ⇊00000000fffb8dcd ⇈00000000fffb8dcd
stampKind: i32
value: int[-291379|0xfffffffffffb8dcd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2130 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2169 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2127 
=== Predecessor ===
v1658 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B130"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B131" "B134" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v81 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 126]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v74 
=== Succesors ===
next: v150 
=== Usages ===
=== Predecessor ===
v83 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v74 #next: v150  <|@  <|@
f <@*|@fixed>@ <|@
tid v150 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/ArrayList$SubList$1; target_method=hasNext target_method_class=Ljava/util/ArrayList$SubList$1; position=at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 128]
stamp: void
trueSuccessorProbability: 0.9361509309606195
=== Inputs ===
condition: v2586 
=== Succesors ===
trueSuccessor: v143 
falseSuccessor: v149 
=== Usages ===
=== Predecessor ===
v81 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2586 #trueSuccessor: v143 #falseSuccessor: v149  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B131"
    from_bci -1
    to_bci -1
    predecessors "B130" 
    successors "B132" "B133" 
    xhandlers
    flags 
    probability 4606607317512949994
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v143 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/ArrayList$SubList$1; target_method=hasNext target_method_class=Ljava/util/ArrayList$SubList$1; position=at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 128]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2682 
=== Usages ===
=== Predecessor ===
v150 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2682  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2682 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList$SubList$1.this$1
nodeSourcePosition: at java.util.ArrayList$SubList$1.hasNext(ArrayList.java:1109) [bci: 5]
at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 128]
nullCheck: false
stamp: n# Ljava/util/ArrayList$SubList;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2698 
=== Succesors ===
next: i2683 
=== Usages ===
v2730 
=== Predecessor ===
v143 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2698 #next: i2683  <|@  <|@
f <@~|@floating>@ <|@
tid v2730 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2682 
=== Succesors ===
=== Usages ===
i2683 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2682  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2683 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList$SubList.size
nodeSourcePosition: at java.util.ArrayList$SubList$1.hasNext(ArrayList.java:1109) [bci: 8]
at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 128]
nullCheck: true
stamp: i32
=== Inputs ===
stateBefore: ?76 
guard: - 
address: v2730 
=== Succesors ===
next: i2684 
=== Usages ===
v226 
=== Predecessor ===
a2682 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?76 guard: - address: v2730 #next: i2684  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2684 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList$SubList$1.cursor
nodeSourcePosition: at java.util.ArrayList$SubList$1.hasNext(ArrayList.java:1109) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 128]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2697 
=== Succesors ===
next: v1698 
=== Usages ===
v226 
=== Predecessor ===
i2683 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2697 #next: v1698  <|@  <|@
f <@~|@floating>@ <|@
tid v226 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.ArrayList$SubList$1.hasNext(ArrayList.java:1109) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 128]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2683 
y: i2684 
=== Succesors ===
=== Usages ===
v1698 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i2683 y: i2684  <|@  <|@
f <@*|@fixed>@ <|@
tid v1698 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 133]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v226 
=== Succesors ===
trueSuccessor: v1695 
falseSuccessor: v1697 
=== Usages ===
=== Predecessor ===
i2684 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v226 #trueSuccessor: v1695 #falseSuccessor: v1697  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B132"
    from_bci -1
    to_bci -1
    predecessors "B131" 
    successors 
    xhandlers
    flags 
    probability 4606607317512949994
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1695 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 133]
stamp: void
=== Inputs ===
=== Succesors ===
next: v867 
=== Usages ===
=== Predecessor ===
v1698 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v867  <|@  <|@
f <@*|@fixed>@ <|@
tid v867 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 146]
stamp: void
=== Inputs ===
result: a843 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1695 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a843 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B133"
    from_bci -1
    to_bci -1
    predecessors "B131" 
    successors "B145" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1697 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 133]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2181 
=== Usages ===
=== Predecessor ===
v1698 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2181  <|@  <|@
f <@~|@floating>@ <|@
tid i2182 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -312851
stableDimension: 0
stamp: i32 [-312851] ⇊00000000fffb39ed ⇈00000000fffb39ed
stampKind: i32
value: int[-312851|0xfffffffffffb39ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2130 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2181 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2127 
=== Predecessor ===
v1697 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B134"
    from_bci -1
    to_bci -1
    predecessors "B130" 
    successors "B135" "B140" 
    xhandlers
    flags 
    probability 4589265230959704240
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v149 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 128]
stamp: void
=== Inputs ===
=== Succesors ===
next: v159 
=== Usages ===
=== Predecessor ===
v150 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v159  <|@  <|@
f <@~|@floating>@ <|@
tid v2610 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 128]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2641 
y: v2566 
=== Succesors ===
=== Usages ===
v159 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2641 y: v2566  <|@  <|@
f <@*|@fixed>@ <|@
tid v159 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/SubList$1; target_method=hasNext target_method_class=Ljava/util/SubList$1; position=at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 128]
stamp: void
trueSuccessorProbability: 0.8662365591397847
=== Inputs ===
condition: v2610 
=== Succesors ===
trueSuccessor: v155 
falseSuccessor: v158 
=== Usages ===
=== Predecessor ===
v149 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2610 #trueSuccessor: v155 #falseSuccessor: v158  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B135"
    from_bci -1
    to_bci -1
    predecessors "B134" 
    successors "B136" "B139" 
    xhandlers
    flags 
    probability 4588131601196852644
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v155 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/SubList$1; target_method=hasNext target_method_class=Ljava/util/SubList$1; position=at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 128]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2685 
=== Usages ===
=== Predecessor ===
v159 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2685  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2685 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: SubList$1.i
nodeSourcePosition: at java.util.SubList$1.nextIndex(AbstractList.java:724) [bci: 1]
at java.util.SubList$1.hasNext(AbstractList.java:702) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 128]
nullCheck: false
stamp: n -
=== Inputs ===
stateBefore: - 
guard: - 
address: v2706 
=== Succesors ===
next: v2686 
=== Usages ===
v2786 v2731 
=== Predecessor ===
v155 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2706 #next: v2686  <|@  <|@
f <@~|@floating>@ <|@
tid v2786 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2685 
=== Succesors ===
=== Usages ===
v2686 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2685  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2686 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.SubList$1.nextIndex(AbstractList.java:724) [bci: 4]
at java.util.SubList$1.hasNext(AbstractList.java:702) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 128]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?76 
guard: - 
address: v2786 
=== Succesors ===
next: v1706 
=== Usages ===
v2590 
=== Predecessor ===
a2685 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?76 guard: - address: v2786 #next: v1706  <|@  <|@
f <@~|@floating>@ <|@
tid v2590 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.SubList$1.nextIndex(AbstractList.java:724) [bci: 4]
at java.util.SubList$1.hasNext(AbstractList.java:702) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 128]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2686 
y: v2572 
=== Succesors ===
=== Usages ===
v1706 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2686 y: v2572  <|@  <|@
f <@*|@fixed>@ <|@
tid v1706 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/AbstractList$ListItr; target_method=nextIndex target_method_class=Ljava/util/AbstractList$ListItr; position=at java.util.SubList$1.nextIndex(AbstractList.java:724) [bci: 4]
at java.util.SubList$1.hasNext(AbstractList.java:702) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 128]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v2590 
=== Succesors ===
trueSuccessor: v1703 
falseSuccessor: v1705 
=== Usages ===
=== Predecessor ===
v2686 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2590 #trueSuccessor: v1703 #falseSuccessor: v1705  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B136"
    from_bci -1
    to_bci -1
    predecessors "B135" 
    successors "B137" "B138" 
    xhandlers
    flags 
    probability 4588131601196852644
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1703 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/AbstractList$ListItr; target_method=nextIndex target_method_class=Ljava/util/AbstractList$ListItr; position=at java.util.SubList$1.nextIndex(AbstractList.java:724) [bci: 4]
at java.util.SubList$1.hasNext(AbstractList.java:702) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 128]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2687 
=== Usages ===
=== Predecessor ===
v1706 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2687  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2687 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: SubList$1.this$0
nodeSourcePosition: at java.util.SubList$1.nextIndex(AbstractList.java:724) [bci: 10]
at java.util.SubList$1.hasNext(AbstractList.java:702) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 128]
nullCheck: false
stamp: n Ljava/util/SubList;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2700 
=== Succesors ===
next: i2688 
=== Usages ===
v2733 v2732 
=== Predecessor ===
v1703 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2700 #next: i2688  <|@  <|@
f <@~|@floating>@ <|@
tid v2733 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2687 
=== Succesors ===
=== Usages ===
i2688 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2687  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2688 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: SubList.size
nodeSourcePosition: at java.util.SubList.access$200(AbstractList.java:613) [bci: 1]
at java.util.SubList$1.hasNext(AbstractList.java:702) [bci: 8]
at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 128]
nullCheck: true
stamp: i32
=== Inputs ===
stateBefore: ?76 
guard: - 
address: v2733 
=== Succesors ===
next: i2689 
=== Usages ===
v234 
=== Predecessor ===
a2687 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?76 guard: - address: v2733 #next: i2689  <|@  <|@
f <@~|@floating>@ <|@
tid v2732 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2687 
=== Succesors ===
=== Usages ===
i2689 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2687  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2689 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: SubList.offset
nodeSourcePosition: at java.util.SubList.access$000(AbstractList.java:613) [bci: 1]
at java.util.SubList$1.nextIndex(AbstractList.java:724) [bci: 13]
at java.util.SubList$1.hasNext(AbstractList.java:702) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 128]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2732 
=== Succesors ===
next: i2690 
=== Usages ===
i315 
=== Predecessor ===
i2688 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2732 #next: i2690  <|@  <|@
f <@~|@floating>@ <|@
tid v2731 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2685 
=== Succesors ===
=== Usages ===
i2690 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2685  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2690 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractList$Itr.cursor
nodeSourcePosition: at java.util.AbstractList$ListItr.nextIndex(AbstractList.java:413) [bci: 1]
at java.util.SubList$1.nextIndex(AbstractList.java:724) [bci: 4]
at java.util.SubList$1.hasNext(AbstractList.java:702) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 128]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2731 
=== Succesors ===
next: v1714 
=== Usages ===
i315 
=== Predecessor ===
i2689 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2731 #next: v1714  <|@  <|@
f <@~|@floating>@ <|@
tid i315 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at java.util.SubList$1.nextIndex(AbstractList.java:724) [bci: 16]
at java.util.SubList$1.hasNext(AbstractList.java:702) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 128]
stamp: i32
=== Inputs ===
x: i2690 
y: i2689 
=== Succesors ===
=== Usages ===
v234 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i2690 y: i2689  <|@  <|@
f <@~|@floating>@ <|@
tid v234 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.SubList$1.hasNext(AbstractList.java:702) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 128]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i315 
y: i2688 
=== Succesors ===
=== Usages ===
v1714 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i315 y: i2688  <|@  <|@
f <@*|@fixed>@ <|@
tid v1714 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 133]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v234 
=== Succesors ===
trueSuccessor: v1713 
falseSuccessor: v1711 
=== Usages ===
=== Predecessor ===
i2690 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v234 #trueSuccessor: v1713 #falseSuccessor: v1711  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B137"
    from_bci -1
    to_bci -1
    predecessors "B136" 
    successors "B145" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1713 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 133]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2189 
=== Usages ===
=== Predecessor ===
v1714 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2189  <|@  <|@
f <@~|@floating>@ <|@
tid i2190 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -317459
stableDimension: 0
stamp: i32 [-317459] ⇊00000000fffb27ed ⇈00000000fffb27ed
stampKind: i32
value: int[-317459|0xfffffffffffb27ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2130 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2189 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2127 
=== Predecessor ===
v1713 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B138"
    from_bci -1
    to_bci -1
    predecessors "B136" 
    successors 
    xhandlers
    flags 
    probability 4588131601196852644
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1711 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 133]
stamp: void
=== Inputs ===
=== Succesors ===
next: v952 
=== Usages ===
=== Predecessor ===
v1714 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v952  <|@  <|@
f <@*|@fixed>@ <|@
tid v952 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 146]
stamp: void
=== Inputs ===
result: a843 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1711 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a843 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B139"
    from_bci -1
    to_bci -1
    predecessors "B135" 
    successors "B145" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1705 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/AbstractList$ListItr; target_method=nextIndex target_method_class=Ljava/util/AbstractList$ListItr; position=at java.util.SubList$1.nextIndex(AbstractList.java:724) [bci: 4]
at java.util.SubList$1.hasNext(AbstractList.java:702) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 128]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2187 
=== Usages ===
=== Predecessor ===
v1706 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2187  <|@  <|@
f <@~|@floating>@ <|@
tid i2188 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -314163
stableDimension: 0
stamp: i32 [-314163] ⇊00000000fffb34cd ⇈00000000fffb34cd
stampKind: i32
value: int[-314163|0xfffffffffffb34cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2130 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2187 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2127 
=== Predecessor ===
v1705 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B140"
    from_bci -1
    to_bci -1
    predecessors "B134" 
    successors "B141" "B144" 
    xhandlers
    flags 
    probability 4576076983509135087
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v158 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 128]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1718 
=== Usages ===
=== Predecessor ===
v159 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1718  <|@  <|@
f <@~|@floating>@ <|@
tid v2609 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 128]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2641 
y: v2583 
=== Succesors ===
=== Usages ===
v1718 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2641 y: v2583  <|@  <|@
f <@*|@fixed>@ <|@
tid v1718 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/HashMap$KeyIterator; target_method=hasNext target_method_class=Ljava/util/HashMap$HashIterator; position=at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 128]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v2609 
=== Succesors ===
trueSuccessor: v1715 
falseSuccessor: v1717 
=== Usages ===
=== Predecessor ===
v158 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2609 #trueSuccessor: v1715 #falseSuccessor: v1717  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B141"
    from_bci -1
    to_bci -1
    predecessors "B140" 
    successors "B142" "B143" 
    xhandlers
    flags 
    probability 4576076983509135087
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1715 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/HashMap$KeyIterator; target_method=hasNext target_method_class=Ljava/util/HashMap$HashIterator; position=at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 128]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2691 
=== Usages ===
=== Predecessor ===
v1718 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2691  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2691 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashMap$HashIterator.next
nodeSourcePosition: at java.util.HashMap$HashIterator.hasNext(HashMap.java:1435) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 128]
nullCheck: false
stamp: n Ljava/util/HashMap$Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2700 
=== Succesors ===
next: v1722 
=== Usages ===
v1348 
=== Predecessor ===
v1715 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2700 #next: v1722  <|@  <|@
f <@~|@floating>@ <|@
tid v1348 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.hasNext(HashMap.java:1435) [bci: 4]
at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 128]
stamp: void
=== Inputs ===
value: a2691 
=== Succesors ===
=== Usages ===
v1722 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a2691  <|@  <|@
f <@*|@fixed>@ <|@
tid v1722 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 133]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1348 
=== Succesors ===
trueSuccessor: v1719 
falseSuccessor: v1721 
=== Usages ===
=== Predecessor ===
a2691 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1348 #trueSuccessor: v1719 #falseSuccessor: v1721  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B142"
    from_bci -1
    to_bci -1
    predecessors "B141" 
    successors 
    xhandlers
    flags 
    probability 4576076983509135087
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1719 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 133]
stamp: void
=== Inputs ===
=== Succesors ===
next: v102 
=== Usages ===
=== Predecessor ===
v1722 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v102  <|@  <|@
f <@*|@fixed>@ <|@
tid v102 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 146]
stamp: void
=== Inputs ===
result: a843 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1719 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a843 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B143"
    from_bci -1
    to_bci -1
    predecessors "B141" 
    successors "B145" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1721 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 133]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2185 
=== Usages ===
=== Predecessor ===
v1722 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2185  <|@  <|@
f <@~|@floating>@ <|@
tid i2186 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -318739
stableDimension: 0
stamp: i32 [-318739] ⇊00000000fffb22ed ⇈00000000fffb22ed
stampKind: i32
value: int[-318739|0xfffffffffffb22ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2130 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2185 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2127 
=== Predecessor ===
v1721 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B144"
    from_bci -1
    to_bci -1
    predecessors "B140" 
    successors "B145" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1717 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/HashMap$KeyIterator; target_method=hasNext target_method_class=Ljava/util/HashMap$HashIterator; position=at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 128]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2183 
=== Usages ===
=== Predecessor ===
v1718 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2183  <|@  <|@
f <@~|@floating>@ <|@
tid i2184 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -317747
stableDimension: 0
stamp: i32 [-317747] ⇊00000000fffb26cd ⇈00000000fffb26cd
stampKind: i32
value: int[-317747|0xfffffffffffb26cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2130 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2183 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2127 
=== Predecessor ===
v1717 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B145"
    from_bci -1
    to_bci -1
    predecessors "B72" "B81" "B80" "B79" "B78" "B97" "B96" "B95" "B89" "B93" "B129" "B128" "B133" "B144" "B143" "B139" "B137" 
    successors 
    xhandlers
    flags 
    probability 2373678478600962048
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i2130 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-318739 - -261131] ⇊00000000fff800c5 ⇈00000000fffffffd
valueDescription: i32
=== Inputs ===
merge: v2127 
values: i2136 i2140 i2142 i2146 i2148 i2152 i2156 i2160 i2164 i2168 i2170 i2176 i2182 i2184 i2186 i2188 i2190 
=== Succesors ===
=== Usages ===
v2132 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2127 values: i2136 i2140 i2142 i2146 i2148 i2152 i2156 i2160 i2164 i2168 i2170 i2176 i2182 i2184 i2186 i2188 i2190  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2127 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2135 v2139 v2141 v2145 v2147 v2151 v2155 v2159 v2163 v2167 v2169 v2175 v2181 v2183 v2185 v2187 v2189 
=== Succesors ===
next: v2132 
=== Usages ===
i2130 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2135 v2139 v2141 v2145 v2147 v2151 v2155 v2159 v2163 v2167 v2169 v2175 v2181 v2183 v2185 v2187 v2189 #next: v2132  <|@  <|@
f <@*|@fixed>@ <|@
tid v2132 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?76 
actionAndReason: i2130 
speculation: a2101 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v2127 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?76 actionAndReason: i2130 speculation: a2101  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B146"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1559 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2196 
=== Usages ===
=== Predecessor ===
v2606 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2196  <|@  <|@
f <@~|@floating>@ <|@
tid a2199 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: d.a@1368693834
stableDimension: 0
stamp: a!# Lcom/oracle/graal/enterprise/k/d$a;
stampKind: a -
value: Object[d.a@1368693834]
=== Inputs ===
=== Succesors ===
=== Usages ===
v2196 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i2198 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -305947
stableDimension: 0
stamp: i32 [-305947] ⇊00000000fffb54e5 ⇈00000000fffb54e5
stampKind: i32
value: int[-305947|0xfffffffffffb54e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
v2196 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2196 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?268 
actionAndReason: i2198 
speculation: a2199 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1559 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?268 actionAndReason: i2198 speculation: a2199  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B147"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B148" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1495 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/HashSet; target_method=size target_method_class=Ljava/util/HashSet; position=at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2113 
=== Usages ===
=== Predecessor ===
v1496 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2113  <|@  <|@
f <@~|@floating>@ <|@
tid i2114 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -341043
stableDimension: 0
stamp: i32 [-341043] ⇊00000000fffacbcd ⇈00000000fffacbcd
stampKind: i32
value: int[-341043|0xfffffffffffacbcd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2102 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2113 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2098 
=== Predecessor ===
v1495 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B148"
    from_bci -1
    to_bci -1
    predecessors "B3" "B147" "B7" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i2102 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-342027 - -256523] ⇊00000000fff800c5 ⇈00000000fffefffd
valueDescription: i32
=== Inputs ===
merge: v2098 
values: i2112 i2114 i2116 
=== Succesors ===
=== Usages ===
v2104 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2098 values: i2112 i2114 i2116  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2098 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2111 v2113 v2115 
=== Succesors ===
next: v2104 
=== Usages ===
i2102 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2111 v2113 v2115 #next: v2104  <|@  <|@
f <@*|@fixed>@ <|@
tid v2104 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?3 
actionAndReason: i2102 
speculation: a2101 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v2098 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?3 actionAndReason: i2102 speculation: a2101  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v2804 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: v2804  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a! Ljava/util/AbstractCollection;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v2736 v2737 v1305 ?68 ?739 ?838 ?105 ?593 v2753 v2738 a1869 ?594 v2734 v2740 a1801 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
result v1|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a [Ljava/lang/Object;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 ?105 ?838 v2804 a1445 ?93 ?764 ?280 ?604 ?369 ?68 ?2092 ?76 ?268 v2754 v2695 a1444 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?3 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<AbstractCollection.toArray(Object[])>
duringCall: false
localsSize: 6
locksSize: 0
rethrowException: false
sourceFile: AbstractCollection.java
sourceLine: 176
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 - - - - 
=== Succesors ===
=== Usages ===
v2104 v2804 i2614 i2618 i2622 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2804 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?3 
object: a2 
=== Succesors ===
next: v2612 
=== Usages ===
=== Predecessor ===
v0 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?3 object: a2 #next: v2612  <|@  <|@
f <@~|@floating>@ <|@
tid v2753 <|@
result [v0|QWORD[.] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v2612 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2612 <|@
result v2|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 1]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v2753 
=== Succesors ===
next: v115 
=== Usages ===
v2539 v2535 v2537 v2611 
=== Predecessor ===
v2804 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2753 #next: v115  <|@  <|@
f <@~|@floating>@ <|@
tid v2536 <|@
result meta{HotSpotType<Ljava/util/ArrayList$SubList;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 1]
rawvalue: meta{HotSpotType<Ljava/util/ArrayList$SubList;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/ArrayList$SubList;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v2537 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v2537 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 1]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2612 
y: v2536 
=== Succesors ===
=== Usages ===
v863 v115 v277 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2612 y: v2536  <|@  <|@
f <@~|@floating>@ <|@
tid a2101 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v2104 v2205 v2132 v2122 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v2738 <|@
result [v0|QWORD[.] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i2630 i2634 i2620 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v2534 <|@
result meta{HotSpotType<Ljava/util/RandomAccessSubList;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 1]
rawvalue: meta{HotSpotType<Ljava/util/RandomAccessSubList;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/RandomAccessSubList;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v2535 v2611 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v2737 <|@
result [v0|QWORD[.] + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i2629 a2631 i2616 a2617 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v2736 <|@
result [v0|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i2628 i2633 i2615 i2619 a2621 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v2734 <|@
result [v0|QWORD[.] + 32] <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a2626 a2613 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@*|@fixed>@ <|@
tid v115 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/ArrayList$SubList; target_method=size target_method_class=Ljava/util/ArrayList$SubList; position=at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 1]
stamp: void
trueSuccessorProbability: 0.9362023508733385
=== Inputs ===
condition: v2537 
=== Succesors ===
trueSuccessor: v111 
falseSuccessor: v114 
=== Usages ===
=== Predecessor ===
v2612 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2537 #trueSuccessor: v111 #falseSuccessor: v114  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@1d23bfbf slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - 
>@ <|@ instruction NULLCHECK [v1|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOV [v0|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v2|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList$SubList;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9362023508733385 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4606607780662349515
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v111 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/ArrayList$SubList; target_method=size target_method_class=Ljava/util/ArrayList$SubList; position=at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2613 
=== Usages ===
=== Predecessor ===
v115 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2613  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2613 <|@
result v3|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList$SubList.this$0
nodeSourcePosition: at java.util.ArrayList$SubList.checkForComodification(ArrayList.java:1238) [bci: 1]
at java.util.ArrayList$SubList.size(ArrayList.java:1048) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 1]
nullCheck: false
stamp: n# Ljava/util/ArrayList;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2734 
=== Succesors ===
next: i2614 
=== Usages ===
v2744 
=== Predecessor ===
v111 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2734 #next: i2614  <|@  <|@
f <@~|@floating>@ <|@
tid v2744 <|@
result [v3|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2613 
=== Succesors ===
=== Usages ===
i2614 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2613  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2614 <|@
result v4|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractList.modCount
nodeSourcePosition: at java.util.ArrayList$SubList.checkForComodification(ArrayList.java:1238) [bci: 4]
at java.util.ArrayList$SubList.size(ArrayList.java:1048) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 1]
nullCheck: true
stamp: i32
=== Inputs ===
stateBefore: ?3 
guard: - 
address: v2744 
=== Succesors ===
next: i2615 
=== Usages ===
v264 
=== Predecessor ===
a2613 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?3 guard: - address: v2744 #next: i2615  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2615 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractList.modCount
nodeSourcePosition: at java.util.ArrayList$SubList.checkForComodification(ArrayList.java:1238) [bci: 8]
at java.util.ArrayList$SubList.size(ArrayList.java:1048) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 1]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2736 
=== Succesors ===
next: v1484 
=== Usages ===
v264 
=== Predecessor ===
i2614 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2736 #next: v1484  <|@  <|@
f <@~|@floating>@ <|@
tid v264 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.ArrayList$SubList.checkForComodification(ArrayList.java:1238) [bci: 11]
at java.util.ArrayList$SubList.size(ArrayList.java:1048) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 1]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2614 
y: i2615 
=== Succesors ===
=== Usages ===
v1484 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i2614 y: i2615  <|@  <|@
f <@*|@fixed>@ <|@
tid v1484 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$SubList.checkForComodification(ArrayList.java:1238) [bci: 11]
at java.util.ArrayList$SubList.size(ArrayList.java:1048) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 1]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v264 
=== Succesors ===
trueSuccessor: v1481 
falseSuccessor: v1483 
=== Usages ===
=== Predecessor ===
i2615 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v264 #trueSuccessor: v1481 #falseSuccessor: v1483  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v3|DWORD[.] = MOV [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - 
>@ <|@ instruction v4|DWORD = MOV [v3|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v4|DWORD, y: [v0|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B10" 
    xhandlers
    flags 
    probability 4606607780662349515
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1481 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$SubList.checkForComodification(ArrayList.java:1238) [bci: 11]
at java.util.ArrayList$SubList.size(ArrayList.java:1048) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2616 
=== Usages ===
=== Predecessor ===
v1484 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2616  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2616 <|@
result v5|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList$SubList.size
nodeSourcePosition: at java.util.ArrayList$SubList.size(ArrayList.java:1049) [bci: 5]
at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 1]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2737 
=== Succesors ===
next: v112 
=== Usages ===
i107 
=== Predecessor ===
v1481 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2737 #next: v112  <|@  <|@
f <@*|@fixed>@ <|@
tid v112 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v104 
=== Predecessor ===
i2616 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = MOV [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v5|DWORD] destination: B2 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B148" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1483 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$SubList.checkForComodification(ArrayList.java:1238) [bci: 11]
at java.util.ArrayList$SubList.size(ArrayList.java:1048) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2111 
=== Usages ===
=== Predecessor ===
v1484 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2111  <|@  <|@
f <@~|@floating>@ <|@
tid i2112 <|@
result int[-336915|0xfffffffffffadbed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -336915
stableDimension: 0
stamp: i32 [-336915] ⇊00000000fffadbed ⇈00000000fffadbed
stampKind: i32
value: int[-336915|0xfffffffffffadbed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2102 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2111 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2098 
=== Predecessor ===
v1483 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-336915|0xfffffffffffadbed]] destination: B3 -> B148 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" "B8" 
    xhandlers
    flags 
    probability 4589261525764508072
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v114 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v124 
=== Usages ===
=== Predecessor ===
v115 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v124  <|@  <|@
f <@~|@floating>@ <|@
tid v2611 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 1]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2612 
y: v2534 
=== Succesors ===
=== Usages ===
v124 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2612 y: v2534  <|@  <|@
f <@*|@fixed>@ <|@
tid v124 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/RandomAccessSubList; target_method=size target_method_class=Ljava/util/SubList; position=at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 1]
stamp: void
trueSuccessorProbability: 0.8661213947481707
=== Inputs ===
condition: v2611 
=== Succesors ===
trueSuccessor: v120 
falseSuccessor: v123 
=== Usages ===
=== Predecessor ===
v114 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2611 #trueSuccessor: v120 #falseSuccessor: v123  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v2|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/RandomAccessSubList;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.8661213947481707 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4588124123200152941
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v120 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/RandomAccessSubList; target_method=size target_method_class=Ljava/util/SubList; position=at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2617 
=== Usages ===
=== Predecessor ===
v124 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2617  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2617 <|@
result v6|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: SubList.l
nodeSourcePosition: at java.util.SubList.checkForComodification(AbstractList.java:768) [bci: 5]
at java.util.SubList.size(AbstractList.java:645) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 1]
nullCheck: false
stamp: n Ljava/util/AbstractList;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2737 
=== Succesors ===
next: i2618 
=== Usages ===
v2745 
=== Predecessor ===
v120 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2737 #next: i2618  <|@  <|@
f <@~|@floating>@ <|@
tid v2745 <|@
result [v6|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2617 
=== Succesors ===
=== Usages ===
i2618 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2617  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2618 <|@
result v7|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractList.modCount
nodeSourcePosition: at java.util.SubList.checkForComodification(AbstractList.java:768) [bci: 8]
at java.util.SubList.size(AbstractList.java:645) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 1]
nullCheck: true
stamp: i32
=== Inputs ===
stateBefore: ?3 
guard: - 
address: v2745 
=== Succesors ===
next: i2619 
=== Usages ===
v306 
=== Predecessor ===
a2617 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?3 guard: - address: v2745 #next: i2619  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2619 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractList.modCount
nodeSourcePosition: at java.util.SubList.checkForComodification(AbstractList.java:768) [bci: 1]
at java.util.SubList.size(AbstractList.java:645) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 1]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2736 
=== Succesors ===
next: v1492 
=== Usages ===
v306 
=== Predecessor ===
i2618 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2736 #next: v1492  <|@  <|@
f <@~|@floating>@ <|@
tid v306 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.SubList.checkForComodification(AbstractList.java:768) [bci: 11]
at java.util.SubList.size(AbstractList.java:645) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 1]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2618 
y: i2619 
=== Succesors ===
=== Usages ===
v1492 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i2618 y: i2619  <|@  <|@
f <@*|@fixed>@ <|@
tid v1492 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.SubList.checkForComodification(AbstractList.java:768) [bci: 11]
at java.util.SubList.size(AbstractList.java:645) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 1]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v306 
=== Succesors ===
trueSuccessor: v1489 
falseSuccessor: v1491 
=== Usages ===
=== Predecessor ===
i2619 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v306 #trueSuccessor: v1489 #falseSuccessor: v1491  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v6|DWORD[.] = MOV [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - 
>@ <|@ instruction v7|DWORD = MOV [v6|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v7|DWORD, y: [v0|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B10" 
    xhandlers
    flags 
    probability 4588124123200152941
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1489 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.SubList.checkForComodification(AbstractList.java:768) [bci: 11]
at java.util.SubList.size(AbstractList.java:645) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2620 
=== Usages ===
=== Predecessor ===
v1492 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2620  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2620 <|@
result v8|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: SubList.size
nodeSourcePosition: at java.util.SubList.size(AbstractList.java:646) [bci: 5]
at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 1]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2738 
=== Succesors ===
next: v121 
=== Usages ===
i107 
=== Predecessor ===
v1489 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2738 #next: v121  <|@  <|@
f <@*|@fixed>@ <|@
tid v121 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v104 
=== Predecessor ===
i2620 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = MOV [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v8|DWORD] destination: B6 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B148" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1491 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.SubList.checkForComodification(AbstractList.java:768) [bci: 11]
at java.util.SubList.size(AbstractList.java:645) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2115 
=== Usages ===
=== Predecessor ===
v1492 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2115  <|@  <|@
f <@~|@floating>@ <|@
tid i2116 <|@
result int[-340243|0xfffffffffffaceed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -340243
stableDimension: 0
stamp: i32 [-340243] ⇊00000000fffaceed ⇈00000000fffaceed
stampKind: i32
value: int[-340243|0xfffffffffffaceed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2102 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2115 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2098 
=== Predecessor ===
v1491 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-340243|0xfffffffffffaceed]] destination: B7 -> B148 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B9" "B147" 
    xhandlers
    flags 
    probability 4576077253934364555
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v123 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1496 
=== Usages ===
=== Predecessor ===
v124 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1496  <|@  <|@
f <@~|@floating>@ <|@
tid v2538 <|@
result meta{HotSpotType<Ljava/util/HashSet;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 1]
rawvalue: meta{HotSpotType<Ljava/util/HashSet;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/HashSet;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v2539 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v2539 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 1]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2612 
y: v2538 
=== Succesors ===
=== Usages ===
v1496 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2612 y: v2538  <|@  <|@
f <@*|@fixed>@ <|@
tid v1496 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/HashSet; target_method=size target_method_class=Ljava/util/HashSet; position=at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 1]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v2539 
=== Succesors ===
trueSuccessor: v1493 
falseSuccessor: v1495 
=== Usages ===
=== Predecessor ===
v123 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2539 #trueSuccessor: v1493 #falseSuccessor: v1495  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v2|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashSet;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B147 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" 
    xhandlers
    flags 
    probability 4576077253934364555
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1493 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/HashSet; target_method=size target_method_class=Ljava/util/HashSet; position=at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2621 
=== Usages ===
=== Predecessor ===
v1496 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2621  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2621 <|@
result v9|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashSet.map
nodeSourcePosition: at java.util.HashSet.size(HashSet.java:182) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 1]
nullCheck: false
stamp: n Ljava/util/HashMap;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2736 
=== Succesors ===
next: i2622 
=== Usages ===
v2746 
=== Predecessor ===
v1493 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2736 #next: i2622  <|@  <|@
f <@~|@floating>@ <|@
tid v2746 <|@
result [v9|DWORD[.] * 8 + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2621 
=== Succesors ===
=== Usages ===
i2622 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2621  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2622 <|@
result v10|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashMap.size
nodeSourcePosition: at java.util.HashMap.size(HashMap.java:526) [bci: 1]
at java.util.HashSet.size(HashSet.java:182) [bci: 4]
at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 1]
nullCheck: true
stamp: i32
=== Inputs ===
stateBefore: ?3 
guard: - 
address: v2746 
=== Succesors ===
next: v130 
=== Usages ===
i107 
=== Predecessor ===
a2621 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?3 guard: - address: v2746 #next: v130  <|@  <|@
f <@*|@fixed>@ <|@
tid v130 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v104 
=== Predecessor ===
i2622 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v9|DWORD[.] = MOV [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - 
>@ <|@ instruction v10|DWORD = MOV [v9|DWORD[.] * 8 + 20] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v10|DWORD] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B2" "B6" "B9" 
    successors "B11" "B24" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i107 <|@
result v11|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 1]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v104 
values: i2616 i2620 i2622 
=== Succesors ===
=== Usages ===
?105 v8 v2352 a2321 i2281 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v104 values: i2616 i2620 i2622  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v104 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 1]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v112 v121 v130 
=== Succesors ===
next: i2623 
=== Usages ===
i107 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v112 v121 v130 #next: i2623  <|@  <|@
f <@~|@floating>@ <|@
tid v2695 <|@
result [v1|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i2623 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2623 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:177) [bci: 6]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v2695 
=== Succesors ===
next: v11 
=== Usages ===
v8 
=== Predecessor ===
v104 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2695 #next: v11  <|@  <|@
f <@~|@floating>@ <|@
tid v8 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:177) [bci: 8]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2623 
y: i107 
=== Succesors ===
=== Usages ===
v11 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2623 y: i107  <|@  <|@
f <@~|@floating>@ <|@
tid v2572 <|@
result meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v2479 v2587 v2590 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v2566 <|@
result meta{HotSpotType<Ljava/util/SubList$1;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/util/SubList$1;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/SubList$1;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v2462 v2585 v2610 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v2558 <|@
result meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeInputList;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
rawvalue: meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeInputList;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeInputList;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v2559 v2589 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v2554 <|@
result meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
rawvalue: meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v2555 v2588 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v2548 <|@
result meta{HotSpotType<Ljava/util/ArrayList$SubList$1;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/util/ArrayList$SubList$1;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/ArrayList$SubList$1;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v2409 v2586 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v2370 <|@
result v12|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<[I, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[I, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a2384 a2438 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i21 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotClassSubstitutions.getComponentType(HotSpotClassSubstitutions.java:121) [bci: 6]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 19]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v444 i75 i2015 v2418 v2466 i902 v612 v661 v1466 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i20 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotClassSubstitutions.getComponentType(HotSpotClassSubstitutions.java:121) [bci: 6]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 19]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i94 i797 i528 i349 v917 i2031 a2321 a2384 a2438 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v11 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:177) [bci: 8]
stamp: void
trueSuccessorProbability: 2.746347358013842E-4
=== Inputs ===
condition: v8 
=== Succesors ===
trueSuccessor: v9 
falseSuccessor: v10 
=== Usages ===
=== Predecessor ===
i2623 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v8 #trueSuccessor: v9 #falseSuccessor: v10  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v11|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction CMP (x: v11|DWORD, y: [v1|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 2.746347358013842E-4 condition: > trueDestination: B10 -> B11 falseDestination: B10 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4553701740329279932
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v9 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:177) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2624 
=== Usages ===
=== Predecessor ===
v11 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2624  <|@  <|@
f <@~|@floating>@ <|@
tid v2754 <|@
result [v1|QWORD[.] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
v2624 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2624 <|@
result v13|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.ClassGetHubNode.readClass(Class) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotClassSubstitutions.getComponentType(HotSpotClassSubstitutions.java:120) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 19]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v2754 
=== Succesors ===
next: a1246 
=== Usages ===
v2254 v2356 v2694 
=== Predecessor ===
v9 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2754 #next: a1246  <|@  <|@
f <@~|@floating>@ <|@
tid v2694 <|@
result [v13|DWORD * 8 + 224] <|@
d <@d|@=== Debug Properties ===
displacement: 224
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: v2624 
=== Succesors ===
=== Usages ===
a1246 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: v2624  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1246 <|@
result v14|QWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: ArrayKlass::_component_mirror:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotClassSubstitutions.getComponentType(HotSpotClassSubstitutions.java:124) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 19]
nullCheck: false
stamp: a!# Ljava/lang/Class;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2694 
=== Succesors ===
next: v2261 
=== Usages ===
v2258 
=== Predecessor ===
v2624 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2694 #next: v2261  <|@  <|@
f <@~|@floating>@ <|@
tid a2255 <|@
result v15|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
rawvalue: Class:void
stableDimension: 0
stamp: a!# Ljava/lang/Class;
stampKind: a -
value: Object[Class:void]
=== Inputs ===
=== Succesors ===
=== Usages ===
v2258 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v2258 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.throwsIllegalArgumentException(DynamicNewArrayNode.java:120) [bci: 2]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:369) [bci: 35]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a1246 
y: a2255 
=== Succesors ===
=== Usages ===
v2261 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.ObjectEqualsNode>@ x: a1246 y: a2255  <|@  <|@
tid ?105 <|@
d <@d|@=== Debug Properties ===
bci: 4
code: ResolvedJavaMethodBytecode<AbstractCollection.toArray(Object[])>
duringCall: false
localsSize: 6
locksSize: 0
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 1]
rethrowException: false
sourceFile: AbstractCollection.java
sourceLine: 176
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: a1 a2 - - - - i107 
=== Succesors ===
=== Usages ===
a2321 v1502 v2262 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 - - - - i107  <|@  <|@
f <@*|@fixed>@ <|@
tid v2261 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:369) [bci: 49]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v2258 
=== Succesors ===
trueSuccessor: v2260 
falseSuccessor: v2259 
=== Usages ===
=== Predecessor ===
a1246 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2258 #trueSuccessor: v2260 #falseSuccessor: v2259  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = MOV [v1|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|QWORD[.] = MOV [v13|DWORD * 8 + 224] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v15|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:void] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v15|QWORD[.], y: v14|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2260 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:370) [bci: 52]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2262 
=== Usages ===
=== Predecessor ===
v2261 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2262  <|@  <|@
f <@*|@fixed>@ <|@
tid v2262 <|@
d <@d|@=== Debug Properties ===
action: None
debugId: 0
nodeSourcePosition: at org.graalvm.compiler.nodes.DeoptimizeNode.deopt(DeoptimizationAction, DeoptimizationReason) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:370) [bci: 58]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
reason: RuntimeConstraint
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?105 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v2260 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?105  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -579169 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 4]
stack: v11|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] - - - - 
>@ <|@ instruction DEOPT info [bci:4] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4553701740329279932
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2259 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:373) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: j2287 
=== Usages ===
=== Predecessor ===
v2261 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j2287  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2287 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:772) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:319) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j2347 
=== Usages ===
v2755 v2756 
=== Predecessor ===
v2259 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j2347  <|@  <|@
f <@~|@floating>@ <|@
tid v2755 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j2287 
index: - 
=== Succesors ===
=== Usages ===
j2347 v2351 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2287 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2347 <|@
result v16|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:245) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:320) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v2755 
=== Succesors ===
next: j2348 
=== Usages ===
j2291 v2757 v2758 v2764 v2759 a2320 v2760 v2761 v2762 v2763 
=== Predecessor ===
j2287 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2755 #next: j2348  <|@  <|@
f <@~|@floating>@ <|@
tid v2756 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j2287 
index: - 
=== Succesors ===
=== Usages ===
j2348 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2287 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2348 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:249) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:321) [bci: 25]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v2756 
=== Succesors ===
next: v2295 
=== Usages ===
v2292 
=== Predecessor ===
j2347 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2756 #next: v2295  <|@  <|@
f <@~|@floating>@ <|@
tid i1060 <|@
result int[2|0x2] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.ArrayList$SubList$1.next(ArrayList.java:1122) [bci: 77]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
rawvalue: 2
stableDimension: 0
stamp: i32 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2281 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i2281 <|@
result v17|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 8]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
stamp: i32 [-2147483648 - 2147483644] ⇈00000000fffffffc
=== Inputs ===
x: i107 
y: i1060 
=== Succesors ===
=== Usages ===
i2599 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i107 y: i1060  <|@  <|@
f <@~|@floating>@ <|@
tid i2598 <|@
result int[23|0x17] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
rawvalue: 23
stableDimension: 0
stamp: i32 [23] ⇊0000000000000017 ⇈0000000000000017
stampKind: i32
value: int[23|0x17]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2599 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i2599 <|@
result v18|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
stamp: i32 [-2147483645 - 2147483647] ⇊0000000000000003
=== Inputs ===
x: i2281 
y: i2598 
=== Succesors ===
=== Usages ===
i2286 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i2281 y: i2598  <|@  <|@
f <@~|@floating>@ <|@
tid i2285 <|@
result int[-8|0xfffffffffffffff8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:603) [bci: 23]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
rawvalue: -8
stableDimension: 0
stamp: i32 [-8] ⇊00000000fffffff8 ⇈00000000fffffff8
stampKind: i32
value: int[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2286 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i2286 <|@
result v19|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:604) [bci: 30]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i2599 
y: i2285 
=== Succesors ===
=== Usages ===
j2290 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i2599 y: i2285  <|@  <|@
f <@~|@floating>@ <|@
tid j2290 <|@
result v20|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
resultBits: 64
stamp: i64 [-2147483648 - 2147483640] ⇈fffffffffffffff8
=== Inputs ===
value: i2286 
=== Succesors ===
=== Usages ===
j2291 v2312 v2760 v2761 v2762 v2763 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i2286  <|@  <|@
f <@~|@floating>@ <|@
tid j2291 <|@
result v21|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
stamp: i64
=== Inputs ===
x: j2290 
y: j2347 
=== Succesors ===
=== Usages ===
v2292 v2351 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2290 y: j2347  <|@  <|@
f <@~|@floating>@ <|@
tid v2292 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 83]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2348 
y: j2291 
=== Succesors ===
=== Usages ===
v2295 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j2348 y: j2291  <|@  <|@
f <@*|@fixed>@ <|@
tid v2295 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 89]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v2292 
=== Succesors ===
trueSuccessor: v2293 
falseSuccessor: v2294 
=== Usages ===
=== Predecessor ===
j2348 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2292 #trueSuccessor: v2293 #falseSuccessor: v2294  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v16|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = SHL v11|DWORD y: 2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = LEA [v17|DWORD + 23] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v19|DWORD = AND v18|DWORD y: -8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD = MOVSXD v19|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v21|QWORD = ADD (x: v20|QWORD, y: v16|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v21|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B19" 
    xhandlers
    flags 
    probability 4523595055609508578
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2293 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2321 
=== Usages ===
=== Predecessor ===
v2295 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2321  <|@  <|@
f <@~|@floating>@ <|@
tid v2254 <|@
result v22|QWORD <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.ClassGetHubNode.readClass(Class) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotClassSubstitutions.getComponentType(HotSpotClassSubstitutions.java:120) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 19]
op: Uncompress
stamp: Klass*!
=== Inputs ===
value: v2624 
=== Succesors ===
=== Usages ===
a2321 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: v2624  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2321 <|@
result v23|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.newArray(ForeignCallDescriptor, KlassPointer, int, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 155]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?105 
arguments: v2254 i107 i20 
=== Succesors ===
next: v2324 
=== Usages ===
a2325 
=== Predecessor ===
v2293 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?105 arguments: v2254 i107 i20 #next: v2324  <|@  <|@
f <@*|@fixed>@ <|@
tid v2324 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2323 
=== Predecessor ===
a2321 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v22|QWORD = UNCOMPRESSPOINTER (input: v13|DWORD, ~baseRegister: -) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@68a0169d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v22|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v11|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 4]
stack: v11|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:4] <|@ <|@
      nr   -1  <|@ instruction v23|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v23|QWORD[.]] destination: B14 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4553651079162429142
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2294 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 92]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2351 
=== Usages ===
=== Predecessor ===
v2295 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2351  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2351 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:257) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 96]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2755 
value: j2291 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2334 
=== Usages ===
=== Predecessor ===
v2294 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2755 value: j2291 stateAfter: - lastLocationAccess: - #next: v2334  <|@  <|@
f <@~|@floating>@ <|@
tid v2760 <|@
result [v20|QWORD + v16|QWORD * 1 + 192] <|@
d <@d|@=== Debug Properties ===
displacement: 192
scale: Times1
stamp: void*
=== Inputs ===
base: j2290 
index: j2347 
=== Succesors ===
=== Usages ===
v2334 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2290 index: j2347  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2334 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
stamp: void
=== Inputs ===
address: v2760 
=== Succesors ===
next: v2337 
=== Usages ===
=== Predecessor ===
v2351 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v2760 #next: v2337  <|@  <|@
f <@~|@floating>@ <|@
tid v2761 <|@
result [v20|QWORD + v16|QWORD * 1 + 256] <|@
d <@d|@=== Debug Properties ===
displacement: 256
scale: Times1
stamp: void*
=== Inputs ===
base: j2290 
index: j2347 
=== Succesors ===
=== Usages ===
v2337 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2290 index: j2347  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2337 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
stamp: void
=== Inputs ===
address: v2761 
=== Succesors ===
next: v2340 
=== Usages ===
=== Predecessor ===
v2334 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v2761 #next: v2340  <|@  <|@
f <@~|@floating>@ <|@
tid v2762 <|@
result [v20|QWORD + v16|QWORD * 1 + 320] <|@
d <@d|@=== Debug Properties ===
displacement: 320
scale: Times1
stamp: void*
=== Inputs ===
base: j2290 
index: j2347 
=== Succesors ===
=== Usages ===
v2340 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2290 index: j2347  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2340 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
stamp: void
=== Inputs ===
address: v2762 
=== Succesors ===
next: v2343 
=== Usages ===
=== Predecessor ===
v2337 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v2762 #next: v2343  <|@  <|@
f <@~|@floating>@ <|@
tid v2763 <|@
result [v20|QWORD + v16|QWORD * 1 + 384] <|@
d <@d|@=== Debug Properties ===
displacement: 384
scale: Times1
stamp: void*
=== Inputs ===
base: j2290 
index: j2347 
=== Succesors ===
=== Usages ===
v2343 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2290 index: j2347  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2343 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
stamp: void
=== Inputs ===
address: v2763 
=== Succesors ===
next: v2352 
=== Usages ===
=== Predecessor ===
v2340 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v2763 #next: v2352  <|@  <|@
f <@~|@floating>@ <|@
tid v2757 <|@
result [v16|QWORD + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j2347 
index: - 
=== Succesors ===
=== Usages ===
v2352 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2347 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2352 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:549) [bci: 12]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2757 
value: i107 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2353 
=== Usages ===
=== Predecessor ===
v2343 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2757 value: i107 stateAfter: - lastLocationAccess: - #next: v2353  <|@  <|@
f <@~|@floating>@ <|@
tid v2758 <|@
result [v16|QWORD] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j2347 
index: - 
=== Succesors ===
=== Usages ===
v2353 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2347 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j2256 <|@
result long[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
rawvalue: 1
stableDimension: 0
stamp: i64 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v2353 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2353 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:469) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2758 
value: j2256 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2356 
=== Usages ===
=== Predecessor ===
v2352 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2758 value: j2256 stateAfter: - lastLocationAccess: - #next: v2356  <|@  <|@
f <@~|@floating>@ <|@
tid v2764 <|@
result [v16|QWORD + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j2347 
index: - 
=== Succesors ===
=== Usages ===
v2356 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2347 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2356 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2764 
value: v2624 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2309 
=== Usages ===
=== Predecessor ===
v2353 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2764 value: v2624 stateAfter: - lastLocationAccess: - #next: v2309  <|@  <|@
f <@~|@floating>@ <|@
tid j1052 <|@
result long[16|0x10] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.ArrayList$SubList$1.next(ArrayList.java:1122) [bci: 73]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
rawvalue: 16
stableDimension: 0
stamp: i64 [16] ⇊0000000000000010 ⇈0000000000000010
stampKind: i64
value: long[16|0x10]
=== Inputs ===
=== Succesors ===
=== Usages ===
j2311 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2309 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.fillMemory(NewObjectSnippets.java:489) [bci: 233]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.zeroMemory(NewObjectSnippets.java:449) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:556) [bci: 37]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2310 
=== Predecessor ===
v2356 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v21|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v20|QWORD + v16|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v20|QWORD + v16|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v20|QWORD + v16|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v20|QWORD + v16|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v16|QWORD + 12], y: v11|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v16|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v16|QWORD + 8], y: v13|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[16|0x10]] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B17" 
    successors "B17" "B18" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4558154678789799638
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j2311 <|@
result v24|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.zeroMemory(NewObjectSnippets.java:449) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:556) [bci: 37]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2310 
values: j1052 j2317 
=== Succesors ===
=== Usages ===
v2312 v2759 j2317 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2310 values: j1052 j2317  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2310 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 2.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.fillMemory(NewObjectSnippets.java:489) [bci: 233]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.zeroMemory(NewObjectSnippets.java:449) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:556) [bci: 37]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v2309 
=== Succesors ===
next: v2315 
=== Usages ===
j2311 v2314 v2318 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v2309 #next: v2315  <|@  <|@
f <@~|@floating>@ <|@
tid v2312 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.fillMemory(NewObjectSnippets.java:489) [bci: 241]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.zeroMemory(NewObjectSnippets.java:449) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:556) [bci: 37]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2311 
y: j2290 
=== Succesors ===
=== Usages ===
v2315 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2311 y: j2290  <|@  <|@
f <@*|@fixed>@ <|@
tid v2315 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.fillMemory(NewObjectSnippets.java:489) [bci: 241]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.zeroMemory(NewObjectSnippets.java:449) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:556) [bci: 37]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v2312 
=== Succesors ===
trueSuccessor: v2313 
falseSuccessor: v2314 
=== Usages ===
=== Predecessor ===
v2310 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2312 #trueSuccessor: v2313 #falseSuccessor: v2314  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v24|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v20|QWORD, y: v24|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B16 -> B17 falseDestination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B16" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4553651079162429142
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2313 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.fillMemory(NewObjectSnippets.java:490) [bci: 244]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.zeroMemory(NewObjectSnippets.java:449) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:556) [bci: 37]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2357 
=== Usages ===
=== Predecessor ===
v2315 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2357  <|@  <|@
f <@~|@floating>@ <|@
tid v2759 <|@
result [v16|QWORD + v24|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j2347 
index: j2311 
=== Succesors ===
=== Usages ===
v2357 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2347 index: j2311  <|@  <|@
f <@~|@floating>@ <|@
tid j1796 <|@
result long[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 0
stableDimension: 0
stamp: i64 [0] ⇈0000000000000000
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v2357 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2357 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.fillMemory(NewObjectSnippets.java:490) [bci: 251]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.zeroMemory(NewObjectSnippets.java:449) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:556) [bci: 37]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2759 
value: j1796 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2318 
=== Usages ===
=== Predecessor ===
v2313 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2759 value: j1796 stateAfter: - lastLocationAccess: - #next: v2318  <|@  <|@
f <@~|@floating>@ <|@
tid j2248 <|@
result long[8|0x8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 1]
rawvalue: 8
stableDimension: 0
stamp: i64 [8] ⇊0000000000000008 ⇈0000000000000008
stampKind: i64
value: long[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j2317 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j2317 <|@
result v25|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.fillMemory(NewObjectSnippets.java:489) [bci: 258]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.zeroMemory(NewObjectSnippets.java:449) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:556) [bci: 37]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
stamp: i64
=== Inputs ===
x: j2311 
y: j2248 
=== Succesors ===
=== Usages ===
j2311 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2311 y: j2248  <|@  <|@
f <@*|@fixed>@ <|@
tid v2318 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.fillMemory(NewObjectSnippets.java:489) [bci: 233]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.zeroMemory(NewObjectSnippets.java:449) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:556) [bci: 37]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
stamp: void
=== Inputs ===
loopBegin: v2310 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v2357 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v2310  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v16|QWORD + v24|QWORD * 1], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v25|QWORD = LEA [v24|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v25|QWORD] destination: B17 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4553651079162429142
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2314 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.fillMemory(NewObjectSnippets.java:493) [bci: 266]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.zeroMemory(NewObjectSnippets.java:449) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:556) [bci: 37]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v2310 
=== Succesors ===
next: v2319 
=== Usages ===
=== Predecessor ===
v2315 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v2310 #next: v2319  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2319 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.MembarNode.memoryBarrier(int, LocationIdentity) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:560) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2320 
=== Usages ===
=== Predecessor ===
v2314 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a2320  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2320 <|@
result v26|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:561) [bci: 71]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
stamp: a! -
trackedPointer: true
=== Inputs ===
input: j2347 
=== Succesors ===
next: v2322 
=== Usages ===
a2325 
=== Predecessor ===
v2319 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j2347 #next: v2322  <|@  <|@
f <@*|@fixed>@ <|@
tid v2322 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2323 
=== Predecessor ===
a2320 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v26|QWORD[.] = MOVE v16|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v26|QWORD[.]] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B14" 
    successors "B20" "B23" 
    xhandlers
    flags 
    probability 4553701740329279932
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a2325 <|@
result v27|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
stamp: a! -
valueDescription: a -
=== Inputs ===
merge: v2323 
values: a2320 a2321 
=== Succesors ===
=== Usages ===
a1444 v2765 a1445 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2323 values: a2320 a2321  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2323 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:131) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions.newInstance(HotSpotArraySubstitutions.java:51) [bci: 37]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 23]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2322 v2324 
=== Succesors ===
next: v2625 
=== Usages ===
a2325 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2322 v2324 #next: v2625  <|@  <|@
f <@~|@floating>@ <|@
tid v2765 <|@
result [v27|QWORD[.] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a2325 
index: - 
=== Succesors ===
=== Usages ===
v2625 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2325 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2625 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 26]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v2765 
=== Succesors ===
next: v1504 
=== Usages ===
v2542 
=== Predecessor ===
v2323 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2765 #next: v1504  <|@  <|@
f <@~|@floating>@ <|@
tid v2541 <|@
result meta{HotSpotType<[Ljava/lang/Class;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 26]
rawvalue: meta{HotSpotType<[Ljava/lang/Class;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<[Ljava/lang/Class;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v2542 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v2542 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 26]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2625 
y: v2541 
=== Succesors ===
=== Usages ===
v1504 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2625 y: v2541  <|@  <|@
f <@*|@fixed>@ <|@
tid v1504 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 26]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v2542 
=== Succesors ===
trueSuccessor: v1501 
falseSuccessor: v1503 
=== Usages ===
=== Predecessor ===
v2625 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2542 #trueSuccessor: v1501 #falseSuccessor: v1503  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v27|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v27|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Class;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4553701740329279932
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1501 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: v277 
=== Usages ===
=== Predecessor ===
v1504 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v277  <|@  <|@
f <@*|@fixed>@ <|@
tid v277 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/ArrayList$SubList; target_method=iterator target_method_class=Ljava/util/ArrayList$SubList; position=at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
trueSuccessorProbability: 0.9362023508733385
=== Inputs ===
condition: v2537 
=== Succesors ===
trueSuccessor: v274 
falseSuccessor: v276 
=== Usages ===
=== Predecessor ===
v1501 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2537 #trueSuccessor: v274 #falseSuccessor: v276  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v2|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList$SubList;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9362023508733385 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B26" 
    xhandlers
    flags 
    probability 4553378533994570538
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v274 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/ArrayList$SubList; target_method=iterator target_method_class=Ljava/util/ArrayList$SubList; position=at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: v834 
=== Usages ===
=== Predecessor ===
v277 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v834  <|@  <|@
f <@*|@fixed>@ <|@
tid v834 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v833 
=== Predecessor ===
v274 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v27|QWORD[.]] destination: B21 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B36" 
    xhandlers
    flags 
    probability 4535792526490069278
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v276 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: v837 
=== Usages ===
=== Predecessor ===
v277 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v837  <|@  <|@
f <@*|@fixed>@ <|@
tid v837 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v836 
=== Predecessor ===
v276 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v27|QWORD[.]] destination: B22 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1503 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1502 
=== Usages ===
=== Predecessor ===
v1504 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1502  <|@  <|@
f <@*|@fixed>@ <|@
tid v1502 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 1250
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 26]
reason: TypeCheckedInliningViolated
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?105 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1503 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?105  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -320051 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 4]
stack: v11|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] - - - - 
>@ <|@ instruction DEOPT info [bci:4] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B25" "B35" 
    xhandlers
    flags 
    probability 4607179945110229772
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v10 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:177) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: v863 
=== Usages ===
=== Predecessor ===
v11 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v863  <|@  <|@
f <@*|@fixed>@ <|@
tid v863 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/ArrayList$SubList; target_method=iterator target_method_class=Ljava/util/ArrayList$SubList; position=at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
trueSuccessorProbability: 0.9362023508733385
=== Inputs ===
condition: v2537 
=== Succesors ===
trueSuccessor: v861 
falseSuccessor: v862 
=== Usages ===
=== Predecessor ===
v10 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2537 #trueSuccessor: v861 #falseSuccessor: v862  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v2|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList$SubList;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9362023508733385 condition: = trueDestination: B24 -> B25 falseDestination: B24 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" 
    xhandlers
    flags 
    probability 4606605464788154999
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v861 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/ArrayList$SubList; target_method=iterator target_method_class=Ljava/util/ArrayList$SubList; position=at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: v835 
=== Usages ===
=== Predecessor ===
v863 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v835  <|@  <|@
f <@*|@fixed>@ <|@
tid v835 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v833 
=== Predecessor ===
v861 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v1|QWORD[.]] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B21" "B25" 
    successors "B27" "B33" 
    xhandlers
    flags 
    probability 4606607780662349515
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a1444 <|@
result v28|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a! [Ljava/lang/Object;
valueDescription: a -
=== Inputs ===
merge: v833 
values: a2325 a2 
=== Succesors ===
=== Usages ===
?68 a843 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v833 values: a2325 a2  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v833 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v834 v835 
=== Succesors ===
next: a2626 
=== Usages ===
a1444 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v834 v835 #next: a2626  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2626 <|@
result v29|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList$SubList.this$0
nodeSourcePosition: at java.util.ArrayList$SubList.checkForComodification(ArrayList.java:1238) [bci: 1]
at java.util.ArrayList$SubList.listIterator(ArrayList.java:1099) [bci: 1]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.ArrayList$SubList.iterator(ArrayList.java:1095) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
nullCheck: false
stamp: n# Ljava/util/ArrayList;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2734 
=== Succesors ===
next: i2627 
=== Usages ===
v2735 
=== Predecessor ===
v833 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2734 #next: i2627  <|@  <|@
tid ?68 <|@
d <@d|@=== Debug Properties ===
bci: 32
code: ResolvedJavaMethodBytecode<AbstractCollection.toArray(Object[])>
duringCall: false
localsSize: 6
locksSize: 0
rethrowException: false
sourceFile: AbstractCollection.java
sourceLine: 179
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: a1 a2 - - - - a1444 
=== Succesors ===
=== Usages ===
v2122 a2384 i2627 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 - - - - a1444  <|@  <|@
f <@~|@floating>@ <|@
tid v2735 <|@
result [v29|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2626 
=== Succesors ===
=== Usages ===
i2627 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2626  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2627 <|@
result v30|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractList.modCount
nodeSourcePosition: at java.util.ArrayList$SubList.checkForComodification(ArrayList.java:1238) [bci: 4]
at java.util.ArrayList$SubList.listIterator(ArrayList.java:1099) [bci: 1]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.ArrayList$SubList.iterator(ArrayList.java:1095) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
nullCheck: true
stamp: i32
=== Inputs ===
stateBefore: ?68 
guard: - 
address: v2735 
=== Succesors ===
next: i2628 
=== Usages ===
v440 v2416 
=== Predecessor ===
a2626 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?68 guard: - address: v2735 #next: i2628  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2628 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractList.modCount
nodeSourcePosition: at java.util.ArrayList$SubList.checkForComodification(ArrayList.java:1238) [bci: 8]
at java.util.ArrayList$SubList.listIterator(ArrayList.java:1099) [bci: 1]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.ArrayList$SubList.iterator(ArrayList.java:1095) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2736 
=== Succesors ===
next: v1512 
=== Usages ===
v440 
=== Predecessor ===
i2627 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2736 #next: v1512  <|@  <|@
f <@~|@floating>@ <|@
tid v440 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.ArrayList$SubList.checkForComodification(ArrayList.java:1238) [bci: 11]
at java.util.ArrayList$SubList.listIterator(ArrayList.java:1099) [bci: 1]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.ArrayList$SubList.iterator(ArrayList.java:1095) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2627 
y: i2628 
=== Succesors ===
=== Usages ===
v1512 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i2627 y: i2628  <|@  <|@
f <@*|@fixed>@ <|@
tid v1512 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$SubList.checkForComodification(ArrayList.java:1238) [bci: 11]
at java.util.ArrayList$SubList.listIterator(ArrayList.java:1099) [bci: 1]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.ArrayList$SubList.iterator(ArrayList.java:1095) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v440 
=== Succesors ===
trueSuccessor: v1509 
falseSuccessor: v1511 
=== Usages ===
=== Predecessor ===
i2628 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v440 #trueSuccessor: v1509 #falseSuccessor: v1511  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v28|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v29|DWORD[.] = MOV [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 32]
stack: v28|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] - - - - 
>@ <|@ instruction v30|DWORD = MOV [v29|DWORD[.] * 8 + 12] size: DWORD state [bci:32] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v30|DWORD, y: [v0|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4606607780662349515
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1509 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$SubList.checkForComodification(ArrayList.java:1238) [bci: 11]
at java.util.ArrayList$SubList.listIterator(ArrayList.java:1099) [bci: 1]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.ArrayList$SubList.iterator(ArrayList.java:1095) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2629 
=== Usages ===
=== Predecessor ===
v1512 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2629  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2629 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList$SubList.size
nodeSourcePosition: at java.util.ArrayList$SubList.rangeCheckForAdd(ArrayList.java:1229) [bci: 6]
at java.util.ArrayList$SubList.listIterator(ArrayList.java:1100) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.ArrayList$SubList.iterator(ArrayList.java:1095) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2737 
=== Succesors ===
next: v1516 
=== Usages ===
v444 
=== Predecessor ===
v1509 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2737 #next: v1516  <|@  <|@
f <@~|@floating>@ <|@
tid v444 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.ArrayList$SubList.rangeCheckForAdd(ArrayList.java:1229) [bci: 9]
at java.util.ArrayList$SubList.listIterator(ArrayList.java:1100) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.ArrayList$SubList.iterator(ArrayList.java:1095) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2629 
y: i21 
=== Succesors ===
=== Usages ===
v1516 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2629 y: i21  <|@  <|@
f <@*|@fixed>@ <|@
tid v1516 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$SubList.rangeCheckForAdd(ArrayList.java:1229) [bci: 9]
at java.util.ArrayList$SubList.listIterator(ArrayList.java:1100) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.ArrayList$SubList.iterator(ArrayList.java:1095) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v444 
=== Succesors ===
trueSuccessor: v1515 
falseSuccessor: v1513 
=== Usages ===
=== Predecessor ===
i2629 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v444 #trueSuccessor: v1515 #falseSuccessor: v1513  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v0|QWORD[.] + 24] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B27 -> B28 falseDestination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1515 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$SubList.rangeCheckForAdd(ArrayList.java:1229) [bci: 9]
at java.util.ArrayList$SubList.listIterator(ArrayList.java:1100) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.ArrayList$SubList.iterator(ArrayList.java:1095) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2123 
=== Usages ===
=== Predecessor ===
v1516 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2123  <|@  <|@
f <@~|@floating>@ <|@
tid i2124 <|@
result int[-324115|0xfffffffffffb0ded] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -324115
stableDimension: 0
stamp: i32 [-324115] ⇊00000000fffb0ded ⇈00000000fffb0ded
stampKind: i32
value: int[-324115|0xfffffffffffb0ded]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2120 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2123 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2117 
=== Predecessor ===
v1515 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-324115|0xfffffffffffb0ded]] destination: B28 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4606607780662349515
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1513 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$SubList.rangeCheckForAdd(ArrayList.java:1229) [bci: 9]
at java.util.ArrayList$SubList.listIterator(ArrayList.java:1100) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.ArrayList$SubList.iterator(ArrayList.java:1095) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: j2372 
=== Usages ===
=== Predecessor ===
v1516 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j2372  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2372 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j2388 
=== Usages ===
v2766 v2767 
=== Predecessor ===
v1513 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j2388  <|@  <|@
f <@~|@floating>@ <|@
tid v2766 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j2372 
index: - 
=== Succesors ===
=== Usages ===
j2388 v2390 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2372 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2388 <|@
result v31|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v2766 
=== Succesors ===
next: j2389 
=== Usages ===
j2544 j2394 v2787 
=== Predecessor ===
j2372 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2766 #next: j2389  <|@  <|@
f <@~|@floating>@ <|@
tid v2767 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j2372 
index: - 
=== Succesors ===
=== Usages ===
j2389 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2372 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2389 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v2767 
=== Succesors ===
next: v2380 
=== Usages ===
v2377 
=== Predecessor ===
j2388 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2767 #next: v2380  <|@  <|@
f <@~|@floating>@ <|@
tid j2543 <|@
result long[40|0x28] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 40
stableDimension: 0
stamp: i64 [40] ⇊0000000000000028 ⇈0000000000000028
stampKind: i64
value: long[40|0x28]
=== Inputs ===
=== Succesors ===
=== Usages ===
j2544 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j2544 <|@
result v32|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j2388 
y: j2543 
=== Succesors ===
=== Usages ===
v2377 v2390 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2388 y: j2543  <|@  <|@
f <@~|@floating>@ <|@
tid v2377 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2389 
y: j2544 
=== Succesors ===
=== Usages ===
v2380 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j2389 y: j2544  <|@  <|@
f <@*|@fixed>@ <|@
tid v2380 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v2377 
=== Succesors ===
trueSuccessor: v2378 
falseSuccessor: v2379 
=== Usages ===
=== Predecessor ===
j2389 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2377 #trueSuccessor: v2378 #falseSuccessor: v2379  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v31|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v32|QWORD = LEA [v31|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v32|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B29 -> B30 falseDestination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4576550460895980228
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2378 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a2384 
=== Usages ===
=== Predecessor ===
v2380 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2384  <|@  <|@
f <@~|@floating>@ <|@
tid i2545 <|@
result int[6|0x6] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 6
stableDimension: 0
stamp: i32 [6] ⇊0000000000000006 ⇈0000000000000006
stampKind: i32
value: int[6|0x6]
=== Inputs ===
=== Succesors ===
=== Usages ===
a2384 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2384 <|@
result v33|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?68 
arguments: v2370 i2545 i20 
=== Succesors ===
next: j2385 
=== Usages ===
j2385 
=== Predecessor ===
v2378 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?68 arguments: v2370 i2545 i20 #next: j2385  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2385 <|@
result v33|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a2384 
=== Succesors ===
next: v2395 
=== Usages ===
j2394 
=== Predecessor ===
a2384 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a2384 #next: v2395  <|@  <|@
f <@*|@fixed>@ <|@
tid v2395 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2392 
=== Predecessor ===
j2385 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v12|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[6|0x6] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 32]
stack: v28|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:32] <|@ <|@
      nr   -1  <|@ instruction v33|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v33|QWORD[.]] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4606523455051178784
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2379 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2390 
=== Usages ===
=== Predecessor ===
v2380 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2390  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2390 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2766 
value: j2544 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2387 
=== Usages ===
=== Predecessor ===
v2379 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2766 value: j2544 stateAfter: - lastLocationAccess: - #next: v2387  <|@  <|@
f <@~|@floating>@ <|@
tid v2787 <|@
result [v31|QWORD + 232] <|@
d <@d|@=== Debug Properties ===
displacement: 232
scale: Times1
stamp: void*
=== Inputs ===
base: j2388 
index: - 
=== Succesors ===
=== Usages ===
v2387 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2388 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2387 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v2787 
=== Succesors ===
next: v2393 
=== Usages ===
=== Predecessor ===
v2390 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v2787 #next: v2393  <|@  <|@
f <@*|@fixed>@ <|@
tid v2393 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2392 
=== Predecessor ===
v2387 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v32|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v31|QWORD + 232] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v31|QWORD] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B30" 
    successors "B64" 
    xhandlers
    flags 
    probability 4606607780662349515
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j2394 <|@
result v34|QWORD[*] <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2392 
values: j2388 j2385 
=== Succesors ===
=== Usages ===
v2770 v2769 a1798 v2788 v2789 v2790 v2791 v2792 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2392 values: j2388 j2385  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2392 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2393 v2395 
=== Succesors ===
next: a1798 
=== Usages ===
j2394 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2393 v2395 #next: a1798  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1798 <|@
result v35|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j2394 
=== Succesors ===
next: j2405 
=== Usages ===
a1804 
=== Predecessor ===
v2392 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j2394 #next: j2405  <|@  <|@
f <@~|@floating>@ <|@
tid v1915 <|@
result v36|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 128]
rawvalue: meta{HotSpotType<Ljava/util/ArrayList$SubList$1;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Ljava/util/ArrayList$SubList$1;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
j2400 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j2400 <|@
result v36|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
input: v1915 
=== Succesors ===
=== Usages ===
v2768 
=== Predecessor ===
- >@ <|@
instruction <@PointerCast|@org.graalvm.compiler.hotspot.word.PointerCastNode>@ input: v1915  <|@  <|@
f <@~|@floating>@ <|@
tid v2768 <|@
result [v36|QWORD + 168] <|@
d <@d|@=== Debug Properties ===
displacement: 168
scale: Times1
stamp: void*
=== Inputs ===
base: j2400 
index: - 
=== Succesors ===
=== Usages ===
j2405 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2400 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2405 <|@
result v37|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v2768 
=== Succesors ===
next: v2406 
=== Usages ===
v2406 
=== Predecessor ===
a1798 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2768 #next: v2406  <|@  <|@
f <@~|@floating>@ <|@
tid v2769 <|@
result [v34|QWORD[*]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j2394 
index: - 
=== Succesors ===
=== Usages ===
v2406 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2394 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2406 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2769 
value: j2405 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2409 
=== Usages ===
=== Predecessor ===
j2405 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2769 value: j2405 stateAfter: - lastLocationAccess: - #next: v2409  <|@  <|@
f <@~|@floating>@ <|@
tid v2770 <|@
result [v34|QWORD[*] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j2394 
index: - 
=== Succesors ===
=== Usages ===
v2409 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2394 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2409 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2770 
value: v2548 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2414 
=== Usages ===
=== Predecessor ===
v2406 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2770 value: v2548 stateAfter: - lastLocationAccess: - #next: v2414  <|@  <|@
f <@~|@floating>@ <|@
tid v2788 <|@
result [v34|QWORD[*] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j2394 
index: - 
=== Succesors ===
=== Usages ===
v2414 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2394 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j2412 <|@
result v38|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -4294967296
stableDimension: 0
stamp: i64 [-4294967296] ⇊ffffffff00000000 ⇈ffffffff00000000
stampKind: i64
value: long[-4294967296|0xffffffff00000000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v2414 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2414 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2788 
value: j2412 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2416 
=== Usages ===
=== Predecessor ===
v2409 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2788 value: j2412 stateAfter: - lastLocationAccess: - #next: v2416  <|@  <|@
f <@~|@floating>@ <|@
tid v2789 <|@
result [v34|QWORD[*] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: j2394 
index: - 
=== Succesors ===
=== Usages ===
v2416 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2394 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2416 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2789 
value: i2627 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2418 
=== Usages ===
=== Predecessor ===
v2414 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2789 value: i2627 stateAfter: - lastLocationAccess: - #next: v2418  <|@  <|@
f <@~|@floating>@ <|@
tid v2790 <|@
result [v34|QWORD[*] + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: j2394 
index: - 
=== Succesors ===
=== Usages ===
v2418 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2394 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2418 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2790 
value: i21 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: i2630 
=== Usages ===
=== Predecessor ===
v2416 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2790 value: i21 stateAfter: - lastLocationAccess: - #next: i2630  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2630 <|@
result v39|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList$SubList.offset
nodeSourcePosition: at java.util.ArrayList$SubList.listIterator(ArrayList.java:1101) [bci: 10]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.ArrayList$SubList.iterator(ArrayList.java:1095) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2738 
=== Succesors ===
next: v2420 
=== Usages ===
v2420 
=== Predecessor ===
v2418 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2738 #next: v2420  <|@  <|@
f <@~|@floating>@ <|@
tid v2791 <|@
result [v34|QWORD[*] + 28] <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: j2394 
index: - 
=== Succesors ===
=== Usages ===
v2420 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2394 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2420 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2791 
value: i2630 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2422 
=== Usages ===
=== Predecessor ===
i2630 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2791 value: i2630 stateAfter: - lastLocationAccess: - #next: v2422  <|@  <|@
f <@~|@floating>@ <|@
tid v2792 <|@
result [v34|QWORD[*] + 32] <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times1
stamp: void*
=== Inputs ===
base: j2394 
index: - 
=== Succesors ===
=== Usages ===
v2422 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2394 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a1801 <|@
result v40|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Compress
stamp: n! Ljava/util/AbstractCollection;
=== Inputs ===
value: a1 
=== Succesors ===
=== Usages ===
v2422 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2422 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2792 
value: a1801 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a1804 
=== Usages ===
=== Predecessor ===
v2420 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2792 value: a1801 stateAfter: - lastLocationAccess: - #next: a1804  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1804 <|@
result v35|QWORD[.] <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a1798 
=== Succesors ===
next: v1805 
=== Usages ===
a270 
=== Predecessor ===
v2422 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a1798 #next: v1805  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1805 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v275 
=== Usages ===
=== Predecessor ===
a1804 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v275  <|@  <|@
f <@*|@fixed>@ <|@
tid v275 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v267 
=== Predecessor ===
v1805 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v34|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v35|QWORD[.] = MOVE v34|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v36|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/ArrayList$SubList$1;, resolved>} <|@ <|@
      nr   -1  <|@ instruction v37|QWORD = MOV [v36|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v34|QWORD[*]], y: v37|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v34|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList$SubList$1;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = MOVE input: long[-4294967296|0xffffffff00000000] <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v34|QWORD[*] + 12], y: v38|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v34|QWORD[*] + 20], y: v30|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v34|QWORD[*] + 24], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v39|DWORD = MOV [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v34|QWORD[*] + 28], y: v39|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v40|DWORD[.] = COMPRESSPOINTER (input: v0|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@68a0169d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v34|QWORD[*] + 32], y: v40|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v35|QWORD[.], v28|QWORD[.]] destination: B32 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1511 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$SubList.checkForComodification(ArrayList.java:1238) [bci: 11]
at java.util.ArrayList$SubList.listIterator(ArrayList.java:1099) [bci: 1]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.ArrayList$SubList.iterator(ArrayList.java:1095) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2125 
=== Usages ===
=== Predecessor ===
v1512 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2125  <|@  <|@
f <@~|@floating>@ <|@
tid i2126 <|@
result int[-323347|0xfffffffffffb10ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -323347
stableDimension: 0
stamp: i32 [-323347] ⇊00000000fffb10ed ⇈00000000fffb10ed
stampKind: i32
value: int[-323347|0xfffffffffffb10ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2120 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2125 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2117 
=== Predecessor ===
v1511 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-323347|0xfffffffffffb10ed]] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B28" "B33" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i2120 <|@
result v41|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-324115 - -321803] ⇊00000000fffb00e5 ⇈00000000fffb1ffd
valueDescription: i32
=== Inputs ===
merge: v2117 
values: i2124 i2126 
=== Succesors ===
=== Usages ===
v2122 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2117 values: i2124 i2126  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2117 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2123 v2125 
=== Succesors ===
next: v2122 
=== Usages ===
i2120 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2123 v2125 #next: v2122  <|@  <|@
f <@*|@fixed>@ <|@
tid v2122 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?68 
actionAndReason: i2120 
speculation: a2101 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v2117 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?68 actionAndReason: i2120 speculation: a2101  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v41|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v41|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 32]
stack: v28|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] - - - - 
>@ <|@ instruction DEOPT info [bci:32] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B36" 
    xhandlers
    flags 
    probability 4589260263239763114
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v862 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: v839 
=== Usages ===
=== Predecessor ===
v863 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v839  <|@  <|@
f <@*|@fixed>@ <|@
tid v839 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v836 
=== Predecessor ===
v862 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v1|QWORD[.]] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B22" "B35" 
    successors "B37" "B63" 
    xhandlers
    flags 
    probability 4589261525764508073
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a1445 <|@
result v42|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a! [Ljava/lang/Object;
valueDescription: a -
=== Inputs ===
merge: v836 
values: a2325 a2 
=== Succesors ===
=== Usages ===
?2092 a843 a843 ?604 ?838 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v836 values: a2325 a2  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v836 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v837 v839 
=== Succesors ===
next: v589 
=== Usages ===
a1445 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v837 v839 #next: v589  <|@  <|@
f <@~|@floating>@ <|@
tid v2535 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 1]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2612 
y: v2534 
=== Succesors ===
=== Usages ===
v589 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2612 y: v2534  <|@  <|@
f <@*|@fixed>@ <|@
tid v589 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/RandomAccessSubList; target_method=iterator target_method_class=Ljava/util/SubList; position=at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
trueSuccessorProbability: 0.8661213947481707
=== Inputs ===
condition: v2535 
=== Succesors ===
trueSuccessor: v586 
falseSuccessor: v588 
=== Usages ===
=== Predecessor ===
v836 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2535 #trueSuccessor: v586 #falseSuccessor: v588  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v42|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v2|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/RandomAccessSubList;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.8661213947481707 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" "B61" 
    xhandlers
    flags 
    probability 4588124123200152943
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v586 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/RandomAccessSubList; target_method=iterator target_method_class=Ljava/util/SubList; position=at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2631 
=== Usages ===
=== Predecessor ===
v589 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2631  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2631 <|@
result v43|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: SubList.l
nodeSourcePosition: at java.util.SubList.checkForComodification(AbstractList.java:768) [bci: 5]
at java.util.SubList.listIterator(AbstractList.java:695) [bci: 1]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
nullCheck: false
stamp: n Ljava/util/AbstractList;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2737 
=== Succesors ===
next: i2632 
=== Usages ===
?669 v2489 v2739 v2742 v2771 v2491 ?899 v2806 
=== Predecessor ===
v586 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2737 #next: i2632  <|@  <|@
tid ?838 <|@
d <@d|@=== Debug Properties ===
bci: 32
code: ResolvedJavaMethodBytecode<AbstractCollection.toArray(Object[])>
duringCall: false
localsSize: 6
locksSize: 0
rethrowException: false
sourceFile: AbstractCollection.java
sourceLine: 179
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: a1 a2 - - - - a1445 
=== Succesors ===
=== Usages ===
v2205 i2632 i2638 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 - - - - a1445  <|@  <|@
f <@~|@floating>@ <|@
tid v2739 <|@
result [v43|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2631 
=== Succesors ===
=== Usages ===
i2632 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2631  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2632 <|@
result v44|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractList.modCount
nodeSourcePosition: at java.util.SubList.checkForComodification(AbstractList.java:768) [bci: 8]
at java.util.SubList.listIterator(AbstractList.java:695) [bci: 1]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
nullCheck: true
stamp: i32
=== Inputs ===
stateBefore: ?838 
guard: - 
address: v2739 
=== Succesors ===
next: i2633 
=== Usages ===
v608 v2487 
=== Predecessor ===
a2631 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?838 guard: - address: v2739 #next: i2633  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2633 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractList.modCount
nodeSourcePosition: at java.util.SubList.checkForComodification(AbstractList.java:768) [bci: 1]
at java.util.SubList.listIterator(AbstractList.java:695) [bci: 1]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2736 
=== Succesors ===
next: v1524 
=== Usages ===
v608 
=== Predecessor ===
i2632 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2736 #next: v1524  <|@  <|@
f <@~|@floating>@ <|@
tid v608 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.SubList.checkForComodification(AbstractList.java:768) [bci: 11]
at java.util.SubList.listIterator(AbstractList.java:695) [bci: 1]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2632 
y: i2633 
=== Succesors ===
=== Usages ===
v1524 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i2632 y: i2633  <|@  <|@
f <@*|@fixed>@ <|@
tid v1524 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.SubList.checkForComodification(AbstractList.java:768) [bci: 11]
at java.util.SubList.listIterator(AbstractList.java:695) [bci: 1]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v608 
=== Succesors ===
trueSuccessor: v1521 
falseSuccessor: v1523 
=== Usages ===
=== Predecessor ===
i2633 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v608 #trueSuccessor: v1521 #falseSuccessor: v1523  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v43|DWORD[.] = MOV [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 32]
stack: v42|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] - - - - 
>@ <|@ instruction v44|DWORD = MOV [v43|DWORD[.] * 8 + 12] size: DWORD state [bci:32] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v44|DWORD, y: [v0|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4588124123200152943
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1521 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.SubList.checkForComodification(AbstractList.java:768) [bci: 11]
at java.util.SubList.listIterator(AbstractList.java:695) [bci: 1]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2634 
=== Usages ===
=== Predecessor ===
v1524 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2634  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2634 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: SubList.size
nodeSourcePosition: at java.util.SubList.rangeCheckForAdd(AbstractList.java:759) [bci: 6]
at java.util.SubList.listIterator(AbstractList.java:696) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2738 
=== Succesors ===
next: v1528 
=== Usages ===
v612 
=== Predecessor ===
v1521 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2738 #next: v1528  <|@  <|@
f <@~|@floating>@ <|@
tid v612 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.SubList.rangeCheckForAdd(AbstractList.java:759) [bci: 9]
at java.util.SubList.listIterator(AbstractList.java:696) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2634 
y: i21 
=== Succesors ===
=== Usages ===
v1528 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2634 y: i21  <|@  <|@
f <@*|@fixed>@ <|@
tid v1528 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.SubList.rangeCheckForAdd(AbstractList.java:759) [bci: 9]
at java.util.SubList.listIterator(AbstractList.java:696) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v612 
=== Succesors ===
trueSuccessor: v1527 
falseSuccessor: v1525 
=== Usages ===
=== Predecessor ===
i2634 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v612 #trueSuccessor: v1527 #falseSuccessor: v1525  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v0|QWORD[.] + 20] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B38 -> B39 falseDestination: B38 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1527 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.SubList.rangeCheckForAdd(AbstractList.java:759) [bci: 9]
at java.util.SubList.listIterator(AbstractList.java:696) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2206 
=== Usages ===
=== Predecessor ===
v1528 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2206  <|@  <|@
f <@~|@floating>@ <|@
tid i2207 <|@
result int[-328211|0xfffffffffffafded] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -328211
stableDimension: 0
stamp: i32 [-328211] ⇊00000000fffafded ⇈00000000fffafded
stampKind: i32
value: int[-328211|0xfffffffffffafded]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2203 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2206 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2200 
=== Predecessor ===
v1527 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-328211|0xfffffffffffafded]] destination: B39 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4588124123200152943
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1525 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.SubList.rangeCheckForAdd(AbstractList.java:759) [bci: 9]
at java.util.SubList.listIterator(AbstractList.java:696) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2635 
=== Usages ===
=== Predecessor ===
v1528 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2635  <|@  <|@
f <@~|@floating>@ <|@
tid v2740 <|@
result [v0|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i2635 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2635 <|@
result v45|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: SubList.offset
nodeSourcePosition: at java.util.SubList.access$000(AbstractList.java:613) [bci: 1]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 30]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2740 
=== Succesors ===
next: v1532 
=== Usages ===
v2483 v917 v666 ?669 v661 v904 ?899 ?899 
=== Predecessor ===
v1525 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2740 #next: v1532  <|@  <|@
f <@~|@floating>@ <|@
tid v661 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 1]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2635 
y: i21 
=== Succesors ===
=== Usages ===
v1532 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2635 y: i21  <|@  <|@
f <@*|@fixed>@ <|@
tid v1532 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 1]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v661 
=== Succesors ===
trueSuccessor: v1531 
falseSuccessor: v1529 
=== Usages ===
=== Predecessor ===
i2635 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v661 #trueSuccessor: v1531 #falseSuccessor: v1529  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v45|DWORD = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v45|DWORD, y: v45|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B40 -> B41 falseDestination: B40 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1531 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 1]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2210 
=== Usages ===
=== Predecessor ===
v1532 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2210  <|@  <|@
f <@~|@floating>@ <|@
tid i2211 <|@
result int[-330259|0xfffffffffffaf5ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -330259
stableDimension: 0
stamp: i32 [-330259] ⇊00000000fffaf5ed ⇈00000000fffaf5ed
stampKind: i32
value: int[-330259|0xfffffffffffaf5ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2203 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2210 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2200 
=== Predecessor ===
v1531 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-330259|0xfffffffffffaf5ed]] destination: B41 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B60" 
    xhandlers
    flags 
    probability 4588124123200152943
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1529 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 1]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2636 
=== Usages ===
=== Predecessor ===
v1532 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2636  <|@  <|@
f <@~|@floating>@ <|@
tid v2771 <|@
result [v43|DWORD[.] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2631 
=== Succesors ===
=== Usages ===
v2636 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2631  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2636 <|@
result v46|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v2771 
=== Succesors ===
next: v1288 
=== Usages ===
v2741 v2555 v2557 v2559 
=== Predecessor ===
v1529 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2771 #next: v1288  <|@  <|@
f <@~|@floating>@ <|@
tid v2741 <|@
result [v46|DWORD * 8 + 696] <|@
d <@d|@=== Debug Properties ===
displacement: 696
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: v2636 
=== Succesors ===
=== Usages ===
v1288 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: v2636  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1288 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ANY_LOCATION
nodeSourcePosition: at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
nullCheck: false
stamp: Method*!
=== Inputs ===
stateBefore: - 
guard: - 
address: v2741 
=== Succesors ===
next: v1536 
=== Usages ===
v648 
=== Predecessor ===
v2636 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2741 #next: v1536  <|@  <|@
f <@~|@floating>@ <|@
tid v646 <|@
result v47|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
rawvalue: meta{HotSpotMethod<AbstractList.listIterator(int)>}
stableDimension: 0
stamp: Method*!
stampKind: Method*
value: meta{HotSpotMethod<AbstractList.listIterator(int)>}
=== Inputs ===
=== Succesors ===
=== Usages ===
v648 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v648 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1288 
y: v646 
=== Succesors ===
=== Usages ===
v1536 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1288 y: v646  <|@  <|@
f <@*|@fixed>@ <|@
tid v1536 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=null target_method=listIterator target_method_class=Ljava/util/AbstractList; position=at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v648 
=== Succesors ===
trueSuccessor: v1533 
falseSuccessor: v1535 
=== Usages ===
=== Predecessor ===
v1288 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v648 #trueSuccessor: v1533 #falseSuccessor: v1535  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v46|DWORD = MOV [v43|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v47|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotMethod<AbstractList.listIterator(int)>} <|@ <|@
      nr   -1  <|@ instruction CMP (x: v47|QWORD, y: [v46|DWORD * 8 + 696]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B44" "B47" 
    xhandlers
    flags 
    probability 4588124123200152943
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1533 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=null target_method=listIterator target_method_class=Ljava/util/AbstractList; position=at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: v692 
=== Usages ===
=== Predecessor ===
v1536 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v692  <|@  <|@
f <@~|@floating>@ <|@
tid v2555 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2636 
y: v2554 
=== Succesors ===
=== Usages ===
v692 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2636 y: v2554  <|@  <|@
f <@*|@fixed>@ <|@
tid v692 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/Arrays$ArrayList; target_method=size target_method_class=Ljava/util/Arrays$ArrayList; position=at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
trueSuccessorProbability: 0.5044648172401477
=== Inputs ===
condition: v2555 
=== Succesors ===
trueSuccessor: v688 
falseSuccessor: v691 
=== Usages ===
=== Predecessor ===
v1533 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2555 #trueSuccessor: v688 #falseSuccessor: v691  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v46|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5044648172401477 condition: = trueDestination: B43 -> B44 falseDestination: B43 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4583691632950366314
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v688 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/Arrays$ArrayList; target_method=size target_method_class=Ljava/util/Arrays$ArrayList; position=at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2637 
=== Usages ===
=== Predecessor ===
v692 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2637  <|@  <|@
f <@~|@floating>@ <|@
tid v2742 <|@
result [v43|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2631 
=== Succesors ===
=== Usages ===
a2637 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2631  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2637 <|@
result v48|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Arrays$ArrayList.a
nodeSourcePosition: at java.util.Arrays$ArrayList.size(Arrays.java:3818) [bci: 1]
at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
nullCheck: false
stamp: n [Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2742 
=== Succesors ===
next: i2638 
=== Usages ===
v2743 
=== Predecessor ===
v688 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2742 #next: i2638  <|@  <|@
f <@~|@floating>@ <|@
tid v2743 <|@
result [v48|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2637 
=== Succesors ===
=== Usages ===
i2638 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2637  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2638 <|@
result v49|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.Arrays$ArrayList.size(Arrays.java:3818) [bci: 4]
at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?838 
guard: - 
address: v2743 
=== Succesors ===
next: v1544 
=== Usages ===
i902 v904 
=== Predecessor ===
a2637 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?838 guard: - address: v2743 #next: v1544  <|@  <|@
f <@~|@floating>@ <|@
tid v904 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 9]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2638 
y: i2635 
=== Succesors ===
=== Usages ===
v1544 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2638 y: i2635  <|@  <|@
f <@*|@fixed>@ <|@
tid v1544 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 9]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v904 
=== Succesors ===
trueSuccessor: v1543 
falseSuccessor: v1541 
=== Usages ===
=== Predecessor ===
i2638 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v904 #trueSuccessor: v1543 #falseSuccessor: v1541  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v48|DWORD[.] = MOV [v43|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 32]
stack: v42|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] - - - - 
>@ <|@ instruction v49|DWORD = MOV [v48|DWORD[.] * 8 + 12] size: DWORD state [bci:32] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v45|DWORD, y: v49|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B44 -> B45 falseDestination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1543 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 9]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2216 
=== Usages ===
=== Predecessor ===
v1544 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2216  <|@  <|@
f <@~|@floating>@ <|@
tid i2217 <|@
result int[-332563|0xfffffffffffaeced] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -332563
stableDimension: 0
stamp: i32 [-332563] ⇊00000000fffaeced ⇈00000000fffaeced
stampKind: i32
value: int[-332563|0xfffffffffffaeced]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2203 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2216 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2200 
=== Predecessor ===
v1543 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-332563|0xfffffffffffaeced]] destination: B45 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B55" 
    xhandlers
    flags 
    probability 4583691632950366314
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1541 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 9]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: v900 
=== Usages ===
=== Predecessor ===
v1544 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v900  <|@  <|@
f <@*|@fixed>@ <|@
tid v900 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v898 
=== Predecessor ===
v1541 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v49|DWORD] destination: B46 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B48" "B51" 
    xhandlers
    flags 
    probability 4583549414195198580
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v691 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: v701 
=== Usages ===
=== Predecessor ===
v692 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v701  <|@  <|@
f <@~|@floating>@ <|@
tid v2556 <|@
result meta{HotSpotType<Ljava/util/Collections$EmptyList;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
rawvalue: meta{HotSpotType<Ljava/util/Collections$EmptyList;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/Collections$EmptyList;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v2557 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v2557 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2636 
y: v2556 
=== Succesors ===
=== Usages ===
v701 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2636 y: v2556  <|@  <|@
f <@*|@fixed>@ <|@
tid v701 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/Collections$EmptyList; target_method=size target_method_class=Ljava/util/Collections$EmptyList; position=at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
trueSuccessorProbability: 0.525228255646324
=== Inputs ===
condition: v2557 
=== Succesors ===
trueSuccessor: v697 
falseSuccessor: v700 
=== Usages ===
=== Predecessor ===
v691 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2557 #trueSuccessor: v697 #falseSuccessor: v700  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v46|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Collections$EmptyList;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.525228255646324 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B49" "B50" 
    xhandlers
    flags 
    probability 4579444027082297734
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v697 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/Collections$EmptyList; target_method=size target_method_class=Ljava/util/Collections$EmptyList; position=at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1548 
=== Usages ===
=== Predecessor ===
v701 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1548  <|@  <|@
f <@~|@floating>@ <|@
tid v917 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 9]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2635 
y: i20 
=== Succesors ===
=== Usages ===
v1548 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2635 y: i20  <|@  <|@
f <@*|@fixed>@ <|@
tid v1548 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 9]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v917 
=== Succesors ===
trueSuccessor: v1545 
falseSuccessor: v1547 
=== Usages ===
=== Predecessor ===
v697 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v917 #trueSuccessor: v1545 #falseSuccessor: v1547  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v45|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B48 -> B49 falseDestination: B48 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B55" 
    xhandlers
    flags 
    probability 4579444027082297734
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1545 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 9]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: v916 
=== Usages ===
=== Predecessor ===
v1548 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v916  <|@  <|@
f <@*|@fixed>@ <|@
tid v916 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v898 
=== Predecessor ===
v1545 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0]] destination: B49 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1547 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 9]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2220 
=== Usages ===
=== Predecessor ===
v1548 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2220  <|@  <|@
f <@~|@floating>@ <|@
tid i2221 <|@
result int[-332819|0xfffffffffffaebed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -332819
stableDimension: 0
stamp: i32 [-332819] ⇊00000000fffaebed ⇈00000000fffaebed
stampKind: i32
value: int[-332819|0xfffffffffffaebed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2203 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2220 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2200 
=== Predecessor ===
v1547 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-332819|0xfffffffffffaebed]] destination: B50 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B52" "B59" 
    xhandlers
    flags 
    probability 4578647602053358434
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v700 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1552 
=== Usages ===
=== Predecessor ===
v701 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1552  <|@  <|@
f <@~|@floating>@ <|@
tid v2559 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2636 
y: v2558 
=== Succesors ===
=== Usages ===
v1552 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2636 y: v2558  <|@  <|@
f <@*|@fixed>@ <|@
tid v1552 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Lorg/graalvm/compiler/graph/NodeInputList; target_method=size target_method_class=Lorg/graalvm/compiler/graph/NodeList; position=at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v2559 
=== Succesors ===
trueSuccessor: v1549 
falseSuccessor: v1551 
=== Usages ===
=== Predecessor ===
v700 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2559 #trueSuccessor: v1549 #falseSuccessor: v1551  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v46|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeInputList;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B53" "B54" 
    xhandlers
    flags 
    probability 4578647602053358434
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1549 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Lorg/graalvm/compiler/graph/NodeInputList; target_method=size target_method_class=Lorg/graalvm/compiler/graph/NodeList; position=at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2639 
=== Usages ===
=== Predecessor ===
v1552 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2639  <|@  <|@
f <@~|@floating>@ <|@
tid v2806 <|@
result [v43|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2631 
=== Succesors ===
=== Usages ===
i2639 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2631  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2639 <|@
result v50|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: NodeList.size
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList.size(NodeList.java:119) [bci: 1]
at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2806 
=== Succesors ===
next: v1556 
=== Usages ===
v666 i902 
=== Predecessor ===
v1549 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2806 #next: v1556  <|@  <|@
f <@~|@floating>@ <|@
tid v666 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 9]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2639 
y: i2635 
=== Succesors ===
=== Usages ===
v1556 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2639 y: i2635  <|@  <|@
f <@*|@fixed>@ <|@
tid v1556 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 9]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v666 
=== Succesors ===
trueSuccessor: v1555 
falseSuccessor: v1553 
=== Usages ===
=== Predecessor ===
i2639 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v666 #trueSuccessor: v1555 #falseSuccessor: v1553  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v50|DWORD = MOV [v43|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v45|DWORD, y: v50|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B52 -> B53 falseDestination: B52 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1555 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 9]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2218 
=== Usages ===
=== Predecessor ===
v1556 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2218  <|@  <|@
f <@~|@floating>@ <|@
tid i2219 <|@
result int[-333843|0xfffffffffffae7ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -333843
stableDimension: 0
stamp: i32 [-333843] ⇊00000000fffae7ed ⇈00000000fffae7ed
stampKind: i32
value: int[-333843|0xfffffffffffae7ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2203 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2218 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2200 
=== Predecessor ===
v1555 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-333843|0xfffffffffffae7ed]] destination: B53 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    probability 4578647602053358434
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1553 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 9]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: v897 
=== Usages ===
=== Predecessor ===
v1556 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v897  <|@  <|@
f <@*|@fixed>@ <|@
tid v897 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v898 
=== Predecessor ===
v1553 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v50|DWORD] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" "B46" "B49" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4588124123200152944
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i902 <|@
result v51|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v898 
values: i2639 i2638 i21 
=== Succesors ===
=== Usages ===
?899 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v898 values: i2639 i2638 i21  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v898 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v897 v900 v916 
=== Succesors ===
next: j2427 
=== Usages ===
i902 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v897 v900 v916 #next: j2427  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2427 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j2442 
=== Usages ===
v2772 v2773 
=== Predecessor ===
v898 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j2442  <|@  <|@
f <@~|@floating>@ <|@
tid v2772 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j2427 
index: - 
=== Succesors ===
=== Usages ===
j2442 v2444 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2427 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2442 <|@
result v52|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v2772 
=== Succesors ===
next: j2443 
=== Usages ===
j2561 j2448 v2793 
=== Predecessor ===
j2427 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2772 #next: j2443  <|@  <|@
f <@~|@floating>@ <|@
tid v2773 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j2427 
index: - 
=== Succesors ===
=== Usages ===
j2443 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2427 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2443 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v2773 
=== Succesors ===
next: v2435 
=== Usages ===
v2432 
=== Predecessor ===
j2442 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2773 #next: v2435  <|@  <|@
f <@~|@floating>@ <|@
tid j2560 <|@
result long[56|0x38] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 56
stableDimension: 0
stamp: i64 [56] ⇊0000000000000038 ⇈0000000000000038
stampKind: i64
value: long[56|0x38]
=== Inputs ===
=== Succesors ===
=== Usages ===
j2561 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j2561 <|@
result v53|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j2442 
y: j2560 
=== Succesors ===
=== Usages ===
v2432 v2444 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2442 y: j2560  <|@  <|@
f <@~|@floating>@ <|@
tid v2432 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2443 
y: j2561 
=== Succesors ===
=== Usages ===
v2435 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j2443 y: j2561  <|@  <|@
f <@*|@fixed>@ <|@
tid v2435 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v2432 
=== Succesors ===
trueSuccessor: v2433 
falseSuccessor: v2434 
=== Usages ===
=== Predecessor ===
j2443 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2432 #trueSuccessor: v2433 #falseSuccessor: v2434  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v51|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v52|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v53|QWORD = LEA [v52|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v53|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B55 -> B56 falseDestination: B55 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" 
    xhandlers
    flags 
    probability 4558235736656760908
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2433 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a2438 
=== Usages ===
=== Predecessor ===
v2435 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2438  <|@  <|@
tid ?604 <|@
d <@d|@=== Debug Properties ===
bci: 34
code: ResolvedJavaMethodBytecode<AbstractCollection.toArray(Object[])>
duringCall: true
localsSize: 6
locksSize: 0
rethrowException: false
sourceFile: AbstractCollection.java
sourceLine: 180
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - a2 - a1445 - - 
=== Succesors ===
=== Usages ===
?593 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - a2 - a1445 - -  <|@  <|@
tid ?593 <|@
d <@d|@=== Debug Properties ===
bci: 1
code: ResolvedJavaMethodBytecode<SubList.iterator()>
duringCall: true
localsSize: 1
locksSize: 0
nodeSourcePosition: at java.util.SubList.listIterator(AbstractList.java:695) [bci: 1]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
rethrowException: false
sourceFile: AbstractList.java
sourceLine: 691
stackSize: 0
=== Inputs ===
outerFrameState: ?604 
values: a1 
=== Succesors ===
=== Usages ===
?594 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?604 values: a1  <|@  <|@
tid ?594 <|@
d <@d|@=== Debug Properties ===
bci: 2
code: ResolvedJavaMethodBytecode<AbstractList.listIterator()>
duringCall: true
localsSize: 1
locksSize: 0
nodeSourcePosition: at java.util.SubList.listIterator(AbstractList.java:695) [bci: 1]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
rethrowException: false
sourceFile: AbstractList.java
sourceLine: 299
stackSize: 0
=== Inputs ===
outerFrameState: ?593 
values: a1 
=== Succesors ===
=== Usages ===
?632 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?593 values: a1  <|@  <|@
tid a736 <|@
d <@d|@=== Debug Properties ===
fields: [Ljdk.vm.ci.hotspot.HotSpotResolvedJavaField;@724f57db
hasIdentity: true
objectId: 1
stamp: a!# Ljava/util/SubList$1;
type: HotSpotType<Ljava/util/SubList$1;, resolved>
=== Inputs ===
=== Succesors ===
=== Usages ===
?660 ?632 ?739 
=== Predecessor ===
- >@ <|@
instruction <@VirtualInstance|@org.graalvm.compiler.nodes.virtual.VirtualInstanceNode>@  <|@  <|@
tid ?632 <|@
d <@d|@=== Debug Properties ===
bci: 15
code: ResolvedJavaMethodBytecode<SubList.listIterator(int)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: AbstractList.java
sourceLine: 698
stackSize: 1
=== Inputs ===
outerFrameState: ?594 
values: - - a736 
=== Succesors ===
=== Usages ===
?660 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?594 values: - - a736  <|@  <|@
tid ?660 <|@
d <@d|@=== Debug Properties ===
bci: 34
code: ResolvedJavaMethodBytecode<SubList$1.<init>(SubList, int)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: AbstractList.java
sourceLine: 699
stackSize: 1
=== Inputs ===
outerFrameState: ?632 
values: - - - a736 
=== Succesors ===
=== Usages ===
?669 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?632 values: - - - a736  <|@  <|@
tid ?669 <|@
d <@d|@=== Debug Properties ===
bci: 2
code: ResolvedJavaMethodBytecode<AbstractList.listIterator(int)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: AbstractList.java
sourceLine: 325
stackSize: 0
=== Inputs ===
outerFrameState: ?660 
values: a2631 i2635 
=== Succesors ===
=== Usages ===
?899 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?660 values: a2631 i2635  <|@  <|@
tid ?739 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a736 
values: - - a1 
=== Succesors ===
=== Usages ===
?899 
=== Predecessor ===
- >@ <|@
instruction <@VirtualObjectState|@org.graalvm.compiler.virtual.nodes.VirtualObjectState>@ object: a736 values: - - a1  <|@  <|@
tid ?899 <|@
d <@d|@=== Debug Properties ===
bci: 9
code: ResolvedJavaMethodBytecode<AbstractList.rangeCheckForAdd(int)>
duringCall: false
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
rethrowException: false
sourceFile: AbstractList.java
sourceLine: 604
stackSize: 2
=== Inputs ===
outerFrameState: ?669 
values: a2631 i2635 i2635 i902 
virtualObjectMappings: ?739 
=== Succesors ===
=== Usages ===
a2438 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?669 values: a2631 i2635 i2635 i902 virtualObjectMappings: ?739  <|@  <|@
f <@~|@floating>@ <|@
tid i2563 <|@
result int[10|0xa] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 10
stableDimension: 0
stamp: i32 [10] ⇊000000000000000a ⇈000000000000000a
stampKind: i32
value: int[10|0xa]
=== Inputs ===
=== Succesors ===
=== Usages ===
a2438 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2438 <|@
result v54|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?899 
arguments: v2370 i2563 i20 
=== Succesors ===
next: j2439 
=== Usages ===
j2439 
=== Predecessor ===
v2433 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?899 arguments: v2370 i2563 i20 #next: j2439  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2439 <|@
result v54|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a2438 
=== Succesors ===
next: v2449 
=== Usages ===
j2448 
=== Predecessor ===
a2438 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a2438 #next: v2449  <|@  <|@
f <@*|@fixed>@ <|@
tid v2449 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2446 
=== Predecessor ===
j2439 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v12|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[10|0xa] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 9]
stack: v45|DWORD v51|DWORD 
locals: v43|DWORD[.] v45|DWORD 
java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
locals: v43|DWORD[.] v45|DWORD 
java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
stack: vobject:SubList$1:0{val$index=int[0|0x0],i=Object[null],this$0=v0|QWORD[.]} 
locals: - - - 
java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
stack: vobject:SubList$1:0{val$index=int[0|0x0],i=Object[null],this$0=v0|QWORD[.]} 
locals: - - 
java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
locals: v0|QWORD[.] 
java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
locals: v0|QWORD[.] 
java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
locals: - v1|QWORD[.] - v42|QWORD[.] - - 
vobject:SubList$1:0{val$index=int[0|0x0],i=Object[null],this$0=v0|QWORD[.]} Ljava/util/SubList$1; int[0|0x0] Object[null] v0|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:9, 2, 34, 15, 2, 1, 34] <|@ <|@
      nr   -1  <|@ instruction v54|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v54|QWORD[.]] destination: B56 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" 
    xhandlers
    flags 
    probability 4588044490178509359
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2434 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2444 
=== Usages ===
=== Predecessor ===
v2435 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2444  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2444 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2772 
value: j2561 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2441 
=== Usages ===
=== Predecessor ===
v2434 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2772 value: j2561 stateAfter: - lastLocationAccess: - #next: v2441  <|@  <|@
f <@~|@floating>@ <|@
tid v2793 <|@
result [v52|QWORD + 248] <|@
d <@d|@=== Debug Properties ===
displacement: 248
scale: Times1
stamp: void*
=== Inputs ===
base: j2442 
index: - 
=== Succesors ===
=== Usages ===
v2441 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2442 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2441 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v2793 
=== Succesors ===
next: v2447 
=== Usages ===
=== Predecessor ===
v2444 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v2793 #next: v2447  <|@  <|@
f <@*|@fixed>@ <|@
tid v2447 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2446 
=== Predecessor ===
v2441 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v53|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v52|QWORD + 248] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v52|QWORD] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" "B56" 
    successors "B64" 
    xhandlers
    flags 
    probability 4588124123200152944
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j2448 <|@
result v55|QWORD[*] <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2446 
values: j2442 j2439 
=== Succesors ===
=== Usages ===
v2803 v2775 j1864 a1862 v2776 v2794 v2795 v2796 v2797 v2798 v2799 v2800 v2801 v2802 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2446 values: j2442 j2439  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2446 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2447 v2449 
=== Succesors ===
next: a1862 
=== Usages ===
j2448 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2447 v2449 #next: a1862  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1862 <|@
result v56|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j2448 
=== Succesors ===
next: a1865 
=== Usages ===
a1876 
=== Predecessor ===
v2446 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j2448 #next: a1865  <|@  <|@
f <@~|@floating>@ <|@
tid j1022 <|@
result long[24|0x18] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.ArrayList$SubList$1.hasNext(ArrayList.java:1109) [bci: 8]
at java.util.AbstractCollection.toArray(AbstractCollection.java:183) [bci: 51]
rawvalue: 24
stableDimension: 0
stamp: i64 [24] ⇊0000000000000018 ⇈0000000000000018
stampKind: i64
value: long[24|0x18]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1864 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1864 <|@
result v57|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j2448 
y: j1022 
=== Succesors ===
=== Usages ===
a1865 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2448 y: j1022  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1865 <|@
result v58|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j1864 
=== Succesors ===
next: j2458 
=== Usages ===
a1877 a1868 
=== Predecessor ===
a1862 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j1864 #next: j2458  <|@  <|@
f <@~|@floating>@ <|@
tid v1897 <|@
result v59|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 128]
rawvalue: meta{HotSpotType<Ljava/util/SubList$1;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Ljava/util/SubList$1;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
j2454 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j2454 <|@
result v59|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
input: v1897 
=== Succesors ===
=== Usages ===
v2774 
=== Predecessor ===
- >@ <|@
instruction <@PointerCast|@org.graalvm.compiler.hotspot.word.PointerCastNode>@ input: v1897  <|@  <|@
f <@~|@floating>@ <|@
tid v2774 <|@
result [v59|QWORD + 168] <|@
d <@d|@=== Debug Properties ===
displacement: 168
scale: Times1
stamp: void*
=== Inputs ===
base: j2454 
index: - 
=== Succesors ===
=== Usages ===
j2458 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2454 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2458 <|@
result v60|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v2774 
=== Succesors ===
next: v2459 
=== Usages ===
v2459 
=== Predecessor ===
a1865 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2774 #next: v2459  <|@  <|@
f <@~|@floating>@ <|@
tid v2775 <|@
result [v55|QWORD[*]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j2448 
index: - 
=== Succesors ===
=== Usages ===
v2459 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2448 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2459 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2775 
value: j2458 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2462 
=== Usages ===
=== Predecessor ===
j2458 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2775 value: j2458 stateAfter: - lastLocationAccess: - #next: v2462  <|@  <|@
f <@~|@floating>@ <|@
tid v2776 <|@
result [v55|QWORD[*] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j2448 
index: - 
=== Succesors ===
=== Usages ===
v2462 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2448 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2462 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2776 
value: v2566 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2466 
=== Usages ===
=== Predecessor ===
v2459 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2776 value: v2566 stateAfter: - lastLocationAccess: - #next: v2466  <|@  <|@
f <@~|@floating>@ <|@
tid v2794 <|@
result [v55|QWORD[*] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j2448 
index: - 
=== Succesors ===
=== Usages ===
v2466 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2448 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2466 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2794 
value: i21 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2468 
=== Usages ===
=== Predecessor ===
v2462 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2794 value: i21 stateAfter: - lastLocationAccess: - #next: v2468  <|@  <|@
f <@~|@floating>@ <|@
tid v2795 <|@
result [v55|QWORD[*] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j2448 
index: - 
=== Succesors ===
=== Usages ===
v2468 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2448 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a1868 <|@
result v61|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Compress
stamp: n -
=== Inputs ===
value: a1865 
=== Succesors ===
=== Usages ===
v2468 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1865  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2468 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2795 
value: a1868 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2470 
=== Usages ===
=== Predecessor ===
v2466 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2795 value: a1868 stateAfter: - lastLocationAccess: - #next: v2470  <|@  <|@
f <@~|@floating>@ <|@
tid v2796 <|@
result [v55|QWORD[*] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: j2448 
index: - 
=== Succesors ===
=== Usages ===
v2470 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2448 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a1869 <|@
result v62|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Compress
stamp: n! Ljava/util/AbstractCollection;
=== Inputs ===
value: a1 
=== Succesors ===
=== Usages ===
v2470 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2470 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2796 
value: a1869 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j2475 
=== Usages ===
=== Predecessor ===
v2468 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2796 value: a1869 stateAfter: - lastLocationAccess: - #next: j2475  <|@  <|@
f <@~|@floating>@ <|@
tid v1933 <|@
result v63|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.SubList$1.nextIndex(AbstractList.java:724) [bci: 4]
at java.util.SubList$1.hasNext(AbstractList.java:702) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:183) [bci: 51]
rawvalue: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
j2471 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j2471 <|@
result v63|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
input: v1933 
=== Succesors ===
=== Usages ===
v2777 
=== Predecessor ===
- >@ <|@
instruction <@PointerCast|@org.graalvm.compiler.hotspot.word.PointerCastNode>@ input: v1933  <|@  <|@
f <@~|@floating>@ <|@
tid v2777 <|@
result [v63|QWORD + 168] <|@
d <@d|@=== Debug Properties ===
displacement: 168
scale: Times1
stamp: void*
=== Inputs ===
base: j2471 
index: - 
=== Succesors ===
=== Usages ===
j2475 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2471 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2475 <|@
result v64|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v2777 
=== Succesors ===
next: v2476 
=== Usages ===
v2476 
=== Predecessor ===
v2470 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2777 #next: v2476  <|@  <|@
f <@~|@floating>@ <|@
tid v2797 <|@
result [v55|QWORD[*] + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: j2448 
index: - 
=== Succesors ===
=== Usages ===
v2476 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2448 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2476 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2797 
value: j2475 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2479 
=== Usages ===
=== Predecessor ===
j2475 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2797 value: j2475 stateAfter: - lastLocationAccess: - #next: v2479  <|@  <|@
f <@~|@floating>@ <|@
tid v2798 <|@
result [v55|QWORD[*] + 32] <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times1
stamp: void*
=== Inputs ===
base: j2448 
index: - 
=== Succesors ===
=== Usages ===
v2479 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2448 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2479 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2798 
value: v2572 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2483 
=== Usages ===
=== Predecessor ===
v2476 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2798 value: v2572 stateAfter: - lastLocationAccess: - #next: v2483  <|@  <|@
f <@~|@floating>@ <|@
tid v2799 <|@
result [v55|QWORD[*] + 36] <|@
d <@d|@=== Debug Properties ===
displacement: 36
scale: Times1
stamp: void*
=== Inputs ===
base: j2448 
index: - 
=== Succesors ===
=== Usages ===
v2483 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2448 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2483 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2799 
value: i2635 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2485 
=== Usages ===
=== Predecessor ===
v2479 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2799 value: i2635 stateAfter: - lastLocationAccess: - #next: v2485  <|@  <|@
f <@~|@floating>@ <|@
tid v2800 <|@
result [v55|QWORD[*] + 40] <|@
d <@d|@=== Debug Properties ===
displacement: 40
scale: Times1
stamp: void*
=== Inputs ===
base: j2448 
index: - 
=== Succesors ===
=== Usages ===
v2485 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2448 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid i507 <|@
result int[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.ArrayList$SubList$1.<init>(ArrayList.java:1105) [bci: 28]
at java.util.ArrayList$SubList.listIterator(ArrayList.java:1103) [bci: 21]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.ArrayList$SubList.iterator(ArrayList.java:1095) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1] ⇊00000000ffffffff
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v2485 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2485 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2800 
value: i507 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2487 
=== Usages ===
=== Predecessor ===
v2483 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2800 value: i507 stateAfter: - lastLocationAccess: - #next: v2487  <|@  <|@
f <@~|@floating>@ <|@
tid v2801 <|@
result [v55|QWORD[*] + 44] <|@
d <@d|@=== Debug Properties ===
displacement: 44
scale: Times1
stamp: void*
=== Inputs ===
base: j2448 
index: - 
=== Succesors ===
=== Usages ===
v2487 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2448 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2487 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2801 
value: i2632 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2489 
=== Usages ===
=== Predecessor ===
v2485 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2801 value: i2632 stateAfter: - lastLocationAccess: - #next: v2489  <|@  <|@
f <@~|@floating>@ <|@
tid v2802 <|@
result [v55|QWORD[*] + 48] <|@
d <@d|@=== Debug Properties ===
displacement: 48
scale: Times1
stamp: void*
=== Inputs ===
base: j2448 
index: - 
=== Succesors ===
=== Usages ===
v2489 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2448 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2489 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2802 
value: a2631 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2491 
=== Usages ===
=== Predecessor ===
v2487 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2802 value: a2631 stateAfter: - lastLocationAccess: - #next: v2491  <|@  <|@
f <@~|@floating>@ <|@
tid v2803 <|@
result [v55|QWORD[*] + 52] <|@
d <@d|@=== Debug Properties ===
displacement: 52
scale: Times1
stamp: void*
=== Inputs ===
base: j2448 
index: - 
=== Succesors ===
=== Usages ===
v2491 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2448 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2491 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2803 
value: a2631 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a1876 
=== Usages ===
=== Predecessor ===
v2489 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2803 value: a2631 stateAfter: - lastLocationAccess: - #next: a1876  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1876 <|@
result v56|QWORD[.] <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a1862 
=== Succesors ===
next: a1877 
=== Usages ===
a270 
=== Predecessor ===
v2491 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a1862 #next: a1877  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1877 <|@
result v58|QWORD[.] <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a1865 
=== Succesors ===
next: v1878 
=== Usages ===
=== Predecessor ===
a1876 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a1865 #next: v1878  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1878 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v732 
=== Usages ===
=== Predecessor ===
a1877 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v732  <|@  <|@
f <@*|@fixed>@ <|@
tid v732 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v267 
=== Predecessor ===
v1878 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v55|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v56|QWORD[.] = MOVE v55|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v57|QWORD[*] = LEA [v55|QWORD[*] + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v58|QWORD[.] = MOVE v57|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v59|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/SubList$1;, resolved>} <|@ <|@
      nr   -1  <|@ instruction v60|QWORD = MOV [v59|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v55|QWORD[*]], y: v60|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v55|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/SubList$1;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v55|QWORD[*] + 12], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v61|DWORD[.] = COMPRESSPOINTER (input: v58|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@68a0169d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v55|QWORD[*] + 16], y: v61|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v62|DWORD[.] = COMPRESSPOINTER (input: v0|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@68a0169d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v55|QWORD[*] + 20], y: v62|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v63|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>} <|@ <|@
      nr   -1  <|@ instruction v64|QWORD = MOV [v63|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v55|QWORD[*] + 24], y: v64|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v55|QWORD[*] + 32] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v55|QWORD[*] + 36], y: v45|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v55|QWORD[*] + 40] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v55|QWORD[*] + 44], y: v44|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v55|QWORD[*] + 48], y: v43|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v55|QWORD[*] + 52], y: v43|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v56|QWORD[.], v42|QWORD[.]] destination: B58 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1551 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Lorg/graalvm/compiler/graph/NodeInputList; target_method=size target_method_class=Lorg/graalvm/compiler/graph/NodeList; position=at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2222 
=== Usages ===
=== Predecessor ===
v1552 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2222  <|@  <|@
f <@~|@floating>@ <|@
tid i2223 <|@
result int[-333107|0xfffffffffffaeacd] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -333107
stableDimension: 0
stamp: i32 [-333107] ⇊00000000fffaeacd ⇈00000000fffaeacd
stampKind: i32
value: int[-333107|0xfffffffffffaeacd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2203 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2222 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2200 
=== Predecessor ===
v1551 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-333107|0xfffffffffffaeacd]] destination: B59 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1535 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=null target_method=listIterator target_method_class=Ljava/util/AbstractList; position=at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2214 
=== Usages ===
=== Predecessor ===
v1536 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2214  <|@  <|@
f <@~|@floating>@ <|@
tid i2215 <|@
result int[-330035|0xfffffffffffaf6cd] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -330035
stableDimension: 0
stamp: i32 [-330035] ⇊00000000fffaf6cd ⇈00000000fffaf6cd
stampKind: i32
value: int[-330035|0xfffffffffffaf6cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2203 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2214 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2200 
=== Predecessor ===
v1535 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-330035|0xfffffffffffaf6cd]] destination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1523 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.SubList.checkForComodification(AbstractList.java:768) [bci: 11]
at java.util.SubList.listIterator(AbstractList.java:695) [bci: 1]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2208 
=== Usages ===
=== Predecessor ===
v1524 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2208  <|@  <|@
f <@~|@floating>@ <|@
tid i2209 <|@
result int[-327443|0xfffffffffffb00ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -327443
stableDimension: 0
stamp: i32 [-327443] ⇊00000000fffb00ed ⇈00000000fffb00ed
stampKind: i32
value: int[-327443|0xfffffffffffb00ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2203 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2208 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2200 
=== Predecessor ===
v1523 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-327443|0xfffffffffffb00ed]] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B39" "B61" "B41" "B60" "B45" "B53" "B50" "B59" 
    successors 
    xhandlers
    flags 
    probability 2368893403996880896
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i2203 <|@
result v65|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-333843 - -327443] ⇊00000000fffa00c5 ⇈00000000fffbfffd
valueDescription: i32
=== Inputs ===
merge: v2200 
values: i2207 i2209 i2211 i2215 i2217 i2219 i2221 i2223 
=== Succesors ===
=== Usages ===
v2205 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2200 values: i2207 i2209 i2211 i2215 i2217 i2219 i2221 i2223  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2200 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2206 v2208 v2210 v2214 v2216 v2218 v2220 v2222 
=== Succesors ===
next: v2205 
=== Usages ===
i2203 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2206 v2208 v2210 v2214 v2216 v2218 v2220 v2222 #next: v2205  <|@  <|@
f <@*|@fixed>@ <|@
tid v2205 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?838 
actionAndReason: i2203 
speculation: a2101 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v2200 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?838 actionAndReason: i2203 speculation: a2101  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v65|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v65|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 32]
stack: v42|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] - - - - 
>@ <|@ instruction DEOPT info [bci:32] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B64" 
    xhandlers
    flags 
    probability 4576077253934364556
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v588 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: a70 
=== Usages ===
=== Predecessor ===
v589 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a70  <|@  <|@
tid v1305 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
returnStamp: a - (unchecked=a Ljava/util/Iterator;)
signature: [Ljdk.vm.ci.meta.JavaType;@20ee093c
stamp: void
targetMethod: HotSpotMethod<AbstractCollection.iterator()>
=== Inputs ===
arguments: a1 
=== Succesors ===
=== Usages ===
a70 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1  <|@  <|@
tid ?2092 <|@
d <@d|@=== Debug Properties ===
bci: 34
code: ResolvedJavaMethodBytecode<AbstractCollection.toArray(Object[])>
duringCall: true
localsSize: 6
locksSize: 0
rethrowException: false
sourceFile: AbstractCollection.java
sourceLine: 180
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - a2 - a1445 - - 
=== Succesors ===
=== Usages ===
a70 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - a2 - a1445 - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a70 <|@
result v66|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 34
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
polymorphic: false
stamp: a -
targetMethod: Direct#AbstractCollection.iterator
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1305 
stateDuring: ?2092 
=== Succesors ===
next: v269 
=== Usages ===
a270 
=== Predecessor ===
v588 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1305 stateDuring: ?2092 #next: v269  <|@  <|@
f <@*|@fixed>@ <|@
tid v269 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v267 
=== Predecessor ===
a70 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
locals: - v1|QWORD[.] - v42|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<AbstractCollection.iterator()> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:34] <|@ <|@
      nr   -1  <|@ instruction v66|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v66|QWORD[.], v42|QWORD[.]] destination: B63 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" "B32" "B58" 
    successors "B65" "B66" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a270 <|@
result v67|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: a -
valueDescription: a -
=== Inputs ===
merge: v267 
values: a70 a1804 a1876 
=== Succesors ===
=== Usages ===
?268 ?76 j2514 ?777 ?369 ?280 ?764 ?93 v2778 ?788 v2722 ?802 v2706 j2504 v2698 v2697 v2704 v2700 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v267 values: a70 a1804 a1876  <|@  <|@
f <@~|@floating>@ <|@
tid a843 <|@
result v68|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a! [Ljava/lang/Object;
valueDescription: a -
=== Inputs ===
merge: v267 
values: a1445 a1444 a1445 
=== Succesors ===
=== Usages ===
?76 v2729 ?280 ?369 ?369 ?764 ?764 v2779 ?93 v952 v102 v867 ?268 ?280 v2696 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v267 values: a1445 a1444 a1445  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v267 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v269 v275 v732 
=== Succesors ===
next: i2640 
=== Usages ===
a270 a843 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v269 v275 v732 #next: i2640  <|@  <|@
f <@~|@floating>@ <|@
tid v2696 <|@
result [v68|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a843 
index: - 
=== Succesors ===
=== Usages ===
i2640 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a843 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2640 <|@
result v69|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 45]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v2696 
=== Succesors ===
next: v2608 
=== Usages ===
v78 v1466 j1453 
=== Predecessor ===
v267 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2696 #next: v2608  <|@  <|@
f <@~|@floating>@ <|@
tid j1453 <|@
result v70|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: true
inputBits: 32
resultBits: 64
stamp: i64 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
value: i2640 
=== Succesors ===
=== Usages ===
j1457 v1459 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i2640  <|@  <|@
f <@~|@floating>@ <|@
tid j1456 <|@
result long[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -1
stableDimension: 0
stamp: i64 [-1] ⇊ffffffffffffffff
stampKind: i64
value: long[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1457 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1457 <|@
result v71|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-1 - 2147483646]
=== Inputs ===
x: j1453 
y: j1456 
=== Succesors ===
=== Usages ===
v1459 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1453 y: j1456  <|@  <|@
f <@~|@floating>@ <|@
tid v1459 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1457 
y: j1453 
=== Succesors ===
=== Usages ===
v2608 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j1457 y: j1453  <|@  <|@
tid ?268 <|@
d <@d|@=== Debug Properties ===
bci: 37
code: ResolvedJavaMethodBytecode<AbstractCollection.toArray(Object[])>
duringCall: false
localsSize: 6
locksSize: 0
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
rethrowException: false
sourceFile: AbstractCollection.java
sourceLine: 180
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: - a2 - a843 - - a270 
=== Succesors ===
=== Usages ===
v2196 v2641 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - a2 - a843 - - a270  <|@  <|@
f <@*|@fixed>@ <|@
tid v2608 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v1459 
=== Succesors ===
trueSuccessor: v2604 
falseSuccessor: v2607 
=== Usages ===
=== Predecessor ===
i2640 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1459 #trueSuccessor: v2604 #falseSuccessor: v2607  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v67|QWORD[.], v68|QWORD[.]] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v69|DWORD = MOV [v68|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v70|QWORD = MOV v69|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v71|QWORD = DEC v70|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v70|QWORD, y: v71|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: |>| trueDestination: B64 -> B65 falseDestination: B64 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B68" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2604 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2602 
=== Usages ===
=== Predecessor ===
v2608 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2602  <|@  <|@
f <@*|@fixed>@ <|@
tid v2602 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2601 
=== Predecessor ===
v2604 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B65 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B67" "B146" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2607 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2606 
=== Usages ===
=== Predecessor ===
v2608 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2606  <|@  <|@
f <@~|@floating>@ <|@
tid v1466 <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2640 
y: i21 
=== Succesors ===
=== Usages ===
v2606 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i2640 y: i21  <|@  <|@
f <@*|@fixed>@ <|@
tid v2606 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1466 
=== Succesors ===
trueSuccessor: v2605 
falseSuccessor: v1559 
=== Usages ===
=== Predecessor ===
v2607 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1466 #trueSuccessor: v2605 #falseSuccessor: v1559  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v69|DWORD, y: v69|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B66 -> B67 falseDestination: B66 -> B146 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B68" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2605 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2603 
=== Usages ===
=== Predecessor ===
v2606 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2603  <|@  <|@
f <@*|@fixed>@ <|@
tid v2603 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2601 
=== Predecessor ===
v2605 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B67 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B65" "B67" 
    successors "B69" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2601 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2602 v2603 
=== Succesors ===
next: v2641 
=== Usages ===
v1465 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2602 v2603 #next: v2641  <|@  <|@
f <@~|@floating>@ <|@
tid v2778 <|@
result [v67|QWORD[.] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a270 
index: - 
=== Succesors ===
=== Usages ===
v2641 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a270 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2641 <|@
result v72|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 128]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?268 
guard: - 
address: v2778 
=== Succesors ===
next: v2642 
=== Usages ===
v2586 v2584 v2585 v2609 v2610 
=== Predecessor ===
v2601 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?268 guard: - address: v2778 #next: v2642  <|@  <|@
f <@~|@floating>@ <|@
tid v2779 <|@
result [v68|QWORD[.] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a843 
index: - 
=== Succesors ===
=== Usages ===
v2642 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a843 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2642 <|@
result v73|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v2779 
=== Succesors ===
next: v73 
=== Usages ===
v2728 
=== Predecessor ===
v2641 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2779 #next: v73  <|@  <|@
f <@~|@floating>@ <|@
tid v2728 <|@
result [v73|DWORD * 8 + 232] <|@
d <@d|@=== Debug Properties ===
displacement: 232
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: v2642 
=== Succesors ===
=== Usages ===
v2680 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: v2642  <|@  <|@
f <@~|@floating>@ <|@
tid v2586 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 128]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2641 
y: v2548 
=== Succesors ===
=== Usages ===
v184 v150 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2641 y: v2548  <|@  <|@
f <@~|@floating>@ <|@
tid v2706 <|@
result [v67|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a270 
index: - 
=== Succesors ===
=== Usages ===
v1054 a2653 i2677 v1177 a2685 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a270 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v2704 <|@
result [v67|QWORD[.] + 28] <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: a270 
index: - 
=== Succesors ===
=== Usages ===
i2651 a2670 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a270 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v2700 <|@
result [v67|QWORD[.] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: a270 
index: - 
=== Succesors ===
=== Usages ===
i2648 a2655 a2669 v1164 v1189 a2687 a2691 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a270 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v2697 <|@
result [v67|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a270 
index: - 
=== Succesors ===
=== Usages ===
i2645 v1051 i2672 i2684 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a270 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v2698 <|@
result [v67|QWORD[.] + 32] <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times1
stamp: void*
=== Inputs ===
base: a270 
index: - 
=== Succesors ===
=== Usages ===
a2643 a2682 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a270 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid i1996 <|@
result int[24|0x18] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.secondarySuperCacheOffset(GraalHotSpotVMConfig) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:75) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:216) [bci: 77]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
rawvalue: 24
stableDimension: 0
stamp: i32 [24] ⇊0000000000000018 ⇈0000000000000018
stampKind: i32
value: int[24|0x18]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1997 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i2511 <|@
result byte[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1445) [bci: 43]
at java.util.HashMap$KeyIterator.next(HashMap.java:1466) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
rawvalue: 0
stableDimension: 0
stamp: i8 [0] ⇈0000000000000000
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v2510 v2518 v2528 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i2505 <|@
result int[9|0x9] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.cardTableShift(GraalHotSpotVMConfig) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1445) [bci: 43]
at java.util.HashMap$KeyIterator.next(HashMap.java:1466) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
rawvalue: 9
stableDimension: 0
stamp: i32 [9] ⇊0000000000000009 ⇈0000000000000009
stampKind: i32
value: int[9|0x9]
=== Inputs ===
=== Succesors ===
=== Usages ===
j2506 j2515 j2525 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j2509 <|@
result v74|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.loadLongConfigValue(int) [bci: -1]
at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.cardTableAddress(GraalHotSpotVMConfigNode.java:114) [bci: 6]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:133) [bci: 7]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1445) [bci: 43]
at java.util.HashMap$KeyIterator.next(HashMap.java:1466) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
rawvalue: 4682670080
stableDimension: 0
stamp: i64 [4682670080] ⇊00000001171be000 ⇈00000001171be000
stampKind: i64
value: long[4682670080|0x1171be000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v2782 v2783 v2785 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v2583 <|@
result meta{HotSpotType<Ljava/util/HashMap$KeyIterator;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 128]
rawvalue: meta{HotSpotType<Ljava/util/HashMap$KeyIterator;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/HashMap$KeyIterator;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v2584 v2609 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v73 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v74 
=== Predecessor ===
v2642 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 37]
stack: v67|QWORD[.] 
locals: - v1|QWORD[.] - v68|QWORD[.] - - 
>@ <|@ instruction v72|DWORD = MOV [v67|QWORD[.] + 8] size: DWORD state [bci:37] <|@ <|@
      nr   -1  <|@ instruction v73|DWORD = MOV [v68|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v74|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0]] destination: B68 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" "B122" 
    successors "B70" "B130" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4614662322185081950
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i75 <|@
result v75|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v74 
values: i21 i94 
=== Succesors ===
=== Usages ===
?76 v78 ?369 ?764 ?764 v2729 ?93 i94 ?369 ?280 ?280 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v74 values: i21 i94  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v74 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: true
inversionCount: 0
loopFrequency: 3.321744384028121
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v73 
=== Succesors ===
next: v83 
=== Usages ===
i75 v81 v95 v1689 v1684 v1643 v1673 v1613 v1598 v1658 v1653 v1603 v1623 v1573 v1633 v1583 v1588 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v73 #next: v83  <|@  <|@
tid ?76 <|@
d <@d|@=== Debug Properties ===
bci: 42
code: ResolvedJavaMethodBytecode<AbstractCollection.toArray(Object[])>
duringCall: false
localsSize: 6
locksSize: 0
rethrowException: false
sourceFile: AbstractCollection.java
sourceLine: 182
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - a2 - a843 a270 i75 
=== Succesors ===
=== Usages ===
v2132 i2683 i2644 i2647 i2650 v2654 i2656 i2660 i2664 i2667 v2805 i2671 v2686 i2688 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - a2 - a843 a270 i75  <|@  <|@
f <@~|@floating>@ <|@
tid v78 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 46]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i75 
y: i2640 
=== Succesors ===
=== Usages ===
v83 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i75 y: i2640  <|@  <|@
f <@*|@fixed>@ <|@
tid v83 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 46]
stamp: void
trueSuccessorProbability: 0.6989533557102465
=== Inputs ===
condition: v78 
=== Succesors ===
trueSuccessor: v79 
falseSuccessor: v81 
=== Usages ===
=== Predecessor ===
v74 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v78 #trueSuccessor: v79 #falseSuccessor: v81  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v75|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v69|DWORD, y: v75|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.6989533557102465 condition: > trueDestination: B69 -> B70 falseDestination: B69 -> B130 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B71" "B82" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612410522371396702
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v79 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:183) [bci: 49]
stamp: void
=== Inputs ===
=== Succesors ===
next: v184 
=== Usages ===
v1465 
=== Predecessor ===
v83 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v184  <|@  <|@
f <@*|@fixed>@ <|@
tid v184 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/ArrayList$SubList$1; target_method=hasNext target_method_class=Ljava/util/ArrayList$SubList$1; position=at java.util.AbstractCollection.toArray(AbstractCollection.java:183) [bci: 51]
stamp: void
trueSuccessorProbability: 0.8874682121946893
=== Inputs ===
condition: v2586 
=== Succesors ===
trueSuccessor: v178 
falseSuccessor: v183 
=== Usages ===
=== Predecessor ===
v79 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2586 #trueSuccessor: v178 #falseSuccessor: v183  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v72|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList$SubList$1;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.8874682121946893 condition: = trueDestination: B70 -> B71 falseDestination: B70 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B72" "B73" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4611822194529678060
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v178 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/ArrayList$SubList$1; target_method=hasNext target_method_class=Ljava/util/ArrayList$SubList$1; position=at java.util.AbstractCollection.toArray(AbstractCollection.java:183) [bci: 51]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2643 
=== Usages ===
=== Predecessor ===
v184 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2643  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2643 <|@
result v76|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList$SubList$1.this$1
nodeSourcePosition: at java.util.ArrayList$SubList$1.hasNext(ArrayList.java:1109) [bci: 5]
at java.util.AbstractCollection.toArray(AbstractCollection.java:183) [bci: 51]
nullCheck: false
stamp: n# Ljava/util/ArrayList$SubList;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2698 
=== Succesors ===
next: i2644 
=== Usages ===
v2701 v2699 
=== Predecessor ===
v178 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2698 #next: i2644  <|@  <|@
f <@~|@floating>@ <|@
tid v2699 <|@
result [v76|DWORD[.] * 8 + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2643 
=== Succesors ===
=== Usages ===
i2644 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2643  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2644 <|@
result v77|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList$SubList.size
nodeSourcePosition: at java.util.ArrayList$SubList$1.hasNext(ArrayList.java:1109) [bci: 8]
at java.util.AbstractCollection.toArray(AbstractCollection.java:183) [bci: 51]
nullCheck: true
stamp: i32
=== Inputs ===
stateBefore: ?76 
guard: - 
address: v2699 
=== Succesors ===
next: i2645 
=== Usages ===
v245 v339 
=== Predecessor ===
a2643 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?76 guard: - address: v2699 #next: i2645  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2645 <|@
result v78|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList$SubList$1.cursor
nodeSourcePosition: at java.util.ArrayList$SubList$1.hasNext(ArrayList.java:1109) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:183) [bci: 51]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2697 
=== Succesors ===
next: v1574 
=== Usages ===
v245 v339 i345 i349 v1054 
=== Predecessor ===
i2644 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2697 #next: v1574  <|@  <|@
f <@~|@floating>@ <|@
tid v245 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.ArrayList$SubList$1.hasNext(ArrayList.java:1109) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:183) [bci: 51]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2644 
y: i2645 
=== Succesors ===
=== Usages ===
v1574 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i2644 y: i2645  <|@  <|@
f <@*|@fixed>@ <|@
tid v1574 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:183) [bci: 56]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v245 
=== Succesors ===
trueSuccessor: v1573 
falseSuccessor: v1570 
=== Usages ===
=== Predecessor ===
i2645 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v245 #trueSuccessor: v1573 #falseSuccessor: v1570  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v76|DWORD[.] = MOV [v67|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42]
locals: - v1|QWORD[.] - v68|QWORD[.] v67|QWORD[.] v75|DWORD 
>@ <|@ instruction v77|DWORD = MOV [v76|DWORD[.] * 8 + 24] size: DWORD state [bci:42] <|@ <|@
      nr   -1  <|@ instruction v78|DWORD = MOV [v67|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v78|DWORD, y: v77|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B71 -> B72 falseDestination: B71 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B145" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1573 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:183) [bci: 56]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v74 
=== Succesors ===
next: v2135 
=== Usages ===
=== Predecessor ===
v1574 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v74 #next: v2135  <|@  <|@
f <@~|@floating>@ <|@
tid i2136 <|@
result int[-262419|0xfffffffffffbfeed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -262419
stableDimension: 0
stamp: i32 [-262419] ⇊00000000fffbfeed ⇈00000000fffbfeed
stampKind: i32
value: int[-262419|0xfffffffffffbfeed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2130 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2135 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2127 
=== Predecessor ===
v1573 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-262419|0xfffffffffffbfeed]] destination: B72 -> B145 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B74" "B81" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4611822194529678060
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1570 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:183) [bci: 56]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2646 
=== Usages ===
=== Predecessor ===
v1574 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2646  <|@  <|@
f <@~|@floating>@ <|@
tid v2701 <|@
result [v76|DWORD[.] * 8 + 32] <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2643 
=== Succesors ===
=== Usages ===
a2646 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2643  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2646 <|@
result v79|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList$SubList.this$0
nodeSourcePosition: at java.util.ArrayList$SubList$1.checkForComodification(ArrayList.java:1212) [bci: 8]
at java.util.ArrayList$SubList$1.next(ArrayList.java:1114) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
nullCheck: false
stamp: n# Ljava/util/ArrayList;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2701 
=== Succesors ===
next: i2647 
=== Usages ===
v2703 v2702 
=== Predecessor ===
v1570 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2701 #next: i2647  <|@  <|@
f <@~|@floating>@ <|@
tid v2702 <|@
result [v79|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2646 
=== Succesors ===
=== Usages ===
i2647 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2646  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2647 <|@
result v80|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractList.modCount
nodeSourcePosition: at java.util.ArrayList$SubList$1.checkForComodification(ArrayList.java:1212) [bci: 11]
at java.util.ArrayList$SubList$1.next(ArrayList.java:1114) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
nullCheck: true
stamp: i32
=== Inputs ===
stateBefore: ?76 
guard: - 
address: v2702 
=== Succesors ===
next: i2648 
=== Usages ===
v421 
=== Predecessor ===
a2646 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?76 guard: - address: v2702 #next: i2648  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2648 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList$SubList$1.expectedModCount
nodeSourcePosition: at java.util.ArrayList$SubList$1.checkForComodification(ArrayList.java:1212) [bci: 1]
at java.util.ArrayList$SubList$1.next(ArrayList.java:1114) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2700 
=== Succesors ===
next: v1584 
=== Usages ===
v421 
=== Predecessor ===
i2647 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2700 #next: v1584  <|@  <|@
f <@~|@floating>@ <|@
tid v421 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.ArrayList$SubList$1.checkForComodification(ArrayList.java:1212) [bci: 14]
at java.util.ArrayList$SubList$1.next(ArrayList.java:1114) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2647 
y: i2648 
=== Succesors ===
=== Usages ===
v1584 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i2647 y: i2648  <|@  <|@
f <@*|@fixed>@ <|@
tid v1584 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$SubList$1.checkForComodification(ArrayList.java:1212) [bci: 14]
at java.util.ArrayList$SubList$1.next(ArrayList.java:1114) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v421 
=== Succesors ===
trueSuccessor: v1580 
falseSuccessor: v1583 
=== Usages ===
=== Predecessor ===
i2648 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v421 #trueSuccessor: v1580 #falseSuccessor: v1583  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v79|DWORD[.] = MOV [v76|DWORD[.] * 8 + 32] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42]
locals: - v1|QWORD[.] - v68|QWORD[.] v67|QWORD[.] v75|DWORD 
>@ <|@ instruction v80|DWORD = MOV [v79|DWORD[.] * 8 + 12] size: DWORD state [bci:42] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v80|DWORD, y: [v67|QWORD[.] + 20]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B73 -> B74 falseDestination: B73 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B75" "B80" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4611822194529678060
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1580 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$SubList$1.checkForComodification(ArrayList.java:1212) [bci: 14]
at java.util.ArrayList$SubList$1.next(ArrayList.java:1114) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1589 
=== Usages ===
=== Predecessor ===
v1584 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1589  <|@  <|@
f <@~|@floating>@ <|@
tid v339 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.ArrayList$SubList$1.next(ArrayList.java:1116) [bci: 17]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2645 
y: i2644 
=== Succesors ===
=== Usages ===
v1589 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2645 y: i2644  <|@  <|@
f <@*|@fixed>@ <|@
tid v1589 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$SubList$1.next(ArrayList.java:1116) [bci: 17]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v339 
=== Succesors ===
trueSuccessor: v1585 
falseSuccessor: v1588 
=== Usages ===
=== Predecessor ===
v1580 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v339 #trueSuccessor: v1585 #falseSuccessor: v1588  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v77|DWORD, y: v78|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B74 -> B75 falseDestination: B74 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B76" "B79" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4611822194529678060
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1585 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$SubList$1.next(ArrayList.java:1116) [bci: 17]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2649 
=== Usages ===
=== Predecessor ===
v1589 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2649  <|@  <|@
f <@~|@floating>@ <|@
tid v2703 <|@
result [v79|DWORD[.] * 8 + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2646 
=== Succesors ===
=== Usages ===
a2649 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2646  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2649 <|@
result v81|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList.elementData
nodeSourcePosition: at java.util.ArrayList$SubList$1.next(ArrayList.java:1118) [bci: 35]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
nullCheck: false
stamp: n [Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2703 
=== Succesors ===
next: i2650 
=== Usages ===
a1041 v2705 
=== Predecessor ===
v1585 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2703 #next: i2650  <|@  <|@
f <@~|@floating>@ <|@
tid v2705 <|@
result [v81|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2649 
=== Succesors ===
=== Usages ===
i2650 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2649  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2650 <|@
result v82|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.ArrayList$SubList$1.next(ArrayList.java:1119) [bci: 46]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?76 
guard: - 
address: v2705 
=== Succesors ===
next: i2651 
=== Usages ===
v347 v1056 
=== Predecessor ===
a2649 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?76 guard: - address: v2705 #next: i2651  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2651 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList$SubList$1.val$offset
nodeSourcePosition: at java.util.ArrayList$SubList$1.next(ArrayList.java:1119) [bci: 40]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2704 
=== Succesors ===
next: v1599 
=== Usages ===
i345 
=== Predecessor ===
i2650 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2704 #next: v1599  <|@  <|@
f <@~|@floating>@ <|@
tid i345 <|@
result v83|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.util.ArrayList$SubList$1.next(ArrayList.java:1119) [bci: 44]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: i32
=== Inputs ===
x: i2645 
y: i2651 
=== Succesors ===
=== Usages ===
v347 v2707 v1056 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i2645 y: i2651  <|@  <|@
f <@~|@floating>@ <|@
tid v347 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.ArrayList$SubList$1.next(ArrayList.java:1119) [bci: 47]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i345 
y: i2650 
=== Succesors ===
=== Usages ===
v1599 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i345 y: i2650  <|@  <|@
f <@*|@fixed>@ <|@
tid v1599 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$SubList$1.next(ArrayList.java:1119) [bci: 47]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v347 
=== Succesors ===
trueSuccessor: v1595 
falseSuccessor: v1598 
=== Usages ===
=== Predecessor ===
i2651 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v347 #trueSuccessor: v1595 #falseSuccessor: v1598  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v81|DWORD[.] = MOV [v79|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42]
locals: - v1|QWORD[.] - v68|QWORD[.] v67|QWORD[.] v75|DWORD 
>@ <|@ instruction v82|DWORD = MOV [v81|DWORD[.] * 8 + 12] size: DWORD state [bci:42] <|@ <|@
      nr   -1  <|@ instruction v83|DWORD = ADD (x: v78|DWORD, ~y: [v67|QWORD[.] + 28]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v82|DWORD, y: v83|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B75 -> B76 falseDestination: B75 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B77" "B78" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4611822194529678060
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1595 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$SubList$1.next(ArrayList.java:1119) [bci: 47]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1604 
=== Usages ===
=== Predecessor ===
v1599 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1604  <|@  <|@
f <@~|@floating>@ <|@
tid v1056 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.ArrayList$SubList$1.next(ArrayList.java:1122) [bci: 77]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i345 
y: i2650 
=== Succesors ===
=== Usages ===
v1604 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i345 y: i2650  <|@  <|@
f <@*|@fixed>@ <|@
tid v1604 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$SubList$1.next(ArrayList.java:1122) [bci: 77]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1056 
=== Succesors ===
trueSuccessor: v1600 
falseSuccessor: v1603 
=== Usages ===
=== Predecessor ===
v1595 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1056 #trueSuccessor: v1600 #falseSuccessor: v1603  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v82|DWORD, y: v83|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B76 -> B77 falseDestination: B76 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B111" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4611822194529678060
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1600 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$SubList$1.next(ArrayList.java:1122) [bci: 77]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1051 
=== Usages ===
a2652 
=== Predecessor ===
v1604 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1051  <|@  <|@
f <@~|@floating>@ <|@
tid i349 <|@
result v84|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.util.ArrayList$SubList$1.next(ArrayList.java:1121) [bci: 61]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: i32
=== Inputs ===
x: i2645 
y: i20 
=== Succesors ===
=== Usages ===
v1051 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i2645 y: i20  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1051 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: ArrayList$SubList$1.cursor
nodeSourcePosition: at java.util.ArrayList$SubList$1.next(ArrayList.java:1121) [bci: 62]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2697 
value: i349 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1054 
=== Usages ===
=== Predecessor ===
v1600 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2697 value: i349 stateAfter: - lastLocationAccess: - #next: v1054  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1054 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: ArrayList$SubList$1.lastRet
nodeSourcePosition: at java.util.ArrayList$SubList$1.next(ArrayList.java:1122) [bci: 73]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2706 
value: i2645 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a2652 
=== Usages ===
=== Predecessor ===
v1051 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2706 value: i2645 stateAfter: - lastLocationAccess: - #next: a2652  <|@  <|@
f <@~|@floating>@ <|@
tid a1041 <|@
result v85|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.ArrayList$SubList$1.next(ArrayList.java:1118) [bci: 35]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
op: Uncompress
stamp: a [Ljava/lang/Object;
=== Inputs ===
value: a2649 
=== Succesors ===
=== Usages ===
v2707 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2649  <|@  <|@
f <@~|@floating>@ <|@
tid v2707 <|@
result [v85|QWORD[.] + v83|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a1041 
index: i345 
=== Succesors ===
=== Usages ===
a2652 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1041 index: i345  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2652 <|@
result v86|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nodeSourcePosition: at java.util.ArrayList$SubList$1.next(ArrayList.java:1122) [bci: 77]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: v1600 
address: v2707 
=== Succesors ===
next: v287 
=== Usages ===
a1065 a2095 
=== Predecessor ===
v1054 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1600 address: v2707 #next: v287  <|@  <|@
f <@~|@floating>@ <|@
tid a1065 <|@
result v87|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.ArrayList$SubList$1.next(ArrayList.java:1122) [bci: 77]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
op: Uncompress
stamp: a Ljava/lang/Object;
=== Inputs ===
value: a2652 
=== Succesors ===
=== Usages ===
a282 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2652  <|@  <|@
f <@*|@fixed>@ <|@
tid v287 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v279 
=== Predecessor ===
a2652 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v84|DWORD = INC v78|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v67|QWORD[.] + 12], y: v84|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v67|QWORD[.] + 16], y: v78|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v85|QWORD[.] = UNCOMPRESSPOINTER (input: v81|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@68a0169d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v86|DWORD[.] = MOV [v85|QWORD[.] + v83|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v87|QWORD[.] = UNCOMPRESSPOINTER (input: v86|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@68a0169d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v87|QWORD[.], v86|DWORD[.]] destination: B77 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B145" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1603 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$SubList$1.next(ArrayList.java:1122) [bci: 77]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v74 
=== Succesors ===
next: v2147 
=== Usages ===
=== Predecessor ===
v1604 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v74 #next: v2147  <|@  <|@
f <@~|@floating>@ <|@
tid i2148 <|@
result int[-270619|0xfffffffffffbdee5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -270619
stableDimension: 0
stamp: i32 [-270619] ⇊00000000fffbdee5 ⇈00000000fffbdee5
stampKind: i32
value: int[-270619|0xfffffffffffbdee5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2130 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2147 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2127 
=== Predecessor ===
v1603 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-270619|0xfffffffffffbdee5]] destination: B78 -> B145 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B145" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1598 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$SubList$1.next(ArrayList.java:1119) [bci: 47]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v74 
=== Succesors ===
next: v2145 
=== Usages ===
=== Predecessor ===
v1599 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v74 #next: v2145  <|@  <|@
f <@~|@floating>@ <|@
tid i2146 <|@
result int[-268819|0xfffffffffffbe5ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -268819
stableDimension: 0
stamp: i32 [-268819] ⇊00000000fffbe5ed ⇈00000000fffbe5ed
stampKind: i32
value: int[-268819|0xfffffffffffbe5ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2130 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2145 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2127 
=== Predecessor ===
v1598 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-268819|0xfffffffffffbe5ed]] destination: B79 -> B145 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B145" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1588 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$SubList$1.next(ArrayList.java:1116) [bci: 17]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v74 
=== Succesors ===
next: v2141 
=== Usages ===
=== Predecessor ===
v1589 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v74 #next: v2141  <|@  <|@
f <@~|@floating>@ <|@
tid i2142 <|@
result int[-265747|0xfffffffffffbf1ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -265747
stableDimension: 0
stamp: i32 [-265747] ⇊00000000fffbf1ed ⇈00000000fffbf1ed
stampKind: i32
value: int[-265747|0xfffffffffffbf1ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2130 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2141 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2127 
=== Predecessor ===
v1588 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-265747|0xfffffffffffbf1ed]] destination: B80 -> B145 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B145" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1583 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$SubList$1.checkForComodification(ArrayList.java:1212) [bci: 14]
at java.util.ArrayList$SubList$1.next(ArrayList.java:1114) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v74 
=== Succesors ===
next: v2139 
=== Usages ===
=== Predecessor ===
v1584 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v74 #next: v2139  <|@  <|@
f <@~|@floating>@ <|@
tid i2140 <|@
result int[-265491|0xfffffffffffbf2ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -265491
stableDimension: 0
stamp: i32 [-265491] ⇊00000000fffbf2ed ⇈00000000fffbf2ed
stampKind: i32
value: int[-265491|0xfffffffffffbf2ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2130 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2139 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2127 
=== Predecessor ===
v1583 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-265491|0xfffffffffffbf2ed]] destination: B81 -> B145 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B83" "B98" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598378242651655054
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v183 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:183) [bci: 51]
stamp: void
=== Inputs ===
=== Succesors ===
next: v193 
=== Usages ===
=== Predecessor ===
v184 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v193  <|@  <|@
f <@~|@floating>@ <|@
tid v2585 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 128]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2641 
y: v2566 
=== Succesors ===
=== Usages ===
v193 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2641 y: v2566  <|@  <|@
f <@*|@fixed>@ <|@
tid v193 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/SubList$1; target_method=hasNext target_method_class=Ljava/util/SubList$1; position=at java.util.AbstractCollection.toArray(AbstractCollection.java:183) [bci: 51]
stamp: void
trueSuccessorProbability: 0.916333823838554
=== Inputs ===
condition: v2585 
=== Succesors ===
trueSuccessor: v189 
falseSuccessor: v192 
=== Usages ===
=== Predecessor ===
v183 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2585 #trueSuccessor: v189 #falseSuccessor: v192  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v72|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/SubList$1;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.916333823838554 condition: = trueDestination: B82 -> B83 falseDestination: B82 -> B98 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B84" "B97" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597793695504499049
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v189 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/SubList$1; target_method=hasNext target_method_class=Ljava/util/SubList$1; position=at java.util.AbstractCollection.toArray(AbstractCollection.java:183) [bci: 51]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2653 
=== Usages ===
=== Predecessor ===
v193 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2653  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2653 <|@
result v88|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: SubList$1.i
nodeSourcePosition: at java.util.SubList$1.nextIndex(AbstractList.java:724) [bci: 1]
at java.util.SubList$1.hasNext(AbstractList.java:702) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:183) [bci: 51]
nullCheck: false
stamp: n -
=== Inputs ===
stateBefore: - 
guard: - 
address: v2706 
=== Succesors ===
next: v2654 
=== Usages ===
?2093 v2780 v2708 v2711 v2713 v2717 
=== Predecessor ===
v189 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2706 #next: v2654  <|@  <|@
f <@~|@floating>@ <|@
tid v2780 <|@
result [v88|DWORD[.] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2653 
=== Succesors ===
=== Usages ===
v2654 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2653  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2654 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.SubList$1.nextIndex(AbstractList.java:724) [bci: 4]
at java.util.SubList$1.hasNext(AbstractList.java:702) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:183) [bci: 51]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?76 
guard: - 
address: v2780 
=== Succesors ===
next: v1614 
=== Usages ===
v2587 
=== Predecessor ===
a2653 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?76 guard: - address: v2780 #next: v1614  <|@  <|@
f <@~|@floating>@ <|@
tid v2587 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.SubList$1.nextIndex(AbstractList.java:724) [bci: 4]
at java.util.SubList$1.hasNext(AbstractList.java:702) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:183) [bci: 51]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2654 
y: v2572 
=== Succesors ===
=== Usages ===
v1614 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2654 y: v2572  <|@  <|@
f <@*|@fixed>@ <|@
tid v1614 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/AbstractList$ListItr; target_method=nextIndex target_method_class=Ljava/util/AbstractList$ListItr; position=at java.util.SubList$1.nextIndex(AbstractList.java:724) [bci: 4]
at java.util.SubList$1.hasNext(AbstractList.java:702) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:183) [bci: 51]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v2587 
=== Succesors ===
trueSuccessor: v1610 
falseSuccessor: v1613 
=== Usages ===
=== Predecessor ===
v2654 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2587 #trueSuccessor: v1610 #falseSuccessor: v1613  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v88|DWORD[.] = MOV [v67|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42]
locals: - v1|QWORD[.] - v68|QWORD[.] v67|QWORD[.] v75|DWORD 
>@ <|@ instruction CMP [v88|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed} state [bci:42] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B83 -> B84 falseDestination: B83 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B85" "B96" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597793695504499049
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1610 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/AbstractList$ListItr; target_method=nextIndex target_method_class=Ljava/util/AbstractList$ListItr; position=at java.util.SubList$1.nextIndex(AbstractList.java:724) [bci: 4]
at java.util.SubList$1.hasNext(AbstractList.java:702) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:183) [bci: 51]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2655 
=== Usages ===
=== Predecessor ===
v1614 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2655  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2655 <|@
result v89|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: SubList$1.this$0
nodeSourcePosition: at java.util.SubList$1.nextIndex(AbstractList.java:724) [bci: 10]
at java.util.SubList$1.hasNext(AbstractList.java:702) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:183) [bci: 51]
nullCheck: false
stamp: n Ljava/util/SubList;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2700 
=== Succesors ===
next: i2656 
=== Usages ===
v2710 v2709 
=== Predecessor ===
v1610 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2700 #next: i2656  <|@  <|@
f <@~|@floating>@ <|@
tid v2710 <|@
result [v89|DWORD[.] * 8 + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2655 
=== Succesors ===
=== Usages ===
i2656 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2655  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2656 <|@
result v90|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: SubList.size
nodeSourcePosition: at java.util.SubList.access$200(AbstractList.java:613) [bci: 1]
at java.util.SubList$1.hasNext(AbstractList.java:702) [bci: 8]
at java.util.AbstractCollection.toArray(AbstractCollection.java:183) [bci: 51]
nullCheck: true
stamp: i32
=== Inputs ===
stateBefore: ?76 
guard: - 
address: v2710 
=== Succesors ===
next: i2657 
=== Usages ===
v253 
=== Predecessor ===
a2655 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?76 guard: - address: v2710 #next: i2657  <|@  <|@
f <@~|@floating>@ <|@
tid v2709 <|@
result [v89|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2655 
=== Succesors ===
=== Usages ===
i2657 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2655  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2657 <|@
result v91|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: SubList.offset
nodeSourcePosition: at java.util.SubList.access$000(AbstractList.java:613) [bci: 1]
at java.util.SubList$1.nextIndex(AbstractList.java:724) [bci: 13]
at java.util.SubList$1.hasNext(AbstractList.java:702) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:183) [bci: 51]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2709 
=== Succesors ===
next: i2658 
=== Usages ===
i324 
=== Predecessor ===
i2656 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2709 #next: i2658  <|@  <|@
f <@~|@floating>@ <|@
tid v2708 <|@
result [v88|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2653 
=== Succesors ===
=== Usages ===
i2658 v1115 v1134 v1137 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2653  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2658 <|@
result v92|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractList$Itr.cursor
nodeSourcePosition: at java.util.AbstractList$ListItr.nextIndex(AbstractList.java:413) [bci: 1]
at java.util.SubList$1.nextIndex(AbstractList.java:724) [bci: 4]
at java.util.SubList$1.hasNext(AbstractList.java:702) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:183) [bci: 51]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2708 
=== Succesors ===
next: v1624 
=== Usages ===
i324 v1133 v1135 ?2093 v1136 v1124 i528 v1104 v2720 v2716 v1114 
=== Predecessor ===
i2657 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2708 #next: v1624  <|@  <|@
f <@~|@floating>@ <|@
tid i324 <|@
result v93|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at java.util.SubList$1.nextIndex(AbstractList.java:724) [bci: 16]
at java.util.SubList$1.hasNext(AbstractList.java:702) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:183) [bci: 51]
stamp: i32
=== Inputs ===
x: i2658 
y: i2657 
=== Succesors ===
=== Usages ===
v253 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i2658 y: i2657  <|@  <|@
f <@~|@floating>@ <|@
tid v253 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.SubList$1.hasNext(AbstractList.java:702) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:183) [bci: 51]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i324 
y: i2656 
=== Succesors ===
=== Usages ===
v1624 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i324 y: i2656  <|@  <|@
f <@*|@fixed>@ <|@
tid v1624 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:183) [bci: 56]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v253 
=== Succesors ===
trueSuccessor: v1620 
falseSuccessor: v1623 
=== Usages ===
=== Predecessor ===
i2658 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v253 #trueSuccessor: v1620 #falseSuccessor: v1623  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v89|DWORD[.] = MOV [v67|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42]
locals: - v1|QWORD[.] - v68|QWORD[.] v67|QWORD[.] v75|DWORD 
>@ <|@ instruction v90|DWORD = MOV [v89|DWORD[.] * 8 + 20] size: DWORD state [bci:42] <|@ <|@
      nr   -1  <|@ instruction v91|DWORD = MOV [v89|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v92|DWORD = MOV [v88|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v93|DWORD = SUB (x: v92|DWORD, ~y: v91|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v90|DWORD, y: v93|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B84 -> B85 falseDestination: B84 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B86" "B95" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597793695504499049
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1620 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:183) [bci: 56]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2659 
=== Usages ===
=== Predecessor ===
v1624 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2659  <|@  <|@
f <@~|@floating>@ <|@
tid v2711 <|@
result [v88|DWORD[.] * 8 + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2653 
=== Succesors ===
=== Usages ===
a2659 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2653  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2659 <|@
result v94|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractList$Itr.this$0
nodeSourcePosition: at java.util.AbstractList$Itr.checkForComodification(AbstractList.java:385) [bci: 1]
at java.util.AbstractList$Itr.next(AbstractList.java:355) [bci: 1]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
nullCheck: false
stamp: n Ljava/util/AbstractList;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2711 
=== Succesors ===
next: i2660 
=== Usages ===
a1086 v2781 v2712 v2714 v2718 
=== Predecessor ===
v1620 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2711 #next: i2660  <|@  <|@
f <@~|@floating>@ <|@
tid v2712 <|@
result [v94|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2659 
=== Succesors ===
=== Usages ===
i2660 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2659  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2660 <|@
result v95|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractList.modCount
nodeSourcePosition: at java.util.AbstractList$Itr.checkForComodification(AbstractList.java:385) [bci: 4]
at java.util.AbstractList$Itr.next(AbstractList.java:355) [bci: 1]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
nullCheck: true
stamp: i32
=== Inputs ===
stateBefore: ?76 
guard: - 
address: v2712 
=== Succesors ===
next: i2661 
=== Usages ===
v536 
=== Predecessor ===
a2659 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?76 guard: - address: v2712 #next: i2661  <|@  <|@
f <@~|@floating>@ <|@
tid v2713 <|@
result [v88|DWORD[.] * 8 + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2653 
=== Succesors ===
=== Usages ===
i2661 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2653  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2661 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractList$Itr.expectedModCount
nodeSourcePosition: at java.util.AbstractList$Itr.checkForComodification(AbstractList.java:385) [bci: 8]
at java.util.AbstractList$Itr.next(AbstractList.java:355) [bci: 1]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2713 
=== Succesors ===
next: v1634 
=== Usages ===
v536 
=== Predecessor ===
i2660 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2713 #next: v1634  <|@  <|@
f <@~|@floating>@ <|@
tid v536 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.AbstractList$Itr.checkForComodification(AbstractList.java:385) [bci: 11]
at java.util.AbstractList$Itr.next(AbstractList.java:355) [bci: 1]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2660 
y: i2661 
=== Succesors ===
=== Usages ===
v1634 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i2660 y: i2661  <|@  <|@
f <@*|@fixed>@ <|@
tid v1634 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList$Itr.checkForComodification(AbstractList.java:385) [bci: 11]
at java.util.AbstractList$Itr.next(AbstractList.java:355) [bci: 1]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v536 
=== Succesors ===
trueSuccessor: v1630 
falseSuccessor: v1633 
=== Usages ===
=== Predecessor ===
i2661 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v536 #trueSuccessor: v1630 #falseSuccessor: v1633  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v94|DWORD[.] = MOV [v88|DWORD[.] * 8 + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42]
locals: - v1|QWORD[.] - v68|QWORD[.] v67|QWORD[.] v75|DWORD 
>@ <|@ instruction v95|DWORD = MOV [v94|DWORD[.] * 8 + 12] size: DWORD state [bci:42] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v95|DWORD, y: [v88|DWORD[.] * 8 + 20]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B85 -> B86 falseDestination: B85 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B87" "B90" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597793695504499049
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1630 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList$Itr.checkForComodification(AbstractList.java:385) [bci: 11]
at java.util.AbstractList$Itr.next(AbstractList.java:355) [bci: 1]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2662 
=== Usages ===
=== Predecessor ===
v1634 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2662  <|@  <|@
f <@~|@floating>@ <|@
tid v2781 <|@
result [v94|DWORD[.] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2659 
=== Succesors ===
=== Usages ===
v2662 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2659  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2662 <|@
result v96|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v2781 
=== Succesors ===
next: v553 
=== Usages ===
v2589 v2588 
=== Predecessor ===
v1630 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2781 #next: v553  <|@  <|@
f <@~|@floating>@ <|@
tid v2588 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2662 
y: v2554 
=== Succesors ===
=== Usages ===
v553 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2662 y: v2554  <|@  <|@
f <@~|@floating>@ <|@
tid i528 <|@
result v97|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.util.AbstractList$Itr.next(AbstractList.java:360) [bci: 26]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: i32
=== Inputs ===
x: i2658 
y: i20 
=== Succesors ===
=== Usages ===
v1137 v1115 v1134 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i2658 y: i20  <|@  <|@
f <@~|@floating>@ <|@
tid v2717 <|@
result [v88|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2653 
=== Succesors ===
=== Usages ===
v1114 v1133 v1136 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2653  <|@  <|@
f <@*|@fixed>@ <|@
tid v553 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/Arrays$ArrayList; target_method=get target_method_class=Ljava/util/Arrays$ArrayList; position=at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: void
trueSuccessorProbability: 0.9304948647614187
=== Inputs ===
condition: v2588 
=== Succesors ===
trueSuccessor: v546 
falseSuccessor: v552 
=== Usages ===
=== Predecessor ===
v2662 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2588 #trueSuccessor: v546 #falseSuccessor: v552  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v96|DWORD = MOV [v94|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v97|DWORD = INC v92|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v96|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9304948647614187 condition: = trueDestination: B86 -> B87 falseDestination: B86 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B88" "B89" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597194166782228429
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v546 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/Arrays$ArrayList; target_method=get target_method_class=Ljava/util/Arrays$ArrayList; position=at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2663 
=== Usages ===
=== Predecessor ===
v553 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2663  <|@  <|@
f <@~|@floating>@ <|@
tid v2714 <|@
result [v94|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2659 
=== Succesors ===
=== Usages ===
a2663 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2659  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2663 <|@
result v98|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Arrays$ArrayList.a
nodeSourcePosition: at java.util.Arrays$ArrayList.get(Arrays.java:3841) [bci: 1]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
nullCheck: false
stamp: n [Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2714 
=== Succesors ===
next: i2664 
=== Usages ===
a1098 v2715 
=== Predecessor ===
v546 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2714 #next: i2664  <|@  <|@
f <@~|@floating>@ <|@
tid v2715 <|@
result [v98|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2663 
=== Succesors ===
=== Usages ===
i2664 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2663  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2664 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.Arrays$ArrayList.get(Arrays.java:3841) [bci: 5]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?76 
guard: - 
address: v2715 
=== Succesors ===
next: v1644 
=== Usages ===
v1104 
=== Predecessor ===
a2663 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?76 guard: - address: v2715 #next: v1644  <|@  <|@
f <@~|@floating>@ <|@
tid v1104 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.Arrays$ArrayList.get(Arrays.java:3841) [bci: 5]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2658 
y: i2664 
=== Succesors ===
=== Usages ===
v1644 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i2658 y: i2664  <|@  <|@
f <@*|@fixed>@ <|@
tid v1644 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays$ArrayList.get(Arrays.java:3841) [bci: 5]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1104 
=== Succesors ===
trueSuccessor: v1640 
falseSuccessor: v1643 
=== Usages ===
=== Predecessor ===
i2664 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1104 #trueSuccessor: v1640 #falseSuccessor: v1643  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v98|DWORD[.] = MOV [v94|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42]
locals: - v1|QWORD[.] - v68|QWORD[.] v67|QWORD[.] v75|DWORD 
>@ <|@ instruction CMP (x: v92|DWORD, y: [v98|DWORD[.] * 8 + 12]) size: DWORD state [bci:42] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B87 -> B88 falseDestination: B87 -> B89 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B111" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597194166782228429
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1640 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays$ArrayList.get(Arrays.java:3841) [bci: 5]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1114 
=== Usages ===
a2665 
=== Predecessor ===
v1644 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1114  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1114 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: AbstractList$Itr.lastRet
nodeSourcePosition: at java.util.AbstractList$Itr.next(AbstractList.java:359) [bci: 20]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2717 
value: i2658 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1115 
=== Usages ===
=== Predecessor ===
v1640 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2717 value: i2658 stateAfter: - lastLocationAccess: - #next: v1115  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1115 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: AbstractList$Itr.cursor
nodeSourcePosition: at java.util.AbstractList$Itr.next(AbstractList.java:360) [bci: 27]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2708 
value: i528 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a2665 
=== Usages ===
=== Predecessor ===
v1114 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2708 value: i528 stateAfter: - lastLocationAccess: - #next: a2665  <|@  <|@
f <@~|@floating>@ <|@
tid a1098 <|@
result v99|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.Arrays$ArrayList.get(Arrays.java:3841) [bci: 1]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
op: Uncompress
stamp: a [Ljava/lang/Object;
=== Inputs ===
value: a2663 
=== Succesors ===
=== Usages ===
v2716 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2663  <|@  <|@
f <@~|@floating>@ <|@
tid v2716 <|@
result [v99|QWORD[.] + v92|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a1098 
index: i2658 
=== Succesors ===
=== Usages ===
a2665 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1098 index: i2658  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2665 <|@
result v100|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nodeSourcePosition: at java.util.Arrays$ArrayList.get(Arrays.java:3841) [bci: 5]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: v1640 
address: v2716 
=== Succesors ===
next: v878 
=== Usages ===
a1112 a2095 
=== Predecessor ===
v1115 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1640 address: v2716 #next: v878  <|@  <|@
f <@~|@floating>@ <|@
tid a1112 <|@
result v101|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.Arrays$ArrayList.get(Arrays.java:3841) [bci: 5]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
op: Uncompress
stamp: a Ljava/lang/Object;
=== Inputs ===
value: a2665 
=== Succesors ===
=== Usages ===
a282 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2665  <|@  <|@
f <@*|@fixed>@ <|@
tid v878 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v279 
=== Predecessor ===
a2665 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v88|DWORD[.] * 8 + 16], y: v92|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v88|DWORD[.] * 8 + 12], y: v97|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v99|QWORD[.] = UNCOMPRESSPOINTER (input: v98|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@68a0169d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v100|DWORD[.] = MOV [v99|QWORD[.] + v92|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v101|QWORD[.] = UNCOMPRESSPOINTER (input: v100|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@68a0169d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v101|QWORD[.], v100|DWORD[.]] destination: B88 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B145" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1643 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays$ArrayList.get(Arrays.java:3841) [bci: 5]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v74 
=== Succesors ===
next: v2163 
=== Usages ===
=== Predecessor ===
v1644 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v74 #next: v2163  <|@  <|@
f <@~|@floating>@ <|@
tid i2164 <|@
result int[-282907|0xfffffffffffbaee5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -282907
stableDimension: 0
stamp: i32 [-282907] ⇊00000000fffbaee5 ⇈00000000fffbaee5
stampKind: i32
value: int[-282907|0xfffffffffffbaee5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2130 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2163 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2127 
=== Predecessor ===
v1643 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-282907|0xfffffffffffbaee5]] destination: B89 -> B145 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B91" "B94" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4580453451186588897
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v552 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: void
=== Inputs ===
=== Succesors ===
next: v562 
=== Usages ===
=== Predecessor ===
v553 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v562  <|@  <|@
f <@~|@floating>@ <|@
tid v2589 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2662 
y: v2558 
=== Succesors ===
=== Usages ===
v562 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2662 y: v2558  <|@  <|@
f <@*|@fixed>@ <|@
tid v562 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Lorg/graalvm/compiler/graph/NodeInputList; target_method=get target_method_class=Lorg/graalvm/compiler/graph/NodeList; position=at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: void
trueSuccessorProbability: 0.9931451844203528
=== Inputs ===
condition: v2589 
=== Succesors ===
trueSuccessor: v558 
falseSuccessor: v561 
=== Usages ===
=== Predecessor ===
v552 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2589 #trueSuccessor: v558 #falseSuccessor: v561  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v96|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeInputList;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9931451844203528 condition: = trueDestination: B90 -> B91 falseDestination: B90 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B92" "B93" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4580420573915981964
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v558 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Lorg/graalvm/compiler/graph/NodeInputList; target_method=get target_method_class=Lorg/graalvm/compiler/graph/NodeList; position=at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2666 
=== Usages ===
=== Predecessor ===
v562 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2666  <|@  <|@
f <@~|@floating>@ <|@
tid v2718 <|@
result [v94|DWORD[.] * 8 + 28] <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2659 
=== Succesors ===
=== Usages ===
a2666 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2659  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2666 <|@
result v102|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: NodeList.nodes
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList.get(NodeList.java:164) [bci: 23]
at org.graalvm.compiler.graph.NodeList.get(NodeList.java:34) [bci: 2]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
nullCheck: false
stamp: n [Lorg/graalvm/compiler/graph/Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2718 
=== Succesors ===
next: i2667 
=== Usages ===
a1118 v2719 
=== Predecessor ===
v558 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2718 #next: i2667  <|@  <|@
f <@~|@floating>@ <|@
tid v2719 <|@
result [v102|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2666 
=== Succesors ===
=== Usages ===
i2667 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2666  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2667 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList.get(NodeList.java:164) [bci: 27]
at org.graalvm.compiler.graph.NodeList.get(NodeList.java:34) [bci: 2]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?76 
guard: - 
address: v2719 
=== Succesors ===
next: v1654 
=== Usages ===
v1124 
=== Predecessor ===
a2666 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?76 guard: - address: v2719 #next: v1654  <|@  <|@
f <@~|@floating>@ <|@
tid v1124 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList.get(NodeList.java:164) [bci: 27]
at org.graalvm.compiler.graph.NodeList.get(NodeList.java:34) [bci: 2]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2658 
y: i2667 
=== Succesors ===
=== Usages ===
v1654 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i2658 y: i2667  <|@  <|@
f <@*|@fixed>@ <|@
tid v1654 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList.get(NodeList.java:164) [bci: 27]
at org.graalvm.compiler.graph.NodeList.get(NodeList.java:34) [bci: 2]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1124 
=== Succesors ===
trueSuccessor: v1650 
falseSuccessor: v1653 
=== Usages ===
=== Predecessor ===
i2667 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1124 #trueSuccessor: v1650 #falseSuccessor: v1653  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v102|DWORD[.] = MOV [v94|DWORD[.] * 8 + 28] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42]
locals: - v1|QWORD[.] - v68|QWORD[.] v67|QWORD[.] v75|DWORD 
>@ <|@ instruction CMP (x: v92|DWORD, y: [v102|DWORD[.] * 8 + 12]) size: DWORD state [bci:42] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B91 -> B92 falseDestination: B91 -> B93 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B111" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4580420573915981964
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1650 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList.get(NodeList.java:164) [bci: 27]
at org.graalvm.compiler.graph.NodeList.get(NodeList.java:34) [bci: 2]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1133 
=== Usages ===
a2668 
=== Predecessor ===
v1654 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1133  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1133 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: AbstractList$Itr.lastRet
nodeSourcePosition: at java.util.AbstractList$Itr.next(AbstractList.java:359) [bci: 20]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2717 
value: i2658 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1134 
=== Usages ===
=== Predecessor ===
v1650 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2717 value: i2658 stateAfter: - lastLocationAccess: - #next: v1134  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1134 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: AbstractList$Itr.cursor
nodeSourcePosition: at java.util.AbstractList$Itr.next(AbstractList.java:360) [bci: 27]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2708 
value: i528 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a2668 
=== Usages ===
=== Predecessor ===
v1133 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2708 value: i528 stateAfter: - lastLocationAccess: - #next: a2668  <|@  <|@
f <@~|@floating>@ <|@
tid a1118 <|@
result v103|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList.get(NodeList.java:164) [bci: 23]
at org.graalvm.compiler.graph.NodeList.get(NodeList.java:34) [bci: 2]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
op: Uncompress
stamp: a [Lorg/graalvm/compiler/graph/Node;
=== Inputs ===
value: a2666 
=== Succesors ===
=== Usages ===
v2720 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2666  <|@  <|@
f <@~|@floating>@ <|@
tid v2720 <|@
result [v103|QWORD[.] + v92|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a1118 
index: i2658 
=== Succesors ===
=== Usages ===
a2668 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1118 index: i2658  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2668 <|@
result v104|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList.get(NodeList.java:164) [bci: 27]
at org.graalvm.compiler.graph.NodeList.get(NodeList.java:34) [bci: 2]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
nullCheck: false
stamp: n Lorg/graalvm/compiler/graph/Node;
=== Inputs ===
stateBefore: - 
guard: v1650 
address: v2720 
=== Succesors ===
next: v948 
=== Usages ===
a1132 a2095 
=== Predecessor ===
v1134 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1650 address: v2720 #next: v948  <|@  <|@
f <@~|@floating>@ <|@
tid a1132 <|@
result v105|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList.get(NodeList.java:164) [bci: 27]
at org.graalvm.compiler.graph.NodeList.get(NodeList.java:34) [bci: 2]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
op: Uncompress
stamp: a Lorg/graalvm/compiler/graph/Node;
=== Inputs ===
value: a2668 
=== Succesors ===
=== Usages ===
a282 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2668  <|@  <|@
f <@*|@fixed>@ <|@
tid v948 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v279 
=== Predecessor ===
a2668 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v88|DWORD[.] * 8 + 16], y: v92|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v88|DWORD[.] * 8 + 12], y: v97|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v103|QWORD[.] = UNCOMPRESSPOINTER (input: v102|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@68a0169d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v104|DWORD[.] = MOV [v103|QWORD[.] + v92|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v105|QWORD[.] = UNCOMPRESSPOINTER (input: v104|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@68a0169d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v105|QWORD[.], v104|DWORD[.]] destination: B92 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B145" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1653 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList.get(NodeList.java:164) [bci: 27]
at org.graalvm.compiler.graph.NodeList.get(NodeList.java:34) [bci: 2]
at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v74 
=== Succesors ===
next: v2167 
=== Usages ===
=== Predecessor ===
v1654 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v74 #next: v2167  <|@  <|@
f <@~|@floating>@ <|@
tid i2168 <|@
result int[-288027|0xfffffffffffb9ae5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -288027
stableDimension: 0
stamp: i32 [-288027] ⇊00000000fffb9ae5 ⇈00000000fffb9ae5
stampKind: i32
value: int[-288027|0xfffffffffffb9ae5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2130 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2167 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2127 
=== Predecessor ===
v1653 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-288027|0xfffffffffffb9ae5]] destination: B93 -> B145 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B111" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4548045005664834791
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v561 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: void
=== Inputs ===
=== Succesors ===
next: a524 
=== Usages ===
=== Predecessor ===
v562 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a524  <|@  <|@
f <@~|@floating>@ <|@
tid a1086 <|@
result v106|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.AbstractList$Itr.checkForComodification(AbstractList.java:385) [bci: 1]
at java.util.AbstractList$Itr.next(AbstractList.java:355) [bci: 1]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
op: Uncompress
stamp: a Ljava/util/AbstractList;
=== Inputs ===
value: a2659 
=== Succesors ===
=== Usages ===
v1135 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2659  <|@  <|@
tid v1135 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
returnStamp: a Ljava/lang/Object;
signature: [Ljdk.vm.ci.meta.JavaType;@23a9b6b4
stamp: void
targetMethod: HotSpotMethod<AbstractList.get(int)>
=== Inputs ===
arguments: a1086 i2658 
=== Succesors ===
=== Usages ===
a524 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1086 i2658  <|@  <|@
tid ?369 <|@
d <@d|@=== Debug Properties ===
bci: 114
code: ResolvedJavaMethodBytecode<AbstractCollection.toArray(Object[])>
duringCall: true
localsSize: 6
locksSize: 0
rethrowException: false
sourceFile: AbstractCollection.java
sourceLine: 196
stackSize: 2
=== Inputs ===
outerFrameState: - 
values: - a2 - a843 a270 i75 a843 i75 
=== Succesors ===
=== Usages ===
?532 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - a2 - a843 a270 i75 a843 i75  <|@  <|@
tid ?532 <|@
d <@d|@=== Debug Properties ===
bci: 11
code: ResolvedJavaMethodBytecode<SubList$1.next()>
duringCall: true
localsSize: 1
locksSize: 0
rethrowException: false
sourceFile: AbstractList.java
sourceLine: 707
stackSize: 0
=== Inputs ===
outerFrameState: ?369 
values: - 
=== Succesors ===
=== Usages ===
?2093 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?369 values: -  <|@  <|@
tid ?2093 <|@
d <@d|@=== Debug Properties ===
bci: 14
code: ResolvedJavaMethodBytecode<AbstractList$Itr.next()>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: AbstractList.java
sourceLine: 358
stackSize: 0
=== Inputs ===
outerFrameState: ?532 
values: a2653 i2658 - 
=== Succesors ===
=== Usages ===
a524 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?532 values: a2653 i2658 -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a524 <|@
result v107|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 14
nodeSourcePosition: at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
polymorphic: false
stamp: a Ljava/lang/Object;
targetMethod: Direct#AbstractList.get
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1135 
stateDuring: ?2093 
=== Succesors ===
next: v1136 
=== Usages ===
a282 a2094 
=== Predecessor ===
v561 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1135 stateDuring: ?2093 #next: v1136  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1136 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: AbstractList$Itr.lastRet
nodeSourcePosition: at java.util.AbstractList$Itr.next(AbstractList.java:359) [bci: 20]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2717 
value: i2658 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1137 
=== Usages ===
=== Predecessor ===
a524 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2717 value: i2658 stateAfter: - lastLocationAccess: - #next: v1137  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1137 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: AbstractList$Itr.cursor
nodeSourcePosition: at java.util.AbstractList$Itr.next(AbstractList.java:360) [bci: 27]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2708 
value: i528 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v298 
=== Usages ===
=== Predecessor ===
v1136 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2708 value: i528 stateAfter: - lastLocationAccess: - #next: v298  <|@  <|@
f <@~|@floating>@ <|@
tid a2094 <|@
result v108|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
op: Compress
stamp: n -
=== Inputs ===
value: a524 
=== Succesors ===
=== Usages ===
a2095 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a524  <|@  <|@
f <@*|@fixed>@ <|@
tid v298 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v279 
=== Predecessor ===
v1137 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v106|QWORD[.] = UNCOMPRESSPOINTER (input: v94|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@68a0169d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v106|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v92|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
locals: v88|DWORD[.] v92|DWORD - 
java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
locals: - 
java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stack: v68|QWORD[.] v75|DWORD 
locals: - v1|QWORD[.] - v68|QWORD[.] v67|QWORD[.] v75|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractList.get(int)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:14, 11, 114] <|@ <|@
      nr   -1  <|@ instruction v107|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v88|DWORD[.] * 8 + 16], y: v92|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v88|DWORD[.] * 8 + 12], y: v97|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v108|DWORD[.] = COMPRESSPOINTER (input: v107|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@68a0169d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v107|QWORD[.], v108|DWORD[.]] destination: B94 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B145" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1633 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList$Itr.checkForComodification(AbstractList.java:385) [bci: 11]
at java.util.AbstractList$Itr.next(AbstractList.java:355) [bci: 1]
at java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v74 
=== Succesors ===
next: v2159 
=== Usages ===
=== Predecessor ===
v1634 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v74 #next: v2159  <|@  <|@
f <@~|@floating>@ <|@
tid i2160 <|@
result int[-280083|0xfffffffffffbb9ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -280083
stableDimension: 0
stamp: i32 [-280083] ⇊00000000fffbb9ed ⇈00000000fffbb9ed
stampKind: i32
value: int[-280083|0xfffffffffffbb9ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2130 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2159 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2127 
=== Predecessor ===
v1633 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-280083|0xfffffffffffbb9ed]] destination: B95 -> B145 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B145" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1623 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:183) [bci: 56]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v74 
=== Succesors ===
next: v2155 
=== Usages ===
=== Predecessor ===
v1624 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v74 #next: v2155  <|@  <|@
f <@~|@floating>@ <|@
tid i2156 <|@
result int[-277267|0xfffffffffffbc4ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -277267
stableDimension: 0
stamp: i32 [-277267] ⇊00000000fffbc4ed ⇈00000000fffbc4ed
stampKind: i32
value: int[-277267|0xfffffffffffbc4ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2130 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2155 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2127 
=== Predecessor ===
v1623 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-277267|0xfffffffffffbc4ed]] destination: B96 -> B145 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B145" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1613 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/AbstractList$ListItr; target_method=nextIndex target_method_class=Ljava/util/AbstractList$ListItr; position=at java.util.SubList$1.nextIndex(AbstractList.java:724) [bci: 4]
at java.util.SubList$1.hasNext(AbstractList.java:702) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:183) [bci: 51]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v74 
=== Succesors ===
next: v2151 
=== Usages ===
=== Predecessor ===
v1614 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v74 #next: v2151  <|@  <|@
f <@~|@floating>@ <|@
tid i2152 <|@
result int[-273971|0xfffffffffffbd1cd] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -273971
stableDimension: 0
stamp: i32 [-273971] ⇊00000000fffbd1cd ⇈00000000fffbd1cd
stampKind: i32
value: int[-273971|0xfffffffffffbd1cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2130 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2151 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2127 
=== Predecessor ===
v1613 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-273971|0xfffffffffffbd1cd]] destination: B97 -> B145 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B99" "B129" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4581957783436701082
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v192 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:183) [bci: 51]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1659 
=== Usages ===
=== Predecessor ===
v193 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1659  <|@  <|@
f <@~|@floating>@ <|@
tid v2584 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 128]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2641 
y: v2583 
=== Succesors ===
=== Usages ===
v1659 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2641 y: v2583  <|@  <|@
f <@*|@fixed>@ <|@
tid v1659 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/HashMap$KeyIterator; target_method=hasNext target_method_class=Ljava/util/HashMap$HashIterator; position=at java.util.AbstractCollection.toArray(AbstractCollection.java:183) [bci: 51]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v2584 
=== Succesors ===
trueSuccessor: v1655 
falseSuccessor: v1658 
=== Usages ===
=== Predecessor ===
v192 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2584 #trueSuccessor: v1655 #falseSuccessor: v1658  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v72|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap$KeyIterator;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B98 -> B99 falseDestination: B98 -> B129 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B98" 
    successors "B100" "B128" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4581957783436701082
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1655 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/HashMap$KeyIterator; target_method=hasNext target_method_class=Ljava/util/HashMap$HashIterator; position=at java.util.AbstractCollection.toArray(AbstractCollection.java:183) [bci: 51]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2669 
=== Usages ===
=== Predecessor ===
v1659 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2669  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2669 <|@
result v109|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashMap$HashIterator.next
nodeSourcePosition: at java.util.HashMap$HashIterator.hasNext(HashMap.java:1435) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:183) [bci: 51]
nullCheck: false
stamp: n Ljava/util/HashMap$Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2700 
=== Succesors ===
next: v2805 
=== Usages ===
?788 v2805 v1156 v2723 v2727 ?777 ?802 
=== Predecessor ===
v1655 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2700 #next: v2805  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2805 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?76 
object: a2669 
=== Succesors ===
next: a2670 
=== Usages ===
=== Predecessor ===
a2669 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?76 object: a2669 #next: a2670  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2670 <|@
result v110|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashMap$HashIterator.this$0
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1441) [bci: 6]
at java.util.HashMap$KeyIterator.next(HashMap.java:1466) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
nullCheck: false
stamp: n Ljava/util/HashMap;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2704 
=== Succesors ===
next: i2671 
=== Usages ===
v2724 v2721 
=== Predecessor ===
v2805 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2704 #next: i2671  <|@  <|@
f <@~|@floating>@ <|@
tid v2721 <|@
result [v110|DWORD[.] * 8 + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2670 
=== Succesors ===
=== Usages ===
i2671 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2670  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2671 <|@
result v111|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashMap.modCount
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1441) [bci: 9]
at java.util.HashMap$KeyIterator.next(HashMap.java:1466) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
nullCheck: true
stamp: i32
=== Inputs ===
stateBefore: ?76 
guard: - 
address: v2721 
=== Succesors ===
next: i2672 
=== Usages ===
v769 
=== Predecessor ===
a2670 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?76 guard: - address: v2721 #next: i2672  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2672 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashMap$HashIterator.expectedModCount
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1441) [bci: 13]
at java.util.HashMap$KeyIterator.next(HashMap.java:1466) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2697 
=== Succesors ===
next: v1674 
=== Usages ===
v769 
=== Predecessor ===
i2671 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2697 #next: v1674  <|@  <|@
f <@~|@floating>@ <|@
tid v769 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1441) [bci: 16]
at java.util.HashMap$KeyIterator.next(HashMap.java:1466) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2671 
y: i2672 
=== Succesors ===
=== Usages ===
v1674 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i2671 y: i2672  <|@  <|@
f <@*|@fixed>@ <|@
tid v1674 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1441) [bci: 16]
at java.util.HashMap$KeyIterator.next(HashMap.java:1466) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v769 
=== Succesors ===
trueSuccessor: v1670 
falseSuccessor: v1673 
=== Usages ===
=== Predecessor ===
i2672 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v769 #trueSuccessor: v1670 #falseSuccessor: v1673  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v109|DWORD[.] = MOV [v67|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42]
locals: - v1|QWORD[.] - v68|QWORD[.] v67|QWORD[.] v75|DWORD 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v109|DWORD[.] * 8] state [bci:42] <|@ <|@
      nr   -1  <|@ instruction v110|DWORD[.] = MOV [v67|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42]
locals: - v1|QWORD[.] - v68|QWORD[.] v67|QWORD[.] v75|DWORD 
>@ <|@ instruction v111|DWORD = MOV [v110|DWORD[.] * 8 + 24] size: DWORD state [bci:42] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v111|DWORD, y: [v67|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B99 -> B100 falseDestination: B99 -> B128 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B101" "B110" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4581957783436701082
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1670 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1441) [bci: 16]
at java.util.HashMap$KeyIterator.next(HashMap.java:1466) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1156 
=== Usages ===
=== Predecessor ===
v1674 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1156  <|@  <|@
f <@~|@floating>@ <|@
tid v2722 <|@
result [v67|QWORD[.] + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a270 
index: - 
=== Succesors ===
=== Usages ===
v1156 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a270 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1156 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: HashMap$HashIterator.current
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1445) [bci: 43]
at java.util.HashMap$KeyIterator.next(HashMap.java:1466) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2722 
value: a2669 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j2504 
=== Usages ===
=== Predecessor ===
v1670 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2722 value: a2669 stateAfter: - lastLocationAccess: - #next: j2504  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2504 <|@
result v67|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 1]
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1445) [bci: 43]
at java.util.HashMap$KeyIterator.next(HashMap.java:1466) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a270 
=== Succesors ===
next: v2510 
=== Usages ===
j2506 
=== Predecessor ===
v1156 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a270 #next: v2510  <|@  <|@
f <@~|@floating>@ <|@
tid j2506 <|@
result v112|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1445) [bci: 43]
at java.util.HashMap$KeyIterator.next(HashMap.java:1466) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j2504 
y: i2505 
=== Succesors ===
=== Usages ===
v2782 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j2504 y: i2505  <|@  <|@
f <@~|@floating>@ <|@
tid v2782 <|@
result [v112|QWORD[*] + v74|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j2506 
index: j2509 
=== Succesors ===
=== Usages ===
v2510 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2506 index: j2509  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2510 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1445) [bci: 43]
at java.util.HashMap$KeyIterator.next(HashMap.java:1466) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2782 
value: i2511 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a2673 
=== Usages ===
=== Predecessor ===
j2504 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2782 value: i2511 stateAfter: - lastLocationAccess: - #next: a2673  <|@  <|@
f <@~|@floating>@ <|@
tid v2723 <|@
result [v109|DWORD[.] * 8 + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2669 
=== Succesors ===
=== Usages ===
a2673 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2669  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2673 <|@
result v113|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashMap$Node.next
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1445) [bci: 46]
at java.util.HashMap$KeyIterator.next(HashMap.java:1466) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
nullCheck: false
stamp: n Ljava/util/HashMap$Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2723 
=== Succesors ===
next: v1164 
=== Usages ===
v1164 v1343 
=== Predecessor ===
v2510 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2723 #next: v1164  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1164 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: HashMap$HashIterator.next
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1445) [bci: 50]
at java.util.HashMap$KeyIterator.next(HashMap.java:1466) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2700 
value: a2673 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a2674 
=== Usages ===
=== Predecessor ===
a2673 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2700 value: a2673 stateAfter: - lastLocationAccess: - #next: a2674  <|@  <|@
f <@~|@floating>@ <|@
tid v2727 <|@
result [v109|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2669 
=== Succesors ===
=== Usages ===
a2674 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2669  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2674 <|@
result v114|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashMap$Node.key
nodeSourcePosition: at java.util.HashMap$KeyIterator.next(HashMap.java:1466) [bci: 4]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2727 
=== Succesors ===
next: v781 
=== Usages ===
a1192 a2095 a2095 a2095 
=== Predecessor ===
v1164 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2727 #next: v781  <|@  <|@
f <@~|@floating>@ <|@
tid a1192 <|@
result v115|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap$KeyIterator.next(HashMap.java:1466) [bci: 4]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
op: Uncompress
stamp: a Ljava/lang/Object;
=== Inputs ===
value: a2674 
=== Succesors ===
=== Usages ===
a282 a282 a282 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2674  <|@  <|@
f <@~|@floating>@ <|@
tid v1343 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1445) [bci: 53]
at java.util.HashMap$KeyIterator.next(HashMap.java:1466) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: void
=== Inputs ===
value: a2673 
=== Succesors ===
=== Usages ===
v781 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a2673  <|@  <|@
f <@*|@fixed>@ <|@
tid v781 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1445) [bci: 53]
at java.util.HashMap$KeyIterator.next(HashMap.java:1466) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: void
trueSuccessorProbability: 0.862846997817839
=== Inputs ===
condition: v1343 
=== Succesors ===
trueSuccessor: v779 
falseSuccessor: v780 
=== Usages ===
=== Predecessor ===
a2674 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1343 #trueSuccessor: v779 #falseSuccessor: v780  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v67|QWORD[.] + 24], y: v109|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v112|QWORD[*] = SHR v67|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v112|QWORD[*] + v74|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v113|DWORD[.] = MOV [v109|DWORD[.] * 8 + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v67|QWORD[.] + 20], y: v113|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v114|DWORD[.] = MOV [v109|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v115|QWORD[.] = UNCOMPRESSPOINTER (input: v114|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@68a0169d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TEST (x: v113|DWORD[.], y: v113|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.862846997817839 condition: = trueDestination: B100 -> B101 falseDestination: B100 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B102" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4581093642439087946
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v779 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1445) [bci: 56]
at java.util.HashMap$KeyIterator.next(HashMap.java:1466) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2675 
=== Usages ===
=== Predecessor ===
v781 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2675  <|@  <|@
f <@~|@floating>@ <|@
tid v2724 <|@
result [v110|DWORD[.] * 8 + 36] <|@
d <@d|@=== Debug Properties ===
displacement: 36
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2670 
=== Succesors ===
=== Usages ===
a2675 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2670  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2675 <|@
result v116|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashMap.table
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1445) [bci: 60]
at java.util.HashMap$KeyIterator.next(HashMap.java:1466) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
nullCheck: false
stamp: n [Ljava/util/HashMap$Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2724 
=== Succesors ===
next: i2676 
=== Usages ===
a1168 v2725 
=== Predecessor ===
v779 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2724 #next: i2676  <|@  <|@
tid ?764 <|@
d <@d|@=== Debug Properties ===
bci: 114
code: ResolvedJavaMethodBytecode<AbstractCollection.toArray(Object[])>
duringCall: true
localsSize: 6
locksSize: 0
rethrowException: false
sourceFile: AbstractCollection.java
sourceLine: 196
stackSize: 2
=== Inputs ===
outerFrameState: - 
values: - a2 - a843 a270 i75 a843 i75 
=== Succesors ===
=== Usages ===
?812 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - a2 - a843 a270 i75 a843 i75  <|@  <|@
tid ?812 <|@
d <@d|@=== Debug Properties ===
bci: 1
code: ResolvedJavaMethodBytecode<HashMap$KeyIterator.next()>
duringCall: true
localsSize: 1
locksSize: 0
rethrowException: false
sourceFile: HashMap.java
sourceLine: 1466
stackSize: 0
=== Inputs ===
outerFrameState: ?764 
values: - 
=== Succesors ===
=== Usages ===
?802 ?777 ?788 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?764 values: -  <|@  <|@
f <@~|@floating>@ <|@
tid a2692 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: n - NULL
stampKind: n -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?777 ?802 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
tid ?777 <|@
d <@d|@=== Debug Properties ===
bci: 53
code: ResolvedJavaMethodBytecode<HashMap$HashIterator.nextNode()>
duringCall: false
localsSize: 3
locksSize: 0
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1445) [bci: 50]
at java.util.HashMap$KeyIterator.next(HashMap.java:1466) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
rethrowException: false
sourceFile: HashMap.java
sourceLine: 1445
stackSize: 1
=== Inputs ===
outerFrameState: ?812 
values: a270 - a2669 a2692 
=== Succesors ===
=== Usages ===
i2676 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?812 values: a270 - a2669 a2692  <|@  <|@
f <@~|@floating>@ <|@
tid v2725 <|@
result [v116|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2675 
=== Succesors ===
=== Usages ===
i2676 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2675  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2676 <|@
result v117|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1446) [bci: 73]
at java.util.HashMap$KeyIterator.next(HashMap.java:1466) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?777 
guard: - 
address: v2725 
=== Succesors ===
next: i2677 
=== Usages ===
v791 v1179 
=== Predecessor ===
a2675 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?777 guard: - address: v2725 #next: i2677  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2677 <|@
result v118|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashMap$HashIterator.index
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1446) [bci: 69]
at java.util.HashMap$KeyIterator.next(HashMap.java:1466) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2706 
=== Succesors ===
next: v786 
=== Usages ===
i2600 
=== Predecessor ===
i2676 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2706 #next: v786  <|@  <|@
f <@~|@floating>@ <|@
tid a1168 <|@
result v119|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1445) [bci: 60]
at java.util.HashMap$KeyIterator.next(HashMap.java:1466) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
op: Uncompress
stamp: a [Ljava/util/HashMap$Node;
=== Inputs ===
value: a2675 
=== Succesors ===
=== Usages ===
?802 ?788 v2726 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2675  <|@  <|@
tid ?802 <|@
d <@d|@=== Debug Properties ===
bci: 95
code: ResolvedJavaMethodBytecode<HashMap$HashIterator.nextNode()>
duringCall: false
localsSize: 3
locksSize: 0
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1446) [bci: 92]
at java.util.HashMap$KeyIterator.next(HashMap.java:1466) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
rethrowException: false
sourceFile: HashMap.java
sourceLine: 1446
stackSize: 1
=== Inputs ===
outerFrameState: ?812 
values: a270 a1168 a2669 a2692 
=== Succesors ===
=== Usages ===
v1451 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?812 values: a270 a1168 a2669 a2692  <|@  <|@
f <@*|@fixed>@ <|@
tid v786 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1446) [bci: 68]
at java.util.HashMap$KeyIterator.next(HashMap.java:1466) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v787 
=== Predecessor ===
i2677 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v116|DWORD[.] = MOV [v110|DWORD[.] * 8 + 36] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap$HashIterator.nextNode(HashMap.java:1445) [bci: 53]
stack: Object[null] 
locals: v67|QWORD[.] - v109|DWORD[.] 
java.util.HashMap$KeyIterator.next(HashMap.java:1466) [bci: 1]
locals: - 
java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stack: v68|QWORD[.] v75|DWORD 
locals: - v1|QWORD[.] - v68|QWORD[.] v67|QWORD[.] v75|DWORD 
>@ <|@ instruction v117|DWORD = MOV [v116|DWORD[.] * 8 + 12] size: DWORD state [bci:53, 1, 114] <|@ <|@
      nr   -1  <|@ instruction v118|DWORD = MOV [v67|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v119|QWORD[.] = UNCOMPRESSPOINTER (input: v116|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@68a0169d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v118|DWORD] destination: B101 -> B102 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B101" "B105" 
    successors "B103" "B109" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 2
    probability 4589007040607145023
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i2600 <|@
result v120|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v787 
values: i2677 i797 
=== Succesors ===
=== Usages ===
v791 i797 v1179 v2726 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v787 values: i2677 i797  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v787 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: true
inversionCount: 0
loopFrequency: 3.2544276911054864
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1446) [bci: 68]
at java.util.HashMap$KeyIterator.next(HashMap.java:1466) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v786 
=== Succesors ===
next: v795 
=== Usages ===
v793 v804 v805 i2600 v1683 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v786 #next: v795  <|@  <|@
f <@~|@floating>@ <|@
tid v791 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1446) [bci: 74]
at java.util.HashMap$KeyIterator.next(HashMap.java:1466) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2600 
y: i2676 
=== Succesors ===
=== Usages ===
v795 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2600 y: i2676  <|@  <|@
f <@*|@fixed>@ <|@
tid v795 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1446) [bci: 74]
at java.util.HashMap$KeyIterator.next(HashMap.java:1466) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: void
trueSuccessorProbability: 0.973666701969634
=== Inputs ===
condition: v791 
=== Succesors ===
trueSuccessor: v792 
falseSuccessor: v793 
=== Usages ===
=== Predecessor ===
v787 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v791 #trueSuccessor: v792 #falseSuccessor: v793  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v120|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v117|DWORD, y: v120|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.973666701969634 condition: > trueDestination: B102 -> B103 falseDestination: B102 -> B109 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B102" 
    successors "B104" "B107" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4588774090470730591
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v792 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1446) [bci: 77]
at java.util.HashMap$KeyIterator.next(HashMap.java:1466) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1685 
=== Usages ===
=== Predecessor ===
v795 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1685  <|@  <|@
f <@~|@floating>@ <|@
tid v1179 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1446) [bci: 90]
at java.util.HashMap$KeyIterator.next(HashMap.java:1466) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2600 
y: i2676 
=== Succesors ===
=== Usages ===
v1685 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i2600 y: i2676  <|@  <|@
f <@*|@fixed>@ <|@
tid v1685 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1446) [bci: 90]
at java.util.HashMap$KeyIterator.next(HashMap.java:1466) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1179 
=== Succesors ===
trueSuccessor: v1680 
falseSuccessor: v1683 
=== Usages ===
=== Predecessor ===
v792 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1179 #trueSuccessor: v1680 #falseSuccessor: v1683  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v117|DWORD, y: v120|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B103 -> B104 falseDestination: B103 -> B107 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B105" "B106" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4588774090470730591
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1680 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1446) [bci: 90]
at java.util.HashMap$KeyIterator.next(HashMap.java:1466) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1177 
=== Usages ===
a2678 
=== Predecessor ===
v1685 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1177  <|@  <|@
f <@~|@floating>@ <|@
tid i797 <|@
result v121|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1446) [bci: 86]
at java.util.HashMap$KeyIterator.next(HashMap.java:1466) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: i32
=== Inputs ===
x: i2600 
y: i20 
=== Succesors ===
=== Usages ===
v1177 i2600 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i2600 y: i20  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1177 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: HashMap$HashIterator.index
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1446) [bci: 87]
at java.util.HashMap$KeyIterator.next(HashMap.java:1466) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2706 
value: i797 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a2678 
=== Usages ===
=== Predecessor ===
v1680 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2706 value: i797 stateAfter: - lastLocationAccess: - #next: a2678  <|@  <|@
f <@~|@floating>@ <|@
tid v2726 <|@
result [v119|QWORD[.] + v120|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a1168 
index: i2600 
=== Succesors ===
=== Usages ===
a2678 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1168 index: i2600  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2678 <|@
result v122|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1446) [bci: 90]
at java.util.HashMap$KeyIterator.next(HashMap.java:1466) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
nullCheck: false
stamp: n Ljava/util/HashMap$Node;
=== Inputs ===
stateBefore: - 
guard: v1680 
address: v2726 
=== Succesors ===
next: v1189 
=== Usages ===
v1189 v1345 
=== Predecessor ===
v1177 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1680 address: v2726 #next: v1189  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1189 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: HashMap$HashIterator.next
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1446) [bci: 92]
at java.util.HashMap$KeyIterator.next(HashMap.java:1466) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2700 
value: a2678 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j2514 
=== Usages ===
=== Predecessor ===
a2678 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2700 value: a2678 stateAfter: - lastLocationAccess: - #next: j2514  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2514 <|@
result v67|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 1]
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1446) [bci: 92]
at java.util.HashMap$KeyIterator.next(HashMap.java:1466) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a270 
=== Succesors ===
next: v2518 
=== Usages ===
j2515 
=== Predecessor ===
v1189 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a270 #next: v2518  <|@  <|@
f <@~|@floating>@ <|@
tid j2515 <|@
result v123|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1446) [bci: 92]
at java.util.HashMap$KeyIterator.next(HashMap.java:1466) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j2514 
y: i2505 
=== Succesors ===
=== Usages ===
v2783 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j2514 y: i2505  <|@  <|@
f <@~|@floating>@ <|@
tid v2783 <|@
result [v123|QWORD[*] + v74|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j2515 
index: j2509 
=== Succesors ===
=== Usages ===
v2518 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2515 index: j2509  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2518 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.HashMap$HashIterator.nextNode(HashMap.java:1446) [bci: 92]
at java.util.HashMap$KeyIterator.next(HashMap.java:1466) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2783 
value: i2511 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v808 
=== Usages ===
=== Predecessor ===
j2514 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2783 value: i2511 stateAfter: - lastLocationAccess: - #next: v808  <|@  <|@
f <@~|@floating>@ <|@
tid v1345 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1446) [bci: 95]
at java.util.HashMap$KeyIterator.next(HashMap.java:1466) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: void
=== Inputs ===
value: a2678 
=== Succesors ===
=== Usages ===
v808 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a2678  <|@  <|@
f <@*|@fixed>@ <|@
tid v808 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1446) [bci: 95]
at java.util.HashMap$KeyIterator.next(HashMap.java:1466) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: void
trueSuccessorProbability: 0.7114614377628611
=== Inputs ===
condition: v1345 
=== Succesors ===
trueSuccessor: v807 
falseSuccessor: v805 
=== Usages ===
=== Predecessor ===
v2518 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1345 #trueSuccessor: v807 #falseSuccessor: v805  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v121|DWORD = INC v120|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v67|QWORD[.] + 16], y: v121|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v122|DWORD[.] = MOV [v119|QWORD[.] + v120|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v67|QWORD[.] + 20], y: v122|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v123|QWORD[*] = SHR v67|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v123|QWORD[*] + v74|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction TEST (x: v122|DWORD[.], y: v122|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7114614377628611 condition: = trueDestination: B104 -> B105 falseDestination: B104 -> B106 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B102" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 2
    probability 4586288830091813018
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v807 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1446) [bci: 68]
at java.util.HashMap$KeyIterator.next(HashMap.java:1466) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1451 
=== Usages ===
=== Predecessor ===
v808 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1451  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1451 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?802 
=== Succesors ===
next: v804 
=== Usages ===
=== Predecessor ===
v807 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?802 #next: v804  <|@  <|@
f <@*|@fixed>@ <|@
tid v804 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 0
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1446) [bci: 68]
at java.util.HashMap$KeyIterator.next(HashMap.java:1466) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: void
=== Inputs ===
loopBegin: v787 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1451 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v787  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap$HashIterator.nextNode(HashMap.java:1446) [bci: 95]
stack: Object[null] 
locals: v67|QWORD[.] v119|QWORD[.] v109|DWORD[.] 
java.util.HashMap$KeyIterator.next(HashMap.java:1466) [bci: 1]
locals: - 
java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stack: v68|QWORD[.] v75|DWORD 
locals: - v1|QWORD[.] - v68|QWORD[.] v67|QWORD[.] v75|DWORD 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:95, 1, 114] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v121|DWORD] destination: B105 -> B102 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B111" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4580627742166259083
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v805 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1448) [bci: 98]
at java.util.HashMap$KeyIterator.next(HashMap.java:1466) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v787 
=== Succesors ===
next: v1446 
=== Usages ===
=== Predecessor ===
v808 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v787 #next: v1446  <|@  <|@
f <@*|@fixed>@ <|@
tid v1446 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v279 
=== Predecessor ===
v805 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v115|QWORD[.], v114|DWORD[.]] destination: B106 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B108" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1683 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1446) [bci: 90]
at java.util.HashMap$KeyIterator.next(HashMap.java:1466) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v787 
=== Succesors ===
next: v1684 
=== Usages ===
=== Predecessor ===
v1685 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v787 #next: v1684  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B107 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B107" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1684 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1446) [bci: 90]
at java.util.HashMap$KeyIterator.next(HashMap.java:1466) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v74 
=== Succesors ===
next: v1681 
=== Usages ===
=== Predecessor ===
v1683 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v74 #next: v1681  <|@  <|@
tid ?788 <|@
d <@d|@=== Debug Properties ===
bci: 68
code: ResolvedJavaMethodBytecode<HashMap$HashIterator.nextNode()>
duringCall: false
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: HashMap.java
sourceLine: 1446
stackSize: 0
=== Inputs ===
outerFrameState: ?812 
values: a270 a1168 a2669 
=== Succesors ===
=== Usages ===
v1681 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?812 values: a270 a1168 a2669  <|@  <|@
f <@*|@fixed>@ <|@
tid v1681 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 1180
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1446) [bci: 90]
at java.util.HashMap$KeyIterator.next(HashMap.java:1466) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
reason: BoundsCheckException
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?788 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1684 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?788  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -302107 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap$HashIterator.nextNode(HashMap.java:1446) [bci: 68]
locals: v67|QWORD[.] v119|QWORD[.] v109|DWORD[.] 
java.util.HashMap$KeyIterator.next(HashMap.java:1466) [bci: 1]
locals: - 
java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stack: v68|QWORD[.] v75|DWORD 
locals: - v1|QWORD[.] - v68|QWORD[.] v67|QWORD[.] v75|DWORD 
>@ <|@ instruction DEOPT info [bci:68, 1, 114] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B102" 
    successors "B111" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4565097227264203764
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v793 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1448) [bci: 98]
at java.util.HashMap$KeyIterator.next(HashMap.java:1466) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v787 
=== Succesors ===
next: v1447 
=== Usages ===
=== Predecessor ===
v795 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v787 #next: v1447  <|@  <|@
f <@*|@fixed>@ <|@
tid v1447 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v279 
=== Predecessor ===
v793 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v115|QWORD[.], v114|DWORD[.]] destination: B109 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B111" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4569059550507217536
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v780 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1448) [bci: 98]
at java.util.HashMap$KeyIterator.next(HashMap.java:1466) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: void
=== Inputs ===
=== Succesors ===
next: v281 
=== Usages ===
=== Predecessor ===
v781 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v281  <|@  <|@
f <@*|@fixed>@ <|@
tid v281 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v279 
=== Predecessor ===
v780 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v115|QWORD[.], v114|DWORD[.]] destination: B110 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B110" "B77" "B94" "B88" "B92" "B106" "B109" 
    successors "B112" "B113" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612410522371396702
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a282 <|@
result v124|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: a -
valueDescription: a -
=== Inputs ===
merge: v279 
values: a1192 a1065 a524 a1112 a1132 a1192 a1192 
=== Succesors ===
=== Usages ===
?280 v1201 v2784 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v279 values: a1192 a1065 a524 a1112 a1132 a1192 a1192  <|@  <|@
f <@~|@floating>@ <|@
tid a2095 <|@
result v125|DWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: n -
valueDescription: n -
=== Inputs ===
merge: v279 
values: a2674 a2652 a2094 a2665 a2668 a2674 a2674 
=== Succesors ===
=== Usages ===
v1209 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v279 values: a2674 a2652 a2094 a2665 a2668 a2674 a2674  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v279 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v281 v287 v298 v878 v948 v1446 v1447 
=== Succesors ===
next: v1988 
=== Usages ===
a282 a2095 v2680 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v281 v287 v298 v878 v948 v1446 v1447 #next: v1988  <|@  <|@
f <@~|@floating>@ <|@
tid v1201 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
stamp: void
=== Inputs ===
value: a282 
=== Succesors ===
=== Usages ===
v1988 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a282  <|@  <|@
f <@*|@fixed>@ <|@
tid v1988 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:204) [bci: 15]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
stamp: void
trueSuccessorProbability: 0.09999999999999998
=== Inputs ===
condition: v1201 
=== Succesors ===
trueSuccessor: v1987 
falseSuccessor: v1986 
=== Usages ===
=== Predecessor ===
v279 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1201 #trueSuccessor: v1987 #falseSuccessor: v1986  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v124|QWORD[.], v125|DWORD[.]] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v124|QWORD[.], y: v124|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B111 -> B112 falseDestination: B111 -> B113 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B122" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597532986004742293
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1987 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:205) [bci: 18]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2229 
=== Usages ===
=== Predecessor ===
v1988 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2229  <|@  <|@
f <@*|@fixed>@ <|@
tid v2229 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2227 
=== Predecessor ===
v1987 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B112 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B114" "B115" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4611887712014258773
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1986 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:212) [bci: 35]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2679 
=== Usages ===
=== Predecessor ===
v1988 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2679  <|@  <|@
f <@~|@floating>@ <|@
tid v2784 <|@
result [v124|QWORD[.] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a282 
index: - 
=== Succesors ===
=== Usages ===
v2679 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a282 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2679 <|@
result v126|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:213) [bci: 46]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v2784 
=== Succesors ===
next: v2680 
=== Usages ===
v2523 v2748 v2749 v2752 
=== Predecessor ===
v1986 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2784 #next: v2680  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2680 <|@
result v127|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ObjArrayKlass::_element_klass:final
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
nullCheck: false
stamp: Klass*!
=== Inputs ===
stateBefore: - 
guard: v279 
address: v2728 
=== Succesors ===
next: i2034 
=== Usages ===
v2038 v2027 v2747 v2000 v2007 
=== Predecessor ===
v2679 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v279 address: v2728 #next: i2034  <|@  <|@
f <@~|@floating>@ <|@
tid v2747 <|@
result [v127|QWORD + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: v2680 
index: - 
=== Succesors ===
=== Usages ===
i2034 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: v2680 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2034 <|@
result v128|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: Klass::_super_check_offset:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:74) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:216) [bci: 77]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2747 
=== Succesors ===
next: v2681 
=== Usages ===
v1997 j1998 
=== Predecessor ===
v2680 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2747 #next: v2681  <|@  <|@
f <@~|@floating>@ <|@
tid j1998 <|@
result v129|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:78) [bci: 36]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:216) [bci: 77]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i2034 
=== Succesors ===
=== Usages ===
v2748 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i2034  <|@  <|@
f <@~|@floating>@ <|@
tid v2748 <|@
result [v129|QWORD + v126|DWORD * 8] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times8
stamp: void*
=== Inputs ===
base: j1998 
index: v2679 
=== Succesors ===
=== Usages ===
v2681 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1998 index: v2679  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2681 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: PrimarySupers:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:78) [bci: 36]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:216) [bci: 77]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
nullCheck: false
stamp: Klass*
=== Inputs ===
stateBefore: - 
guard: - 
address: v2748 
=== Succesors ===
next: v2003 
=== Usages ===
v2000 
=== Predecessor ===
i2034 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2748 #next: v2003  <|@  <|@
f <@~|@floating>@ <|@
tid v2000 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:78) [bci: 40]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:216) [bci: 77]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2680 
y: v2681 
=== Succesors ===
=== Usages ===
v2003 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2680 y: v2681  <|@  <|@
f <@*|@fixed>@ <|@
tid v2003 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:78) [bci: 43]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:216) [bci: 77]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v2000 
=== Succesors ===
trueSuccessor: v2001 
falseSuccessor: v2002 
=== Usages ===
=== Predecessor ===
v2681 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2000 #trueSuccessor: v2001 #falseSuccessor: v2002  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v126|DWORD = MOV [v124|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v127|QWORD = MOV [v73|DWORD * 8 + 232] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v128|DWORD = MOV [v127|QWORD + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v129|QWORD = MOVSXD v128|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v127|QWORD, y: [v129|QWORD + v126|DWORD * 8]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B113 -> B114 falseDestination: B113 -> B115 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B113" 
    successors "B122" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4607384112386888277
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2001 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:79) [bci: 46]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:216) [bci: 77]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2045 
=== Usages ===
=== Predecessor ===
v2003 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2045  <|@  <|@
f <@*|@fixed>@ <|@
tid v2045 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2227 
=== Predecessor ===
v2001 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B114 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B113" 
    successors "B116" "B125" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4607384112386888277
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2002 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:88) [bci: 70]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:216) [bci: 77]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2006 
=== Usages ===
=== Predecessor ===
v2003 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2006  <|@  <|@
f <@~|@floating>@ <|@
tid v1997 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:75) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:216) [bci: 77]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2034 
y: i1996 
=== Succesors ===
=== Usages ===
v2006 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i2034 y: i1996  <|@  <|@
f <@*|@fixed>@ <|@
tid v2006 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:88) [bci: 72]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:216) [bci: 77]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1997 
=== Succesors ===
trueSuccessor: v2004 
falseSuccessor: v2005 
=== Usages ===
=== Predecessor ===
v2002 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1997 #trueSuccessor: v2004 #falseSuccessor: v2005  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v128|DWORD y: 24 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B115 -> B116 falseDestination: B115 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B115" 
    successors "B117" "B118" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4607384112386888277
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2004 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:93) [bci: 84]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:216) [bci: 77]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2010 
=== Usages ===
=== Predecessor ===
v2006 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2010  <|@  <|@
f <@~|@floating>@ <|@
tid v2523 <|@
result v130|QWORD <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:213) [bci: 46]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
op: Uncompress
stamp: Klass*!
=== Inputs ===
value: v2679 
=== Succesors ===
=== Usages ===
v2007 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: v2679  <|@  <|@
f <@~|@floating>@ <|@
tid v2007 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:98) [bci: 2]
at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:93) [bci: 87]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:216) [bci: 77]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2523 
y: v2680 
=== Succesors ===
=== Usages ===
v2010 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2523 y: v2680  <|@  <|@
f <@*|@fixed>@ <|@
tid v2010 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:98) [bci: 5]
at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:93) [bci: 87]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:216) [bci: 77]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v2007 
=== Succesors ===
trueSuccessor: v2008 
falseSuccessor: v2009 
=== Usages ===
=== Predecessor ===
v2004 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2007 #trueSuccessor: v2008 #falseSuccessor: v2009  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v130|QWORD = UNCOMPRESSPOINTER (input: v126|DWORD, ~baseRegister: -) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@68a0169d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMP (x: v127|QWORD, y: v130|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B116 -> B117 falseDestination: B116 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B116" 
    successors "B122" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4602880512759517781
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2008 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:99) [bci: 8]
at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:93) [bci: 87]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:216) [bci: 77]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2046 
=== Usages ===
=== Predecessor ===
v2010 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2046  <|@  <|@
f <@*|@fixed>@ <|@
tid v2046 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2227 
=== Predecessor ===
v2008 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B117 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B116" 
    successors "B119" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4602880512759517781
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2009 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:104) [bci: 17]
at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:93) [bci: 87]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:216) [bci: 77]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
stamp: void
=== Inputs ===
=== Succesors ===
next: j2035 
=== Usages ===
=== Predecessor ===
v2010 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j2035  <|@  <|@
f <@~|@floating>@ <|@
tid v2749 <|@
result [v126|DWORD * 8 + 32] <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: v2679 
=== Succesors ===
=== Usages ===
j2035 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: v2679  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2035 <|@
result v131|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: SecondarySupers:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:104) [bci: 27]
at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:93) [bci: 87]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:216) [bci: 77]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v2749 
=== Succesors ===
next: i2036 
=== Usages ===
v2750 v2751 
=== Predecessor ===
v2009 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2749 #next: i2036  <|@  <|@
f <@~|@floating>@ <|@
tid v2750 <|@
result [v131|QWORD] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j2035 
index: - 
=== Succesors ===
=== Usages ===
i2036 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2035 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2036 <|@
result v132|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: MetaspaceArrayLength:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:105) [bci: 41]
at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:93) [bci: 87]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:216) [bci: 77]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2750 
=== Succesors ===
next: v2013 
=== Usages ===
v2016 
=== Predecessor ===
j2035 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2750 #next: v2013  <|@  <|@
f <@~|@floating>@ <|@
tid i2021 <|@
result int[3|0x3] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.loadSecondarySupersElement(TypeCheckSnippetUtils.java:188) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:107) [bci: 63]
at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:93) [bci: 87]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:216) [bci: 77]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
rawvalue: 3
stableDimension: 0
stamp: i32 [3] ⇊0000000000000003 ⇈0000000000000003
stampKind: i32
value: int[3|0x3]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2022 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i2020 <|@
result int[8|0x8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.metaspaceArrayBaseOffset(GraalHotSpotVMConfig) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.loadSecondarySupersElement(TypeCheckSnippetUtils.java:188) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:107) [bci: 63]
at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:93) [bci: 87]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:216) [bci: 77]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
rawvalue: 8
stableDimension: 0
stamp: i32 [8] ⇊0000000000000008 ⇈0000000000000008
stampKind: i32
value: int[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2023 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2013 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:106) [bci: 49]
at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:93) [bci: 87]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:216) [bci: 77]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2014 
=== Predecessor ===
i2036 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v131|QWORD = MOV [v126|DWORD * 8 + 32] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v132|DWORD = MOV [v131|QWORD] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0]] destination: B118 -> B119 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B118" "B123" 
    successors "B120" "B124" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 2
    probability 4604897066994192652
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i2015 <|@
result v133|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:93) [bci: 87]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:216) [bci: 77]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v2014 
values: i21 i2031 
=== Succesors ===
=== Usages ===
v2016 i2022 i2031 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2014 values: i21 i2031  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2014 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 1.4285714285714286
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:106) [bci: 49]
at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:93) [bci: 87]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:216) [bci: 77]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v2013 
=== Succesors ===
next: v2019 
=== Usages ===
i2015 v2018 v2029 v2032 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v2013 #next: v2019  <|@  <|@
f <@~|@floating>@ <|@
tid v2016 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:106) [bci: 53]
at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:93) [bci: 87]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:216) [bci: 77]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2015 
y: i2036 
=== Succesors ===
=== Usages ===
v2019 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2015 y: i2036  <|@  <|@
f <@*|@fixed>@ <|@
tid v2019 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:106) [bci: 53]
at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:93) [bci: 87]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:216) [bci: 77]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v2016 
=== Succesors ===
trueSuccessor: v2017 
falseSuccessor: v2018 
=== Usages ===
=== Predecessor ===
v2014 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2016 #trueSuccessor: v2017 #falseSuccessor: v2018  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v133|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v132|DWORD, y: v133|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B119 -> B120 falseDestination: B119 -> B124 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B119" 
    successors "B121" "B123" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4604897066994192652
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2017 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:107) [bci: 56]
at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:93) [bci: 87]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:216) [bci: 77]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
stamp: void
=== Inputs ===
=== Succesors ===
next: j2037 
=== Usages ===
=== Predecessor ===
v2019 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j2037  <|@  <|@
f <@~|@floating>@ <|@
tid i2022 <|@
result v134|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.loadSecondarySupersElement(TypeCheckSnippetUtils.java:188) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:107) [bci: 63]
at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:93) [bci: 87]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:216) [bci: 77]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i2015 
y: i2021 
=== Succesors ===
=== Usages ===
i2023 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i2015 y: i2021  <|@  <|@
f <@~|@floating>@ <|@
tid i2023 <|@
result v135|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.loadSecondarySupersElement(TypeCheckSnippetUtils.java:188) [bci: 12]
at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:107) [bci: 63]
at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:93) [bci: 87]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:216) [bci: 77]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i2022 
y: i2020 
=== Succesors ===
=== Usages ===
j2024 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i2022 y: i2020  <|@  <|@
f <@~|@floating>@ <|@
tid j2024 <|@
result v136|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.loadSecondarySupersElement(TypeCheckSnippetUtils.java:188) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:107) [bci: 63]
at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:93) [bci: 87]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:216) [bci: 77]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
resultBits: 64
stamp: i64 [-2147483648 - 2147483640] ⇈fffffffffffffff8
=== Inputs ===
value: i2023 
=== Succesors ===
=== Usages ===
v2751 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i2023  <|@  <|@
f <@~|@floating>@ <|@
tid v2751 <|@
result [v131|QWORD + v136|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j2035 
index: j2024 
=== Succesors ===
=== Usages ===
j2037 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2035 index: j2024  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2037 <|@
result v137|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: SecondarySupersElement:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.loadSecondarySupersElement(TypeCheckSnippetUtils.java:188) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:107) [bci: 63]
at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:93) [bci: 87]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:216) [bci: 77]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v2751 
=== Succesors ===
next: v2030 
=== Usages ===
v2026 
=== Predecessor ===
v2017 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2751 #next: v2030  <|@  <|@
f <@~|@floating>@ <|@
tid v2026 <|@
result v137|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.loadSecondarySupersElement(TypeCheckSnippetUtils.java:188) [bci: 22]
at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:107) [bci: 63]
at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:93) [bci: 87]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:216) [bci: 77]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
stamp: Klass*
=== Inputs ===
input: j2037 
=== Succesors ===
=== Usages ===
v2027 
=== Predecessor ===
- >@ <|@
instruction <@PointerCast|@org.graalvm.compiler.hotspot.word.PointerCastNode>@ input: j2037  <|@  <|@
f <@~|@floating>@ <|@
tid v2027 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:107) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:93) [bci: 87]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:216) [bci: 77]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2026 
y: v2680 
=== Succesors ===
=== Usages ===
v2030 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2026 y: v2680  <|@  <|@
f <@*|@fixed>@ <|@
tid v2030 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:107) [bci: 72]
at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:93) [bci: 87]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:216) [bci: 77]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
stamp: void
trueSuccessorProbability: 0.4
=== Inputs ===
condition: v2027 
=== Succesors ===
trueSuccessor: v2029 
falseSuccessor: v2028 
=== Usages ===
=== Predecessor ===
j2037 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2027 #trueSuccessor: v2029 #falseSuccessor: v2028  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v134|DWORD = SHL v133|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v135|DWORD = LEA [v134|DWORD + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v136|QWORD = MOVSXD v135|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v137|QWORD = MOV [v131|QWORD + v136|QWORD * 1] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v127|QWORD, y: v137|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.4 condition: = trueDestination: B120 -> B121 falseDestination: B120 -> B123 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B120" 
    successors "B122" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4599049097877038909
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2029 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:108) [bci: 75]
at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:93) [bci: 87]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:216) [bci: 77]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v2014 
=== Succesors ===
next: v2038 
=== Usages ===
=== Predecessor ===
v2030 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v2014 #next: v2038  <|@  <|@
f <@~|@floating>@ <|@
tid v2752 <|@
result [v126|DWORD * 8 + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: v2679 
=== Succesors ===
=== Usages ===
v2038 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: v2679  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2038 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: SecondarySuperCache
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:108) [bci: 86]
at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:93) [bci: 87]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:216) [bci: 77]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2752 
value: v2680 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2047 
=== Usages ===
=== Predecessor ===
v2029 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2752 value: v2680 stateAfter: - lastLocationAccess: - #next: v2047  <|@  <|@
f <@*|@fixed>@ <|@
tid v2047 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2227 
=== Predecessor ===
v2038 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v126|DWORD * 8 + 24], y: v127|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B121 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B112" "B114" "B117" "B121" 
    successors "B69" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4611906383812727985
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2227 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2229 v2045 v2046 v2047 
=== Succesors ===
next: v1209 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2229 v2045 v2046 v2047 #next: v1209  <|@  <|@
f <@~|@floating>@ <|@
tid v1465 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
kf: v2601 v79 
=== Succesors ===
=== Usages ===
v1209 
=== Predecessor ===
- >@ <|@
instruction <@c|@com.oracle.graal.enterprise.k.c>@ kf: v2601 v79  <|@  <|@
f <@~|@floating>@ <|@
tid v2729 <|@
result [v68|QWORD[.] + v75|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a843 
index: i75 
=== Succesors ===
=== Usages ===
v1209 j2524 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a843 index: i75  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1209 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
location: Array: Object
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1465 
address: v2729 
value: a2095 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j2524 
=== Usages ===
=== Predecessor ===
v2227 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1465 address: v2729 value: a2095 stateAfter: - lastLocationAccess: - #next: j2524  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2524 <|@
result [v68|QWORD[.] + v75|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v2729 
=== Succesors ===
next: v2528 
=== Usages ===
j2525 
=== Predecessor ===
v1209 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: v2729 #next: v2528  <|@  <|@
f <@~|@floating>@ <|@
tid j2525 <|@
result v138|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j2524 
y: i2505 
=== Succesors ===
=== Usages ===
v2785 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j2524 y: i2505  <|@  <|@
f <@~|@floating>@ <|@
tid v2785 <|@
result [v138|QWORD[*] + v74|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j2525 
index: j2509 
=== Succesors ===
=== Usages ===
v2528 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2525 index: j2509  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2528 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2785 
value: i2511 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1450 
=== Usages ===
=== Predecessor ===
j2524 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2785 value: i2511 stateAfter: - lastLocationAccess: - #next: v1450  <|@  <|@
tid ?93 <|@
d <@d|@=== Debug Properties ===
bci: 120
code: ResolvedJavaMethodBytecode<AbstractCollection.toArray(Object[])>
duringCall: false
localsSize: 6
locksSize: 0
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
rethrowException: false
sourceFile: AbstractCollection.java
sourceLine: 182
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - a2 - a843 a270 i75 
=== Succesors ===
=== Usages ===
v1450 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - a2 - a843 a270 i75  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1450 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?93 
=== Succesors ===
next: v95 
=== Usages ===
=== Predecessor ===
v2528 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?93 #next: v95  <|@  <|@
f <@~|@floating>@ <|@
tid i94 <|@
result v140|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 120]
stamp: i32
=== Inputs ===
x: i75 
y: i20 
=== Succesors ===
=== Usages ===
i75 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i75 y: i20  <|@  <|@
f <@*|@fixed>@ <|@
tid v95 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 0
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42]
stamp: void
=== Inputs ===
loopBegin: v74 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1450 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v74  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v68|QWORD[.] + v75|DWORD * 4 + 16], y: v125|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v139|QWORD[.] = LEA [v68|QWORD[.] + v75|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v138|QWORD[*] = SHR v139|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v138|QWORD[*] + v74|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 120]
locals: - v1|QWORD[.] - v68|QWORD[.] v67|QWORD[.] v75|DWORD 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:120] <|@ <|@
      nr   -1  <|@ instruction v140|DWORD = INC v75|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v140|DWORD] destination: B122 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B123"
    from_bci -1
    to_bci -1
    predecessors "B120" 
    successors "B119" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 2
    probability 4601737836856605403
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2028 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:106) [bci: 98]
at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:93) [bci: 87]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:216) [bci: 77]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2032 
=== Usages ===
=== Predecessor ===
v2030 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2032  <|@  <|@
f <@~|@floating>@ <|@
tid i2031 <|@
result v141|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:106) [bci: 98]
at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:93) [bci: 87]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:216) [bci: 77]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
stamp: i32
=== Inputs ===
x: i2015 
y: i20 
=== Succesors ===
=== Usages ===
i2015 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i2015 y: i20  <|@  <|@
f <@*|@fixed>@ <|@
tid v2032 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:106) [bci: 49]
at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:93) [bci: 87]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:216) [bci: 77]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
stamp: void
=== Inputs ===
loopBegin: v2014 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v2028 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v2014  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v141|DWORD = INC v133|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v141|DWORD] destination: B123 -> B119 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B124"
    from_bci -1
    to_bci -1
    predecessors "B119" 
    successors "B126" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2018 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:113) [bci: 104]
at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:93) [bci: 87]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:216) [bci: 77]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v2014 
=== Succesors ===
next: v2243 
=== Usages ===
=== Predecessor ===
v2019 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v2014 #next: v2243  <|@  <|@
f <@*|@fixed>@ <|@
tid v2243 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2230 
=== Predecessor ===
v2018 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B124 -> B126 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B125"
    from_bci -1
    to_bci -1
    predecessors "B115" 
    successors "B126" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2005 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:89) [bci: 75]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:216) [bci: 77]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2238 
=== Usages ===
=== Predecessor ===
v2006 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2238  <|@  <|@
f <@*|@fixed>@ <|@
tid v2238 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2230 
=== Predecessor ===
v2005 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B125 -> B126 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B126"
    from_bci -1
    to_bci -1
    predecessors "B125" "B124" 
    successors "B127" 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2230 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2238 v2243 
=== Succesors ===
next: v1689 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2238 v2243 #next: v1689  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B126 -> B127 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B127"
    from_bci -1
    to_bci -1
    predecessors "B126" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1689 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v74 
=== Succesors ===
next: v1687 
=== Usages ===
=== Predecessor ===
v2230 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v74 #next: v1687  <|@  <|@
tid ?280 <|@
d <@d|@=== Debug Properties ===
bci: 119
code: ResolvedJavaMethodBytecode<AbstractCollection.toArray(Object[])>
duringCall: false
localsSize: 6
locksSize: 0
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
rethrowException: false
sourceFile: AbstractCollection.java
sourceLine: 196
stackSize: 3
=== Inputs ===
outerFrameState: - 
values: - a2 - a843 a270 i75 a843 i75 a282 
=== Succesors ===
=== Usages ===
v1687 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - a2 - a843 a270 i75 a843 i75 a282  <|@  <|@
f <@*|@fixed>@ <|@
tid v1687 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 1210
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
reason: ArrayStoreException
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?280 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1689 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?280  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -309803 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
stack: v68|QWORD[.] v75|DWORD v124|QWORD[.] 
locals: - v1|QWORD[.] - v68|QWORD[.] v67|QWORD[.] v75|DWORD 
>@ <|@ instruction DEOPT info [bci:119] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B128"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B145" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1673 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1441) [bci: 16]
at java.util.HashMap$KeyIterator.next(HashMap.java:1466) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v74 
=== Succesors ===
next: v2175 
=== Usages ===
=== Predecessor ===
v1674 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v74 #next: v2175  <|@  <|@
f <@~|@floating>@ <|@
tid i2176 <|@
result int[-295187|0xfffffffffffb7eed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -295187
stableDimension: 0
stamp: i32 [-295187] ⇊00000000fffb7eed ⇈00000000fffb7eed
stampKind: i32
value: int[-295187|0xfffffffffffb7eed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2130 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2175 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2127 
=== Predecessor ===
v1673 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-295187|0xfffffffffffb7eed]] destination: B128 -> B145 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B129"
    from_bci -1
    to_bci -1
    predecessors "B98" 
    successors "B145" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1658 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/HashMap$KeyIterator; target_method=hasNext target_method_class=Ljava/util/HashMap$HashIterator; position=at java.util.AbstractCollection.toArray(AbstractCollection.java:183) [bci: 51]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v74 
=== Succesors ===
next: v2169 
=== Usages ===
=== Predecessor ===
v1659 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v74 #next: v2169  <|@  <|@
f <@~|@floating>@ <|@
tid i2170 <|@
result int[-291379|0xfffffffffffb8dcd] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -291379
stableDimension: 0
stamp: i32 [-291379] ⇊00000000fffb8dcd ⇈00000000fffb8dcd
stampKind: i32
value: int[-291379|0xfffffffffffb8dcd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2130 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2169 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2127 
=== Predecessor ===
v1658 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-291379|0xfffffffffffb8dcd]] destination: B129 -> B145 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B130"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B131" "B134" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v81 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 126]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v74 
=== Succesors ===
next: v150 
=== Usages ===
=== Predecessor ===
v83 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v74 #next: v150  <|@  <|@
f <@*|@fixed>@ <|@
tid v150 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/ArrayList$SubList$1; target_method=hasNext target_method_class=Ljava/util/ArrayList$SubList$1; position=at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 128]
stamp: void
trueSuccessorProbability: 0.9361509309606195
=== Inputs ===
condition: v2586 
=== Succesors ===
trueSuccessor: v143 
falseSuccessor: v149 
=== Usages ===
=== Predecessor ===
v81 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2586 #trueSuccessor: v143 #falseSuccessor: v149  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v72|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList$SubList$1;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9361509309606195 condition: = trueDestination: B130 -> B131 falseDestination: B130 -> B134 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B131"
    from_bci -1
    to_bci -1
    predecessors "B130" 
    successors "B132" "B133" 
    xhandlers
    flags 
    probability 4606607317512949994
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v143 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/ArrayList$SubList$1; target_method=hasNext target_method_class=Ljava/util/ArrayList$SubList$1; position=at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 128]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2682 
=== Usages ===
=== Predecessor ===
v150 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2682  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2682 <|@
result v142|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList$SubList$1.this$1
nodeSourcePosition: at java.util.ArrayList$SubList$1.hasNext(ArrayList.java:1109) [bci: 5]
at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 128]
nullCheck: false
stamp: n# Ljava/util/ArrayList$SubList;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2698 
=== Succesors ===
next: i2683 
=== Usages ===
v2730 
=== Predecessor ===
v143 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2698 #next: i2683  <|@  <|@
f <@~|@floating>@ <|@
tid v2730 <|@
result [v142|DWORD[.] * 8 + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2682 
=== Succesors ===
=== Usages ===
i2683 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2682  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2683 <|@
result v143|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList$SubList.size
nodeSourcePosition: at java.util.ArrayList$SubList$1.hasNext(ArrayList.java:1109) [bci: 8]
at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 128]
nullCheck: true
stamp: i32
=== Inputs ===
stateBefore: ?76 
guard: - 
address: v2730 
=== Succesors ===
next: i2684 
=== Usages ===
v226 
=== Predecessor ===
a2682 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?76 guard: - address: v2730 #next: i2684  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2684 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList$SubList$1.cursor
nodeSourcePosition: at java.util.ArrayList$SubList$1.hasNext(ArrayList.java:1109) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 128]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2697 
=== Succesors ===
next: v1698 
=== Usages ===
v226 
=== Predecessor ===
i2683 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2697 #next: v1698  <|@  <|@
f <@~|@floating>@ <|@
tid v226 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.ArrayList$SubList$1.hasNext(ArrayList.java:1109) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 128]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2683 
y: i2684 
=== Succesors ===
=== Usages ===
v1698 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i2683 y: i2684  <|@  <|@
f <@*|@fixed>@ <|@
tid v1698 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 133]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v226 
=== Succesors ===
trueSuccessor: v1695 
falseSuccessor: v1697 
=== Usages ===
=== Predecessor ===
i2684 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v226 #trueSuccessor: v1695 #falseSuccessor: v1697  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v142|DWORD[.] = MOV [v67|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42]
locals: - v1|QWORD[.] - v68|QWORD[.] v67|QWORD[.] v75|DWORD 
>@ <|@ instruction v143|DWORD = MOV [v142|DWORD[.] * 8 + 24] size: DWORD state [bci:42] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v143|DWORD, y: [v67|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B131 -> B132 falseDestination: B131 -> B133 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B132"
    from_bci -1
    to_bci -1
    predecessors "B131" 
    successors 
    xhandlers
    flags 
    probability 4606607317512949994
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1695 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 133]
stamp: void
=== Inputs ===
=== Succesors ===
next: v867 
=== Usages ===
=== Predecessor ===
v1698 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v867  <|@  <|@
f <@*|@fixed>@ <|@
tid v867 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 146]
stamp: void
=== Inputs ===
result: a843 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1695 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a843 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v68|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B133"
    from_bci -1
    to_bci -1
    predecessors "B131" 
    successors "B145" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1697 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 133]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2181 
=== Usages ===
=== Predecessor ===
v1698 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2181  <|@  <|@
f <@~|@floating>@ <|@
tid i2182 <|@
result int[-312851|0xfffffffffffb39ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -312851
stableDimension: 0
stamp: i32 [-312851] ⇊00000000fffb39ed ⇈00000000fffb39ed
stampKind: i32
value: int[-312851|0xfffffffffffb39ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2130 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2181 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2127 
=== Predecessor ===
v1697 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-312851|0xfffffffffffb39ed]] destination: B133 -> B145 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B134"
    from_bci -1
    to_bci -1
    predecessors "B130" 
    successors "B135" "B140" 
    xhandlers
    flags 
    probability 4589265230959704240
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v149 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 128]
stamp: void
=== Inputs ===
=== Succesors ===
next: v159 
=== Usages ===
=== Predecessor ===
v150 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v159  <|@  <|@
f <@~|@floating>@ <|@
tid v2610 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 128]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2641 
y: v2566 
=== Succesors ===
=== Usages ===
v159 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2641 y: v2566  <|@  <|@
f <@*|@fixed>@ <|@
tid v159 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/SubList$1; target_method=hasNext target_method_class=Ljava/util/SubList$1; position=at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 128]
stamp: void
trueSuccessorProbability: 0.8662365591397847
=== Inputs ===
condition: v2610 
=== Succesors ===
trueSuccessor: v155 
falseSuccessor: v158 
=== Usages ===
=== Predecessor ===
v149 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2610 #trueSuccessor: v155 #falseSuccessor: v158  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v72|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/SubList$1;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.8662365591397847 condition: = trueDestination: B134 -> B135 falseDestination: B134 -> B140 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B135"
    from_bci -1
    to_bci -1
    predecessors "B134" 
    successors "B136" "B139" 
    xhandlers
    flags 
    probability 4588131601196852644
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v155 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/SubList$1; target_method=hasNext target_method_class=Ljava/util/SubList$1; position=at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 128]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2685 
=== Usages ===
=== Predecessor ===
v159 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2685  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2685 <|@
result v144|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: SubList$1.i
nodeSourcePosition: at java.util.SubList$1.nextIndex(AbstractList.java:724) [bci: 1]
at java.util.SubList$1.hasNext(AbstractList.java:702) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 128]
nullCheck: false
stamp: n -
=== Inputs ===
stateBefore: - 
guard: - 
address: v2706 
=== Succesors ===
next: v2686 
=== Usages ===
v2786 v2731 
=== Predecessor ===
v155 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2706 #next: v2686  <|@  <|@
f <@~|@floating>@ <|@
tid v2786 <|@
result [v144|DWORD[.] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2685 
=== Succesors ===
=== Usages ===
v2686 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2685  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2686 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.SubList$1.nextIndex(AbstractList.java:724) [bci: 4]
at java.util.SubList$1.hasNext(AbstractList.java:702) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 128]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?76 
guard: - 
address: v2786 
=== Succesors ===
next: v1706 
=== Usages ===
v2590 
=== Predecessor ===
a2685 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?76 guard: - address: v2786 #next: v1706  <|@  <|@
f <@~|@floating>@ <|@
tid v2590 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.SubList$1.nextIndex(AbstractList.java:724) [bci: 4]
at java.util.SubList$1.hasNext(AbstractList.java:702) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 128]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2686 
y: v2572 
=== Succesors ===
=== Usages ===
v1706 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2686 y: v2572  <|@  <|@
f <@*|@fixed>@ <|@
tid v1706 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/AbstractList$ListItr; target_method=nextIndex target_method_class=Ljava/util/AbstractList$ListItr; position=at java.util.SubList$1.nextIndex(AbstractList.java:724) [bci: 4]
at java.util.SubList$1.hasNext(AbstractList.java:702) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 128]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v2590 
=== Succesors ===
trueSuccessor: v1703 
falseSuccessor: v1705 
=== Usages ===
=== Predecessor ===
v2686 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2590 #trueSuccessor: v1703 #falseSuccessor: v1705  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v144|DWORD[.] = MOV [v67|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42]
locals: - v1|QWORD[.] - v68|QWORD[.] v67|QWORD[.] v75|DWORD 
>@ <|@ instruction CMP [v144|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed} state [bci:42] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B135 -> B136 falseDestination: B135 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B136"
    from_bci -1
    to_bci -1
    predecessors "B135" 
    successors "B137" "B138" 
    xhandlers
    flags 
    probability 4588131601196852644
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1703 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/AbstractList$ListItr; target_method=nextIndex target_method_class=Ljava/util/AbstractList$ListItr; position=at java.util.SubList$1.nextIndex(AbstractList.java:724) [bci: 4]
at java.util.SubList$1.hasNext(AbstractList.java:702) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 128]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2687 
=== Usages ===
=== Predecessor ===
v1706 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2687  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2687 <|@
result v145|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: SubList$1.this$0
nodeSourcePosition: at java.util.SubList$1.nextIndex(AbstractList.java:724) [bci: 10]
at java.util.SubList$1.hasNext(AbstractList.java:702) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 128]
nullCheck: false
stamp: n Ljava/util/SubList;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2700 
=== Succesors ===
next: i2688 
=== Usages ===
v2733 v2732 
=== Predecessor ===
v1703 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2700 #next: i2688  <|@  <|@
f <@~|@floating>@ <|@
tid v2733 <|@
result [v145|DWORD[.] * 8 + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2687 
=== Succesors ===
=== Usages ===
i2688 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2687  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2688 <|@
result v146|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: SubList.size
nodeSourcePosition: at java.util.SubList.access$200(AbstractList.java:613) [bci: 1]
at java.util.SubList$1.hasNext(AbstractList.java:702) [bci: 8]
at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 128]
nullCheck: true
stamp: i32
=== Inputs ===
stateBefore: ?76 
guard: - 
address: v2733 
=== Succesors ===
next: i2689 
=== Usages ===
v234 
=== Predecessor ===
a2687 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?76 guard: - address: v2733 #next: i2689  <|@  <|@
f <@~|@floating>@ <|@
tid v2732 <|@
result [v145|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2687 
=== Succesors ===
=== Usages ===
i2689 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2687  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2689 <|@
result v147|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: SubList.offset
nodeSourcePosition: at java.util.SubList.access$000(AbstractList.java:613) [bci: 1]
at java.util.SubList$1.nextIndex(AbstractList.java:724) [bci: 13]
at java.util.SubList$1.hasNext(AbstractList.java:702) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 128]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2732 
=== Succesors ===
next: i2690 
=== Usages ===
i315 
=== Predecessor ===
i2688 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2732 #next: i2690  <|@  <|@
f <@~|@floating>@ <|@
tid v2731 <|@
result [v144|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2685 
=== Succesors ===
=== Usages ===
i2690 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2685  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2690 <|@
result v148|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractList$Itr.cursor
nodeSourcePosition: at java.util.AbstractList$ListItr.nextIndex(AbstractList.java:413) [bci: 1]
at java.util.SubList$1.nextIndex(AbstractList.java:724) [bci: 4]
at java.util.SubList$1.hasNext(AbstractList.java:702) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 128]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2731 
=== Succesors ===
next: v1714 
=== Usages ===
i315 
=== Predecessor ===
i2689 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2731 #next: v1714  <|@  <|@
f <@~|@floating>@ <|@
tid i315 <|@
result v149|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at java.util.SubList$1.nextIndex(AbstractList.java:724) [bci: 16]
at java.util.SubList$1.hasNext(AbstractList.java:702) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 128]
stamp: i32
=== Inputs ===
x: i2690 
y: i2689 
=== Succesors ===
=== Usages ===
v234 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i2690 y: i2689  <|@  <|@
f <@~|@floating>@ <|@
tid v234 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.SubList$1.hasNext(AbstractList.java:702) [bci: 11]
at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 128]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i315 
y: i2688 
=== Succesors ===
=== Usages ===
v1714 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i315 y: i2688  <|@  <|@
f <@*|@fixed>@ <|@
tid v1714 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 133]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v234 
=== Succesors ===
trueSuccessor: v1713 
falseSuccessor: v1711 
=== Usages ===
=== Predecessor ===
i2690 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v234 #trueSuccessor: v1713 #falseSuccessor: v1711  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v145|DWORD[.] = MOV [v67|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42]
locals: - v1|QWORD[.] - v68|QWORD[.] v67|QWORD[.] v75|DWORD 
>@ <|@ instruction v146|DWORD = MOV [v145|DWORD[.] * 8 + 20] size: DWORD state [bci:42] <|@ <|@
      nr   -1  <|@ instruction v147|DWORD = MOV [v145|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v148|DWORD = MOV [v144|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v149|DWORD = SUB (x: v148|DWORD, ~y: v147|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v146|DWORD, y: v149|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B136 -> B137 falseDestination: B136 -> B138 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B137"
    from_bci -1
    to_bci -1
    predecessors "B136" 
    successors "B145" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1713 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 133]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2189 
=== Usages ===
=== Predecessor ===
v1714 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2189  <|@  <|@
f <@~|@floating>@ <|@
tid i2190 <|@
result int[-317459|0xfffffffffffb27ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -317459
stableDimension: 0
stamp: i32 [-317459] ⇊00000000fffb27ed ⇈00000000fffb27ed
stampKind: i32
value: int[-317459|0xfffffffffffb27ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2130 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2189 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2127 
=== Predecessor ===
v1713 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-317459|0xfffffffffffb27ed]] destination: B137 -> B145 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B138"
    from_bci -1
    to_bci -1
    predecessors "B136" 
    successors 
    xhandlers
    flags 
    probability 4588131601196852644
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1711 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 133]
stamp: void
=== Inputs ===
=== Succesors ===
next: v952 
=== Usages ===
=== Predecessor ===
v1714 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v952  <|@  <|@
f <@*|@fixed>@ <|@
tid v952 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 146]
stamp: void
=== Inputs ===
result: a843 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1711 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a843 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v68|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B139"
    from_bci -1
    to_bci -1
    predecessors "B135" 
    successors "B145" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1705 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/AbstractList$ListItr; target_method=nextIndex target_method_class=Ljava/util/AbstractList$ListItr; position=at java.util.SubList$1.nextIndex(AbstractList.java:724) [bci: 4]
at java.util.SubList$1.hasNext(AbstractList.java:702) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 128]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2187 
=== Usages ===
=== Predecessor ===
v1706 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2187  <|@  <|@
f <@~|@floating>@ <|@
tid i2188 <|@
result int[-314163|0xfffffffffffb34cd] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -314163
stableDimension: 0
stamp: i32 [-314163] ⇊00000000fffb34cd ⇈00000000fffb34cd
stampKind: i32
value: int[-314163|0xfffffffffffb34cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2130 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2187 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2127 
=== Predecessor ===
v1705 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-314163|0xfffffffffffb34cd]] destination: B139 -> B145 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B140"
    from_bci -1
    to_bci -1
    predecessors "B134" 
    successors "B141" "B144" 
    xhandlers
    flags 
    probability 4576076983509135087
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v158 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 128]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1718 
=== Usages ===
=== Predecessor ===
v159 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1718  <|@  <|@
f <@~|@floating>@ <|@
tid v2609 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 128]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2641 
y: v2583 
=== Succesors ===
=== Usages ===
v1718 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2641 y: v2583  <|@  <|@
f <@*|@fixed>@ <|@
tid v1718 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/HashMap$KeyIterator; target_method=hasNext target_method_class=Ljava/util/HashMap$HashIterator; position=at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 128]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v2609 
=== Succesors ===
trueSuccessor: v1715 
falseSuccessor: v1717 
=== Usages ===
=== Predecessor ===
v158 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2609 #trueSuccessor: v1715 #falseSuccessor: v1717  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v72|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap$KeyIterator;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B140 -> B141 falseDestination: B140 -> B144 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B141"
    from_bci -1
    to_bci -1
    predecessors "B140" 
    successors "B142" "B143" 
    xhandlers
    flags 
    probability 4576076983509135087
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1715 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/HashMap$KeyIterator; target_method=hasNext target_method_class=Ljava/util/HashMap$HashIterator; position=at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 128]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2691 
=== Usages ===
=== Predecessor ===
v1718 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2691  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2691 <|@
result v150|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashMap$HashIterator.next
nodeSourcePosition: at java.util.HashMap$HashIterator.hasNext(HashMap.java:1435) [bci: 1]
at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 128]
nullCheck: false
stamp: n Ljava/util/HashMap$Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2700 
=== Succesors ===
next: v1722 
=== Usages ===
v1348 
=== Predecessor ===
v1715 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2700 #next: v1722  <|@  <|@
f <@~|@floating>@ <|@
tid v1348 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.hasNext(HashMap.java:1435) [bci: 4]
at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 128]
stamp: void
=== Inputs ===
value: a2691 
=== Succesors ===
=== Usages ===
v1722 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a2691  <|@  <|@
f <@*|@fixed>@ <|@
tid v1722 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 133]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1348 
=== Succesors ===
trueSuccessor: v1719 
falseSuccessor: v1721 
=== Usages ===
=== Predecessor ===
a2691 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1348 #trueSuccessor: v1719 #falseSuccessor: v1721  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v150|DWORD[.] = MOV [v67|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v150|DWORD[.], y: v150|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B141 -> B142 falseDestination: B141 -> B143 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B142"
    from_bci -1
    to_bci -1
    predecessors "B141" 
    successors 
    xhandlers
    flags 
    probability 4576076983509135087
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1719 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 133]
stamp: void
=== Inputs ===
=== Succesors ===
next: v102 
=== Usages ===
=== Predecessor ===
v1722 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v102  <|@  <|@
f <@*|@fixed>@ <|@
tid v102 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 146]
stamp: void
=== Inputs ===
result: a843 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1719 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a843 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v68|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B143"
    from_bci -1
    to_bci -1
    predecessors "B141" 
    successors "B145" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1721 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 133]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2185 
=== Usages ===
=== Predecessor ===
v1722 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2185  <|@  <|@
f <@~|@floating>@ <|@
tid i2186 <|@
result int[-318739|0xfffffffffffb22ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -318739
stableDimension: 0
stamp: i32 [-318739] ⇊00000000fffb22ed ⇈00000000fffb22ed
stampKind: i32
value: int[-318739|0xfffffffffffb22ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2130 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2185 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2127 
=== Predecessor ===
v1721 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-318739|0xfffffffffffb22ed]] destination: B143 -> B145 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B144"
    from_bci -1
    to_bci -1
    predecessors "B140" 
    successors "B145" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1717 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/HashMap$KeyIterator; target_method=hasNext target_method_class=Ljava/util/HashMap$HashIterator; position=at java.util.AbstractCollection.toArray(AbstractCollection.java:199) [bci: 128]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2183 
=== Usages ===
=== Predecessor ===
v1718 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2183  <|@  <|@
f <@~|@floating>@ <|@
tid i2184 <|@
result int[-317747|0xfffffffffffb26cd] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -317747
stableDimension: 0
stamp: i32 [-317747] ⇊00000000fffb26cd ⇈00000000fffb26cd
stampKind: i32
value: int[-317747|0xfffffffffffb26cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2130 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2183 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2127 
=== Predecessor ===
v1717 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-317747|0xfffffffffffb26cd]] destination: B144 -> B145 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B145"
    from_bci -1
    to_bci -1
    predecessors "B72" "B81" "B80" "B79" "B78" "B97" "B96" "B95" "B89" "B93" "B129" "B128" "B133" "B144" "B143" "B139" "B137" 
    successors 
    xhandlers
    flags 
    probability 2373678478600962048
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i2130 <|@
result v151|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-318739 - -261131] ⇊00000000fff800c5 ⇈00000000fffffffd
valueDescription: i32
=== Inputs ===
merge: v2127 
values: i2136 i2140 i2142 i2146 i2148 i2152 i2156 i2160 i2164 i2168 i2170 i2176 i2182 i2184 i2186 i2188 i2190 
=== Succesors ===
=== Usages ===
v2132 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2127 values: i2136 i2140 i2142 i2146 i2148 i2152 i2156 i2160 i2164 i2168 i2170 i2176 i2182 i2184 i2186 i2188 i2190  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2127 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2135 v2139 v2141 v2145 v2147 v2151 v2155 v2159 v2163 v2167 v2169 v2175 v2181 v2183 v2185 v2187 v2189 
=== Succesors ===
next: v2132 
=== Usages ===
i2130 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2135 v2139 v2141 v2145 v2147 v2151 v2155 v2159 v2163 v2167 v2169 v2175 v2181 v2183 v2185 v2187 v2189 #next: v2132  <|@  <|@
f <@*|@fixed>@ <|@
tid v2132 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?76 
actionAndReason: i2130 
speculation: a2101 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v2127 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?76 actionAndReason: i2130 speculation: a2101  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v151|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v151|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42]
locals: - v1|QWORD[.] - v68|QWORD[.] v67|QWORD[.] v75|DWORD 
>@ <|@ instruction DEOPT info [bci:42] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B146"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1559 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2196 
=== Usages ===
=== Predecessor ===
v2606 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2196  <|@  <|@
f <@~|@floating>@ <|@
tid a2199 <|@
result v152|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: d.a@1368693834
stableDimension: 0
stamp: a!# Lcom/oracle/graal/enterprise/k/d$a;
stampKind: a -
value: Object[d.a@1368693834]
=== Inputs ===
=== Succesors ===
=== Usages ===
v2196 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i2198 <|@
result int[-305947|0xfffffffffffb54e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -305947
stableDimension: 0
stamp: i32 [-305947] ⇊00000000fffb54e5 ⇈00000000fffb54e5
stampKind: i32
value: int[-305947|0xfffffffffffb54e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
v2196 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2196 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?268 
actionAndReason: i2198 
speculation: a2199 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1559 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?268 actionAndReason: i2198 speculation: a2199  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v152|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1368693834] <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -305947 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: v152|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 37]
stack: v67|QWORD[.] 
locals: - v1|QWORD[.] - v68|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:37] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B147"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B148" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1495 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/HashSet; target_method=size target_method_class=Ljava/util/HashSet; position=at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2113 
=== Usages ===
=== Predecessor ===
v1496 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2113  <|@  <|@
f <@~|@floating>@ <|@
tid i2114 <|@
result int[-341043|0xfffffffffffacbcd] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -341043
stableDimension: 0
stamp: i32 [-341043] ⇊00000000fffacbcd ⇈00000000fffacbcd
stampKind: i32
value: int[-341043|0xfffffffffffacbcd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2102 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v2113 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2098 
=== Predecessor ===
v1495 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-341043|0xfffffffffffacbcd]] destination: B147 -> B148 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B148"
    from_bci -1
    to_bci -1
    predecessors "B3" "B147" "B7" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i2102 <|@
result v153|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-342027 - -256523] ⇊00000000fff800c5 ⇈00000000fffefffd
valueDescription: i32
=== Inputs ===
merge: v2098 
values: i2112 i2114 i2116 
=== Succesors ===
=== Usages ===
v2104 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2098 values: i2112 i2114 i2116  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2098 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2111 v2113 v2115 
=== Succesors ===
next: v2104 
=== Usages ===
i2102 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2111 v2113 v2115 #next: v2104  <|@  <|@
f <@*|@fixed>@ <|@
tid v2104 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?3 
actionAndReason: i2102 
speculation: a2101 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v2098 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?3 actionAndReason: i2102 speculation: a2101  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v153|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v153|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@1d23bfbf slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - 
>@ <|@ instruction NULLCHECK [v1|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOV [v0|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v2|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList$SubList;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9362023508733385 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4606607780662349515
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v3|DWORD[.] = MOV [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - 
>@ <|@ instruction v4|DWORD = MOV [v3|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v4|DWORD, y: [v0|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B10" 
    xhandlers
    flags 
    probability 4606607780662349515
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = MOV [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v5|DWORD] destination: B2 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B2" "B6" "B9" 
    successors "B11" "B24" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v11|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v11|DWORD, y: [v1|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 2.746347358013842E-4 condition: > trueDestination: B10 -> B11 falseDestination: B10 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B25" "B35" 
    xhandlers
    flags 
    probability 4607179945110229772
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v2|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList$SubList;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9362023508733385 condition: = trueDestination: B24 -> B25 falseDestination: B24 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" 
    xhandlers
    flags 
    probability 4606605464788154999
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v1|QWORD[.]] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B21" "B25" 
    successors "B27" "B33" 
    xhandlers
    flags 
    probability 4606607780662349515
    begin_IR
      LIR
      nr   -1  <|@ instruction [v28|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v29|DWORD[.] = MOV [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 32]
stack: v28|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] - - - - 
>@ <|@ instruction v30|DWORD = MOV [v29|DWORD[.] * 8 + 12] size: DWORD state [bci:32] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v30|DWORD, y: [v0|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4606607780662349515
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v0|QWORD[.] + 24] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B27 -> B28 falseDestination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4606607780662349515
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v31|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v32|QWORD = LEA [v31|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v32|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B29 -> B30 falseDestination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4606523455051178784
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v32|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v31|QWORD + 232] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v31|QWORD] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B30" 
    successors "B64" 
    xhandlers
    flags 
    probability 4606607780662349515
    begin_IR
      LIR
      nr   -1  <|@ instruction [v34|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v35|QWORD[.] = MOVE v34|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v36|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/ArrayList$SubList$1;, resolved>} <|@ <|@
      nr   -1  <|@ instruction v37|QWORD = MOV [v36|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v34|QWORD[*]], y: v37|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v34|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList$SubList$1;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = MOVE input: long[-4294967296|0xffffffff00000000] <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v34|QWORD[*] + 12], y: v38|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v34|QWORD[*] + 20], y: v30|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v34|QWORD[*] + 24], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v39|DWORD = MOV [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v34|QWORD[*] + 28], y: v39|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v40|DWORD[.] = COMPRESSPOINTER (input: v0|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@68a0169d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v34|QWORD[*] + 32], y: v40|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v35|QWORD[.], v28|QWORD[.]] destination: B32 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" "B32" "B58" 
    successors "B65" "B66" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v67|QWORD[.], v68|QWORD[.]] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v69|DWORD = MOV [v68|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v70|QWORD = MOV v69|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v71|QWORD = DEC v70|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v70|QWORD, y: v71|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: |>| trueDestination: B64 -> B65 falseDestination: B64 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B67" "B146" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v69|DWORD, y: v69|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B66 -> B67 falseDestination: B66 -> B146 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B68" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B67 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B65" "B67" 
    successors "B69" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 37]
stack: v67|QWORD[.] 
locals: - v1|QWORD[.] - v68|QWORD[.] - - 
>@ <|@ instruction v72|DWORD = MOV [v67|QWORD[.] + 8] size: DWORD state [bci:37] <|@ <|@
      nr   -1  <|@ instruction v73|DWORD = MOV [v68|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v74|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0]] destination: B68 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B71" "B82" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612410522371396702
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v72|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList$SubList$1;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.8874682121946893 condition: = trueDestination: B70 -> B71 falseDestination: B70 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B72" "B73" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4611822194529678060
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v76|DWORD[.] = MOV [v67|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42]
locals: - v1|QWORD[.] - v68|QWORD[.] v67|QWORD[.] v75|DWORD 
>@ <|@ instruction v77|DWORD = MOV [v76|DWORD[.] * 8 + 24] size: DWORD state [bci:42] <|@ <|@
      nr   -1  <|@ instruction v78|DWORD = MOV [v67|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v78|DWORD, y: v77|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B71 -> B72 falseDestination: B71 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B74" "B81" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4611822194529678060
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v79|DWORD[.] = MOV [v76|DWORD[.] * 8 + 32] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42]
locals: - v1|QWORD[.] - v68|QWORD[.] v67|QWORD[.] v75|DWORD 
>@ <|@ instruction v80|DWORD = MOV [v79|DWORD[.] * 8 + 12] size: DWORD state [bci:42] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v80|DWORD, y: [v67|QWORD[.] + 20]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B73 -> B74 falseDestination: B73 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B75" "B80" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4611822194529678060
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v77|DWORD, y: v78|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B74 -> B75 falseDestination: B74 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B76" "B79" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4611822194529678060
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v81|DWORD[.] = MOV [v79|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42]
locals: - v1|QWORD[.] - v68|QWORD[.] v67|QWORD[.] v75|DWORD 
>@ <|@ instruction v82|DWORD = MOV [v81|DWORD[.] * 8 + 12] size: DWORD state [bci:42] <|@ <|@
      nr   -1  <|@ instruction v83|DWORD = ADD (x: v78|DWORD, ~y: [v67|QWORD[.] + 28]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v82|DWORD, y: v83|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B75 -> B76 falseDestination: B75 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B77" "B78" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4611822194529678060
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v82|DWORD, y: v83|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B76 -> B77 falseDestination: B76 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B111" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4611822194529678060
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v84|DWORD = INC v78|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v67|QWORD[.] + 12], y: v84|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v67|QWORD[.] + 16], y: v78|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v85|QWORD[.] = UNCOMPRESSPOINTER (input: v81|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@68a0169d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v86|DWORD[.] = MOV [v85|QWORD[.] + v83|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v87|QWORD[.] = UNCOMPRESSPOINTER (input: v86|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@68a0169d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v87|QWORD[.], v86|DWORD[.]] destination: B77 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B110" "B77" "B94" "B88" "B92" "B106" "B109" 
    successors "B112" "B113" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612410522371396702
    begin_IR
      LIR
      nr   -1  <|@ instruction [v124|QWORD[.], v125|DWORD[.]] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v124|QWORD[.], y: v124|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B111 -> B112 falseDestination: B111 -> B113 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B114" "B115" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4611887712014258773
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v126|DWORD = MOV [v124|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v127|QWORD = MOV [v73|DWORD * 8 + 232] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v128|DWORD = MOV [v127|QWORD + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v129|QWORD = MOVSXD v128|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v127|QWORD, y: [v129|QWORD + v126|DWORD * 8]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B113 -> B114 falseDestination: B113 -> B115 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B113" 
    successors "B116" "B125" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4607384112386888277
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v128|DWORD y: 24 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B115 -> B116 falseDestination: B115 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B115" 
    successors "B117" "B118" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4607384112386888277
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v130|QWORD = UNCOMPRESSPOINTER (input: v126|DWORD, ~baseRegister: -) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@68a0169d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMP (x: v127|QWORD, y: v130|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B116 -> B117 falseDestination: B116 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B116" 
    successors "B119" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4602880512759517781
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v131|QWORD = MOV [v126|DWORD * 8 + 32] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v132|DWORD = MOV [v131|QWORD] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0]] destination: B118 -> B119 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B119" 
    successors "B121" "B123" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4604897066994192652
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v134|DWORD = SHL v133|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v135|DWORD = LEA [v134|DWORD + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v136|QWORD = MOVSXD v135|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v137|QWORD = MOV [v131|QWORD + v136|QWORD * 1] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v127|QWORD, y: v137|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.4 condition: = trueDestination: B120 -> B121 falseDestination: B120 -> B123 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B123"
    from_bci -1
    to_bci -1
    predecessors "B120" 
    successors "B119" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 2
    probability 4601737836856605403
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v141|DWORD = INC v133|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v141|DWORD] destination: B123 -> B119 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B118" "B123" 
    successors "B120" "B124" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 2
    probability 4604897066994192652
    begin_IR
      LIR
      nr   -1  <|@ instruction [v133|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v132|DWORD, y: v133|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B119 -> B120 falseDestination: B119 -> B124 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B113" 
    successors "B122" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4607384112386888277
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B114 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B112" "B114" "B117" "B121" 
    successors "B69" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4611906383812727985
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v68|QWORD[.] + v75|DWORD * 4 + 16], y: v125|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v139|QWORD[.] = LEA [v68|QWORD[.] + v75|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v138|QWORD[*] = SHR v139|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v138|QWORD[*] + v74|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 120]
locals: - v1|QWORD[.] - v68|QWORD[.] v67|QWORD[.] v75|DWORD 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:120] <|@ <|@
      nr   -1  <|@ instruction v140|DWORD = INC v75|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v140|DWORD] destination: B122 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" "B122" 
    successors "B70" "B130" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4614662322185081950
    begin_IR
      LIR
      nr   -1  <|@ instruction [v75|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v69|DWORD, y: v75|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.6989533557102465 condition: > trueDestination: B69 -> B70 falseDestination: B69 -> B130 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B116" 
    successors "B122" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4602880512759517781
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B117 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B120" 
    successors "B122" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4599049097877038909
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v126|DWORD * 8 + 24], y: v127|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B121 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B83" "B98" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598378242651655054
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v72|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/SubList$1;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.916333823838554 condition: = trueDestination: B82 -> B83 falseDestination: B82 -> B98 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B84" "B97" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597793695504499049
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v88|DWORD[.] = MOV [v67|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42]
locals: - v1|QWORD[.] - v68|QWORD[.] v67|QWORD[.] v75|DWORD 
>@ <|@ instruction CMP [v88|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed} state [bci:42] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B83 -> B84 falseDestination: B83 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B85" "B96" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597793695504499049
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v89|DWORD[.] = MOV [v67|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42]
locals: - v1|QWORD[.] - v68|QWORD[.] v67|QWORD[.] v75|DWORD 
>@ <|@ instruction v90|DWORD = MOV [v89|DWORD[.] * 8 + 20] size: DWORD state [bci:42] <|@ <|@
      nr   -1  <|@ instruction v91|DWORD = MOV [v89|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v92|DWORD = MOV [v88|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v93|DWORD = SUB (x: v92|DWORD, ~y: v91|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v90|DWORD, y: v93|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B84 -> B85 falseDestination: B84 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B86" "B95" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597793695504499049
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v94|DWORD[.] = MOV [v88|DWORD[.] * 8 + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42]
locals: - v1|QWORD[.] - v68|QWORD[.] v67|QWORD[.] v75|DWORD 
>@ <|@ instruction v95|DWORD = MOV [v94|DWORD[.] * 8 + 12] size: DWORD state [bci:42] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v95|DWORD, y: [v88|DWORD[.] * 8 + 20]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B85 -> B86 falseDestination: B85 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B87" "B90" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597793695504499049
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v96|DWORD = MOV [v94|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v97|DWORD = INC v92|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v96|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9304948647614187 condition: = trueDestination: B86 -> B87 falseDestination: B86 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B88" "B89" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597194166782228429
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v98|DWORD[.] = MOV [v94|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42]
locals: - v1|QWORD[.] - v68|QWORD[.] v67|QWORD[.] v75|DWORD 
>@ <|@ instruction CMP (x: v92|DWORD, y: [v98|DWORD[.] * 8 + 12]) size: DWORD state [bci:42] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B87 -> B88 falseDestination: B87 -> B89 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B111" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597194166782228429
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v88|DWORD[.] * 8 + 16], y: v92|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v88|DWORD[.] * 8 + 12], y: v97|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v99|QWORD[.] = UNCOMPRESSPOINTER (input: v98|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@68a0169d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v100|DWORD[.] = MOV [v99|QWORD[.] + v92|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v101|QWORD[.] = UNCOMPRESSPOINTER (input: v100|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@68a0169d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v101|QWORD[.], v100|DWORD[.]] destination: B88 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B122" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597532986004742293
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B112 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B99" "B129" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4581957783436701082
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v72|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap$KeyIterator;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B98 -> B99 falseDestination: B98 -> B129 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B98" 
    successors "B100" "B128" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4581957783436701082
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v109|DWORD[.] = MOV [v67|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42]
locals: - v1|QWORD[.] - v68|QWORD[.] v67|QWORD[.] v75|DWORD 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v109|DWORD[.] * 8] state [bci:42] <|@ <|@
      nr   -1  <|@ instruction v110|DWORD[.] = MOV [v67|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42]
locals: - v1|QWORD[.] - v68|QWORD[.] v67|QWORD[.] v75|DWORD 
>@ <|@ instruction v111|DWORD = MOV [v110|DWORD[.] * 8 + 24] size: DWORD state [bci:42] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v111|DWORD, y: [v67|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B99 -> B100 falseDestination: B99 -> B128 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B101" "B110" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4581957783436701082
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v67|QWORD[.] + 24], y: v109|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v112|QWORD[*] = SHR v67|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v112|QWORD[*] + v74|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v113|DWORD[.] = MOV [v109|DWORD[.] * 8 + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v67|QWORD[.] + 20], y: v113|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v114|DWORD[.] = MOV [v109|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v115|QWORD[.] = UNCOMPRESSPOINTER (input: v114|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@68a0169d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TEST (x: v113|DWORD[.], y: v113|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.862846997817839 condition: = trueDestination: B100 -> B101 falseDestination: B100 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B102" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4581093642439087946
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v116|DWORD[.] = MOV [v110|DWORD[.] * 8 + 36] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap$HashIterator.nextNode(HashMap.java:1445) [bci: 53]
stack: Object[null] 
locals: v67|QWORD[.] - v109|DWORD[.] 
java.util.HashMap$KeyIterator.next(HashMap.java:1466) [bci: 1]
locals: - 
java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stack: v68|QWORD[.] v75|DWORD 
locals: - v1|QWORD[.] - v68|QWORD[.] v67|QWORD[.] v75|DWORD 
>@ <|@ instruction v117|DWORD = MOV [v116|DWORD[.] * 8 + 12] size: DWORD state [bci:53, 1, 114] <|@ <|@
      nr   -1  <|@ instruction v118|DWORD = MOV [v67|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v119|QWORD[.] = UNCOMPRESSPOINTER (input: v116|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@68a0169d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v118|DWORD] destination: B101 -> B102 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B102" 
    successors "B104" "B107" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4588774090470730591
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v117|DWORD, y: v120|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B103 -> B104 falseDestination: B103 -> B107 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B105" "B106" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4588774090470730591
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v121|DWORD = INC v120|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v67|QWORD[.] + 16], y: v121|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v122|DWORD[.] = MOV [v119|QWORD[.] + v120|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v67|QWORD[.] + 20], y: v122|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v123|QWORD[*] = SHR v67|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v123|QWORD[*] + v74|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction TEST (x: v122|DWORD[.], y: v122|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7114614377628611 condition: = trueDestination: B104 -> B105 falseDestination: B104 -> B106 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B102" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 2
    probability 4586288830091813018
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap$HashIterator.nextNode(HashMap.java:1446) [bci: 95]
stack: Object[null] 
locals: v67|QWORD[.] v119|QWORD[.] v109|DWORD[.] 
java.util.HashMap$KeyIterator.next(HashMap.java:1466) [bci: 1]
locals: - 
java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stack: v68|QWORD[.] v75|DWORD 
locals: - v1|QWORD[.] - v68|QWORD[.] v67|QWORD[.] v75|DWORD 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:95, 1, 114] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v121|DWORD] destination: B105 -> B102 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B101" "B105" 
    successors "B103" "B109" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 2
    probability 4589007040607145023
    begin_IR
      LIR
      nr   -1  <|@ instruction [v120|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v117|DWORD, y: v120|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.973666701969634 condition: > trueDestination: B102 -> B103 falseDestination: B102 -> B109 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B111" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4580627742166259083
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v115|QWORD[.], v114|DWORD[.]] destination: B106 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B91" "B94" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4580453451186588897
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v96|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeInputList;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9931451844203528 condition: = trueDestination: B90 -> B91 falseDestination: B90 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B92" "B93" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4580420573915981964
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v102|DWORD[.] = MOV [v94|DWORD[.] * 8 + 28] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42]
locals: - v1|QWORD[.] - v68|QWORD[.] v67|QWORD[.] v75|DWORD 
>@ <|@ instruction CMP (x: v92|DWORD, y: [v102|DWORD[.] * 8 + 12]) size: DWORD state [bci:42] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B91 -> B92 falseDestination: B91 -> B93 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B111" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4580420573915981964
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v88|DWORD[.] * 8 + 16], y: v92|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v88|DWORD[.] * 8 + 12], y: v97|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v103|QWORD[.] = UNCOMPRESSPOINTER (input: v102|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@68a0169d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v104|DWORD[.] = MOV [v103|QWORD[.] + v92|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v105|QWORD[.] = UNCOMPRESSPOINTER (input: v104|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@68a0169d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v105|QWORD[.], v104|DWORD[.]] destination: B92 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B111" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4569059550507217536
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v115|QWORD[.], v114|DWORD[.]] destination: B110 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B102" 
    successors "B111" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4565097227264203764
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v115|QWORD[.], v114|DWORD[.]] destination: B109 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B111" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4548045005664834791
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v106|QWORD[.] = UNCOMPRESSPOINTER (input: v94|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@68a0169d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v106|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v92|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
locals: v88|DWORD[.] v92|DWORD - 
java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
locals: - 
java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stack: v68|QWORD[.] v75|DWORD 
locals: - v1|QWORD[.] - v68|QWORD[.] v67|QWORD[.] v75|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractList.get(int)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:14, 11, 114] <|@ <|@
      nr   -1  <|@ instruction v107|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v88|DWORD[.] * 8 + 16], y: v92|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v88|DWORD[.] * 8 + 12], y: v97|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v108|DWORD[.] = COMPRESSPOINTER (input: v107|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@68a0169d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v107|QWORD[.], v108|DWORD[.]] destination: B94 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B130"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B131" "B134" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v72|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList$SubList$1;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9361509309606195 condition: = trueDestination: B130 -> B131 falseDestination: B130 -> B134 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B131"
    from_bci -1
    to_bci -1
    predecessors "B130" 
    successors "B132" "B133" 
    xhandlers
    flags 
    probability 4606607317512949994
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v142|DWORD[.] = MOV [v67|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42]
locals: - v1|QWORD[.] - v68|QWORD[.] v67|QWORD[.] v75|DWORD 
>@ <|@ instruction v143|DWORD = MOV [v142|DWORD[.] * 8 + 24] size: DWORD state [bci:42] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v143|DWORD, y: [v67|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B131 -> B132 falseDestination: B131 -> B133 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B132"
    from_bci -1
    to_bci -1
    predecessors "B131" 
    successors 
    xhandlers
    flags 
    probability 4606607317512949994
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v68|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B68" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B65 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B134"
    from_bci -1
    to_bci -1
    predecessors "B130" 
    successors "B135" "B140" 
    xhandlers
    flags 
    probability 4589265230959704240
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v72|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/SubList$1;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.8662365591397847 condition: = trueDestination: B134 -> B135 falseDestination: B134 -> B140 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B135"
    from_bci -1
    to_bci -1
    predecessors "B134" 
    successors "B136" "B139" 
    xhandlers
    flags 
    probability 4588131601196852644
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v144|DWORD[.] = MOV [v67|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42]
locals: - v1|QWORD[.] - v68|QWORD[.] v67|QWORD[.] v75|DWORD 
>@ <|@ instruction CMP [v144|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed} state [bci:42] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B135 -> B136 falseDestination: B135 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B136"
    from_bci -1
    to_bci -1
    predecessors "B135" 
    successors "B137" "B138" 
    xhandlers
    flags 
    probability 4588131601196852644
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v145|DWORD[.] = MOV [v67|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42]
locals: - v1|QWORD[.] - v68|QWORD[.] v67|QWORD[.] v75|DWORD 
>@ <|@ instruction v146|DWORD = MOV [v145|DWORD[.] * 8 + 20] size: DWORD state [bci:42] <|@ <|@
      nr   -1  <|@ instruction v147|DWORD = MOV [v145|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v148|DWORD = MOV [v144|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v149|DWORD = SUB (x: v148|DWORD, ~y: v147|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v146|DWORD, y: v149|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B136 -> B137 falseDestination: B136 -> B138 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B138"
    from_bci -1
    to_bci -1
    predecessors "B136" 
    successors 
    xhandlers
    flags 
    probability 4588131601196852644
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v68|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" "B8" 
    xhandlers
    flags 
    probability 4589261525764508072
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v2|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/RandomAccessSubList;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.8661213947481707 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4588124123200152941
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v6|DWORD[.] = MOV [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - 
>@ <|@ instruction v7|DWORD = MOV [v6|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v7|DWORD, y: [v0|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B10" 
    xhandlers
    flags 
    probability 4588124123200152941
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = MOV [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v8|DWORD] destination: B6 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B36" 
    xhandlers
    flags 
    probability 4589260263239763114
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v1|QWORD[.]] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B22" "B35" 
    successors "B37" "B63" 
    xhandlers
    flags 
    probability 4589261525764508073
    begin_IR
      LIR
      nr   -1  <|@ instruction [v42|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v2|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/RandomAccessSubList;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.8661213947481707 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" "B61" 
    xhandlers
    flags 
    probability 4588124123200152943
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v43|DWORD[.] = MOV [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 32]
stack: v42|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] - - - - 
>@ <|@ instruction v44|DWORD = MOV [v43|DWORD[.] * 8 + 12] size: DWORD state [bci:32] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v44|DWORD, y: [v0|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4588124123200152943
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v0|QWORD[.] + 20] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B38 -> B39 falseDestination: B38 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4588124123200152943
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v45|DWORD = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v45|DWORD, y: v45|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B40 -> B41 falseDestination: B40 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B60" 
    xhandlers
    flags 
    probability 4588124123200152943
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v46|DWORD = MOV [v43|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v47|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotMethod<AbstractList.listIterator(int)>} <|@ <|@
      nr   -1  <|@ instruction CMP (x: v47|QWORD, y: [v46|DWORD * 8 + 696]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B44" "B47" 
    xhandlers
    flags 
    probability 4588124123200152943
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v46|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5044648172401477 condition: = trueDestination: B43 -> B44 falseDestination: B43 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4583691632950366314
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v48|DWORD[.] = MOV [v43|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 32]
stack: v42|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] - - - - 
>@ <|@ instruction v49|DWORD = MOV [v48|DWORD[.] * 8 + 12] size: DWORD state [bci:32] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v45|DWORD, y: v49|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B44 -> B45 falseDestination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B55" 
    xhandlers
    flags 
    probability 4583691632950366314
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v49|DWORD] destination: B46 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" "B46" "B49" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4588124123200152944
    begin_IR
      LIR
      nr   -1  <|@ instruction [v51|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v52|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v53|QWORD = LEA [v52|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v53|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B55 -> B56 falseDestination: B55 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" 
    xhandlers
    flags 
    probability 4588044490178509359
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v53|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v52|QWORD + 248] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v52|QWORD] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" "B56" 
    successors "B64" 
    xhandlers
    flags 
    probability 4588124123200152944
    begin_IR
      LIR
      nr   -1  <|@ instruction [v55|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v56|QWORD[.] = MOVE v55|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v57|QWORD[*] = LEA [v55|QWORD[*] + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v58|QWORD[.] = MOVE v57|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v59|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/SubList$1;, resolved>} <|@ <|@
      nr   -1  <|@ instruction v60|QWORD = MOV [v59|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v55|QWORD[*]], y: v60|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v55|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/SubList$1;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v55|QWORD[*] + 12], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v61|DWORD[.] = COMPRESSPOINTER (input: v58|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@68a0169d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v55|QWORD[*] + 16], y: v61|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v62|DWORD[.] = COMPRESSPOINTER (input: v0|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@68a0169d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v55|QWORD[*] + 20], y: v62|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v63|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>} <|@ <|@
      nr   -1  <|@ instruction v64|QWORD = MOV [v63|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v55|QWORD[*] + 24], y: v64|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v55|QWORD[*] + 32] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v55|QWORD[*] + 36], y: v45|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v55|QWORD[*] + 40] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v55|QWORD[*] + 44], y: v44|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v55|QWORD[*] + 48], y: v43|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v55|QWORD[*] + 52], y: v43|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v56|QWORD[.], v42|QWORD[.]] destination: B58 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B48" "B51" 
    xhandlers
    flags 
    probability 4583549414195198580
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v46|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Collections$EmptyList;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.525228255646324 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B49" "B50" 
    xhandlers
    flags 
    probability 4579444027082297734
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v45|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B48 -> B49 falseDestination: B48 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B55" 
    xhandlers
    flags 
    probability 4579444027082297734
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0]] destination: B49 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B52" "B59" 
    xhandlers
    flags 
    probability 4578647602053358434
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v46|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeInputList;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B53" "B54" 
    xhandlers
    flags 
    probability 4578647602053358434
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v50|DWORD = MOV [v43|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v45|DWORD, y: v50|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B52 -> B53 falseDestination: B52 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    probability 4578647602053358434
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v50|DWORD] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4576550460895980228
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v155|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v155|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[6|0x6] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 32]
stack: v28|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:32] <|@ <|@
      nr   -1  <|@ instruction v33|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v33|QWORD[.]] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B64" 
    xhandlers
    flags 
    probability 4576077253934364556
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
locals: - v1|QWORD[.] - v42|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<AbstractCollection.iterator()> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:34] <|@ <|@
      nr   -1  <|@ instruction v66|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v66|QWORD[.], v42|QWORD[.]] destination: B63 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B9" "B147" 
    xhandlers
    flags 
    probability 4576077253934364555
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v2|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashSet;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B147 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" 
    xhandlers
    flags 
    probability 4576077253934364555
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v9|DWORD[.] = MOV [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - 
>@ <|@ instruction v10|DWORD = MOV [v9|DWORD[.] * 8 + 20] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v10|DWORD] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B140"
    from_bci -1
    to_bci -1
    predecessors "B134" 
    successors "B141" "B144" 
    xhandlers
    flags 
    probability 4576076983509135087
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v72|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap$KeyIterator;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B140 -> B141 falseDestination: B140 -> B144 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B141"
    from_bci -1
    to_bci -1
    predecessors "B140" 
    successors "B142" "B143" 
    xhandlers
    flags 
    probability 4576076983509135087
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v150|DWORD[.] = MOV [v67|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v150|DWORD[.], y: v150|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B141 -> B142 falseDestination: B141 -> B143 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B142"
    from_bci -1
    to_bci -1
    predecessors "B141" 
    successors 
    xhandlers
    flags 
    probability 4576076983509135087
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v68|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" 
    xhandlers
    flags 
    probability 4558235736656760908
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v154|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v154|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[10|0xa] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 9]
stack: v45|DWORD v51|DWORD 
locals: v43|DWORD[.] v45|DWORD 
java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
locals: v43|DWORD[.] v45|DWORD 
java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
stack: vobject:SubList$1:0{val$index=int[0|0x0],i=Object[null],this$0=v0|QWORD[.]} 
locals: - - - 
java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
stack: vobject:SubList$1:0{val$index=int[0|0x0],i=Object[null],this$0=v0|QWORD[.]} 
locals: - - 
java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
locals: v0|QWORD[.] 
java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
locals: v0|QWORD[.] 
java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
locals: - v1|QWORD[.] - v42|QWORD[.] - - 
vobject:SubList$1:0{val$index=int[0|0x0],i=Object[null],this$0=v0|QWORD[.]} Ljava/util/SubList$1; int[0|0x0] Object[null] v0|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:9, 2, 34, 15, 2, 1, 34] <|@ <|@
      nr   -1  <|@ instruction v54|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v54|QWORD[.]] destination: B56 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4553701740329279932
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = MOV [v1|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|QWORD[.] = MOV [v13|DWORD * 8 + 224] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v15|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:void] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v15|QWORD[.], y: v14|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4553701740329279932
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v16|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = SHL v11|DWORD y: 2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = LEA [v17|DWORD + 23] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v19|DWORD = AND v18|DWORD y: -8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD = MOVSXD v19|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v21|QWORD = ADD (x: v20|QWORD, y: v16|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v21|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4553651079162429142
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v21|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v20|QWORD + v16|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v20|QWORD + v16|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v20|QWORD + v16|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v20|QWORD + v16|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v16|QWORD + 12], y: v11|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v16|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v16|QWORD + 8], y: v13|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[16|0x10]] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B16" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4553651079162429142
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v16|QWORD + v24|QWORD * 1], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v25|QWORD = LEA [v24|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v25|QWORD] destination: B17 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B17" 
    successors "B17" "B18" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4558154678789799638
    begin_IR
      LIR
      nr   -1  <|@ instruction [v24|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v20|QWORD, y: v24|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B16 -> B17 falseDestination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4553651079162429142
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v26|QWORD[.] = MOVE v16|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v26|QWORD[.]] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B14" 
    successors "B20" "B23" 
    xhandlers
    flags 
    probability 4553701740329279932
    begin_IR
      LIR
      nr   -1  <|@ instruction [v27|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v27|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Class;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4553701740329279932
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v2|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList$SubList;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9362023508733385 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B26" 
    xhandlers
    flags 
    probability 4553378533994570538
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v27|QWORD[.]] destination: B21 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B36" 
    xhandlers
    flags 
    probability 4535792526490069278
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v27|QWORD[.]] destination: B22 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B19" 
    xhandlers
    flags 
    probability 4523595055609508578
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v22|QWORD = UNCOMPRESSPOINTER (input: v13|DWORD, ~baseRegister: -) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@68a0169d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v22|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v11|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 4]
stack: v11|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:4] <|@ <|@
      nr   -1  <|@ instruction v23|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v23|QWORD[.]] destination: B14 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-330259|0xfffffffffffaf5ed]] destination: B41 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B39" "B61" "B41" "B60" "B45" "B53" "B50" "B59" 
    successors 
    xhandlers
    flags 
    probability 2368893403996880896
    begin_IR
      LIR
      nr   -1  <|@ instruction [v65|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v65|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 32]
stack: v42|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] - - - - 
>@ <|@ instruction DEOPT info [bci:32] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B125"
    from_bci -1
    to_bci -1
    predecessors "B115" 
    successors "B126" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B125 -> B126 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B126"
    from_bci -1
    to_bci -1
    predecessors "B125" "B124" 
    successors "B127" 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B126 -> B127 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B127"
    from_bci -1
    to_bci -1
    predecessors "B126" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -309803 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
stack: v68|QWORD[.] v75|DWORD v124|QWORD[.] 
locals: - v1|QWORD[.] - v68|QWORD[.] v67|QWORD[.] v75|DWORD 
>@ <|@ instruction DEOPT info [bci:119] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B143"
    from_bci -1
    to_bci -1
    predecessors "B141" 
    successors "B145" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-318739|0xfffffffffffb22ed]] destination: B143 -> B145 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B145"
    from_bci -1
    to_bci -1
    predecessors "B72" "B81" "B80" "B79" "B78" "B97" "B96" "B95" "B89" "B93" "B129" "B128" "B133" "B144" "B143" "B139" "B137" 
    successors 
    xhandlers
    flags 
    probability 2373678478600962048
    begin_IR
      LIR
      nr   -1  <|@ instruction [v151|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v151|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42]
locals: - v1|QWORD[.] - v68|QWORD[.] v67|QWORD[.] v75|DWORD 
>@ <|@ instruction DEOPT info [bci:42] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B144"
    from_bci -1
    to_bci -1
    predecessors "B140" 
    successors "B145" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-317747|0xfffffffffffb26cd]] destination: B144 -> B145 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -320051 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 4]
stack: v11|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] - - - - 
>@ <|@ instruction DEOPT info [bci:4] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B146"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v152|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1368693834] <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -305947 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: v152|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 37]
stack: v67|QWORD[.] 
locals: - v1|QWORD[.] - v68|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:37] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -579169 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 4]
stack: v11|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] - - - - 
>@ <|@ instruction DEOPT info [bci:4] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-332563|0xfffffffffffaeced]] destination: B45 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B145" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-270619|0xfffffffffffbdee5]] destination: B78 -> B145 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-328211|0xfffffffffffafded]] destination: B39 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-330035|0xfffffffffffaf6cd]] destination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-333843|0xfffffffffffae7ed]] destination: B53 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B145" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-265747|0xfffffffffffbf1ed]] destination: B80 -> B145 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-333107|0xfffffffffffaeacd]] destination: B59 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B139"
    from_bci -1
    to_bci -1
    predecessors "B135" 
    successors "B145" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-314163|0xfffffffffffb34cd]] destination: B139 -> B145 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B145" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-265491|0xfffffffffffbf2ed]] destination: B81 -> B145 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B128"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B145" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-295187|0xfffffffffffb7eed]] destination: B128 -> B145 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-332819|0xfffffffffffaebed]] destination: B50 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B145" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-280083|0xfffffffffffbb9ed]] destination: B95 -> B145 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B145" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-277267|0xfffffffffffbc4ed]] destination: B96 -> B145 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B145" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-273971|0xfffffffffffbd1cd]] destination: B97 -> B145 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B145" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-288027|0xfffffffffffb9ae5]] destination: B93 -> B145 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-324115|0xfffffffffffb0ded]] destination: B28 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B28" "B33" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v41|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v41|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 32]
stack: v28|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] - - - - 
>@ <|@ instruction DEOPT info [bci:32] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B129"
    from_bci -1
    to_bci -1
    predecessors "B98" 
    successors "B145" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-291379|0xfffffffffffb8dcd]] destination: B129 -> B145 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-327443|0xfffffffffffb00ed]] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B148" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-336915|0xfffffffffffadbed]] destination: B3 -> B148 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B148"
    from_bci -1
    to_bci -1
    predecessors "B3" "B147" "B7" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   -1  <|@ instruction [v153|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v153|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B148" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-340243|0xfffffffffffaceed]] destination: B7 -> B148 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B108" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B107 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B107" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -302107 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap$HashIterator.nextNode(HashMap.java:1446) [bci: 68]
locals: v67|QWORD[.] v119|QWORD[.] v109|DWORD[.] 
java.util.HashMap$KeyIterator.next(HashMap.java:1466) [bci: 1]
locals: - 
java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stack: v68|QWORD[.] v75|DWORD 
locals: - v1|QWORD[.] - v68|QWORD[.] v67|QWORD[.] v75|DWORD 
>@ <|@ instruction DEOPT info [bci:68, 1, 114] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B124"
    from_bci -1
    to_bci -1
    predecessors "B119" 
    successors "B126" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B124 -> B126 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-323347|0xfffffffffffb10ed]] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B145" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-268819|0xfffffffffffbe5ed]] destination: B79 -> B145 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B133"
    from_bci -1
    to_bci -1
    predecessors "B131" 
    successors "B145" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-312851|0xfffffffffffb39ed]] destination: B133 -> B145 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B145" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-282907|0xfffffffffffbaee5]] destination: B89 -> B145 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B147"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B148" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-341043|0xfffffffffffacbcd]] destination: B147 -> B148 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B137"
    from_bci -1
    to_bci -1
    predecessors "B136" 
    successors "B145" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-317459|0xfffffffffffb27ed]] destination: B137 -> B145 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B145" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-262419|0xfffffffffffbfeed]] destination: B72 -> B145 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokevirtual #1          // size:()int
     4: istore_2      
     5: aload_1       
     6: arraylength   
     7: iload_2       
     8: if_icmplt     15
    11: aload_1       
    12: goto          32
    15: aload_1       
    16: invokevirtual #8          // java.lang.Object.getClass:()java.lang.Class
    19: invokevirtual #9          // java.lang.Class.getComponentType:()java.lang.Class
    22: iload_2       
    23: invokestatic  #10         // java.lang.reflect.Array.newInstance:(java.lang.Class, int)java.lang.Object
    26: checkcast     #14         // java.lang.Object[]
    29: checkcast     #14         // java.lang.Object[]
    32: astore_3      
    33: aload_0       
    34: invokevirtual #2          // iterator:()java.util.Iterator
    37: astore        4
    39: iconst_0      
    40: istore        5
    42: iload         5
    44: aload_3       
    45: arraylength   
    46: if_icmpge     126
    49: aload         4
    51: invokeinterface#3, 1       // java.util.Iterator.hasNext:()boolean
    56: ifne          109
    59: aload_1       
    60: aload_3       
    61: if_acmpne     72
    64: aload_3       
    65: iload         5
    67: aconst_null   
    68: aastore       
    69: goto          107
    72: aload_1       
    73: arraylength   
    74: iload         5
    76: if_icmpge     86
    79: aload_3       
    80: iload         5
    82: invokestatic  #6          // java.util.Arrays.copyOf:(java.lang.Object[], int)java.lang.Object[]
    85: areturn       
    86: aload_3       
    87: iconst_0      
    88: aload_1       
    89: iconst_0      
    90: iload         5
    92: invokestatic  #11         // java.lang.System.arraycopy:(java.lang.Object, int, java.lang.Object, int, int)void
    95: aload_1       
    96: arraylength   
    97: iload         5
    99: if_icmple     107
   102: aload_1       
   103: iload         5
   105: aconst_null   
   106: aastore       
   107: aload_1       
   108: areturn       
   109: aload_3       
   110: iload         5
   112: aload         4
   114: invokeinterface#4, 1       // java.util.Iterator.next:()java.lang.Object
   119: aastore       
   120: iinc          
   123: goto          42
   126: aload         4
   128: invokeinterface#3, 1       // java.util.Iterator.hasNext:()boolean
   133: ifeq          145
   136: aload_3       
   137: aload         4
   139: invokestatic  #7          // finishToArray:(java.lang.Object[], java.util.Iterator)java.lang.Object[]
   142: goto          146
   145: aload_3       
   146: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@1d23bfbf slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction stack:32|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ st <@st|@reference-map: [rdx:0, r13:0, stack:64]
live-base-pointers: []
java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 0]
locals: r13|QWORD[.] rdx|QWORD[.] - - - - 
>@ <|@ instruction NULLCHECK [rdx|QWORD[.]] state [bci:0] <|@ <|@
      nr   12  <|@ instruction r14|DWORD = MOV [r13|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   14  <|@ instruction CMP r14|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList$SubList;, resolved>;compressed} <|@ <|@
      nr   16  <|@ instruction BRANCH trueDestinationProbability: 0.9362023508733385 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4606607780662349515
    begin_IR
      LIR
      nr   18  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   20  <|@ instruction rsi|DWORD[.] = MOV [r13|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   22  <|@ st <@st|@reference-map: [rdx:0, r13:0, stack:64]
live-base-pointers: []
java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 0]
locals: r13|QWORD[.] rdx|QWORD[.] - - - - 
>@ <|@ instruction rsi|DWORD = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   24  <|@ instruction CMP (x: rsi|DWORD, y: [r13|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   26  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B10" 
    xhandlers
    flags 
    probability 4606607780662349515
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   30  <|@ instruction rsi|DWORD = MOV [r13|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   32  <|@ instruction r10|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr   34  <|@ instruction JUMP ~[] destination: B2 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B2" "B6" "B9" 
    successors "B11" "B24" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   90  <|@ instruction CMP (x: r10|DWORD, y: [rdx|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   92  <|@ instruction BRANCH trueDestinationProbability: 2.746347358013842E-4 condition: > trueDestination: B10 -> B11 falseDestination: B10 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B25" "B35" 
    xhandlers
    flags 
    probability 4607179945110229772
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  232  <|@ instruction CMP r14|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList$SubList;, resolved>;compressed} <|@ <|@
      nr  234  <|@ instruction BRANCH trueDestinationProbability: 0.9362023508733385 condition: = trueDestination: B24 -> B25 falseDestination: B24 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" 
    xhandlers
    flags 
    probability 4606605464788154999
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  238  <|@ instruction r14|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  240  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B21" "B25" 
    successors "B27" "B33" 
    xhandlers
    flags 
    probability 4606607780662349515
    begin_IR
      LIR
      nr  242  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  244  <|@ instruction rsi|DWORD[.] = MOV [r13|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  246  <|@ st <@st|@reference-map: [rdx:0, r13:0, r14:0, stack:64]
live-base-pointers: []
java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 32]
stack: r14|QWORD[.] 
locals: r13|QWORD[.] rdx|QWORD[.] - - - - 
>@ <|@ instruction r10|DWORD = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD state [bci:32] <|@ <|@
      nr  248  <|@ instruction CMP (x: r10|DWORD, y: [r13|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr  250  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4606607780662349515
    begin_IR
      LIR
      nr  252  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  254  <|@ instruction CMP [r13|QWORD[.] + 24] y: 0 size: DWORD <|@ <|@
      nr  256  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B27 -> B28 falseDestination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4606607780662349515
    begin_IR
      LIR
      nr  264  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  266  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  268  <|@ instruction r11|QWORD = LEA [rsi|QWORD + 40] size: QWORD <|@ <|@
      nr  270  <|@ instruction CMP (x: r11|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr  272  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B29 -> B30 falseDestination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4606523455051178784
    begin_IR
      LIR
      nr  294  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  296  <|@ instruction MOV (x: [r15|QWORD + 96], y: r11|QWORD) size: QWORD <|@ <|@
      nr  298  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 232] instr: 0 <|@ <|@
      nr  300  <|@ instruction rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  302  <|@ instruction JUMP ~[] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B30" 
    successors "B64" 
    xhandlers
    flags 
    probability 4606607780662349515
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  306  <|@ instruction r11|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  308  <|@ instruction r8|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/ArrayList$SubList$1;, resolved>} <|@ <|@
      nr  310  <|@ instruction r8|QWORD = MOV [r8|QWORD + 168] size: QWORD <|@ <|@
      nr  312  <|@ instruction MOV (x: [rsi|QWORD[*]], y: r8|QWORD) size: QWORD <|@ <|@
      nr  314  <|@ instruction MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList$SubList$1;, resolved>;compressed} <|@ <|@
      nr  316  <|@ instruction r8|QWORD = MOVE input: long[-4294967296|0xffffffff00000000] <|@ <|@
      nr  318  <|@ instruction MOV (x: [rsi|QWORD[*] + 12], y: r8|QWORD) size: QWORD <|@ <|@
      nr  320  <|@ instruction MOV (x: [rsi|QWORD[*] + 20], y: r10|DWORD) size: DWORD <|@ <|@
      nr  322  <|@ instruction MOV (x: [rsi|QWORD[*] + 24], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr  324  <|@ instruction r10|DWORD = MOV [r13|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  326  <|@ instruction MOV (x: [rsi|QWORD[*] + 28], y: r10|DWORD) size: DWORD <|@ <|@
      nr  328  <|@ instruction r13|DWORD[.] = COMPRESSPOINTER (input: r13|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@68a0169d encoding: base: 0 shift: 3 <|@ <|@
      nr  330  <|@ instruction MOV (x: [rsi|QWORD[*] + 32], y: r13|DWORD[.]) size: DWORD <|@ <|@
      nr  332  <|@ instruction r10|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  334  <|@ instruction r11|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  336  <|@ instruction JUMP ~[] destination: B32 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" "B32" "B58" 
    successors "B65" "B66" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  660  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  662  <|@ instruction stack:56|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  664  <|@ instruction stack:64|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  666  <|@ instruction r8|DWORD = MOV [r11|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  668  <|@ instruction stack:44|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  670  <|@ instruction rsi|QWORD = MOV r8|DWORD size: DWORD <|@ <|@
      nr  672  <|@ instruction r9|QWORD = DEC rsi|QWORD size: QWORD <|@ <|@
      nr  674  <|@ instruction CMP (x: rsi|QWORD, y: r9|QWORD) size: QWORD <|@ <|@
      nr  676  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: |>| trueDestination: B64 -> B65 falseDestination: B64 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B67" "B146" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  682  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  684  <|@ instruction TEST (x: r8|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  686  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B66 -> B67 falseDestination: B66 -> B146 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B68" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  688  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  690  <|@ instruction JUMP ~[] destination: B67 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B65" "B67" 
    successors "B69" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  692  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  694  <|@ st <@st|@reference-map: [rdx:0, r10:0, r11:0, stack:32, stack:40, stack:64]
live-base-pointers: []
java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 37]
stack: r10|QWORD[.] 
locals: - rdx|QWORD[.] - r11|QWORD[.] - - 
>@ <|@ instruction r9|DWORD = MOV [r10|QWORD[.] + 8] size: DWORD state [bci:37] <|@ <|@
      nr  696  <|@ instruction stack:40|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  698  <|@ instruction rcx|DWORD = MOV [r11|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  700  <|@ instruction stack:36|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  702  <|@ instruction rbx|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr  704  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  706  <|@ instruction JUMP ~[] destination: B68 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B71" "B82" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612410522371396702
    begin_IR
      LIR
      nr  714  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  716  <|@ instruction CMP r9|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList$SubList$1;, resolved>;compressed} <|@ <|@
      nr  718  <|@ instruction BRANCH trueDestinationProbability: 0.8874682121946893 condition: = trueDestination: B70 -> B71 falseDestination: B70 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B72" "B73" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4611822194529678060
    begin_IR
      LIR
      nr  720  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  722  <|@ instruction rsi|DWORD[.] = MOV [r10|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  724  <|@ st <@st|@reference-map: [rsi:0, r10:0, r11:0, stack:32, stack:40, stack:64]
live-base-pointers: []
java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42]
locals: - stack:32|QWORD[.] - r11|QWORD[.] r10|QWORD[.] rdi|DWORD 
>@ <|@ instruction rax|DWORD = MOV [rsi|DWORD[.] * 8 + 24] size: DWORD state [bci:42] <|@ <|@
      nr  726  <|@ instruction rbp|DWORD = MOV [r10|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  728  <|@ instruction CMP (x: rbp|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  730  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B71 -> B72 falseDestination: B71 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B74" "B81" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4611822194529678060
    begin_IR
      LIR
      nr  740  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  742  <|@ instruction rsi|DWORD[.] = MOV [rsi|DWORD[.] * 8 + 32] size: DWORD <|@ <|@
      nr  744  <|@ st <@st|@reference-map: [rsi:0, r10:0, r11:0, stack:32, stack:40, stack:64]
live-base-pointers: []
java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42]
locals: - stack:32|QWORD[.] - r11|QWORD[.] r10|QWORD[.] rdi|DWORD 
>@ <|@ instruction r13|DWORD = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD state [bci:42] <|@ <|@
      nr  746  <|@ instruction CMP (x: r13|DWORD, y: [r10|QWORD[.] + 20]) size: DWORD <|@ <|@
      nr  748  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B73 -> B74 falseDestination: B73 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B75" "B80" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4611822194529678060
    begin_IR
      LIR
      nr  750  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  752  <|@ instruction CMP (x: rax|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  754  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B74 -> B75 falseDestination: B74 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B76" "B79" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4611822194529678060
    begin_IR
      LIR
      nr  756  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  758  <|@ instruction rsi|DWORD[.] = MOV [rsi|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr  760  <|@ st <@st|@reference-map: [rsi:0, r10:0, r11:0, stack:32, stack:40, stack:64]
live-base-pointers: []
java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42]
locals: - stack:32|QWORD[.] - r11|QWORD[.] r10|QWORD[.] rdi|DWORD 
>@ <|@ instruction rax|DWORD = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD state [bci:42] <|@ <|@
      nr  762  <|@ instruction r13|DWORD = ADD (x: rbp|DWORD, ~y: [r10|QWORD[.] + 28]) size: DWORD <|@ <|@
      nr  764  <|@ instruction CMP (x: rax|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  766  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B75 -> B76 falseDestination: B75 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B77" "B78" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4611822194529678060
    begin_IR
      LIR
      nr  768  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  770  <|@ instruction CMP (x: rax|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  772  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B76 -> B77 falseDestination: B76 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B111" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4611822194529678060
    begin_IR
      LIR
      nr  774  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  776  <|@ instruction rax|DWORD = INC rbp|DWORD size: DWORD <|@ <|@
      nr  778  <|@ instruction MOV (x: [r10|QWORD[.] + 12], y: rax|DWORD) size: DWORD <|@ <|@
      nr  780  <|@ instruction MOV (x: [r10|QWORD[.] + 16], y: rbp|DWORD) size: DWORD <|@ <|@
      nr  782  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@68a0169d encoding: base: 0 shift: 3 <|@ <|@
      nr  784  <|@ instruction rsi|DWORD[.] = MOV [rsi|QWORD[.] + r13|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  786  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@68a0169d encoding: base: 0 shift: 3 <|@ <|@
      nr  788  <|@ instruction r13|DWORD[.] = MOVE rsi|DWORD[.] moveKind: DWORD <|@ <|@
      nr  790  <|@ instruction r14|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  792  <|@ instruction JUMP ~[] destination: B77 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B110" "B77" "B94" "B88" "B92" "B106" "B109" 
    successors "B112" "B113" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612410522371396702
    begin_IR
      LIR
      nr 1140  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr 1142  <|@ instruction TEST (x: r14|QWORD[.], y: r14|QWORD[.]) size: QWORD <|@ <|@
      nr 1144  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B111 -> B112 falseDestination: B111 -> B113 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B114" "B115" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4611887712014258773
    begin_IR
      LIR
      nr 1150  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1152  <|@ instruction rsi|DWORD = MOV [r14|QWORD[.] + 8] size: DWORD <|@ <|@
      nr 1154  <|@ instruction rdx|QWORD = MOV [rcx|DWORD * 8 + 232] size: QWORD <|@ <|@
      nr 1156  <|@ instruction r8|DWORD = MOV [rdx|QWORD + 12] size: DWORD <|@ <|@
      nr 1158  <|@ instruction rax|QWORD = MOVSXD r8|DWORD size: QWORD <|@ <|@
      nr 1160  <|@ instruction CMP (x: rdx|QWORD, y: [rax|QWORD + rsi|DWORD * 8]) size: QWORD <|@ <|@
      nr 1162  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B113 -> B114 falseDestination: B113 -> B115 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B113" 
    successors "B116" "B125" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4607384112386888277
    begin_IR
      LIR
      nr 1168  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1170  <|@ instruction stack:88|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1172  <|@ instruction CMP r8|DWORD y: 24 size: DWORD <|@ <|@
      nr 1174  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B115 -> B116 falseDestination: B115 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B115" 
    successors "B117" "B118" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4607384112386888277
    begin_IR
      LIR
      nr 1176  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1178  <|@ instruction r8|QWORD = UNCOMPRESSPOINTER (input: rsi|DWORD, ~baseRegister: -) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@68a0169d encoding: base: 0 shift: 3 <|@ <|@
      nr 1180  <|@ instruction CMP (x: rdx|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr 1182  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B116 -> B117 falseDestination: B116 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B116" 
    successors "B119" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4602880512759517781
    begin_IR
      LIR
      nr 1188  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1190  <|@ instruction r8|QWORD = MOV [rsi|DWORD * 8 + 32] size: QWORD <|@ <|@
      nr 1192  <|@ instruction rax|DWORD = MOV [r8|QWORD] size: DWORD <|@ <|@
      nr 1194  <|@ instruction rbp|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1196  <|@ instruction JUMP ~[] destination: B118 -> B119 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B119" 
    successors "B121" "B123" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4604897066994192652
    begin_IR
      LIR
      nr 1204  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr 1206  <|@ instruction r14|DWORD = SHL rbp|DWORD y: 3 size: DWORD <|@ <|@
      nr 1208  <|@ instruction r14|DWORD = LEA [r14|DWORD + 8] size: DWORD <|@ <|@
      nr 1210  <|@ instruction r14|QWORD = MOVSXD r14|DWORD size: QWORD <|@ <|@
      nr 1212  <|@ instruction r14|QWORD = MOV [r8|QWORD + r14|QWORD * 1] size: QWORD <|@ <|@
      nr 1214  <|@ instruction CMP (x: rdx|QWORD, y: r14|QWORD) size: QWORD <|@ <|@
      nr 1216  <|@ instruction BRANCH trueDestinationProbability: 0.4 condition: = trueDestination: B120 -> B121 falseDestination: B120 -> B123 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B123"
    from_bci -1
    to_bci -1
    predecessors "B120" 
    successors "B119" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 2
    probability 4601737836856605403
    begin_IR
      LIR
      nr 1242  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1244  <|@ instruction rbp|DWORD = INC rbp|DWORD size: DWORD <|@ <|@
      nr 1246  <|@ instruction JUMP ~[] destination: B123 -> B119 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B118" "B123" 
    successors "B120" "B124" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 2
    probability 4604897066994192652
    begin_IR
      LIR
      nr 1198  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1200  <|@ instruction CMP (x: rax|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr 1202  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B119 -> B120 falseDestination: B119 -> B124 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B113" 
    successors "B122" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4607384112386888277
    begin_IR
      LIR
      nr 1164  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1166  <|@ instruction JUMP ~[] destination: B114 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B112" "B114" "B117" "B121" 
    successors "B69" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4611906383812727985
    begin_IR
      LIR
      nr 1224  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1226  <|@ instruction MOV (x: [r11|QWORD[.] + rdi|DWORD * 4 + 16], y: r13|DWORD[.]) size: DWORD <|@ <|@
      nr 1228  <|@ instruction rsi|QWORD[.] = LEA [r11|QWORD[.] + rdi|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr 1230  <|@ instruction rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr 1232  <|@ instruction MOVB (x: [rsi|QWORD[*] + rbx|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr 1234  <|@ st <@st|@reference-map: [r10:0, r11:0, stack:32, stack:40, stack:64]
live-base-pointers: []
java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 120]
locals: - stack:32|QWORD[.] - r11|QWORD[.] r10|QWORD[.] rdi|DWORD 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:120] <|@ <|@
      nr 1236  <|@ instruction rdi|DWORD = INC rdi|DWORD size: DWORD <|@ <|@
      nr 1238  <|@ instruction r8|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1240  <|@ instruction JUMP ~[] destination: B122 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" "B122" 
    successors "B70" "B130" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4614662322185081950
    begin_IR
      LIR
      nr  708  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  710  <|@ instruction CMP (x: r8|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  712  <|@ instruction BRANCH trueDestinationProbability: 0.6989533557102465 condition: > trueDestination: B69 -> B70 falseDestination: B69 -> B130 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B116" 
    successors "B122" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4602880512759517781
    begin_IR
      LIR
      nr 1184  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1186  <|@ instruction JUMP ~[] destination: B117 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B120" 
    successors "B122" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4599049097877038909
    begin_IR
      LIR
      nr 1218  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1220  <|@ instruction MOV (x: [rsi|DWORD * 8 + 24], y: rdx|QWORD) size: QWORD <|@ <|@
      nr 1222  <|@ instruction JUMP ~[] destination: B121 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B83" "B98" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598378242651655054
    begin_IR
      LIR
      nr  826  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  828  <|@ instruction CMP r9|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/SubList$1;, resolved>;compressed} <|@ <|@
      nr  830  <|@ instruction BRANCH trueDestinationProbability: 0.916333823838554 condition: = trueDestination: B82 -> B83 falseDestination: B82 -> B98 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B84" "B97" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597793695504499049
    begin_IR
      LIR
      nr  832  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  834  <|@ instruction rax|DWORD[.] = MOV [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  836  <|@ st <@st|@reference-map: [rax:0, r10:0, r11:0, stack:32, stack:40, stack:64]
live-base-pointers: []
java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42]
locals: - stack:32|QWORD[.] - r11|QWORD[.] r10|QWORD[.] rdi|DWORD 
>@ <|@ instruction CMP [rax|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed} state [bci:42] <|@ <|@
      nr  838  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B83 -> B84 falseDestination: B83 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B85" "B96" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597793695504499049
    begin_IR
      LIR
      nr  840  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  842  <|@ instruction rsi|DWORD[.] = MOV [r10|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  844  <|@ st <@st|@reference-map: [rax:0, rsi:0, r10:0, r11:0, stack:32, stack:40, stack:64]
live-base-pointers: []
java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42]
locals: - stack:32|QWORD[.] - r11|QWORD[.] r10|QWORD[.] rdi|DWORD 
>@ <|@ instruction rbp|DWORD = MOV [rsi|DWORD[.] * 8 + 20] size: DWORD state [bci:42] <|@ <|@
      nr  846  <|@ instruction rsi|DWORD = MOV [rsi|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr  848  <|@ instruction r13|DWORD = MOV [rax|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  850  <|@ instruction r14|DWORD = SUB (x: r13|DWORD, ~y: rsi|DWORD) size: DWORD <|@ <|@
      nr  852  <|@ instruction CMP (x: rbp|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr  854  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B84 -> B85 falseDestination: B84 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B86" "B95" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597793695504499049
    begin_IR
      LIR
      nr  856  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  858  <|@ instruction rsi|DWORD[.] = MOV [rax|DWORD[.] * 8 + 24] size: DWORD <|@ <|@
      nr  860  <|@ st <@st|@reference-map: [rax:0, rsi:0, r10:0, r11:0, stack:32, stack:40, stack:64]
live-base-pointers: []
java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42]
locals: - stack:32|QWORD[.] - r11|QWORD[.] r10|QWORD[.] rdi|DWORD 
>@ <|@ instruction rbp|DWORD = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD state [bci:42] <|@ <|@
      nr  862  <|@ instruction CMP (x: rbp|DWORD, y: [rax|DWORD[.] * 8 + 20]) size: DWORD <|@ <|@
      nr  864  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B85 -> B86 falseDestination: B85 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B87" "B90" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597793695504499049
    begin_IR
      LIR
      nr  866  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  868  <|@ instruction rbp|DWORD = MOV [rsi|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr  870  <|@ instruction r14|DWORD = INC r13|DWORD size: DWORD <|@ <|@
      nr  872  <|@ instruction CMP rbp|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed} <|@ <|@
      nr  874  <|@ instruction BRANCH trueDestinationProbability: 0.9304948647614187 condition: = trueDestination: B86 -> B87 falseDestination: B86 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B88" "B89" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597194166782228429
    begin_IR
      LIR
      nr  876  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  878  <|@ instruction rsi|DWORD[.] = MOV [rsi|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr  880  <|@ st <@st|@reference-map: [rax:0, rsi:0, r10:0, r11:0, stack:32, stack:40, stack:64]
live-base-pointers: []
java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42]
locals: - stack:32|QWORD[.] - r11|QWORD[.] r10|QWORD[.] rdi|DWORD 
>@ <|@ instruction CMP (x: r13|DWORD, y: [rsi|DWORD[.] * 8 + 12]) size: DWORD state [bci:42] <|@ <|@
      nr  882  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B87 -> B88 falseDestination: B87 -> B89 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B111" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597194166782228429
    begin_IR
      LIR
      nr  884  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  886  <|@ instruction MOV (x: [rax|DWORD[.] * 8 + 16], y: r13|DWORD) size: DWORD <|@ <|@
      nr  888  <|@ instruction MOV (x: [rax|DWORD[.] * 8 + 12], y: r14|DWORD) size: DWORD <|@ <|@
      nr  890  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@68a0169d encoding: base: 0 shift: 3 <|@ <|@
      nr  892  <|@ instruction rsi|DWORD[.] = MOV [rsi|QWORD[.] + r13|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  894  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@68a0169d encoding: base: 0 shift: 3 <|@ <|@
      nr  896  <|@ instruction r13|DWORD[.] = MOVE rsi|DWORD[.] moveKind: DWORD <|@ <|@
      nr  898  <|@ instruction r14|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  900  <|@ instruction JUMP ~[] destination: B88 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B122" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597532986004742293
    begin_IR
      LIR
      nr 1146  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1148  <|@ instruction JUMP ~[] destination: B112 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B99" "B129" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4581957783436701082
    begin_IR
      LIR
      nr 1020  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1022  <|@ instruction CMP r9|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap$KeyIterator;, resolved>;compressed} <|@ <|@
      nr 1024  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B98 -> B99 falseDestination: B98 -> B129 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B98" 
    successors "B100" "B128" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4581957783436701082
    begin_IR
      LIR
      nr 1026  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1028  <|@ instruction rsi|DWORD[.] = MOV [r10|QWORD[.] + 20] size: DWORD <|@ <|@
      nr 1030  <|@ st <@st|@reference-map: [rsi:0, r10:0, r11:0, stack:32, stack:40, stack:64]
live-base-pointers: []
java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42]
locals: - stack:32|QWORD[.] - r11|QWORD[.] r10|QWORD[.] rdi|DWORD 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + rsi|DWORD[.] * 8] state [bci:42] <|@ <|@
      nr 1032  <|@ instruction rax|DWORD[.] = MOV [r10|QWORD[.] + 28] size: DWORD <|@ <|@
      nr 1034  <|@ st <@st|@reference-map: [rax:0, rsi:0, r10:0, r11:0, stack:32, stack:40, stack:64]
live-base-pointers: []
java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42]
locals: - stack:32|QWORD[.] - r11|QWORD[.] r10|QWORD[.] rdi|DWORD 
>@ <|@ instruction rbp|DWORD = MOV [rax|DWORD[.] * 8 + 24] size: DWORD state [bci:42] <|@ <|@
      nr 1036  <|@ instruction CMP (x: rbp|DWORD, y: [r10|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr 1038  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B99 -> B100 falseDestination: B99 -> B128 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B101" "B110" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4581957783436701082
    begin_IR
      LIR
      nr 1040  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1042  <|@ instruction MOV (x: [r10|QWORD[.] + 24], y: rsi|DWORD[.]) size: DWORD <|@ <|@
      nr 1044  <|@ instruction rbp|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr 1046  <|@ instruction MOVB (x: [rbp|QWORD[*] + rbx|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr 1048  <|@ instruction rbp|DWORD[.] = MOV [rsi|DWORD[.] * 8 + 24] size: DWORD <|@ <|@
      nr 1050  <|@ instruction MOV (x: [r10|QWORD[.] + 20], y: rbp|DWORD[.]) size: DWORD <|@ <|@
      nr 1052  <|@ instruction r13|DWORD[.] = MOV [rsi|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr 1054  <|@ instruction r14|QWORD[.] = UNCOMPRESSPOINTER (input: r13|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@68a0169d encoding: base: 0 shift: 3 <|@ <|@
      nr 1056  <|@ instruction TEST (x: rbp|DWORD[.], y: rbp|DWORD[.]) size: DWORD <|@ <|@
      nr 1058  <|@ instruction BRANCH trueDestinationProbability: 0.862846997817839 condition: = trueDestination: B100 -> B101 falseDestination: B100 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B102" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4581093642439087946
    begin_IR
      LIR
      nr 1060  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1062  <|@ instruction stack:68|DWORD[.] = MOVE rsi|DWORD[.] moveKind: DWORD <|@ <|@
      nr 1064  <|@ instruction rax|DWORD[.] = MOV [rax|DWORD[.] * 8 + 36] size: DWORD <|@ <|@
      nr 1066  <|@ st <@st|@reference-map: [rax:0, r10:0, r11:0, r13:0, r14:0, stack:28, stack:32, stack:40, stack:64]
live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1445) [bci: 53]
stack: Object[null] 
locals: r10|QWORD[.] - stack:68|DWORD[.] 
java.util.HashMap$KeyIterator.next(HashMap.java:1466) [bci: 1]
locals: - 
java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stack: r11|QWORD[.] rdi|DWORD 
locals: - stack:32|QWORD[.] - r11|QWORD[.] r10|QWORD[.] rdi|DWORD 
>@ <|@ instruction rbp|DWORD = MOV [rax|DWORD[.] * 8 + 12] size: DWORD state [bci:53, 1, 114] <|@ <|@
      nr 1068  <|@ instruction rsi|DWORD = MOV [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr 1070  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@68a0169d encoding: base: 0 shift: 3 <|@ <|@
      nr 1072  <|@ instruction JUMP ~[] destination: B101 -> B102 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B102" 
    successors "B104" "B107" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4588774090470730591
    begin_IR
      LIR
      nr 1080  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr 1082  <|@ instruction CMP (x: rbp|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr 1084  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B103 -> B104 falseDestination: B103 -> B107 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B105" "B106" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4588774090470730591
    begin_IR
      LIR
      nr 1086  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1088  <|@ instruction rdx|DWORD = INC rsi|DWORD size: DWORD <|@ <|@
      nr 1090  <|@ instruction MOV (x: [r10|QWORD[.] + 16], y: rdx|DWORD) size: DWORD <|@ <|@
      nr 1092  <|@ instruction rsi|DWORD[.] = MOV [rax|QWORD[.] + rsi|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 1094  <|@ instruction MOV (x: [r10|QWORD[.] + 20], y: rsi|DWORD[.]) size: DWORD <|@ <|@
      nr 1096  <|@ instruction r8|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr 1098  <|@ instruction MOVB (x: [r8|QWORD[*] + rbx|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr 1100  <|@ instruction TEST (x: rsi|DWORD[.], y: rsi|DWORD[.]) size: DWORD <|@ <|@
      nr 1102  <|@ instruction BRANCH trueDestinationProbability: 0.7114614377628611 condition: = trueDestination: B104 -> B105 falseDestination: B104 -> B106 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B102" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 2
    probability 4586288830091813018
    begin_IR
      LIR
      nr 1104  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1106  <|@ st <@st|@reference-map: [rax:0, r10:0, r11:0, r13:0, r14:0, stack:28, stack:32, stack:40, stack:64]
live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1446) [bci: 95]
stack: Object[null] 
locals: r10|QWORD[.] rax|QWORD[.] stack:68|DWORD[.] 
java.util.HashMap$KeyIterator.next(HashMap.java:1466) [bci: 1]
locals: - 
java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stack: r11|QWORD[.] rdi|DWORD 
locals: - stack:32|QWORD[.] - r11|QWORD[.] r10|QWORD[.] rdi|DWORD 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:95, 1, 114] <|@ <|@
      nr 1108  <|@ instruction rsi|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr 1110  <|@ instruction JUMP ~[] destination: B105 -> B102 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B101" "B105" 
    successors "B103" "B109" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 2
    probability 4589007040607145023
    begin_IR
      LIR
      nr 1074  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1076  <|@ instruction CMP (x: rbp|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr 1078  <|@ instruction BRANCH trueDestinationProbability: 0.973666701969634 condition: > trueDestination: B102 -> B103 falseDestination: B102 -> B109 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B111" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4580627742166259083
    begin_IR
      LIR
      nr 1112  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1114  <|@ instruction JUMP ~[] destination: B106 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B91" "B94" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4580453451186588897
    begin_IR
      LIR
      nr  910  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  912  <|@ instruction CMP rbp|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeInputList;, resolved>;compressed} <|@ <|@
      nr  914  <|@ instruction BRANCH trueDestinationProbability: 0.9931451844203528 condition: = trueDestination: B90 -> B91 falseDestination: B90 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B92" "B93" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4580420573915981964
    begin_IR
      LIR
      nr  916  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  918  <|@ instruction rsi|DWORD[.] = MOV [rsi|DWORD[.] * 8 + 28] size: DWORD <|@ <|@
      nr  920  <|@ st <@st|@reference-map: [rax:0, rsi:0, r10:0, r11:0, stack:32, stack:40, stack:64]
live-base-pointers: []
java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42]
locals: - stack:32|QWORD[.] - r11|QWORD[.] r10|QWORD[.] rdi|DWORD 
>@ <|@ instruction CMP (x: r13|DWORD, y: [rsi|DWORD[.] * 8 + 12]) size: DWORD state [bci:42] <|@ <|@
      nr  922  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B91 -> B92 falseDestination: B91 -> B93 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B111" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4580420573915981964
    begin_IR
      LIR
      nr  924  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  926  <|@ instruction MOV (x: [rax|DWORD[.] * 8 + 16], y: r13|DWORD) size: DWORD <|@ <|@
      nr  928  <|@ instruction MOV (x: [rax|DWORD[.] * 8 + 12], y: r14|DWORD) size: DWORD <|@ <|@
      nr  930  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@68a0169d encoding: base: 0 shift: 3 <|@ <|@
      nr  932  <|@ instruction rsi|DWORD[.] = MOV [rsi|QWORD[.] + r13|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  934  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@68a0169d encoding: base: 0 shift: 3 <|@ <|@
      nr  936  <|@ instruction r13|DWORD[.] = MOVE rsi|DWORD[.] moveKind: DWORD <|@ <|@
      nr  938  <|@ instruction r14|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  940  <|@ instruction JUMP ~[] destination: B92 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B111" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4569059550507217536
    begin_IR
      LIR
      nr 1136  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1138  <|@ instruction JUMP ~[] destination: B110 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B102" 
    successors "B111" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4565097227264203764
    begin_IR
      LIR
      nr 1132  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1134  <|@ instruction JUMP ~[] destination: B109 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B111" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4548045005664834791
    begin_IR
      LIR
      nr  950  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  952  <|@ instruction stack:68|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  954  <|@ instruction stack:72|DWORD[.] = MOVE rax|DWORD[.] moveKind: DWORD <|@ <|@
      nr  956  <|@ instruction stack:76|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  958  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@68a0169d encoding: base: 0 shift: 3 <|@ <|@
      nr  960  <|@ instruction rdx|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr  962  <|@ instruction stack:80|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr  964  <|@ st <@st|@reference-map: [stack:24, stack:32, stack:40, stack:64]
live-base-pointers: []
java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
locals: stack:72|DWORD[.] stack:80|DWORD - 
java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
locals: - 
java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stack: stack:64|QWORD[.] stack:76|DWORD 
locals: - stack:32|QWORD[.] - stack:64|QWORD[.] stack:56|QWORD[.] stack:76|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractList.get(int)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:14, 11, 114] <|@ <|@
      nr  966  <|@ instruction rsi|DWORD[.] = MOVE stack:72|DWORD[.] moveKind: DWORD <|@ <|@
      nr  968  <|@ instruction r13|DWORD = MOVE stack:80|DWORD moveKind: DWORD <|@ <|@
      nr  970  <|@ instruction MOV (x: [rsi|DWORD[.] * 8 + 16], y: r13|DWORD) size: DWORD <|@ <|@
      nr  972  <|@ instruction r14|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr  974  <|@ instruction MOV (x: [rsi|DWORD[.] * 8 + 12], y: r14|DWORD) size: DWORD <|@ <|@
      nr  976  <|@ instruction rsi|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@68a0169d encoding: base: 0 shift: 3 <|@ <|@
      nr  978  <|@ instruction r13|DWORD[.] = MOVE rsi|DWORD[.] moveKind: DWORD <|@ <|@
      nr  980  <|@ instruction r14|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  982  <|@ instruction rdi|DWORD = MOVE stack:76|DWORD moveKind: DWORD <|@ <|@
      nr  984  <|@ instruction rbx|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr  986  <|@ instruction rcx|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  988  <|@ instruction r9|DWORD = MOVE stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  990  <|@ instruction r11|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  992  <|@ instruction r10|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  994  <|@ instruction JUMP ~[] destination: B94 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B130"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B131" "B134" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1290  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1292  <|@ instruction stack:76|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr 1294  <|@ instruction CMP stack:40|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList$SubList$1;, resolved>;compressed} <|@ <|@
      nr 1296  <|@ instruction BRANCH trueDestinationProbability: 0.9361509309606195 condition: = trueDestination: B130 -> B131 falseDestination: B130 -> B134 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B131"
    from_bci -1
    to_bci -1
    predecessors "B130" 
    successors "B132" "B133" 
    xhandlers
    flags 
    probability 4606607317512949994
    begin_IR
      LIR
      nr 1298  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1300  <|@ instruction r10|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1302  <|@ instruction rax|DWORD[.] = MOV [r10|QWORD[.] + 32] size: DWORD <|@ <|@
      nr 1304  <|@ st <@st|@reference-map: [r10:0, stack:32, stack:64]
live-base-pointers: []
java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42]
locals: - stack:32|QWORD[.] - stack:64|QWORD[.] r10|QWORD[.] stack:76|DWORD 
>@ <|@ instruction rax|DWORD = MOV [rax|DWORD[.] * 8 + 24] size: DWORD state [bci:42] <|@ <|@
      nr 1306  <|@ instruction CMP (x: rax|DWORD, y: [r10|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr 1308  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B131 -> B132 falseDestination: B131 -> B133 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B132"
    from_bci -1
    to_bci -1
    predecessors "B131" 
    successors 
    xhandlers
    flags 
    probability 4606607317512949994
    begin_IR
      LIR
      nr 1310  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1312  <|@ instruction rax|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1314  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B68" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  678  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  680  <|@ instruction JUMP ~[] destination: B65 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B134"
    from_bci -1
    to_bci -1
    predecessors "B130" 
    successors "B135" "B140" 
    xhandlers
    flags 
    probability 4589265230959704240
    begin_IR
      LIR
      nr 1326  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1328  <|@ instruction r10|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1330  <|@ instruction CMP stack:40|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/SubList$1;, resolved>;compressed} <|@ <|@
      nr 1332  <|@ instruction BRANCH trueDestinationProbability: 0.8662365591397847 condition: = trueDestination: B134 -> B135 falseDestination: B134 -> B140 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B135"
    from_bci -1
    to_bci -1
    predecessors "B134" 
    successors "B136" "B139" 
    xhandlers
    flags 
    probability 4588131601196852644
    begin_IR
      LIR
      nr 1334  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1336  <|@ instruction rax|DWORD[.] = MOV [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr 1338  <|@ st <@st|@reference-map: [rax:0, r10:0, stack:32, stack:64]
live-base-pointers: []
java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42]
locals: - stack:32|QWORD[.] - stack:64|QWORD[.] r10|QWORD[.] stack:76|DWORD 
>@ <|@ instruction CMP [rax|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed} state [bci:42] <|@ <|@
      nr 1340  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B135 -> B136 falseDestination: B135 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B136"
    from_bci -1
    to_bci -1
    predecessors "B135" 
    successors "B137" "B138" 
    xhandlers
    flags 
    probability 4588131601196852644
    begin_IR
      LIR
      nr 1342  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1344  <|@ instruction rsi|DWORD[.] = MOV [r10|QWORD[.] + 20] size: DWORD <|@ <|@
      nr 1346  <|@ st <@st|@reference-map: [rax:0, rsi:0, r10:0, stack:32, stack:64]
live-base-pointers: []
java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42]
locals: - stack:32|QWORD[.] - stack:64|QWORD[.] r10|QWORD[.] stack:76|DWORD 
>@ <|@ instruction rdx|DWORD = MOV [rsi|DWORD[.] * 8 + 20] size: DWORD state [bci:42] <|@ <|@
      nr 1348  <|@ instruction rsi|DWORD = MOV [rsi|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr 1350  <|@ instruction rax|DWORD = MOV [rax|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr 1352  <|@ instruction rax|DWORD = SUB (x: rax|DWORD, ~y: rsi|DWORD) size: DWORD <|@ <|@
      nr 1354  <|@ instruction CMP (x: rdx|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr 1356  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B136 -> B137 falseDestination: B136 -> B138 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B138"
    from_bci -1
    to_bci -1
    predecessors "B136" 
    successors 
    xhandlers
    flags 
    probability 4588131601196852644
    begin_IR
      LIR
      nr 1368  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1370  <|@ instruction rax|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1372  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" "B8" 
    xhandlers
    flags 
    probability 4589261525764508072
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   44  <|@ instruction CMP r14|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/RandomAccessSubList;, resolved>;compressed} <|@ <|@
      nr   46  <|@ instruction BRANCH trueDestinationProbability: 0.8661213947481707 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4588124123200152941
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   50  <|@ instruction rsi|DWORD[.] = MOV [r13|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   52  <|@ st <@st|@reference-map: [r13:0, stack:64]
live-base-pointers: []
java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 0]
locals: r13|QWORD[.] stack:32|QWORD[.] - - - - 
>@ <|@ instruction rsi|DWORD = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   54  <|@ instruction CMP (x: rsi|DWORD, y: [r13|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   56  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B10" 
    xhandlers
    flags 
    probability 4588124123200152941
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   60  <|@ instruction r10|DWORD = MOV [r13|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   62  <|@ instruction rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr   64  <|@ instruction JUMP ~[] destination: B6 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B36" 
    xhandlers
    flags 
    probability 4589260263239763114
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  354  <|@ instruction JUMP ~[] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B22" "B35" 
    successors "B37" "B63" 
    xhandlers
    flags 
    probability 4589261525764508073
    begin_IR
      LIR
      nr  356  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  358  <|@ instruction CMP r14|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/RandomAccessSubList;, resolved>;compressed} <|@ <|@
      nr  360  <|@ instruction BRANCH trueDestinationProbability: 0.8661213947481707 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" "B61" 
    xhandlers
    flags 
    probability 4588124123200152943
    begin_IR
      LIR
      nr  362  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  364  <|@ instruction r14|DWORD[.] = MOV [r13|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  366  <|@ st <@st|@reference-map: [rdx:0, r13:0, r14:0, stack:64]
live-base-pointers: []
java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 32]
stack: rdx|QWORD[.] 
locals: r13|QWORD[.] stack:32|QWORD[.] - - - - 
>@ <|@ instruction r10|DWORD = MOV [r14|DWORD[.] * 8 + 12] size: DWORD state [bci:32] <|@ <|@
      nr  368  <|@ instruction CMP (x: r10|DWORD, y: [r13|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr  370  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4588124123200152943
    begin_IR
      LIR
      nr  372  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  374  <|@ instruction CMP [r13|QWORD[.] + 20] y: 0 size: DWORD <|@ <|@
      nr  376  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B38 -> B39 falseDestination: B38 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4588124123200152943
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  390  <|@ instruction r11|DWORD = MOV [r13|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  392  <|@ instruction TEST (x: r11|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  394  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B40 -> B41 falseDestination: B40 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B60" 
    xhandlers
    flags 
    probability 4588124123200152943
    begin_IR
      LIR
      nr  406  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  408  <|@ instruction rsi|DWORD = MOV [r14|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr  410  <|@ instruction rcx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotMethod<AbstractList.listIterator(int)>} <|@ <|@
      nr  412  <|@ instruction CMP (x: rcx|QWORD, y: [rsi|DWORD * 8 + 696]) size: QWORD <|@ <|@
      nr  414  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B44" "B47" 
    xhandlers
    flags 
    probability 4588124123200152943
    begin_IR
      LIR
      nr  416  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  418  <|@ instruction CMP rsi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed} <|@ <|@
      nr  420  <|@ instruction BRANCH trueDestinationProbability: 0.5044648172401477 condition: = trueDestination: B43 -> B44 falseDestination: B43 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4583691632950366314
    begin_IR
      LIR
      nr  422  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  424  <|@ instruction rsi|DWORD[.] = MOV [r14|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr  426  <|@ st <@st|@reference-map: [rdx:0, r13:0, r14:0, stack:64]
live-base-pointers: []
java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 32]
stack: rdx|QWORD[.] 
locals: r13|QWORD[.] stack:32|QWORD[.] - - - - 
>@ <|@ instruction rsi|DWORD = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD state [bci:32] <|@ <|@
      nr  428  <|@ instruction CMP (x: r11|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr  430  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B44 -> B45 falseDestination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B55" 
    xhandlers
    flags 
    probability 4583691632950366314
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  444  <|@ instruction stack:36|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr  446  <|@ instruction JUMP ~[] destination: B46 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" "B46" "B49" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4588124123200152944
    begin_IR
      LIR
      nr  506  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  508  <|@ instruction rcx|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  510  <|@ instruction r8|QWORD = LEA [rcx|QWORD + 56] size: QWORD <|@ <|@
      nr  512  <|@ instruction CMP (x: r8|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr  514  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B55 -> B56 falseDestination: B55 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" 
    xhandlers
    flags 
    probability 4588044490178509359
    begin_IR
      LIR
      nr  544  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  546  <|@ instruction MOV (x: [r15|QWORD + 96], y: r8|QWORD) size: QWORD <|@ <|@
      nr  548  <|@ instruction AMD64PREFETCH ~[rcx|QWORD + 248] instr: 0 <|@ <|@
      nr  550  <|@ instruction rsi|QWORD[*] = MOVE rcx|QWORD moveKind: QWORD <|@ <|@
      nr  552  <|@ instruction JUMP ~[] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" "B56" 
    successors "B64" 
    xhandlers
    flags 
    probability 4588124123200152944
    begin_IR
      LIR
      nr  554  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  556  <|@ instruction rcx|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  558  <|@ instruction r8|QWORD[*] = LEA [rsi|QWORD[*] + 24] size: QWORD <|@ <|@
      nr  560  <|@ instruction r8|QWORD[.] = MOVE r8|QWORD[*] moveKind: QWORD <|@ <|@
      nr  562  <|@ instruction r9|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/SubList$1;, resolved>} <|@ <|@
      nr  564  <|@ instruction r9|QWORD = MOV [r9|QWORD + 168] size: QWORD <|@ <|@
      nr  566  <|@ instruction MOV (x: [rsi|QWORD[*]], y: r9|QWORD) size: QWORD <|@ <|@
      nr  568  <|@ instruction MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/SubList$1;, resolved>;compressed} <|@ <|@
      nr  570  <|@ instruction MOV (x: [rsi|QWORD[*] + 12], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr  572  <|@ instruction r8|DWORD[.] = COMPRESSPOINTER (input: r8|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@68a0169d encoding: base: 0 shift: 3 <|@ <|@
      nr  574  <|@ instruction MOV (x: [rsi|QWORD[*] + 16], y: r8|DWORD[.]) size: DWORD <|@ <|@
      nr  576  <|@ instruction r13|DWORD[.] = COMPRESSPOINTER (input: r13|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@68a0169d encoding: base: 0 shift: 3 <|@ <|@
      nr  578  <|@ instruction MOV (x: [rsi|QWORD[*] + 20], y: r13|DWORD[.]) size: DWORD <|@ <|@
      nr  580  <|@ instruction r8|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>} <|@ <|@
      nr  582  <|@ instruction r8|QWORD = MOV [r8|QWORD + 168] size: QWORD <|@ <|@
      nr  584  <|@ instruction MOV (x: [rsi|QWORD[*] + 24], y: r8|QWORD) size: QWORD <|@ <|@
      nr  586  <|@ instruction MOV [rsi|QWORD[*] + 32] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed} <|@ <|@
      nr  588  <|@ instruction MOV (x: [rsi|QWORD[*] + 36], y: r11|DWORD) size: DWORD <|@ <|@
      nr  590  <|@ instruction MOV [rsi|QWORD[*] + 40] y: -1 size: DWORD <|@ <|@
      nr  592  <|@ instruction MOV (x: [rsi|QWORD[*] + 44], y: r10|DWORD) size: DWORD <|@ <|@
      nr  594  <|@ instruction MOV (x: [rsi|QWORD[*] + 48], y: r14|DWORD[.]) size: DWORD <|@ <|@
      nr  596  <|@ instruction MOV (x: [rsi|QWORD[*] + 52], y: r14|DWORD[.]) size: DWORD <|@ <|@
      nr  598  <|@ instruction r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  600  <|@ instruction r10|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  602  <|@ instruction rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  604  <|@ instruction JUMP ~[] destination: B58 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B48" "B51" 
    xhandlers
    flags 
    probability 4583549414195198580
    begin_IR
      LIR
      nr  448  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  450  <|@ instruction CMP rsi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Collections$EmptyList;, resolved>;compressed} <|@ <|@
      nr  452  <|@ instruction BRANCH trueDestinationProbability: 0.525228255646324 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B49" "B50" 
    xhandlers
    flags 
    probability 4579444027082297734
    begin_IR
      LIR
      nr  454  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  456  <|@ instruction CMP r11|DWORD y: 1 size: DWORD <|@ <|@
      nr  458  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B48 -> B49 falseDestination: B48 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B55" 
    xhandlers
    flags 
    probability 4579444027082297734
    begin_IR
      LIR
      nr  460  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  462  <|@ instruction stack:36|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  464  <|@ instruction JUMP ~[] destination: B49 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B52" "B59" 
    xhandlers
    flags 
    probability 4578647602053358434
    begin_IR
      LIR
      nr  476  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  478  <|@ instruction CMP rsi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeInputList;, resolved>;compressed} <|@ <|@
      nr  480  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B53" "B54" 
    xhandlers
    flags 
    probability 4578647602053358434
    begin_IR
      LIR
      nr  482  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  484  <|@ instruction rsi|DWORD = MOV [r14|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr  486  <|@ instruction CMP (x: r11|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr  488  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B52 -> B53 falseDestination: B52 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    probability 4578647602053358434
    begin_IR
      LIR
      nr  500  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  502  <|@ instruction stack:36|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr  504  <|@ instruction JUMP ~[] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4576550460895980228
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  276  <|@ instruction stack:36|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  278  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  280  <|@ instruction rdx|DWORD = MOVE input: int[6|0x6] <|@ <|@
      nr  282  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  284  <|@ st <@st|@reference-map: [r13:0, r14:0, stack:64]
live-base-pointers: []
java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 32]
stack: r14|QWORD[.] 
locals: r13|QWORD[.] stack:32|QWORD[.] - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:32] <|@ <|@
      nr  286  <|@ instruction rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  288  <|@ instruction r10|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  290  <|@ instruction rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  292  <|@ instruction JUMP ~[] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B64" 
    xhandlers
    flags 
    probability 4576077253934364556
    begin_IR
      LIR
      nr  644  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  646  <|@ instruction stack:56|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  648  <|@ instruction rsi|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  650  <|@ st <@st|@reference-map: [stack:40, stack:64]
live-base-pointers: []
java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
locals: - stack:32|QWORD[.] - stack:56|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<AbstractCollection.iterator()> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:34] <|@ <|@
      nr  652  <|@ instruction r11|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  654  <|@ instruction r10|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  656  <|@ instruction rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  658  <|@ instruction JUMP ~[] destination: B63 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B9" "B147" 
    xhandlers
    flags 
    probability 4576077253934364555
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   74  <|@ instruction CMP r14|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashSet;, resolved>;compressed} <|@ <|@
      nr   76  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B147 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" 
    xhandlers
    flags 
    probability 4576077253934364555
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   80  <|@ instruction rax|DWORD[.] = MOV [r13|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   82  <|@ st <@st|@reference-map: [r13:0, stack:64]
live-base-pointers: []
java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 0]
locals: r13|QWORD[.] stack:32|QWORD[.] - - - - 
>@ <|@ instruction r10|DWORD = MOV [rax|DWORD[.] * 8 + 20] size: DWORD state [bci:0] <|@ <|@
      nr   84  <|@ instruction rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr   86  <|@ instruction JUMP ~[] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B140"
    from_bci -1
    to_bci -1
    predecessors "B134" 
    successors "B141" "B144" 
    xhandlers
    flags 
    probability 4576076983509135087
    begin_IR
      LIR
      nr 1384  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1386  <|@ instruction r9|DWORD = MOVE stack:40|DWORD moveKind: DWORD <|@ <|@
      nr 1388  <|@ instruction CMP r9|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap$KeyIterator;, resolved>;compressed} <|@ <|@
      nr 1390  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B140 -> B141 falseDestination: B140 -> B144 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B141"
    from_bci -1
    to_bci -1
    predecessors "B140" 
    successors "B142" "B143" 
    xhandlers
    flags 
    probability 4576076983509135087
    begin_IR
      LIR
      nr 1392  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1394  <|@ instruction rax|DWORD[.] = MOV [r10|QWORD[.] + 20] size: DWORD <|@ <|@
      nr 1396  <|@ instruction TEST (x: rax|DWORD[.], y: rax|DWORD[.]) size: DWORD <|@ <|@
      nr 1398  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B141 -> B142 falseDestination: B141 -> B143 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B142"
    from_bci -1
    to_bci -1
    predecessors "B141" 
    successors 
    xhandlers
    flags 
    probability 4576076983509135087
    begin_IR
      LIR
      nr 1400  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1402  <|@ instruction rax|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1404  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" 
    xhandlers
    flags 
    probability 4558235736656760908
    begin_IR
      LIR
      nr  516  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  518  <|@ instruction stack:40|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  520  <|@ instruction stack:44|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  522  <|@ instruction stack:56|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  524  <|@ instruction rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  526  <|@ instruction rsi|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  528  <|@ instruction rdx|DWORD = MOVE input: int[10|0xa] <|@ <|@
      nr  530  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  532  <|@ st <@st|@reference-map: [r13:0, r14:0, stack:40, stack:64]
live-base-pointers: []
java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 9]
stack: stack:40|DWORD stack:36|DWORD 
locals: r14|DWORD[.] stack:40|DWORD 
java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
locals: r14|DWORD[.] stack:40|DWORD 
java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
stack: vobject:SubList$1:0{val$index=int[0|0x0],i=Object[null],this$0=r13|QWORD[.]} 
locals: - - - 
java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
stack: vobject:SubList$1:0{val$index=int[0|0x0],i=Object[null],this$0=r13|QWORD[.]} 
locals: - - 
java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
locals: r13|QWORD[.] 
java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
locals: r13|QWORD[.] 
java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
locals: - stack:32|QWORD[.] - stack:56|QWORD[.] - - 
vobject:SubList$1:0{val$index=int[0|0x0],i=Object[null],this$0=r13|QWORD[.]} Ljava/util/SubList$1; int[0|0x0] Object[null] r13|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:9, 2, 34, 15, 2, 1, 34] <|@ <|@
      nr  534  <|@ instruction rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  536  <|@ instruction r11|DWORD = MOVE stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  538  <|@ instruction r10|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  540  <|@ instruction rdx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  542  <|@ instruction JUMP ~[] destination: B56 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4553701740329279932
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   96  <|@ instruction rsi|DWORD = MOV [rdx|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   98  <|@ instruction rcx|QWORD[.] = MOV [rsi|DWORD * 8 + 224] size: QWORD <|@ <|@
      nr  100  <|@ instruction r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:void] <|@ <|@
      nr  102  <|@ instruction CMP (x: r11|QWORD[.], y: rcx|QWORD[.]) size: QWORD <|@ <|@
      nr  104  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4553701740329279932
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  116  <|@ instruction rcx|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  118  <|@ instruction r11|DWORD = SHL r10|DWORD y: 2 size: DWORD <|@ <|@
      nr  120  <|@ instruction r11|DWORD = LEA [r11|DWORD + 23] size: DWORD <|@ <|@
      nr  122  <|@ instruction r11|DWORD = AND r11|DWORD y: -8 size: DWORD <|@ <|@
      nr  124  <|@ instruction r11|QWORD = MOVSXD r11|DWORD size: QWORD <|@ <|@
      nr  126  <|@ instruction r8|QWORD = ADD (x: r11|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  128  <|@ instruction CMP (x: r8|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr  130  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4553651079162429142
    begin_IR
      LIR
      nr  152  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  154  <|@ instruction MOV (x: [r15|QWORD + 96], y: r8|QWORD) size: QWORD <|@ <|@
      nr  156  <|@ instruction AMD64PREFETCH ~[r11|QWORD + rcx|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr  158  <|@ instruction AMD64PREFETCH ~[r11|QWORD + rcx|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  160  <|@ instruction AMD64PREFETCH ~[r11|QWORD + rcx|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  162  <|@ instruction AMD64PREFETCH ~[r11|QWORD + rcx|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  164  <|@ instruction MOV (x: [rcx|QWORD + 12], y: r10|DWORD) size: DWORD <|@ <|@
      nr  166  <|@ instruction MOV [rcx|QWORD] y: 1 size: QWORD <|@ <|@
      nr  168  <|@ instruction MOV (x: [rcx|QWORD + 8], y: rsi|DWORD) size: DWORD <|@ <|@
      nr  170  <|@ instruction rsi|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  172  <|@ instruction JUMP ~[] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B16" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4553651079162429142
    begin_IR
      LIR
      nr  180  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  182  <|@ instruction MOV (x: [rcx|QWORD + rsi|QWORD * 1], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  184  <|@ instruction rsi|QWORD = LEA [rsi|QWORD + 8] size: QWORD <|@ <|@
      nr  186  <|@ instruction JUMP ~[] destination: B17 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B17" 
    successors "B17" "B18" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4558154678789799638
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  176  <|@ instruction CMP (x: r11|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  178  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B16 -> B17 falseDestination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4553651079162429142
    begin_IR
      LIR
      nr  188  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  190  <|@ instruction rcx|QWORD[.] = MOVE rcx|QWORD moveKind: QWORD <|@ <|@
      nr  192  <|@ instruction rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  194  <|@ instruction JUMP ~[] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B14" 
    successors "B20" "B23" 
    xhandlers
    flags 
    probability 4553701740329279932
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  198  <|@ instruction CMP [rsi|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Class;, resolved>;compressed} <|@ <|@
      nr  200  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4553701740329279932
    begin_IR
      LIR
      nr  202  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  204  <|@ instruction CMP r14|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList$SubList;, resolved>;compressed} <|@ <|@
      nr  206  <|@ instruction BRANCH trueDestinationProbability: 0.9362023508733385 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B26" 
    xhandlers
    flags 
    probability 4553378533994570538
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  210  <|@ instruction r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  212  <|@ instruction JUMP ~[] destination: B21 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B36" 
    xhandlers
    flags 
    probability 4535792526490069278
    begin_IR
      LIR
      nr  214  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  216  <|@ instruction rdx|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  218  <|@ instruction JUMP ~[] destination: B22 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B19" 
    xhandlers
    flags 
    probability 4523595055609508578
    begin_IR
      LIR
      nr  132  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  134  <|@ instruction rsi|QWORD = UNCOMPRESSPOINTER (input: rsi|DWORD, ~baseRegister: -) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@68a0169d encoding: base: 0 shift: 3 <|@ <|@
      nr  136  <|@ instruction rdx|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  138  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  140  <|@ instruction stack:36|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  142  <|@ st <@st|@reference-map: [r13:0, stack:64]
live-base-pointers: []
java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 4]
stack: stack:36|DWORD 
locals: r13|QWORD[.] stack:32|QWORD[.] - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:4] <|@ <|@
      nr  144  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  146  <|@ instruction r10|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  148  <|@ instruction rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  150  <|@ instruction JUMP ~[] destination: B14 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  396  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  398  <|@ instruction r10|DWORD = MOVE input: int[-330259|0xfffffffffffaf5ed] <|@ <|@
      nr  400  <|@ instruction r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  402  <|@ instruction rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  404  <|@ instruction JUMP ~[] destination: B41 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B39" "B61" "B41" "B60" "B45" "B53" "B50" "B59" 
    successors 
    xhandlers
    flags 
    probability 2368893403996880896
    begin_IR
      LIR
      nr  636  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  638  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  640  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  642  <|@ st <@st|@reference-map: [rdx:0, r11:0, r13:0]
live-base-pointers: []
java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 32]
stack: r11|QWORD[.] 
locals: r13|QWORD[.] rdx|QWORD[.] - - - - 
>@ <|@ instruction DEOPT info [bci:32] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B125"
    from_bci -1
    to_bci -1
    predecessors "B115" 
    successors "B126" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1254  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1256  <|@ instruction stack:76|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr 1258  <|@ instruction JUMP ~[] destination: B125 -> B126 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B126"
    from_bci -1
    to_bci -1
    predecessors "B125" "B124" 
    successors "B127" 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1260  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1262  <|@ instruction r14|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1264  <|@ instruction JUMP ~[] destination: B126 -> B127 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B127"
    from_bci -1
    to_bci -1
    predecessors "B126" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1266  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1268  <|@ instruction MOV [r15|QWORD + 668] y: -309803 size: DWORD <|@ <|@
      nr 1270  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1272  <|@ st <@st|@reference-map: [r10:0, r14:0, stack:32, stack:64]
live-base-pointers: []
java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
stack: stack:64|QWORD[.] stack:76|DWORD r14|QWORD[.] 
locals: - stack:32|QWORD[.] - stack:64|QWORD[.] r10|QWORD[.] stack:76|DWORD 
>@ <|@ instruction DEOPT info [bci:119] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B143"
    from_bci -1
    to_bci -1
    predecessors "B141" 
    successors "B145" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1406  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1408  <|@ instruction r11|DWORD = MOVE input: int[-318739|0xfffffffffffb22ed] <|@ <|@
      nr 1410  <|@ instruction rdi|DWORD = MOVE stack:76|DWORD moveKind: DWORD <|@ <|@
      nr 1412  <|@ instruction r8|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1414  <|@ instruction JUMP ~[] destination: B143 -> B145 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B145"
    from_bci -1
    to_bci -1
    predecessors "B72" "B81" "B80" "B79" "B78" "B97" "B96" "B95" "B89" "B93" "B129" "B128" "B133" "B144" "B143" "B139" "B137" 
    successors 
    xhandlers
    flags 
    probability 2373678478600962048
    begin_IR
      LIR
      nr 1426  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1428  <|@ instruction MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD <|@ <|@
      nr 1430  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1432  <|@ st <@st|@reference-map: [r8:0, r10:0, stack:64]
live-base-pointers: []
java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42]
locals: - stack:32|QWORD[.] - r8|QWORD[.] r10|QWORD[.] rdi|DWORD 
>@ <|@ instruction DEOPT info [bci:42] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B144"
    from_bci -1
    to_bci -1
    predecessors "B140" 
    successors "B145" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1416  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1418  <|@ instruction r11|DWORD = MOVE input: int[-317747|0xfffffffffffb26cd] <|@ <|@
      nr 1420  <|@ instruction rdi|DWORD = MOVE stack:76|DWORD moveKind: DWORD <|@ <|@
      nr 1422  <|@ instruction r8|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1424  <|@ instruction JUMP ~[] destination: B144 -> B145 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  222  <|@ instruction stack:36|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  224  <|@ instruction MOV [r15|QWORD + 668] y: -320051 size: DWORD <|@ <|@
      nr  226  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  228  <|@ st <@st|@reference-map: [r13:0, stack:64]
live-base-pointers: []
java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 4]
stack: stack:36|DWORD 
locals: r13|QWORD[.] stack:32|QWORD[.] - - - - 
>@ <|@ instruction DEOPT info [bci:4] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B146"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1434  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1436  <|@ instruction r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1368693834] <|@ <|@
      nr 1438  <|@ instruction MOV [r15|QWORD + 668] y: -305947 size: DWORD <|@ <|@
      nr 1440  <|@ instruction MOV (x: [r15|QWORD + 680], y: r11|QWORD[.]) size: QWORD <|@ <|@
      nr 1442  <|@ st <@st|@reference-map: [r10:0, stack:32, stack:64]
live-base-pointers: []
java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 37]
stack: r10|QWORD[.] 
locals: - stack:32|QWORD[.] - stack:64|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:37] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  106  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  108  <|@ instruction MOV [r15|QWORD + 668] y: -579169 size: DWORD <|@ <|@
      nr  110  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  112  <|@ st <@st|@reference-map: [r13:0, stack:64]
live-base-pointers: []
java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 4]
stack: r10|DWORD 
locals: r13|QWORD[.] stack:32|QWORD[.] - - - - 
>@ <|@ instruction DEOPT info [bci:4] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  432  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  434  <|@ instruction r10|DWORD = MOVE input: int[-332563|0xfffffffffffaeced] <|@ <|@
      nr  436  <|@ instruction r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  438  <|@ instruction rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  440  <|@ instruction JUMP ~[] destination: B45 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B145" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  794  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  796  <|@ instruction r8|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  798  <|@ instruction r11|DWORD = MOVE input: int[-270619|0xfffffffffffbdee5] <|@ <|@
      nr  800  <|@ instruction JUMP ~[] destination: B78 -> B145 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  378  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  380  <|@ instruction r10|DWORD = MOVE input: int[-328211|0xfffffffffffafded] <|@ <|@
      nr  382  <|@ instruction r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  384  <|@ instruction rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  386  <|@ instruction JUMP ~[] destination: B39 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  616  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  618  <|@ instruction r10|DWORD = MOVE input: int[-330035|0xfffffffffffaf6cd] <|@ <|@
      nr  620  <|@ instruction r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  622  <|@ instruction rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  624  <|@ instruction JUMP ~[] destination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  490  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  492  <|@ instruction r10|DWORD = MOVE input: int[-333843|0xfffffffffffae7ed] <|@ <|@
      nr  494  <|@ instruction r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  496  <|@ instruction rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  498  <|@ instruction JUMP ~[] destination: B53 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B145" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  810  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  812  <|@ instruction r8|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  814  <|@ instruction r11|DWORD = MOVE input: int[-265747|0xfffffffffffbf1ed] <|@ <|@
      nr  816  <|@ instruction JUMP ~[] destination: B80 -> B145 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  606  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  608  <|@ instruction r10|DWORD = MOVE input: int[-333107|0xfffffffffffaeacd] <|@ <|@
      nr  610  <|@ instruction r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  612  <|@ instruction rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  614  <|@ instruction JUMP ~[] destination: B59 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B139"
    from_bci -1
    to_bci -1
    predecessors "B135" 
    successors "B145" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1374  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1376  <|@ instruction r11|DWORD = MOVE input: int[-314163|0xfffffffffffb34cd] <|@ <|@
      nr 1378  <|@ instruction rdi|DWORD = MOVE stack:76|DWORD moveKind: DWORD <|@ <|@
      nr 1380  <|@ instruction r8|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1382  <|@ instruction JUMP ~[] destination: B139 -> B145 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B145" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  818  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  820  <|@ instruction r8|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  822  <|@ instruction r11|DWORD = MOVE input: int[-265491|0xfffffffffffbf2ed] <|@ <|@
      nr  824  <|@ instruction JUMP ~[] destination: B81 -> B145 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B128"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B145" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1274  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1276  <|@ instruction r8|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1278  <|@ instruction r11|DWORD = MOVE input: int[-295187|0xfffffffffffb7eed] <|@ <|@
      nr 1280  <|@ instruction JUMP ~[] destination: B128 -> B145 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  466  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  468  <|@ instruction r10|DWORD = MOVE input: int[-332819|0xfffffffffffaebed] <|@ <|@
      nr  470  <|@ instruction r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  472  <|@ instruction rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  474  <|@ instruction JUMP ~[] destination: B50 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B145" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  996  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  998  <|@ instruction r8|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1000  <|@ instruction r11|DWORD = MOVE input: int[-280083|0xfffffffffffbb9ed] <|@ <|@
      nr 1002  <|@ instruction JUMP ~[] destination: B95 -> B145 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B145" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1004  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1006  <|@ instruction r8|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1008  <|@ instruction r11|DWORD = MOVE input: int[-277267|0xfffffffffffbc4ed] <|@ <|@
      nr 1010  <|@ instruction JUMP ~[] destination: B96 -> B145 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B145" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1012  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1014  <|@ instruction r8|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1016  <|@ instruction r11|DWORD = MOVE input: int[-273971|0xfffffffffffbd1cd] <|@ <|@
      nr 1018  <|@ instruction JUMP ~[] destination: B97 -> B145 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B145" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  942  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  944  <|@ instruction r8|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  946  <|@ instruction r11|DWORD = MOVE input: int[-288027|0xfffffffffffb9ae5] <|@ <|@
      nr  948  <|@ instruction JUMP ~[] destination: B93 -> B145 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  258  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  260  <|@ instruction r10|DWORD = MOVE input: int[-324115|0xfffffffffffb0ded] <|@ <|@
      nr  262  <|@ instruction JUMP ~[] destination: B28 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B28" "B33" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  344  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  346  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  348  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  350  <|@ st <@st|@reference-map: [r13:0, r14:0, stack:64]
live-base-pointers: []
java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 32]
stack: r14|QWORD[.] 
locals: r13|QWORD[.] stack:32|QWORD[.] - - - - 
>@ <|@ instruction DEOPT info [bci:32] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B129"
    from_bci -1
    to_bci -1
    predecessors "B98" 
    successors "B145" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1282  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1284  <|@ instruction r8|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1286  <|@ instruction r11|DWORD = MOVE input: int[-291379|0xfffffffffffb8dcd] <|@ <|@
      nr 1288  <|@ instruction JUMP ~[] destination: B129 -> B145 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  626  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  628  <|@ instruction r10|DWORD = MOVE input: int[-327443|0xfffffffffffb00ed] <|@ <|@
      nr  630  <|@ instruction r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  632  <|@ instruction rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  634  <|@ instruction JUMP ~[] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B148" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   38  <|@ instruction r10|DWORD = MOVE input: int[-336915|0xfffffffffffadbed] <|@ <|@
      nr   40  <|@ instruction JUMP ~[] destination: B3 -> B148 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B148"
    from_bci -1
    to_bci -1
    predecessors "B3" "B147" "B7" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 1450  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1452  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1454  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1456  <|@ st <@st|@reference-map: [r13:0, stack:64]
live-base-pointers: []
java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 0]
locals: r13|QWORD[.] stack:32|QWORD[.] - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B148" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   68  <|@ instruction r10|DWORD = MOVE input: int[-340243|0xfffffffffffaceed] <|@ <|@
      nr   70  <|@ instruction JUMP ~[] destination: B7 -> B148 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B108" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1116  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1118  <|@ instruction rsi|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD <|@ <|@
      nr 1120  <|@ instruction stack:76|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr 1122  <|@ instruction JUMP ~[] destination: B107 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B107" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1124  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1126  <|@ instruction MOV [r15|QWORD + 668] y: -302107 size: DWORD <|@ <|@
      nr 1128  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1130  <|@ st <@st|@reference-map: [rax:0, rsi:0, r10:0, stack:32, stack:64]
live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1446) [bci: 68]
locals: r10|QWORD[.] rax|QWORD[.] rsi|DWORD[.] 
java.util.HashMap$KeyIterator.next(HashMap.java:1466) [bci: 1]
locals: - 
java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stack: stack:64|QWORD[.] stack:76|DWORD 
locals: - stack:32|QWORD[.] - stack:64|QWORD[.] r10|QWORD[.] stack:76|DWORD 
>@ <|@ instruction DEOPT info [bci:68, 1, 114] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B124"
    from_bci -1
    to_bci -1
    predecessors "B119" 
    successors "B126" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1248  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1250  <|@ instruction stack:76|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr 1252  <|@ instruction JUMP ~[] destination: B124 -> B126 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  338  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  340  <|@ instruction r10|DWORD = MOVE input: int[-323347|0xfffffffffffb10ed] <|@ <|@
      nr  342  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B145" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  802  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  804  <|@ instruction r8|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  806  <|@ instruction r11|DWORD = MOVE input: int[-268819|0xfffffffffffbe5ed] <|@ <|@
      nr  808  <|@ instruction JUMP ~[] destination: B79 -> B145 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B133"
    from_bci -1
    to_bci -1
    predecessors "B131" 
    successors "B145" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1316  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1318  <|@ instruction r11|DWORD = MOVE input: int[-312851|0xfffffffffffb39ed] <|@ <|@
      nr 1320  <|@ instruction rdi|DWORD = MOVE stack:76|DWORD moveKind: DWORD <|@ <|@
      nr 1322  <|@ instruction r8|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1324  <|@ instruction JUMP ~[] destination: B133 -> B145 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B145" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  902  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  904  <|@ instruction r8|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  906  <|@ instruction r11|DWORD = MOVE input: int[-282907|0xfffffffffffbaee5] <|@ <|@
      nr  908  <|@ instruction JUMP ~[] destination: B89 -> B145 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B147"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B148" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1444  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1446  <|@ instruction r10|DWORD = MOVE input: int[-341043|0xfffffffffffacbcd] <|@ <|@
      nr 1448  <|@ instruction JUMP ~[] destination: B147 -> B148 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B137"
    from_bci -1
    to_bci -1
    predecessors "B136" 
    successors "B145" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1358  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1360  <|@ instruction r11|DWORD = MOVE input: int[-317459|0xfffffffffffb27ed] <|@ <|@
      nr 1362  <|@ instruction rdi|DWORD = MOVE stack:76|DWORD moveKind: DWORD <|@ <|@
      nr 1364  <|@ instruction r8|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1366  <|@ instruction JUMP ~[] destination: B137 -> B145 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B145" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  732  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  734  <|@ instruction r8|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  736  <|@ instruction r11|DWORD = MOVE input: int[-262419|0xfffffffffffbfeed] <|@ <|@
      nr  738  <|@ instruction JUMP ~[] destination: B72 -> B145 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokevirtual #1          // size:()int
     4: istore_2      
     5: aload_1       
     6: arraylength   
     7: iload_2       
     8: if_icmplt     15
    11: aload_1       
    12: goto          32
    15: aload_1       
    16: invokevirtual #8          // java.lang.Object.getClass:()java.lang.Class
    19: invokevirtual #9          // java.lang.Class.getComponentType:()java.lang.Class
    22: iload_2       
    23: invokestatic  #10         // java.lang.reflect.Array.newInstance:(java.lang.Class, int)java.lang.Object
    26: checkcast     #14         // java.lang.Object[]
    29: checkcast     #14         // java.lang.Object[]
    32: astore_3      
    33: aload_0       
    34: invokevirtual #2          // iterator:()java.util.Iterator
    37: astore        4
    39: iconst_0      
    40: istore        5
    42: iload         5
    44: aload_3       
    45: arraylength   
    46: if_icmpge     126
    49: aload         4
    51: invokeinterface#3, 1       // java.util.Iterator.hasNext:()boolean
    56: ifne          109
    59: aload_1       
    60: aload_3       
    61: if_acmpne     72
    64: aload_3       
    65: iload         5
    67: aconst_null   
    68: aastore       
    69: goto          107
    72: aload_1       
    73: arraylength   
    74: iload         5
    76: if_icmpge     86
    79: aload_3       
    80: iload         5
    82: invokestatic  #6          // java.util.Arrays.copyOf:(java.lang.Object[], int)java.lang.Object[]
    85: areturn       
    86: aload_3       
    87: iconst_0      
    88: aload_1       
    89: iconst_0      
    90: iload         5
    92: invokestatic  #11         // java.lang.System.arraycopy:(java.lang.Object, int, java.lang.Object, int, int)void
    95: aload_1       
    96: arraylength   
    97: iload         5
    99: if_icmple     107
   102: aload_1       
   103: iload         5
   105: aconst_null   
   106: aastore       
   107: aload_1       
   108: areturn       
   109: aload_3       
   110: iload         5
   112: aload         4
   114: invokeinterface#4, 1       // java.util.Iterator.next:()java.lang.Object
   119: aastore       
   120: iinc          
   123: goto          42
   126: aload         4
   128: invokeinterface#3, 1       // java.util.Iterator.hasNext:()boolean
   133: ifeq          145
   136: aload_3       
   137: aload         4
   139: invokestatic  #7          // finishToArray:(java.lang.Object[], java.util.Iterator)java.lang.Object[]
   142: goto          146
   145: aload_3       
   146: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@1d23bfbf slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction stack:32|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ st <@st|@reference-map: [rdx:0, r13:0, stack:64]
live-base-pointers: []
java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 0]
locals: r13|QWORD[.] rdx|QWORD[.] - - - - 
>@ <|@ instruction NULLCHECK [rdx|QWORD[.]] state [bci:0] <|@ <|@
      nr   12  <|@ instruction r14|DWORD = MOV [r13|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   14  <|@ instruction CMP r14|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList$SubList;, resolved>;compressed} <|@ <|@
      nr   16  <|@ instruction BRANCH trueDestinationProbability: 0.9362023508733385 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4606607780662349515
    begin_IR
      LIR
      nr   18  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   20  <|@ instruction rsi|DWORD[.] = MOV [r13|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   22  <|@ st <@st|@reference-map: [rdx:0, r13:0, stack:64]
live-base-pointers: []
java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 0]
locals: r13|QWORD[.] rdx|QWORD[.] - - - - 
>@ <|@ instruction rsi|DWORD = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   24  <|@ instruction CMP (x: rsi|DWORD, y: [r13|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   26  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B10" 
    xhandlers
    flags 
    probability 4606607780662349515
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   30  <|@ instruction rsi|DWORD = MOV [r13|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   32  <|@ instruction r10|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr   34  <|@ instruction JUMP ~[] destination: B2 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B2" "B6" "B9" 
    successors "B11" "B24" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   90  <|@ instruction CMP (x: r10|DWORD, y: [rdx|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   92  <|@ instruction BRANCH trueDestinationProbability: 2.746347358013842E-4 condition: > trueDestination: B10 -> B11 falseDestination: B10 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B25" "B36" 
    xhandlers
    flags 
    probability 4607179945110229772
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  232  <|@ instruction CMP r14|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList$SubList;, resolved>;compressed} <|@ <|@
      nr  234  <|@ instruction BRANCH trueDestinationProbability: 0.9362023508733385 condition: = trueDestination: B24 -> B25 falseDestination: B24 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" 
    xhandlers
    flags 
    probability 4606605464788154999
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  238  <|@ instruction r14|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  240  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B21" "B25" 
    successors "B27" "B33" 
    xhandlers
    flags 
    probability 4606607780662349515
    begin_IR
      LIR
      nr  242  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  244  <|@ instruction rsi|DWORD[.] = MOV [r13|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  246  <|@ st <@st|@reference-map: [rdx:0, r13:0, r14:0, stack:64]
live-base-pointers: []
java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 32]
stack: r14|QWORD[.] 
locals: r13|QWORD[.] rdx|QWORD[.] - - - - 
>@ <|@ instruction r10|DWORD = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD state [bci:32] <|@ <|@
      nr  248  <|@ instruction CMP (x: r10|DWORD, y: [r13|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr  250  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4606607780662349515
    begin_IR
      LIR
      nr  252  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  254  <|@ instruction CMP [r13|QWORD[.] + 24] y: 0 size: DWORD <|@ <|@
      nr  256  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B27 -> B28 falseDestination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4606607780662349515
    begin_IR
      LIR
      nr  264  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  266  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  268  <|@ instruction r11|QWORD = LEA [rsi|QWORD + 40] size: QWORD <|@ <|@
      nr  270  <|@ instruction CMP (x: r11|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr  272  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B29 -> B30 falseDestination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4606523455051178784
    begin_IR
      LIR
      nr  294  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  296  <|@ instruction MOV (x: [r15|QWORD + 96], y: r11|QWORD) size: QWORD <|@ <|@
      nr  298  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 232] instr: 0 <|@ <|@
      nr  300  <|@ instruction rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  302  <|@ instruction JUMP ~[] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B30" 
    successors "B64" 
    xhandlers
    flags 
    probability 4606607780662349515
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  306  <|@ instruction r11|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  308  <|@ instruction r8|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/ArrayList$SubList$1;, resolved>} <|@ <|@
      nr  310  <|@ instruction r8|QWORD = MOV [r8|QWORD + 168] size: QWORD <|@ <|@
      nr  312  <|@ instruction MOV (x: [rsi|QWORD[*]], y: r8|QWORD) size: QWORD <|@ <|@
      nr  314  <|@ instruction MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList$SubList$1;, resolved>;compressed} <|@ <|@
      nr  316  <|@ instruction r8|QWORD = MOVE input: long[-4294967296|0xffffffff00000000] <|@ <|@
      nr  318  <|@ instruction MOV (x: [rsi|QWORD[*] + 12], y: r8|QWORD) size: QWORD <|@ <|@
      nr  320  <|@ instruction MOV (x: [rsi|QWORD[*] + 20], y: r10|DWORD) size: DWORD <|@ <|@
      nr  322  <|@ instruction MOV (x: [rsi|QWORD[*] + 24], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr  324  <|@ instruction r10|DWORD = MOV [r13|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  326  <|@ instruction MOV (x: [rsi|QWORD[*] + 28], y: r10|DWORD) size: DWORD <|@ <|@
      nr  328  <|@ instruction r13|DWORD[.] = COMPRESSPOINTER (input: r13|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@68a0169d encoding: base: 0 shift: 3 <|@ <|@
      nr  330  <|@ instruction MOV (x: [rsi|QWORD[*] + 32], y: r13|DWORD[.]) size: DWORD <|@ <|@
      nr  332  <|@ instruction r10|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  334  <|@ instruction r11|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  336  <|@ instruction JUMP ~[] destination: B32 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" "B32" "B58" 
    successors "B68" "B66" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  660  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  662  <|@ instruction stack:56|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  664  <|@ instruction stack:64|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  666  <|@ instruction r8|DWORD = MOV [r11|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  668  <|@ instruction stack:44|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  670  <|@ instruction rsi|QWORD = MOV r8|DWORD size: DWORD <|@ <|@
      nr  672  <|@ instruction r9|QWORD = DEC rsi|QWORD size: QWORD <|@ <|@
      nr  674  <|@ instruction CMP (x: rsi|QWORD, y: r9|QWORD) size: QWORD <|@ <|@
      nr  676  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: |>| trueDestination: B64 -> B68 falseDestination: B64 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B68" "B146" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  682  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  684  <|@ instruction TEST (x: r8|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  686  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B66 -> B68 falseDestination: B66 -> B146 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B64" "B66" 
    successors "B69" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  692  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  694  <|@ st <@st|@reference-map: [rdx:0, r10:0, r11:0, stack:32, stack:40, stack:64]
live-base-pointers: []
java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 37]
stack: r10|QWORD[.] 
locals: - rdx|QWORD[.] - r11|QWORD[.] - - 
>@ <|@ instruction r9|DWORD = MOV [r10|QWORD[.] + 8] size: DWORD state [bci:37] <|@ <|@
      nr  696  <|@ instruction stack:40|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  698  <|@ instruction rcx|DWORD = MOV [r11|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  700  <|@ instruction stack:36|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  702  <|@ instruction rbx|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr  704  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  706  <|@ instruction JUMP ~[] destination: B68 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B71" "B82" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612410522371396702
    begin_IR
      LIR
      nr  714  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  716  <|@ instruction CMP r9|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList$SubList$1;, resolved>;compressed} <|@ <|@
      nr  718  <|@ instruction BRANCH trueDestinationProbability: 0.8874682121946893 condition: = trueDestination: B70 -> B71 falseDestination: B70 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B72" "B73" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4611822194529678060
    begin_IR
      LIR
      nr  720  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  722  <|@ instruction rsi|DWORD[.] = MOV [r10|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  724  <|@ st <@st|@reference-map: [rsi:0, r10:0, r11:0, stack:32, stack:40, stack:64]
live-base-pointers: []
java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42]
locals: - stack:32|QWORD[.] - r11|QWORD[.] r10|QWORD[.] rdi|DWORD 
>@ <|@ instruction rax|DWORD = MOV [rsi|DWORD[.] * 8 + 24] size: DWORD state [bci:42] <|@ <|@
      nr  726  <|@ instruction rbp|DWORD = MOV [r10|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  728  <|@ instruction CMP (x: rbp|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  730  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B71 -> B72 falseDestination: B71 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B74" "B81" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4611822194529678060
    begin_IR
      LIR
      nr  740  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  742  <|@ instruction rsi|DWORD[.] = MOV [rsi|DWORD[.] * 8 + 32] size: DWORD <|@ <|@
      nr  744  <|@ st <@st|@reference-map: [rsi:0, r10:0, r11:0, stack:32, stack:40, stack:64]
live-base-pointers: []
java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42]
locals: - stack:32|QWORD[.] - r11|QWORD[.] r10|QWORD[.] rdi|DWORD 
>@ <|@ instruction r13|DWORD = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD state [bci:42] <|@ <|@
      nr  746  <|@ instruction CMP (x: r13|DWORD, y: [r10|QWORD[.] + 20]) size: DWORD <|@ <|@
      nr  748  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B73 -> B74 falseDestination: B73 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B75" "B80" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4611822194529678060
    begin_IR
      LIR
      nr  750  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  752  <|@ instruction CMP (x: rax|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  754  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B74 -> B75 falseDestination: B74 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B76" "B79" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4611822194529678060
    begin_IR
      LIR
      nr  756  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  758  <|@ instruction rsi|DWORD[.] = MOV [rsi|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr  760  <|@ st <@st|@reference-map: [rsi:0, r10:0, r11:0, stack:32, stack:40, stack:64]
live-base-pointers: []
java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42]
locals: - stack:32|QWORD[.] - r11|QWORD[.] r10|QWORD[.] rdi|DWORD 
>@ <|@ instruction rax|DWORD = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD state [bci:42] <|@ <|@
      nr  762  <|@ instruction r13|DWORD = ADD (x: rbp|DWORD, ~y: [r10|QWORD[.] + 28]) size: DWORD <|@ <|@
      nr  764  <|@ instruction CMP (x: rax|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  766  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B75 -> B76 falseDestination: B75 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B77" "B78" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4611822194529678060
    begin_IR
      LIR
      nr  768  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  770  <|@ instruction CMP (x: rax|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  772  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B76 -> B77 falseDestination: B76 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B111" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4611822194529678060
    begin_IR
      LIR
      nr  774  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  776  <|@ instruction rax|DWORD = INC rbp|DWORD size: DWORD <|@ <|@
      nr  778  <|@ instruction MOV (x: [r10|QWORD[.] + 12], y: rax|DWORD) size: DWORD <|@ <|@
      nr  780  <|@ instruction MOV (x: [r10|QWORD[.] + 16], y: rbp|DWORD) size: DWORD <|@ <|@
      nr  782  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@68a0169d encoding: base: 0 shift: 3 <|@ <|@
      nr  784  <|@ instruction rsi|DWORD[.] = MOV [rsi|QWORD[.] + r13|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  786  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@68a0169d encoding: base: 0 shift: 3 <|@ <|@
      nr  788  <|@ instruction r13|DWORD[.] = MOVE rsi|DWORD[.] moveKind: DWORD <|@ <|@
      nr  790  <|@ instruction r14|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  792  <|@ instruction JUMP ~[] destination: B77 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B100" "B77" "B94" "B88" "B92" "B104" "B102" 
    successors "B122" "B113" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4612410522371396702
    begin_IR
      LIR
      nr 1140  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr 1142  <|@ instruction TEST (x: r14|QWORD[.], y: r14|QWORD[.]) size: QWORD <|@ <|@
      nr 1144  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B111 -> B122 falseDestination: B111 -> B113 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B122" "B115" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4611887712014258773
    begin_IR
      LIR
      nr 1150  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1152  <|@ instruction rsi|DWORD = MOV [r14|QWORD[.] + 8] size: DWORD <|@ <|@
      nr 1154  <|@ instruction rdx|QWORD = MOV [rcx|DWORD * 8 + 232] size: QWORD <|@ <|@
      nr 1156  <|@ instruction r8|DWORD = MOV [rdx|QWORD + 12] size: DWORD <|@ <|@
      nr 1158  <|@ instruction rax|QWORD = MOVSXD r8|DWORD size: QWORD <|@ <|@
      nr 1160  <|@ instruction CMP (x: rdx|QWORD, y: [rax|QWORD + rsi|DWORD * 8]) size: QWORD <|@ <|@
      nr 1162  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B113 -> B122 falseDestination: B113 -> B115 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B113" 
    successors "B116" "B126" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4607384112386888277
    begin_IR
      LIR
      nr 1168  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1170  <|@ instruction stack:88|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1172  <|@ instruction CMP r8|DWORD y: 24 size: DWORD <|@ <|@
      nr 1174  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B115 -> B116 falseDestination: B115 -> B126 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B115" 
    successors "B122" "B118" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4607384112386888277
    begin_IR
      LIR
      nr 1176  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1178  <|@ instruction r8|QWORD = UNCOMPRESSPOINTER (input: rsi|DWORD, ~baseRegister: -) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@68a0169d encoding: base: 0 shift: 3 <|@ <|@
      nr 1180  <|@ instruction CMP (x: rdx|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr 1182  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B116 -> B122 falseDestination: B116 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B116" 
    successors "B119" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4602880512759517781
    begin_IR
      LIR
      nr 1188  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1190  <|@ instruction r8|QWORD = MOV [rsi|DWORD * 8 + 32] size: QWORD <|@ <|@
      nr 1192  <|@ instruction rax|DWORD = MOV [r8|QWORD] size: DWORD <|@ <|@
      nr 1194  <|@ instruction rbp|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1196  <|@ instruction JUMP ~[] destination: B118 -> B119 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B119" 
    successors "B121" "B123" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4604897066994192652
    begin_IR
      LIR
      nr 1204  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr 1206  <|@ instruction r14|DWORD = SHL rbp|DWORD y: 3 size: DWORD <|@ <|@
      nr 1208  <|@ instruction r14|DWORD = LEA [r14|DWORD + 8] size: DWORD <|@ <|@
      nr 1210  <|@ instruction r14|QWORD = MOVSXD r14|DWORD size: QWORD <|@ <|@
      nr 1212  <|@ instruction r14|QWORD = MOV [r8|QWORD + r14|QWORD * 1] size: QWORD <|@ <|@
      nr 1214  <|@ instruction CMP (x: rdx|QWORD, y: r14|QWORD) size: QWORD <|@ <|@
      nr 1216  <|@ instruction BRANCH trueDestinationProbability: 0.4 condition: = trueDestination: B120 -> B121 falseDestination: B120 -> B123 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B123"
    from_bci -1
    to_bci -1
    predecessors "B120" 
    successors "B119" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 2
    probability 4601737836856605403
    begin_IR
      LIR
      nr 1242  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1244  <|@ instruction rbp|DWORD = INC rbp|DWORD size: DWORD <|@ <|@
      nr 1246  <|@ instruction JUMP ~[] destination: B123 -> B119 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B118" "B123" 
    successors "B120" "B126" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 2
    probability 4604897066994192652
    begin_IR
      LIR
      nr 1198  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1200  <|@ instruction CMP (x: rax|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr 1202  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B119 -> B120 falseDestination: B119 -> B126 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B111" "B113" "B116" "B121" 
    successors "B69" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4611906383812727985
    begin_IR
      LIR
      nr 1224  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1226  <|@ instruction MOV (x: [r11|QWORD[.] + rdi|DWORD * 4 + 16], y: r13|DWORD[.]) size: DWORD <|@ <|@
      nr 1228  <|@ instruction rsi|QWORD[.] = LEA [r11|QWORD[.] + rdi|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr 1230  <|@ instruction rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr 1232  <|@ instruction MOVB (x: [rsi|QWORD[*] + rbx|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr 1234  <|@ st <@st|@reference-map: [r10:0, r11:0, stack:32, stack:40, stack:64]
live-base-pointers: []
java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 120]
locals: - stack:32|QWORD[.] - r11|QWORD[.] r10|QWORD[.] rdi|DWORD 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:120] <|@ <|@
      nr 1236  <|@ instruction rdi|DWORD = INC rdi|DWORD size: DWORD <|@ <|@
      nr 1238  <|@ instruction r8|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1240  <|@ instruction JUMP ~[] destination: B122 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" "B122" 
    successors "B70" "B130" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4614662322185081950
    begin_IR
      LIR
      nr  708  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  710  <|@ instruction CMP (x: r8|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  712  <|@ instruction BRANCH trueDestinationProbability: 0.6989533557102465 condition: > trueDestination: B69 -> B70 falseDestination: B69 -> B130 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B120" 
    successors "B122" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4599049097877038909
    begin_IR
      LIR
      nr 1218  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1220  <|@ instruction MOV (x: [rsi|DWORD * 8 + 24], y: rdx|QWORD) size: QWORD <|@ <|@
      nr 1222  <|@ instruction JUMP ~[] destination: B121 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B83" "B98" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4598378242651655054
    begin_IR
      LIR
      nr  826  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  828  <|@ instruction CMP r9|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/SubList$1;, resolved>;compressed} <|@ <|@
      nr  830  <|@ instruction BRANCH trueDestinationProbability: 0.916333823838554 condition: = trueDestination: B82 -> B83 falseDestination: B82 -> B98 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B84" "B97" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597793695504499049
    begin_IR
      LIR
      nr  832  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  834  <|@ instruction rax|DWORD[.] = MOV [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  836  <|@ st <@st|@reference-map: [rax:0, r10:0, r11:0, stack:32, stack:40, stack:64]
live-base-pointers: []
java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42]
locals: - stack:32|QWORD[.] - r11|QWORD[.] r10|QWORD[.] rdi|DWORD 
>@ <|@ instruction CMP [rax|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed} state [bci:42] <|@ <|@
      nr  838  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B83 -> B84 falseDestination: B83 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B85" "B96" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597793695504499049
    begin_IR
      LIR
      nr  840  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  842  <|@ instruction rsi|DWORD[.] = MOV [r10|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  844  <|@ st <@st|@reference-map: [rax:0, rsi:0, r10:0, r11:0, stack:32, stack:40, stack:64]
live-base-pointers: []
java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42]
locals: - stack:32|QWORD[.] - r11|QWORD[.] r10|QWORD[.] rdi|DWORD 
>@ <|@ instruction rbp|DWORD = MOV [rsi|DWORD[.] * 8 + 20] size: DWORD state [bci:42] <|@ <|@
      nr  846  <|@ instruction rsi|DWORD = MOV [rsi|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr  848  <|@ instruction r13|DWORD = MOV [rax|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  850  <|@ instruction r14|DWORD = SUB (x: r13|DWORD, ~y: rsi|DWORD) size: DWORD <|@ <|@
      nr  852  <|@ instruction CMP (x: rbp|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr  854  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B84 -> B85 falseDestination: B84 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B86" "B95" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597793695504499049
    begin_IR
      LIR
      nr  856  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  858  <|@ instruction rsi|DWORD[.] = MOV [rax|DWORD[.] * 8 + 24] size: DWORD <|@ <|@
      nr  860  <|@ st <@st|@reference-map: [rax:0, rsi:0, r10:0, r11:0, stack:32, stack:40, stack:64]
live-base-pointers: []
java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42]
locals: - stack:32|QWORD[.] - r11|QWORD[.] r10|QWORD[.] rdi|DWORD 
>@ <|@ instruction rbp|DWORD = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD state [bci:42] <|@ <|@
      nr  862  <|@ instruction CMP (x: rbp|DWORD, y: [rax|DWORD[.] * 8 + 20]) size: DWORD <|@ <|@
      nr  864  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B85 -> B86 falseDestination: B85 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B87" "B90" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597793695504499049
    begin_IR
      LIR
      nr  866  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  868  <|@ instruction rbp|DWORD = MOV [rsi|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr  870  <|@ instruction r14|DWORD = INC r13|DWORD size: DWORD <|@ <|@
      nr  872  <|@ instruction CMP rbp|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed} <|@ <|@
      nr  874  <|@ instruction BRANCH trueDestinationProbability: 0.9304948647614187 condition: = trueDestination: B86 -> B87 falseDestination: B86 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B88" "B89" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597194166782228429
    begin_IR
      LIR
      nr  876  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  878  <|@ instruction rsi|DWORD[.] = MOV [rsi|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr  880  <|@ st <@st|@reference-map: [rax:0, rsi:0, r10:0, r11:0, stack:32, stack:40, stack:64]
live-base-pointers: []
java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42]
locals: - stack:32|QWORD[.] - r11|QWORD[.] r10|QWORD[.] rdi|DWORD 
>@ <|@ instruction CMP (x: r13|DWORD, y: [rsi|DWORD[.] * 8 + 12]) size: DWORD state [bci:42] <|@ <|@
      nr  882  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B87 -> B88 falseDestination: B87 -> B89 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B111" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4597194166782228429
    begin_IR
      LIR
      nr  884  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  886  <|@ instruction MOV (x: [rax|DWORD[.] * 8 + 16], y: r13|DWORD) size: DWORD <|@ <|@
      nr  888  <|@ instruction MOV (x: [rax|DWORD[.] * 8 + 12], y: r14|DWORD) size: DWORD <|@ <|@
      nr  890  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@68a0169d encoding: base: 0 shift: 3 <|@ <|@
      nr  892  <|@ instruction rsi|DWORD[.] = MOV [rsi|QWORD[.] + r13|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  894  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@68a0169d encoding: base: 0 shift: 3 <|@ <|@
      nr  896  <|@ instruction r13|DWORD[.] = MOVE rsi|DWORD[.] moveKind: DWORD <|@ <|@
      nr  898  <|@ instruction r14|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  900  <|@ instruction JUMP ~[] destination: B88 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B99" "B129" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4581957783436701082
    begin_IR
      LIR
      nr 1020  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1022  <|@ instruction CMP r9|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap$KeyIterator;, resolved>;compressed} <|@ <|@
      nr 1024  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B98 -> B99 falseDestination: B98 -> B129 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B98" 
    successors "B100" "B128" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4581957783436701082
    begin_IR
      LIR
      nr 1026  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1028  <|@ instruction rsi|DWORD[.] = MOV [r10|QWORD[.] + 20] size: DWORD <|@ <|@
      nr 1030  <|@ st <@st|@reference-map: [rsi:0, r10:0, r11:0, stack:32, stack:40, stack:64]
live-base-pointers: []
java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42]
locals: - stack:32|QWORD[.] - r11|QWORD[.] r10|QWORD[.] rdi|DWORD 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + rsi|DWORD[.] * 8] state [bci:42] <|@ <|@
      nr 1032  <|@ instruction rax|DWORD[.] = MOV [r10|QWORD[.] + 28] size: DWORD <|@ <|@
      nr 1034  <|@ st <@st|@reference-map: [rax:0, rsi:0, r10:0, r11:0, stack:32, stack:40, stack:64]
live-base-pointers: []
java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42]
locals: - stack:32|QWORD[.] - r11|QWORD[.] r10|QWORD[.] rdi|DWORD 
>@ <|@ instruction rbp|DWORD = MOV [rax|DWORD[.] * 8 + 24] size: DWORD state [bci:42] <|@ <|@
      nr 1036  <|@ instruction CMP (x: rbp|DWORD, y: [r10|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr 1038  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B99 -> B100 falseDestination: B99 -> B128 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B101" "B111" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4581957783436701082
    begin_IR
      LIR
      nr 1040  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1042  <|@ instruction MOV (x: [r10|QWORD[.] + 24], y: rsi|DWORD[.]) size: DWORD <|@ <|@
      nr 1044  <|@ instruction rbp|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr 1046  <|@ instruction MOVB (x: [rbp|QWORD[*] + rbx|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr 1048  <|@ instruction rbp|DWORD[.] = MOV [rsi|DWORD[.] * 8 + 24] size: DWORD <|@ <|@
      nr 1050  <|@ instruction MOV (x: [r10|QWORD[.] + 20], y: rbp|DWORD[.]) size: DWORD <|@ <|@
      nr 1052  <|@ instruction r13|DWORD[.] = MOV [rsi|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr 1054  <|@ instruction r14|QWORD[.] = UNCOMPRESSPOINTER (input: r13|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@68a0169d encoding: base: 0 shift: 3 <|@ <|@
      nr 1056  <|@ instruction TEST (x: rbp|DWORD[.], y: rbp|DWORD[.]) size: DWORD <|@ <|@
      nr 1058  <|@ instruction BRANCH trueDestinationProbability: 0.862846997817839 condition: = trueDestination: B100 -> B101 falseDestination: B100 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B102" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4581093642439087946
    begin_IR
      LIR
      nr 1060  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1062  <|@ instruction stack:68|DWORD[.] = MOVE rsi|DWORD[.] moveKind: DWORD <|@ <|@
      nr 1064  <|@ instruction rax|DWORD[.] = MOV [rax|DWORD[.] * 8 + 36] size: DWORD <|@ <|@
      nr 1066  <|@ st <@st|@reference-map: [rax:0, r10:0, r11:0, r13:0, r14:0, stack:28, stack:32, stack:40, stack:64]
live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1445) [bci: 53]
stack: Object[null] 
locals: r10|QWORD[.] - stack:68|DWORD[.] 
java.util.HashMap$KeyIterator.next(HashMap.java:1466) [bci: 1]
locals: - 
java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stack: r11|QWORD[.] rdi|DWORD 
locals: - stack:32|QWORD[.] - r11|QWORD[.] r10|QWORD[.] rdi|DWORD 
>@ <|@ instruction rbp|DWORD = MOV [rax|DWORD[.] * 8 + 12] size: DWORD state [bci:53, 1, 114] <|@ <|@
      nr 1068  <|@ instruction rsi|DWORD = MOV [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr 1070  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@68a0169d encoding: base: 0 shift: 3 <|@ <|@
      nr 1072  <|@ instruction JUMP ~[] destination: B101 -> B102 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B102" 
    successors "B104" "B107" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4588774090470730591
    begin_IR
      LIR
      nr 1080  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr 1082  <|@ instruction CMP (x: rbp|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr 1084  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B103 -> B104 falseDestination: B103 -> B107 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B105" "B111" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4588774090470730591
    begin_IR
      LIR
      nr 1086  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1088  <|@ instruction rdx|DWORD = INC rsi|DWORD size: DWORD <|@ <|@
      nr 1090  <|@ instruction MOV (x: [r10|QWORD[.] + 16], y: rdx|DWORD) size: DWORD <|@ <|@
      nr 1092  <|@ instruction rsi|DWORD[.] = MOV [rax|QWORD[.] + rsi|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 1094  <|@ instruction MOV (x: [r10|QWORD[.] + 20], y: rsi|DWORD[.]) size: DWORD <|@ <|@
      nr 1096  <|@ instruction r8|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr 1098  <|@ instruction MOVB (x: [r8|QWORD[*] + rbx|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr 1100  <|@ instruction TEST (x: rsi|DWORD[.], y: rsi|DWORD[.]) size: DWORD <|@ <|@
      nr 1102  <|@ instruction BRANCH trueDestinationProbability: 0.7114614377628611 condition: = trueDestination: B104 -> B105 falseDestination: B104 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B102" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 2
    probability 4586288830091813018
    begin_IR
      LIR
      nr 1104  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1106  <|@ st <@st|@reference-map: [rax:0, r10:0, r11:0, r13:0, r14:0, stack:28, stack:32, stack:40, stack:64]
live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1446) [bci: 95]
stack: Object[null] 
locals: r10|QWORD[.] rax|QWORD[.] stack:68|DWORD[.] 
java.util.HashMap$KeyIterator.next(HashMap.java:1466) [bci: 1]
locals: - 
java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stack: r11|QWORD[.] rdi|DWORD 
locals: - stack:32|QWORD[.] - r11|QWORD[.] r10|QWORD[.] rdi|DWORD 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:95, 1, 114] <|@ <|@
      nr 1108  <|@ instruction rsi|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr 1110  <|@ instruction JUMP ~[] destination: B105 -> B102 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B101" "B105" 
    successors "B103" "B111" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 2
    probability 4589007040607145023
    begin_IR
      LIR
      nr 1074  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1076  <|@ instruction CMP (x: rbp|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr 1078  <|@ instruction BRANCH trueDestinationProbability: 0.973666701969634 condition: > trueDestination: B102 -> B103 falseDestination: B102 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B86" 
    successors "B91" "B94" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4580453451186588897
    begin_IR
      LIR
      nr  910  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  912  <|@ instruction CMP rbp|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeInputList;, resolved>;compressed} <|@ <|@
      nr  914  <|@ instruction BRANCH trueDestinationProbability: 0.9931451844203528 condition: = trueDestination: B90 -> B91 falseDestination: B90 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B92" "B93" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4580420573915981964
    begin_IR
      LIR
      nr  916  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  918  <|@ instruction rsi|DWORD[.] = MOV [rsi|DWORD[.] * 8 + 28] size: DWORD <|@ <|@
      nr  920  <|@ st <@st|@reference-map: [rax:0, rsi:0, r10:0, r11:0, stack:32, stack:40, stack:64]
live-base-pointers: []
java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42]
locals: - stack:32|QWORD[.] - r11|QWORD[.] r10|QWORD[.] rdi|DWORD 
>@ <|@ instruction CMP (x: r13|DWORD, y: [rsi|DWORD[.] * 8 + 12]) size: DWORD state [bci:42] <|@ <|@
      nr  922  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B91 -> B92 falseDestination: B91 -> B93 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B111" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4580420573915981964
    begin_IR
      LIR
      nr  924  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  926  <|@ instruction MOV (x: [rax|DWORD[.] * 8 + 16], y: r13|DWORD) size: DWORD <|@ <|@
      nr  928  <|@ instruction MOV (x: [rax|DWORD[.] * 8 + 12], y: r14|DWORD) size: DWORD <|@ <|@
      nr  930  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@68a0169d encoding: base: 0 shift: 3 <|@ <|@
      nr  932  <|@ instruction rsi|DWORD[.] = MOV [rsi|QWORD[.] + r13|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  934  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@68a0169d encoding: base: 0 shift: 3 <|@ <|@
      nr  936  <|@ instruction r13|DWORD[.] = MOVE rsi|DWORD[.] moveKind: DWORD <|@ <|@
      nr  938  <|@ instruction r14|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  940  <|@ instruction JUMP ~[] destination: B92 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B111" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4548045005664834791
    begin_IR
      LIR
      nr  950  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  952  <|@ instruction stack:68|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  954  <|@ instruction stack:72|DWORD[.] = MOVE rax|DWORD[.] moveKind: DWORD <|@ <|@
      nr  956  <|@ instruction stack:76|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  958  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@68a0169d encoding: base: 0 shift: 3 <|@ <|@
      nr  960  <|@ instruction rdx|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr  962  <|@ instruction stack:80|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr  964  <|@ st <@st|@reference-map: [stack:24, stack:32, stack:40, stack:64]
live-base-pointers: []
java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14]
locals: stack:72|DWORD[.] stack:80|DWORD - 
java.util.SubList$1.next(AbstractList.java:707) [bci: 11]
locals: - 
java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stack: stack:64|QWORD[.] stack:76|DWORD 
locals: - stack:32|QWORD[.] - stack:64|QWORD[.] stack:56|QWORD[.] stack:76|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractList.get(int)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:14, 11, 114] <|@ <|@
      nr  966  <|@ instruction rsi|DWORD[.] = MOVE stack:72|DWORD[.] moveKind: DWORD <|@ <|@
      nr  968  <|@ instruction r13|DWORD = MOVE stack:80|DWORD moveKind: DWORD <|@ <|@
      nr  970  <|@ instruction MOV (x: [rsi|DWORD[.] * 8 + 16], y: r13|DWORD) size: DWORD <|@ <|@
      nr  972  <|@ instruction r14|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr  974  <|@ instruction MOV (x: [rsi|DWORD[.] * 8 + 12], y: r14|DWORD) size: DWORD <|@ <|@
      nr  976  <|@ instruction rsi|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@68a0169d encoding: base: 0 shift: 3 <|@ <|@
      nr  978  <|@ instruction r13|DWORD[.] = MOVE rsi|DWORD[.] moveKind: DWORD <|@ <|@
      nr  980  <|@ instruction r14|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  982  <|@ instruction rdi|DWORD = MOVE stack:76|DWORD moveKind: DWORD <|@ <|@
      nr  984  <|@ instruction rbx|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr  986  <|@ instruction rcx|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  988  <|@ instruction r9|DWORD = MOVE stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  990  <|@ instruction r11|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  992  <|@ instruction r10|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  994  <|@ instruction JUMP ~[] destination: B94 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B130"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B131" "B134" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1290  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1292  <|@ instruction stack:76|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr 1294  <|@ instruction CMP stack:40|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList$SubList$1;, resolved>;compressed} <|@ <|@
      nr 1300  <|@ instruction r10|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1296  <|@ instruction BRANCH trueDestinationProbability: 0.9361509309606195 condition: = trueDestination: B130 -> B131 falseDestination: B130 -> B134 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B131"
    from_bci -1
    to_bci -1
    predecessors "B130" 
    successors "B132" "B133" 
    xhandlers
    flags 
    probability 4606607317512949994
    begin_IR
      LIR
      nr 1298  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1302  <|@ instruction rax|DWORD[.] = MOV [r10|QWORD[.] + 32] size: DWORD <|@ <|@
      nr 1304  <|@ st <@st|@reference-map: [r10:0, stack:32, stack:64]
live-base-pointers: []
java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42]
locals: - stack:32|QWORD[.] - stack:64|QWORD[.] r10|QWORD[.] stack:76|DWORD 
>@ <|@ instruction rax|DWORD = MOV [rax|DWORD[.] * 8 + 24] size: DWORD state [bci:42] <|@ <|@
      nr 1306  <|@ instruction CMP (x: rax|DWORD, y: [r10|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr 1308  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B131 -> B132 falseDestination: B131 -> B133 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B132"
    from_bci -1
    to_bci -1
    predecessors "B131" 
    successors 
    xhandlers
    flags 
    probability 4606607317512949994
    begin_IR
      LIR
      nr 1310  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1312  <|@ instruction rax|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1314  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B134"
    from_bci -1
    to_bci -1
    predecessors "B130" 
    successors "B135" "B140" 
    xhandlers
    flags 
    probability 4589265230959704240
    begin_IR
      LIR
      nr 1326  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1330  <|@ instruction CMP stack:40|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/SubList$1;, resolved>;compressed} <|@ <|@
      nr 1332  <|@ instruction BRANCH trueDestinationProbability: 0.8662365591397847 condition: = trueDestination: B134 -> B135 falseDestination: B134 -> B140 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B135"
    from_bci -1
    to_bci -1
    predecessors "B134" 
    successors "B136" "B139" 
    xhandlers
    flags 
    probability 4588131601196852644
    begin_IR
      LIR
      nr 1334  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1336  <|@ instruction rax|DWORD[.] = MOV [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr 1338  <|@ st <@st|@reference-map: [rax:0, r10:0, stack:32, stack:64]
live-base-pointers: []
java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42]
locals: - stack:32|QWORD[.] - stack:64|QWORD[.] r10|QWORD[.] stack:76|DWORD 
>@ <|@ instruction CMP [rax|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed} state [bci:42] <|@ <|@
      nr 1340  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B135 -> B136 falseDestination: B135 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B136"
    from_bci -1
    to_bci -1
    predecessors "B135" 
    successors "B137" "B138" 
    xhandlers
    flags 
    probability 4588131601196852644
    begin_IR
      LIR
      nr 1342  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1344  <|@ instruction rsi|DWORD[.] = MOV [r10|QWORD[.] + 20] size: DWORD <|@ <|@
      nr 1346  <|@ st <@st|@reference-map: [rax:0, rsi:0, r10:0, stack:32, stack:64]
live-base-pointers: []
java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42]
locals: - stack:32|QWORD[.] - stack:64|QWORD[.] r10|QWORD[.] stack:76|DWORD 
>@ <|@ instruction rdx|DWORD = MOV [rsi|DWORD[.] * 8 + 20] size: DWORD state [bci:42] <|@ <|@
      nr 1348  <|@ instruction rsi|DWORD = MOV [rsi|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr 1350  <|@ instruction rax|DWORD = MOV [rax|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr 1352  <|@ instruction rax|DWORD = SUB (x: rax|DWORD, ~y: rsi|DWORD) size: DWORD <|@ <|@
      nr 1354  <|@ instruction CMP (x: rdx|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr 1356  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B136 -> B137 falseDestination: B136 -> B138 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B138"
    from_bci -1
    to_bci -1
    predecessors "B136" 
    successors 
    xhandlers
    flags 
    probability 4588131601196852644
    begin_IR
      LIR
      nr 1368  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1370  <|@ instruction rax|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1372  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" "B8" 
    xhandlers
    flags 
    probability 4589261525764508072
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   44  <|@ instruction CMP r14|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/RandomAccessSubList;, resolved>;compressed} <|@ <|@
      nr   46  <|@ instruction BRANCH trueDestinationProbability: 0.8661213947481707 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4588124123200152941
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   50  <|@ instruction rsi|DWORD[.] = MOV [r13|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   52  <|@ st <@st|@reference-map: [r13:0, stack:64]
live-base-pointers: []
java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 0]
locals: r13|QWORD[.] stack:32|QWORD[.] - - - - 
>@ <|@ instruction rsi|DWORD = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   54  <|@ instruction CMP (x: rsi|DWORD, y: [r13|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   56  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B10" 
    xhandlers
    flags 
    probability 4588124123200152941
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   60  <|@ instruction r10|DWORD = MOV [r13|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   62  <|@ instruction rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr   64  <|@ instruction JUMP ~[] destination: B6 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B22" "B24" 
    successors "B37" "B63" 
    xhandlers
    flags 
    probability 4589261525764508073
    begin_IR
      LIR
      nr  356  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  358  <|@ instruction CMP r14|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/RandomAccessSubList;, resolved>;compressed} <|@ <|@
      nr  360  <|@ instruction BRANCH trueDestinationProbability: 0.8661213947481707 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" "B61" 
    xhandlers
    flags 
    probability 4588124123200152943
    begin_IR
      LIR
      nr  362  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  364  <|@ instruction r14|DWORD[.] = MOV [r13|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  366  <|@ st <@st|@reference-map: [rdx:0, r13:0, r14:0, stack:64]
live-base-pointers: []
java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 32]
stack: rdx|QWORD[.] 
locals: r13|QWORD[.] stack:32|QWORD[.] - - - - 
>@ <|@ instruction r10|DWORD = MOV [r14|DWORD[.] * 8 + 12] size: DWORD state [bci:32] <|@ <|@
      nr  368  <|@ instruction CMP (x: r10|DWORD, y: [r13|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr  370  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4588124123200152943
    begin_IR
      LIR
      nr  372  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  374  <|@ instruction CMP [r13|QWORD[.] + 20] y: 0 size: DWORD <|@ <|@
      nr  376  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B38 -> B39 falseDestination: B38 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4588124123200152943
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  390  <|@ instruction r11|DWORD = MOV [r13|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  392  <|@ instruction TEST (x: r11|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  394  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B40 -> B41 falseDestination: B40 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B60" 
    xhandlers
    flags 
    probability 4588124123200152943
    begin_IR
      LIR
      nr  406  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  408  <|@ instruction rsi|DWORD = MOV [r14|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr  410  <|@ instruction rcx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotMethod<AbstractList.listIterator(int)>} <|@ <|@
      nr  412  <|@ instruction CMP (x: rcx|QWORD, y: [rsi|DWORD * 8 + 696]) size: QWORD <|@ <|@
      nr  414  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B44" "B47" 
    xhandlers
    flags 
    probability 4588124123200152943
    begin_IR
      LIR
      nr  416  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  418  <|@ instruction CMP rsi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed} <|@ <|@
      nr  420  <|@ instruction BRANCH trueDestinationProbability: 0.5044648172401477 condition: = trueDestination: B43 -> B44 falseDestination: B43 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4583691632950366314
    begin_IR
      LIR
      nr  422  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  424  <|@ instruction rsi|DWORD[.] = MOV [r14|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr  426  <|@ st <@st|@reference-map: [rdx:0, r13:0, r14:0, stack:64]
live-base-pointers: []
java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 32]
stack: rdx|QWORD[.] 
locals: r13|QWORD[.] stack:32|QWORD[.] - - - - 
>@ <|@ instruction rsi|DWORD = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD state [bci:32] <|@ <|@
      nr  428  <|@ instruction CMP (x: r11|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr  430  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B44 -> B45 falseDestination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B55" 
    xhandlers
    flags 
    probability 4583691632950366314
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  444  <|@ instruction stack:36|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr  446  <|@ instruction JUMP ~[] destination: B46 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" "B46" "B49" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4588124123200152944
    begin_IR
      LIR
      nr  506  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  508  <|@ instruction rcx|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  510  <|@ instruction r8|QWORD = LEA [rcx|QWORD + 56] size: QWORD <|@ <|@
      nr  512  <|@ instruction CMP (x: r8|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr  514  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B55 -> B56 falseDestination: B55 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" 
    xhandlers
    flags 
    probability 4588044490178509359
    begin_IR
      LIR
      nr  544  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  546  <|@ instruction MOV (x: [r15|QWORD + 96], y: r8|QWORD) size: QWORD <|@ <|@
      nr  548  <|@ instruction AMD64PREFETCH ~[rcx|QWORD + 248] instr: 0 <|@ <|@
      nr  550  <|@ instruction rsi|QWORD[*] = MOVE rcx|QWORD moveKind: QWORD <|@ <|@
      nr  552  <|@ instruction JUMP ~[] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" "B56" 
    successors "B64" 
    xhandlers
    flags 
    probability 4588124123200152944
    begin_IR
      LIR
      nr  554  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  556  <|@ instruction rcx|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  558  <|@ instruction r8|QWORD[*] = LEA [rsi|QWORD[*] + 24] size: QWORD <|@ <|@
      nr  560  <|@ instruction r8|QWORD[.] = MOVE r8|QWORD[*] moveKind: QWORD <|@ <|@
      nr  562  <|@ instruction r9|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/SubList$1;, resolved>} <|@ <|@
      nr  564  <|@ instruction r9|QWORD = MOV [r9|QWORD + 168] size: QWORD <|@ <|@
      nr  566  <|@ instruction MOV (x: [rsi|QWORD[*]], y: r9|QWORD) size: QWORD <|@ <|@
      nr  568  <|@ instruction MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/SubList$1;, resolved>;compressed} <|@ <|@
      nr  570  <|@ instruction MOV (x: [rsi|QWORD[*] + 12], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr  572  <|@ instruction r8|DWORD[.] = COMPRESSPOINTER (input: r8|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@68a0169d encoding: base: 0 shift: 3 <|@ <|@
      nr  574  <|@ instruction MOV (x: [rsi|QWORD[*] + 16], y: r8|DWORD[.]) size: DWORD <|@ <|@
      nr  576  <|@ instruction r13|DWORD[.] = COMPRESSPOINTER (input: r13|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@68a0169d encoding: base: 0 shift: 3 <|@ <|@
      nr  578  <|@ instruction MOV (x: [rsi|QWORD[*] + 20], y: r13|DWORD[.]) size: DWORD <|@ <|@
      nr  580  <|@ instruction r8|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>} <|@ <|@
      nr  582  <|@ instruction r8|QWORD = MOV [r8|QWORD + 168] size: QWORD <|@ <|@
      nr  584  <|@ instruction MOV (x: [rsi|QWORD[*] + 24], y: r8|QWORD) size: QWORD <|@ <|@
      nr  586  <|@ instruction MOV [rsi|QWORD[*] + 32] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed} <|@ <|@
      nr  588  <|@ instruction MOV (x: [rsi|QWORD[*] + 36], y: r11|DWORD) size: DWORD <|@ <|@
      nr  590  <|@ instruction MOV [rsi|QWORD[*] + 40] y: -1 size: DWORD <|@ <|@
      nr  592  <|@ instruction MOV (x: [rsi|QWORD[*] + 44], y: r10|DWORD) size: DWORD <|@ <|@
      nr  594  <|@ instruction MOV (x: [rsi|QWORD[*] + 48], y: r14|DWORD[.]) size: DWORD <|@ <|@
      nr  596  <|@ instruction MOV (x: [rsi|QWORD[*] + 52], y: r14|DWORD[.]) size: DWORD <|@ <|@
      nr  598  <|@ instruction r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  600  <|@ instruction r10|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  602  <|@ instruction rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  604  <|@ instruction JUMP ~[] destination: B58 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B48" "B51" 
    xhandlers
    flags 
    probability 4583549414195198580
    begin_IR
      LIR
      nr  448  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  450  <|@ instruction CMP rsi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Collections$EmptyList;, resolved>;compressed} <|@ <|@
      nr  452  <|@ instruction BRANCH trueDestinationProbability: 0.525228255646324 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B49" "B50" 
    xhandlers
    flags 
    probability 4579444027082297734
    begin_IR
      LIR
      nr  454  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  456  <|@ instruction CMP r11|DWORD y: 1 size: DWORD <|@ <|@
      nr  458  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B48 -> B49 falseDestination: B48 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B55" 
    xhandlers
    flags 
    probability 4579444027082297734
    begin_IR
      LIR
      nr  460  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  462  <|@ instruction stack:36|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  464  <|@ instruction JUMP ~[] destination: B49 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B52" "B59" 
    xhandlers
    flags 
    probability 4578647602053358434
    begin_IR
      LIR
      nr  476  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  478  <|@ instruction CMP rsi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeInputList;, resolved>;compressed} <|@ <|@
      nr  480  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B53" "B54" 
    xhandlers
    flags 
    probability 4578647602053358434
    begin_IR
      LIR
      nr  482  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  484  <|@ instruction rsi|DWORD = MOV [r14|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr  486  <|@ instruction CMP (x: r11|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr  488  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B52 -> B53 falseDestination: B52 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    probability 4578647602053358434
    begin_IR
      LIR
      nr  500  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  502  <|@ instruction stack:36|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr  504  <|@ instruction JUMP ~[] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4576550460895980228
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  276  <|@ instruction stack:36|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  278  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  280  <|@ instruction rdx|DWORD = MOVE input: int[6|0x6] <|@ <|@
      nr  282  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  284  <|@ st <@st|@reference-map: [r13:0, r14:0, stack:64]
live-base-pointers: []
java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 32]
stack: r14|QWORD[.] 
locals: r13|QWORD[.] stack:32|QWORD[.] - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:32] <|@ <|@
      nr  286  <|@ instruction rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  288  <|@ instruction r10|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  290  <|@ instruction rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  292  <|@ instruction JUMP ~[] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B64" 
    xhandlers
    flags 
    probability 4576077253934364556
    begin_IR
      LIR
      nr  644  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  646  <|@ instruction stack:56|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  648  <|@ instruction rsi|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  650  <|@ st <@st|@reference-map: [stack:40, stack:64]
live-base-pointers: []
java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
locals: - stack:32|QWORD[.] - stack:56|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<AbstractCollection.iterator()> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:34] <|@ <|@
      nr  652  <|@ instruction r11|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  654  <|@ instruction r10|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  656  <|@ instruction rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  658  <|@ instruction JUMP ~[] destination: B63 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B9" "B147" 
    xhandlers
    flags 
    probability 4576077253934364555
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   74  <|@ instruction CMP r14|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashSet;, resolved>;compressed} <|@ <|@
      nr   76  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B147 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" 
    xhandlers
    flags 
    probability 4576077253934364555
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   80  <|@ instruction rax|DWORD[.] = MOV [r13|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   82  <|@ st <@st|@reference-map: [r13:0, stack:64]
live-base-pointers: []
java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 0]
locals: r13|QWORD[.] stack:32|QWORD[.] - - - - 
>@ <|@ instruction r10|DWORD = MOV [rax|DWORD[.] * 8 + 20] size: DWORD state [bci:0] <|@ <|@
      nr   84  <|@ instruction rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr   86  <|@ instruction JUMP ~[] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B140"
    from_bci -1
    to_bci -1
    predecessors "B134" 
    successors "B141" "B144" 
    xhandlers
    flags 
    probability 4576076983509135087
    begin_IR
      LIR
      nr 1384  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1388  <|@ instruction CMP r9|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap$KeyIterator;, resolved>;compressed} <|@ <|@
      nr 1390  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B140 -> B141 falseDestination: B140 -> B144 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B141"
    from_bci -1
    to_bci -1
    predecessors "B140" 
    successors "B142" "B143" 
    xhandlers
    flags 
    probability 4576076983509135087
    begin_IR
      LIR
      nr 1392  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1394  <|@ instruction rax|DWORD[.] = MOV [r10|QWORD[.] + 20] size: DWORD <|@ <|@
      nr 1396  <|@ instruction TEST (x: rax|DWORD[.], y: rax|DWORD[.]) size: DWORD <|@ <|@
      nr 1398  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B141 -> B142 falseDestination: B141 -> B143 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B142"
    from_bci -1
    to_bci -1
    predecessors "B141" 
    successors 
    xhandlers
    flags 
    probability 4576076983509135087
    begin_IR
      LIR
      nr 1400  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1402  <|@ instruction rax|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1404  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" 
    xhandlers
    flags 
    probability 4558235736656760908
    begin_IR
      LIR
      nr  516  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  518  <|@ instruction stack:40|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  520  <|@ instruction stack:44|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  522  <|@ instruction stack:56|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  524  <|@ instruction rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  526  <|@ instruction rsi|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  528  <|@ instruction rdx|DWORD = MOVE input: int[10|0xa] <|@ <|@
      nr  530  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  532  <|@ st <@st|@reference-map: [r13:0, r14:0, stack:40, stack:64]
live-base-pointers: []
java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 9]
stack: stack:40|DWORD stack:36|DWORD 
locals: r14|DWORD[.] stack:40|DWORD 
java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
locals: r14|DWORD[.] stack:40|DWORD 
java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
stack: vobject:SubList$1:0{val$index=int[0|0x0],i=Object[null],this$0=r13|QWORD[.]} 
locals: - - - 
java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
stack: vobject:SubList$1:0{val$index=int[0|0x0],i=Object[null],this$0=r13|QWORD[.]} 
locals: - - 
java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
locals: r13|QWORD[.] 
java.util.SubList.iterator(AbstractList.java:691) [bci: 1]
locals: r13|QWORD[.] 
java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34]
locals: - stack:32|QWORD[.] - stack:56|QWORD[.] - - 
vobject:SubList$1:0{val$index=int[0|0x0],i=Object[null],this$0=r13|QWORD[.]} Ljava/util/SubList$1; int[0|0x0] Object[null] r13|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:9, 2, 34, 15, 2, 1, 34] <|@ <|@
      nr  534  <|@ instruction rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  536  <|@ instruction r11|DWORD = MOVE stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  538  <|@ instruction r10|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  540  <|@ instruction rdx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  542  <|@ instruction JUMP ~[] destination: B56 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4553701740329279932
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   96  <|@ instruction rsi|DWORD = MOV [rdx|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   98  <|@ instruction rcx|QWORD[.] = MOV [rsi|DWORD * 8 + 224] size: QWORD <|@ <|@
      nr  100  <|@ instruction r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:void] <|@ <|@
      nr  102  <|@ instruction CMP (x: r11|QWORD[.], y: rcx|QWORD[.]) size: QWORD <|@ <|@
      nr  104  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4553701740329279932
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  116  <|@ instruction rcx|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  118  <|@ instruction r11|DWORD = SHL r10|DWORD y: 2 size: DWORD <|@ <|@
      nr  120  <|@ instruction r11|DWORD = LEA [r11|DWORD + 23] size: DWORD <|@ <|@
      nr  122  <|@ instruction r11|DWORD = AND r11|DWORD y: -8 size: DWORD <|@ <|@
      nr  124  <|@ instruction r11|QWORD = MOVSXD r11|DWORD size: QWORD <|@ <|@
      nr  126  <|@ instruction r8|QWORD = ADD (x: r11|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  128  <|@ instruction CMP (x: r8|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr  130  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4553651079162429142
    begin_IR
      LIR
      nr  152  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  154  <|@ instruction MOV (x: [r15|QWORD + 96], y: r8|QWORD) size: QWORD <|@ <|@
      nr  156  <|@ instruction AMD64PREFETCH ~[r11|QWORD + rcx|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr  158  <|@ instruction AMD64PREFETCH ~[r11|QWORD + rcx|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  160  <|@ instruction AMD64PREFETCH ~[r11|QWORD + rcx|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  162  <|@ instruction AMD64PREFETCH ~[r11|QWORD + rcx|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  164  <|@ instruction MOV (x: [rcx|QWORD + 12], y: r10|DWORD) size: DWORD <|@ <|@
      nr  166  <|@ instruction MOV [rcx|QWORD] y: 1 size: QWORD <|@ <|@
      nr  168  <|@ instruction MOV (x: [rcx|QWORD + 8], y: rsi|DWORD) size: DWORD <|@ <|@
      nr  170  <|@ instruction rsi|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  172  <|@ instruction JUMP ~[] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B16" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4553651079162429142
    begin_IR
      LIR
      nr  180  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  182  <|@ instruction MOV (x: [rcx|QWORD + rsi|QWORD * 1], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  184  <|@ instruction rsi|QWORD = LEA [rsi|QWORD + 8] size: QWORD <|@ <|@
      nr  186  <|@ instruction JUMP ~[] destination: B17 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B17" 
    successors "B17" "B18" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4558154678789799638
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  176  <|@ instruction CMP (x: r11|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  178  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B16 -> B17 falseDestination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4553651079162429142
    begin_IR
      LIR
      nr  188  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  190  <|@ instruction rcx|QWORD[.] = MOVE rcx|QWORD moveKind: QWORD <|@ <|@
      nr  192  <|@ instruction rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  194  <|@ instruction JUMP ~[] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B14" 
    successors "B20" "B23" 
    xhandlers
    flags 
    probability 4553701740329279932
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  198  <|@ instruction CMP [rsi|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Class;, resolved>;compressed} <|@ <|@
      nr  200  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4553701740329279932
    begin_IR
      LIR
      nr  202  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  204  <|@ instruction CMP r14|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList$SubList;, resolved>;compressed} <|@ <|@
      nr  206  <|@ instruction BRANCH trueDestinationProbability: 0.9362023508733385 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B26" 
    xhandlers
    flags 
    probability 4553378533994570538
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  210  <|@ instruction r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  212  <|@ instruction JUMP ~[] destination: B21 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B36" 
    xhandlers
    flags 
    probability 4535792526490069278
    begin_IR
      LIR
      nr  214  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  216  <|@ instruction rdx|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  218  <|@ instruction JUMP ~[] destination: B22 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B19" 
    xhandlers
    flags 
    probability 4523595055609508578
    begin_IR
      LIR
      nr  132  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  134  <|@ instruction rsi|QWORD = UNCOMPRESSPOINTER (input: rsi|DWORD, ~baseRegister: -) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@68a0169d encoding: base: 0 shift: 3 <|@ <|@
      nr  136  <|@ instruction rdx|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  138  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  140  <|@ instruction stack:36|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  142  <|@ st <@st|@reference-map: [r13:0, stack:64]
live-base-pointers: []
java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 4]
stack: stack:36|DWORD 
locals: r13|QWORD[.] stack:32|QWORD[.] - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:4] <|@ <|@
      nr  144  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  146  <|@ instruction r10|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  148  <|@ instruction rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  150  <|@ instruction JUMP ~[] destination: B14 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  396  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  398  <|@ instruction r10|DWORD = MOVE input: int[-330259|0xfffffffffffaf5ed] <|@ <|@
      nr  404  <|@ instruction JUMP ~[] destination: B41 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B39" "B61" "B41" "B60" "B45" "B53" "B50" "B59" 
    successors 
    xhandlers
    flags 
    probability 2368893403996880896
    begin_IR
      LIR
      nr  636  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  382  <|@ instruction r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  384  <|@ instruction rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  638  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  640  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  642  <|@ st <@st|@reference-map: [rdx:0, r11:0, r13:0]
live-base-pointers: []
java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 32]
stack: r11|QWORD[.] 
locals: r13|QWORD[.] rdx|QWORD[.] - - - - 
>@ <|@ instruction DEOPT info [bci:32] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B126"
    from_bci -1
    to_bci -1
    predecessors "B115" "B119" 
    successors "B127" 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1260  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1256  <|@ instruction stack:76|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr 1262  <|@ instruction r14|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1264  <|@ instruction JUMP ~[] destination: B126 -> B127 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B127"
    from_bci -1
    to_bci -1
    predecessors "B126" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1266  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1268  <|@ instruction MOV [r15|QWORD + 668] y: -309803 size: DWORD <|@ <|@
      nr 1270  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1272  <|@ st <@st|@reference-map: [r10:0, r14:0, stack:32, stack:64]
live-base-pointers: []
java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119]
stack: stack:64|QWORD[.] stack:76|DWORD r14|QWORD[.] 
locals: - stack:32|QWORD[.] - stack:64|QWORD[.] r10|QWORD[.] stack:76|DWORD 
>@ <|@ instruction DEOPT info [bci:119] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B143"
    from_bci -1
    to_bci -1
    predecessors "B141" 
    successors "B145" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1406  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1408  <|@ instruction r11|DWORD = MOVE input: int[-318739|0xfffffffffffb22ed] <|@ <|@
      nr 1410  <|@ instruction rdi|DWORD = MOVE stack:76|DWORD moveKind: DWORD <|@ <|@
      nr 1412  <|@ instruction r8|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1414  <|@ instruction JUMP ~[] destination: B143 -> B145 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B145"
    from_bci -1
    to_bci -1
    predecessors "B72" "B81" "B80" "B79" "B78" "B97" "B96" "B95" "B89" "B93" "B129" "B128" "B133" "B144" "B143" "B139" "B137" 
    successors 
    xhandlers
    flags 
    probability 2373678478600962048
    begin_IR
      LIR
      nr 1426  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1428  <|@ instruction MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD <|@ <|@
      nr 1430  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1432  <|@ st <@st|@reference-map: [r8:0, r10:0, stack:64]
live-base-pointers: []
java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42]
locals: - stack:32|QWORD[.] - r8|QWORD[.] r10|QWORD[.] rdi|DWORD 
>@ <|@ instruction DEOPT info [bci:42] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B144"
    from_bci -1
    to_bci -1
    predecessors "B140" 
    successors "B145" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1416  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1418  <|@ instruction r11|DWORD = MOVE input: int[-317747|0xfffffffffffb26cd] <|@ <|@
      nr 1420  <|@ instruction rdi|DWORD = MOVE stack:76|DWORD moveKind: DWORD <|@ <|@
      nr 1422  <|@ instruction r8|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1424  <|@ instruction JUMP ~[] destination: B144 -> B145 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  222  <|@ instruction stack:36|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  224  <|@ instruction MOV [r15|QWORD + 668] y: -320051 size: DWORD <|@ <|@
      nr  226  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  228  <|@ st <@st|@reference-map: [r13:0, stack:64]
live-base-pointers: []
java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 4]
stack: stack:36|DWORD 
locals: r13|QWORD[.] stack:32|QWORD[.] - - - - 
>@ <|@ instruction DEOPT info [bci:4] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B146"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1434  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1436  <|@ instruction r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1368693834] <|@ <|@
      nr 1438  <|@ instruction MOV [r15|QWORD + 668] y: -305947 size: DWORD <|@ <|@
      nr 1440  <|@ instruction MOV (x: [r15|QWORD + 680], y: r11|QWORD[.]) size: QWORD <|@ <|@
      nr 1442  <|@ st <@st|@reference-map: [r10:0, stack:32, stack:64]
live-base-pointers: []
java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 37]
stack: r10|QWORD[.] 
locals: - stack:32|QWORD[.] - stack:64|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:37] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  106  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  108  <|@ instruction MOV [r15|QWORD + 668] y: -579169 size: DWORD <|@ <|@
      nr  110  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  112  <|@ st <@st|@reference-map: [r13:0, stack:64]
live-base-pointers: []
java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 4]
stack: r10|DWORD 
locals: r13|QWORD[.] stack:32|QWORD[.] - - - - 
>@ <|@ instruction DEOPT info [bci:4] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  432  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  434  <|@ instruction r10|DWORD = MOVE input: int[-332563|0xfffffffffffaeced] <|@ <|@
      nr  440  <|@ instruction JUMP ~[] destination: B45 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B145" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  794  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  796  <|@ instruction r8|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  798  <|@ instruction r11|DWORD = MOVE input: int[-270619|0xfffffffffffbdee5] <|@ <|@
      nr  800  <|@ instruction JUMP ~[] destination: B78 -> B145 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  378  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  380  <|@ instruction r10|DWORD = MOVE input: int[-328211|0xfffffffffffafded] <|@ <|@
      nr  386  <|@ instruction JUMP ~[] destination: B39 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  616  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  618  <|@ instruction r10|DWORD = MOVE input: int[-330035|0xfffffffffffaf6cd] <|@ <|@
      nr  624  <|@ instruction JUMP ~[] destination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  490  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  492  <|@ instruction r10|DWORD = MOVE input: int[-333843|0xfffffffffffae7ed] <|@ <|@
      nr  498  <|@ instruction JUMP ~[] destination: B53 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B145" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  810  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  812  <|@ instruction r8|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  814  <|@ instruction r11|DWORD = MOVE input: int[-265747|0xfffffffffffbf1ed] <|@ <|@
      nr  816  <|@ instruction JUMP ~[] destination: B80 -> B145 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  606  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  608  <|@ instruction r10|DWORD = MOVE input: int[-333107|0xfffffffffffaeacd] <|@ <|@
      nr  614  <|@ instruction JUMP ~[] destination: B59 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B139"
    from_bci -1
    to_bci -1
    predecessors "B135" 
    successors "B145" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1374  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1376  <|@ instruction r11|DWORD = MOVE input: int[-314163|0xfffffffffffb34cd] <|@ <|@
      nr 1378  <|@ instruction rdi|DWORD = MOVE stack:76|DWORD moveKind: DWORD <|@ <|@
      nr 1380  <|@ instruction r8|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1382  <|@ instruction JUMP ~[] destination: B139 -> B145 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B145" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  818  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  820  <|@ instruction r8|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  822  <|@ instruction r11|DWORD = MOVE input: int[-265491|0xfffffffffffbf2ed] <|@ <|@
      nr  824  <|@ instruction JUMP ~[] destination: B81 -> B145 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B128"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B145" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1274  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1276  <|@ instruction r8|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1278  <|@ instruction r11|DWORD = MOVE input: int[-295187|0xfffffffffffb7eed] <|@ <|@
      nr 1280  <|@ instruction JUMP ~[] destination: B128 -> B145 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  466  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  468  <|@ instruction r10|DWORD = MOVE input: int[-332819|0xfffffffffffaebed] <|@ <|@
      nr  474  <|@ instruction JUMP ~[] destination: B50 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B145" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  996  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  998  <|@ instruction r8|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1000  <|@ instruction r11|DWORD = MOVE input: int[-280083|0xfffffffffffbb9ed] <|@ <|@
      nr 1002  <|@ instruction JUMP ~[] destination: B95 -> B145 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B145" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1004  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1006  <|@ instruction r8|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1008  <|@ instruction r11|DWORD = MOVE input: int[-277267|0xfffffffffffbc4ed] <|@ <|@
      nr 1010  <|@ instruction JUMP ~[] destination: B96 -> B145 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B145" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1012  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1014  <|@ instruction r8|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1016  <|@ instruction r11|DWORD = MOVE input: int[-273971|0xfffffffffffbd1cd] <|@ <|@
      nr 1018  <|@ instruction JUMP ~[] destination: B97 -> B145 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B145" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  942  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  944  <|@ instruction r8|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  946  <|@ instruction r11|DWORD = MOVE input: int[-288027|0xfffffffffffb9ae5] <|@ <|@
      nr  948  <|@ instruction JUMP ~[] destination: B93 -> B145 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  258  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  260  <|@ instruction r10|DWORD = MOVE input: int[-324115|0xfffffffffffb0ded] <|@ <|@
      nr  262  <|@ instruction JUMP ~[] destination: B28 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B28" "B33" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  344  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  346  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  348  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  350  <|@ st <@st|@reference-map: [r13:0, r14:0, stack:64]
live-base-pointers: []
java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 32]
stack: r14|QWORD[.] 
locals: r13|QWORD[.] stack:32|QWORD[.] - - - - 
>@ <|@ instruction DEOPT info [bci:32] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B129"
    from_bci -1
    to_bci -1
    predecessors "B98" 
    successors "B145" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1282  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1284  <|@ instruction r8|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1286  <|@ instruction r11|DWORD = MOVE input: int[-291379|0xfffffffffffb8dcd] <|@ <|@
      nr 1288  <|@ instruction JUMP ~[] destination: B129 -> B145 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B62" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  626  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  628  <|@ instruction r10|DWORD = MOVE input: int[-327443|0xfffffffffffb00ed] <|@ <|@
      nr  634  <|@ instruction JUMP ~[] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B148" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   38  <|@ instruction r10|DWORD = MOVE input: int[-336915|0xfffffffffffadbed] <|@ <|@
      nr   40  <|@ instruction JUMP ~[] destination: B3 -> B148 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B148"
    from_bci -1
    to_bci -1
    predecessors "B3" "B147" "B7" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 1450  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1452  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1454  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1456  <|@ st <@st|@reference-map: [r13:0, stack:64]
live-base-pointers: []
java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 0]
locals: r13|QWORD[.] stack:32|QWORD[.] - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B148" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   68  <|@ instruction r10|DWORD = MOVE input: int[-340243|0xfffffffffffaceed] <|@ <|@
      nr   70  <|@ instruction JUMP ~[] destination: B7 -> B148 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B108" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1116  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1118  <|@ instruction rsi|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD <|@ <|@
      nr 1120  <|@ instruction stack:76|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr 1122  <|@ instruction JUMP ~[] destination: B107 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B107" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1124  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1126  <|@ instruction MOV [r15|QWORD + 668] y: -302107 size: DWORD <|@ <|@
      nr 1128  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1130  <|@ st <@st|@reference-map: [rax:0, rsi:0, r10:0, stack:32, stack:64]
live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1446) [bci: 68]
locals: r10|QWORD[.] rax|QWORD[.] rsi|DWORD[.] 
java.util.HashMap$KeyIterator.next(HashMap.java:1466) [bci: 1]
locals: - 
java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114]
stack: stack:64|QWORD[.] stack:76|DWORD 
locals: - stack:32|QWORD[.] - stack:64|QWORD[.] r10|QWORD[.] stack:76|DWORD 
>@ <|@ instruction DEOPT info [bci:68, 1, 114] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  338  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  340  <|@ instruction r10|DWORD = MOVE input: int[-323347|0xfffffffffffb10ed] <|@ <|@
      nr  342  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B145" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  802  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  804  <|@ instruction r8|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  806  <|@ instruction r11|DWORD = MOVE input: int[-268819|0xfffffffffffbe5ed] <|@ <|@
      nr  808  <|@ instruction JUMP ~[] destination: B79 -> B145 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B133"
    from_bci -1
    to_bci -1
    predecessors "B131" 
    successors "B145" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1316  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1318  <|@ instruction r11|DWORD = MOVE input: int[-312851|0xfffffffffffb39ed] <|@ <|@
      nr 1320  <|@ instruction rdi|DWORD = MOVE stack:76|DWORD moveKind: DWORD <|@ <|@
      nr 1322  <|@ instruction r8|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1324  <|@ instruction JUMP ~[] destination: B133 -> B145 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B145" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  902  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  904  <|@ instruction r8|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  906  <|@ instruction r11|DWORD = MOVE input: int[-282907|0xfffffffffffbaee5] <|@ <|@
      nr  908  <|@ instruction JUMP ~[] destination: B89 -> B145 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B147"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B148" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1444  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1446  <|@ instruction r10|DWORD = MOVE input: int[-341043|0xfffffffffffacbcd] <|@ <|@
      nr 1448  <|@ instruction JUMP ~[] destination: B147 -> B148 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B137"
    from_bci -1
    to_bci -1
    predecessors "B136" 
    successors "B145" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1358  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1360  <|@ instruction r11|DWORD = MOVE input: int[-317459|0xfffffffffffb27ed] <|@ <|@
      nr 1362  <|@ instruction rdi|DWORD = MOVE stack:76|DWORD moveKind: DWORD <|@ <|@
      nr 1364  <|@ instruction r8|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1366  <|@ instruction JUMP ~[] destination: B137 -> B145 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B71" 
    successors "B145" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  732  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  734  <|@ instruction r8|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  736  <|@ instruction r11|DWORD = MOVE input: int[-262419|0xfffffffffffbfeed] <|@ <|@
      nr  738  <|@ instruction JUMP ~[] destination: B72 -> B145 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokevirtual #1          // size:()int
     4: istore_2      
     5: aload_1       
     6: arraylength   
     7: iload_2       
     8: if_icmplt     15
    11: aload_1       
    12: goto          32
    15: aload_1       
    16: invokevirtual #8          // java.lang.Object.getClass:()java.lang.Class
    19: invokevirtual #9          // java.lang.Class.getComponentType:()java.lang.Class
    22: iload_2       
    23: invokestatic  #10         // java.lang.reflect.Array.newInstance:(java.lang.Class, int)java.lang.Object
    26: checkcast     #14         // java.lang.Object[]
    29: checkcast     #14         // java.lang.Object[]
    32: astore_3      
    33: aload_0       
    34: invokevirtual #2          // iterator:()java.util.Iterator
    37: astore        4
    39: iconst_0      
    40: istore        5
    42: iload         5
    44: aload_3       
    45: arraylength   
    46: if_icmpge     126
    49: aload         4
    51: invokeinterface#3, 1       // java.util.Iterator.hasNext:()boolean
    56: ifne          109
    59: aload_1       
    60: aload_3       
    61: if_acmpne     72
    64: aload_3       
    65: iload         5
    67: aconst_null   
    68: aastore       
    69: goto          107
    72: aload_1       
    73: arraylength   
    74: iload         5
    76: if_icmpge     86
    79: aload_3       
    80: iload         5
    82: invokestatic  #6          // java.util.Arrays.copyOf:(java.lang.Object[], int)java.lang.Object[]
    85: areturn       
    86: aload_3       
    87: iconst_0      
    88: aload_1       
    89: iconst_0      
    90: iload         5
    92: invokestatic  #11         // java.lang.System.arraycopy:(java.lang.Object, int, java.lang.Object, int, int)void
    95: aload_1       
    96: arraylength   
    97: iload         5
    99: if_icmple     107
   102: aload_1       
   103: iload         5
   105: aconst_null   
   106: aastore       
   107: aload_1       
   108: areturn       
   109: aload_3       
   110: iload         5
   112: aload         4
   114: invokeinterface#4, 1       // java.util.Iterator.next:()java.lang.Object
   119: aastore       
   120: iinc          
   123: goto          42
   126: aload         4
   128: invokeinterface#3, 1       // java.util.Iterator.hasNext:()boolean
   133: ifeq          145
   136: aload_3       
   137: aload         4
   139: invokestatic  #7          // finishToArray:(java.lang.Object[], java.util.Iterator)java.lang.Object[]
   142: goto          146
   145: aload_3       
   146: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849c1e203493bc20f85efffffff900f1f80000000000f1f800000000089842400c0feff4883ec5848896c24504c8bee48895424408502458b75084181feaddeadde0f854d050000418b75208b34f50c000000413b750c0f85770a0000418b7518448bd6443b520c0f8fb50700004181feaddeadde0f854a0500004c8bf2418b7520448b14f50c000000453b550c0f85820a000041837d18000f8c020a0000498b77604c8d5e284d3b5f700f87790600004d895f600f1886e80000004c8bde49b8addeaddeaddeadde4d8b80a80000004c8906c74608addeadde49b800000000ffffffff4c89460c4489561444896618458b55144489561c49c1ed0344896e204d8bd34d8bde4c895424284c895c2420458b430c4489442434418bf04c8bce49ffc9493bf10f87090000004585c00f856d080000458b4a0844894c2438418b4b08894c243c48bb00e01b1701000000bf00000000e9390100000f1f40004181f9addeadde0f8540010000418b72208b04f518000000418b6a0c3be80f84e90900008b34f520000000448b2cf50c000000453b6a140f85a80800003bc50f8e730800008b34f5140000008b04f50c000000448bed45036a1c413bc50f8e5e090000413bc50f861d0800008bc5ffc04189420c41896a1048c1e603428b74ae108bc648c1e003448bee4c8bf04d85f60f8480000000418b7608488b14cde8000000448b420c4963c0483b14f00f84630000004c897424084183f8180f8510070000448bc649c1e003493bd00f84440000004c8b04f520000000418b00bd00000000e926000000660f1f840000000000448bf541c1e603458d76084d63f64f8b3430493bd60f8438000000ffc53bc57fdfe9bc06000045896cbb10498d74bb1048c1ee094488241e850500000000ffc7448b442434443bc70f8fc2feffffe953020000488914f518000000ebc94181f9addeadde0f85b1000000418b4210813cc508000000addeadde0f85b9070000418b72148b2cf5140000008b34f510000000448b2cc50c000000458bf5442bf6413bee0f8e820700008b34c5180000008b2cf50c0000003b2cc5140000000f85590700008b2cf508000000458bf541ffc681fdaddeadde0f85000100008b34f510000000443b2cf50c0000000f830208000044892cc510000000448934c50c00000048c1e603428b74ae108bc648c1e003448bee4c8bf0e982feffff4181f9addeadde0f8546070000418b7214418504f4418b421c8b2cc518000000413b6a0c0f85be06000041897218498bea48c1ed094488641d008b2cf51800000041896a14448b2cf510000000458bf549c1e60385ed0f8526feffff8974241c8b04c5240000008b2cc50c000000418b721048c1e003e93d00000066660f1f8400000000003bee0f86010700008bd6ffc2418952108b74b010418972144d8bc249c1e8094588241885f60f85d2fdffff8505000000008bf23bee7fc9e9c1fdffff81fdaddeadde0f853f0000008b34f51c000000443b2cf50c0000000f834906000044892cc510000000448934c50c00000048c1e603428b74ae108bd648c1e203448bee4c8bf2e976fdffff448974241c89442418897c241448c1e603418bd544896c241048b8ffffffffffffffff0f1f440000e800000000908b742418448b6c241044892cf510000000448b74241c448934f50c000000488bf048c1ee03448bee4c8bf08b7c241448bb00e01b17010000008b4c243c448b4c24384c8b5c24204c8b542428e9f7fcffff897c2414817c2438addeadde4c8b5424280f852d000000418b42208b04c518000000413b420c0f850d060000488b442420488b6c24504883c458850500000000c5f877c3817c2438addeadde0f856a020000418b4210813cc508000000addeadde0f85d4040000418b72148b14f5140000008b34f5100000008b04c50c0000002bc63bd00f8fd9050000488b442420488b6c24504883c458850500000000c5f877c34181feaddeadde0f85ea010000418b75188b34f50c000000413b750c0f8537050000458b5514488b542440e99ffaffff4181feaddeadde0f8589010000458b7518468b14f50c000000453b550c0f85e104000041837d14000f8c01040000458b5d104585db0f8c0d030000428b34f50800000048b9addeaddeaddeadde483b0cf5b80200000f85df03000081feaddeadde0f85b5000000428b34f5100000008b34f50c000000443bde0f8f970300008974243c498b4f604c8d41384d3b47700f87860100004d8947600f1881f8000000488bf1488bce4c8d461849b9addeaddeaddeadde4d8b89a80000004c890ec74608addeadde4489660c49c1e8034489461049c1ed0344896e1449b8addeaddeaddeadde4d8b80a80000004c894618c74620addeadde44895e24c74628ffffffff4489562c44897630448976344c8bda4c8bd1488b542440e925faffff81feaddeadde0f85170000004183fb010f8d67030000c744243c00000000e944ffffff81feaddeadde0f8513030000428b34f510000000443bde0f8fe90200008974243ce91effffff448954243c48beaddeaddeaddeaddeba06000000b901000000e80000000090488bf0448b54243c488b542440e961f9ffff4889542428498bf548b8ffffffffffffffff0f1f8000000000e800000000904c8b5c24284c8bd0488b542440e97af9ffff4181feaddeadde0f85b5030000418b450c448b14c514000000488b542440e9b5f8ffff4181f9addeadde0f85b7010000418b421485c00f8588010000488b442420488b6c24504883c458850500000000c5f877c344895c24384489542434488954242848baaddeaddeaddeadde488bf2ba0a000000b901000000e80000000090488bf0448b5c2438448b542434488b542428e945feffff8b7208488b0cf5e000000049bbaddeaddeaddeadde4c3bd90f8482010000498b4f60458bda41c1e302458d5b174183e3f84d63db4d8bc34c03c14d3b47700f87800000004d894760410f18840bc0000000410f18840b00010000410f18840b40010000410f18840b800100004489510c48c7010100000089710848c7c610000000e90c0000000f1f40004c892431488d76084c3bde7ff3488bf1817e08addeadde0f85ba0000004181feaddeadde0f85080000004c8bf6e99ff7ffff488bd6e9defcffff48c1e603418bd2b901000000448954243ce80000000090488bf0448b54243c488b542440ebb041baedf5faff4c8bda488b5424404589979c0200004d89a7a8020000e80000000090897c24144c8b74240841c7879c020000d545fbff4d89a7a8020000e8000000009041bbed22fbff8b7c24144c8b44242045899f9c0200004d89a7a8020000e8000000009041bbcd26fbff8b7c24144c8b442420ebdb448954243c41c7879c020000cd1dfbff4d89a7a8020000e8000000009049bbaddeaddeaddeadde41c7879c020000e554fbff4d899fa8020000e8000000009041c7879c0200009f29f7ff4d89a7a8020000e8000000009041baedecfaffe92dffffff4d8bc341bbe5defbffe96bffffff41baedfdfaffe914ffffff41bacdf6faffe909ffffff41baede7faffe9fefeffff4d8bc341bbedf1fbffe93cffffff41bacdeafaffe9e5feffff41bbcd34fbff8b7c24144c8b442420e91dffffff4d8bc341bbedf2fbffe90fffffff4d8bc341bbed7efbffe901ffffff41baedebfaffe9aafeffff4d8bc341bbedb9fbffe9e8feffff4d8bc341bbedc4fbffe9dafeffff4d8bc341bbcdd1fbffe9ccfeffff4d8bc341bbe59afbffe9befeffff41baed0dfbff4589979c0200004d89a7a8020000e800000000904d8bc341bbcd8dfbffe996feffff41baed00fbffe93ffeffff41baeddbfaff4589979c0200004d89a7a8020000e8000000009041baedcefaffebe48b74241c897c241441c7879c020000e563fbff4d89a7a8020000e8000000009041baed10fbffeb894d8bc341bbede5fbffe933feffff41bbed39fbff8b7c24144c8b442420e91ffeffff4d8bc341bbe5aefbffe911feffff41bacdcbfaffeb8441bbed27fbff8b7c24144c8b442420e9f5fdffff4d8bc341bbedfefbffe9e7fdffffe80000000090e80000000090  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@1d23bfbf slotKind: QWORD  <||@
  Comment 48 6 r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 51 8 stack:32|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 56 10 NULLCHECK [rdx|QWORD[.]] state [bci:0]  <||@
  Comment 56 [rdx:0, r13:0, stack:64]at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2  |3  |4  |5 
     locals:  |r13|QWORD[.]  |rdx|QWORD[.]  |-  |-  |-  |-   <||@
  Comment 56 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 58 12 r14|DWORD = MOV [r13|QWORD[.] + 8] size: DWORD  <||@
  Comment 62 14 CMP r14|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList$SubList;, resolved>;compressed}  <||@
  Comment 62 {meta{HotSpotType<Ljava/util/ArrayList$SubList;, resolved>;compressed}}  <||@
  Comment 69 16 BRANCH trueDestinationProbability: 0.9362023508733385 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B4  <||@
  Comment 75 block B1 null  <||@
  Comment 75 18 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 75 20 rsi|DWORD[.] = MOV [r13|QWORD[.] + 32] size: DWORD  <||@
  Comment 79 22 rsi|DWORD = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 79 [rdx:0, r13:0, stack:64]at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2  |3  |4  |5 
     locals:  |r13|QWORD[.]  |rdx|QWORD[.]  |-  |-  |-  |-   <||@
  Comment 79 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 86 24 CMP (x: rsi|DWORD, y: [r13|QWORD[.] + 12]) size: DWORD  <||@
  Comment 90 26 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3  <||@
  Comment 96 block B2 null  <||@
  Comment 96 28 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 96 30 rsi|DWORD = MOV [r13|QWORD[.] + 24] size: DWORD  <||@
  Comment 100 32 r10|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 103 34 JUMP ~[] destination: B2 -> B10  <||@
  Comment 103 block B10 null  <||@
  Comment 103 88 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 103 90 CMP (x: r10|DWORD, y: [rdx|QWORD[.] + 12]) size: DWORD  <||@
  Comment 107 92 BRANCH trueDestinationProbability: 2.746347358013842E-4 condition: > trueDestination: B10 -> B11 falseDestination: B10 -> B24  <||@
  Comment 113 block B24 null  <||@
  Comment 113 230 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 113 232 CMP r14|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList$SubList;, resolved>;compressed}  <||@
  Comment 113 {meta{HotSpotType<Ljava/util/ArrayList$SubList;, resolved>;compressed}}  <||@
  Comment 120 234 BRANCH trueDestinationProbability: 0.9362023508733385 condition: = trueDestination: B24 -> B25 falseDestination: B24 -> B36  <||@
  Comment 126 block B25 null  <||@
  Comment 126 236 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 126 238 r14|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 129 240 JUMP ~[] destination: B25 -> B26  <||@
  Comment 129 block B26 null  <||@
  Comment 129 242 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 129 244 rsi|DWORD[.] = MOV [r13|QWORD[.] + 32] size: DWORD  <||@
  Comment 133 246 r10|DWORD = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD state [bci:32]  <||@
  Comment 133 [rdx:0, r13:0, r14:0, stack:64]at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 32, duringCall: false, rethrow: false]
              |0             |1             |2  |3  |4  |5 
     locals:  |r13|QWORD[.]  |rdx|QWORD[.]  |-  |-  |-  |- 
     stack:   |r14|QWORD[.]  |              |   |   |   |    <||@
  Comment 133 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 141 248 CMP (x: r10|DWORD, y: [r13|QWORD[.] + 12]) size: DWORD  <||@
  Comment 145 250 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B33  <||@
  Comment 151 block B27 null  <||@
  Comment 151 252 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 151 254 CMP [r13|QWORD[.] + 24] y: 0 size: DWORD  <||@
  Comment 156 256 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B27 -> B28 falseDestination: B27 -> B29  <||@
  Comment 162 block B29 null  <||@
  Comment 162 264 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 162 266 rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 166 268 r11|QWORD = LEA [rsi|QWORD + 40] size: QWORD  <||@
  Comment 170 270 CMP (x: r11|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 174 272 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B29 -> B30 falseDestination: B29 -> B31  <||@
  Comment 180 block B31 null  <||@
  Comment 180 294 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 180 296 MOV (x: [r15|QWORD + 96], y: r11|QWORD) size: QWORD  <||@
  Comment 184 298 AMD64PREFETCH ~[rsi|QWORD + 232] instr: 0  <||@
  Comment 191 300 rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 191 302 JUMP ~[] destination: B31 -> B32  <||@
  Comment 191 block B32 null  <||@
  Comment 191 304 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 191 306 r11|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD  <||@
  Comment 194 308 r8|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/ArrayList$SubList$1;, resolved>}  <||@
  Comment 194 {meta{HotSpotType<Ljava/util/ArrayList$SubList$1;, resolved>}}  <||@
  Comment 204 310 r8|QWORD = MOV [r8|QWORD + 168] size: QWORD  <||@
  Comment 211 312 MOV (x: [rsi|QWORD[*]], y: r8|QWORD) size: QWORD  <||@
  Comment 214 314 MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList$SubList$1;, resolved>;compressed}  <||@
  Comment 214 {meta{HotSpotType<Ljava/util/ArrayList$SubList$1;, resolved>;compressed}}  <||@
  Comment 221 316 r8|QWORD = MOVE input: long[-4294967296|0xffffffff00000000]  <||@
  Comment 231 318 MOV (x: [rsi|QWORD[*] + 12], y: r8|QWORD) size: QWORD  <||@
  Comment 235 320 MOV (x: [rsi|QWORD[*] + 20], y: r10|DWORD) size: DWORD  <||@
  Comment 239 322 MOV (x: [rsi|QWORD[*] + 24], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 243 324 r10|DWORD = MOV [r13|QWORD[.] + 20] size: DWORD  <||@
  Comment 247 326 MOV (x: [rsi|QWORD[*] + 28], y: r10|DWORD) size: DWORD  <||@
  Comment 251 328 r13|DWORD[.] = COMPRESSPOINTER (input: r13|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@68a0169d encoding: base: 0 shift: 3  <||@
  Comment 255 330 MOV (x: [rsi|QWORD[*] + 32], y: r13|DWORD[.]) size: DWORD  <||@
  Comment 259 332 r10|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 262 334 r11|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 265 336 JUMP ~[] destination: B32 -> B64  <||@
  Comment 265 block B64 null  <||@
  Comment 265 660 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 265 662 stack:56|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 270 664 stack:64|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 275 666 r8|DWORD = MOV [r11|QWORD[.] + 12] size: DWORD  <||@
  Comment 279 668 stack:44|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 284 670 rsi|QWORD = MOV r8|DWORD size: DWORD  <||@
  Comment 287 672 r9|QWORD = DEC rsi|QWORD size: QWORD  <||@
  Comment 293 674 CMP (x: rsi|QWORD, y: r9|QWORD) size: QWORD  <||@
  Comment 296 676 BRANCH trueDestinationProbability: 0.5 condition: |>| trueDestination: B64 -> B68 falseDestination: B64 -> B66  <||@
  Comment 302 block B66 null  <||@
  Comment 302 682 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 302 684 TEST (x: r8|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 305 686 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B66 -> B68 falseDestination: B66 -> B146  <||@
  Comment 311 block B68 null  <||@
  Comment 311 692 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 311 694 r9|DWORD = MOV [r10|QWORD[.] + 8] size: DWORD state [bci:37]  <||@
  Comment 311 [rdx:0, r10:0, r11:0, stack:32, stack:40, stack:64]at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 37, duringCall: false, rethrow: false]
              |0             |1             |2  |3             |4  |5 
     locals:  |-             |rdx|QWORD[.]  |-  |r11|QWORD[.]  |-  |- 
     stack:   |r10|QWORD[.]  |              |   |              |   |    <||@
  Comment 311 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 315 696 stack:40|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 320 698 rcx|DWORD = MOV [r11|QWORD[.] + 8] size: DWORD  <||@
  Comment 324 700 stack:36|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 328 702 rbx|QWORD = MOVE input: long[4682670080|0x1171be000]  <||@
  Comment 338 704 rdi|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 343 706 JUMP ~[] destination: B68 -> B69  <||@
  Comment 348 block B70 loop 1 depth 1 header:74|LoopBegin  <||@
  Comment 348 714 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 352 716 CMP r9|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList$SubList$1;, resolved>;compressed}  <||@
  Comment 352 {meta{HotSpotType<Ljava/util/ArrayList$SubList$1;, resolved>;compressed}}  <||@
  Comment 359 718 BRANCH trueDestinationProbability: 0.8874682121946893 condition: = trueDestination: B70 -> B71 falseDestination: B70 -> B82  <||@
  Comment 365 block B71 loop 1 depth 1 header:74|LoopBegin  <||@
  Comment 365 720 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 365 722 rsi|DWORD[.] = MOV [r10|QWORD[.] + 32] size: DWORD  <||@
  Comment 369 724 rax|DWORD = MOV [rsi|DWORD[.] * 8 + 24] size: DWORD state [bci:42]  <||@
  Comment 369 [rsi:0, r10:0, r11:0, stack:32, stack:40, stack:64]at java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42, duringCall: false, rethrow: false]
              |0  |1                  |2  |3             |4             |5         
     locals:  |-  |stack:32|QWORD[.]  |-  |r11|QWORD[.]  |r10|QWORD[.]  |rdi|DWORD   <||@
  Comment 369 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 376 726 rbp|DWORD = MOV [r10|QWORD[.] + 12] size: DWORD  <||@
  Comment 380 728 CMP (x: rbp|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 382 730 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B71 -> B72 falseDestination: B71 -> B73  <||@
  Comment 388 block B73 loop 1 depth 1 header:74|LoopBegin  <||@
  Comment 388 740 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 388 742 rsi|DWORD[.] = MOV [rsi|DWORD[.] * 8 + 32] size: DWORD  <||@
  Comment 395 744 r13|DWORD = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD state [bci:42]  <||@
  Comment 395 [rsi:0, r10:0, r11:0, stack:32, stack:40, stack:64]at java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42, duringCall: false, rethrow: false]
              |0  |1                  |2  |3             |4             |5         
     locals:  |-  |stack:32|QWORD[.]  |-  |r11|QWORD[.]  |r10|QWORD[.]  |rdi|DWORD   <||@
  Comment 395 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 403 746 CMP (x: r13|DWORD, y: [r10|QWORD[.] + 20]) size: DWORD  <||@
  Comment 407 748 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B73 -> B74 falseDestination: B73 -> B81  <||@
  Comment 413 block B74 loop 1 depth 1 header:74|LoopBegin  <||@
  Comment 413 750 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 413 752 CMP (x: rax|DWORD, y: rbp|DWORD) size: DWORD  <||@
  Comment 415 754 BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B74 -> B75 falseDestination: B74 -> B80  <||@
  Comment 421 block B75 loop 1 depth 1 header:74|LoopBegin  <||@
  Comment 421 756 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 421 758 rsi|DWORD[.] = MOV [rsi|DWORD[.] * 8 + 20] size: DWORD  <||@
  Comment 428 760 rax|DWORD = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD state [bci:42]  <||@
  Comment 428 [rsi:0, r10:0, r11:0, stack:32, stack:40, stack:64]at java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42, duringCall: false, rethrow: false]
              |0  |1                  |2  |3             |4             |5         
     locals:  |-  |stack:32|QWORD[.]  |-  |r11|QWORD[.]  |r10|QWORD[.]  |rdi|DWORD   <||@
  Comment 428 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 435 762 r13|DWORD = ADD (x: rbp|DWORD, ~y: [r10|QWORD[.] + 28]) size: DWORD  <||@
  Comment 442 764 CMP (x: rax|DWORD, y: r13|DWORD) size: DWORD  <||@
  Comment 445 766 BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B75 -> B76 falseDestination: B75 -> B79  <||@
  Comment 451 block B76 loop 1 depth 1 header:74|LoopBegin  <||@
  Comment 451 768 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 451 770 CMP (x: rax|DWORD, y: r13|DWORD) size: DWORD  <||@
  Comment 454 772 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B76 -> B77 falseDestination: B76 -> B78  <||@
  Comment 460 block B77 loop 1 depth 1 header:74|LoopBegin  <||@
  Comment 460 774 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 460 776 rax|DWORD = INC rbp|DWORD size: DWORD  <||@
  Comment 464 778 MOV (x: [r10|QWORD[.] + 12], y: rax|DWORD) size: DWORD  <||@
  Comment 468 780 MOV (x: [r10|QWORD[.] + 16], y: rbp|DWORD) size: DWORD  <||@
  Comment 472 782 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@68a0169d encoding: base: 0 shift: 3  <||@
  Comment 476 784 rsi|DWORD[.] = MOV [rsi|QWORD[.] + r13|DWORD * 4 + 16] size: DWORD  <||@
  Comment 481 786 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@68a0169d encoding: base: 0 shift: 3  <||@
  Comment 487 788 r13|DWORD[.] = MOVE rsi|DWORD[.] moveKind: DWORD  <||@
  Comment 490 790 r14|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 493 792 JUMP ~[] destination: B77 -> B111  <||@
  Comment 493 block B111 loop 1 depth 1 header:74|LoopBegin  <||@
  Comment 493 1140 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 493 1142 TEST (x: r14|QWORD[.], y: r14|QWORD[.]) size: QWORD  <||@
  Comment 496 1144 BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B111 -> B122 falseDestination: B111 -> B113  <||@
  Comment 502 block B113 loop 1 depth 1 header:74|LoopBegin  <||@
  Comment 502 1150 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 502 1152 rsi|DWORD = MOV [r14|QWORD[.] + 8] size: DWORD  <||@
  Comment 506 1154 rdx|QWORD = MOV [rcx|DWORD * 8 + 232] size: QWORD  <||@
  Comment 514 1156 r8|DWORD = MOV [rdx|QWORD + 12] size: DWORD  <||@
  Comment 518 1158 rax|QWORD = MOVSXD r8|DWORD size: QWORD  <||@
  Comment 521 1160 CMP (x: rdx|QWORD, y: [rax|QWORD + rsi|DWORD * 8]) size: QWORD  <||@
  Comment 525 1162 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B113 -> B122 falseDestination: B113 -> B115  <||@
  Comment 531 block B115 loop 1 depth 1 header:74|LoopBegin  <||@
  Comment 531 1168 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 531 1170 stack:88|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 536 1172 CMP r8|DWORD y: 24 size: DWORD  <||@
  Comment 540 1174 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B115 -> B116 falseDestination: B115 -> B126  <||@
  Comment 546 block B116 loop 1 depth 1 header:74|LoopBegin  <||@
  Comment 546 1176 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 546 1178 r8|QWORD = UNCOMPRESSPOINTER (input: rsi|DWORD, ~baseRegister: -) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@68a0169d encoding: base: 0 shift: 3  <||@
  Comment 553 1180 CMP (x: rdx|QWORD, y: r8|QWORD) size: QWORD  <||@
  Comment 556 1182 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B116 -> B122 falseDestination: B116 -> B118  <||@
  Comment 562 block B118 loop 1 depth 1 header:74|LoopBegin  <||@
  Comment 562 1188 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 562 1190 r8|QWORD = MOV [rsi|DWORD * 8 + 32] size: QWORD  <||@
  Comment 570 1192 rax|DWORD = MOV [r8|QWORD] size: DWORD  <||@
  Comment 573 1194 rbp|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 578 1196 JUMP ~[] destination: B118 -> B119  <||@
  Comment 583 block B120 loop 3 depth 2 outer 1 header:2014|LoopBegin  <||@
  Comment 583 1204 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 592 1206 r14|DWORD = SHL rbp|DWORD y: 3 size: DWORD  <||@
  Comment 599 1208 r14|DWORD = LEA [r14|DWORD + 8] size: DWORD  <||@
  Comment 603 1210 r14|QWORD = MOVSXD r14|DWORD size: QWORD  <||@
  Comment 606 1212 r14|QWORD = MOV [r8|QWORD + r14|QWORD * 1] size: QWORD  <||@
  Comment 610 1214 CMP (x: rdx|QWORD, y: r14|QWORD) size: QWORD  <||@
  Comment 613 1216 BRANCH trueDestinationProbability: 0.4 condition: = trueDestination: B120 -> B121 falseDestination: B120 -> B123  <||@
  Comment 619 block B123 loop 3 depth 2 outer 1 header:2014|LoopBegin  <||@
  Comment 619 1242 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 619 1244 rbp|DWORD = INC rbp|DWORD size: DWORD  <||@
  Comment 621 1246 JUMP ~[] destination: B123 -> B119  <||@
  Comment 621 block B119 loop 3 depth 2 outer 1 header:2014|LoopBegin  <||@
  Comment 621 1198 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 621 1200 CMP (x: rax|DWORD, y: rbp|DWORD) size: DWORD  <||@
  Comment 623 1202 BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B119 -> B120 falseDestination: B119 -> B126  <||@
  Comment 630 block B122 loop 1 depth 1 header:74|LoopBegin  <||@
  Comment 630 1224 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 630 1226 MOV (x: [r11|QWORD[.] + rdi|DWORD * 4 + 16], y: r13|DWORD[.]) size: DWORD  <||@
  Comment 635 1228 rsi|QWORD[.] = LEA [r11|QWORD[.] + rdi|DWORD * 4 + 16] size: QWORD  <||@
  Comment 640 1230 rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD  <||@
  Comment 644 1232 MOVB (x: [rsi|QWORD[*] + rbx|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 648 1234 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:120]  <||@
  Comment 648 [r10:0, r11:0, stack:32, stack:40, stack:64]at java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 120, duringCall: false, rethrow: false]
              |0  |1                  |2  |3             |4             |5         
     locals:  |-  |stack:32|QWORD[.]  |-  |r11|QWORD[.]  |r10|QWORD[.]  |rdi|DWORD   <||@
  Comment 648 {infopoint: SAFEPOINT}  <||@
  Comment 648 11  <||@
  Comment 654 1236 rdi|DWORD = INC rdi|DWORD size: DWORD  <||@
  Comment 656 1238 r8|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 661 1240 JUMP ~[] destination: B122 -> B69  <||@
  Comment 661 block B69 loop 1 depth 1 header:74|LoopBegin  <||@
  Comment 661 708 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 661 710 CMP (x: r8|DWORD, y: rdi|DWORD) size: DWORD  <||@
  Comment 664 712 BRANCH trueDestinationProbability: 0.6989533557102465 condition: > trueDestination: B69 -> B70 falseDestination: B69 -> B130  <||@
  Comment 675 block B121 loop 1 depth 1 header:74|LoopBegin  <||@
  Comment 675 1218 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 675 1220 MOV (x: [rsi|DWORD * 8 + 24], y: rdx|QWORD) size: QWORD  <||@
  Comment 683 1222 JUMP ~[] destination: B121 -> B122  <||@
  Comment 685 block B82 loop 1 depth 1 header:74|LoopBegin  <||@
  Comment 685 826 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 685 828 CMP r9|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/SubList$1;, resolved>;compressed}  <||@
  Comment 685 {meta{HotSpotType<Ljava/util/SubList$1;, resolved>;compressed}}  <||@
  Comment 692 830 BRANCH trueDestinationProbability: 0.916333823838554 condition: = trueDestination: B82 -> B83 falseDestination: B82 -> B98  <||@
  Comment 698 block B83 loop 1 depth 1 header:74|LoopBegin  <||@
  Comment 698 832 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 698 834 rax|DWORD[.] = MOV [r10|QWORD[.] + 16] size: DWORD  <||@
  Comment 702 836 CMP [rax|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed} state [bci:42]  <||@
  Comment 702 [rax:0, r10:0, r11:0, stack:32, stack:40, stack:64]at java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42, duringCall: false, rethrow: false]
              |0  |1                  |2  |3             |4             |5         
     locals:  |-  |stack:32|QWORD[.]  |-  |r11|QWORD[.]  |r10|QWORD[.]  |rdi|DWORD   <||@
  Comment 702 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 702 {meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed}}  <||@
  Comment 713 838 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B83 -> B84 falseDestination: B83 -> B97  <||@
  Comment 719 block B84 loop 1 depth 1 header:74|LoopBegin  <||@
  Comment 719 840 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 719 842 rsi|DWORD[.] = MOV [r10|QWORD[.] + 20] size: DWORD  <||@
  Comment 723 844 rbp|DWORD = MOV [rsi|DWORD[.] * 8 + 20] size: DWORD state [bci:42]  <||@
  Comment 723 [rax:0, rsi:0, r10:0, r11:0, stack:32, stack:40, stack:64]at java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42, duringCall: false, rethrow: false]
              |0  |1                  |2  |3             |4             |5         
     locals:  |-  |stack:32|QWORD[.]  |-  |r11|QWORD[.]  |r10|QWORD[.]  |rdi|DWORD   <||@
  Comment 723 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 730 846 rsi|DWORD = MOV [rsi|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 737 848 r13|DWORD = MOV [rax|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 745 850 r14|DWORD = SUB (x: r13|DWORD, ~y: rsi|DWORD) size: DWORD  <||@
  Comment 751 852 CMP (x: rbp|DWORD, y: r14|DWORD) size: DWORD  <||@
  Comment 754 854 BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B84 -> B85 falseDestination: B84 -> B96  <||@
  Comment 760 block B85 loop 1 depth 1 header:74|LoopBegin  <||@
  Comment 760 856 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 760 858 rsi|DWORD[.] = MOV [rax|DWORD[.] * 8 + 24] size: DWORD  <||@
  Comment 767 860 rbp|DWORD = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD state [bci:42]  <||@
  Comment 767 [rax:0, rsi:0, r10:0, r11:0, stack:32, stack:40, stack:64]at java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42, duringCall: false, rethrow: false]
              |0  |1                  |2  |3             |4             |5         
     locals:  |-  |stack:32|QWORD[.]  |-  |r11|QWORD[.]  |r10|QWORD[.]  |rdi|DWORD   <||@
  Comment 767 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 774 862 CMP (x: rbp|DWORD, y: [rax|DWORD[.] * 8 + 20]) size: DWORD  <||@
  Comment 781 864 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B85 -> B86 falseDestination: B85 -> B95  <||@
  Comment 787 block B86 loop 1 depth 1 header:74|LoopBegin  <||@
  Comment 787 866 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 787 868 rbp|DWORD = MOV [rsi|DWORD[.] * 8 + 8] size: DWORD  <||@
  Comment 794 870 r14|DWORD = INC r13|DWORD size: DWORD  <||@
  Comment 800 872 CMP rbp|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed}  <||@
  Comment 800 {meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed}}  <||@
  Comment 806 874 BRANCH trueDestinationProbability: 0.9304948647614187 condition: = trueDestination: B86 -> B87 falseDestination: B86 -> B90  <||@
  Comment 812 block B87 loop 1 depth 1 header:74|LoopBegin  <||@
  Comment 812 876 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 812 878 rsi|DWORD[.] = MOV [rsi|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 819 880 CMP (x: r13|DWORD, y: [rsi|DWORD[.] * 8 + 12]) size: DWORD state [bci:42]  <||@
  Comment 819 [rax:0, rsi:0, r10:0, r11:0, stack:32, stack:40, stack:64]at java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42, duringCall: false, rethrow: false]
              |0  |1                  |2  |3             |4             |5         
     locals:  |-  |stack:32|QWORD[.]  |-  |r11|QWORD[.]  |r10|QWORD[.]  |rdi|DWORD   <||@
  Comment 819 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 827 882 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B87 -> B88 falseDestination: B87 -> B89  <||@
  Comment 833 block B88 loop 1 depth 1 header:74|LoopBegin  <||@
  Comment 833 884 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 833 886 MOV (x: [rax|DWORD[.] * 8 + 16], y: r13|DWORD) size: DWORD  <||@
  Comment 841 888 MOV (x: [rax|DWORD[.] * 8 + 12], y: r14|DWORD) size: DWORD  <||@
  Comment 849 890 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@68a0169d encoding: base: 0 shift: 3  <||@
  Comment 853 892 rsi|DWORD[.] = MOV [rsi|QWORD[.] + r13|DWORD * 4 + 16] size: DWORD  <||@
  Comment 858 894 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@68a0169d encoding: base: 0 shift: 3  <||@
  Comment 864 896 r13|DWORD[.] = MOVE rsi|DWORD[.] moveKind: DWORD  <||@
  Comment 867 898 r14|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 870 900 JUMP ~[] destination: B88 -> B111  <||@
  Comment 875 block B98 loop 1 depth 1 header:74|LoopBegin  <||@
  Comment 875 1020 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 875 1022 CMP r9|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap$KeyIterator;, resolved>;compressed}  <||@
  Comment 875 {meta{HotSpotType<Ljava/util/HashMap$KeyIterator;, resolved>;compressed}}  <||@
  Comment 882 1024 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B98 -> B99 falseDestination: B98 -> B129  <||@
  Comment 888 block B99 loop 1 depth 1 header:74|LoopBegin  <||@
  Comment 888 1026 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 888 1028 rsi|DWORD[.] = MOV [r10|QWORD[.] + 20] size: DWORD  <||@
  Comment 892 1030 NULLCHECK [r12|QWORD[*] + rsi|DWORD[.] * 8] state [bci:42]  <||@
  Comment 892 [rsi:0, r10:0, r11:0, stack:32, stack:40, stack:64]at java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42, duringCall: false, rethrow: false]
              |0  |1                  |2  |3             |4             |5         
     locals:  |-  |stack:32|QWORD[.]  |-  |r11|QWORD[.]  |r10|QWORD[.]  |rdi|DWORD   <||@
  Comment 892 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 896 1032 rax|DWORD[.] = MOV [r10|QWORD[.] + 28] size: DWORD  <||@
  Comment 900 1034 rbp|DWORD = MOV [rax|DWORD[.] * 8 + 24] size: DWORD state [bci:42]  <||@
  Comment 900 [rax:0, rsi:0, r10:0, r11:0, stack:32, stack:40, stack:64]at java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42, duringCall: false, rethrow: false]
              |0  |1                  |2  |3             |4             |5         
     locals:  |-  |stack:32|QWORD[.]  |-  |r11|QWORD[.]  |r10|QWORD[.]  |rdi|DWORD   <||@
  Comment 900 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 907 1036 CMP (x: rbp|DWORD, y: [r10|QWORD[.] + 12]) size: DWORD  <||@
  Comment 911 1038 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B99 -> B100 falseDestination: B99 -> B128  <||@
  Comment 917 block B100 loop 1 depth 1 header:74|LoopBegin  <||@
  Comment 917 1040 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 917 1042 MOV (x: [r10|QWORD[.] + 24], y: rsi|DWORD[.]) size: DWORD  <||@
  Comment 921 1044 rbp|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD  <||@
  Comment 928 1046 MOVB (x: [rbp|QWORD[*] + rbx|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 933 1048 rbp|DWORD[.] = MOV [rsi|DWORD[.] * 8 + 24] size: DWORD  <||@
  Comment 940 1050 MOV (x: [r10|QWORD[.] + 20], y: rbp|DWORD[.]) size: DWORD  <||@
  Comment 944 1052 r13|DWORD[.] = MOV [rsi|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 952 1054 r14|QWORD[.] = UNCOMPRESSPOINTER (input: r13|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@68a0169d encoding: base: 0 shift: 3  <||@
  Comment 959 1056 TEST (x: rbp|DWORD[.], y: rbp|DWORD[.]) size: DWORD  <||@
  Comment 961 1058 BRANCH trueDestinationProbability: 0.862846997817839 condition: = trueDestination: B100 -> B101 falseDestination: B100 -> B111  <||@
  Comment 967 block B101 loop 1 depth 1 header:74|LoopBegin  <||@
  Comment 967 1060 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 967 1062 stack:68|DWORD[.] = MOVE rsi|DWORD[.] moveKind: DWORD  <||@
  Comment 971 1064 rax|DWORD[.] = MOV [rax|DWORD[.] * 8 + 36] size: DWORD  <||@
  Comment 978 1066 rbp|DWORD = MOV [rax|DWORD[.] * 8 + 12] size: DWORD state [bci:53, 1, 114]  <||@
  Comment 978 [rax:0, r10:0, r11:0, r13:0, r14:0, stack:28, stack:32, stack:40, stack:64]at java.util.HashMap$HashIterator.nextNode(HashMap.java:1445) [bci: 53, duringCall: false, rethrow: false]
              |0             |1  |2                 
     locals:  |r10|QWORD[.]  |-  |stack:68|DWORD[.] 
     stack:   |Object[null]  |   |                  
  at java.util.HashMap$KeyIterator.next(HashMap.java:1466) [bci: 1, duringCall: true, rethrow: false]
              |0 
     locals:  |- 
  at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114, duringCall: true, rethrow: false]
              |0             |1                  |2  |3             |4             |5         
     locals:  |-             |stack:32|QWORD[.]  |-  |r11|QWORD[.]  |r10|QWORD[.]  |rdi|DWORD 
     stack:   |r11|QWORD[.]  |rdi|DWORD          |   |              |              |            <||@
  Comment 978 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 985 1068 rsi|DWORD = MOV [r10|QWORD[.] + 16] size: DWORD  <||@
  Comment 989 1070 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@68a0169d encoding: base: 0 shift: 3  <||@
  Comment 993 1072 JUMP ~[] destination: B101 -> B102  <||@
  Comment 998 block B103 loop 2 depth 2 outer 1 header:787|LoopBegin  <||@
  Comment 998 1080 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 1008 1082 CMP (x: rbp|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 1010 1084 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B103 -> B104 falseDestination: B103 -> B107  <||@
  Comment 1016 block B104 loop 2 depth 2 outer 1 header:787|LoopBegin  <||@
  Comment 1016 1086 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1016 1088 rdx|DWORD = INC rsi|DWORD size: DWORD  <||@
  Comment 1020 1090 MOV (x: [r10|QWORD[.] + 16], y: rdx|DWORD) size: DWORD  <||@
  Comment 1024 1092 rsi|DWORD[.] = MOV [rax|QWORD[.] + rsi|DWORD * 4 + 16] size: DWORD  <||@
  Comment 1028 1094 MOV (x: [r10|QWORD[.] + 20], y: rsi|DWORD[.]) size: DWORD  <||@
  Comment 1032 1096 r8|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD  <||@
  Comment 1039 1098 MOVB (x: [r8|QWORD[*] + rbx|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 1043 1100 TEST (x: rsi|DWORD[.], y: rsi|DWORD[.]) size: DWORD  <||@
  Comment 1045 1102 BRANCH trueDestinationProbability: 0.7114614377628611 condition: = trueDestination: B104 -> B105 falseDestination: B104 -> B111  <||@
  Comment 1051 block B105 loop 2 depth 2 outer 1 header:787|LoopBegin  <||@
  Comment 1051 1104 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1051 1106 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:95, 1, 114]  <||@
  Comment 1051 [rax:0, r10:0, r11:0, r13:0, r14:0, stack:28, stack:32, stack:40, stack:64]at java.util.HashMap$HashIterator.nextNode(HashMap.java:1446) [bci: 95, duringCall: false, rethrow: false]
              |0             |1             |2                 
     locals:  |r10|QWORD[.]  |rax|QWORD[.]  |stack:68|DWORD[.] 
     stack:   |Object[null]  |              |                  
  at java.util.HashMap$KeyIterator.next(HashMap.java:1466) [bci: 1, duringCall: true, rethrow: false]
              |0 
     locals:  |- 
  at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114, duringCall: true, rethrow: false]
              |0             |1                  |2  |3             |4             |5         
     locals:  |-             |stack:32|QWORD[.]  |-  |r11|QWORD[.]  |r10|QWORD[.]  |rdi|DWORD 
     stack:   |r11|QWORD[.]  |rdi|DWORD          |   |              |              |            <||@
  Comment 1051 {infopoint: SAFEPOINT}  <||@
  Comment 1051 11  <||@
  Comment 1057 1108 rsi|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 1059 1110 JUMP ~[] destination: B105 -> B102  <||@
  Comment 1059 block B102 loop 2 depth 2 outer 1 header:787|LoopBegin  <||@
  Comment 1059 1074 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1059 1076 CMP (x: rbp|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 1061 1078 BRANCH trueDestinationProbability: 0.973666701969634 condition: > trueDestination: B102 -> B103 falseDestination: B102 -> B111  <||@
  Comment 1068 block B90 loop 1 depth 1 header:74|LoopBegin  <||@
  Comment 1068 910 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1068 912 CMP rbp|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeInputList;, resolved>;compressed}  <||@
  Comment 1068 {meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeInputList;, resolved>;compressed}}  <||@
  Comment 1074 914 BRANCH trueDestinationProbability: 0.9931451844203528 condition: = trueDestination: B90 -> B91 falseDestination: B90 -> B94  <||@
  Comment 1080 block B91 loop 1 depth 1 header:74|LoopBegin  <||@
  Comment 1080 916 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1080 918 rsi|DWORD[.] = MOV [rsi|DWORD[.] * 8 + 28] size: DWORD  <||@
  Comment 1087 920 CMP (x: r13|DWORD, y: [rsi|DWORD[.] * 8 + 12]) size: DWORD state [bci:42]  <||@
  Comment 1087 [rax:0, rsi:0, r10:0, r11:0, stack:32, stack:40, stack:64]at java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42, duringCall: false, rethrow: false]
              |0  |1                  |2  |3             |4             |5         
     locals:  |-  |stack:32|QWORD[.]  |-  |r11|QWORD[.]  |r10|QWORD[.]  |rdi|DWORD   <||@
  Comment 1087 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1095 922 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B91 -> B92 falseDestination: B91 -> B93  <||@
  Comment 1101 block B92 loop 1 depth 1 header:74|LoopBegin  <||@
  Comment 1101 924 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1101 926 MOV (x: [rax|DWORD[.] * 8 + 16], y: r13|DWORD) size: DWORD  <||@
  Comment 1109 928 MOV (x: [rax|DWORD[.] * 8 + 12], y: r14|DWORD) size: DWORD  <||@
  Comment 1117 930 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@68a0169d encoding: base: 0 shift: 3  <||@
  Comment 1121 932 rsi|DWORD[.] = MOV [rsi|QWORD[.] + r13|DWORD * 4 + 16] size: DWORD  <||@
  Comment 1126 934 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@68a0169d encoding: base: 0 shift: 3  <||@
  Comment 1132 936 r13|DWORD[.] = MOVE rsi|DWORD[.] moveKind: DWORD  <||@
  Comment 1135 938 r14|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1138 940 JUMP ~[] destination: B92 -> B111  <||@
  Comment 1143 block B94 loop 1 depth 1 header:74|LoopBegin  <||@
  Comment 1143 950 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1143 952 stack:68|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 1148 954 stack:72|DWORD[.] = MOVE rax|DWORD[.] moveKind: DWORD  <||@
  Comment 1152 956 stack:76|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 1156 958 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@68a0169d encoding: base: 0 shift: 3  <||@
  Comment 1160 960 rdx|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 1163 962 stack:80|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 1168 964 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractList.get(int)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:14, 11, 114]  <||@
  Comment 1168 7  <||@
  Comment 1183 {HotSpotMethod<AbstractList.get(int)>}  <||@
  Comment 1188 [stack:24, stack:32, stack:40, stack:64]at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14, duringCall: true, rethrow: false]
              |0                  |1               |2 
     locals:  |stack:72|DWORD[.]  |stack:80|DWORD  |- 
  at java.util.SubList$1.next(AbstractList.java:707) [bci: 11, duringCall: true, rethrow: false]
              |0 
     locals:  |- 
  at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3                  |4                  |5              
     locals:  |-                  |stack:32|QWORD[.]  |-  |stack:64|QWORD[.]  |stack:56|QWORD[.]  |stack:76|DWORD 
     stack:   |stack:64|QWORD[.]  |stack:76|DWORD     |   |                   |                   |                 <||@
  Comment 1189 966 rsi|DWORD[.] = MOVE stack:72|DWORD[.] moveKind: DWORD  <||@
  Comment 1193 968 r13|DWORD = MOVE stack:80|DWORD moveKind: DWORD  <||@
  Comment 1198 970 MOV (x: [rsi|DWORD[.] * 8 + 16], y: r13|DWORD) size: DWORD  <||@
  Comment 1206 972 r14|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 1211 974 MOV (x: [rsi|DWORD[.] * 8 + 12], y: r14|DWORD) size: DWORD  <||@
  Comment 1219 976 rsi|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@68a0169d encoding: base: 0 shift: 3  <||@
  Comment 1226 978 r13|DWORD[.] = MOVE rsi|DWORD[.] moveKind: DWORD  <||@
  Comment 1229 980 r14|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1232 982 rdi|DWORD = MOVE stack:76|DWORD moveKind: DWORD  <||@
  Comment 1236 984 rbx|QWORD = MOVE input: long[4682670080|0x1171be000]  <||@
  Comment 1246 986 rcx|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 1250 988 r9|DWORD = MOVE stack:40|DWORD moveKind: DWORD  <||@
  Comment 1255 990 r11|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1260 992 r10|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1265 994 JUMP ~[] destination: B94 -> B111  <||@
  Comment 1270 block B130 null  <||@
  Comment 1270 1290 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1270 1292 stack:76|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 1274 1294 CMP stack:40|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList$SubList$1;, resolved>;compressed}  <||@
  Comment 1274 {meta{HotSpotType<Ljava/util/ArrayList$SubList$1;, resolved>;compressed}}  <||@
  Comment 1282 1300 r10|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1287 1296 BRANCH trueDestinationProbability: 0.9361509309606195 condition: = trueDestination: B130 -> B131 falseDestination: B130 -> B134  <||@
  Comment 1293 block B131 null  <||@
  Comment 1293 1298 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1293 1302 rax|DWORD[.] = MOV [r10|QWORD[.] + 32] size: DWORD  <||@
  Comment 1297 1304 rax|DWORD = MOV [rax|DWORD[.] * 8 + 24] size: DWORD state [bci:42]  <||@
  Comment 1297 [r10:0, stack:32, stack:64]at java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42, duringCall: false, rethrow: false]
              |0  |1                  |2  |3                  |4             |5              
     locals:  |-  |stack:32|QWORD[.]  |-  |stack:64|QWORD[.]  |r10|QWORD[.]  |stack:76|DWORD   <||@
  Comment 1297 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1304 1306 CMP (x: rax|DWORD, y: [r10|QWORD[.] + 12]) size: DWORD  <||@
  Comment 1308 1308 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B131 -> B132 falseDestination: B131 -> B133  <||@
  Comment 1314 block B132 null  <||@
  Comment 1314 1310 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1314 1312 rax|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1319 1314 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 1328 12  <||@
  Comment 1338 block B134 null  <||@
  Comment 1338 1326 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1338 1330 CMP stack:40|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/SubList$1;, resolved>;compressed}  <||@
  Comment 1338 {meta{HotSpotType<Ljava/util/SubList$1;, resolved>;compressed}}  <||@
  Comment 1346 1332 BRANCH trueDestinationProbability: 0.8662365591397847 condition: = trueDestination: B134 -> B135 falseDestination: B134 -> B140  <||@
  Comment 1352 block B135 null  <||@
  Comment 1352 1334 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1352 1336 rax|DWORD[.] = MOV [r10|QWORD[.] + 16] size: DWORD  <||@
  Comment 1356 1338 CMP [rax|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed} state [bci:42]  <||@
  Comment 1356 [rax:0, r10:0, stack:32, stack:64]at java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42, duringCall: false, rethrow: false]
              |0  |1                  |2  |3                  |4             |5              
     locals:  |-  |stack:32|QWORD[.]  |-  |stack:64|QWORD[.]  |r10|QWORD[.]  |stack:76|DWORD   <||@
  Comment 1356 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1356 {meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed}}  <||@
  Comment 1367 1340 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B135 -> B136 falseDestination: B135 -> B139  <||@
  Comment 1373 block B136 null  <||@
  Comment 1373 1342 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1373 1344 rsi|DWORD[.] = MOV [r10|QWORD[.] + 20] size: DWORD  <||@
  Comment 1377 1346 rdx|DWORD = MOV [rsi|DWORD[.] * 8 + 20] size: DWORD state [bci:42]  <||@
  Comment 1377 [rax:0, rsi:0, r10:0, stack:32, stack:64]at java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42, duringCall: false, rethrow: false]
              |0  |1                  |2  |3                  |4             |5              
     locals:  |-  |stack:32|QWORD[.]  |-  |stack:64|QWORD[.]  |r10|QWORD[.]  |stack:76|DWORD   <||@
  Comment 1377 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1384 1348 rsi|DWORD = MOV [rsi|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 1391 1350 rax|DWORD = MOV [rax|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 1398 1352 rax|DWORD = SUB (x: rax|DWORD, ~y: rsi|DWORD) size: DWORD  <||@
  Comment 1400 1354 CMP (x: rdx|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 1402 1356 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B136 -> B137 falseDestination: B136 -> B138  <||@
  Comment 1408 block B138 null  <||@
  Comment 1408 1368 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1408 1370 rax|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1413 1372 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 1422 12  <||@
  Comment 1432 block B4 null  <||@
  Comment 1432 42 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1432 44 CMP r14|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/RandomAccessSubList;, resolved>;compressed}  <||@
  Comment 1432 {meta{HotSpotType<Ljava/util/RandomAccessSubList;, resolved>;compressed}}  <||@
  Comment 1439 46 BRANCH trueDestinationProbability: 0.8661213947481707 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B8  <||@
  Comment 1445 block B5 null  <||@
  Comment 1445 48 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1445 50 rsi|DWORD[.] = MOV [r13|QWORD[.] + 24] size: DWORD  <||@
  Comment 1449 52 rsi|DWORD = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 1449 [r13:0, stack:64]at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 0, duringCall: false, rethrow: false]
              |0             |1                  |2  |3  |4  |5 
     locals:  |r13|QWORD[.]  |stack:32|QWORD[.]  |-  |-  |-  |-   <||@
  Comment 1449 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1456 54 CMP (x: rsi|DWORD, y: [r13|QWORD[.] + 12]) size: DWORD  <||@
  Comment 1460 56 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7  <||@
  Comment 1466 block B6 null  <||@
  Comment 1466 58 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1466 60 r10|DWORD = MOV [r13|QWORD[.] + 20] size: DWORD  <||@
  Comment 1470 62 rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1475 64 JUMP ~[] destination: B6 -> B10  <||@
  Comment 1480 block B36 null  <||@
  Comment 1480 356 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1480 358 CMP r14|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/RandomAccessSubList;, resolved>;compressed}  <||@
  Comment 1480 {meta{HotSpotType<Ljava/util/RandomAccessSubList;, resolved>;compressed}}  <||@
  Comment 1487 360 BRANCH trueDestinationProbability: 0.8661213947481707 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B63  <||@
  Comment 1493 block B37 null  <||@
  Comment 1493 362 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1493 364 r14|DWORD[.] = MOV [r13|QWORD[.] + 24] size: DWORD  <||@
  Comment 1497 366 r10|DWORD = MOV [r14|DWORD[.] * 8 + 12] size: DWORD state [bci:32]  <||@
  Comment 1497 [rdx:0, r13:0, r14:0, stack:64]at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 32, duringCall: false, rethrow: false]
              |0             |1                  |2  |3  |4  |5 
     locals:  |r13|QWORD[.]  |stack:32|QWORD[.]  |-  |-  |-  |- 
     stack:   |rdx|QWORD[.]  |                   |   |   |   |    <||@
  Comment 1497 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1505 368 CMP (x: r10|DWORD, y: [r13|QWORD[.] + 12]) size: DWORD  <||@
  Comment 1509 370 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B61  <||@
  Comment 1515 block B38 null  <||@
  Comment 1515 372 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1515 374 CMP [r13|QWORD[.] + 20] y: 0 size: DWORD  <||@
  Comment 1520 376 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B38 -> B39 falseDestination: B38 -> B40  <||@
  Comment 1526 block B40 null  <||@
  Comment 1526 388 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1526 390 r11|DWORD = MOV [r13|QWORD[.] + 16] size: DWORD  <||@
  Comment 1530 392 TEST (x: r11|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 1533 394 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B40 -> B41 falseDestination: B40 -> B42  <||@
  Comment 1539 block B42 null  <||@
  Comment 1539 406 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1539 408 rsi|DWORD = MOV [r14|DWORD[.] * 8 + 8] size: DWORD  <||@
  Comment 1547 410 rcx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotMethod<AbstractList.listIterator(int)>}  <||@
  Comment 1547 {meta{HotSpotMethod<AbstractList.listIterator(int)>}}  <||@
  Comment 1557 412 CMP (x: rcx|QWORD, y: [rsi|DWORD * 8 + 696]) size: QWORD  <||@
  Comment 1565 414 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B60  <||@
  Comment 1571 block B43 null  <||@
  Comment 1571 416 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1571 418 CMP rsi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed}  <||@
  Comment 1571 {meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed}}  <||@
  Comment 1577 420 BRANCH trueDestinationProbability: 0.5044648172401477 condition: = trueDestination: B43 -> B44 falseDestination: B43 -> B47  <||@
  Comment 1583 block B44 null  <||@
  Comment 1583 422 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1583 424 rsi|DWORD[.] = MOV [r14|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 1591 426 rsi|DWORD = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD state [bci:32]  <||@
  Comment 1591 [rdx:0, r13:0, r14:0, stack:64]at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 32, duringCall: false, rethrow: false]
              |0             |1                  |2  |3  |4  |5 
     locals:  |r13|QWORD[.]  |stack:32|QWORD[.]  |-  |-  |-  |- 
     stack:   |rdx|QWORD[.]  |                   |   |   |   |    <||@
  Comment 1591 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1598 428 CMP (x: r11|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 1601 430 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B44 -> B45 falseDestination: B44 -> B46  <||@
  Comment 1607 block B46 null  <||@
  Comment 1607 442 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1607 444 stack:36|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 1611 446 JUMP ~[] destination: B46 -> B55  <||@
  Comment 1611 block B55 null  <||@
  Comment 1611 506 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1611 508 rcx|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 1615 510 r8|QWORD = LEA [rcx|QWORD + 56] size: QWORD  <||@
  Comment 1619 512 CMP (x: r8|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 1623 514 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B55 -> B56 falseDestination: B55 -> B57  <||@
  Comment 1629 block B57 null  <||@
  Comment 1629 544 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1629 546 MOV (x: [r15|QWORD + 96], y: r8|QWORD) size: QWORD  <||@
  Comment 1633 548 AMD64PREFETCH ~[rcx|QWORD + 248] instr: 0  <||@
  Comment 1640 550 rsi|QWORD[*] = MOVE rcx|QWORD moveKind: QWORD  <||@
  Comment 1643 552 JUMP ~[] destination: B57 -> B58  <||@
  Comment 1643 block B58 null  <||@
  Comment 1643 554 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1643 556 rcx|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD  <||@
  Comment 1646 558 r8|QWORD[*] = LEA [rsi|QWORD[*] + 24] size: QWORD  <||@
  Comment 1650 560 r8|QWORD[.] = MOVE r8|QWORD[*] moveKind: QWORD  <||@
  Comment 1650 562 r9|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/SubList$1;, resolved>}  <||@
  Comment 1650 {meta{HotSpotType<Ljava/util/SubList$1;, resolved>}}  <||@
  Comment 1660 564 r9|QWORD = MOV [r9|QWORD + 168] size: QWORD  <||@
  Comment 1667 566 MOV (x: [rsi|QWORD[*]], y: r9|QWORD) size: QWORD  <||@
  Comment 1670 568 MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/SubList$1;, resolved>;compressed}  <||@
  Comment 1670 {meta{HotSpotType<Ljava/util/SubList$1;, resolved>;compressed}}  <||@
  Comment 1677 570 MOV (x: [rsi|QWORD[*] + 12], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 1681 572 r8|DWORD[.] = COMPRESSPOINTER (input: r8|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@68a0169d encoding: base: 0 shift: 3  <||@
  Comment 1685 574 MOV (x: [rsi|QWORD[*] + 16], y: r8|DWORD[.]) size: DWORD  <||@
  Comment 1689 576 r13|DWORD[.] = COMPRESSPOINTER (input: r13|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@68a0169d encoding: base: 0 shift: 3  <||@
  Comment 1693 578 MOV (x: [rsi|QWORD[*] + 20], y: r13|DWORD[.]) size: DWORD  <||@
  Comment 1697 580 r8|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>}  <||@
  Comment 1697 {meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>}}  <||@
  Comment 1707 582 r8|QWORD = MOV [r8|QWORD + 168] size: QWORD  <||@
  Comment 1714 584 MOV (x: [rsi|QWORD[*] + 24], y: r8|QWORD) size: QWORD  <||@
  Comment 1718 586 MOV [rsi|QWORD[*] + 32] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed}  <||@
  Comment 1718 {meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed}}  <||@
  Comment 1725 588 MOV (x: [rsi|QWORD[*] + 36], y: r11|DWORD) size: DWORD  <||@
  Comment 1729 590 MOV [rsi|QWORD[*] + 40] y: -1 size: DWORD  <||@
  Comment 1736 592 MOV (x: [rsi|QWORD[*] + 44], y: r10|DWORD) size: DWORD  <||@
  Comment 1740 594 MOV (x: [rsi|QWORD[*] + 48], y: r14|DWORD[.]) size: DWORD  <||@
  Comment 1744 596 MOV (x: [rsi|QWORD[*] + 52], y: r14|DWORD[.]) size: DWORD  <||@
  Comment 1748 598 r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1751 600 r10|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 1754 602 rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1759 604 JUMP ~[] destination: B58 -> B64  <||@
  Comment 1764 block B47 null  <||@
  Comment 1764 448 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1764 450 CMP rsi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Collections$EmptyList;, resolved>;compressed}  <||@
  Comment 1764 {meta{HotSpotType<Ljava/util/Collections$EmptyList;, resolved>;compressed}}  <||@
  Comment 1770 452 BRANCH trueDestinationProbability: 0.525228255646324 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B51  <||@
  Comment 1776 block B48 null  <||@
  Comment 1776 454 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1776 456 CMP r11|DWORD y: 1 size: DWORD  <||@
  Comment 1780 458 BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B48 -> B49 falseDestination: B48 -> B50  <||@
  Comment 1786 block B49 null  <||@
  Comment 1786 460 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1786 462 stack:36|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1794 464 JUMP ~[] destination: B49 -> B55  <||@
  Comment 1799 block B51 null  <||@
  Comment 1799 476 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1799 478 CMP rsi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeInputList;, resolved>;compressed}  <||@
  Comment 1799 {meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeInputList;, resolved>;compressed}}  <||@
  Comment 1805 480 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B59  <||@
  Comment 1811 block B52 null  <||@
  Comment 1811 482 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1811 484 rsi|DWORD = MOV [r14|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 1819 486 CMP (x: r11|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 1822 488 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B52 -> B53 falseDestination: B52 -> B54  <||@
  Comment 1828 block B54 null  <||@
  Comment 1828 500 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1828 502 stack:36|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 1832 504 JUMP ~[] destination: B54 -> B55  <||@
  Comment 1837 block B30 null  <||@
  Comment 1837 274 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1837 276 stack:36|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1842 278 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 1842 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 1852 280 rdx|DWORD = MOVE input: int[6|0x6]  <||@
  Comment 1857 282 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1862 284 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:32]  <||@
  Comment 1862 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 1867 [r13:0, r14:0, stack:64]at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 32, duringCall: false, rethrow: false]
              |0             |1                  |2  |3  |4  |5 
     locals:  |r13|QWORD[.]  |stack:32|QWORD[.]  |-  |-  |-  |- 
     stack:   |r14|QWORD[.]  |                   |   |   |   |    <||@
  Comment 1868 286 rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1871 288 r10|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 1876 290 rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1881 292 JUMP ~[] destination: B30 -> B32  <||@
  Comment 1886 block B63 null  <||@
  Comment 1886 644 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1886 646 stack:56|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1891 648 rsi|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 1894 650 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<AbstractCollection.iterator()> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:34]  <||@
  Comment 1894 7  <||@
  Comment 1911 {HotSpotMethod<AbstractCollection.iterator()>}  <||@
  Comment 1916 [stack:40, stack:64]at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34, duringCall: true, rethrow: false]
              |0  |1                  |2  |3                  |4  |5 
     locals:  |-  |stack:32|QWORD[.]  |-  |stack:56|QWORD[.]  |-  |-   <||@
  Comment 1917 652 r11|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1922 654 r10|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1925 656 rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1930 658 JUMP ~[] destination: B63 -> B64  <||@
  Comment 1935 block B8 null  <||@
  Comment 1935 72 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1935 74 CMP r14|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashSet;, resolved>;compressed}  <||@
  Comment 1935 {meta{HotSpotType<Ljava/util/HashSet;, resolved>;compressed}}  <||@
  Comment 1942 76 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B147  <||@
  Comment 1948 block B9 null  <||@
  Comment 1948 78 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1948 80 rax|DWORD[.] = MOV [r13|QWORD[.] + 12] size: DWORD  <||@
  Comment 1952 82 r10|DWORD = MOV [rax|DWORD[.] * 8 + 20] size: DWORD state [bci:0]  <||@
  Comment 1952 [r13:0, stack:64]at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 0, duringCall: false, rethrow: false]
              |0             |1                  |2  |3  |4  |5 
     locals:  |r13|QWORD[.]  |stack:32|QWORD[.]  |-  |-  |-  |-   <||@
  Comment 1952 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1960 84 rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1965 86 JUMP ~[] destination: B9 -> B10  <||@
  Comment 1970 block B140 null  <||@
  Comment 1970 1384 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1970 1388 CMP r9|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap$KeyIterator;, resolved>;compressed}  <||@
  Comment 1970 {meta{HotSpotType<Ljava/util/HashMap$KeyIterator;, resolved>;compressed}}  <||@
  Comment 1977 1390 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B140 -> B141 falseDestination: B140 -> B144  <||@
  Comment 1983 block B141 null  <||@
  Comment 1983 1392 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1983 1394 rax|DWORD[.] = MOV [r10|QWORD[.] + 20] size: DWORD  <||@
  Comment 1987 1396 TEST (x: rax|DWORD[.], y: rax|DWORD[.]) size: DWORD  <||@
  Comment 1989 1398 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B141 -> B142 falseDestination: B141 -> B143  <||@
  Comment 1995 block B142 null  <||@
  Comment 1995 1400 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1995 1402 rax|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 2000 1404 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 2009 12  <||@
  Comment 2019 block B56 null  <||@
  Comment 2019 516 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2019 518 stack:40|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 2024 520 stack:44|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 2029 522 stack:56|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 2034 524 rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 2034 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 2044 526 rsi|QWORD = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 2047 528 rdx|DWORD = MOVE input: int[10|0xa]  <||@
  Comment 2052 530 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 2057 532 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:9, 2, 34, 15, 2, 1, 34]  <||@
  Comment 2057 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 2062 [r13:0, r14:0, stack:40, stack:64]at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 9, duringCall: false, rethrow: false]
              |0               |1              
     locals:  |r14|DWORD[.]    |stack:40|DWORD 
     stack:   |stack:40|DWORD  |stack:36|DWORD 
  at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2, duringCall: true, rethrow: false]
              |0             |1              
     locals:  |r14|DWORD[.]  |stack:40|DWORD 
  at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34, duringCall: true, rethrow: false]
              |0                                                                             |1  |2 
     locals:  |-                                                                             |-  |- 
     stack:   |vobject:SubList$1:0{val$index=int[0|0x0],i=Object[null],this$0=r13|QWORD[.]}  |   |  
  at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15, duringCall: true, rethrow: false]
              |0                                                                             |1 
     locals:  |-                                                                             |- 
     stack:   |vobject:SubList$1:0{val$index=int[0|0x0],i=Object[null],this$0=r13|QWORD[.]}  |  
  at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2, duringCall: true, rethrow: false]
              |0            
     locals:  |r13|QWORD[.] 
  at java.util.SubList.iterator(AbstractList.java:691) [bci: 1, duringCall: true, rethrow: false]
              |0            
     locals:  |r13|QWORD[.] 
  at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34, duringCall: true, rethrow: false]
              |0  |1                  |2  |3                  |4  |5 
     locals:  |-  |stack:32|QWORD[.]  |-  |stack:56|QWORD[.]  |-  |-   <||@
  Comment 2063 534 rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 2066 536 r11|DWORD = MOVE stack:40|DWORD moveKind: DWORD  <||@
  Comment 2071 538 r10|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 2076 540 rdx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 2081 542 JUMP ~[] destination: B56 -> B58  <||@
  Comment 2086 block B11 null  <||@
  Comment 2086 94 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2086 96 rsi|DWORD = MOV [rdx|QWORD[.] + 8] size: DWORD  <||@
  Comment 2089 98 rcx|QWORD[.] = MOV [rsi|DWORD * 8 + 224] size: QWORD  <||@
  Comment 2097 100 r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:void]  <||@
  Comment 2097 {Object[Class:void]}  <||@
  Comment 2107 102 CMP (x: r11|QWORD[.], y: rcx|QWORD[.]) size: QWORD  <||@
  Comment 2110 104 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B13  <||@
  Comment 2116 block B13 null  <||@
  Comment 2116 114 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2116 116 rcx|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 2120 118 r11|DWORD = SHL r10|DWORD y: 2 size: DWORD  <||@
  Comment 2127 120 r11|DWORD = LEA [r11|DWORD + 23] size: DWORD  <||@
  Comment 2131 122 r11|DWORD = AND r11|DWORD y: -8 size: DWORD  <||@
  Comment 2135 124 r11|QWORD = MOVSXD r11|DWORD size: QWORD  <||@
  Comment 2138 126 r8|QWORD = ADD (x: r11|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 2144 128 CMP (x: r8|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 2148 130 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B15  <||@
  Comment 2154 block B15 null  <||@
  Comment 2154 152 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2154 154 MOV (x: [r15|QWORD + 96], y: r8|QWORD) size: QWORD  <||@
  Comment 2158 156 AMD64PREFETCH ~[r11|QWORD + rcx|QWORD * 1 + 192] instr: 0  <||@
  Comment 2167 158 AMD64PREFETCH ~[r11|QWORD + rcx|QWORD * 1 + 256] instr: 0  <||@
  Comment 2176 160 AMD64PREFETCH ~[r11|QWORD + rcx|QWORD * 1 + 320] instr: 0  <||@
  Comment 2185 162 AMD64PREFETCH ~[r11|QWORD + rcx|QWORD * 1 + 384] instr: 0  <||@
  Comment 2194 164 MOV (x: [rcx|QWORD + 12], y: r10|DWORD) size: DWORD  <||@
  Comment 2198 166 MOV [rcx|QWORD] y: 1 size: QWORD  <||@
  Comment 2205 168 MOV (x: [rcx|QWORD + 8], y: rsi|DWORD) size: DWORD  <||@
  Comment 2208 170 rsi|QWORD = MOVE input: long[16|0x10]  <||@
  Comment 2215 172 JUMP ~[] destination: B15 -> B16  <||@
  Comment 2220 block B17 loop 0 depth 1 header:2310|LoopBegin  <||@
  Comment 2220 180 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 2224 182 MOV (x: [rcx|QWORD + rsi|QWORD * 1], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2228 184 rsi|QWORD = LEA [rsi|QWORD + 8] size: QWORD  <||@
  Comment 2232 186 JUMP ~[] destination: B17 -> B16  <||@
  Comment 2232 block B16 loop 0 depth 1 header:2310|LoopBegin  <||@
  Comment 2232 174 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2232 176 CMP (x: r11|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 2235 178 BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B16 -> B17 falseDestination: B16 -> B18  <||@
  Comment 2237 block B18 null  <||@
  Comment 2237 188 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2237 190 rcx|QWORD[.] = MOVE rcx|QWORD moveKind: QWORD  <||@
  Comment 2237 192 rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 2240 194 JUMP ~[] destination: B18 -> B19  <||@
  Comment 2240 block B19 null  <||@
  Comment 2240 196 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2240 198 CMP [rsi|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Class;, resolved>;compressed}  <||@
  Comment 2240 {meta{HotSpotType<[Ljava/lang/Class;, resolved>;compressed}}  <||@
  Comment 2247 200 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B23  <||@
  Comment 2253 block B20 null  <||@
  Comment 2253 202 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2253 204 CMP r14|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList$SubList;, resolved>;compressed}  <||@
  Comment 2253 {meta{HotSpotType<Ljava/util/ArrayList$SubList;, resolved>;compressed}}  <||@
  Comment 2260 206 BRANCH trueDestinationProbability: 0.9362023508733385 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B22  <||@
  Comment 2266 block B21 null  <||@
  Comment 2266 208 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2266 210 r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 2269 212 JUMP ~[] destination: B21 -> B26  <||@
  Comment 2274 block B22 null  <||@
  Comment 2274 214 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2274 216 rdx|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 2277 218 JUMP ~[] destination: B22 -> B36  <||@
  Comment 2282 block B14 null  <||@
  Comment 2282 132 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2282 134 rsi|QWORD = UNCOMPRESSPOINTER (input: rsi|DWORD, ~baseRegister: -) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@68a0169d encoding: base: 0 shift: 3  <||@
  Comment 2286 136 rdx|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 2289 138 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 2294 140 stack:36|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 2299 142 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:4]  <||@
  Comment 2299 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 2304 [r13:0, stack:64]at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 4, duringCall: false, rethrow: false]
              |0               |1                  |2  |3  |4  |5 
     locals:  |r13|QWORD[.]    |stack:32|QWORD[.]  |-  |-  |-  |- 
     stack:   |stack:36|DWORD  |                   |   |   |   |    <||@
  Comment 2305 144 rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 2308 146 r10|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 2313 148 rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 2318 150 JUMP ~[] destination: B14 -> B19  <||@
  Comment 2320 block B41 null  <||@
  Comment 2320 396 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2320 398 r10|DWORD = MOVE input: int[-330259|0xfffffffffffaf5ed]  <||@
  Comment 2326 404 JUMP ~[] destination: B41 -> B62  <||@
  Comment 2326 block B62 null  <||@
  Comment 2326 636 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2326 382 r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 2329 384 rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 2334 638 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 2341 640 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2348 642 DEOPT info [bci:32]  <||@
  Comment 2348 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 2353 [rdx:0, r11:0, r13:0]at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 32, duringCall: false, rethrow: false]
              |0             |1             |2  |3  |4  |5 
     locals:  |r13|QWORD[.]  |rdx|QWORD[.]  |-  |-  |-  |- 
     stack:   |r11|QWORD[.]  |              |   |   |   |    <||@
  Comment 2354 block B126 null  <||@
  Comment 2354 1260 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2354 1256 stack:76|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 2358 1262 r14|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD  <||@
  Comment 2363 1264 JUMP ~[] destination: B126 -> B127  <||@
  Comment 2363 block B127 null  <||@
  Comment 2363 1266 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2363 1268 MOV [r15|QWORD + 668] y: -309803 size: DWORD  <||@
  Comment 2374 1270 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2381 1272 DEOPT info [bci:119]  <||@
  Comment 2381 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 2386 [r10:0, r14:0, stack:32, stack:64]at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119, duringCall: false, rethrow: false]
              |0                  |1                  |2             |3                  |4             |5              
     locals:  |-                  |stack:32|QWORD[.]  |-             |stack:64|QWORD[.]  |r10|QWORD[.]  |stack:76|DWORD 
     stack:   |stack:64|QWORD[.]  |stack:76|DWORD     |r14|QWORD[.]  |                   |              |                 <||@
  Comment 2387 block B143 null  <||@
  Comment 2387 1406 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2387 1408 r11|DWORD = MOVE input: int[-318739|0xfffffffffffb22ed]  <||@
  Comment 2393 1410 rdi|DWORD = MOVE stack:76|DWORD moveKind: DWORD  <||@
  Comment 2397 1412 r8|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 2402 1414 JUMP ~[] destination: B143 -> B145  <||@
  Comment 2402 block B145 null  <||@
  Comment 2402 1426 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2402 1428 MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD  <||@
  Comment 2409 1430 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2416 1432 DEOPT info [bci:42]  <||@
  Comment 2416 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 2421 [r8:0, r10:0, stack:64]at java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42, duringCall: false, rethrow: false]
              |0  |1                  |2  |3            |4             |5         
     locals:  |-  |stack:32|QWORD[.]  |-  |r8|QWORD[.]  |r10|QWORD[.]  |rdi|DWORD   <||@
  Comment 2422 block B144 null  <||@
  Comment 2422 1416 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2422 1418 r11|DWORD = MOVE input: int[-317747|0xfffffffffffb26cd]  <||@
  Comment 2428 1420 rdi|DWORD = MOVE stack:76|DWORD moveKind: DWORD  <||@
  Comment 2432 1422 r8|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 2437 1424 JUMP ~[] destination: B144 -> B145  <||@
  Comment 2439 block B23 null  <||@
  Comment 2439 220 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2439 222 stack:36|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 2444 224 MOV [r15|QWORD + 668] y: -320051 size: DWORD  <||@
  Comment 2455 226 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2462 228 DEOPT info [bci:4]  <||@
  Comment 2462 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 2467 [r13:0, stack:64]at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 4, duringCall: false, rethrow: false]
              |0               |1                  |2  |3  |4  |5 
     locals:  |r13|QWORD[.]    |stack:32|QWORD[.]  |-  |-  |-  |- 
     stack:   |stack:36|DWORD  |                   |   |   |   |    <||@
  Comment 2468 block B146 null  <||@
  Comment 2468 1434 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2468 1436 r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1368693834]  <||@
  Comment 2468 {Object[d.a@1368693834]}  <||@
  Comment 2478 1438 MOV [r15|QWORD + 668] y: -305947 size: DWORD  <||@
  Comment 2489 1440 MOV (x: [r15|QWORD + 680], y: r11|QWORD[.]) size: QWORD  <||@
  Comment 2496 1442 DEOPT info [bci:37]  <||@
  Comment 2496 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 2501 [r10:0, stack:32, stack:64]at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 37, duringCall: false, rethrow: false]
              |0             |1                  |2  |3                  |4  |5 
     locals:  |-             |stack:32|QWORD[.]  |-  |stack:64|QWORD[.]  |-  |- 
     stack:   |r10|QWORD[.]  |                   |   |                   |   |    <||@
  Comment 2502 block B12 null  <||@
  Comment 2502 106 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2502 108 MOV [r15|QWORD + 668] y: -579169 size: DWORD  <||@
  Comment 2513 110 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2520 112 DEOPT info [bci:4]  <||@
  Comment 2520 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 2525 [r13:0, stack:64]at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 4, duringCall: false, rethrow: false]
              |0             |1                  |2  |3  |4  |5 
     locals:  |r13|QWORD[.]  |stack:32|QWORD[.]  |-  |-  |-  |- 
     stack:   |r10|DWORD     |                   |   |   |   |    <||@
  Comment 2526 block B45 null  <||@
  Comment 2526 432 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2526 434 r10|DWORD = MOVE input: int[-332563|0xfffffffffffaeced]  <||@
  Comment 2532 440 JUMP ~[] destination: B45 -> B62  <||@
  Comment 2537 block B78 null  <||@
  Comment 2537 794 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2537 796 r8|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 2540 798 r11|DWORD = MOVE input: int[-270619|0xfffffffffffbdee5]  <||@
  Comment 2546 800 JUMP ~[] destination: B78 -> B145  <||@
  Comment 2551 block B39 null  <||@
  Comment 2551 378 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2551 380 r10|DWORD = MOVE input: int[-328211|0xfffffffffffafded]  <||@
  Comment 2557 386 JUMP ~[] destination: B39 -> B62  <||@
  Comment 2562 block B60 null  <||@
  Comment 2562 616 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2562 618 r10|DWORD = MOVE input: int[-330035|0xfffffffffffaf6cd]  <||@
  Comment 2568 624 JUMP ~[] destination: B60 -> B62  <||@
  Comment 2573 block B53 null  <||@
  Comment 2573 490 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2573 492 r10|DWORD = MOVE input: int[-333843|0xfffffffffffae7ed]  <||@
  Comment 2579 498 JUMP ~[] destination: B53 -> B62  <||@
  Comment 2584 block B80 null  <||@
  Comment 2584 810 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2584 812 r8|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 2587 814 r11|DWORD = MOVE input: int[-265747|0xfffffffffffbf1ed]  <||@
  Comment 2593 816 JUMP ~[] destination: B80 -> B145  <||@
  Comment 2598 block B59 null  <||@
  Comment 2598 606 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2598 608 r10|DWORD = MOVE input: int[-333107|0xfffffffffffaeacd]  <||@
  Comment 2604 614 JUMP ~[] destination: B59 -> B62  <||@
  Comment 2609 block B139 null  <||@
  Comment 2609 1374 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2609 1376 r11|DWORD = MOVE input: int[-314163|0xfffffffffffb34cd]  <||@
  Comment 2615 1378 rdi|DWORD = MOVE stack:76|DWORD moveKind: DWORD  <||@
  Comment 2619 1380 r8|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 2624 1382 JUMP ~[] destination: B139 -> B145  <||@
  Comment 2629 block B81 null  <||@
  Comment 2629 818 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2629 820 r8|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 2632 822 r11|DWORD = MOVE input: int[-265491|0xfffffffffffbf2ed]  <||@
  Comment 2638 824 JUMP ~[] destination: B81 -> B145  <||@
  Comment 2643 block B128 null  <||@
  Comment 2643 1274 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2643 1276 r8|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 2646 1278 r11|DWORD = MOVE input: int[-295187|0xfffffffffffb7eed]  <||@
  Comment 2652 1280 JUMP ~[] destination: B128 -> B145  <||@
  Comment 2657 block B50 null  <||@
  Comment 2657 466 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2657 468 r10|DWORD = MOVE input: int[-332819|0xfffffffffffaebed]  <||@
  Comment 2663 474 JUMP ~[] destination: B50 -> B62  <||@
  Comment 2668 block B95 null  <||@
  Comment 2668 996 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2668 998 r8|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 2671 1000 r11|DWORD = MOVE input: int[-280083|0xfffffffffffbb9ed]  <||@
  Comment 2677 1002 JUMP ~[] destination: B95 -> B145  <||@
  Comment 2682 block B96 null  <||@
  Comment 2682 1004 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2682 1006 r8|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 2685 1008 r11|DWORD = MOVE input: int[-277267|0xfffffffffffbc4ed]  <||@
  Comment 2691 1010 JUMP ~[] destination: B96 -> B145  <||@
  Comment 2696 block B97 null  <||@
  Comment 2696 1012 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2696 1014 r8|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 2699 1016 r11|DWORD = MOVE input: int[-273971|0xfffffffffffbd1cd]  <||@
  Comment 2705 1018 JUMP ~[] destination: B97 -> B145  <||@
  Comment 2710 block B93 null  <||@
  Comment 2710 942 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2710 944 r8|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 2713 946 r11|DWORD = MOVE input: int[-288027|0xfffffffffffb9ae5]  <||@
  Comment 2719 948 JUMP ~[] destination: B93 -> B145  <||@
  Comment 2724 block B28 null  <||@
  Comment 2724 258 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2724 260 r10|DWORD = MOVE input: int[-324115|0xfffffffffffb0ded]  <||@
  Comment 2730 262 JUMP ~[] destination: B28 -> B34  <||@
  Comment 2730 block B34 null  <||@
  Comment 2730 344 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2730 346 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 2737 348 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2744 350 DEOPT info [bci:32]  <||@
  Comment 2744 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 2749 [r13:0, r14:0, stack:64]at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 32, duringCall: false, rethrow: false]
              |0             |1                  |2  |3  |4  |5 
     locals:  |r13|QWORD[.]  |stack:32|QWORD[.]  |-  |-  |-  |- 
     stack:   |r14|QWORD[.]  |                   |   |   |   |    <||@
  Comment 2750 block B129 null  <||@
  Comment 2750 1282 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2750 1284 r8|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 2753 1286 r11|DWORD = MOVE input: int[-291379|0xfffffffffffb8dcd]  <||@
  Comment 2759 1288 JUMP ~[] destination: B129 -> B145  <||@
  Comment 2764 block B61 null  <||@
  Comment 2764 626 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2764 628 r10|DWORD = MOVE input: int[-327443|0xfffffffffffb00ed]  <||@
  Comment 2770 634 JUMP ~[] destination: B61 -> B62  <||@
  Comment 2775 block B3 null  <||@
  Comment 2775 36 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2775 38 r10|DWORD = MOVE input: int[-336915|0xfffffffffffadbed]  <||@
  Comment 2781 40 JUMP ~[] destination: B3 -> B148  <||@
  Comment 2781 block B148 null  <||@
  Comment 2781 1450 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2781 1452 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 2788 1454 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2795 1456 DEOPT info [bci:0]  <||@
  Comment 2795 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 2800 [r13:0, stack:64]at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 0, duringCall: false, rethrow: false]
              |0             |1                  |2  |3  |4  |5 
     locals:  |r13|QWORD[.]  |stack:32|QWORD[.]  |-  |-  |-  |-   <||@
  Comment 2801 block B7 null  <||@
  Comment 2801 66 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2801 68 r10|DWORD = MOVE input: int[-340243|0xfffffffffffaceed]  <||@
  Comment 2807 70 JUMP ~[] destination: B7 -> B148  <||@
  Comment 2809 block B107 null  <||@
  Comment 2809 1116 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2809 1118 rsi|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD  <||@
  Comment 2813 1120 stack:76|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 2817 1122 JUMP ~[] destination: B107 -> B108  <||@
  Comment 2817 block B108 null  <||@
  Comment 2817 1124 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2817 1126 MOV [r15|QWORD + 668] y: -302107 size: DWORD  <||@
  Comment 2828 1128 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2835 1130 DEOPT info [bci:68, 1, 114]  <||@
  Comment 2835 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 2840 [rax:0, rsi:0, r10:0, stack:32, stack:64]at java.util.HashMap$HashIterator.nextNode(HashMap.java:1446) [bci: 68, duringCall: false, rethrow: false]
              |0             |1             |2            
     locals:  |r10|QWORD[.]  |rax|QWORD[.]  |rsi|DWORD[.] 
  at java.util.HashMap$KeyIterator.next(HashMap.java:1466) [bci: 1, duringCall: true, rethrow: false]
              |0 
     locals:  |- 
  at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3                  |4             |5              
     locals:  |-                  |stack:32|QWORD[.]  |-  |stack:64|QWORD[.]  |r10|QWORD[.]  |stack:76|DWORD 
     stack:   |stack:64|QWORD[.]  |stack:76|DWORD     |   |                   |              |                 <||@
  Comment 2841 block B33 null  <||@
  Comment 2841 338 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2841 340 r10|DWORD = MOVE input: int[-323347|0xfffffffffffb10ed]  <||@
  Comment 2847 342 JUMP ~[] destination: B33 -> B34  <||@
  Comment 2849 block B79 null  <||@
  Comment 2849 802 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2849 804 r8|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 2852 806 r11|DWORD = MOVE input: int[-268819|0xfffffffffffbe5ed]  <||@
  Comment 2858 808 JUMP ~[] destination: B79 -> B145  <||@
  Comment 2863 block B133 null  <||@
  Comment 2863 1316 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2863 1318 r11|DWORD = MOVE input: int[-312851|0xfffffffffffb39ed]  <||@
  Comment 2869 1320 rdi|DWORD = MOVE stack:76|DWORD moveKind: DWORD  <||@
  Comment 2873 1322 r8|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 2878 1324 JUMP ~[] destination: B133 -> B145  <||@
  Comment 2883 block B89 null  <||@
  Comment 2883 902 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2883 904 r8|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 2886 906 r11|DWORD = MOVE input: int[-282907|0xfffffffffffbaee5]  <||@
  Comment 2892 908 JUMP ~[] destination: B89 -> B145  <||@
  Comment 2897 block B147 null  <||@
  Comment 2897 1444 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2897 1446 r10|DWORD = MOVE input: int[-341043|0xfffffffffffacbcd]  <||@
  Comment 2903 1448 JUMP ~[] destination: B147 -> B148  <||@
  Comment 2905 block B137 null  <||@
  Comment 2905 1358 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2905 1360 r11|DWORD = MOVE input: int[-317459|0xfffffffffffb27ed]  <||@
  Comment 2911 1362 rdi|DWORD = MOVE stack:76|DWORD moveKind: DWORD  <||@
  Comment 2915 1364 r8|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 2920 1366 JUMP ~[] destination: B137 -> B145  <||@
  Comment 2925 block B72 null  <||@
  Comment 2925 732 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2925 734 r8|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 2928 736 r11|DWORD = MOVE input: int[-262419|0xfffffffffffbfeed]  <||@
  Comment 2934 738 JUMP ~[] destination: B72 -> B145  <||@
  Comment 2939 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 2939 4  <||@
  Comment 2945 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 2945 5  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-10026[java.util.AbstractCollection.toArray(Object[])]"
  method "HotSpotCompilation-10026[java.util.AbstractCollection.toArray(Object[])]"
  date 1527005233016
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 107cb5cc0 448b560849c1e203493bc20f858f01b5fe900f1f80000000000f1f800000000089842400c0feff4883ec5848896c24504c8bee48895424408502458b75084181fe0fad00f80f854d050000418b75208b34f50c000000413b750c0f85770a0000418b7518448bd6443b520c0f8fb50700004181fe0fad00f80f854a0500004c8bf2418b7520448b14f50c000000453b550c0f85820a000041837d18000f8c020a0000498b77604c8d5e284d3b5f700f87790600004d895f600f1886e80000004c8bde49b8406f05c0070000004d8b80a80000004c8906c74608e8ad00f849b800000000ffffffff4c89460c4489561444896618458b55144489561c49c1ed0344896e204d8bd34d8bde4c895424284c895c2420458b430c4489442434418bf04c8bce49ffc9493bf10f87090000004585c00f856d080000458b4a0844894c2438418b4b08894c243c48bb00e01b1701000000bf00000000e9390100000f1f40004181f9e8ad00f80f8540010000418b72208b04f518000000418b6a0c3be80f84e90900008b34f520000000448b2cf50c000000453b6a140f85a80800003bc50f8e730800008b34f5140000008b04f50c000000448bed45036a1c413bc50f8e5e090000413bc50f861d0800008bc5ffc04189420c41896a1048c1e603428b74ae108bc648c1e003448bee4c8bf04d85f60f8480000000418b7608488b14cde8000000448b420c4963c0483b14f00f84630000004c897424084183f8180f8510070000448bc649c1e003493bd00f84440000004c8b04f520000000418b00bd00000000e926000000660f1f840000000000448bf541c1e603458d76084d63f64f8b3430493bd60f8438000000ffc53bc57fdfe9bc06000045896cbb10498d74bb1048c1ee094488241e8505b890bdfcffc7448b442434443bc70f8fc2feffffe953020000488914f518000000ebc94181f919ef01f80f85b1000000418b4210813cc50800000073ef01f80f85b9070000418b72148b2cf5140000008b34f510000000448b2cc50c000000458bf5442bf6413bee0f8e820700008b34c5180000008b2cf50c0000003b2cc5140000000f85590700008b2cf508000000458bf541ffc681fd8faf00f80f85000100008b34f510000000443b2cf50c0000000f830208000044892cc510000000448934c50c00000048c1e603428b74ae108bc648c1e003448bee4c8bf0e982feffff4181f9e39e00f80f8546070000418b7214418504f4418b421c8b2cc518000000413b6a0c0f85be06000041897218498bea48c1ed094488641d008b2cf51800000041896a14448b2cf510000000458bf549c1e60385ed0f8526feffff8974241c8b04c5240000008b2cc50c000000418b721048c1e003e93d00000066660f1f8400000000003bee0f86010700008bd6ffc2418952108b74b010418972144d8bc249c1e8094588241885f60f85d2fdffff8505258fbdfc8bf23bee7fc9e9c1fdffff81fdc8b101f80f853f0000008b34f51c000000443b2cf50c0000000f834906000044892cc510000000448934c50c00000048c1e603428b74ae108bd648c1e203448bee4c8bf2e976fdffff448974241c89442418897c241448c1e603418bd544896c241048b8ffffffffffffffff0f1f440000e87c01b5fe908b742418448b6c241044892cf510000000448b74241c448934f50c000000488bf048c1ee03448bee4c8bf08b7c241448bb00e01b17010000008b4c243c448b4c24384c8b5c24204c8b542428e9f7fcffff897c2414817c2438e8ad00f84c8b5424280f852d000000418b42208b04c518000000413b420c0f850d060000488b442420488b6c24504883c4588505108ebdfcc5f877c3817c243819ef01f80f856a020000418b4210813cc50800000073ef01f80f85d4040000418b72148b14f5140000008b34f5100000008b04c50c0000002bc63bd00f8fd9050000488b442420488b6c24504883c4588505b28dbdfcc5f877c34181fe7dee01f80f85ea010000418b75188b34f50c000000413b750c0f8537050000458b5514488b542440e99ffaffff4181fe7dee01f80f8589010000458b7518468b14f50c000000453b550c0f85e104000041837d14000f8c01040000458b5d104585db0f8c0d030000428b34f50800000048b900e8dd2301000000483b0cf5b80200000f85df03000081fe8faf00f80f85b5000000428b34f5100000008b34f50c000000443bde0f8f970300008974243c498b4f604c8d41384d3b47700f87860100004d8947600f1881f8000000488bf1488bce4c8d461849b9c8780fc0070000004d8b89a80000004c890ec7460819ef01f84489660c49c1e8034489461049c1ed0344896e1449b8987b0fc0070000004d8b80a80000004c894618c7462073ef01f844895e24c74628ffffffff4489562c44897630448976344c8bda4c8bd1488b542440e925faffff81fe3b3100f80f85170000004183fb010f8d67030000c744243c00000000e944ffffff81fec8b101f80f8513030000428b34f510000000443bde0f8fe90200008974243ce91effffff448954243c48be680b00c007000000ba06000000b901000000e8d5092eff90488bf0448b54243c488b542440e961f9ffff4889542428498bf548b8ffffffffffffffff0f1f8000000000e8a4feb4fe904c8b5c24284c8bd0488b542440e97af9ffff4181fec37100f80f85b5030000418b450c448b14c514000000488b542440e9b5f8ffff4181f9e39e00f80f85b7010000418b421485c00f8588010000488b442420488b6c24504883c4588505678bbdfcc5f877c344895c24384489542434488954242848ba680b00c007000000488bf2ba0a000000b901000000e812092eff90488bf0448b5c2438448b542434488b542428e945feffff8b7208488b0cf5e000000049bb107c03c0060000004c3bd90f8482010000498b4f60458bda41c1e302458d5b174183e3f84d63db4d8bc34c03c14d3b47700f87800000004d894760410f18840bc0000000410f18840b00010000410f18840b40010000410f18840b800100004489510c48c7010100000089710848c7c610000000e90c0000000f1f40004c892431488d76084c3bde7ff3488bf1817e08212400f80f85ba0000004181fe0fad00f80f85080000004c8bf6e99ff7ffff488bd6e9defcffff48c1e603418bd2b901000000448954243ce820082eff90488bf0448b54243c488b542440ebb041baedf5faff4c8bda488b5424404589979c0200004d89a7a8020000e80d10b5fe90897c24144c8b74240841c7879c020000d545fbff4d89a7a8020000e8ec0fb5fe9041bbed22fbff8b7c24144c8b44242045899f9c0200004d89a7a8020000e8c90fb5fe9041bbcd26fbff8b7c24144c8b442420ebdb448954243c41c7879c020000cd1dfbff4d89a7a8020000e89b0fb5fe9049bb5895f8bb0700000041c7879c020000e554fbff4d899fa8020000e8790fb5fe9041c7879c0200009f29f7ff4d89a7a8020000e8610fb5fe9041baedecfaffe92dffffff4d8bc341bbe5defbffe96bffffff41baedfdfaffe914ffffff41bacdf6faffe909ffffff41baede7faffe9fefeffff4d8bc341bbedf1fbffe93cffffff41bacdeafaffe9e5feffff41bbcd34fbff8b7c24144c8b442420e91dffffff4d8bc341bbedf2fbffe90fffffff4d8bc341bbed7efbffe901ffffff41baedebfaffe9aafeffff4d8bc341bbedb9fbffe9e8feffff4d8bc341bbedc4fbffe9dafeffff4d8bc341bbcdd1fbffe9ccfeffff4d8bc341bbe59afbffe9befeffff41baed0dfbff4589979c0200004d89a7a8020000e8810eb5fe904d8bc341bbcd8dfbffe996feffff41baed00fbffe93ffeffff41baeddbfaff4589979c0200004d89a7a8020000e84e0eb5fe9041baedcefaffebe48b74241c897c241441c7879c020000e563fbff4d89a7a8020000e8260eb5fe9041baed10fbffeb894d8bc341bbede5fbffe933feffff41bbed39fbff8b7c24144c8b442420e91ffeffff4d8bc341bbe5aefbffe911feffff41bacdcbfaffeb8441bbed27fbff8b7c24144c8b442420e9f5fdffff4d8bc341bbedfefbffe9e7fdffffe8e03df9fe90e8ba0cb5fe90f4  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@1d23bfbf slotKind: QWORD  <||@
  Comment 48 6 r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 51 8 stack:32|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 56 10 NULLCHECK [rdx|QWORD[.]] state [bci:0]  <||@
  Comment 56 [rdx:0, r13:0, stack:64]at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2  |3  |4  |5 
     locals:  |r13|QWORD[.]  |rdx|QWORD[.]  |-  |-  |-  |-   <||@
  Comment 56 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 58 12 r14|DWORD = MOV [r13|QWORD[.] + 8] size: DWORD  <||@
  Comment 62 14 CMP r14|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList$SubList;, resolved>;compressed}  <||@
  Comment 62 {meta{HotSpotType<Ljava/util/ArrayList$SubList;, resolved>;compressed}}  <||@
  Comment 69 16 BRANCH trueDestinationProbability: 0.9362023508733385 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B4  <||@
  Comment 75 block B1 null  <||@
  Comment 75 18 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 75 20 rsi|DWORD[.] = MOV [r13|QWORD[.] + 32] size: DWORD  <||@
  Comment 79 22 rsi|DWORD = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 79 [rdx:0, r13:0, stack:64]at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2  |3  |4  |5 
     locals:  |r13|QWORD[.]  |rdx|QWORD[.]  |-  |-  |-  |-   <||@
  Comment 79 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 86 24 CMP (x: rsi|DWORD, y: [r13|QWORD[.] + 12]) size: DWORD  <||@
  Comment 90 26 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3  <||@
  Comment 96 block B2 null  <||@
  Comment 96 28 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 96 30 rsi|DWORD = MOV [r13|QWORD[.] + 24] size: DWORD  <||@
  Comment 100 32 r10|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 103 34 JUMP ~[] destination: B2 -> B10  <||@
  Comment 103 block B10 null  <||@
  Comment 103 88 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 103 90 CMP (x: r10|DWORD, y: [rdx|QWORD[.] + 12]) size: DWORD  <||@
  Comment 107 92 BRANCH trueDestinationProbability: 2.746347358013842E-4 condition: > trueDestination: B10 -> B11 falseDestination: B10 -> B24  <||@
  Comment 113 block B24 null  <||@
  Comment 113 230 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 113 232 CMP r14|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList$SubList;, resolved>;compressed}  <||@
  Comment 113 {meta{HotSpotType<Ljava/util/ArrayList$SubList;, resolved>;compressed}}  <||@
  Comment 120 234 BRANCH trueDestinationProbability: 0.9362023508733385 condition: = trueDestination: B24 -> B25 falseDestination: B24 -> B36  <||@
  Comment 126 block B25 null  <||@
  Comment 126 236 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 126 238 r14|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 129 240 JUMP ~[] destination: B25 -> B26  <||@
  Comment 129 block B26 null  <||@
  Comment 129 242 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 129 244 rsi|DWORD[.] = MOV [r13|QWORD[.] + 32] size: DWORD  <||@
  Comment 133 246 r10|DWORD = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD state [bci:32]  <||@
  Comment 133 [rdx:0, r13:0, r14:0, stack:64]at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 32, duringCall: false, rethrow: false]
              |0             |1             |2  |3  |4  |5 
     locals:  |r13|QWORD[.]  |rdx|QWORD[.]  |-  |-  |-  |- 
     stack:   |r14|QWORD[.]  |              |   |   |   |    <||@
  Comment 133 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 141 248 CMP (x: r10|DWORD, y: [r13|QWORD[.] + 12]) size: DWORD  <||@
  Comment 145 250 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B33  <||@
  Comment 151 block B27 null  <||@
  Comment 151 252 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 151 254 CMP [r13|QWORD[.] + 24] y: 0 size: DWORD  <||@
  Comment 156 256 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B27 -> B28 falseDestination: B27 -> B29  <||@
  Comment 162 block B29 null  <||@
  Comment 162 264 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 162 266 rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 166 268 r11|QWORD = LEA [rsi|QWORD + 40] size: QWORD  <||@
  Comment 170 270 CMP (x: r11|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 174 272 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B29 -> B30 falseDestination: B29 -> B31  <||@
  Comment 180 block B31 null  <||@
  Comment 180 294 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 180 296 MOV (x: [r15|QWORD + 96], y: r11|QWORD) size: QWORD  <||@
  Comment 184 298 AMD64PREFETCH ~[rsi|QWORD + 232] instr: 0  <||@
  Comment 191 300 rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 191 302 JUMP ~[] destination: B31 -> B32  <||@
  Comment 191 block B32 null  <||@
  Comment 191 304 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 191 306 r11|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD  <||@
  Comment 194 308 r8|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/ArrayList$SubList$1;, resolved>}  <||@
  Comment 194 {meta{HotSpotType<Ljava/util/ArrayList$SubList$1;, resolved>}}  <||@
  Comment 204 310 r8|QWORD = MOV [r8|QWORD + 168] size: QWORD  <||@
  Comment 211 312 MOV (x: [rsi|QWORD[*]], y: r8|QWORD) size: QWORD  <||@
  Comment 214 314 MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList$SubList$1;, resolved>;compressed}  <||@
  Comment 214 {meta{HotSpotType<Ljava/util/ArrayList$SubList$1;, resolved>;compressed}}  <||@
  Comment 221 316 r8|QWORD = MOVE input: long[-4294967296|0xffffffff00000000]  <||@
  Comment 231 318 MOV (x: [rsi|QWORD[*] + 12], y: r8|QWORD) size: QWORD  <||@
  Comment 235 320 MOV (x: [rsi|QWORD[*] + 20], y: r10|DWORD) size: DWORD  <||@
  Comment 239 322 MOV (x: [rsi|QWORD[*] + 24], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 243 324 r10|DWORD = MOV [r13|QWORD[.] + 20] size: DWORD  <||@
  Comment 247 326 MOV (x: [rsi|QWORD[*] + 28], y: r10|DWORD) size: DWORD  <||@
  Comment 251 328 r13|DWORD[.] = COMPRESSPOINTER (input: r13|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@68a0169d encoding: base: 0 shift: 3  <||@
  Comment 255 330 MOV (x: [rsi|QWORD[*] + 32], y: r13|DWORD[.]) size: DWORD  <||@
  Comment 259 332 r10|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 262 334 r11|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 265 336 JUMP ~[] destination: B32 -> B64  <||@
  Comment 265 block B64 null  <||@
  Comment 265 660 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 265 662 stack:56|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 270 664 stack:64|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 275 666 r8|DWORD = MOV [r11|QWORD[.] + 12] size: DWORD  <||@
  Comment 279 668 stack:44|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 284 670 rsi|QWORD = MOV r8|DWORD size: DWORD  <||@
  Comment 287 672 r9|QWORD = DEC rsi|QWORD size: QWORD  <||@
  Comment 293 674 CMP (x: rsi|QWORD, y: r9|QWORD) size: QWORD  <||@
  Comment 296 676 BRANCH trueDestinationProbability: 0.5 condition: |>| trueDestination: B64 -> B68 falseDestination: B64 -> B66  <||@
  Comment 302 block B66 null  <||@
  Comment 302 682 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 302 684 TEST (x: r8|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 305 686 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B66 -> B68 falseDestination: B66 -> B146  <||@
  Comment 311 block B68 null  <||@
  Comment 311 692 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 311 694 r9|DWORD = MOV [r10|QWORD[.] + 8] size: DWORD state [bci:37]  <||@
  Comment 311 [rdx:0, r10:0, r11:0, stack:32, stack:40, stack:64]at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 37, duringCall: false, rethrow: false]
              |0             |1             |2  |3             |4  |5 
     locals:  |-             |rdx|QWORD[.]  |-  |r11|QWORD[.]  |-  |- 
     stack:   |r10|QWORD[.]  |              |   |              |   |    <||@
  Comment 311 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 315 696 stack:40|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 320 698 rcx|DWORD = MOV [r11|QWORD[.] + 8] size: DWORD  <||@
  Comment 324 700 stack:36|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 328 702 rbx|QWORD = MOVE input: long[4682670080|0x1171be000]  <||@
  Comment 338 704 rdi|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 343 706 JUMP ~[] destination: B68 -> B69  <||@
  Comment 348 block B70 loop 1 depth 1 header:74|LoopBegin  <||@
  Comment 348 714 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 352 716 CMP r9|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList$SubList$1;, resolved>;compressed}  <||@
  Comment 352 {meta{HotSpotType<Ljava/util/ArrayList$SubList$1;, resolved>;compressed}}  <||@
  Comment 359 718 BRANCH trueDestinationProbability: 0.8874682121946893 condition: = trueDestination: B70 -> B71 falseDestination: B70 -> B82  <||@
  Comment 365 block B71 loop 1 depth 1 header:74|LoopBegin  <||@
  Comment 365 720 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 365 722 rsi|DWORD[.] = MOV [r10|QWORD[.] + 32] size: DWORD  <||@
  Comment 369 724 rax|DWORD = MOV [rsi|DWORD[.] * 8 + 24] size: DWORD state [bci:42]  <||@
  Comment 369 [rsi:0, r10:0, r11:0, stack:32, stack:40, stack:64]at java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42, duringCall: false, rethrow: false]
              |0  |1                  |2  |3             |4             |5         
     locals:  |-  |stack:32|QWORD[.]  |-  |r11|QWORD[.]  |r10|QWORD[.]  |rdi|DWORD   <||@
  Comment 369 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 376 726 rbp|DWORD = MOV [r10|QWORD[.] + 12] size: DWORD  <||@
  Comment 380 728 CMP (x: rbp|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 382 730 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B71 -> B72 falseDestination: B71 -> B73  <||@
  Comment 388 block B73 loop 1 depth 1 header:74|LoopBegin  <||@
  Comment 388 740 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 388 742 rsi|DWORD[.] = MOV [rsi|DWORD[.] * 8 + 32] size: DWORD  <||@
  Comment 395 744 r13|DWORD = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD state [bci:42]  <||@
  Comment 395 [rsi:0, r10:0, r11:0, stack:32, stack:40, stack:64]at java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42, duringCall: false, rethrow: false]
              |0  |1                  |2  |3             |4             |5         
     locals:  |-  |stack:32|QWORD[.]  |-  |r11|QWORD[.]  |r10|QWORD[.]  |rdi|DWORD   <||@
  Comment 395 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 403 746 CMP (x: r13|DWORD, y: [r10|QWORD[.] + 20]) size: DWORD  <||@
  Comment 407 748 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B73 -> B74 falseDestination: B73 -> B81  <||@
  Comment 413 block B74 loop 1 depth 1 header:74|LoopBegin  <||@
  Comment 413 750 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 413 752 CMP (x: rax|DWORD, y: rbp|DWORD) size: DWORD  <||@
  Comment 415 754 BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B74 -> B75 falseDestination: B74 -> B80  <||@
  Comment 421 block B75 loop 1 depth 1 header:74|LoopBegin  <||@
  Comment 421 756 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 421 758 rsi|DWORD[.] = MOV [rsi|DWORD[.] * 8 + 20] size: DWORD  <||@
  Comment 428 760 rax|DWORD = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD state [bci:42]  <||@
  Comment 428 [rsi:0, r10:0, r11:0, stack:32, stack:40, stack:64]at java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42, duringCall: false, rethrow: false]
              |0  |1                  |2  |3             |4             |5         
     locals:  |-  |stack:32|QWORD[.]  |-  |r11|QWORD[.]  |r10|QWORD[.]  |rdi|DWORD   <||@
  Comment 428 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 435 762 r13|DWORD = ADD (x: rbp|DWORD, ~y: [r10|QWORD[.] + 28]) size: DWORD  <||@
  Comment 442 764 CMP (x: rax|DWORD, y: r13|DWORD) size: DWORD  <||@
  Comment 445 766 BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B75 -> B76 falseDestination: B75 -> B79  <||@
  Comment 451 block B76 loop 1 depth 1 header:74|LoopBegin  <||@
  Comment 451 768 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 451 770 CMP (x: rax|DWORD, y: r13|DWORD) size: DWORD  <||@
  Comment 454 772 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B76 -> B77 falseDestination: B76 -> B78  <||@
  Comment 460 block B77 loop 1 depth 1 header:74|LoopBegin  <||@
  Comment 460 774 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 460 776 rax|DWORD = INC rbp|DWORD size: DWORD  <||@
  Comment 464 778 MOV (x: [r10|QWORD[.] + 12], y: rax|DWORD) size: DWORD  <||@
  Comment 468 780 MOV (x: [r10|QWORD[.] + 16], y: rbp|DWORD) size: DWORD  <||@
  Comment 472 782 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@68a0169d encoding: base: 0 shift: 3  <||@
  Comment 476 784 rsi|DWORD[.] = MOV [rsi|QWORD[.] + r13|DWORD * 4 + 16] size: DWORD  <||@
  Comment 481 786 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@68a0169d encoding: base: 0 shift: 3  <||@
  Comment 487 788 r13|DWORD[.] = MOVE rsi|DWORD[.] moveKind: DWORD  <||@
  Comment 490 790 r14|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 493 792 JUMP ~[] destination: B77 -> B111  <||@
  Comment 493 block B111 loop 1 depth 1 header:74|LoopBegin  <||@
  Comment 493 1140 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 493 1142 TEST (x: r14|QWORD[.], y: r14|QWORD[.]) size: QWORD  <||@
  Comment 496 1144 BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B111 -> B122 falseDestination: B111 -> B113  <||@
  Comment 502 block B113 loop 1 depth 1 header:74|LoopBegin  <||@
  Comment 502 1150 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 502 1152 rsi|DWORD = MOV [r14|QWORD[.] + 8] size: DWORD  <||@
  Comment 506 1154 rdx|QWORD = MOV [rcx|DWORD * 8 + 232] size: QWORD  <||@
  Comment 514 1156 r8|DWORD = MOV [rdx|QWORD + 12] size: DWORD  <||@
  Comment 518 1158 rax|QWORD = MOVSXD r8|DWORD size: QWORD  <||@
  Comment 521 1160 CMP (x: rdx|QWORD, y: [rax|QWORD + rsi|DWORD * 8]) size: QWORD  <||@
  Comment 525 1162 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B113 -> B122 falseDestination: B113 -> B115  <||@
  Comment 531 block B115 loop 1 depth 1 header:74|LoopBegin  <||@
  Comment 531 1168 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 531 1170 stack:88|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 536 1172 CMP r8|DWORD y: 24 size: DWORD  <||@
  Comment 540 1174 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B115 -> B116 falseDestination: B115 -> B126  <||@
  Comment 546 block B116 loop 1 depth 1 header:74|LoopBegin  <||@
  Comment 546 1176 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 546 1178 r8|QWORD = UNCOMPRESSPOINTER (input: rsi|DWORD, ~baseRegister: -) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@68a0169d encoding: base: 0 shift: 3  <||@
  Comment 553 1180 CMP (x: rdx|QWORD, y: r8|QWORD) size: QWORD  <||@
  Comment 556 1182 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B116 -> B122 falseDestination: B116 -> B118  <||@
  Comment 562 block B118 loop 1 depth 1 header:74|LoopBegin  <||@
  Comment 562 1188 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 562 1190 r8|QWORD = MOV [rsi|DWORD * 8 + 32] size: QWORD  <||@
  Comment 570 1192 rax|DWORD = MOV [r8|QWORD] size: DWORD  <||@
  Comment 573 1194 rbp|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 578 1196 JUMP ~[] destination: B118 -> B119  <||@
  Comment 583 block B120 loop 3 depth 2 outer 1 header:2014|LoopBegin  <||@
  Comment 583 1204 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 592 1206 r14|DWORD = SHL rbp|DWORD y: 3 size: DWORD  <||@
  Comment 599 1208 r14|DWORD = LEA [r14|DWORD + 8] size: DWORD  <||@
  Comment 603 1210 r14|QWORD = MOVSXD r14|DWORD size: QWORD  <||@
  Comment 606 1212 r14|QWORD = MOV [r8|QWORD + r14|QWORD * 1] size: QWORD  <||@
  Comment 610 1214 CMP (x: rdx|QWORD, y: r14|QWORD) size: QWORD  <||@
  Comment 613 1216 BRANCH trueDestinationProbability: 0.4 condition: = trueDestination: B120 -> B121 falseDestination: B120 -> B123  <||@
  Comment 619 block B123 loop 3 depth 2 outer 1 header:2014|LoopBegin  <||@
  Comment 619 1242 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 619 1244 rbp|DWORD = INC rbp|DWORD size: DWORD  <||@
  Comment 621 1246 JUMP ~[] destination: B123 -> B119  <||@
  Comment 621 block B119 loop 3 depth 2 outer 1 header:2014|LoopBegin  <||@
  Comment 621 1198 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 621 1200 CMP (x: rax|DWORD, y: rbp|DWORD) size: DWORD  <||@
  Comment 623 1202 BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B119 -> B120 falseDestination: B119 -> B126  <||@
  Comment 630 block B122 loop 1 depth 1 header:74|LoopBegin  <||@
  Comment 630 1224 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 630 1226 MOV (x: [r11|QWORD[.] + rdi|DWORD * 4 + 16], y: r13|DWORD[.]) size: DWORD  <||@
  Comment 635 1228 rsi|QWORD[.] = LEA [r11|QWORD[.] + rdi|DWORD * 4 + 16] size: QWORD  <||@
  Comment 640 1230 rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD  <||@
  Comment 644 1232 MOVB (x: [rsi|QWORD[*] + rbx|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 648 1234 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:120]  <||@
  Comment 648 [r10:0, r11:0, stack:32, stack:40, stack:64]at java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 120, duringCall: false, rethrow: false]
              |0  |1                  |2  |3             |4             |5         
     locals:  |-  |stack:32|QWORD[.]  |-  |r11|QWORD[.]  |r10|QWORD[.]  |rdi|DWORD   <||@
  Comment 648 {infopoint: SAFEPOINT}  <||@
  Comment 648 11  <||@
  Comment 654 1236 rdi|DWORD = INC rdi|DWORD size: DWORD  <||@
  Comment 656 1238 r8|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 661 1240 JUMP ~[] destination: B122 -> B69  <||@
  Comment 661 block B69 loop 1 depth 1 header:74|LoopBegin  <||@
  Comment 661 708 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 661 710 CMP (x: r8|DWORD, y: rdi|DWORD) size: DWORD  <||@
  Comment 664 712 BRANCH trueDestinationProbability: 0.6989533557102465 condition: > trueDestination: B69 -> B70 falseDestination: B69 -> B130  <||@
  Comment 675 block B121 loop 1 depth 1 header:74|LoopBegin  <||@
  Comment 675 1218 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 675 1220 MOV (x: [rsi|DWORD * 8 + 24], y: rdx|QWORD) size: QWORD  <||@
  Comment 683 1222 JUMP ~[] destination: B121 -> B122  <||@
  Comment 685 block B82 loop 1 depth 1 header:74|LoopBegin  <||@
  Comment 685 826 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 685 828 CMP r9|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/SubList$1;, resolved>;compressed}  <||@
  Comment 685 {meta{HotSpotType<Ljava/util/SubList$1;, resolved>;compressed}}  <||@
  Comment 692 830 BRANCH trueDestinationProbability: 0.916333823838554 condition: = trueDestination: B82 -> B83 falseDestination: B82 -> B98  <||@
  Comment 698 block B83 loop 1 depth 1 header:74|LoopBegin  <||@
  Comment 698 832 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 698 834 rax|DWORD[.] = MOV [r10|QWORD[.] + 16] size: DWORD  <||@
  Comment 702 836 CMP [rax|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed} state [bci:42]  <||@
  Comment 702 [rax:0, r10:0, r11:0, stack:32, stack:40, stack:64]at java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42, duringCall: false, rethrow: false]
              |0  |1                  |2  |3             |4             |5         
     locals:  |-  |stack:32|QWORD[.]  |-  |r11|QWORD[.]  |r10|QWORD[.]  |rdi|DWORD   <||@
  Comment 702 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 702 {meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed}}  <||@
  Comment 713 838 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B83 -> B84 falseDestination: B83 -> B97  <||@
  Comment 719 block B84 loop 1 depth 1 header:74|LoopBegin  <||@
  Comment 719 840 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 719 842 rsi|DWORD[.] = MOV [r10|QWORD[.] + 20] size: DWORD  <||@
  Comment 723 844 rbp|DWORD = MOV [rsi|DWORD[.] * 8 + 20] size: DWORD state [bci:42]  <||@
  Comment 723 [rax:0, rsi:0, r10:0, r11:0, stack:32, stack:40, stack:64]at java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42, duringCall: false, rethrow: false]
              |0  |1                  |2  |3             |4             |5         
     locals:  |-  |stack:32|QWORD[.]  |-  |r11|QWORD[.]  |r10|QWORD[.]  |rdi|DWORD   <||@
  Comment 723 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 730 846 rsi|DWORD = MOV [rsi|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 737 848 r13|DWORD = MOV [rax|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 745 850 r14|DWORD = SUB (x: r13|DWORD, ~y: rsi|DWORD) size: DWORD  <||@
  Comment 751 852 CMP (x: rbp|DWORD, y: r14|DWORD) size: DWORD  <||@
  Comment 754 854 BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B84 -> B85 falseDestination: B84 -> B96  <||@
  Comment 760 block B85 loop 1 depth 1 header:74|LoopBegin  <||@
  Comment 760 856 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 760 858 rsi|DWORD[.] = MOV [rax|DWORD[.] * 8 + 24] size: DWORD  <||@
  Comment 767 860 rbp|DWORD = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD state [bci:42]  <||@
  Comment 767 [rax:0, rsi:0, r10:0, r11:0, stack:32, stack:40, stack:64]at java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42, duringCall: false, rethrow: false]
              |0  |1                  |2  |3             |4             |5         
     locals:  |-  |stack:32|QWORD[.]  |-  |r11|QWORD[.]  |r10|QWORD[.]  |rdi|DWORD   <||@
  Comment 767 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 774 862 CMP (x: rbp|DWORD, y: [rax|DWORD[.] * 8 + 20]) size: DWORD  <||@
  Comment 781 864 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B85 -> B86 falseDestination: B85 -> B95  <||@
  Comment 787 block B86 loop 1 depth 1 header:74|LoopBegin  <||@
  Comment 787 866 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 787 868 rbp|DWORD = MOV [rsi|DWORD[.] * 8 + 8] size: DWORD  <||@
  Comment 794 870 r14|DWORD = INC r13|DWORD size: DWORD  <||@
  Comment 800 872 CMP rbp|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed}  <||@
  Comment 800 {meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed}}  <||@
  Comment 806 874 BRANCH trueDestinationProbability: 0.9304948647614187 condition: = trueDestination: B86 -> B87 falseDestination: B86 -> B90  <||@
  Comment 812 block B87 loop 1 depth 1 header:74|LoopBegin  <||@
  Comment 812 876 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 812 878 rsi|DWORD[.] = MOV [rsi|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 819 880 CMP (x: r13|DWORD, y: [rsi|DWORD[.] * 8 + 12]) size: DWORD state [bci:42]  <||@
  Comment 819 [rax:0, rsi:0, r10:0, r11:0, stack:32, stack:40, stack:64]at java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42, duringCall: false, rethrow: false]
              |0  |1                  |2  |3             |4             |5         
     locals:  |-  |stack:32|QWORD[.]  |-  |r11|QWORD[.]  |r10|QWORD[.]  |rdi|DWORD   <||@
  Comment 819 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 827 882 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B87 -> B88 falseDestination: B87 -> B89  <||@
  Comment 833 block B88 loop 1 depth 1 header:74|LoopBegin  <||@
  Comment 833 884 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 833 886 MOV (x: [rax|DWORD[.] * 8 + 16], y: r13|DWORD) size: DWORD  <||@
  Comment 841 888 MOV (x: [rax|DWORD[.] * 8 + 12], y: r14|DWORD) size: DWORD  <||@
  Comment 849 890 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@68a0169d encoding: base: 0 shift: 3  <||@
  Comment 853 892 rsi|DWORD[.] = MOV [rsi|QWORD[.] + r13|DWORD * 4 + 16] size: DWORD  <||@
  Comment 858 894 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@68a0169d encoding: base: 0 shift: 3  <||@
  Comment 864 896 r13|DWORD[.] = MOVE rsi|DWORD[.] moveKind: DWORD  <||@
  Comment 867 898 r14|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 870 900 JUMP ~[] destination: B88 -> B111  <||@
  Comment 875 block B98 loop 1 depth 1 header:74|LoopBegin  <||@
  Comment 875 1020 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 875 1022 CMP r9|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap$KeyIterator;, resolved>;compressed}  <||@
  Comment 875 {meta{HotSpotType<Ljava/util/HashMap$KeyIterator;, resolved>;compressed}}  <||@
  Comment 882 1024 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B98 -> B99 falseDestination: B98 -> B129  <||@
  Comment 888 block B99 loop 1 depth 1 header:74|LoopBegin  <||@
  Comment 888 1026 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 888 1028 rsi|DWORD[.] = MOV [r10|QWORD[.] + 20] size: DWORD  <||@
  Comment 892 1030 NULLCHECK [r12|QWORD[*] + rsi|DWORD[.] * 8] state [bci:42]  <||@
  Comment 892 [rsi:0, r10:0, r11:0, stack:32, stack:40, stack:64]at java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42, duringCall: false, rethrow: false]
              |0  |1                  |2  |3             |4             |5         
     locals:  |-  |stack:32|QWORD[.]  |-  |r11|QWORD[.]  |r10|QWORD[.]  |rdi|DWORD   <||@
  Comment 892 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 896 1032 rax|DWORD[.] = MOV [r10|QWORD[.] + 28] size: DWORD  <||@
  Comment 900 1034 rbp|DWORD = MOV [rax|DWORD[.] * 8 + 24] size: DWORD state [bci:42]  <||@
  Comment 900 [rax:0, rsi:0, r10:0, r11:0, stack:32, stack:40, stack:64]at java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42, duringCall: false, rethrow: false]
              |0  |1                  |2  |3             |4             |5         
     locals:  |-  |stack:32|QWORD[.]  |-  |r11|QWORD[.]  |r10|QWORD[.]  |rdi|DWORD   <||@
  Comment 900 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 907 1036 CMP (x: rbp|DWORD, y: [r10|QWORD[.] + 12]) size: DWORD  <||@
  Comment 911 1038 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B99 -> B100 falseDestination: B99 -> B128  <||@
  Comment 917 block B100 loop 1 depth 1 header:74|LoopBegin  <||@
  Comment 917 1040 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 917 1042 MOV (x: [r10|QWORD[.] + 24], y: rsi|DWORD[.]) size: DWORD  <||@
  Comment 921 1044 rbp|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD  <||@
  Comment 928 1046 MOVB (x: [rbp|QWORD[*] + rbx|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 933 1048 rbp|DWORD[.] = MOV [rsi|DWORD[.] * 8 + 24] size: DWORD  <||@
  Comment 940 1050 MOV (x: [r10|QWORD[.] + 20], y: rbp|DWORD[.]) size: DWORD  <||@
  Comment 944 1052 r13|DWORD[.] = MOV [rsi|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 952 1054 r14|QWORD[.] = UNCOMPRESSPOINTER (input: r13|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@68a0169d encoding: base: 0 shift: 3  <||@
  Comment 959 1056 TEST (x: rbp|DWORD[.], y: rbp|DWORD[.]) size: DWORD  <||@
  Comment 961 1058 BRANCH trueDestinationProbability: 0.862846997817839 condition: = trueDestination: B100 -> B101 falseDestination: B100 -> B111  <||@
  Comment 967 block B101 loop 1 depth 1 header:74|LoopBegin  <||@
  Comment 967 1060 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 967 1062 stack:68|DWORD[.] = MOVE rsi|DWORD[.] moveKind: DWORD  <||@
  Comment 971 1064 rax|DWORD[.] = MOV [rax|DWORD[.] * 8 + 36] size: DWORD  <||@
  Comment 978 1066 rbp|DWORD = MOV [rax|DWORD[.] * 8 + 12] size: DWORD state [bci:53, 1, 114]  <||@
  Comment 978 [rax:0, r10:0, r11:0, r13:0, r14:0, stack:28, stack:32, stack:40, stack:64]at java.util.HashMap$HashIterator.nextNode(HashMap.java:1445) [bci: 53, duringCall: false, rethrow: false]
              |0             |1  |2                 
     locals:  |r10|QWORD[.]  |-  |stack:68|DWORD[.] 
     stack:   |Object[null]  |   |                  
  at java.util.HashMap$KeyIterator.next(HashMap.java:1466) [bci: 1, duringCall: true, rethrow: false]
              |0 
     locals:  |- 
  at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114, duringCall: true, rethrow: false]
              |0             |1                  |2  |3             |4             |5         
     locals:  |-             |stack:32|QWORD[.]  |-  |r11|QWORD[.]  |r10|QWORD[.]  |rdi|DWORD 
     stack:   |r11|QWORD[.]  |rdi|DWORD          |   |              |              |            <||@
  Comment 978 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 985 1068 rsi|DWORD = MOV [r10|QWORD[.] + 16] size: DWORD  <||@
  Comment 989 1070 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@68a0169d encoding: base: 0 shift: 3  <||@
  Comment 993 1072 JUMP ~[] destination: B101 -> B102  <||@
  Comment 998 block B103 loop 2 depth 2 outer 1 header:787|LoopBegin  <||@
  Comment 998 1080 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 1008 1082 CMP (x: rbp|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 1010 1084 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B103 -> B104 falseDestination: B103 -> B107  <||@
  Comment 1016 block B104 loop 2 depth 2 outer 1 header:787|LoopBegin  <||@
  Comment 1016 1086 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1016 1088 rdx|DWORD = INC rsi|DWORD size: DWORD  <||@
  Comment 1020 1090 MOV (x: [r10|QWORD[.] + 16], y: rdx|DWORD) size: DWORD  <||@
  Comment 1024 1092 rsi|DWORD[.] = MOV [rax|QWORD[.] + rsi|DWORD * 4 + 16] size: DWORD  <||@
  Comment 1028 1094 MOV (x: [r10|QWORD[.] + 20], y: rsi|DWORD[.]) size: DWORD  <||@
  Comment 1032 1096 r8|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD  <||@
  Comment 1039 1098 MOVB (x: [r8|QWORD[*] + rbx|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 1043 1100 TEST (x: rsi|DWORD[.], y: rsi|DWORD[.]) size: DWORD  <||@
  Comment 1045 1102 BRANCH trueDestinationProbability: 0.7114614377628611 condition: = trueDestination: B104 -> B105 falseDestination: B104 -> B111  <||@
  Comment 1051 block B105 loop 2 depth 2 outer 1 header:787|LoopBegin  <||@
  Comment 1051 1104 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1051 1106 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:95, 1, 114]  <||@
  Comment 1051 [rax:0, r10:0, r11:0, r13:0, r14:0, stack:28, stack:32, stack:40, stack:64]at java.util.HashMap$HashIterator.nextNode(HashMap.java:1446) [bci: 95, duringCall: false, rethrow: false]
              |0             |1             |2                 
     locals:  |r10|QWORD[.]  |rax|QWORD[.]  |stack:68|DWORD[.] 
     stack:   |Object[null]  |              |                  
  at java.util.HashMap$KeyIterator.next(HashMap.java:1466) [bci: 1, duringCall: true, rethrow: false]
              |0 
     locals:  |- 
  at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114, duringCall: true, rethrow: false]
              |0             |1                  |2  |3             |4             |5         
     locals:  |-             |stack:32|QWORD[.]  |-  |r11|QWORD[.]  |r10|QWORD[.]  |rdi|DWORD 
     stack:   |r11|QWORD[.]  |rdi|DWORD          |   |              |              |            <||@
  Comment 1051 {infopoint: SAFEPOINT}  <||@
  Comment 1051 11  <||@
  Comment 1057 1108 rsi|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 1059 1110 JUMP ~[] destination: B105 -> B102  <||@
  Comment 1059 block B102 loop 2 depth 2 outer 1 header:787|LoopBegin  <||@
  Comment 1059 1074 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1059 1076 CMP (x: rbp|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 1061 1078 BRANCH trueDestinationProbability: 0.973666701969634 condition: > trueDestination: B102 -> B103 falseDestination: B102 -> B111  <||@
  Comment 1068 block B90 loop 1 depth 1 header:74|LoopBegin  <||@
  Comment 1068 910 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1068 912 CMP rbp|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeInputList;, resolved>;compressed}  <||@
  Comment 1068 {meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeInputList;, resolved>;compressed}}  <||@
  Comment 1074 914 BRANCH trueDestinationProbability: 0.9931451844203528 condition: = trueDestination: B90 -> B91 falseDestination: B90 -> B94  <||@
  Comment 1080 block B91 loop 1 depth 1 header:74|LoopBegin  <||@
  Comment 1080 916 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1080 918 rsi|DWORD[.] = MOV [rsi|DWORD[.] * 8 + 28] size: DWORD  <||@
  Comment 1087 920 CMP (x: r13|DWORD, y: [rsi|DWORD[.] * 8 + 12]) size: DWORD state [bci:42]  <||@
  Comment 1087 [rax:0, rsi:0, r10:0, r11:0, stack:32, stack:40, stack:64]at java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42, duringCall: false, rethrow: false]
              |0  |1                  |2  |3             |4             |5         
     locals:  |-  |stack:32|QWORD[.]  |-  |r11|QWORD[.]  |r10|QWORD[.]  |rdi|DWORD   <||@
  Comment 1087 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1095 922 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B91 -> B92 falseDestination: B91 -> B93  <||@
  Comment 1101 block B92 loop 1 depth 1 header:74|LoopBegin  <||@
  Comment 1101 924 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1101 926 MOV (x: [rax|DWORD[.] * 8 + 16], y: r13|DWORD) size: DWORD  <||@
  Comment 1109 928 MOV (x: [rax|DWORD[.] * 8 + 12], y: r14|DWORD) size: DWORD  <||@
  Comment 1117 930 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@68a0169d encoding: base: 0 shift: 3  <||@
  Comment 1121 932 rsi|DWORD[.] = MOV [rsi|QWORD[.] + r13|DWORD * 4 + 16] size: DWORD  <||@
  Comment 1126 934 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@68a0169d encoding: base: 0 shift: 3  <||@
  Comment 1132 936 r13|DWORD[.] = MOVE rsi|DWORD[.] moveKind: DWORD  <||@
  Comment 1135 938 r14|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1138 940 JUMP ~[] destination: B92 -> B111  <||@
  Comment 1143 block B94 loop 1 depth 1 header:74|LoopBegin  <||@
  Comment 1143 950 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1143 952 stack:68|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 1148 954 stack:72|DWORD[.] = MOVE rax|DWORD[.] moveKind: DWORD  <||@
  Comment 1152 956 stack:76|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 1156 958 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@68a0169d encoding: base: 0 shift: 3  <||@
  Comment 1160 960 rdx|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 1163 962 stack:80|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 1168 964 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractList.get(int)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:14, 11, 114]  <||@
  Comment 1168 7  <||@
  Comment 1183 {HotSpotMethod<AbstractList.get(int)>}  <||@
  Comment 1188 [stack:24, stack:32, stack:40, stack:64]at java.util.AbstractList$Itr.next(AbstractList.java:358) [bci: 14, duringCall: true, rethrow: false]
              |0                  |1               |2 
     locals:  |stack:72|DWORD[.]  |stack:80|DWORD  |- 
  at java.util.SubList$1.next(AbstractList.java:707) [bci: 11, duringCall: true, rethrow: false]
              |0 
     locals:  |- 
  at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3                  |4                  |5              
     locals:  |-                  |stack:32|QWORD[.]  |-  |stack:64|QWORD[.]  |stack:56|QWORD[.]  |stack:76|DWORD 
     stack:   |stack:64|QWORD[.]  |stack:76|DWORD     |   |                   |                   |                 <||@
  Comment 1189 966 rsi|DWORD[.] = MOVE stack:72|DWORD[.] moveKind: DWORD  <||@
  Comment 1193 968 r13|DWORD = MOVE stack:80|DWORD moveKind: DWORD  <||@
  Comment 1198 970 MOV (x: [rsi|DWORD[.] * 8 + 16], y: r13|DWORD) size: DWORD  <||@
  Comment 1206 972 r14|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 1211 974 MOV (x: [rsi|DWORD[.] * 8 + 12], y: r14|DWORD) size: DWORD  <||@
  Comment 1219 976 rsi|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@68a0169d encoding: base: 0 shift: 3  <||@
  Comment 1226 978 r13|DWORD[.] = MOVE rsi|DWORD[.] moveKind: DWORD  <||@
  Comment 1229 980 r14|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1232 982 rdi|DWORD = MOVE stack:76|DWORD moveKind: DWORD  <||@
  Comment 1236 984 rbx|QWORD = MOVE input: long[4682670080|0x1171be000]  <||@
  Comment 1246 986 rcx|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 1250 988 r9|DWORD = MOVE stack:40|DWORD moveKind: DWORD  <||@
  Comment 1255 990 r11|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1260 992 r10|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1265 994 JUMP ~[] destination: B94 -> B111  <||@
  Comment 1270 block B130 null  <||@
  Comment 1270 1290 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1270 1292 stack:76|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 1274 1294 CMP stack:40|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList$SubList$1;, resolved>;compressed}  <||@
  Comment 1274 {meta{HotSpotType<Ljava/util/ArrayList$SubList$1;, resolved>;compressed}}  <||@
  Comment 1282 1300 r10|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1287 1296 BRANCH trueDestinationProbability: 0.9361509309606195 condition: = trueDestination: B130 -> B131 falseDestination: B130 -> B134  <||@
  Comment 1293 block B131 null  <||@
  Comment 1293 1298 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1293 1302 rax|DWORD[.] = MOV [r10|QWORD[.] + 32] size: DWORD  <||@
  Comment 1297 1304 rax|DWORD = MOV [rax|DWORD[.] * 8 + 24] size: DWORD state [bci:42]  <||@
  Comment 1297 [r10:0, stack:32, stack:64]at java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42, duringCall: false, rethrow: false]
              |0  |1                  |2  |3                  |4             |5              
     locals:  |-  |stack:32|QWORD[.]  |-  |stack:64|QWORD[.]  |r10|QWORD[.]  |stack:76|DWORD   <||@
  Comment 1297 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1304 1306 CMP (x: rax|DWORD, y: [r10|QWORD[.] + 12]) size: DWORD  <||@
  Comment 1308 1308 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B131 -> B132 falseDestination: B131 -> B133  <||@
  Comment 1314 block B132 null  <||@
  Comment 1314 1310 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1314 1312 rax|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1319 1314 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 1328 12  <||@
  Comment 1338 block B134 null  <||@
  Comment 1338 1326 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1338 1330 CMP stack:40|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/SubList$1;, resolved>;compressed}  <||@
  Comment 1338 {meta{HotSpotType<Ljava/util/SubList$1;, resolved>;compressed}}  <||@
  Comment 1346 1332 BRANCH trueDestinationProbability: 0.8662365591397847 condition: = trueDestination: B134 -> B135 falseDestination: B134 -> B140  <||@
  Comment 1352 block B135 null  <||@
  Comment 1352 1334 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1352 1336 rax|DWORD[.] = MOV [r10|QWORD[.] + 16] size: DWORD  <||@
  Comment 1356 1338 CMP [rax|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed} state [bci:42]  <||@
  Comment 1356 [rax:0, r10:0, stack:32, stack:64]at java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42, duringCall: false, rethrow: false]
              |0  |1                  |2  |3                  |4             |5              
     locals:  |-  |stack:32|QWORD[.]  |-  |stack:64|QWORD[.]  |r10|QWORD[.]  |stack:76|DWORD   <||@
  Comment 1356 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1356 {meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed}}  <||@
  Comment 1367 1340 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B135 -> B136 falseDestination: B135 -> B139  <||@
  Comment 1373 block B136 null  <||@
  Comment 1373 1342 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1373 1344 rsi|DWORD[.] = MOV [r10|QWORD[.] + 20] size: DWORD  <||@
  Comment 1377 1346 rdx|DWORD = MOV [rsi|DWORD[.] * 8 + 20] size: DWORD state [bci:42]  <||@
  Comment 1377 [rax:0, rsi:0, r10:0, stack:32, stack:64]at java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42, duringCall: false, rethrow: false]
              |0  |1                  |2  |3                  |4             |5              
     locals:  |-  |stack:32|QWORD[.]  |-  |stack:64|QWORD[.]  |r10|QWORD[.]  |stack:76|DWORD   <||@
  Comment 1377 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1384 1348 rsi|DWORD = MOV [rsi|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 1391 1350 rax|DWORD = MOV [rax|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 1398 1352 rax|DWORD = SUB (x: rax|DWORD, ~y: rsi|DWORD) size: DWORD  <||@
  Comment 1400 1354 CMP (x: rdx|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 1402 1356 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B136 -> B137 falseDestination: B136 -> B138  <||@
  Comment 1408 block B138 null  <||@
  Comment 1408 1368 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1408 1370 rax|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1413 1372 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 1422 12  <||@
  Comment 1432 block B4 null  <||@
  Comment 1432 42 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1432 44 CMP r14|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/RandomAccessSubList;, resolved>;compressed}  <||@
  Comment 1432 {meta{HotSpotType<Ljava/util/RandomAccessSubList;, resolved>;compressed}}  <||@
  Comment 1439 46 BRANCH trueDestinationProbability: 0.8661213947481707 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B8  <||@
  Comment 1445 block B5 null  <||@
  Comment 1445 48 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1445 50 rsi|DWORD[.] = MOV [r13|QWORD[.] + 24] size: DWORD  <||@
  Comment 1449 52 rsi|DWORD = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 1449 [r13:0, stack:64]at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 0, duringCall: false, rethrow: false]
              |0             |1                  |2  |3  |4  |5 
     locals:  |r13|QWORD[.]  |stack:32|QWORD[.]  |-  |-  |-  |-   <||@
  Comment 1449 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1456 54 CMP (x: rsi|DWORD, y: [r13|QWORD[.] + 12]) size: DWORD  <||@
  Comment 1460 56 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7  <||@
  Comment 1466 block B6 null  <||@
  Comment 1466 58 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1466 60 r10|DWORD = MOV [r13|QWORD[.] + 20] size: DWORD  <||@
  Comment 1470 62 rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1475 64 JUMP ~[] destination: B6 -> B10  <||@
  Comment 1480 block B36 null  <||@
  Comment 1480 356 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1480 358 CMP r14|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/RandomAccessSubList;, resolved>;compressed}  <||@
  Comment 1480 {meta{HotSpotType<Ljava/util/RandomAccessSubList;, resolved>;compressed}}  <||@
  Comment 1487 360 BRANCH trueDestinationProbability: 0.8661213947481707 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B63  <||@
  Comment 1493 block B37 null  <||@
  Comment 1493 362 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1493 364 r14|DWORD[.] = MOV [r13|QWORD[.] + 24] size: DWORD  <||@
  Comment 1497 366 r10|DWORD = MOV [r14|DWORD[.] * 8 + 12] size: DWORD state [bci:32]  <||@
  Comment 1497 [rdx:0, r13:0, r14:0, stack:64]at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 32, duringCall: false, rethrow: false]
              |0             |1                  |2  |3  |4  |5 
     locals:  |r13|QWORD[.]  |stack:32|QWORD[.]  |-  |-  |-  |- 
     stack:   |rdx|QWORD[.]  |                   |   |   |   |    <||@
  Comment 1497 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1505 368 CMP (x: r10|DWORD, y: [r13|QWORD[.] + 12]) size: DWORD  <||@
  Comment 1509 370 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B61  <||@
  Comment 1515 block B38 null  <||@
  Comment 1515 372 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1515 374 CMP [r13|QWORD[.] + 20] y: 0 size: DWORD  <||@
  Comment 1520 376 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B38 -> B39 falseDestination: B38 -> B40  <||@
  Comment 1526 block B40 null  <||@
  Comment 1526 388 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1526 390 r11|DWORD = MOV [r13|QWORD[.] + 16] size: DWORD  <||@
  Comment 1530 392 TEST (x: r11|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 1533 394 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B40 -> B41 falseDestination: B40 -> B42  <||@
  Comment 1539 block B42 null  <||@
  Comment 1539 406 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1539 408 rsi|DWORD = MOV [r14|DWORD[.] * 8 + 8] size: DWORD  <||@
  Comment 1547 410 rcx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotMethod<AbstractList.listIterator(int)>}  <||@
  Comment 1547 {meta{HotSpotMethod<AbstractList.listIterator(int)>}}  <||@
  Comment 1557 412 CMP (x: rcx|QWORD, y: [rsi|DWORD * 8 + 696]) size: QWORD  <||@
  Comment 1565 414 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B60  <||@
  Comment 1571 block B43 null  <||@
  Comment 1571 416 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1571 418 CMP rsi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed}  <||@
  Comment 1571 {meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed}}  <||@
  Comment 1577 420 BRANCH trueDestinationProbability: 0.5044648172401477 condition: = trueDestination: B43 -> B44 falseDestination: B43 -> B47  <||@
  Comment 1583 block B44 null  <||@
  Comment 1583 422 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1583 424 rsi|DWORD[.] = MOV [r14|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 1591 426 rsi|DWORD = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD state [bci:32]  <||@
  Comment 1591 [rdx:0, r13:0, r14:0, stack:64]at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 32, duringCall: false, rethrow: false]
              |0             |1                  |2  |3  |4  |5 
     locals:  |r13|QWORD[.]  |stack:32|QWORD[.]  |-  |-  |-  |- 
     stack:   |rdx|QWORD[.]  |                   |   |   |   |    <||@
  Comment 1591 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1598 428 CMP (x: r11|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 1601 430 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B44 -> B45 falseDestination: B44 -> B46  <||@
  Comment 1607 block B46 null  <||@
  Comment 1607 442 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1607 444 stack:36|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 1611 446 JUMP ~[] destination: B46 -> B55  <||@
  Comment 1611 block B55 null  <||@
  Comment 1611 506 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1611 508 rcx|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 1615 510 r8|QWORD = LEA [rcx|QWORD + 56] size: QWORD  <||@
  Comment 1619 512 CMP (x: r8|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 1623 514 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B55 -> B56 falseDestination: B55 -> B57  <||@
  Comment 1629 block B57 null  <||@
  Comment 1629 544 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1629 546 MOV (x: [r15|QWORD + 96], y: r8|QWORD) size: QWORD  <||@
  Comment 1633 548 AMD64PREFETCH ~[rcx|QWORD + 248] instr: 0  <||@
  Comment 1640 550 rsi|QWORD[*] = MOVE rcx|QWORD moveKind: QWORD  <||@
  Comment 1643 552 JUMP ~[] destination: B57 -> B58  <||@
  Comment 1643 block B58 null  <||@
  Comment 1643 554 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1643 556 rcx|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD  <||@
  Comment 1646 558 r8|QWORD[*] = LEA [rsi|QWORD[*] + 24] size: QWORD  <||@
  Comment 1650 560 r8|QWORD[.] = MOVE r8|QWORD[*] moveKind: QWORD  <||@
  Comment 1650 562 r9|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/SubList$1;, resolved>}  <||@
  Comment 1650 {meta{HotSpotType<Ljava/util/SubList$1;, resolved>}}  <||@
  Comment 1660 564 r9|QWORD = MOV [r9|QWORD + 168] size: QWORD  <||@
  Comment 1667 566 MOV (x: [rsi|QWORD[*]], y: r9|QWORD) size: QWORD  <||@
  Comment 1670 568 MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/SubList$1;, resolved>;compressed}  <||@
  Comment 1670 {meta{HotSpotType<Ljava/util/SubList$1;, resolved>;compressed}}  <||@
  Comment 1677 570 MOV (x: [rsi|QWORD[*] + 12], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 1681 572 r8|DWORD[.] = COMPRESSPOINTER (input: r8|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@68a0169d encoding: base: 0 shift: 3  <||@
  Comment 1685 574 MOV (x: [rsi|QWORD[*] + 16], y: r8|DWORD[.]) size: DWORD  <||@
  Comment 1689 576 r13|DWORD[.] = COMPRESSPOINTER (input: r13|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@68a0169d encoding: base: 0 shift: 3  <||@
  Comment 1693 578 MOV (x: [rsi|QWORD[*] + 20], y: r13|DWORD[.]) size: DWORD  <||@
  Comment 1697 580 r8|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>}  <||@
  Comment 1697 {meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>}}  <||@
  Comment 1707 582 r8|QWORD = MOV [r8|QWORD + 168] size: QWORD  <||@
  Comment 1714 584 MOV (x: [rsi|QWORD[*] + 24], y: r8|QWORD) size: QWORD  <||@
  Comment 1718 586 MOV [rsi|QWORD[*] + 32] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed}  <||@
  Comment 1718 {meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed}}  <||@
  Comment 1725 588 MOV (x: [rsi|QWORD[*] + 36], y: r11|DWORD) size: DWORD  <||@
  Comment 1729 590 MOV [rsi|QWORD[*] + 40] y: -1 size: DWORD  <||@
  Comment 1736 592 MOV (x: [rsi|QWORD[*] + 44], y: r10|DWORD) size: DWORD  <||@
  Comment 1740 594 MOV (x: [rsi|QWORD[*] + 48], y: r14|DWORD[.]) size: DWORD  <||@
  Comment 1744 596 MOV (x: [rsi|QWORD[*] + 52], y: r14|DWORD[.]) size: DWORD  <||@
  Comment 1748 598 r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1751 600 r10|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 1754 602 rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1759 604 JUMP ~[] destination: B58 -> B64  <||@
  Comment 1764 block B47 null  <||@
  Comment 1764 448 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1764 450 CMP rsi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Collections$EmptyList;, resolved>;compressed}  <||@
  Comment 1764 {meta{HotSpotType<Ljava/util/Collections$EmptyList;, resolved>;compressed}}  <||@
  Comment 1770 452 BRANCH trueDestinationProbability: 0.525228255646324 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B51  <||@
  Comment 1776 block B48 null  <||@
  Comment 1776 454 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1776 456 CMP r11|DWORD y: 1 size: DWORD  <||@
  Comment 1780 458 BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B48 -> B49 falseDestination: B48 -> B50  <||@
  Comment 1786 block B49 null  <||@
  Comment 1786 460 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1786 462 stack:36|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1794 464 JUMP ~[] destination: B49 -> B55  <||@
  Comment 1799 block B51 null  <||@
  Comment 1799 476 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1799 478 CMP rsi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeInputList;, resolved>;compressed}  <||@
  Comment 1799 {meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeInputList;, resolved>;compressed}}  <||@
  Comment 1805 480 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B59  <||@
  Comment 1811 block B52 null  <||@
  Comment 1811 482 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1811 484 rsi|DWORD = MOV [r14|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 1819 486 CMP (x: r11|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 1822 488 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B52 -> B53 falseDestination: B52 -> B54  <||@
  Comment 1828 block B54 null  <||@
  Comment 1828 500 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1828 502 stack:36|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 1832 504 JUMP ~[] destination: B54 -> B55  <||@
  Comment 1837 block B30 null  <||@
  Comment 1837 274 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1837 276 stack:36|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1842 278 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 1842 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 1852 280 rdx|DWORD = MOVE input: int[6|0x6]  <||@
  Comment 1857 282 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1862 284 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:32]  <||@
  Comment 1862 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 1867 [r13:0, r14:0, stack:64]at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 32, duringCall: false, rethrow: false]
              |0             |1                  |2  |3  |4  |5 
     locals:  |r13|QWORD[.]  |stack:32|QWORD[.]  |-  |-  |-  |- 
     stack:   |r14|QWORD[.]  |                   |   |   |   |    <||@
  Comment 1868 286 rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1871 288 r10|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 1876 290 rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1881 292 JUMP ~[] destination: B30 -> B32  <||@
  Comment 1886 block B63 null  <||@
  Comment 1886 644 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1886 646 stack:56|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1891 648 rsi|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 1894 650 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<AbstractCollection.iterator()> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:34]  <||@
  Comment 1894 7  <||@
  Comment 1911 {HotSpotMethod<AbstractCollection.iterator()>}  <||@
  Comment 1916 [stack:40, stack:64]at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34, duringCall: true, rethrow: false]
              |0  |1                  |2  |3                  |4  |5 
     locals:  |-  |stack:32|QWORD[.]  |-  |stack:56|QWORD[.]  |-  |-   <||@
  Comment 1917 652 r11|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1922 654 r10|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1925 656 rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1930 658 JUMP ~[] destination: B63 -> B64  <||@
  Comment 1935 block B8 null  <||@
  Comment 1935 72 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1935 74 CMP r14|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashSet;, resolved>;compressed}  <||@
  Comment 1935 {meta{HotSpotType<Ljava/util/HashSet;, resolved>;compressed}}  <||@
  Comment 1942 76 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B147  <||@
  Comment 1948 block B9 null  <||@
  Comment 1948 78 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1948 80 rax|DWORD[.] = MOV [r13|QWORD[.] + 12] size: DWORD  <||@
  Comment 1952 82 r10|DWORD = MOV [rax|DWORD[.] * 8 + 20] size: DWORD state [bci:0]  <||@
  Comment 1952 [r13:0, stack:64]at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 0, duringCall: false, rethrow: false]
              |0             |1                  |2  |3  |4  |5 
     locals:  |r13|QWORD[.]  |stack:32|QWORD[.]  |-  |-  |-  |-   <||@
  Comment 1952 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1960 84 rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1965 86 JUMP ~[] destination: B9 -> B10  <||@
  Comment 1970 block B140 null  <||@
  Comment 1970 1384 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1970 1388 CMP r9|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap$KeyIterator;, resolved>;compressed}  <||@
  Comment 1970 {meta{HotSpotType<Ljava/util/HashMap$KeyIterator;, resolved>;compressed}}  <||@
  Comment 1977 1390 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B140 -> B141 falseDestination: B140 -> B144  <||@
  Comment 1983 block B141 null  <||@
  Comment 1983 1392 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1983 1394 rax|DWORD[.] = MOV [r10|QWORD[.] + 20] size: DWORD  <||@
  Comment 1987 1396 TEST (x: rax|DWORD[.], y: rax|DWORD[.]) size: DWORD  <||@
  Comment 1989 1398 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B141 -> B142 falseDestination: B141 -> B143  <||@
  Comment 1995 block B142 null  <||@
  Comment 1995 1400 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1995 1402 rax|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 2000 1404 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 2009 12  <||@
  Comment 2019 block B56 null  <||@
  Comment 2019 516 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2019 518 stack:40|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 2024 520 stack:44|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 2029 522 stack:56|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 2034 524 rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 2034 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 2044 526 rsi|QWORD = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 2047 528 rdx|DWORD = MOVE input: int[10|0xa]  <||@
  Comment 2052 530 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 2057 532 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:9, 2, 34, 15, 2, 1, 34]  <||@
  Comment 2057 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 2062 [r13:0, r14:0, stack:40, stack:64]at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 9, duringCall: false, rethrow: false]
              |0               |1              
     locals:  |r14|DWORD[.]    |stack:40|DWORD 
     stack:   |stack:40|DWORD  |stack:36|DWORD 
  at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2, duringCall: true, rethrow: false]
              |0             |1              
     locals:  |r14|DWORD[.]  |stack:40|DWORD 
  at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34, duringCall: true, rethrow: false]
              |0                                                                             |1  |2 
     locals:  |-                                                                             |-  |- 
     stack:   |vobject:SubList$1:0{val$index=int[0|0x0],i=Object[null],this$0=r13|QWORD[.]}  |   |  
  at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15, duringCall: true, rethrow: false]
              |0                                                                             |1 
     locals:  |-                                                                             |- 
     stack:   |vobject:SubList$1:0{val$index=int[0|0x0],i=Object[null],this$0=r13|QWORD[.]}  |  
  at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2, duringCall: true, rethrow: false]
              |0            
     locals:  |r13|QWORD[.] 
  at java.util.SubList.iterator(AbstractList.java:691) [bci: 1, duringCall: true, rethrow: false]
              |0            
     locals:  |r13|QWORD[.] 
  at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 34, duringCall: true, rethrow: false]
              |0  |1                  |2  |3                  |4  |5 
     locals:  |-  |stack:32|QWORD[.]  |-  |stack:56|QWORD[.]  |-  |-   <||@
  Comment 2063 534 rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 2066 536 r11|DWORD = MOVE stack:40|DWORD moveKind: DWORD  <||@
  Comment 2071 538 r10|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 2076 540 rdx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 2081 542 JUMP ~[] destination: B56 -> B58  <||@
  Comment 2086 block B11 null  <||@
  Comment 2086 94 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2086 96 rsi|DWORD = MOV [rdx|QWORD[.] + 8] size: DWORD  <||@
  Comment 2089 98 rcx|QWORD[.] = MOV [rsi|DWORD * 8 + 224] size: QWORD  <||@
  Comment 2097 100 r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:void]  <||@
  Comment 2097 {Object[Class:void]}  <||@
  Comment 2107 102 CMP (x: r11|QWORD[.], y: rcx|QWORD[.]) size: QWORD  <||@
  Comment 2110 104 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B13  <||@
  Comment 2116 block B13 null  <||@
  Comment 2116 114 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2116 116 rcx|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 2120 118 r11|DWORD = SHL r10|DWORD y: 2 size: DWORD  <||@
  Comment 2127 120 r11|DWORD = LEA [r11|DWORD + 23] size: DWORD  <||@
  Comment 2131 122 r11|DWORD = AND r11|DWORD y: -8 size: DWORD  <||@
  Comment 2135 124 r11|QWORD = MOVSXD r11|DWORD size: QWORD  <||@
  Comment 2138 126 r8|QWORD = ADD (x: r11|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 2144 128 CMP (x: r8|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 2148 130 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B15  <||@
  Comment 2154 block B15 null  <||@
  Comment 2154 152 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2154 154 MOV (x: [r15|QWORD + 96], y: r8|QWORD) size: QWORD  <||@
  Comment 2158 156 AMD64PREFETCH ~[r11|QWORD + rcx|QWORD * 1 + 192] instr: 0  <||@
  Comment 2167 158 AMD64PREFETCH ~[r11|QWORD + rcx|QWORD * 1 + 256] instr: 0  <||@
  Comment 2176 160 AMD64PREFETCH ~[r11|QWORD + rcx|QWORD * 1 + 320] instr: 0  <||@
  Comment 2185 162 AMD64PREFETCH ~[r11|QWORD + rcx|QWORD * 1 + 384] instr: 0  <||@
  Comment 2194 164 MOV (x: [rcx|QWORD + 12], y: r10|DWORD) size: DWORD  <||@
  Comment 2198 166 MOV [rcx|QWORD] y: 1 size: QWORD  <||@
  Comment 2205 168 MOV (x: [rcx|QWORD + 8], y: rsi|DWORD) size: DWORD  <||@
  Comment 2208 170 rsi|QWORD = MOVE input: long[16|0x10]  <||@
  Comment 2215 172 JUMP ~[] destination: B15 -> B16  <||@
  Comment 2220 block B17 loop 0 depth 1 header:2310|LoopBegin  <||@
  Comment 2220 180 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 2224 182 MOV (x: [rcx|QWORD + rsi|QWORD * 1], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2228 184 rsi|QWORD = LEA [rsi|QWORD + 8] size: QWORD  <||@
  Comment 2232 186 JUMP ~[] destination: B17 -> B16  <||@
  Comment 2232 block B16 loop 0 depth 1 header:2310|LoopBegin  <||@
  Comment 2232 174 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2232 176 CMP (x: r11|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 2235 178 BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B16 -> B17 falseDestination: B16 -> B18  <||@
  Comment 2237 block B18 null  <||@
  Comment 2237 188 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2237 190 rcx|QWORD[.] = MOVE rcx|QWORD moveKind: QWORD  <||@
  Comment 2237 192 rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 2240 194 JUMP ~[] destination: B18 -> B19  <||@
  Comment 2240 block B19 null  <||@
  Comment 2240 196 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2240 198 CMP [rsi|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Class;, resolved>;compressed}  <||@
  Comment 2240 {meta{HotSpotType<[Ljava/lang/Class;, resolved>;compressed}}  <||@
  Comment 2247 200 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B23  <||@
  Comment 2253 block B20 null  <||@
  Comment 2253 202 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2253 204 CMP r14|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList$SubList;, resolved>;compressed}  <||@
  Comment 2253 {meta{HotSpotType<Ljava/util/ArrayList$SubList;, resolved>;compressed}}  <||@
  Comment 2260 206 BRANCH trueDestinationProbability: 0.9362023508733385 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B22  <||@
  Comment 2266 block B21 null  <||@
  Comment 2266 208 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2266 210 r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 2269 212 JUMP ~[] destination: B21 -> B26  <||@
  Comment 2274 block B22 null  <||@
  Comment 2274 214 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2274 216 rdx|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 2277 218 JUMP ~[] destination: B22 -> B36  <||@
  Comment 2282 block B14 null  <||@
  Comment 2282 132 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2282 134 rsi|QWORD = UNCOMPRESSPOINTER (input: rsi|DWORD, ~baseRegister: -) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@68a0169d encoding: base: 0 shift: 3  <||@
  Comment 2286 136 rdx|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 2289 138 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 2294 140 stack:36|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 2299 142 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:4]  <||@
  Comment 2299 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 2304 [r13:0, stack:64]at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 4, duringCall: false, rethrow: false]
              |0               |1                  |2  |3  |4  |5 
     locals:  |r13|QWORD[.]    |stack:32|QWORD[.]  |-  |-  |-  |- 
     stack:   |stack:36|DWORD  |                   |   |   |   |    <||@
  Comment 2305 144 rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 2308 146 r10|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 2313 148 rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 2318 150 JUMP ~[] destination: B14 -> B19  <||@
  Comment 2320 block B41 null  <||@
  Comment 2320 396 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2320 398 r10|DWORD = MOVE input: int[-330259|0xfffffffffffaf5ed]  <||@
  Comment 2326 404 JUMP ~[] destination: B41 -> B62  <||@
  Comment 2326 block B62 null  <||@
  Comment 2326 636 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2326 382 r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 2329 384 rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 2334 638 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 2341 640 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2348 642 DEOPT info [bci:32]  <||@
  Comment 2348 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 2353 [rdx:0, r11:0, r13:0]at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 32, duringCall: false, rethrow: false]
              |0             |1             |2  |3  |4  |5 
     locals:  |r13|QWORD[.]  |rdx|QWORD[.]  |-  |-  |-  |- 
     stack:   |r11|QWORD[.]  |              |   |   |   |    <||@
  Comment 2354 block B126 null  <||@
  Comment 2354 1260 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2354 1256 stack:76|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 2358 1262 r14|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD  <||@
  Comment 2363 1264 JUMP ~[] destination: B126 -> B127  <||@
  Comment 2363 block B127 null  <||@
  Comment 2363 1266 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2363 1268 MOV [r15|QWORD + 668] y: -309803 size: DWORD  <||@
  Comment 2374 1270 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2381 1272 DEOPT info [bci:119]  <||@
  Comment 2381 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 2386 [r10:0, r14:0, stack:32, stack:64]at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 119, duringCall: false, rethrow: false]
              |0                  |1                  |2             |3                  |4             |5              
     locals:  |-                  |stack:32|QWORD[.]  |-             |stack:64|QWORD[.]  |r10|QWORD[.]  |stack:76|DWORD 
     stack:   |stack:64|QWORD[.]  |stack:76|DWORD     |r14|QWORD[.]  |                   |              |                 <||@
  Comment 2387 block B143 null  <||@
  Comment 2387 1406 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2387 1408 r11|DWORD = MOVE input: int[-318739|0xfffffffffffb22ed]  <||@
  Comment 2393 1410 rdi|DWORD = MOVE stack:76|DWORD moveKind: DWORD  <||@
  Comment 2397 1412 r8|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 2402 1414 JUMP ~[] destination: B143 -> B145  <||@
  Comment 2402 block B145 null  <||@
  Comment 2402 1426 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2402 1428 MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD  <||@
  Comment 2409 1430 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2416 1432 DEOPT info [bci:42]  <||@
  Comment 2416 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 2421 [r8:0, r10:0, stack:64]at java.util.AbstractCollection.toArray(AbstractCollection.java:182) [bci: 42, duringCall: false, rethrow: false]
              |0  |1                  |2  |3            |4             |5         
     locals:  |-  |stack:32|QWORD[.]  |-  |r8|QWORD[.]  |r10|QWORD[.]  |rdi|DWORD   <||@
  Comment 2422 block B144 null  <||@
  Comment 2422 1416 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2422 1418 r11|DWORD = MOVE input: int[-317747|0xfffffffffffb26cd]  <||@
  Comment 2428 1420 rdi|DWORD = MOVE stack:76|DWORD moveKind: DWORD  <||@
  Comment 2432 1422 r8|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 2437 1424 JUMP ~[] destination: B144 -> B145  <||@
  Comment 2439 block B23 null  <||@
  Comment 2439 220 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2439 222 stack:36|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 2444 224 MOV [r15|QWORD + 668] y: -320051 size: DWORD  <||@
  Comment 2455 226 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2462 228 DEOPT info [bci:4]  <||@
  Comment 2462 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 2467 [r13:0, stack:64]at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 4, duringCall: false, rethrow: false]
              |0               |1                  |2  |3  |4  |5 
     locals:  |r13|QWORD[.]    |stack:32|QWORD[.]  |-  |-  |-  |- 
     stack:   |stack:36|DWORD  |                   |   |   |   |    <||@
  Comment 2468 block B146 null  <||@
  Comment 2468 1434 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2468 1436 r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1368693834]  <||@
  Comment 2468 {Object[d.a@1368693834]}  <||@
  Comment 2478 1438 MOV [r15|QWORD + 668] y: -305947 size: DWORD  <||@
  Comment 2489 1440 MOV (x: [r15|QWORD + 680], y: r11|QWORD[.]) size: QWORD  <||@
  Comment 2496 1442 DEOPT info [bci:37]  <||@
  Comment 2496 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 2501 [r10:0, stack:32, stack:64]at java.util.AbstractCollection.toArray(AbstractCollection.java:180) [bci: 37, duringCall: false, rethrow: false]
              |0             |1                  |2  |3                  |4  |5 
     locals:  |-             |stack:32|QWORD[.]  |-  |stack:64|QWORD[.]  |-  |- 
     stack:   |r10|QWORD[.]  |                   |   |                   |   |    <||@
  Comment 2502 block B12 null  <||@
  Comment 2502 106 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2502 108 MOV [r15|QWORD + 668] y: -579169 size: DWORD  <||@
  Comment 2513 110 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2520 112 DEOPT info [bci:4]  <||@
  Comment 2520 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 2525 [r13:0, stack:64]at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 4, duringCall: false, rethrow: false]
              |0             |1                  |2  |3  |4  |5 
     locals:  |r13|QWORD[.]  |stack:32|QWORD[.]  |-  |-  |-  |- 
     stack:   |r10|DWORD     |                   |   |   |   |    <||@
  Comment 2526 block B45 null  <||@
  Comment 2526 432 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2526 434 r10|DWORD = MOVE input: int[-332563|0xfffffffffffaeced]  <||@
  Comment 2532 440 JUMP ~[] destination: B45 -> B62  <||@
  Comment 2537 block B78 null  <||@
  Comment 2537 794 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2537 796 r8|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 2540 798 r11|DWORD = MOVE input: int[-270619|0xfffffffffffbdee5]  <||@
  Comment 2546 800 JUMP ~[] destination: B78 -> B145  <||@
  Comment 2551 block B39 null  <||@
  Comment 2551 378 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2551 380 r10|DWORD = MOVE input: int[-328211|0xfffffffffffafded]  <||@
  Comment 2557 386 JUMP ~[] destination: B39 -> B62  <||@
  Comment 2562 block B60 null  <||@
  Comment 2562 616 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2562 618 r10|DWORD = MOVE input: int[-330035|0xfffffffffffaf6cd]  <||@
  Comment 2568 624 JUMP ~[] destination: B60 -> B62  <||@
  Comment 2573 block B53 null  <||@
  Comment 2573 490 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2573 492 r10|DWORD = MOVE input: int[-333843|0xfffffffffffae7ed]  <||@
  Comment 2579 498 JUMP ~[] destination: B53 -> B62  <||@
  Comment 2584 block B80 null  <||@
  Comment 2584 810 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2584 812 r8|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 2587 814 r11|DWORD = MOVE input: int[-265747|0xfffffffffffbf1ed]  <||@
  Comment 2593 816 JUMP ~[] destination: B80 -> B145  <||@
  Comment 2598 block B59 null  <||@
  Comment 2598 606 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2598 608 r10|DWORD = MOVE input: int[-333107|0xfffffffffffaeacd]  <||@
  Comment 2604 614 JUMP ~[] destination: B59 -> B62  <||@
  Comment 2609 block B139 null  <||@
  Comment 2609 1374 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2609 1376 r11|DWORD = MOVE input: int[-314163|0xfffffffffffb34cd]  <||@
  Comment 2615 1378 rdi|DWORD = MOVE stack:76|DWORD moveKind: DWORD  <||@
  Comment 2619 1380 r8|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 2624 1382 JUMP ~[] destination: B139 -> B145  <||@
  Comment 2629 block B81 null  <||@
  Comment 2629 818 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2629 820 r8|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 2632 822 r11|DWORD = MOVE input: int[-265491|0xfffffffffffbf2ed]  <||@
  Comment 2638 824 JUMP ~[] destination: B81 -> B145  <||@
  Comment 2643 block B128 null  <||@
  Comment 2643 1274 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2643 1276 r8|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 2646 1278 r11|DWORD = MOVE input: int[-295187|0xfffffffffffb7eed]  <||@
  Comment 2652 1280 JUMP ~[] destination: B128 -> B145  <||@
  Comment 2657 block B50 null  <||@
  Comment 2657 466 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2657 468 r10|DWORD = MOVE input: int[-332819|0xfffffffffffaebed]  <||@
  Comment 2663 474 JUMP ~[] destination: B50 -> B62  <||@
  Comment 2668 block B95 null  <||@
  Comment 2668 996 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2668 998 r8|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 2671 1000 r11|DWORD = MOVE input: int[-280083|0xfffffffffffbb9ed]  <||@
  Comment 2677 1002 JUMP ~[] destination: B95 -> B145  <||@
  Comment 2682 block B96 null  <||@
  Comment 2682 1004 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2682 1006 r8|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 2685 1008 r11|DWORD = MOVE input: int[-277267|0xfffffffffffbc4ed]  <||@
  Comment 2691 1010 JUMP ~[] destination: B96 -> B145  <||@
  Comment 2696 block B97 null  <||@
  Comment 2696 1012 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2696 1014 r8|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 2699 1016 r11|DWORD = MOVE input: int[-273971|0xfffffffffffbd1cd]  <||@
  Comment 2705 1018 JUMP ~[] destination: B97 -> B145  <||@
  Comment 2710 block B93 null  <||@
  Comment 2710 942 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2710 944 r8|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 2713 946 r11|DWORD = MOVE input: int[-288027|0xfffffffffffb9ae5]  <||@
  Comment 2719 948 JUMP ~[] destination: B93 -> B145  <||@
  Comment 2724 block B28 null  <||@
  Comment 2724 258 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2724 260 r10|DWORD = MOVE input: int[-324115|0xfffffffffffb0ded]  <||@
  Comment 2730 262 JUMP ~[] destination: B28 -> B34  <||@
  Comment 2730 block B34 null  <||@
  Comment 2730 344 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2730 346 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 2737 348 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2744 350 DEOPT info [bci:32]  <||@
  Comment 2744 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 2749 [r13:0, r14:0, stack:64]at java.util.AbstractCollection.toArray(AbstractCollection.java:179) [bci: 32, duringCall: false, rethrow: false]
              |0             |1                  |2  |3  |4  |5 
     locals:  |r13|QWORD[.]  |stack:32|QWORD[.]  |-  |-  |-  |- 
     stack:   |r14|QWORD[.]  |                   |   |   |   |    <||@
  Comment 2750 block B129 null  <||@
  Comment 2750 1282 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2750 1284 r8|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 2753 1286 r11|DWORD = MOVE input: int[-291379|0xfffffffffffb8dcd]  <||@
  Comment 2759 1288 JUMP ~[] destination: B129 -> B145  <||@
  Comment 2764 block B61 null  <||@
  Comment 2764 626 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2764 628 r10|DWORD = MOVE input: int[-327443|0xfffffffffffb00ed]  <||@
  Comment 2770 634 JUMP ~[] destination: B61 -> B62  <||@
  Comment 2775 block B3 null  <||@
  Comment 2775 36 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2775 38 r10|DWORD = MOVE input: int[-336915|0xfffffffffffadbed]  <||@
  Comment 2781 40 JUMP ~[] destination: B3 -> B148  <||@
  Comment 2781 block B148 null  <||@
  Comment 2781 1450 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2781 1452 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 2788 1454 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2795 1456 DEOPT info [bci:0]  <||@
  Comment 2795 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 2800 [r13:0, stack:64]at java.util.AbstractCollection.toArray(AbstractCollection.java:176) [bci: 0, duringCall: false, rethrow: false]
              |0             |1                  |2  |3  |4  |5 
     locals:  |r13|QWORD[.]  |stack:32|QWORD[.]  |-  |-  |-  |-   <||@
  Comment 2801 block B7 null  <||@
  Comment 2801 66 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2801 68 r10|DWORD = MOVE input: int[-340243|0xfffffffffffaceed]  <||@
  Comment 2807 70 JUMP ~[] destination: B7 -> B148  <||@
  Comment 2809 block B107 null  <||@
  Comment 2809 1116 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2809 1118 rsi|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD  <||@
  Comment 2813 1120 stack:76|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 2817 1122 JUMP ~[] destination: B107 -> B108  <||@
  Comment 2817 block B108 null  <||@
  Comment 2817 1124 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2817 1126 MOV [r15|QWORD + 668] y: -302107 size: DWORD  <||@
  Comment 2828 1128 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2835 1130 DEOPT info [bci:68, 1, 114]  <||@
  Comment 2835 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 2840 [rax:0, rsi:0, r10:0, stack:32, stack:64]at java.util.HashMap$HashIterator.nextNode(HashMap.java:1446) [bci: 68, duringCall: false, rethrow: false]
              |0             |1             |2            
     locals:  |r10|QWORD[.]  |rax|QWORD[.]  |rsi|DWORD[.] 
  at java.util.HashMap$KeyIterator.next(HashMap.java:1466) [bci: 1, duringCall: true, rethrow: false]
              |0 
     locals:  |- 
  at java.util.AbstractCollection.toArray(AbstractCollection.java:196) [bci: 114, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3                  |4             |5              
     locals:  |-                  |stack:32|QWORD[.]  |-  |stack:64|QWORD[.]  |r10|QWORD[.]  |stack:76|DWORD 
     stack:   |stack:64|QWORD[.]  |stack:76|DWORD     |   |                   |              |                 <||@
  Comment 2841 block B33 null  <||@
  Comment 2841 338 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2841 340 r10|DWORD = MOVE input: int[-323347|0xfffffffffffb10ed]  <||@
  Comment 2847 342 JUMP ~[] destination: B33 -> B34  <||@
  Comment 2849 block B79 null  <||@
  Comment 2849 802 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2849 804 r8|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 2852 806 r11|DWORD = MOVE input: int[-268819|0xfffffffffffbe5ed]  <||@
  Comment 2858 808 JUMP ~[] destination: B79 -> B145  <||@
  Comment 2863 block B133 null  <||@
  Comment 2863 1316 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2863 1318 r11|DWORD = MOVE input: int[-312851|0xfffffffffffb39ed]  <||@
  Comment 2869 1320 rdi|DWORD = MOVE stack:76|DWORD moveKind: DWORD  <||@
  Comment 2873 1322 r8|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 2878 1324 JUMP ~[] destination: B133 -> B145  <||@
  Comment 2883 block B89 null  <||@
  Comment 2883 902 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2883 904 r8|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 2886 906 r11|DWORD = MOVE input: int[-282907|0xfffffffffffbaee5]  <||@
  Comment 2892 908 JUMP ~[] destination: B89 -> B145  <||@
  Comment 2897 block B147 null  <||@
  Comment 2897 1444 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2897 1446 r10|DWORD = MOVE input: int[-341043|0xfffffffffffacbcd]  <||@
  Comment 2903 1448 JUMP ~[] destination: B147 -> B148  <||@
  Comment 2905 block B137 null  <||@
  Comment 2905 1358 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2905 1360 r11|DWORD = MOVE input: int[-317459|0xfffffffffffb27ed]  <||@
  Comment 2911 1362 rdi|DWORD = MOVE stack:76|DWORD moveKind: DWORD  <||@
  Comment 2915 1364 r8|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 2920 1366 JUMP ~[] destination: B137 -> B145  <||@
  Comment 2925 block B72 null  <||@
  Comment 2925 732 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2925 734 r8|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 2928 736 r11|DWORD = MOVE input: int[-262419|0xfffffffffffbfeed]  <||@
  Comment 2934 738 JUMP ~[] destination: B72 -> B145  <||@
  Comment 2939 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 2939 4  <||@
  Comment 2945 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 2945 5  <||@
  HexCodeFile>>> <|@
end_nmethod
