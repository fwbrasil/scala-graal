begin_compilation
  name " HotSpotCompilation-9015[org.graalvm.collections.EconomicMapImpl.contains(Object)]"
  method "HotSpotCompilation-9015[org.graalvm.collections.EconomicMapImpl.contains(Object)]"
  date 1527005199740
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a279 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: a279  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Lorg/graalvm/collections/EconomicMapImpl;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v290 ?59 v222 v285 ?45 v286 v287 ?108 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v285 <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a279 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a279 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.hashArray
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.hasHashArray(EconomicMapImpl.java:603) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:237) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.containsKey(EconomicMapImpl.java:592) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.contains(EconomicMapImpl.java:844) [bci: 2]
nullCheck: false
stamp: n# [B
=== Inputs ===
stateBefore: - 
guard: - 
address: v285 
=== Succesors ===
next: v24 
=== Usages ===
v223 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v285 #next: v24  <|@  <|@
f <@~|@floating>@ <|@
tid v223 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.hasHashArray(EconomicMapImpl.java:603) [bci: 4]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:237) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.containsKey(EconomicMapImpl.java:592) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.contains(EconomicMapImpl.java:844) [bci: 2]
stamp: void
=== Inputs ===
value: a279 
=== Succesors ===
=== Usages ===
v24 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a279  <|@  <|@
f <@~|@floating>@ <|@
tid i11 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.containsKey(EconomicMapImpl.java:592) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.contains(EconomicMapImpl.java:844) [bci: 2]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1] ⇊00000000ffffffff
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v12 v143 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i14 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.containsKey(EconomicMapImpl.java:592) [bci: 6]
at org.graalvm.collections.EconomicMapImpl.contains(EconomicMapImpl.java:844) [bci: 2]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i15 i144 i53 i66 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
tid ?17 <|@
d <@d|@=== Debug Properties ===
bci: 2
code: ResolvedJavaMethodBytecode<EconomicMapImpl.contains(Object)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 844
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - 
=== Succesors ===
=== Usages ===
?33 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - -  <|@  <|@
tid ?33 <|@
d <@d|@=== Debug Properties ===
bci: 2
code: ResolvedJavaMethodBytecode<EconomicMapImpl.containsKey(Object)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 592
stackSize: 0
=== Inputs ===
outerFrameState: ?17 
values: - - 
=== Succesors ===
=== Usages ===
?70 ?265 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?17 values: - -  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a Ljava/lang/Object;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v292 ?59 v222 ?45 ?108 v75 v217 v221 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i13 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.containsKey(EconomicMapImpl.java:592) [bci: 6]
at org.graalvm.collections.EconomicMapImpl.contains(EconomicMapImpl.java:844) [bci: 2]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
i15 v60 i144 i44 v137 ?59 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v24 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:237) [bci: 4]
at org.graalvm.collections.EconomicMapImpl.containsKey(EconomicMapImpl.java:592) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.contains(EconomicMapImpl.java:844) [bci: 2]
stamp: void
trueSuccessorProbability: 0.6466581165811264
=== Inputs ===
condition: v223 
=== Succesors ===
trueSuccessor: v22 
falseSuccessor: v23 
=== Usages ===
=== Predecessor ===
a279 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v223 #trueSuccessor: v22 #falseSuccessor: v23  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" 
    xhandlers
    flags 
    probability 4603999798051018151
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v22 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 13]
at org.graalvm.collections.EconomicMapImpl.containsKey(EconomicMapImpl.java:592) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.contains(EconomicMapImpl.java:844) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v42 
=== Usages ===
=== Predecessor ===
v24 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v42  <|@  <|@
f <@~|@floating>@ <|@
tid v290 <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a284 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
tid ?70 <|@
d <@d|@=== Debug Properties ===
bci: 15
code: ResolvedJavaMethodBytecode<EconomicMapImpl.find(Object)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 240
stackSize: 0
=== Inputs ===
outerFrameState: ?33 
values: - - 
=== Succesors ===
=== Usages ===
?45 ?108 ?59 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?33 values: - -  <|@  <|@
f <@~|@floating>@ <|@
tid v287 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a281 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v286 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i280 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@*|@fixed>@ <|@
tid v42 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:245) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.containsKey(EconomicMapImpl.java:592) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.contains(EconomicMapImpl.java:844) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v43 
=== Predecessor ===
v22 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" "B14" "B7" "B11" 
    successors "B3" "B19" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4608597315681346295
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i44 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v43 
values: i13 i66 i66 i66 
=== Succesors ===
=== Usages ===
?45 v47 i53 ?59 v12 i66 ?108 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v43 values: i13 i66 i66 i66  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v43 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: true
inversionCount: 0
loopFrequency: 2.032248858132847
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:245) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.containsKey(EconomicMapImpl.java:592) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.contains(EconomicMapImpl.java:844) [bci: 2]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v42 
=== Succesors ===
next: i280 
=== Usages ===
i44 v49 v62 v67 v134 v177 v251 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v42 #next: i280  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i280 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.totalEntries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:245) [bci: 4]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.containsKey(EconomicMapImpl.java:592) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.contains(EconomicMapImpl.java:844) [bci: 2]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v286 
=== Succesors ===
next: v51 
=== Usages ===
v47 
=== Predecessor ===
v43 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v286 #next: v51  <|@  <|@
f <@~|@floating>@ <|@
tid v47 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:245) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.containsKey(EconomicMapImpl.java:592) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.contains(EconomicMapImpl.java:844) [bci: 2]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i44 
y: i280 
=== Succesors ===
=== Usages ===
v51 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i44 y: i280  <|@  <|@
f <@*|@fixed>@ <|@
tid v51 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:245) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.containsKey(EconomicMapImpl.java:592) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.contains(EconomicMapImpl.java:844) [bci: 2]
stamp: void
trueSuccessorProbability: 0.5507111845837876
=== Inputs ===
condition: v47 
=== Succesors ===
trueSuccessor: v48 
falseSuccessor: v49 
=== Usages ===
=== Predecessor ===
i280 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v47 #trueSuccessor: v48 #falseSuccessor: v49  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B18" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604693983991798113
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v48 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:246) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.containsKey(EconomicMapImpl.java:592) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.contains(EconomicMapImpl.java:844) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: a281 
=== Usages ===
=== Predecessor ===
v51 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a281  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a281 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.entries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:246) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.containsKey(EconomicMapImpl.java:592) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.contains(EconomicMapImpl.java:844) [bci: 2]
nullCheck: false
stamp: n [Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v287 
=== Succesors ===
next: i282 
=== Usages ===
a192 v288 
=== Predecessor ===
v48 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v287 #next: i282  <|@  <|@
tid ?45 <|@
d <@d|@=== Debug Properties ===
bci: 2
code: ResolvedJavaMethodBytecode<EconomicMapImpl.findLinear(Object)>
duringCall: false
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 245
stackSize: 0
=== Inputs ===
outerFrameState: ?70 
values: a1 a2 i44 - 
=== Succesors ===
=== Usages ===
v240 v241 v272 i282 v291 v292 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?70 values: a1 a2 i44 -  <|@  <|@
f <@~|@floating>@ <|@
tid v288 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a281 
=== Succesors ===
=== Usages ===
i282 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a281  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i282 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:246) [bci: 17]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.containsKey(EconomicMapImpl.java:592) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.contains(EconomicMapImpl.java:844) [bci: 2]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?45 
guard: - 
address: v288 
=== Succesors ===
next: v252 
=== Usages ===
v198 
=== Predecessor ===
a281 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?45 guard: - address: v288 #next: v252  <|@  <|@
f <@~|@floating>@ <|@
tid i53 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:246) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.containsKey(EconomicMapImpl.java:592) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.contains(EconomicMapImpl.java:844) [bci: 2]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i44 
y: i14 
=== Succesors ===
=== Usages ===
v289 v198 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i44 y: i14  <|@  <|@
f <@~|@floating>@ <|@
tid v198 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:246) [bci: 17]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.containsKey(EconomicMapImpl.java:592) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.contains(EconomicMapImpl.java:844) [bci: 2]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i53 
y: i282 
=== Succesors ===
=== Usages ===
v252 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i53 y: i282  <|@  <|@
f <@*|@fixed>@ <|@
tid v252 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:246) [bci: 17]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.containsKey(EconomicMapImpl.java:592) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.contains(EconomicMapImpl.java:844) [bci: 2]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v198 
=== Succesors ===
trueSuccessor: v248 
falseSuccessor: v251 
=== Usages ===
=== Predecessor ===
i282 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v198 #trueSuccessor: v248 #falseSuccessor: v251  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604693983991798113
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v248 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:246) [bci: 17]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.containsKey(EconomicMapImpl.java:592) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.contains(EconomicMapImpl.java:844) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: a283 
=== Usages ===
a283 
=== Predecessor ===
v252 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a283  <|@  <|@
f <@~|@floating>@ <|@
tid a192 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:246) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.containsKey(EconomicMapImpl.java:592) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.contains(EconomicMapImpl.java:844) [bci: 2]
op: Uncompress
stamp: a [Ljava/lang/Object;
=== Inputs ===
value: a281 
=== Succesors ===
=== Usages ===
v289 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a281  <|@  <|@
f <@~|@floating>@ <|@
tid v289 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a192 
index: i53 
=== Succesors ===
=== Usages ===
a283 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a192 index: i53  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a283 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:246) [bci: 17]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.containsKey(EconomicMapImpl.java:592) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.contains(EconomicMapImpl.java:844) [bci: 2]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: v248 
address: v289 
=== Succesors ===
next: v291 
=== Usages ===
a208 v291 
=== Predecessor ===
v248 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v248 address: v289 #next: v291  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v291 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?45 
object: a283 
=== Succesors ===
next: v78 
=== Usages ===
=== Predecessor ===
a283 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?45 object: a283 #next: v78  <|@  <|@
f <@~|@floating>@ <|@
tid a208 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:246) [bci: 17]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.containsKey(EconomicMapImpl.java:592) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.contains(EconomicMapImpl.java:844) [bci: 2]
op: Uncompress
stamp: a Ljava/lang/Object;
=== Inputs ===
value: a283 
=== Succesors ===
=== Usages ===
v217 v221 v75 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a283  <|@  <|@
f <@~|@floating>@ <|@
tid v75 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:255) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.containsKey(EconomicMapImpl.java:592) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.contains(EconomicMapImpl.java:844) [bci: 2]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a2 
y: a208 
=== Succesors ===
=== Usages ===
v78 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.ObjectEqualsNode>@ x: a2 y: a208  <|@  <|@
f <@*|@fixed>@ <|@
tid v78 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:255) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.containsKey(EconomicMapImpl.java:592) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.contains(EconomicMapImpl.java:844) [bci: 2]
stamp: void
trueSuccessorProbability: 0.09569357247187082
=== Inputs ===
condition: v75 
=== Succesors ===
trueSuccessor: v76 
falseSuccessor: v77 
=== Usages ===
=== Predecessor ===
v291 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v75 #trueSuccessor: v76 #falseSuccessor: v77  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B16" 
    xhandlers
    flags 
    probability 4589654851527087159
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v76 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:256) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.containsKey(EconomicMapImpl.java:592) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.contains(EconomicMapImpl.java:844) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v152 
=== Usages ===
=== Predecessor ===
v78 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v152  <|@  <|@
f <@*|@fixed>@ <|@
tid v152 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v149 
=== Predecessor ===
v76 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604070180133807834
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v77 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:258) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.containsKey(EconomicMapImpl.java:592) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.contains(EconomicMapImpl.java:844) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: a284 
=== Usages ===
=== Predecessor ===
v78 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a284  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a284 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.strategy
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:258) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.containsKey(EconomicMapImpl.java:592) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.contains(EconomicMapImpl.java:844) [bci: 2]
nullCheck: false
stamp: n Lorg/graalvm/collections/Equivalence;
=== Inputs ===
stateBefore: - 
guard: - 
address: v290 
=== Succesors ===
next: v84 
=== Usages ===
a213 v218 v227 v229 
=== Predecessor ===
v77 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v290 #next: v84  <|@  <|@
f <@~|@floating>@ <|@
tid v218 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.containsKey(EconomicMapImpl.java:592) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.contains(EconomicMapImpl.java:844) [bci: 2]
stamp: void
=== Inputs ===
value: a284 
=== Succesors ===
=== Usages ===
v84 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a284  <|@  <|@
f <@~|@floating>@ <|@
tid i66 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:245) [bci: 34]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.containsKey(EconomicMapImpl.java:592) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.contains(EconomicMapImpl.java:844) [bci: 2]
stamp: i32
=== Inputs ===
x: i44 
y: i14 
=== Succesors ===
=== Usages ===
i44 i44 i44 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i44 y: i14  <|@  <|@
f <@*|@fixed>@ <|@
tid v84 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:258) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.containsKey(EconomicMapImpl.java:592) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.contains(EconomicMapImpl.java:844) [bci: 2]
stamp: void
trueSuccessorProbability: 0.9726719235714489
=== Inputs ===
condition: v218 
=== Succesors ===
trueSuccessor: v82 
falseSuccessor: v83 
=== Usages ===
=== Predecessor ===
a284 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v218 #trueSuccessor: v82 #falseSuccessor: v83  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B2" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4603909082200301151
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v82 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:265) [bci: 50]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.containsKey(EconomicMapImpl.java:592) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.contains(EconomicMapImpl.java:844) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v240 
=== Usages ===
=== Predecessor ===
v84 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v240  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v240 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?45 
=== Succesors ===
next: v134 
=== Usages ===
=== Predecessor ===
v82 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?45 #next: v134  <|@  <|@
f <@*|@fixed>@ <|@
tid v134 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 1
stamp: void
=== Inputs ===
loopBegin: v43 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v240 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v43  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B10" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4580812355280637790
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v83 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:258) [bci: 14]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.containsKey(EconomicMapImpl.java:592) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.contains(EconomicMapImpl.java:844) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v96 
=== Usages ===
=== Predecessor ===
v84 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v96  <|@  <|@
f <@~|@floating>@ <|@
tid a228 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:259) [bci: 31]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.containsKey(EconomicMapImpl.java:592) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.contains(EconomicMapImpl.java:844) [bci: 2]
rawvalue: Equivalence$1@1642007824
stableDimension: 0
stamp: n!# Lorg/graalvm/collections/Equivalence$1;
stampKind: n -
value: NarrowOop[Equivalence$1@1642007824]
=== Inputs ===
=== Succesors ===
=== Usages ===
v229 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v229 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:259) [bci: 31]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.containsKey(EconomicMapImpl.java:592) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.contains(EconomicMapImpl.java:844) [bci: 2]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a284 
y: a228 
=== Succesors ===
=== Usages ===
v96 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: a284 y: a228  <|@  <|@
tid ?108 <|@
d <@d|@=== Debug Properties ===
bci: 26
code: ResolvedJavaMethodBytecode<EconomicMapImpl.findLinear(Object)>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 247
stackSize: 0
=== Inputs ===
outerFrameState: ?70 
values: a1 a2 i44 - 
=== Succesors ===
=== Usages ===
?264 ?263 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?70 values: a1 a2 i44 -  <|@  <|@
f <@*|@fixed>@ <|@
tid v96 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:259) [bci: 31]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.containsKey(EconomicMapImpl.java:592) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.contains(EconomicMapImpl.java:844) [bci: 2]
stamp: void
trueSuccessorProbability: 0.7114431340645025
=== Inputs ===
condition: v229 
=== Succesors ===
trueSuccessor: v94 
falseSuccessor: v88 
=== Usages ===
=== Predecessor ===
v83 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v229 #trueSuccessor: v94 #falseSuccessor: v88  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B13" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4578488790978193238
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v94 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:260) [bci: 34]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.containsKey(EconomicMapImpl.java:592) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.contains(EconomicMapImpl.java:844) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v292 
=== Usages ===
=== Predecessor ===
v96 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v292  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v292 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?45 
object: a2 
=== Succesors ===
next: i98 
=== Usages ===
=== Predecessor ===
v94 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?45 object: a2 #next: i98  <|@  <|@
tid v217 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:260) [bci: 36]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.containsKey(EconomicMapImpl.java:592) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.contains(EconomicMapImpl.java:844) [bci: 2]
returnStamp: i32 [0 - 1] ⇈0000000000000001
signature: [Ljdk.vm.ci.meta.JavaType;@61256e14
stamp: void
targetMethod: HotSpotMethod<Object.equals(Object)>
=== Inputs ===
arguments: a2 a208 
=== Succesors ===
=== Usages ===
i98 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a2 a208  <|@  <|@
tid ?263 <|@
d <@d|@=== Debug Properties ===
bci: 36
code: ResolvedJavaMethodBytecode<EconomicMapImpl.compareKeys(Object, Object)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 260
stackSize: 0
=== Inputs ===
outerFrameState: ?108 
values: - - - 
=== Succesors ===
=== Usages ===
i98 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?108 values: - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i98 <|@
d <@d|@=== Debug Properties ===
bci: 36
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:260) [bci: 36]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.containsKey(EconomicMapImpl.java:592) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.contains(EconomicMapImpl.java:844) [bci: 2]
polymorphic: false
stamp: i32 [0 - 1] ⇈0000000000000001
targetMethod: Direct#Object.equals
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v217 
stateDuring: ?263 
=== Succesors ===
next: v112 
=== Usages ===
i111 
=== Predecessor ===
v292 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v217 stateDuring: ?263 #next: v112  <|@  <|@
f <@*|@fixed>@ <|@
tid v112 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v109 
=== Predecessor ===
i98 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4572600219248258764
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v88 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:259) [bci: 24]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.containsKey(EconomicMapImpl.java:592) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.contains(EconomicMapImpl.java:844) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v90 
=== Usages ===
=== Predecessor ===
v96 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v90  <|@  <|@
f <@~|@floating>@ <|@
tid a226 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:258) [bci: 21]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.containsKey(EconomicMapImpl.java:592) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.contains(EconomicMapImpl.java:844) [bci: 2]
rawvalue: Equivalence$3@1213634123
stableDimension: 0
stamp: n!# Lorg/graalvm/collections/Equivalence$3;
stampKind: n -
value: NarrowOop[Equivalence$3@1213634123]
=== Inputs ===
=== Succesors ===
=== Usages ===
v227 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v227 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:258) [bci: 21]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.containsKey(EconomicMapImpl.java:592) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.contains(EconomicMapImpl.java:844) [bci: 2]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a284 
y: a226 
=== Succesors ===
=== Usages ===
v90 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: a284 y: a226  <|@  <|@
f <@*|@fixed>@ <|@
tid v90 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:258) [bci: 21]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.containsKey(EconomicMapImpl.java:592) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.contains(EconomicMapImpl.java:844) [bci: 2]
stamp: void
trueSuccessorProbability: 0.0023566146768518636
=== Inputs ===
condition: v227 
=== Succesors ===
trueSuccessor: v89 
falseSuccessor: v95 
=== Usages ===
=== Predecessor ===
v88 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v227 #trueSuccessor: v89 #falseSuccessor: v95  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B2" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4533297054270606691
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v89 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:265) [bci: 50]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.containsKey(EconomicMapImpl.java:592) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.contains(EconomicMapImpl.java:844) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v241 
=== Usages ===
=== Predecessor ===
v90 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v241  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v241 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?45 
=== Succesors ===
next: v177 
=== Usages ===
=== Predecessor ===
v89 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?45 #next: v177  <|@  <|@
f <@*|@fixed>@ <|@
tid v177 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 2
stamp: void
=== Inputs ===
loopBegin: v43 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v241 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v43  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4572586196926455525
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v95 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.containsKey(EconomicMapImpl.java:592) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.contains(EconomicMapImpl.java:844) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: i103 
=== Usages ===
=== Predecessor ===
v90 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i103  <|@  <|@
f <@~|@floating>@ <|@
tid a213 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:258) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.containsKey(EconomicMapImpl.java:592) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.contains(EconomicMapImpl.java:844) [bci: 2]
op: Uncompress
stamp: a Lorg/graalvm/collections/Equivalence;
=== Inputs ===
value: a284 
=== Succesors ===
=== Usages ===
v221 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a284  <|@  <|@
tid v221 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.containsKey(EconomicMapImpl.java:592) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.contains(EconomicMapImpl.java:844) [bci: 2]
returnStamp: i32 [0 - 1] ⇈0000000000000001
signature: [Ljdk.vm.ci.meta.JavaType;@664ca570
stamp: void
targetMethod: HotSpotMethod<Equivalence.equals(Object, Object)>
=== Inputs ===
arguments: a213 a2 a208 
=== Succesors ===
=== Usages ===
i103 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a213 a2 a208  <|@  <|@
tid ?264 <|@
d <@d|@=== Debug Properties ===
bci: 46
code: ResolvedJavaMethodBytecode<EconomicMapImpl.compareKeys(Object, Object)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 262
stackSize: 0
=== Inputs ===
outerFrameState: ?108 
values: - - - 
=== Succesors ===
=== Usages ===
i103 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?108 values: - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i103 <|@
d <@d|@=== Debug Properties ===
bci: 46
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.containsKey(EconomicMapImpl.java:592) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.contains(EconomicMapImpl.java:844) [bci: 2]
polymorphic: false
stamp: i32 [0 - 1] ⇈0000000000000001
targetMethod: Direct#Equivalence.equals
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v221 
stateDuring: ?264 
=== Succesors ===
next: v113 
=== Usages ===
i111 
=== Predecessor ===
v95 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v221 stateDuring: ?264 #next: v113  <|@  <|@
f <@*|@fixed>@ <|@
tid v113 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v109 
=== Predecessor ===
i103 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B9" "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4580808849700186980
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i111 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 1] ⇈0000000000000001
valueDescription: i32
=== Inputs ===
merge: v109 
values: i98 i103 
=== Succesors ===
=== Usages ===
v60 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v109 values: i98 i103  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v109 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v112 v113 
=== Succesors ===
next: v65 
=== Usages ===
i111 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v112 v113 #next: v65  <|@  <|@
f <@~|@floating>@ <|@
tid v60 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 29]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.containsKey(EconomicMapImpl.java:592) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.contains(EconomicMapImpl.java:844) [bci: 2]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i111 
y: i13 
=== Succesors ===
=== Usages ===
v65 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i111 y: i13  <|@  <|@
f <@*|@fixed>@ <|@
tid v65 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 29]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.containsKey(EconomicMapImpl.java:592) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.contains(EconomicMapImpl.java:844) [bci: 2]
stamp: void
trueSuccessorProbability: 0.9223242473295923
=== Inputs ===
condition: v60 
=== Succesors ===
trueSuccessor: v61 
falseSuccessor: v122 
=== Usages ===
=== Predecessor ===
v109 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v60 #trueSuccessor: v61 #falseSuccessor: v122  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B2" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4580408693095146119
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v61 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:245) [bci: 34]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.containsKey(EconomicMapImpl.java:592) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.contains(EconomicMapImpl.java:844) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v239 
=== Usages ===
=== Predecessor ===
v65 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v239  <|@  <|@
tid ?59 <|@
d <@d|@=== Debug Properties ===
bci: 29
code: ResolvedJavaMethodBytecode<EconomicMapImpl.findLinear(Object)>
duringCall: false
localsSize: 4
locksSize: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.containsKey(EconomicMapImpl.java:592) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.contains(EconomicMapImpl.java:844) [bci: 2]
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 247
stackSize: 1
=== Inputs ===
outerFrameState: ?70 
values: a1 a2 i44 - i13 
=== Succesors ===
=== Usages ===
v239 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?70 values: a1 a2 i44 - i13  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v239 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?59 
=== Succesors ===
next: v67 
=== Usages ===
=== Predecessor ===
v61 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?59 #next: v67  <|@  <|@
f <@*|@fixed>@ <|@
tid v67 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:245) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.containsKey(EconomicMapImpl.java:592) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.contains(EconomicMapImpl.java:844) [bci: 2]
stamp: void
=== Inputs ===
loopBegin: v43 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v239 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v43  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4564045328579595731
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v122 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:248) [bci: 32]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.containsKey(EconomicMapImpl.java:592) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.contains(EconomicMapImpl.java:844) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v150 
=== Usages ===
=== Predecessor ===
v65 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v150  <|@  <|@
f <@*|@fixed>@ <|@
tid v150 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v149 
=== Predecessor ===
v122 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B5" 
    successors "B17" 
    xhandlers
    flags 
    probability 4589754890678347374
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v149 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v150 v152 
=== Succesors ===
next: v62 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v150 v152 #next: v62  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors 
    xhandlers
    flags 
    probability 4589754890678347374
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v62 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:248) [bci: 32]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.containsKey(EconomicMapImpl.java:592) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.contains(EconomicMapImpl.java:844) [bci: 2]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v43 
=== Succesors ===
next: v7 
=== Usages ===
=== Predecessor ===
v149 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v43 #next: v7  <|@  <|@
f <@~|@floating>@ <|@
tid v12 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.containsKey(EconomicMapImpl.java:592) [bci: 6]
at org.graalvm.collections.EconomicMapImpl.contains(EconomicMapImpl.java:844) [bci: 2]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i44 
y: i11 
=== Succesors ===
=== Usages ===
i15 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i44 y: i11  <|@  <|@
f <@~|@floating>@ <|@
tid i15 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.containsKey(EconomicMapImpl.java:592) [bci: 6]
at org.graalvm.collections.EconomicMapImpl.contains(EconomicMapImpl.java:844) [bci: 2]
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
condition: v12 
trueValue: i13 
falseValue: i14 
=== Succesors ===
=== Usages ===
v7 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v12 trueValue: i13 falseValue: i14  <|@  <|@
f <@*|@fixed>@ <|@
tid v7 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.contains(EconomicMapImpl.java:844) [bci: 5]
stamp: void
=== Inputs ===
result: i15 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v62 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i15 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v251 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:246) [bci: 17]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.containsKey(EconomicMapImpl.java:592) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.contains(EconomicMapImpl.java:844) [bci: 2]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v43 
=== Succesors ===
next: v272 
=== Usages ===
=== Predecessor ===
v252 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v43 #next: v272  <|@  <|@
f <@~|@floating>@ <|@
tid a269 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v272 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i274 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -50971
stableDimension: 0
stamp: i32 [-50971] ⇊00000000ffff38e5 ⇈00000000ffff38e5
stampKind: i32
value: int[-50971|0xffffffffffff38e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
v272 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v272 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?45 
actionAndReason: i274 
speculation: a269 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v251 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?45 actionAndReason: i274 speculation: a269  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4603493448116153485
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v49 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:251) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.containsKey(EconomicMapImpl.java:592) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.contains(EconomicMapImpl.java:844) [bci: 2]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v43 
=== Succesors ===
next: v137 
=== Usages ===
=== Predecessor ===
v51 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v43 #next: v137  <|@  <|@
f <@*|@fixed>@ <|@
tid v137 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.contains(EconomicMapImpl.java:844) [bci: 5]
stamp: void
=== Inputs ===
result: i13 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v49 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i13 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4600036861415904434
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v23 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:238) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.containsKey(EconomicMapImpl.java:592) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.contains(EconomicMapImpl.java:844) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: i26 
=== Usages ===
=== Predecessor ===
v24 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i26  <|@  <|@
tid v222 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:238) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.containsKey(EconomicMapImpl.java:592) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.contains(EconomicMapImpl.java:844) [bci: 2]
returnStamp: i32
signature: [Ljdk.vm.ci.meta.JavaType;@6689cbe3
stamp: void
targetMethod: HotSpotMethod<EconomicMapImpl.findHash(Object)>
=== Inputs ===
arguments: a1 a2 
=== Succesors ===
=== Usages ===
i26 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1 a2  <|@  <|@
tid ?265 <|@
d <@d|@=== Debug Properties ===
bci: 9
code: ResolvedJavaMethodBytecode<EconomicMapImpl.find(Object)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 238
stackSize: 0
=== Inputs ===
outerFrameState: ?33 
values: - - 
=== Succesors ===
=== Usages ===
i26 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?33 values: - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i26 <|@
d <@d|@=== Debug Properties ===
bci: 9
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:238) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.containsKey(EconomicMapImpl.java:592) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.contains(EconomicMapImpl.java:844) [bci: 2]
polymorphic: false
stamp: i32
targetMethod: Direct#EconomicMapImpl.findHash
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v222 
stateDuring: ?265 
=== Succesors ===
next: v142 
=== Usages ===
v143 
=== Predecessor ===
v23 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v222 stateDuring: ?265 #next: v142  <|@  <|@
f <@~|@floating>@ <|@
tid v143 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.containsKey(EconomicMapImpl.java:592) [bci: 6]
at org.graalvm.collections.EconomicMapImpl.contains(EconomicMapImpl.java:844) [bci: 2]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i26 
y: i11 
=== Succesors ===
=== Usages ===
i144 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i26 y: i11  <|@  <|@
f <@~|@floating>@ <|@
tid i144 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.containsKey(EconomicMapImpl.java:592) [bci: 6]
at org.graalvm.collections.EconomicMapImpl.contains(EconomicMapImpl.java:844) [bci: 2]
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
condition: v143 
trueValue: i13 
falseValue: i14 
=== Succesors ===
=== Usages ===
v142 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v143 trueValue: i13 falseValue: i14  <|@  <|@
f <@*|@fixed>@ <|@
tid v142 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.contains(EconomicMapImpl.java:844) [bci: 5]
stamp: void
=== Inputs ===
result: i144 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
i26 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i144 memoryMap: -  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a279 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: a279  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Lorg/graalvm/collections/EconomicMapImpl;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v290 ?59 v222 v285 ?45 v286 v287 ?108 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v285 <|@
result [v0|QWORD[.] + 28] <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a279 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a279 <|@
result v2|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.hashArray
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.hasHashArray(EconomicMapImpl.java:603) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:237) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.containsKey(EconomicMapImpl.java:592) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.contains(EconomicMapImpl.java:844) [bci: 2]
nullCheck: false
stamp: n# [B
=== Inputs ===
stateBefore: - 
guard: - 
address: v285 
=== Succesors ===
next: v24 
=== Usages ===
v223 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v285 #next: v24  <|@  <|@
f <@~|@floating>@ <|@
tid v223 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.hasHashArray(EconomicMapImpl.java:603) [bci: 4]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:237) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.containsKey(EconomicMapImpl.java:592) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.contains(EconomicMapImpl.java:844) [bci: 2]
stamp: void
=== Inputs ===
value: a279 
=== Succesors ===
=== Usages ===
v24 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a279  <|@  <|@
f <@~|@floating>@ <|@
tid i11 <|@
result int[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.containsKey(EconomicMapImpl.java:592) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.contains(EconomicMapImpl.java:844) [bci: 2]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1] ⇊00000000ffffffff
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v12 v143 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i14 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.containsKey(EconomicMapImpl.java:592) [bci: 6]
at org.graalvm.collections.EconomicMapImpl.contains(EconomicMapImpl.java:844) [bci: 2]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i15 i144 i53 i66 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
tid ?17 <|@
d <@d|@=== Debug Properties ===
bci: 2
code: ResolvedJavaMethodBytecode<EconomicMapImpl.contains(Object)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 844
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - 
=== Succesors ===
=== Usages ===
?33 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - -  <|@  <|@
tid ?33 <|@
d <@d|@=== Debug Properties ===
bci: 2
code: ResolvedJavaMethodBytecode<EconomicMapImpl.containsKey(Object)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 592
stackSize: 0
=== Inputs ===
outerFrameState: ?17 
values: - - 
=== Succesors ===
=== Usages ===
?70 ?265 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?17 values: - -  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
result v1|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a Ljava/lang/Object;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v292 ?59 v222 ?45 ?108 v75 v217 v221 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i13 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.containsKey(EconomicMapImpl.java:592) [bci: 6]
at org.graalvm.collections.EconomicMapImpl.contains(EconomicMapImpl.java:844) [bci: 2]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
i15 v60 i144 i44 v137 ?59 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v24 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:237) [bci: 4]
at org.graalvm.collections.EconomicMapImpl.containsKey(EconomicMapImpl.java:592) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.contains(EconomicMapImpl.java:844) [bci: 2]
stamp: void
trueSuccessorProbability: 0.6466581165811264
=== Inputs ===
condition: v223 
=== Succesors ===
trueSuccessor: v22 
falseSuccessor: v23 
=== Usages ===
=== Predecessor ===
a279 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v223 #trueSuccessor: v22 #falseSuccessor: v23  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@364c5ea4 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[.] = MOV [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v2|DWORD[.], y: v2|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.6466581165811264 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" 
    xhandlers
    flags 
    probability 4603999798051018151
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v22 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 13]
at org.graalvm.collections.EconomicMapImpl.containsKey(EconomicMapImpl.java:592) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.contains(EconomicMapImpl.java:844) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v42 
=== Usages ===
=== Predecessor ===
v24 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v42  <|@  <|@
f <@~|@floating>@ <|@
tid v290 <|@
result [v0|QWORD[.] + 32] <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a284 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
tid ?70 <|@
d <@d|@=== Debug Properties ===
bci: 15
code: ResolvedJavaMethodBytecode<EconomicMapImpl.find(Object)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 240
stackSize: 0
=== Inputs ===
outerFrameState: ?33 
values: - - 
=== Succesors ===
=== Usages ===
?45 ?108 ?59 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?33 values: - -  <|@  <|@
f <@~|@floating>@ <|@
tid v287 <|@
result [v0|QWORD[.] + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a281 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v286 <|@
result [v0|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i280 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@*|@fixed>@ <|@
tid v42 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:245) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.containsKey(EconomicMapImpl.java:592) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.contains(EconomicMapImpl.java:844) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v43 
=== Predecessor ===
v22 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0]] destination: B1 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" "B14" "B7" "B11" 
    successors "B3" "B19" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4608597315681346295
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i44 <|@
result v3|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v43 
values: i13 i66 i66 i66 
=== Succesors ===
=== Usages ===
?45 v47 i53 ?59 v12 i66 ?108 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v43 values: i13 i66 i66 i66  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v43 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: true
inversionCount: 0
loopFrequency: 2.032248858132847
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:245) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.containsKey(EconomicMapImpl.java:592) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.contains(EconomicMapImpl.java:844) [bci: 2]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v42 
=== Succesors ===
next: i280 
=== Usages ===
i44 v49 v62 v67 v134 v177 v251 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v42 #next: i280  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i280 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.totalEntries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:245) [bci: 4]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.containsKey(EconomicMapImpl.java:592) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.contains(EconomicMapImpl.java:844) [bci: 2]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v286 
=== Succesors ===
next: v51 
=== Usages ===
v47 
=== Predecessor ===
v43 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v286 #next: v51  <|@  <|@
f <@~|@floating>@ <|@
tid v47 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:245) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.containsKey(EconomicMapImpl.java:592) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.contains(EconomicMapImpl.java:844) [bci: 2]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i44 
y: i280 
=== Succesors ===
=== Usages ===
v51 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i44 y: i280  <|@  <|@
f <@*|@fixed>@ <|@
tid v51 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:245) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.containsKey(EconomicMapImpl.java:592) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.contains(EconomicMapImpl.java:844) [bci: 2]
stamp: void
trueSuccessorProbability: 0.5507111845837876
=== Inputs ===
condition: v47 
=== Succesors ===
trueSuccessor: v48 
falseSuccessor: v49 
=== Usages ===
=== Predecessor ===
i280 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v47 #trueSuccessor: v48 #falseSuccessor: v49  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v3|DWORD] = LABEL numbPhis: 1 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v3|DWORD, y: [v0|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5507111845837876 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B18" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604693983991798113
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v48 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:246) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.containsKey(EconomicMapImpl.java:592) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.contains(EconomicMapImpl.java:844) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: a281 
=== Usages ===
=== Predecessor ===
v51 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a281  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a281 <|@
result v4|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.entries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:246) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.containsKey(EconomicMapImpl.java:592) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.contains(EconomicMapImpl.java:844) [bci: 2]
nullCheck: false
stamp: n [Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v287 
=== Succesors ===
next: i282 
=== Usages ===
a192 v288 
=== Predecessor ===
v48 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v287 #next: i282  <|@  <|@
tid ?45 <|@
d <@d|@=== Debug Properties ===
bci: 2
code: ResolvedJavaMethodBytecode<EconomicMapImpl.findLinear(Object)>
duringCall: false
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 245
stackSize: 0
=== Inputs ===
outerFrameState: ?70 
values: a1 a2 i44 - 
=== Succesors ===
=== Usages ===
v240 v241 v272 i282 v291 v292 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?70 values: a1 a2 i44 -  <|@  <|@
f <@~|@floating>@ <|@
tid v288 <|@
result [v4|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a281 
=== Succesors ===
=== Usages ===
i282 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a281  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i282 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:246) [bci: 17]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.containsKey(EconomicMapImpl.java:592) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.contains(EconomicMapImpl.java:844) [bci: 2]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?45 
guard: - 
address: v288 
=== Succesors ===
next: v252 
=== Usages ===
v198 
=== Predecessor ===
a281 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?45 guard: - address: v288 #next: v252  <|@  <|@
f <@~|@floating>@ <|@
tid i53 <|@
result v5|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:246) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.containsKey(EconomicMapImpl.java:592) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.contains(EconomicMapImpl.java:844) [bci: 2]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i44 
y: i14 
=== Succesors ===
=== Usages ===
v289 v198 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i44 y: i14  <|@  <|@
f <@~|@floating>@ <|@
tid v198 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:246) [bci: 17]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.containsKey(EconomicMapImpl.java:592) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.contains(EconomicMapImpl.java:844) [bci: 2]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i53 
y: i282 
=== Succesors ===
=== Usages ===
v252 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i53 y: i282  <|@  <|@
f <@*|@fixed>@ <|@
tid v252 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:246) [bci: 17]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.containsKey(EconomicMapImpl.java:592) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.contains(EconomicMapImpl.java:844) [bci: 2]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v198 
=== Succesors ===
trueSuccessor: v248 
falseSuccessor: v251 
=== Usages ===
=== Predecessor ===
i282 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v198 #trueSuccessor: v248 #falseSuccessor: v251  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v4|DWORD[.] = MOV [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = SHL v3|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:245) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] v3|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.containsKey(EconomicMapImpl.java:592) [bci: 2]
locals: - - 
org.graalvm.collections.EconomicMapImpl.contains(EconomicMapImpl.java:844) [bci: 2]
locals: - - 
>@ <|@ instruction CMP (x: v5|DWORD, y: [v4|DWORD[.] * 8 + 12]) size: DWORD state [bci:2, 15, 2, 2] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604693983991798113
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v248 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:246) [bci: 17]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.containsKey(EconomicMapImpl.java:592) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.contains(EconomicMapImpl.java:844) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: a283 
=== Usages ===
a283 
=== Predecessor ===
v252 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a283  <|@  <|@
f <@~|@floating>@ <|@
tid a192 <|@
result v6|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:246) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.containsKey(EconomicMapImpl.java:592) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.contains(EconomicMapImpl.java:844) [bci: 2]
op: Uncompress
stamp: a [Ljava/lang/Object;
=== Inputs ===
value: a281 
=== Succesors ===
=== Usages ===
v289 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a281  <|@  <|@
f <@~|@floating>@ <|@
tid v289 <|@
result [v6|QWORD[.] + v5|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a192 
index: i53 
=== Succesors ===
=== Usages ===
a283 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a192 index: i53  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a283 <|@
result v7|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:246) [bci: 17]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.containsKey(EconomicMapImpl.java:592) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.contains(EconomicMapImpl.java:844) [bci: 2]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: v248 
address: v289 
=== Succesors ===
next: v291 
=== Usages ===
a208 v291 
=== Predecessor ===
v248 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v248 address: v289 #next: v291  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v291 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?45 
object: a283 
=== Succesors ===
next: v78 
=== Usages ===
=== Predecessor ===
a283 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?45 object: a283 #next: v78  <|@  <|@
f <@~|@floating>@ <|@
tid a208 <|@
result v8|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:246) [bci: 17]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.containsKey(EconomicMapImpl.java:592) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.contains(EconomicMapImpl.java:844) [bci: 2]
op: Uncompress
stamp: a Ljava/lang/Object;
=== Inputs ===
value: a283 
=== Succesors ===
=== Usages ===
v217 v221 v75 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a283  <|@  <|@
f <@~|@floating>@ <|@
tid v75 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:255) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.containsKey(EconomicMapImpl.java:592) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.contains(EconomicMapImpl.java:844) [bci: 2]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a2 
y: a208 
=== Succesors ===
=== Usages ===
v78 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.ObjectEqualsNode>@ x: a2 y: a208  <|@  <|@
f <@*|@fixed>@ <|@
tid v78 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:255) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.containsKey(EconomicMapImpl.java:592) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.contains(EconomicMapImpl.java:844) [bci: 2]
stamp: void
trueSuccessorProbability: 0.09569357247187082
=== Inputs ===
condition: v75 
=== Succesors ===
trueSuccessor: v76 
falseSuccessor: v77 
=== Usages ===
=== Predecessor ===
v291 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v75 #trueSuccessor: v76 #falseSuccessor: v77  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v6|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@7c53d3b7 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v7|DWORD[.] = MOV [v6|QWORD[.] + v5|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:245) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] v3|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.containsKey(EconomicMapImpl.java:592) [bci: 2]
locals: - - 
org.graalvm.collections.EconomicMapImpl.contains(EconomicMapImpl.java:844) [bci: 2]
locals: - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v7|DWORD[.] * 8] state [bci:2, 15, 2, 2] <|@ <|@
      nr   -1  <|@ instruction v8|QWORD[.] = UNCOMPRESSPOINTER (input: v7|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@7c53d3b7 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMP (x: v8|QWORD[.], y: v1|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09569357247187082 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B16" 
    xhandlers
    flags 
    probability 4589654851527087159
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v76 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:256) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.containsKey(EconomicMapImpl.java:592) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.contains(EconomicMapImpl.java:844) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v152 
=== Usages ===
=== Predecessor ===
v78 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v152  <|@  <|@
f <@*|@fixed>@ <|@
tid v152 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v149 
=== Predecessor ===
v76 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B5 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604070180133807834
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v77 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:258) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.containsKey(EconomicMapImpl.java:592) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.contains(EconomicMapImpl.java:844) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: a284 
=== Usages ===
=== Predecessor ===
v78 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a284  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a284 <|@
result v9|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.strategy
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:258) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.containsKey(EconomicMapImpl.java:592) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.contains(EconomicMapImpl.java:844) [bci: 2]
nullCheck: false
stamp: n Lorg/graalvm/collections/Equivalence;
=== Inputs ===
stateBefore: - 
guard: - 
address: v290 
=== Succesors ===
next: v84 
=== Usages ===
a213 v218 v227 v229 
=== Predecessor ===
v77 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v290 #next: v84  <|@  <|@
f <@~|@floating>@ <|@
tid v218 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.containsKey(EconomicMapImpl.java:592) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.contains(EconomicMapImpl.java:844) [bci: 2]
stamp: void
=== Inputs ===
value: a284 
=== Succesors ===
=== Usages ===
v84 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a284  <|@  <|@
f <@~|@floating>@ <|@
tid i66 <|@
result v10|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:245) [bci: 34]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.containsKey(EconomicMapImpl.java:592) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.contains(EconomicMapImpl.java:844) [bci: 2]
stamp: i32
=== Inputs ===
x: i44 
y: i14 
=== Succesors ===
=== Usages ===
i44 i44 i44 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i44 y: i14  <|@  <|@
f <@*|@fixed>@ <|@
tid v84 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:258) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.containsKey(EconomicMapImpl.java:592) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.contains(EconomicMapImpl.java:844) [bci: 2]
stamp: void
trueSuccessorProbability: 0.9726719235714489
=== Inputs ===
condition: v218 
=== Succesors ===
trueSuccessor: v82 
falseSuccessor: v83 
=== Usages ===
=== Predecessor ===
a284 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v218 #trueSuccessor: v82 #falseSuccessor: v83  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v9|DWORD[.] = MOV [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = INC v3|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v9|DWORD[.], y: v9|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9726719235714489 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B2" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4603909082200301151
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v82 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:265) [bci: 50]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.containsKey(EconomicMapImpl.java:592) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.contains(EconomicMapImpl.java:844) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v240 
=== Usages ===
=== Predecessor ===
v84 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v240  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v240 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?45 
=== Succesors ===
next: v134 
=== Usages ===
=== Predecessor ===
v82 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?45 #next: v134  <|@  <|@
f <@*|@fixed>@ <|@
tid v134 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 1
stamp: void
=== Inputs ===
loopBegin: v43 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v240 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v43  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:245) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] v3|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.containsKey(EconomicMapImpl.java:592) [bci: 2]
locals: - - 
org.graalvm.collections.EconomicMapImpl.contains(EconomicMapImpl.java:844) [bci: 2]
locals: - - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:2, 15, 2, 2] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v10|DWORD] destination: B7 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B10" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4580812355280637790
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v83 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:258) [bci: 14]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.containsKey(EconomicMapImpl.java:592) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.contains(EconomicMapImpl.java:844) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v96 
=== Usages ===
=== Predecessor ===
v84 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v96  <|@  <|@
f <@~|@floating>@ <|@
tid a228 <|@
result NarrowOop[Equivalence$1@1642007824] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:259) [bci: 31]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.containsKey(EconomicMapImpl.java:592) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.contains(EconomicMapImpl.java:844) [bci: 2]
rawvalue: Equivalence$1@1642007824
stableDimension: 0
stamp: n!# Lorg/graalvm/collections/Equivalence$1;
stampKind: n -
value: NarrowOop[Equivalence$1@1642007824]
=== Inputs ===
=== Succesors ===
=== Usages ===
v229 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v229 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:259) [bci: 31]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.containsKey(EconomicMapImpl.java:592) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.contains(EconomicMapImpl.java:844) [bci: 2]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a284 
y: a228 
=== Succesors ===
=== Usages ===
v96 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: a284 y: a228  <|@  <|@
tid ?108 <|@
d <@d|@=== Debug Properties ===
bci: 26
code: ResolvedJavaMethodBytecode<EconomicMapImpl.findLinear(Object)>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 247
stackSize: 0
=== Inputs ===
outerFrameState: ?70 
values: a1 a2 i44 - 
=== Succesors ===
=== Usages ===
?264 ?263 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?70 values: a1 a2 i44 -  <|@  <|@
f <@*|@fixed>@ <|@
tid v96 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:259) [bci: 31]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.containsKey(EconomicMapImpl.java:592) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.contains(EconomicMapImpl.java:844) [bci: 2]
stamp: void
trueSuccessorProbability: 0.7114431340645025
=== Inputs ===
condition: v229 
=== Succesors ===
trueSuccessor: v94 
falseSuccessor: v88 
=== Usages ===
=== Predecessor ===
v83 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v229 #trueSuccessor: v94 #falseSuccessor: v88  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v9|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Equivalence$1@1642007824] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7114431340645025 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B13" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4578488790978193238
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v94 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:260) [bci: 34]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.containsKey(EconomicMapImpl.java:592) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.contains(EconomicMapImpl.java:844) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v292 
=== Usages ===
=== Predecessor ===
v96 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v292  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v292 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?45 
object: a2 
=== Succesors ===
next: i98 
=== Usages ===
=== Predecessor ===
v94 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?45 object: a2 #next: i98  <|@  <|@
tid v217 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:260) [bci: 36]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.containsKey(EconomicMapImpl.java:592) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.contains(EconomicMapImpl.java:844) [bci: 2]
returnStamp: i32 [0 - 1] ⇈0000000000000001
signature: [Ljdk.vm.ci.meta.JavaType;@61256e14
stamp: void
targetMethod: HotSpotMethod<Object.equals(Object)>
=== Inputs ===
arguments: a2 a208 
=== Succesors ===
=== Usages ===
i98 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a2 a208  <|@  <|@
tid ?263 <|@
d <@d|@=== Debug Properties ===
bci: 36
code: ResolvedJavaMethodBytecode<EconomicMapImpl.compareKeys(Object, Object)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 260
stackSize: 0
=== Inputs ===
outerFrameState: ?108 
values: - - - 
=== Succesors ===
=== Usages ===
i98 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?108 values: - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i98 <|@
result v11|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 36
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:260) [bci: 36]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.containsKey(EconomicMapImpl.java:592) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.contains(EconomicMapImpl.java:844) [bci: 2]
polymorphic: false
stamp: i32 [0 - 1] ⇈0000000000000001
targetMethod: Direct#Object.equals
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v217 
stateDuring: ?263 
=== Succesors ===
next: v112 
=== Usages ===
i111 
=== Predecessor ===
v292 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v217 stateDuring: ?263 #next: v112  <|@  <|@
f <@*|@fixed>@ <|@
tid v112 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v109 
=== Predecessor ===
i98 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:245) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] v3|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.containsKey(EconomicMapImpl.java:592) [bci: 2]
locals: - - 
org.graalvm.collections.EconomicMapImpl.contains(EconomicMapImpl.java:844) [bci: 2]
locals: - - 
>@ <|@ instruction NULLCHECK [v1|QWORD[.]] state [bci:2, 15, 2, 2] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:260) [bci: 36]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
locals: v0|QWORD[.] v1|QWORD[.] v3|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.containsKey(EconomicMapImpl.java:592) [bci: 2]
locals: - - 
org.graalvm.collections.EconomicMapImpl.contains(EconomicMapImpl.java:844) [bci: 2]
locals: - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Object.equals(Object)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:36, 26, 15, 2, 2] <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v11|DWORD] destination: B9 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4572600219248258764
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v88 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:259) [bci: 24]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.containsKey(EconomicMapImpl.java:592) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.contains(EconomicMapImpl.java:844) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v90 
=== Usages ===
=== Predecessor ===
v96 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v90  <|@  <|@
f <@~|@floating>@ <|@
tid a226 <|@
result NarrowOop[Equivalence$3@1213634123] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:258) [bci: 21]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.containsKey(EconomicMapImpl.java:592) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.contains(EconomicMapImpl.java:844) [bci: 2]
rawvalue: Equivalence$3@1213634123
stableDimension: 0
stamp: n!# Lorg/graalvm/collections/Equivalence$3;
stampKind: n -
value: NarrowOop[Equivalence$3@1213634123]
=== Inputs ===
=== Succesors ===
=== Usages ===
v227 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v227 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:258) [bci: 21]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.containsKey(EconomicMapImpl.java:592) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.contains(EconomicMapImpl.java:844) [bci: 2]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a284 
y: a226 
=== Succesors ===
=== Usages ===
v90 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: a284 y: a226  <|@  <|@
f <@*|@fixed>@ <|@
tid v90 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:258) [bci: 21]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.containsKey(EconomicMapImpl.java:592) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.contains(EconomicMapImpl.java:844) [bci: 2]
stamp: void
trueSuccessorProbability: 0.0023566146768518636
=== Inputs ===
condition: v227 
=== Succesors ===
trueSuccessor: v89 
falseSuccessor: v95 
=== Usages ===
=== Predecessor ===
v88 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v227 #trueSuccessor: v89 #falseSuccessor: v95  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v9|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Equivalence$3@1213634123] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0023566146768518636 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B2" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4533297054270606691
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v89 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:265) [bci: 50]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.containsKey(EconomicMapImpl.java:592) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.contains(EconomicMapImpl.java:844) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v241 
=== Usages ===
=== Predecessor ===
v90 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v241  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v241 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?45 
=== Succesors ===
next: v177 
=== Usages ===
=== Predecessor ===
v89 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?45 #next: v177  <|@  <|@
f <@*|@fixed>@ <|@
tid v177 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 2
stamp: void
=== Inputs ===
loopBegin: v43 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v241 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v43  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:245) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] v3|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.containsKey(EconomicMapImpl.java:592) [bci: 2]
locals: - - 
org.graalvm.collections.EconomicMapImpl.contains(EconomicMapImpl.java:844) [bci: 2]
locals: - - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:2, 15, 2, 2] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v10|DWORD] destination: B11 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4572586196926455525
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v95 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.containsKey(EconomicMapImpl.java:592) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.contains(EconomicMapImpl.java:844) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: i103 
=== Usages ===
=== Predecessor ===
v90 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i103  <|@  <|@
f <@~|@floating>@ <|@
tid a213 <|@
result v12|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:258) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.containsKey(EconomicMapImpl.java:592) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.contains(EconomicMapImpl.java:844) [bci: 2]
op: Uncompress
stamp: a Lorg/graalvm/collections/Equivalence;
=== Inputs ===
value: a284 
=== Succesors ===
=== Usages ===
v221 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a284  <|@  <|@
tid v221 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.containsKey(EconomicMapImpl.java:592) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.contains(EconomicMapImpl.java:844) [bci: 2]
returnStamp: i32 [0 - 1] ⇈0000000000000001
signature: [Ljdk.vm.ci.meta.JavaType;@664ca570
stamp: void
targetMethod: HotSpotMethod<Equivalence.equals(Object, Object)>
=== Inputs ===
arguments: a213 a2 a208 
=== Succesors ===
=== Usages ===
i103 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a213 a2 a208  <|@  <|@
tid ?264 <|@
d <@d|@=== Debug Properties ===
bci: 46
code: ResolvedJavaMethodBytecode<EconomicMapImpl.compareKeys(Object, Object)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 262
stackSize: 0
=== Inputs ===
outerFrameState: ?108 
values: - - - 
=== Succesors ===
=== Usages ===
i103 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?108 values: - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i103 <|@
result v13|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 46
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.containsKey(EconomicMapImpl.java:592) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.contains(EconomicMapImpl.java:844) [bci: 2]
polymorphic: false
stamp: i32 [0 - 1] ⇈0000000000000001
targetMethod: Direct#Equivalence.equals
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v221 
stateDuring: ?264 
=== Succesors ===
next: v113 
=== Usages ===
i111 
=== Predecessor ===
v95 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v221 stateDuring: ?264 #next: v113  <|@  <|@
f <@*|@fixed>@ <|@
tid v113 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v109 
=== Predecessor ===
i103 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v12|QWORD[.] = UNCOMPRESSPOINTER (input: v9|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@7c53d3b7 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v12|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE v8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
locals: v0|QWORD[.] v1|QWORD[.] v3|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.containsKey(EconomicMapImpl.java:592) [bci: 2]
locals: - - 
org.graalvm.collections.EconomicMapImpl.contains(EconomicMapImpl.java:844) [bci: 2]
locals: - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] [] callTarget: HotSpotMethod<Equivalence.equals(Object, Object)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:46, 26, 15, 2, 2] <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v13|DWORD] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B9" "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4580808849700186980
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i111 <|@
result v14|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 1] ⇈0000000000000001
valueDescription: i32
=== Inputs ===
merge: v109 
values: i98 i103 
=== Succesors ===
=== Usages ===
v60 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v109 values: i98 i103  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v109 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v112 v113 
=== Succesors ===
next: v65 
=== Usages ===
i111 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v112 v113 #next: v65  <|@  <|@
f <@~|@floating>@ <|@
tid v60 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 29]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.containsKey(EconomicMapImpl.java:592) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.contains(EconomicMapImpl.java:844) [bci: 2]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i111 
y: i13 
=== Succesors ===
=== Usages ===
v65 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i111 y: i13  <|@  <|@
f <@*|@fixed>@ <|@
tid v65 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 29]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.containsKey(EconomicMapImpl.java:592) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.contains(EconomicMapImpl.java:844) [bci: 2]
stamp: void
trueSuccessorProbability: 0.9223242473295923
=== Inputs ===
condition: v60 
=== Succesors ===
trueSuccessor: v61 
falseSuccessor: v122 
=== Usages ===
=== Predecessor ===
v109 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v60 #trueSuccessor: v61 #falseSuccessor: v122  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v14|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v14|DWORD, y: v14|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9223242473295923 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B2" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4580408693095146119
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v61 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:245) [bci: 34]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.containsKey(EconomicMapImpl.java:592) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.contains(EconomicMapImpl.java:844) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v239 
=== Usages ===
=== Predecessor ===
v65 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v239  <|@  <|@
tid ?59 <|@
d <@d|@=== Debug Properties ===
bci: 29
code: ResolvedJavaMethodBytecode<EconomicMapImpl.findLinear(Object)>
duringCall: false
localsSize: 4
locksSize: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.containsKey(EconomicMapImpl.java:592) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.contains(EconomicMapImpl.java:844) [bci: 2]
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 247
stackSize: 1
=== Inputs ===
outerFrameState: ?70 
values: a1 a2 i44 - i13 
=== Succesors ===
=== Usages ===
v239 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?70 values: a1 a2 i44 - i13  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v239 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?59 
=== Succesors ===
next: v67 
=== Usages ===
=== Predecessor ===
v61 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?59 #next: v67  <|@  <|@
f <@*|@fixed>@ <|@
tid v67 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:245) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.containsKey(EconomicMapImpl.java:592) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.contains(EconomicMapImpl.java:844) [bci: 2]
stamp: void
=== Inputs ===
loopBegin: v43 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v239 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v43  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 29]
stack: int[0|0x0] 
locals: v0|QWORD[.] v1|QWORD[.] v3|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.containsKey(EconomicMapImpl.java:592) [bci: 2]
locals: - - 
org.graalvm.collections.EconomicMapImpl.contains(EconomicMapImpl.java:844) [bci: 2]
locals: - - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:29, 15, 2, 2] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v10|DWORD] destination: B14 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4564045328579595731
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v122 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:248) [bci: 32]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.containsKey(EconomicMapImpl.java:592) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.contains(EconomicMapImpl.java:844) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v150 
=== Usages ===
=== Predecessor ===
v65 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v150  <|@  <|@
f <@*|@fixed>@ <|@
tid v150 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v149 
=== Predecessor ===
v122 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B5" 
    successors "B17" 
    xhandlers
    flags 
    probability 4589754890678347374
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v149 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v150 v152 
=== Succesors ===
next: v62 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v150 v152 #next: v62  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors 
    xhandlers
    flags 
    probability 4589754890678347374
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v62 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:248) [bci: 32]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.containsKey(EconomicMapImpl.java:592) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.contains(EconomicMapImpl.java:844) [bci: 2]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v43 
=== Succesors ===
next: v7 
=== Usages ===
=== Predecessor ===
v149 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v43 #next: v7  <|@  <|@
f <@~|@floating>@ <|@
tid v12 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.containsKey(EconomicMapImpl.java:592) [bci: 6]
at org.graalvm.collections.EconomicMapImpl.contains(EconomicMapImpl.java:844) [bci: 2]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i44 
y: i11 
=== Succesors ===
=== Usages ===
i15 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i44 y: i11  <|@  <|@
f <@~|@floating>@ <|@
tid i15 <|@
result v15|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.containsKey(EconomicMapImpl.java:592) [bci: 6]
at org.graalvm.collections.EconomicMapImpl.contains(EconomicMapImpl.java:844) [bci: 2]
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
condition: v12 
trueValue: i13 
falseValue: i14 
=== Succesors ===
=== Usages ===
v7 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v12 trueValue: i13 falseValue: i14  <|@  <|@
f <@*|@fixed>@ <|@
tid v7 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.contains(EconomicMapImpl.java:844) [bci: 5]
stamp: void
=== Inputs ===
result: i15 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v62 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i15 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v3|DWORD y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = SETCC condition: != <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v15|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v251 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:246) [bci: 17]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.containsKey(EconomicMapImpl.java:592) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.contains(EconomicMapImpl.java:844) [bci: 2]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v43 
=== Succesors ===
next: v272 
=== Usages ===
=== Predecessor ===
v252 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v43 #next: v272  <|@  <|@
f <@~|@floating>@ <|@
tid a269 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v272 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i274 <|@
result int[-50971|0xffffffffffff38e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -50971
stableDimension: 0
stamp: i32 [-50971] ⇊00000000ffff38e5 ⇈00000000ffff38e5
stampKind: i32
value: int[-50971|0xffffffffffff38e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
v272 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v272 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?45 
actionAndReason: i274 
speculation: a269 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v251 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?45 actionAndReason: i274 speculation: a269  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -50971 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:245) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] v3|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.containsKey(EconomicMapImpl.java:592) [bci: 2]
locals: - - 
org.graalvm.collections.EconomicMapImpl.contains(EconomicMapImpl.java:844) [bci: 2]
locals: - - 
>@ <|@ instruction DEOPT info [bci:2, 15, 2, 2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4603493448116153485
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v49 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:251) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.containsKey(EconomicMapImpl.java:592) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.contains(EconomicMapImpl.java:844) [bci: 2]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v43 
=== Succesors ===
next: v137 
=== Usages ===
=== Predecessor ===
v51 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v43 #next: v137  <|@  <|@
f <@*|@fixed>@ <|@
tid v137 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.contains(EconomicMapImpl.java:844) [bci: 5]
stamp: void
=== Inputs ===
result: i13 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v49 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i13 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4600036861415904434
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v23 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:238) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.containsKey(EconomicMapImpl.java:592) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.contains(EconomicMapImpl.java:844) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: i26 
=== Usages ===
=== Predecessor ===
v24 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i26  <|@  <|@
tid v222 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:238) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.containsKey(EconomicMapImpl.java:592) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.contains(EconomicMapImpl.java:844) [bci: 2]
returnStamp: i32
signature: [Ljdk.vm.ci.meta.JavaType;@6689cbe3
stamp: void
targetMethod: HotSpotMethod<EconomicMapImpl.findHash(Object)>
=== Inputs ===
arguments: a1 a2 
=== Succesors ===
=== Usages ===
i26 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1 a2  <|@  <|@
tid ?265 <|@
d <@d|@=== Debug Properties ===
bci: 9
code: ResolvedJavaMethodBytecode<EconomicMapImpl.find(Object)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 238
stackSize: 0
=== Inputs ===
outerFrameState: ?33 
values: - - 
=== Succesors ===
=== Usages ===
i26 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?33 values: - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i26 <|@
result v16|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 9
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:238) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.containsKey(EconomicMapImpl.java:592) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.contains(EconomicMapImpl.java:844) [bci: 2]
polymorphic: false
stamp: i32
targetMethod: Direct#EconomicMapImpl.findHash
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v222 
stateDuring: ?265 
=== Succesors ===
next: v142 
=== Usages ===
v143 
=== Predecessor ===
v23 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v222 stateDuring: ?265 #next: v142  <|@  <|@
f <@~|@floating>@ <|@
tid v143 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.containsKey(EconomicMapImpl.java:592) [bci: 6]
at org.graalvm.collections.EconomicMapImpl.contains(EconomicMapImpl.java:844) [bci: 2]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i26 
y: i11 
=== Succesors ===
=== Usages ===
i144 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i26 y: i11  <|@  <|@
f <@~|@floating>@ <|@
tid i144 <|@
result v17|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.containsKey(EconomicMapImpl.java:592) [bci: 6]
at org.graalvm.collections.EconomicMapImpl.contains(EconomicMapImpl.java:844) [bci: 2]
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
condition: v143 
trueValue: i13 
falseValue: i14 
=== Succesors ===
=== Usages ===
v142 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v143 trueValue: i13 falseValue: i14  <|@  <|@
f <@*|@fixed>@ <|@
tid v142 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.contains(EconomicMapImpl.java:844) [bci: 5]
stamp: void
=== Inputs ===
result: i144 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
i26 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i144 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:238) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.containsKey(EconomicMapImpl.java:592) [bci: 2]
locals: - - 
org.graalvm.collections.EconomicMapImpl.contains(EconomicMapImpl.java:844) [bci: 2]
locals: - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<EconomicMapImpl.findHash(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:9, 2, 2] <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v16|DWORD y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = SETCC condition: != <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v17|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@364c5ea4 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[.] = MOV [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v2|DWORD[.], y: v2|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.6466581165811264 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" 
    xhandlers
    flags 
    probability 4603999798051018151
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0]] destination: B1 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" "B14" "B7" "B11" 
    successors "B3" "B19" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4608597315681346295
    begin_IR
      LIR
      nr   -1  <|@ instruction [v3|DWORD] = LABEL numbPhis: 1 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v3|DWORD, y: [v0|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5507111845837876 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B18" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604693983991798113
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v4|DWORD[.] = MOV [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = SHL v3|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:245) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] v3|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.containsKey(EconomicMapImpl.java:592) [bci: 2]
locals: - - 
org.graalvm.collections.EconomicMapImpl.contains(EconomicMapImpl.java:844) [bci: 2]
locals: - - 
>@ <|@ instruction CMP (x: v5|DWORD, y: [v4|DWORD[.] * 8 + 12]) size: DWORD state [bci:2, 15, 2, 2] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604693983991798113
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v6|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@7c53d3b7 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v7|DWORD[.] = MOV [v6|QWORD[.] + v5|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:245) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] v3|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.containsKey(EconomicMapImpl.java:592) [bci: 2]
locals: - - 
org.graalvm.collections.EconomicMapImpl.contains(EconomicMapImpl.java:844) [bci: 2]
locals: - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v7|DWORD[.] * 8] state [bci:2, 15, 2, 2] <|@ <|@
      nr   -1  <|@ instruction v8|QWORD[.] = UNCOMPRESSPOINTER (input: v7|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@7c53d3b7 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMP (x: v8|QWORD[.], y: v1|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09569357247187082 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604070180133807834
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v9|DWORD[.] = MOV [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = INC v3|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v9|DWORD[.], y: v9|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9726719235714489 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B2" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4603909082200301151
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:245) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] v3|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.containsKey(EconomicMapImpl.java:592) [bci: 2]
locals: - - 
org.graalvm.collections.EconomicMapImpl.contains(EconomicMapImpl.java:844) [bci: 2]
locals: - - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:2, 15, 2, 2] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v10|DWORD] destination: B7 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B10" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4580812355280637790
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v9|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Equivalence$1@1642007824] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7114431340645025 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B13" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4578488790978193238
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:245) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] v3|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.containsKey(EconomicMapImpl.java:592) [bci: 2]
locals: - - 
org.graalvm.collections.EconomicMapImpl.contains(EconomicMapImpl.java:844) [bci: 2]
locals: - - 
>@ <|@ instruction NULLCHECK [v1|QWORD[.]] state [bci:2, 15, 2, 2] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:260) [bci: 36]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
locals: v0|QWORD[.] v1|QWORD[.] v3|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.containsKey(EconomicMapImpl.java:592) [bci: 2]
locals: - - 
org.graalvm.collections.EconomicMapImpl.contains(EconomicMapImpl.java:844) [bci: 2]
locals: - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Object.equals(Object)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:36, 26, 15, 2, 2] <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v11|DWORD] destination: B9 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B9" "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4580808849700186980
    begin_IR
      LIR
      nr   -1  <|@ instruction [v14|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v14|DWORD, y: v14|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9223242473295923 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B2" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4580408693095146119
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 29]
stack: int[0|0x0] 
locals: v0|QWORD[.] v1|QWORD[.] v3|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.containsKey(EconomicMapImpl.java:592) [bci: 2]
locals: - - 
org.graalvm.collections.EconomicMapImpl.contains(EconomicMapImpl.java:844) [bci: 2]
locals: - - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:29, 15, 2, 2] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v10|DWORD] destination: B14 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4572600219248258764
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v9|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Equivalence$3@1213634123] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0023566146768518636 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4572586196926455525
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v12|QWORD[.] = UNCOMPRESSPOINTER (input: v9|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@7c53d3b7 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v12|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE v8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
locals: v0|QWORD[.] v1|QWORD[.] v3|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.containsKey(EconomicMapImpl.java:592) [bci: 2]
locals: - - 
org.graalvm.collections.EconomicMapImpl.contains(EconomicMapImpl.java:844) [bci: 2]
locals: - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] [] callTarget: HotSpotMethod<Equivalence.equals(Object, Object)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:46, 26, 15, 2, 2] <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v13|DWORD] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B2" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4533297054270606691
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:245) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] v3|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.containsKey(EconomicMapImpl.java:592) [bci: 2]
locals: - - 
org.graalvm.collections.EconomicMapImpl.contains(EconomicMapImpl.java:844) [bci: 2]
locals: - - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:2, 15, 2, 2] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v10|DWORD] destination: B11 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4603493448116153485
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4600036861415904434
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:238) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.containsKey(EconomicMapImpl.java:592) [bci: 2]
locals: - - 
org.graalvm.collections.EconomicMapImpl.contains(EconomicMapImpl.java:844) [bci: 2]
locals: - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<EconomicMapImpl.findHash(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:9, 2, 2] <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v16|DWORD y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = SETCC condition: != <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v17|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B16" 
    xhandlers
    flags 
    probability 4589654851527087159
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B5 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B5" 
    successors "B17" 
    xhandlers
    flags 
    probability 4589754890678347374
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors 
    xhandlers
    flags 
    probability 4589754890678347374
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v3|DWORD y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = SETCC condition: != <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v15|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4564045328579595731
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -50971 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:245) [bci: 2]
locals: v0|QWORD[.] v1|QWORD[.] v3|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.containsKey(EconomicMapImpl.java:592) [bci: 2]
locals: - - 
org.graalvm.collections.EconomicMapImpl.contains(EconomicMapImpl.java:844) [bci: 2]
locals: - - 
>@ <|@ instruction DEOPT info [bci:2, 15, 2, 2] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: invokevirtual #77         // containsKey:(java.lang.Object)boolean
     5: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@364c5ea4 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction stack:32|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction stack:40|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ instruction r10|DWORD[.] = MOV [rsi|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   12  <|@ instruction TEST (x: r10|DWORD[.], y: r10|DWORD[.]) size: DWORD <|@ <|@
      nr   14  <|@ instruction BRANCH trueDestinationProbability: 0.6466581165811264 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" 
    xhandlers
    flags 
    probability 4603999798051018151
    begin_IR
      LIR
      nr   16  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   18  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   20  <|@ instruction JUMP ~[] destination: B1 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" "B14" "B7" "B11" 
    successors "B3" "B19" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4608597315681346295
    begin_IR
      LIR
      nr   22  <|@ instruction [] = LABEL numbPhis: 1 align: true label: ? <|@ <|@
      nr   24  <|@ instruction CMP (x: r10|DWORD, y: [rsi|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   26  <|@ instruction BRANCH trueDestinationProbability: 0.5507111845837876 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B18" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604693983991798113
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   30  <|@ instruction r11|DWORD[.] = MOV [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   32  <|@ instruction r8|DWORD = SHL r10|DWORD size: DWORD <|@ <|@
      nr   34  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r11:0, stack:8, stack:16]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:245) [bci: 2]
locals: rsi|QWORD[.] rdx|QWORD[.] r10|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.containsKey(EconomicMapImpl.java:592) [bci: 2]
locals: - - 
org.graalvm.collections.EconomicMapImpl.contains(EconomicMapImpl.java:844) [bci: 2]
locals: - - 
>@ <|@ instruction CMP (x: r8|DWORD, y: [r11|DWORD[.] * 8 + 12]) size: DWORD state [bci:2, 15, 2, 2] <|@ <|@
      nr   36  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604693983991798113
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   40  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@7c53d3b7 encoding: base: 0 shift: 3 <|@ <|@
      nr   42  <|@ instruction r11|DWORD[.] = MOV [r11|QWORD[.] + r8|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   44  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r11:0, stack:8, stack:16]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:245) [bci: 2]
locals: rsi|QWORD[.] rdx|QWORD[.] r10|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.containsKey(EconomicMapImpl.java:592) [bci: 2]
locals: - - 
org.graalvm.collections.EconomicMapImpl.contains(EconomicMapImpl.java:844) [bci: 2]
locals: - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + r11|DWORD[.] * 8] state [bci:2, 15, 2, 2] <|@ <|@
      nr   46  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@7c53d3b7 encoding: base: 0 shift: 3 <|@ <|@
      nr   48  <|@ instruction CMP (x: r11|QWORD[.], y: rdx|QWORD[.]) size: QWORD <|@ <|@
      nr   50  <|@ instruction BRANCH trueDestinationProbability: 0.09569357247187082 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604070180133807834
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   60  <|@ instruction r8|DWORD[.] = MOV [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   62  <|@ instruction r9|DWORD = INC r10|DWORD size: DWORD <|@ <|@
      nr   64  <|@ instruction TEST (x: r8|DWORD[.], y: r8|DWORD[.]) size: DWORD <|@ <|@
      nr   66  <|@ instruction BRANCH trueDestinationProbability: 0.9726719235714489 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B2" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4603909082200301151
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   70  <|@ st <@st|@reference-map: [rdx:0, rsi:0, stack:8, stack:16]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:245) [bci: 2]
locals: rsi|QWORD[.] rdx|QWORD[.] r10|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.containsKey(EconomicMapImpl.java:592) [bci: 2]
locals: - - 
org.graalvm.collections.EconomicMapImpl.contains(EconomicMapImpl.java:844) [bci: 2]
locals: - - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:2, 15, 2, 2] <|@ <|@
      nr   72  <|@ instruction r10|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr   74  <|@ instruction JUMP ~[] destination: B7 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B10" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4580812355280637790
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   78  <|@ instruction CMP r8|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Equivalence$1@1642007824] <|@ <|@
      nr   80  <|@ instruction BRANCH trueDestinationProbability: 0.7114431340645025 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B13" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4578488790978193238
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   84  <|@ instruction stack:48|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr   86  <|@ instruction stack:44|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr   88  <|@ st <@st|@reference-map: [rdx:0, r11:0, stack:8, stack:16]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:245) [bci: 2]
locals: stack:32|QWORD[.] rdx|QWORD[.] stack:44|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.containsKey(EconomicMapImpl.java:592) [bci: 2]
locals: - - 
org.graalvm.collections.EconomicMapImpl.contains(EconomicMapImpl.java:844) [bci: 2]
locals: - - 
>@ <|@ instruction NULLCHECK [rdx|QWORD[.]] state [bci:2, 15, 2, 2] <|@ <|@
      nr   90  <|@ instruction rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   92  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   94  <|@ st <@st|@reference-map: [stack:8, stack:16]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:260) [bci: 36]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
locals: stack:32|QWORD[.] stack:40|QWORD[.] stack:44|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.containsKey(EconomicMapImpl.java:592) [bci: 2]
locals: - - 
org.graalvm.collections.EconomicMapImpl.contains(EconomicMapImpl.java:844) [bci: 2]
locals: - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Object.equals(Object)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:36, 26, 15, 2, 2] <|@ <|@
      nr   96  <|@ instruction JUMP ~[] destination: B9 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B9" "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4580808849700186980
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  138  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  140  <|@ instruction BRANCH trueDestinationProbability: 0.9223242473295923 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B2" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4580408693095146119
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  144  <|@ st <@st|@reference-map: [stack:8, stack:16]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 29]
stack: int[0|0x0] 
locals: stack:32|QWORD[.] stack:40|QWORD[.] stack:44|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.containsKey(EconomicMapImpl.java:592) [bci: 2]
locals: - - 
org.graalvm.collections.EconomicMapImpl.contains(EconomicMapImpl.java:844) [bci: 2]
locals: - - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:29, 15, 2, 2] <|@ <|@
      nr  146  <|@ instruction r10|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  148  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  150  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  152  <|@ instruction JUMP ~[] destination: B14 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4572600219248258764
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  100  <|@ instruction stack:48|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  102  <|@ instruction stack:44|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  104  <|@ instruction CMP r8|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Equivalence$3@1213634123] <|@ <|@
      nr  106  <|@ instruction BRANCH trueDestinationProbability: 0.0023566146768518636 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4572586196926455525
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  124  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@7c53d3b7 encoding: base: 0 shift: 3 <|@ <|@
      nr  126  <|@ instruction rsi|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  128  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  130  <|@ instruction rcx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  132  <|@ st <@st|@reference-map: [stack:8, stack:16]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
locals: stack:32|QWORD[.] stack:40|QWORD[.] stack:44|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.containsKey(EconomicMapImpl.java:592) [bci: 2]
locals: - - 
org.graalvm.collections.EconomicMapImpl.contains(EconomicMapImpl.java:844) [bci: 2]
locals: - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] [] callTarget: HotSpotMethod<Equivalence.equals(Object, Object)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:46, 26, 15, 2, 2] <|@ <|@
      nr  134  <|@ instruction JUMP ~[] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B2" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4533297054270606691
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  110  <|@ instruction r9|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  112  <|@ st <@st|@reference-map: [stack:8, stack:16]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:245) [bci: 2]
locals: stack:32|QWORD[.] stack:40|QWORD[.] stack:44|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.containsKey(EconomicMapImpl.java:592) [bci: 2]
locals: - - 
org.graalvm.collections.EconomicMapImpl.contains(EconomicMapImpl.java:844) [bci: 2]
locals: - - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:2, 15, 2, 2] <|@ <|@
      nr  114  <|@ instruction r10|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  116  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  118  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  120  <|@ instruction JUMP ~[] destination: B11 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4603493448116153485
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  180  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  182  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4600036861415904434
    begin_IR
      LIR
      nr  184  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  186  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  188  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  190  <|@ st <@st|@reference-map: []
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:238) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.containsKey(EconomicMapImpl.java:592) [bci: 2]
locals: - - 
org.graalvm.collections.EconomicMapImpl.contains(EconomicMapImpl.java:844) [bci: 2]
locals: - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<EconomicMapImpl.findHash(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:9, 2, 2] <|@ <|@
      nr  192  <|@ instruction CMP rax|DWORD y: -1 size: DWORD <|@ <|@
      nr  194  <|@ instruction rax|DWORD = SETCC condition: != <|@ <|@
      nr  196  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B16" 
    xhandlers
    flags 
    probability 4589654851527087159
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   54  <|@ instruction stack:44|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr   56  <|@ instruction JUMP ~[] destination: B5 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B5" 
    successors "B17" 
    xhandlers
    flags 
    probability 4589754890678347374
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  160  <|@ instruction JUMP ~[] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors 
    xhandlers
    flags 
    probability 4589754890678347374
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  164  <|@ instruction CMP stack:44|DWORD y: -1 size: DWORD <|@ <|@
      nr  166  <|@ instruction rax|DWORD = SETCC condition: != <|@ <|@
      nr  168  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4564045328579595731
    begin_IR
      LIR
      nr  154  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  156  <|@ instruction JUMP ~[] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  170  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  172  <|@ instruction MOV [r15|QWORD + 668] y: -50971 size: DWORD <|@ <|@
      nr  174  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  176  <|@ st <@st|@reference-map: [rdx:0, rsi:0]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:245) [bci: 2]
locals: rsi|QWORD[.] rdx|QWORD[.] r10|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.containsKey(EconomicMapImpl.java:592) [bci: 2]
locals: - - 
org.graalvm.collections.EconomicMapImpl.contains(EconomicMapImpl.java:844) [bci: 2]
locals: - - 
>@ <|@ instruction DEOPT info [bci:2, 15, 2, 2] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: invokevirtual #77         // containsKey:(java.lang.Object)boolean
     5: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@364c5ea4 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction stack:32|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction stack:40|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ instruction r10|DWORD[.] = MOV [rsi|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   12  <|@ instruction TEST (x: r10|DWORD[.], y: r10|DWORD[.]) size: DWORD <|@ <|@
      nr   14  <|@ instruction BRANCH trueDestinationProbability: 0.6466581165811264 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" 
    xhandlers
    flags 
    probability 4603999798051018151
    begin_IR
      LIR
      nr   16  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   18  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   20  <|@ instruction JUMP ~[] destination: B1 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" "B14" "B7" "B11" 
    successors "B3" "B19" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4608597315681346295
    begin_IR
      LIR
      nr   22  <|@ instruction [] = LABEL numbPhis: 1 align: true label: ? <|@ <|@
      nr   24  <|@ instruction CMP (x: r10|DWORD, y: [rsi|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   26  <|@ instruction BRANCH trueDestinationProbability: 0.5507111845837876 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B18" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604693983991798113
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   30  <|@ instruction r11|DWORD[.] = MOV [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   32  <|@ instruction r8|DWORD = SHL r10|DWORD size: DWORD <|@ <|@
      nr   34  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r11:0, stack:8, stack:16]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:245) [bci: 2]
locals: rsi|QWORD[.] rdx|QWORD[.] r10|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.containsKey(EconomicMapImpl.java:592) [bci: 2]
locals: - - 
org.graalvm.collections.EconomicMapImpl.contains(EconomicMapImpl.java:844) [bci: 2]
locals: - - 
>@ <|@ instruction CMP (x: r8|DWORD, y: [r11|DWORD[.] * 8 + 12]) size: DWORD state [bci:2, 15, 2, 2] <|@ <|@
      nr   36  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604693983991798113
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   40  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@7c53d3b7 encoding: base: 0 shift: 3 <|@ <|@
      nr   42  <|@ instruction r11|DWORD[.] = MOV [r11|QWORD[.] + r8|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   44  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r11:0, stack:8, stack:16]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:245) [bci: 2]
locals: rsi|QWORD[.] rdx|QWORD[.] r10|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.containsKey(EconomicMapImpl.java:592) [bci: 2]
locals: - - 
org.graalvm.collections.EconomicMapImpl.contains(EconomicMapImpl.java:844) [bci: 2]
locals: - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + r11|DWORD[.] * 8] state [bci:2, 15, 2, 2] <|@ <|@
      nr   46  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@7c53d3b7 encoding: base: 0 shift: 3 <|@ <|@
      nr   48  <|@ instruction CMP (x: r11|QWORD[.], y: rdx|QWORD[.]) size: QWORD <|@ <|@
      nr   50  <|@ instruction BRANCH trueDestinationProbability: 0.09569357247187082 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604070180133807834
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   60  <|@ instruction r8|DWORD[.] = MOV [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   62  <|@ instruction r9|DWORD = INC r10|DWORD size: DWORD <|@ <|@
      nr   64  <|@ instruction TEST (x: r8|DWORD[.], y: r8|DWORD[.]) size: DWORD <|@ <|@
      nr   66  <|@ instruction BRANCH trueDestinationProbability: 0.9726719235714489 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B2" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4603909082200301151
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   70  <|@ st <@st|@reference-map: [rdx:0, rsi:0, stack:8, stack:16]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:245) [bci: 2]
locals: rsi|QWORD[.] rdx|QWORD[.] r10|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.containsKey(EconomicMapImpl.java:592) [bci: 2]
locals: - - 
org.graalvm.collections.EconomicMapImpl.contains(EconomicMapImpl.java:844) [bci: 2]
locals: - - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:2, 15, 2, 2] <|@ <|@
      nr   72  <|@ instruction r10|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr   74  <|@ instruction JUMP ~[] destination: B7 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B10" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4580812355280637790
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   78  <|@ instruction CMP r8|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Equivalence$1@1642007824] <|@ <|@
      nr   84  <|@ instruction stack:48|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr   86  <|@ instruction stack:44|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr   80  <|@ instruction BRANCH trueDestinationProbability: 0.7114431340645025 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B13" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4578488790978193238
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   88  <|@ st <@st|@reference-map: [rdx:0, r11:0, stack:8, stack:16]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:245) [bci: 2]
locals: stack:32|QWORD[.] rdx|QWORD[.] stack:44|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.containsKey(EconomicMapImpl.java:592) [bci: 2]
locals: - - 
org.graalvm.collections.EconomicMapImpl.contains(EconomicMapImpl.java:844) [bci: 2]
locals: - - 
>@ <|@ instruction NULLCHECK [rdx|QWORD[.]] state [bci:2, 15, 2, 2] <|@ <|@
      nr   90  <|@ instruction rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   92  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   94  <|@ st <@st|@reference-map: [stack:8, stack:16]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:260) [bci: 36]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
locals: stack:32|QWORD[.] stack:40|QWORD[.] stack:44|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.containsKey(EconomicMapImpl.java:592) [bci: 2]
locals: - - 
org.graalvm.collections.EconomicMapImpl.contains(EconomicMapImpl.java:844) [bci: 2]
locals: - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Object.equals(Object)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:36, 26, 15, 2, 2] <|@ <|@
      nr   96  <|@ instruction JUMP ~[] destination: B9 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B9" "B12" 
    successors "B14" "B17" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4580808849700186980
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  138  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  140  <|@ instruction BRANCH trueDestinationProbability: 0.9223242473295923 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B2" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4580408693095146119
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  144  <|@ st <@st|@reference-map: [stack:8, stack:16]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 29]
stack: int[0|0x0] 
locals: stack:32|QWORD[.] stack:40|QWORD[.] stack:44|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.containsKey(EconomicMapImpl.java:592) [bci: 2]
locals: - - 
org.graalvm.collections.EconomicMapImpl.contains(EconomicMapImpl.java:844) [bci: 2]
locals: - - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:29, 15, 2, 2] <|@ <|@
      nr  146  <|@ instruction r10|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  148  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  150  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  152  <|@ instruction JUMP ~[] destination: B14 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4572600219248258764
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  104  <|@ instruction CMP r8|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Equivalence$3@1213634123] <|@ <|@
      nr  106  <|@ instruction BRANCH trueDestinationProbability: 0.0023566146768518636 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4572586196926455525
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  124  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@7c53d3b7 encoding: base: 0 shift: 3 <|@ <|@
      nr  126  <|@ instruction rsi|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  128  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  130  <|@ instruction rcx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  132  <|@ st <@st|@reference-map: [stack:8, stack:16]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46]
locals: - - - 
org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26]
locals: stack:32|QWORD[.] stack:40|QWORD[.] stack:44|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.containsKey(EconomicMapImpl.java:592) [bci: 2]
locals: - - 
org.graalvm.collections.EconomicMapImpl.contains(EconomicMapImpl.java:844) [bci: 2]
locals: - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] [] callTarget: HotSpotMethod<Equivalence.equals(Object, Object)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:46, 26, 15, 2, 2] <|@ <|@
      nr  134  <|@ instruction JUMP ~[] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B2" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4533297054270606691
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  112  <|@ st <@st|@reference-map: [stack:8, stack:16]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:245) [bci: 2]
locals: stack:32|QWORD[.] stack:40|QWORD[.] stack:44|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.containsKey(EconomicMapImpl.java:592) [bci: 2]
locals: - - 
org.graalvm.collections.EconomicMapImpl.contains(EconomicMapImpl.java:844) [bci: 2]
locals: - - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:2, 15, 2, 2] <|@ <|@
      nr  114  <|@ instruction r10|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  116  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  118  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  120  <|@ instruction JUMP ~[] destination: B11 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 4603493448116153485
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  180  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  182  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4600036861415904434
    begin_IR
      LIR
      nr  184  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  190  <|@ st <@st|@reference-map: []
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:238) [bci: 9]
locals: - - 
org.graalvm.collections.EconomicMapImpl.containsKey(EconomicMapImpl.java:592) [bci: 2]
locals: - - 
org.graalvm.collections.EconomicMapImpl.contains(EconomicMapImpl.java:844) [bci: 2]
locals: - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<EconomicMapImpl.findHash(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:9, 2, 2] <|@ <|@
      nr  192  <|@ instruction CMP rax|DWORD y: -1 size: DWORD <|@ <|@
      nr  194  <|@ instruction rax|DWORD = SETCC condition: != <|@ <|@
      nr  196  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B17" 
    xhandlers
    flags 
    probability 4589654851527087159
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   54  <|@ instruction stack:44|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr   56  <|@ instruction JUMP ~[] destination: B5 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B13" "B5" 
    successors 
    xhandlers
    flags 
    probability 4589754890678347374
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  164  <|@ instruction CMP stack:44|DWORD y: -1 size: DWORD <|@ <|@
      nr  166  <|@ instruction rax|DWORD = SETCC condition: != <|@ <|@
      nr  168  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  170  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  172  <|@ instruction MOV [r15|QWORD + 668] y: -50971 size: DWORD <|@ <|@
      nr  174  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  176  <|@ st <@st|@reference-map: [rdx:0, rsi:0]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:245) [bci: 2]
locals: rsi|QWORD[.] rdx|QWORD[.] r10|DWORD - 
org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15]
locals: - - 
org.graalvm.collections.EconomicMapImpl.containsKey(EconomicMapImpl.java:592) [bci: 2]
locals: - - 
org.graalvm.collections.EconomicMapImpl.contains(EconomicMapImpl.java:844) [bci: 2]
locals: - - 
>@ <|@ instruction DEOPT info [bci:2, 15, 2, 2] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: invokevirtual #77         // containsKey:(java.lang.Object)boolean
     5: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849c1e203493bc20f85efffffff900f1f80000000000f1f800000000089842400c0feff4883ec2848896c242048897424104889542408448b561c4585d20f851801000041ba00000000666690443b560c0f8ded000000448b5e18458bc241d1e0463b04dd0c0000000f833201000049c1e303478b5c8310438504dc49c1e3034c3bda0f84f5000000448b4620458bca41ffc14585c00f850b000000850500000000458bd1eba64181f8addeadde44890c2444895424040f853e0000008502488bf2498bd348b8ffffffffffffffff0f1f440000e8000000009085c00f85a1000000850500000000448b1424488b542408488b742410e952ffffff4181f8addeadde0f842400000049c1e003498bf0488b542408498bcb48b8ffffffffffffffff666690e80000000090ebae850500000000458bd1488b542408488b742410e909ffffffb800000000488b6c24204883c428850500000000c5f877c3e8000000009083f8ff0f95c00fb6c0488b6c24204883c428850500000000c5f877c34489542404837c2404ff0f95c00fb6c0488b6c24204883c428850500000000c5f877c341c7879c020000e538ffff4d89a7a8020000e80000000090e80000000090e80000000090  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@364c5ea4 slotKind: QWORD  <||@
  Comment 48 6 stack:32|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 53 8 stack:40|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 58 10 r10|DWORD[.] = MOV [rsi|QWORD[.] + 28] size: DWORD  <||@
  Comment 62 12 TEST (x: r10|DWORD[.], y: r10|DWORD[.]) size: DWORD  <||@
  Comment 65 14 BRANCH trueDestinationProbability: 0.6466581165811264 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B20  <||@
  Comment 71 block B1 null  <||@
  Comment 71 16 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 71 18 r10|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 77 20 JUMP ~[] destination: B1 -> B2  <||@
  Comment 77 block B2 loop 0 depth 1 header:43|LoopBegin  <||@
  Comment 77 22 [] = LABEL numbPhis: 1 align: true label: ?  <||@
  Comment 80 24 CMP (x: r10|DWORD, y: [rsi|QWORD[.] + 12]) size: DWORD  <||@
  Comment 84 26 BRANCH trueDestinationProbability: 0.5507111845837876 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B19  <||@
  Comment 90 block B3 loop 0 depth 1 header:43|LoopBegin  <||@
  Comment 90 28 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 90 30 r11|DWORD[.] = MOV [rsi|QWORD[.] + 24] size: DWORD  <||@
  Comment 94 32 r8|DWORD = SHL r10|DWORD size: DWORD  <||@
  Comment 100 34 CMP (x: r8|DWORD, y: [r11|DWORD[.] * 8 + 12]) size: DWORD state [bci:2, 15, 2, 2]  <||@
  Comment 100 [rdx:0, rsi:0, r11:0, stack:8, stack:16]at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:245) [bci: 2, duringCall: false, rethrow: false]
              |0             |1             |2          |3 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |r10|DWORD  |- 
  at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.containsKey(EconomicMapImpl.java:592) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.contains(EconomicMapImpl.java:844) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 100 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 108 36 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B18  <||@
  Comment 114 block B4 loop 0 depth 1 header:43|LoopBegin  <||@
  Comment 114 38 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 114 40 r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@7c53d3b7 encoding: base: 0 shift: 3  <||@
  Comment 118 42 r11|DWORD[.] = MOV [r11|QWORD[.] + r8|DWORD * 4 + 16] size: DWORD  <||@
  Comment 123 44 NULLCHECK [r12|QWORD[*] + r11|DWORD[.] * 8] state [bci:2, 15, 2, 2]  <||@
  Comment 123 [rdx:0, rsi:0, r11:0, stack:8, stack:16]at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:245) [bci: 2, duringCall: false, rethrow: false]
              |0             |1             |2          |3 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |r10|DWORD  |- 
  at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.containsKey(EconomicMapImpl.java:592) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.contains(EconomicMapImpl.java:844) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 123 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 127 46 r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@7c53d3b7 encoding: base: 0 shift: 3  <||@
  Comment 131 48 CMP (x: r11|QWORD[.], y: rdx|QWORD[.]) size: QWORD  <||@
  Comment 134 50 BRANCH trueDestinationProbability: 0.09569357247187082 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6  <||@
  Comment 140 block B6 loop 0 depth 1 header:43|LoopBegin  <||@
  Comment 140 58 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 140 60 r8|DWORD[.] = MOV [rsi|QWORD[.] + 32] size: DWORD  <||@
  Comment 144 62 r9|DWORD = INC r10|DWORD size: DWORD  <||@
  Comment 150 64 TEST (x: r8|DWORD[.], y: r8|DWORD[.]) size: DWORD  <||@
  Comment 153 66 BRANCH trueDestinationProbability: 0.9726719235714489 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8  <||@
  Comment 159 block B7 loop 0 depth 1 header:43|LoopBegin  <||@
  Comment 159 68 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 159 70 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:2, 15, 2, 2]  <||@
  Comment 159 [rdx:0, rsi:0, stack:8, stack:16]at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:245) [bci: 2, duringCall: false, rethrow: false]
              |0             |1             |2          |3 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |r10|DWORD  |- 
  at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.containsKey(EconomicMapImpl.java:592) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.contains(EconomicMapImpl.java:844) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 159 {infopoint: SAFEPOINT}  <||@
  Comment 159 11  <||@
  Comment 165 72 r10|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 168 74 JUMP ~[] destination: B7 -> B2  <||@
  Comment 170 block B8 loop 0 depth 1 header:43|LoopBegin  <||@
  Comment 170 76 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 170 78 CMP r8|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Equivalence$1@1642007824]  <||@
  Comment 170 {NarrowOop[Equivalence$1@1642007824]}  <||@
  Comment 177 84 stack:48|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 181 86 stack:44|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 186 80 BRANCH trueDestinationProbability: 0.7114431340645025 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10  <||@
  Comment 192 block B9 loop 0 depth 1 header:43|LoopBegin  <||@
  Comment 192 82 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 192 88 NULLCHECK [rdx|QWORD[.]] state [bci:2, 15, 2, 2]  <||@
  Comment 192 [rdx:0, r11:0, stack:8, stack:16]at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:245) [bci: 2, duringCall: false, rethrow: false]
              |0                  |1             |2               |3 
     locals:  |stack:32|QWORD[.]  |rdx|QWORD[.]  |stack:44|DWORD  |- 
  at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.containsKey(EconomicMapImpl.java:592) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.contains(EconomicMapImpl.java:844) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 192 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 194 90 rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 197 92 rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 200 94 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Object.equals(Object)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:36, 26, 15, 2, 2]  <||@
  Comment 200 7  <||@
  Comment 215 {HotSpotMethod<Object.equals(Object)>}  <||@
  Comment 220 [stack:8, stack:16]at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:260) [bci: 36, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3 
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |stack:44|DWORD  |- 
  at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.containsKey(EconomicMapImpl.java:592) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.contains(EconomicMapImpl.java:844) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 221 96 JUMP ~[] destination: B9 -> B13  <||@
  Comment 221 block B13 loop 0 depth 1 header:43|LoopBegin  <||@
  Comment 221 136 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 221 138 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 223 140 BRANCH trueDestinationProbability: 0.9223242473295923 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B17  <||@
  Comment 229 block B14 loop 0 depth 1 header:43|LoopBegin  <||@
  Comment 229 142 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 229 144 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:29, 15, 2, 2]  <||@
  Comment 229 [stack:8, stack:16]at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 29, duringCall: false, rethrow: false]
              |0                  |1                  |2               |3 
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |stack:44|DWORD  |- 
     stack:   |int[0|0x0]         |                   |                |  
  at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.containsKey(EconomicMapImpl.java:592) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.contains(EconomicMapImpl.java:844) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 229 {infopoint: SAFEPOINT}  <||@
  Comment 229 11  <||@
  Comment 235 146 r10|DWORD = MOVE stack:48|DWORD moveKind: DWORD  <||@
  Comment 239 148 rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 244 150 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 249 152 JUMP ~[] destination: B14 -> B2  <||@
  Comment 254 block B10 loop 0 depth 1 header:43|LoopBegin  <||@
  Comment 254 98 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 254 104 CMP r8|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Equivalence$3@1213634123]  <||@
  Comment 254 {NarrowOop[Equivalence$3@1213634123]}  <||@
  Comment 261 106 BRANCH trueDestinationProbability: 0.0023566146768518636 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12  <||@
  Comment 267 block B12 loop 0 depth 1 header:43|LoopBegin  <||@
  Comment 267 122 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 267 124 r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@7c53d3b7 encoding: base: 0 shift: 3  <||@
  Comment 271 126 rsi|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 274 128 rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 279 130 rcx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 282 132 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] [] callTarget: HotSpotMethod<Equivalence.equals(Object, Object)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:46, 26, 15, 2, 2]  <||@
  Comment 282 7  <||@
  Comment 295 {HotSpotMethod<Equivalence.equals(Object, Object)>}  <||@
  Comment 300 [stack:8, stack:16]at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3 
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |stack:44|DWORD  |- 
  at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.containsKey(EconomicMapImpl.java:592) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.contains(EconomicMapImpl.java:844) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 301 134 JUMP ~[] destination: B12 -> B13  <||@
  Comment 303 block B11 loop 0 depth 1 header:43|LoopBegin  <||@
  Comment 303 108 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 303 112 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:2, 15, 2, 2]  <||@
  Comment 303 [stack:8, stack:16]at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:245) [bci: 2, duringCall: false, rethrow: false]
              |0                  |1                  |2               |3 
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |stack:44|DWORD  |- 
  at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.containsKey(EconomicMapImpl.java:592) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.contains(EconomicMapImpl.java:844) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 303 {infopoint: SAFEPOINT}  <||@
  Comment 303 11  <||@
  Comment 309 114 r10|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 312 116 rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 317 118 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 322 120 JUMP ~[] destination: B11 -> B2  <||@
  Comment 327 block B19 null  <||@
  Comment 327 178 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 327 180 rax|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 332 182 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 341 12  <||@
  Comment 351 block B20 null  <||@
  Comment 351 184 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 351 190 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<EconomicMapImpl.findHash(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:9, 2, 2]  <||@
  Comment 351 {HotSpotMethod<EconomicMapImpl.findHash(Object)>}  <||@
  Comment 351 9  <||@
  Comment 356 []at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:238) [bci: 9, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.containsKey(EconomicMapImpl.java:592) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.contains(EconomicMapImpl.java:844) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 357 192 CMP rax|DWORD y: -1 size: DWORD  <||@
  Comment 360 194 rax|DWORD = SETCC condition: !=  <||@
  Comment 366 196 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 375 12  <||@
  Comment 385 block B5 null  <||@
  Comment 385 52 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 385 54 stack:44|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 390 56 JUMP ~[] destination: B5 -> B17  <||@
  Comment 390 block B17 null  <||@
  Comment 390 162 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 390 164 CMP stack:44|DWORD y: -1 size: DWORD  <||@
  Comment 395 166 rax|DWORD = SETCC condition: !=  <||@
  Comment 401 168 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 410 12  <||@
  Comment 420 block B18 null  <||@
  Comment 420 170 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 420 172 MOV [r15|QWORD + 668] y: -50971 size: DWORD  <||@
  Comment 431 174 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 438 176 DEOPT info [bci:2, 15, 2, 2]  <||@
  Comment 438 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 443 [rdx:0, rsi:0]at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:245) [bci: 2, duringCall: false, rethrow: false]
              |0             |1             |2          |3 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |r10|DWORD  |- 
  at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.containsKey(EconomicMapImpl.java:592) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.contains(EconomicMapImpl.java:844) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 444 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 444 4  <||@
  Comment 450 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 450 5  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-9015[org.graalvm.collections.EconomicMapImpl.contains(Object)]"
  method "HotSpotCompilation-9015[org.graalvm.collections.EconomicMapImpl.contains(Object)]"
  date 1527005199840
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 1079722c0 448b560849c1e203493bc20f858f3be9fe900f1f80000000000f1f800000000089842400c0feff4883ec2848896c242048897424104889542408448b561c4585d20f851801000041ba00000000666690443b560c0f8ded000000448b5e18458bc241d1e0463b04dd0c0000000f833201000049c1e303478b5c8310438504dc49c1e3034c3bda0f84f5000000448b4620458bca41ffc14585c00f850b0000008505a1ccf1fc458bd1eba64181f8750300d844890c2444895424040f853e0000008502488bf2498bd348b8ffffffffffffffff0f1f440000e8443fe9fe9085c00f85a100000085055bccf1fc448b1424488b542408488b742410e952ffffff4181f8770300d80f842400000049c1e003498bf0488b542408498bcb48b8ffffffffffffffff666690e8f43ee9fe90ebae850511ccf1fc458bd1488b542408488b742410e909ffffffb800000000488b6c24204883c4288505ebcbf1fcc5f877c3e87c3ce9fe9083f8ff0f95c00fb6c0488b6c24204883c4288505c9cbf1fcc5f877c34489542404837c2404ff0f95c00fb6c0488b6c24204883c4288505a6cbf1fcc5f877c341c7879c020000e538ffff4d89a7a8020000e88351e9fe90e89f812dff90e87950e9fe90f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f448bb0000000000000000e9fbfffffff4  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@364c5ea4 slotKind: QWORD  <||@
  Comment 48 6 stack:32|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 53 8 stack:40|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 58 10 r10|DWORD[.] = MOV [rsi|QWORD[.] + 28] size: DWORD  <||@
  Comment 62 12 TEST (x: r10|DWORD[.], y: r10|DWORD[.]) size: DWORD  <||@
  Comment 65 14 BRANCH trueDestinationProbability: 0.6466581165811264 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B20  <||@
  Comment 71 block B1 null  <||@
  Comment 71 16 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 71 18 r10|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 77 20 JUMP ~[] destination: B1 -> B2  <||@
  Comment 77 block B2 loop 0 depth 1 header:43|LoopBegin  <||@
  Comment 77 22 [] = LABEL numbPhis: 1 align: true label: ?  <||@
  Comment 80 24 CMP (x: r10|DWORD, y: [rsi|QWORD[.] + 12]) size: DWORD  <||@
  Comment 84 26 BRANCH trueDestinationProbability: 0.5507111845837876 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B19  <||@
  Comment 90 block B3 loop 0 depth 1 header:43|LoopBegin  <||@
  Comment 90 28 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 90 30 r11|DWORD[.] = MOV [rsi|QWORD[.] + 24] size: DWORD  <||@
  Comment 94 32 r8|DWORD = SHL r10|DWORD size: DWORD  <||@
  Comment 100 34 CMP (x: r8|DWORD, y: [r11|DWORD[.] * 8 + 12]) size: DWORD state [bci:2, 15, 2, 2]  <||@
  Comment 100 [rdx:0, rsi:0, r11:0, stack:8, stack:16]at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:245) [bci: 2, duringCall: false, rethrow: false]
              |0             |1             |2          |3 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |r10|DWORD  |- 
  at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.containsKey(EconomicMapImpl.java:592) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.contains(EconomicMapImpl.java:844) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 100 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 108 36 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B18  <||@
  Comment 114 block B4 loop 0 depth 1 header:43|LoopBegin  <||@
  Comment 114 38 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 114 40 r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@7c53d3b7 encoding: base: 0 shift: 3  <||@
  Comment 118 42 r11|DWORD[.] = MOV [r11|QWORD[.] + r8|DWORD * 4 + 16] size: DWORD  <||@
  Comment 123 44 NULLCHECK [r12|QWORD[*] + r11|DWORD[.] * 8] state [bci:2, 15, 2, 2]  <||@
  Comment 123 [rdx:0, rsi:0, r11:0, stack:8, stack:16]at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:245) [bci: 2, duringCall: false, rethrow: false]
              |0             |1             |2          |3 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |r10|DWORD  |- 
  at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.containsKey(EconomicMapImpl.java:592) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.contains(EconomicMapImpl.java:844) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 123 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 127 46 r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@7c53d3b7 encoding: base: 0 shift: 3  <||@
  Comment 131 48 CMP (x: r11|QWORD[.], y: rdx|QWORD[.]) size: QWORD  <||@
  Comment 134 50 BRANCH trueDestinationProbability: 0.09569357247187082 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6  <||@
  Comment 140 block B6 loop 0 depth 1 header:43|LoopBegin  <||@
  Comment 140 58 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 140 60 r8|DWORD[.] = MOV [rsi|QWORD[.] + 32] size: DWORD  <||@
  Comment 144 62 r9|DWORD = INC r10|DWORD size: DWORD  <||@
  Comment 150 64 TEST (x: r8|DWORD[.], y: r8|DWORD[.]) size: DWORD  <||@
  Comment 153 66 BRANCH trueDestinationProbability: 0.9726719235714489 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8  <||@
  Comment 159 block B7 loop 0 depth 1 header:43|LoopBegin  <||@
  Comment 159 68 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 159 70 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:2, 15, 2, 2]  <||@
  Comment 159 [rdx:0, rsi:0, stack:8, stack:16]at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:245) [bci: 2, duringCall: false, rethrow: false]
              |0             |1             |2          |3 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |r10|DWORD  |- 
  at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.containsKey(EconomicMapImpl.java:592) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.contains(EconomicMapImpl.java:844) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 159 {infopoint: SAFEPOINT}  <||@
  Comment 159 11  <||@
  Comment 165 72 r10|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 168 74 JUMP ~[] destination: B7 -> B2  <||@
  Comment 170 block B8 loop 0 depth 1 header:43|LoopBegin  <||@
  Comment 170 76 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 170 78 CMP r8|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Equivalence$1@1642007824]  <||@
  Comment 170 {NarrowOop[Equivalence$1@1642007824]}  <||@
  Comment 177 84 stack:48|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 181 86 stack:44|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 186 80 BRANCH trueDestinationProbability: 0.7114431340645025 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10  <||@
  Comment 192 block B9 loop 0 depth 1 header:43|LoopBegin  <||@
  Comment 192 82 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 192 88 NULLCHECK [rdx|QWORD[.]] state [bci:2, 15, 2, 2]  <||@
  Comment 192 [rdx:0, r11:0, stack:8, stack:16]at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:245) [bci: 2, duringCall: false, rethrow: false]
              |0                  |1             |2               |3 
     locals:  |stack:32|QWORD[.]  |rdx|QWORD[.]  |stack:44|DWORD  |- 
  at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.containsKey(EconomicMapImpl.java:592) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.contains(EconomicMapImpl.java:844) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 192 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 194 90 rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 197 92 rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 200 94 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Object.equals(Object)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:36, 26, 15, 2, 2]  <||@
  Comment 200 7  <||@
  Comment 215 {HotSpotMethod<Object.equals(Object)>}  <||@
  Comment 220 [stack:8, stack:16]at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:260) [bci: 36, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3 
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |stack:44|DWORD  |- 
  at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.containsKey(EconomicMapImpl.java:592) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.contains(EconomicMapImpl.java:844) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 221 96 JUMP ~[] destination: B9 -> B13  <||@
  Comment 221 block B13 loop 0 depth 1 header:43|LoopBegin  <||@
  Comment 221 136 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 221 138 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 223 140 BRANCH trueDestinationProbability: 0.9223242473295923 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B17  <||@
  Comment 229 block B14 loop 0 depth 1 header:43|LoopBegin  <||@
  Comment 229 142 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 229 144 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:29, 15, 2, 2]  <||@
  Comment 229 [stack:8, stack:16]at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 29, duringCall: false, rethrow: false]
              |0                  |1                  |2               |3 
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |stack:44|DWORD  |- 
     stack:   |int[0|0x0]         |                   |                |  
  at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.containsKey(EconomicMapImpl.java:592) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.contains(EconomicMapImpl.java:844) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 229 {infopoint: SAFEPOINT}  <||@
  Comment 229 11  <||@
  Comment 235 146 r10|DWORD = MOVE stack:48|DWORD moveKind: DWORD  <||@
  Comment 239 148 rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 244 150 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 249 152 JUMP ~[] destination: B14 -> B2  <||@
  Comment 254 block B10 loop 0 depth 1 header:43|LoopBegin  <||@
  Comment 254 98 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 254 104 CMP r8|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Equivalence$3@1213634123]  <||@
  Comment 254 {NarrowOop[Equivalence$3@1213634123]}  <||@
  Comment 261 106 BRANCH trueDestinationProbability: 0.0023566146768518636 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12  <||@
  Comment 267 block B12 loop 0 depth 1 header:43|LoopBegin  <||@
  Comment 267 122 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 267 124 r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@7c53d3b7 encoding: base: 0 shift: 3  <||@
  Comment 271 126 rsi|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 274 128 rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 279 130 rcx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 282 132 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] [] callTarget: HotSpotMethod<Equivalence.equals(Object, Object)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:46, 26, 15, 2, 2]  <||@
  Comment 282 7  <||@
  Comment 295 {HotSpotMethod<Equivalence.equals(Object, Object)>}  <||@
  Comment 300 [stack:8, stack:16]at org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:262) [bci: 46, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:247) [bci: 26, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3 
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |stack:44|DWORD  |- 
  at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.containsKey(EconomicMapImpl.java:592) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.contains(EconomicMapImpl.java:844) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 301 134 JUMP ~[] destination: B12 -> B13  <||@
  Comment 303 block B11 loop 0 depth 1 header:43|LoopBegin  <||@
  Comment 303 108 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 303 112 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:2, 15, 2, 2]  <||@
  Comment 303 [stack:8, stack:16]at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:245) [bci: 2, duringCall: false, rethrow: false]
              |0                  |1                  |2               |3 
     locals:  |stack:32|QWORD[.]  |stack:40|QWORD[.]  |stack:44|DWORD  |- 
  at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.containsKey(EconomicMapImpl.java:592) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.contains(EconomicMapImpl.java:844) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 303 {infopoint: SAFEPOINT}  <||@
  Comment 303 11  <||@
  Comment 309 114 r10|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 312 116 rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 317 118 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 322 120 JUMP ~[] destination: B11 -> B2  <||@
  Comment 327 block B19 null  <||@
  Comment 327 178 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 327 180 rax|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 332 182 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 341 12  <||@
  Comment 351 block B20 null  <||@
  Comment 351 184 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 351 190 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<EconomicMapImpl.findHash(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:9, 2, 2]  <||@
  Comment 351 {HotSpotMethod<EconomicMapImpl.findHash(Object)>}  <||@
  Comment 351 9  <||@
  Comment 356 []at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:238) [bci: 9, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.containsKey(EconomicMapImpl.java:592) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.contains(EconomicMapImpl.java:844) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 357 192 CMP rax|DWORD y: -1 size: DWORD  <||@
  Comment 360 194 rax|DWORD = SETCC condition: !=  <||@
  Comment 366 196 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 375 12  <||@
  Comment 385 block B5 null  <||@
  Comment 385 52 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 385 54 stack:44|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 390 56 JUMP ~[] destination: B5 -> B17  <||@
  Comment 390 block B17 null  <||@
  Comment 390 162 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 390 164 CMP stack:44|DWORD y: -1 size: DWORD  <||@
  Comment 395 166 rax|DWORD = SETCC condition: !=  <||@
  Comment 401 168 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 410 12  <||@
  Comment 420 block B18 null  <||@
  Comment 420 170 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 420 172 MOV [r15|QWORD + 668] y: -50971 size: DWORD  <||@
  Comment 431 174 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 438 176 DEOPT info [bci:2, 15, 2, 2]  <||@
  Comment 438 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 443 [rdx:0, rsi:0]at org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:245) [bci: 2, duringCall: false, rethrow: false]
              |0             |1             |2          |3 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |r10|DWORD  |- 
  at org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:240) [bci: 15, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.containsKey(EconomicMapImpl.java:592) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.contains(EconomicMapImpl.java:844) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 444 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 444 4  <||@
  Comment 450 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 450 5  <||@
  HexCodeFile>>> <|@
end_nmethod
