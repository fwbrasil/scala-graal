begin_compilation
  name " HotSpotCompilation-1469[java.util.HashMap.hash(Object)]"
  method "HotSpotCompilation-1469[java.util.HashMap.hash(Object)]"
  date 1527005146915
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v84 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: v84  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a Ljava/lang/Object;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?2 v86 i58 v87 v72 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?2 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<HashMap.hash(Object)>
duringCall: false
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: HashMap.java
sourceLine: 339
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - 
=== Succesors ===
=== Usages ===
v84 i58 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 -  <|@  <|@
f <@~|@floating>@ <|@
tid v87 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v84 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v84 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?2 
guard: - 
address: v87 
=== Succesors ===
next: v36 
=== Usages ===
v85 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?2 guard: - address: v87 #next: v36  <|@  <|@
f <@~|@floating>@ <|@
tid v85 <|@
d <@d|@=== Debug Properties ===
displacement: 464
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: v84 
=== Succesors ===
=== Usages ===
v36 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: v84  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v36 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ANY_LOCATION
nodeSourcePosition: at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
nullCheck: false
stamp: Method*!
=== Inputs ===
stateBefore: - 
guard: - 
address: v85 
=== Succesors ===
next: v14 
=== Usages ===
v11 
=== Predecessor ===
v84 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v85 #next: v14  <|@  <|@
f <@~|@floating>@ <|@
tid v10 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
rawvalue: meta{HotSpotMethod<Object.hashCode()>}
stableDimension: 0
stamp: Method*!
stampKind: Method*
value: meta{HotSpotMethod<Object.hashCode()>}
=== Inputs ===
=== Succesors ===
=== Usages ===
v11 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v11 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v36 
y: v10 
=== Succesors ===
=== Usages ===
v14 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v36 y: v10  <|@  <|@
f <@~|@floating>@ <|@
tid i25 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.HashMap.hash(HashMap.java:339) [bci: 15]
rawvalue: 16
stableDimension: 0
stamp: i32 [16] ⇊0000000000000010 ⇈0000000000000010
stampKind: i32
value: int[16|0x10]
=== Inputs ===
=== Succesors ===
=== Usages ===
i26 i30 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v14 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
stamp: void
trueSuccessorProbability: 0.99
=== Inputs ===
condition: v11 
=== Succesors ===
trueSuccessor: v12 
falseSuccessor: v13 
=== Usages ===
=== Predecessor ===
v36 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v11 #trueSuccessor: v12 #falseSuccessor: v13  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B5" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v12 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
next: j62 
=== Usages ===
=== Predecessor ===
v14 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j62  <|@  <|@
f <@~|@floating>@ <|@
tid v86 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
j62 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j62 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: ANY_LOCATION
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadWordFromObjectIntrinsic(Object, long, LocationIdentity, JavaKind) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadWordFromObject(HotSpotReplacementsUtil.java:752) [bci: 29]
at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:65) [bci: 7]
at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:61) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v86 
=== Succesors ===
next: v48 
=== Usages ===
j44 j49 
=== Predecessor ===
v12 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v86 #next: v48  <|@  <|@
f <@~|@floating>@ <|@
tid j59 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:68) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:61) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
rawvalue: 7
stableDimension: 0
stamp: i64 [7] ⇊0000000000000007 ⇈0000000000000007
stampKind: i64
value: long[7|0x7]
=== Inputs ===
=== Succesors ===
=== Usages ===
j44 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j44 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:68) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:61) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
stamp: i64 [0 - 7] ⇈0000000000000007
=== Inputs ===
x: j62 
y: j59 
=== Succesors ===
=== Usages ===
v45 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: j62 y: j59  <|@  <|@
f <@~|@floating>@ <|@
tid j60 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:69) [bci: 32]
at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:61) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
rawvalue: 1
stableDimension: 0
stamp: i64 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v45 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v45 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:69) [bci: 38]
at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:61) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j44 
y: j60 
=== Succesors ===
=== Usages ===
v48 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: j44 y: j60  <|@  <|@
f <@*|@fixed>@ <|@
tid v48 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:69) [bci: 44]
at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:61) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
stamp: void
trueSuccessorProbability: 0.99
=== Inputs ===
condition: v45 
=== Succesors ===
trueSuccessor: v47 
falseSuccessor: v46 
=== Usages ===
=== Predecessor ===
j62 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v45 #trueSuccessor: v47 #falseSuccessor: v46  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v47 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:70) [bci: 47]
at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:61) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
next: v57 
=== Usages ===
=== Predecessor ===
v48 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v57  <|@  <|@
f <@~|@floating>@ <|@
tid i42 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.hubOffset(GraalHotSpotVMConfig) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadWordFromObject(HotSpotReplacementsUtil.java:751) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:65) [bci: 7]
at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:61) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
rawvalue: 8
stableDimension: 0
stamp: i32 [8] ⇊0000000000000008 ⇈0000000000000008
stampKind: i32
value: int[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j49 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j49 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:70) [bci: 54]
at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:61) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
stamp: i64 [0 - 72057594037927935] ⇈00ffffffffffffff
=== Inputs ===
x: j62 
y: i42 
=== Succesors ===
=== Usages ===
i50 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j62 y: i42  <|@  <|@
f <@~|@floating>@ <|@
tid i50 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 64
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:70) [bci: 60]
at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:61) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
resultBits: 32
stamp: i32
=== Inputs ===
value: j49 
=== Succesors ===
=== Usages ===
v51 i66 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: j49  <|@  <|@
f <@~|@floating>@ <|@
tid i38 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:58) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v51 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v51 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:71) [bci: 72]
at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:61) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i50 
y: i38 
=== Succesors ===
=== Usages ===
v57 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i50 y: i38  <|@  <|@
f <@*|@fixed>@ <|@
tid v57 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:71) [bci: 83]
at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:61) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v51 
=== Succesors ===
trueSuccessor: v56 
falseSuccessor: v55 
=== Usages ===
=== Predecessor ===
v47 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v51 #trueSuccessor: v56 #falseSuccessor: v55  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" 
    xhandlers
    flags 
    probability 4576803513614379298
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v56 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:75) [bci: 88]
at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:61) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
next: v54 
=== Usages ===
=== Predecessor ===
v57 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v54  <|@  <|@
f <@*|@fixed>@ <|@
tid v54 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:75) [bci: 88]
at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:61) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v53 
=== Predecessor ===
v56 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606914895974952345
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v55 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:72) [bci: 86]
at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:61) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
next: v67 
=== Usages ===
=== Predecessor ===
v57 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v67  <|@  <|@
f <@*|@fixed>@ <|@
tid v67 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v64 
=== Predecessor ===
v55 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B6" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v46 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:75) [bci: 88]
at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:61) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
next: v52 
=== Usages ===
=== Predecessor ===
v48 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v52  <|@  <|@
f <@*|@fixed>@ <|@
tid v52 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:75) [bci: 88]
at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:61) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v53 
=== Predecessor ===
v46 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 4581335648048988814
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v53 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:75) [bci: 88]
at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:61) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v52 v54 
=== Succesors ===
next: i58 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v52 v54 #next: i58  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i58 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: identity_hashcode(Object)int
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.identityHashCode(ForeignCallDescriptor, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:75) [bci: 92]
at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:61) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
stamp: i32
=== Inputs ===
stateAfter: - 
stateDuring: ?2 
arguments: a1 
=== Succesors ===
next: v68 
=== Usages ===
i66 
=== Predecessor ===
v53 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?2 arguments: a1 #next: v68  <|@  <|@
f <@*|@fixed>@ <|@
tid v68 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v64 
=== Predecessor ===
i58 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B4" "B6" 
    successors 
    xhandlers
    flags 
    probability 4607092346807469997
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i66 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v64 
values: i50 i58 
=== Succesors ===
=== Usages ===
i30 i31 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v64 values: i50 i58  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v64 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v67 v68 
=== Succesors ===
next: v32 
=== Usages ===
i66 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v67 v68 #next: v32  <|@  <|@
f <@~|@floating>@ <|@
tid i30 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at java.util.HashMap.hash(HashMap.java:339) [bci: 17]
stamp: i32 [0 - 65535] ⇈000000000000ffff
=== Inputs ===
x: i66 
y: i25 
=== Succesors ===
=== Usages ===
i31 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i66 y: i25  <|@  <|@
f <@~|@floating>@ <|@
tid i31 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.XorNode$$Lambda$140/534106600@448e1437
nodeSourcePosition: at java.util.HashMap.hash(HashMap.java:339) [bci: 18]
stamp: i32
=== Inputs ===
x: i30 
y: i66 
=== Succesors ===
=== Usages ===
v32 
=== Predecessor ===
- >@ <|@
instruction <@^|@org.graalvm.compiler.nodes.calc.XorNode>@ x: i30 y: i66  <|@  <|@
f <@*|@fixed>@ <|@
tid v32 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.hash(HashMap.java:339) [bci: 19]
stamp: void
=== Inputs ===
result: i31 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v64 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i31 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v13 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
next: i19 
=== Usages ===
=== Predecessor ===
v14 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i19  <|@  <|@
tid v72 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.lang.Object.hashCode() [bci: -1]
at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
returnStamp: i32
signature: [Ljdk.vm.ci.meta.JavaType;@2b2cc8aa
stamp: void
targetMethod: HotSpotMethod<Object.hashCode()>
=== Inputs ===
arguments: a1 
=== Succesors ===
=== Usages ===
i19 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1  <|@  <|@
tid ?79 <|@
d <@d|@=== Debug Properties ===
bci: 9
code: ResolvedJavaMethodBytecode<HashMap.hash(Object)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: HashMap.java
sourceLine: 339
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - 
=== Succesors ===
=== Usages ===
i19 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i19 <|@
d <@d|@=== Debug Properties ===
bci: 9
nodeSourcePosition: at java.lang.Object.hashCode() [bci: -1]
at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
polymorphic: false
stamp: i32
targetMethod: Direct#Object.hashCode
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v72 
stateDuring: ?79 
=== Succesors ===
next: v28 
=== Usages ===
i27 i26 
=== Predecessor ===
v13 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v72 stateDuring: ?79 #next: v28  <|@  <|@
f <@~|@floating>@ <|@
tid i26 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at java.util.HashMap.hash(HashMap.java:339) [bci: 17]
stamp: i32 [0 - 65535] ⇈000000000000ffff
=== Inputs ===
x: i19 
y: i25 
=== Succesors ===
=== Usages ===
i27 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i19 y: i25  <|@  <|@
f <@~|@floating>@ <|@
tid i27 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.XorNode$$Lambda$140/534106600@448e1437
nodeSourcePosition: at java.util.HashMap.hash(HashMap.java:339) [bci: 18]
stamp: i32
=== Inputs ===
x: i19 
y: i26 
=== Succesors ===
=== Usages ===
v28 
=== Predecessor ===
- >@ <|@
instruction <@^|@org.graalvm.compiler.nodes.calc.XorNode>@ x: i19 y: i26  <|@  <|@
f <@*|@fixed>@ <|@
tid v28 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.hash(HashMap.java:339) [bci: 19]
stamp: void
=== Inputs ===
result: i27 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
i19 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i27 memoryMap: -  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v84 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: v84  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a Ljava/lang/Object;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?2 v86 i58 v87 v72 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?2 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<HashMap.hash(Object)>
duringCall: false
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: HashMap.java
sourceLine: 339
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - 
=== Succesors ===
=== Usages ===
v84 i58 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 -  <|@  <|@
f <@~|@floating>@ <|@
tid v87 <|@
result [v0|QWORD[.] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v84 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v84 <|@
result v1|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?2 
guard: - 
address: v87 
=== Succesors ===
next: v36 
=== Usages ===
v85 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?2 guard: - address: v87 #next: v36  <|@  <|@
f <@~|@floating>@ <|@
tid v85 <|@
result [v1|DWORD * 8 + 464] <|@
d <@d|@=== Debug Properties ===
displacement: 464
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: v84 
=== Succesors ===
=== Usages ===
v36 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: v84  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v36 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ANY_LOCATION
nodeSourcePosition: at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
nullCheck: false
stamp: Method*!
=== Inputs ===
stateBefore: - 
guard: - 
address: v85 
=== Succesors ===
next: v14 
=== Usages ===
v11 
=== Predecessor ===
v84 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v85 #next: v14  <|@  <|@
f <@~|@floating>@ <|@
tid v10 <|@
result v2|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
rawvalue: meta{HotSpotMethod<Object.hashCode()>}
stableDimension: 0
stamp: Method*!
stampKind: Method*
value: meta{HotSpotMethod<Object.hashCode()>}
=== Inputs ===
=== Succesors ===
=== Usages ===
v11 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v11 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v36 
y: v10 
=== Succesors ===
=== Usages ===
v14 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v36 y: v10  <|@  <|@
f <@~|@floating>@ <|@
tid i25 <|@
result int[16|0x10] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.HashMap.hash(HashMap.java:339) [bci: 15]
rawvalue: 16
stableDimension: 0
stamp: i32 [16] ⇊0000000000000010 ⇈0000000000000010
stampKind: i32
value: int[16|0x10]
=== Inputs ===
=== Succesors ===
=== Usages ===
i26 i30 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v14 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
stamp: void
trueSuccessorProbability: 0.99
=== Inputs ===
condition: v11 
=== Succesors ===
trueSuccessor: v12 
falseSuccessor: v13 
=== Usages ===
=== Predecessor ===
v36 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v11 #trueSuccessor: v12 #falseSuccessor: v13  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@5c015a7d slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.hash(HashMap.java:339) [bci: 0]
locals: v0|QWORD[.] - 
>@ <|@ instruction v1|DWORD = MOV [v0|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v2|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotMethod<Object.hashCode()>} <|@ <|@
      nr   -1  <|@ instruction CMP (x: v2|QWORD, y: [v1|DWORD * 8 + 464]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B5" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v12 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
next: j62 
=== Usages ===
=== Predecessor ===
v14 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j62  <|@  <|@
f <@~|@floating>@ <|@
tid v86 <|@
result [v0|QWORD[.]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
j62 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j62 <|@
result v3|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: ANY_LOCATION
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadWordFromObjectIntrinsic(Object, long, LocationIdentity, JavaKind) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadWordFromObject(HotSpotReplacementsUtil.java:752) [bci: 29]
at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:65) [bci: 7]
at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:61) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v86 
=== Succesors ===
next: v48 
=== Usages ===
j44 j49 
=== Predecessor ===
v12 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v86 #next: v48  <|@  <|@
f <@~|@floating>@ <|@
tid j59 <|@
result long[7|0x7] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:68) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:61) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
rawvalue: 7
stableDimension: 0
stamp: i64 [7] ⇊0000000000000007 ⇈0000000000000007
stampKind: i64
value: long[7|0x7]
=== Inputs ===
=== Succesors ===
=== Usages ===
j44 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j44 <|@
result v4|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:68) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:61) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
stamp: i64 [0 - 7] ⇈0000000000000007
=== Inputs ===
x: j62 
y: j59 
=== Succesors ===
=== Usages ===
v45 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: j62 y: j59  <|@  <|@
f <@~|@floating>@ <|@
tid j60 <|@
result long[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:69) [bci: 32]
at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:61) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
rawvalue: 1
stableDimension: 0
stamp: i64 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v45 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v45 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:69) [bci: 38]
at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:61) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j44 
y: j60 
=== Succesors ===
=== Usages ===
v48 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: j44 y: j60  <|@  <|@
f <@*|@fixed>@ <|@
tid v48 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:69) [bci: 44]
at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:61) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
stamp: void
trueSuccessorProbability: 0.99
=== Inputs ===
condition: v45 
=== Succesors ===
trueSuccessor: v47 
falseSuccessor: v46 
=== Usages ===
=== Predecessor ===
j62 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v45 #trueSuccessor: v47 #falseSuccessor: v46  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v3|QWORD = MOV [v0|QWORD[.]] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v4|QWORD = AND v3|QWORD y: 7 size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v4|QWORD y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v47 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:70) [bci: 47]
at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:61) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
next: v57 
=== Usages ===
=== Predecessor ===
v48 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v57  <|@  <|@
f <@~|@floating>@ <|@
tid i42 <|@
result int[8|0x8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.hubOffset(GraalHotSpotVMConfig) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadWordFromObject(HotSpotReplacementsUtil.java:751) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:65) [bci: 7]
at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:61) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
rawvalue: 8
stableDimension: 0
stamp: i32 [8] ⇊0000000000000008 ⇈0000000000000008
stampKind: i32
value: int[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j49 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j49 <|@
result v5|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:70) [bci: 54]
at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:61) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
stamp: i64 [0 - 72057594037927935] ⇈00ffffffffffffff
=== Inputs ===
x: j62 
y: i42 
=== Succesors ===
=== Usages ===
i50 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j62 y: i42  <|@  <|@
f <@~|@floating>@ <|@
tid i50 <|@
result v6|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 64
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:70) [bci: 60]
at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:61) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
resultBits: 32
stamp: i32
=== Inputs ===
value: j49 
=== Succesors ===
=== Usages ===
v51 i66 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: j49  <|@  <|@
f <@~|@floating>@ <|@
tid i38 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:58) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v51 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v51 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:71) [bci: 72]
at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:61) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i50 
y: i38 
=== Succesors ===
=== Usages ===
v57 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i50 y: i38  <|@  <|@
f <@*|@fixed>@ <|@
tid v57 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:71) [bci: 83]
at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:61) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v51 
=== Succesors ===
trueSuccessor: v56 
falseSuccessor: v55 
=== Usages ===
=== Predecessor ===
v47 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v51 #trueSuccessor: v56 #falseSuccessor: v55  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = SHR v3|QWORD y: 8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = MOV v5|QWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v6|DWORD, y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" 
    xhandlers
    flags 
    probability 4576803513614379298
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v56 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:75) [bci: 88]
at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:61) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
next: v54 
=== Usages ===
=== Predecessor ===
v57 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v54  <|@  <|@
f <@*|@fixed>@ <|@
tid v54 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:75) [bci: 88]
at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:61) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v53 
=== Predecessor ===
v56 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B3 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606914895974952345
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v55 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:72) [bci: 86]
at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:61) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
next: v67 
=== Usages ===
=== Predecessor ===
v57 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v67  <|@  <|@
f <@*|@fixed>@ <|@
tid v67 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v64 
=== Predecessor ===
v55 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v6|DWORD] destination: B4 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B6" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v46 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:75) [bci: 88]
at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:61) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
next: v52 
=== Usages ===
=== Predecessor ===
v48 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v52  <|@  <|@
f <@*|@fixed>@ <|@
tid v52 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:75) [bci: 88]
at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:61) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v53 
=== Predecessor ===
v46 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 4581335648048988814
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v53 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:75) [bci: 88]
at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:61) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v52 v54 
=== Succesors ===
next: i58 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v52 v54 #next: i58  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i58 <|@
result v7|DWORD <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: identity_hashcode(Object)int
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.identityHashCode(ForeignCallDescriptor, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:75) [bci: 92]
at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:61) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
stamp: i32
=== Inputs ===
stateAfter: - 
stateDuring: ?2 
arguments: a1 
=== Succesors ===
next: v68 
=== Usages ===
i66 
=== Predecessor ===
v53 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?2 arguments: a1 #next: v68  <|@  <|@
f <@*|@fixed>@ <|@
tid v68 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v64 
=== Predecessor ===
i58 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.hash(HashMap.java:339) [bci: 0]
locals: v0|QWORD[.] - 
>@ <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL] callTarget: Stub<identity_hashcode(Object)int>@0x1068cd360:CallingConvention[rsi|QWORD[.] -> rax|DWORD]:CallingConvention[rsi|QWORD[.] -> rax|DWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v7|DWORD] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B4" "B6" 
    successors 
    xhandlers
    flags 
    probability 4607092346807469997
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i66 <|@
result v8|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v64 
values: i50 i58 
=== Succesors ===
=== Usages ===
i30 i31 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v64 values: i50 i58  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v64 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v67 v68 
=== Succesors ===
next: v32 
=== Usages ===
i66 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v67 v68 #next: v32  <|@  <|@
f <@~|@floating>@ <|@
tid i30 <|@
result v9|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at java.util.HashMap.hash(HashMap.java:339) [bci: 17]
stamp: i32 [0 - 65535] ⇈000000000000ffff
=== Inputs ===
x: i66 
y: i25 
=== Succesors ===
=== Usages ===
i31 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i66 y: i25  <|@  <|@
f <@~|@floating>@ <|@
tid i31 <|@
result v10|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.XorNode$$Lambda$140/534106600@448e1437
nodeSourcePosition: at java.util.HashMap.hash(HashMap.java:339) [bci: 18]
stamp: i32
=== Inputs ===
x: i30 
y: i66 
=== Succesors ===
=== Usages ===
v32 
=== Predecessor ===
- >@ <|@
instruction <@^|@org.graalvm.compiler.nodes.calc.XorNode>@ x: i30 y: i66  <|@  <|@
f <@*|@fixed>@ <|@
tid v32 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.hash(HashMap.java:339) [bci: 19]
stamp: void
=== Inputs ===
result: i31 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v64 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i31 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v8|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = SHR v8|DWORD y: 16 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = XOR (x: v9|DWORD, y: v8|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v10|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v13 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
next: i19 
=== Usages ===
=== Predecessor ===
v14 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i19  <|@  <|@
tid v72 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.lang.Object.hashCode() [bci: -1]
at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
returnStamp: i32
signature: [Ljdk.vm.ci.meta.JavaType;@2b2cc8aa
stamp: void
targetMethod: HotSpotMethod<Object.hashCode()>
=== Inputs ===
arguments: a1 
=== Succesors ===
=== Usages ===
i19 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1  <|@  <|@
tid ?79 <|@
d <@d|@=== Debug Properties ===
bci: 9
code: ResolvedJavaMethodBytecode<HashMap.hash(Object)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: HashMap.java
sourceLine: 339
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - 
=== Succesors ===
=== Usages ===
i19 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i19 <|@
result v11|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 9
nodeSourcePosition: at java.lang.Object.hashCode() [bci: -1]
at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
polymorphic: false
stamp: i32
targetMethod: Direct#Object.hashCode
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v72 
stateDuring: ?79 
=== Succesors ===
next: v28 
=== Usages ===
i27 i26 
=== Predecessor ===
v13 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v72 stateDuring: ?79 #next: v28  <|@  <|@
f <@~|@floating>@ <|@
tid i26 <|@
result v12|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at java.util.HashMap.hash(HashMap.java:339) [bci: 17]
stamp: i32 [0 - 65535] ⇈000000000000ffff
=== Inputs ===
x: i19 
y: i25 
=== Succesors ===
=== Usages ===
i27 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i19 y: i25  <|@  <|@
f <@~|@floating>@ <|@
tid i27 <|@
result v13|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.XorNode$$Lambda$140/534106600@448e1437
nodeSourcePosition: at java.util.HashMap.hash(HashMap.java:339) [bci: 18]
stamp: i32
=== Inputs ===
x: i19 
y: i26 
=== Succesors ===
=== Usages ===
v28 
=== Predecessor ===
- >@ <|@
instruction <@^|@org.graalvm.compiler.nodes.calc.XorNode>@ x: i19 y: i26  <|@  <|@
f <@*|@fixed>@ <|@
tid v28 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.hash(HashMap.java:339) [bci: 19]
stamp: void
=== Inputs ===
result: i27 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
i19 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i27 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.hash(HashMap.java:339) [bci: 9]
locals: - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Object.hashCode()> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:9] <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = SHR v11|DWORD y: 16 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = XOR (x: v11|DWORD, y: v12|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v13|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@5c015a7d slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.hash(HashMap.java:339) [bci: 0]
locals: v0|QWORD[.] - 
>@ <|@ instruction v1|DWORD = MOV [v0|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v2|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotMethod<Object.hashCode()>} <|@ <|@
      nr   -1  <|@ instruction CMP (x: v2|QWORD, y: [v1|DWORD * 8 + 464]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B5" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v3|QWORD = MOV [v0|QWORD[.]] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v4|QWORD = AND v3|QWORD y: 7 size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v4|QWORD y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = SHR v3|QWORD y: 8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = MOV v5|QWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v6|DWORD, y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606914895974952345
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v6|DWORD] destination: B4 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B4" "B6" 
    successors 
    xhandlers
    flags 
    probability 4607092346807469997
    begin_IR
      LIR
      nr   -1  <|@ instruction [v8|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = SHR v8|DWORD y: 16 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = XOR (x: v9|DWORD, y: v8|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v10|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.hash(HashMap.java:339) [bci: 9]
locals: - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Object.hashCode()> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:9] <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = SHR v11|DWORD y: 16 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = XOR (x: v11|DWORD, y: v12|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v13|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B6" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 4581335648048988814
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.hash(HashMap.java:339) [bci: 0]
locals: v0|QWORD[.] - 
>@ <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL] callTarget: Stub<identity_hashcode(Object)int>@0x1068cd360:CallingConvention[rsi|QWORD[.] -> rax|DWORD]:CallingConvention[rsi|QWORD[.] -> rax|DWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v7|DWORD] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" 
    xhandlers
    flags 
    probability 4576803513614379298
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B3 -> B6 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: ifnonnull     8
     4: iconst_0      
     5: goto          19
     8: aload_0       
     9: invokevirtual #0          // java.lang.Object.hashCode:()int
    12: dup           
    13: istore_1      
    14: iload_1       
    15: bipush        16
    17: iushr         
    18: ixor          
    19: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@5c015a7d slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction rbx|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ st <@st|@reference-map: [rbx:0]
live-base-pointers: []
java.util.HashMap.hash(HashMap.java:339) [bci: 0]
locals: rbx|QWORD[.] - 
>@ <|@ instruction rax|DWORD = MOV [rbx|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   10  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotMethod<Object.hashCode()>} <|@ <|@
      nr   12  <|@ instruction CMP (x: rsi|QWORD, y: [rax|DWORD * 8 + 464]) size: QWORD <|@ <|@
      nr   14  <|@ instruction BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B5" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   16  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   18  <|@ instruction rax|QWORD = MOV [rbx|QWORD[.]] size: QWORD <|@ <|@
      nr   20  <|@ instruction rsi|QWORD = AND rax|QWORD y: 7 size: QWORD <|@ <|@
      nr   22  <|@ instruction CMP rsi|QWORD y: 1 size: QWORD <|@ <|@
      nr   24  <|@ instruction BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr   26  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   28  <|@ instruction rax|QWORD = SHR rax|QWORD y: 8 size: QWORD <|@ <|@
      nr   30  <|@ instruction rax|DWORD = MOV rax|QWORD size: DWORD <|@ <|@
      nr   32  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr   34  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606914895974952345
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   38  <|@ instruction JUMP ~[] destination: B4 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B4" "B6" 
    successors 
    xhandlers
    flags 
    probability 4607092346807469997
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   42  <|@ instruction rsi|DWORD = SHR rax|DWORD y: 16 size: DWORD <|@ <|@
      nr   44  <|@ instruction rsi|DWORD = XOR (x: rsi|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr   46  <|@ instruction rax|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr   48  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   52  <|@ instruction rsi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   54  <|@ st <@st|@reference-map: []
live-base-pointers: []
java.util.HashMap.hash(HashMap.java:339) [bci: 9]
locals: - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Object.hashCode()> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:9] <|@ <|@
      nr   58  <|@ instruction rsi|DWORD = SHR rax|DWORD y: 16 size: DWORD <|@ <|@
      nr   60  <|@ instruction rax|DWORD = XOR (x: rax|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr   64  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B6" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   68  <|@ instruction JUMP ~[] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 4581335648048988814
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   76  <|@ instruction rsi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   78  <|@ st <@st|@reference-map: [rbx:0]
live-base-pointers: []
java.util.HashMap.hash(HashMap.java:339) [bci: 0]
locals: rbx|QWORD[.] - 
>@ <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL] callTarget: Stub<identity_hashcode(Object)int>@0x1068cd360:CallingConvention[rsi|QWORD[.] -> rax|DWORD]:CallingConvention[rsi|QWORD[.] -> rax|DWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL state [bci:0] <|@ <|@
      nr   82  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" 
    xhandlers
    flags 
    probability 4576803513614379298
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   72  <|@ instruction JUMP ~[] destination: B3 -> B6 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: ifnonnull     8
     4: iconst_0      
     5: goto          19
     8: aload_0       
     9: invokevirtual #0          // java.lang.Object.hashCode:()int
    12: dup           
    13: istore_1      
    14: iload_1       
    15: bipush        16
    17: iushr         
    18: ixor          
    19: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@5c015a7d slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction rbx|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ st <@st|@reference-map: [rbx:0]
live-base-pointers: []
java.util.HashMap.hash(HashMap.java:339) [bci: 0]
locals: rbx|QWORD[.] - 
>@ <|@ instruction rax|DWORD = MOV [rbx|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   10  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotMethod<Object.hashCode()>} <|@ <|@
      nr   12  <|@ instruction CMP (x: rsi|QWORD, y: [rax|DWORD * 8 + 464]) size: QWORD <|@ <|@
      nr   14  <|@ instruction BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B6" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   16  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   18  <|@ instruction rax|QWORD = MOV [rbx|QWORD[.]] size: QWORD <|@ <|@
      nr   20  <|@ instruction rsi|QWORD = AND rax|QWORD y: 7 size: QWORD <|@ <|@
      nr   22  <|@ instruction CMP rsi|QWORD y: 1 size: QWORD <|@ <|@
      nr   24  <|@ instruction BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr   26  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   28  <|@ instruction rax|QWORD = SHR rax|QWORD y: 8 size: QWORD <|@ <|@
      nr   30  <|@ instruction rax|DWORD = MOV rax|QWORD size: DWORD <|@ <|@
      nr   32  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr   34  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: = trueDestination: B2 -> B6 falseDestination: B2 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B2" "B6" 
    successors 
    xhandlers
    flags 
    probability 4607092346807469997
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   42  <|@ instruction rsi|DWORD = SHR rax|DWORD y: 16 size: DWORD <|@ <|@
      nr   44  <|@ instruction rsi|DWORD = XOR (x: rsi|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr   46  <|@ instruction rax|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr   48  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   52  <|@ instruction rsi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   54  <|@ st <@st|@reference-map: []
live-base-pointers: []
java.util.HashMap.hash(HashMap.java:339) [bci: 9]
locals: - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Object.hashCode()> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:9] <|@ <|@
      nr   58  <|@ instruction rsi|DWORD = SHR rax|DWORD y: 16 size: DWORD <|@ <|@
      nr   60  <|@ instruction rax|DWORD = XOR (x: rax|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr   64  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B1" "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 4581335648048988814
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   76  <|@ instruction rsi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   78  <|@ st <@st|@reference-map: [rbx:0]
live-base-pointers: []
java.util.HashMap.hash(HashMap.java:339) [bci: 0]
locals: rbx|QWORD[.] - 
>@ <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL] callTarget: Stub<identity_hashcode(Object)int>@0x1068cd360:CallingConvention[rsi|QWORD[.] -> rax|DWORD]:CallingConvention[rsi|QWORD[.] -> rax|DWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL state [bci:0] <|@ <|@
      nr   82  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: ifnonnull     8
     4: iconst_0      
     5: goto          19
     8: aload_0       
     9: invokevirtual #0          // java.lang.Object.hashCode:()int
    12: dup           
    13: istore_1      
    14: iload_1       
    15: bipush        16
    17: iushr         
    18: ixor          
    19: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 89842400c0feff4883ec1848896c2410488bde8b430848beaddeaddeaddeadde483b34c5d00100000f853e000000488b03488bf04883e6074883fe010f855d00000048c1e8088bc085c00f844f0000008bf0c1ee1033f08bc6488b6c24104883c418850500000000c5f877c3488bf348b8ffffffffffffffff660f1f440000e800000000908bf0c1ee1033c6488b6c24104883c418850500000000c5f877c3488bf3e80000000090eba6e80000000090e80000000090  <||@
  Comment 0 [stack overflow check]  <||@
  Comment 0 3  <||@
  Comment 0 1  <||@
  Comment 11 block B0 null  <||@
  Comment 11 0 [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 11 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 16 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@5c015a7d slotKind: QWORD  <||@
  Comment 16 6 rbx|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 19 8 rax|DWORD = MOV [rbx|QWORD[.] + 8] size: DWORD state [bci:0]  <||@
  Comment 19 [rbx:0]at java.util.HashMap.hash(HashMap.java:339) [bci: 0, duringCall: false, rethrow: false]
              |0             |1 
     locals:  |rbx|QWORD[.]  |-   <||@
  Comment 19 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 22 10 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotMethod<Object.hashCode()>}  <||@
  Comment 22 {meta{HotSpotMethod<Object.hashCode()>}}  <||@
  Comment 32 12 CMP (x: rsi|QWORD, y: [rax|DWORD * 8 + 464]) size: QWORD  <||@
  Comment 40 14 BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B8  <||@
  Comment 46 block B1 null  <||@
  Comment 46 16 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 46 18 rax|QWORD = MOV [rbx|QWORD[.]] size: QWORD  <||@
  Comment 49 20 rsi|QWORD = AND rax|QWORD y: 7 size: QWORD  <||@
  Comment 56 22 CMP rsi|QWORD y: 1 size: QWORD  <||@
  Comment 60 24 BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B6  <||@
  Comment 66 block B2 null  <||@
  Comment 66 26 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 66 28 rax|QWORD = SHR rax|QWORD y: 8 size: QWORD  <||@
  Comment 70 30 rax|DWORD = MOV rax|QWORD size: DWORD  <||@
  Comment 72 32 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 74 34 BRANCH trueDestinationProbability: 0.010000000000000009 condition: = trueDestination: B2 -> B6 falseDestination: B2 -> B7  <||@
  Comment 80 block B7 null  <||@
  Comment 80 40 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 80 42 rsi|DWORD = SHR rax|DWORD y: 16 size: DWORD  <||@
  Comment 85 44 rsi|DWORD = XOR (x: rsi|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 87 46 rax|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 89 48 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 98 12  <||@
  Comment 108 block B8 null  <||@
  Comment 108 50 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 108 52 rsi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 111 54 rax|DWORD = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Object.hashCode()> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:9]  <||@
  Comment 111 7  <||@
  Comment 127 {HotSpotMethod<Object.hashCode()>}  <||@
  Comment 132 []at java.util.HashMap.hash(HashMap.java:339) [bci: 9, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 133 58 rsi|DWORD = SHR rax|DWORD y: 16 size: DWORD  <||@
  Comment 138 60 rax|DWORD = XOR (x: rax|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 140 64 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 149 12  <||@
  Comment 159 block B6 null  <||@
  Comment 159 74 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 159 76 rsi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 162 78 rax|DWORD = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL] callTarget: Stub<identity_hashcode(Object)int>@0x1068cd360:CallingConvention[rsi|QWORD[.] -> rax|DWORD]:CallingConvention[rsi|QWORD[.] -> rax|DWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL state [bci:0]  <||@
  Comment 162 {Stub<identity_hashcode(Object)int>@0x1068cd360:CallingConvention[rsi|QWORD[.] -> rax|DWORD]:CallingConvention[rsi|QWORD[.] -> rax|DWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 167 [rbx:0]at java.util.HashMap.hash(HashMap.java:339) [bci: 0, duringCall: false, rethrow: false]
              |0             |1 
     locals:  |rbx|QWORD[.]  |-   <||@
  Comment 168 82 JUMP ~[] destination: B6 -> B7  <||@
  Comment 170 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 170 4  <||@
  Comment 176 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 176 5  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-1469[java.util.HashMap.hash(Object)]"
  method "HotSpotCompilation-1469[java.util.HashMap.hash(Object)]"
  date 1527005146963
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 1078a6b20 89842400c0feff4883ec1848896c2410488bde8b430848be4056d12301000000483b34c5d00100000f853e000000488b03488bf04883e6074883fe010f855d00000048c1e8088bc085c00f844f0000008bf0c1ee1033f08bc6488b6c24104883c41885057e84fefcc5f877c3488bf348b8ffffffffffffffff660f1f440000e83cf7f5fe908bf0c1ee1033c6488b6c24104883c41885054b84fefcc5f877c3488bf3e8996702ff90eba6e8513a3aff90e82b09f6fe90f4f4  <||@
  Comment 0 [stack overflow check]  <||@
  Comment 0 3  <||@
  Comment 0 1  <||@
  Comment 11 block B0 null  <||@
  Comment 11 0 [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 11 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 16 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@5c015a7d slotKind: QWORD  <||@
  Comment 16 6 rbx|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 19 8 rax|DWORD = MOV [rbx|QWORD[.] + 8] size: DWORD state [bci:0]  <||@
  Comment 19 [rbx:0]at java.util.HashMap.hash(HashMap.java:339) [bci: 0, duringCall: false, rethrow: false]
              |0             |1 
     locals:  |rbx|QWORD[.]  |-   <||@
  Comment 19 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 22 10 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotMethod<Object.hashCode()>}  <||@
  Comment 22 {meta{HotSpotMethod<Object.hashCode()>}}  <||@
  Comment 32 12 CMP (x: rsi|QWORD, y: [rax|DWORD * 8 + 464]) size: QWORD  <||@
  Comment 40 14 BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B8  <||@
  Comment 46 block B1 null  <||@
  Comment 46 16 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 46 18 rax|QWORD = MOV [rbx|QWORD[.]] size: QWORD  <||@
  Comment 49 20 rsi|QWORD = AND rax|QWORD y: 7 size: QWORD  <||@
  Comment 56 22 CMP rsi|QWORD y: 1 size: QWORD  <||@
  Comment 60 24 BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B6  <||@
  Comment 66 block B2 null  <||@
  Comment 66 26 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 66 28 rax|QWORD = SHR rax|QWORD y: 8 size: QWORD  <||@
  Comment 70 30 rax|DWORD = MOV rax|QWORD size: DWORD  <||@
  Comment 72 32 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 74 34 BRANCH trueDestinationProbability: 0.010000000000000009 condition: = trueDestination: B2 -> B6 falseDestination: B2 -> B7  <||@
  Comment 80 block B7 null  <||@
  Comment 80 40 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 80 42 rsi|DWORD = SHR rax|DWORD y: 16 size: DWORD  <||@
  Comment 85 44 rsi|DWORD = XOR (x: rsi|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 87 46 rax|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 89 48 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 98 12  <||@
  Comment 108 block B8 null  <||@
  Comment 108 50 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 108 52 rsi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 111 54 rax|DWORD = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Object.hashCode()> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:9]  <||@
  Comment 111 7  <||@
  Comment 127 {HotSpotMethod<Object.hashCode()>}  <||@
  Comment 132 []at java.util.HashMap.hash(HashMap.java:339) [bci: 9, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 133 58 rsi|DWORD = SHR rax|DWORD y: 16 size: DWORD  <||@
  Comment 138 60 rax|DWORD = XOR (x: rax|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 140 64 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 149 12  <||@
  Comment 159 block B6 null  <||@
  Comment 159 74 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 159 76 rsi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 162 78 rax|DWORD = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL] callTarget: Stub<identity_hashcode(Object)int>@0x1068cd360:CallingConvention[rsi|QWORD[.] -> rax|DWORD]:CallingConvention[rsi|QWORD[.] -> rax|DWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL state [bci:0]  <||@
  Comment 162 {Stub<identity_hashcode(Object)int>@0x1068cd360:CallingConvention[rsi|QWORD[.] -> rax|DWORD]:CallingConvention[rsi|QWORD[.] -> rax|DWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 167 [rbx:0]at java.util.HashMap.hash(HashMap.java:339) [bci: 0, duringCall: false, rethrow: false]
              |0             |1 
     locals:  |rbx|QWORD[.]  |-   <||@
  Comment 168 82 JUMP ~[] destination: B6 -> B7  <||@
  Comment 170 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 170 4  <||@
  Comment 176 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 176 5  <||@
  HexCodeFile>>> <|@
end_nmethod
