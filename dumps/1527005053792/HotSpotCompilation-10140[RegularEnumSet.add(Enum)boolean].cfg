begin_compilation
  name " HotSpotCompilation-10140[java.util.RegularEnumSet.add(Enum)]"
  method "HotSpotCompilation-10140[java.util.RegularEnumSet.add(Enum)]"
  date 1527005241293
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v74 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: v74  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Ljava/util/RegularEnumSet;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v80 v79 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a Ljava/lang/Enum;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v83 v81 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?3 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<RegularEnumSet.add(Enum)>
duringCall: false
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: RegularEnumSet.java
sourceLine: 161
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 - - 
=== Succesors ===
=== Usages ===
v67 v74 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 - -  <|@  <|@
f <@~|@floating>@ <|@
tid v83 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
v74 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v74 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at java.lang.Object.getClass() [bci: -1]
at java.util.EnumSet.typeCheck(EnumSet.java:396) [bci: 1]
at java.util.RegularEnumSet.add(RegularEnumSet.java:161) [bci: 2]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?3 
guard: - 
address: v83 
=== Succesors ===
next: a75 
=== Usages ===
v82 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?3 guard: - address: v83 #next: a75  <|@  <|@
f <@~|@floating>@ <|@
tid v79 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a75 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a75 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EnumSet.elementType
nodeSourcePosition: at java.util.EnumSet.typeCheck(EnumSet.java:397) [bci: 7]
at java.util.RegularEnumSet.add(RegularEnumSet.java:161) [bci: 2]
nullCheck: false
stamp: n# Ljava/lang/Class;
=== Inputs ===
stateBefore: - 
guard: - 
address: v79 
=== Succesors ===
next: a76 
=== Usages ===
a37 
=== Predecessor ===
v74 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v79 #next: a76  <|@  <|@
f <@~|@floating>@ <|@
tid v82 <|@
d <@d|@=== Debug Properties ===
displacement: 104
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: v74 
=== Succesors ===
=== Usages ===
a76 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: v74  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a76 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Klass::_java_mirror:final
nodeSourcePosition: at java.lang.Object.getClass() [bci: -1]
at java.util.EnumSet.typeCheck(EnumSet.java:396) [bci: 1]
at java.util.RegularEnumSet.add(RegularEnumSet.java:161) [bci: 2]
nullCheck: false
stamp: a!# Ljava/lang/Class;
=== Inputs ===
stateBefore: - 
guard: - 
address: v82 
=== Succesors ===
next: v57 
=== Usages ===
v30 
=== Predecessor ===
a75 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v82 #next: v57  <|@  <|@
f <@~|@floating>@ <|@
tid a37 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.EnumSet.typeCheck(EnumSet.java:397) [bci: 7]
at java.util.RegularEnumSet.add(RegularEnumSet.java:161) [bci: 2]
op: Uncompress
stamp: a# Ljava/lang/Class;
=== Inputs ===
value: a75 
=== Succesors ===
=== Usages ===
v30 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a75  <|@  <|@
f <@~|@floating>@ <|@
tid v30 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.EnumSet.typeCheck(EnumSet.java:397) [bci: 10]
at java.util.RegularEnumSet.add(RegularEnumSet.java:161) [bci: 2]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a37 
y: a76 
=== Succesors ===
=== Usages ===
v57 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.ObjectEqualsNode>@ x: a37 y: a76  <|@  <|@
f <@*|@fixed>@ <|@
tid v57 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.EnumSet.typeCheck(EnumSet.java:397) [bci: 10]
at java.util.RegularEnumSet.add(RegularEnumSet.java:161) [bci: 2]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v30 
=== Succesors ===
trueSuccessor: v54 
falseSuccessor: v56 
=== Usages ===
=== Predecessor ===
a76 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v30 #trueSuccessor: v54 #falseSuccessor: v56  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v54 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.EnumSet.typeCheck(EnumSet.java:397) [bci: 10]
at java.util.RegularEnumSet.add(RegularEnumSet.java:161) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: j77 
=== Usages ===
=== Predecessor ===
v57 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j77  <|@  <|@
f <@~|@floating>@ <|@
tid v80 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
j77 v46 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j77 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: RegularEnumSet.elements
nodeSourcePosition: at java.util.RegularEnumSet.add(RegularEnumSet.java:163) [bci: 6]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v80 
=== Succesors ===
next: i78 
=== Usages ===
j15 v21 
=== Predecessor ===
v54 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v80 #next: i78  <|@  <|@
f <@~|@floating>@ <|@
tid v81 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i78 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i78 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Enum.ordinal
nodeSourcePosition: at java.lang.Enum.ordinal(Enum.java:103) [bci: 1]
at java.util.RegularEnumSet.add(RegularEnumSet.java:164) [bci: 17]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v81 
=== Succesors ===
next: v46 
=== Usages ===
j14 
=== Predecessor ===
j77 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v81 #next: v46  <|@  <|@
f <@~|@floating>@ <|@
tid j9 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.RegularEnumSet.add(RegularEnumSet.java:164) [bci: 15]
rawvalue: 1
stableDimension: 0
stamp: i64 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
j14 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j14 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at java.util.RegularEnumSet.add(RegularEnumSet.java:164) [bci: 20]
stamp: i64
=== Inputs ===
x: j9 
y: i78 
=== Succesors ===
=== Usages ===
j15 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: j9 y: i78  <|@  <|@
f <@~|@floating>@ <|@
tid j15 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.OrNode$$Lambda$69/599890587@2745c573
nodeSourcePosition: at java.util.RegularEnumSet.add(RegularEnumSet.java:164) [bci: 21]
stamp: i64
=== Inputs ===
x: j14 
y: j77 
=== Succesors ===
=== Usages ===
v46 v21 
=== Predecessor ===
- >@ <|@
instruction <@||@org.graalvm.compiler.nodes.calc.OrNode>@ x: j14 y: j77  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v46 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: RegularEnumSet.elements
nodeSourcePosition: at java.util.RegularEnumSet.add(RegularEnumSet.java:164) [bci: 22]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v80 
value: j15 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v24 
=== Usages ===
=== Predecessor ===
i78 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v80 value: j15 stateAfter: - lastLocationAccess: - #next: v24  <|@  <|@
f <@~|@floating>@ <|@
tid v21 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.RegularEnumSet.add(RegularEnumSet.java:165) [bci: 31]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j15 
y: j77 
=== Succesors ===
=== Usages ===
i23 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: j15 y: j77  <|@  <|@
f <@~|@floating>@ <|@
tid i20 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.RegularEnumSet.add(RegularEnumSet.java:165) [bci: 31]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
i23 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i22 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.RegularEnumSet.add(RegularEnumSet.java:165) [bci: 31]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i23 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i23 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.RegularEnumSet.add(RegularEnumSet.java:165) [bci: 31]
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
condition: v21 
trueValue: i20 
falseValue: i22 
=== Succesors ===
=== Usages ===
v24 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v21 trueValue: i20 falseValue: i22  <|@  <|@
f <@*|@fixed>@ <|@
tid v24 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.RegularEnumSet.add(RegularEnumSet.java:165) [bci: 39]
stamp: void
=== Inputs ===
result: i23 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v46 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i23 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v56 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.EnumSet.typeCheck(EnumSet.java:397) [bci: 10]
at java.util.RegularEnumSet.add(RegularEnumSet.java:161) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v67 
=== Usages ===
=== Predecessor ===
v57 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v67  <|@  <|@
f <@~|@floating>@ <|@
tid a64 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v67 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i69 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -10259
stableDimension: 0
stamp: i32 [-10259] ⇊00000000ffffd7ed ⇈00000000ffffd7ed
stampKind: i32
value: int[-10259|0xffffffffffffd7ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
v67 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v67 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?3 
actionAndReason: i69 
speculation: a64 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v56 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?3 actionAndReason: i69 speculation: a64  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v74 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: v74  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Ljava/util/RegularEnumSet;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v80 v79 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
result v1|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a Ljava/lang/Enum;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v83 v81 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?3 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<RegularEnumSet.add(Enum)>
duringCall: false
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: RegularEnumSet.java
sourceLine: 161
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 - - 
=== Succesors ===
=== Usages ===
v67 v74 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 - -  <|@  <|@
f <@~|@floating>@ <|@
tid v83 <|@
result [v1|QWORD[.] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
v74 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v74 <|@
result v2|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at java.lang.Object.getClass() [bci: -1]
at java.util.EnumSet.typeCheck(EnumSet.java:396) [bci: 1]
at java.util.RegularEnumSet.add(RegularEnumSet.java:161) [bci: 2]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?3 
guard: - 
address: v83 
=== Succesors ===
next: a75 
=== Usages ===
v82 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?3 guard: - address: v83 #next: a75  <|@  <|@
f <@~|@floating>@ <|@
tid v79 <|@
result [v0|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a75 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a75 <|@
result v3|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EnumSet.elementType
nodeSourcePosition: at java.util.EnumSet.typeCheck(EnumSet.java:397) [bci: 7]
at java.util.RegularEnumSet.add(RegularEnumSet.java:161) [bci: 2]
nullCheck: false
stamp: n# Ljava/lang/Class;
=== Inputs ===
stateBefore: - 
guard: - 
address: v79 
=== Succesors ===
next: a76 
=== Usages ===
a37 
=== Predecessor ===
v74 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v79 #next: a76  <|@  <|@
f <@~|@floating>@ <|@
tid v82 <|@
result [v2|DWORD * 8 + 104] <|@
d <@d|@=== Debug Properties ===
displacement: 104
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: v74 
=== Succesors ===
=== Usages ===
a76 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: v74  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a76 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Klass::_java_mirror:final
nodeSourcePosition: at java.lang.Object.getClass() [bci: -1]
at java.util.EnumSet.typeCheck(EnumSet.java:396) [bci: 1]
at java.util.RegularEnumSet.add(RegularEnumSet.java:161) [bci: 2]
nullCheck: false
stamp: a!# Ljava/lang/Class;
=== Inputs ===
stateBefore: - 
guard: - 
address: v82 
=== Succesors ===
next: v57 
=== Usages ===
v30 
=== Predecessor ===
a75 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v82 #next: v57  <|@  <|@
f <@~|@floating>@ <|@
tid a37 <|@
result v4|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.EnumSet.typeCheck(EnumSet.java:397) [bci: 7]
at java.util.RegularEnumSet.add(RegularEnumSet.java:161) [bci: 2]
op: Uncompress
stamp: a# Ljava/lang/Class;
=== Inputs ===
value: a75 
=== Succesors ===
=== Usages ===
v30 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a75  <|@  <|@
f <@~|@floating>@ <|@
tid v30 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.EnumSet.typeCheck(EnumSet.java:397) [bci: 10]
at java.util.RegularEnumSet.add(RegularEnumSet.java:161) [bci: 2]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a37 
y: a76 
=== Succesors ===
=== Usages ===
v57 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.ObjectEqualsNode>@ x: a37 y: a76  <|@  <|@
f <@*|@fixed>@ <|@
tid v57 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.EnumSet.typeCheck(EnumSet.java:397) [bci: 10]
at java.util.RegularEnumSet.add(RegularEnumSet.java:161) [bci: 2]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v30 
=== Succesors ===
trueSuccessor: v54 
falseSuccessor: v56 
=== Usages ===
=== Predecessor ===
a76 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v30 #trueSuccessor: v54 #falseSuccessor: v56  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@371b94e0 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.RegularEnumSet.add(RegularEnumSet.java:161) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction v2|DWORD = MOV [v1|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v3|DWORD[.] = MOV [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2b470f5c encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMP (x: v4|QWORD[.], y: [v2|DWORD * 8 + 104]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v54 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.EnumSet.typeCheck(EnumSet.java:397) [bci: 10]
at java.util.RegularEnumSet.add(RegularEnumSet.java:161) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: j77 
=== Usages ===
=== Predecessor ===
v57 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j77  <|@  <|@
f <@~|@floating>@ <|@
tid v80 <|@
result [v0|QWORD[.] + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
j77 v46 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j77 <|@
result v5|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: RegularEnumSet.elements
nodeSourcePosition: at java.util.RegularEnumSet.add(RegularEnumSet.java:163) [bci: 6]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v80 
=== Succesors ===
next: i78 
=== Usages ===
j15 v21 
=== Predecessor ===
v54 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v80 #next: i78  <|@  <|@
f <@~|@floating>@ <|@
tid v81 <|@
result [v1|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i78 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i78 <|@
result v6|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Enum.ordinal
nodeSourcePosition: at java.lang.Enum.ordinal(Enum.java:103) [bci: 1]
at java.util.RegularEnumSet.add(RegularEnumSet.java:164) [bci: 17]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v81 
=== Succesors ===
next: v46 
=== Usages ===
j14 
=== Predecessor ===
j77 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v81 #next: v46  <|@  <|@
f <@~|@floating>@ <|@
tid j9 <|@
result long[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.RegularEnumSet.add(RegularEnumSet.java:164) [bci: 15]
rawvalue: 1
stableDimension: 0
stamp: i64 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
j14 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j14 <|@
result v7|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at java.util.RegularEnumSet.add(RegularEnumSet.java:164) [bci: 20]
stamp: i64
=== Inputs ===
x: j9 
y: i78 
=== Succesors ===
=== Usages ===
j15 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: j9 y: i78  <|@  <|@
f <@~|@floating>@ <|@
tid j15 <|@
result v9|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.OrNode$$Lambda$69/599890587@2745c573
nodeSourcePosition: at java.util.RegularEnumSet.add(RegularEnumSet.java:164) [bci: 21]
stamp: i64
=== Inputs ===
x: j14 
y: j77 
=== Succesors ===
=== Usages ===
v46 v21 
=== Predecessor ===
- >@ <|@
instruction <@||@org.graalvm.compiler.nodes.calc.OrNode>@ x: j14 y: j77  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v46 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: RegularEnumSet.elements
nodeSourcePosition: at java.util.RegularEnumSet.add(RegularEnumSet.java:164) [bci: 22]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v80 
value: j15 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v24 
=== Usages ===
=== Predecessor ===
i78 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v80 value: j15 stateAfter: - lastLocationAccess: - #next: v24  <|@  <|@
f <@~|@floating>@ <|@
tid v21 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.RegularEnumSet.add(RegularEnumSet.java:165) [bci: 31]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j15 
y: j77 
=== Succesors ===
=== Usages ===
i23 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: j15 y: j77  <|@  <|@
f <@~|@floating>@ <|@
tid i20 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.RegularEnumSet.add(RegularEnumSet.java:165) [bci: 31]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
i23 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i22 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.RegularEnumSet.add(RegularEnumSet.java:165) [bci: 31]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i23 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i23 <|@
result v10|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.RegularEnumSet.add(RegularEnumSet.java:165) [bci: 31]
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
condition: v21 
trueValue: i20 
falseValue: i22 
=== Succesors ===
=== Usages ===
v24 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v21 trueValue: i20 falseValue: i22  <|@  <|@
f <@*|@fixed>@ <|@
tid v24 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.RegularEnumSet.add(RegularEnumSet.java:165) [bci: 39]
stamp: void
=== Inputs ===
result: i23 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v46 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i23 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = MOV [v0|QWORD[.] + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = MOV [v1|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = MOVE input: long[1|0x1] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v6|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = SHL (x: v8|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = OR (x: v7|QWORD, y: v5|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 24], y: v9|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v5|QWORD, y: v9|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = SETCC condition: != <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v10|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v56 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.EnumSet.typeCheck(EnumSet.java:397) [bci: 10]
at java.util.RegularEnumSet.add(RegularEnumSet.java:161) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v67 
=== Usages ===
=== Predecessor ===
v57 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v67  <|@  <|@
f <@~|@floating>@ <|@
tid a64 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v67 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i69 <|@
result int[-10259|0xffffffffffffd7ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -10259
stableDimension: 0
stamp: i32 [-10259] ⇊00000000ffffd7ed ⇈00000000ffffd7ed
stampKind: i32
value: int[-10259|0xffffffffffffd7ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
v67 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v67 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?3 
actionAndReason: i69 
speculation: a64 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v56 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?3 actionAndReason: i69 speculation: a64  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -10259 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.RegularEnumSet.add(RegularEnumSet.java:161) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@371b94e0 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.RegularEnumSet.add(RegularEnumSet.java:161) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction v2|DWORD = MOV [v1|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v3|DWORD[.] = MOV [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2b470f5c encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMP (x: v4|QWORD[.], y: [v2|DWORD * 8 + 104]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = MOV [v0|QWORD[.] + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = MOV [v1|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = MOVE input: long[1|0x1] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v6|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = SHL (x: v8|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = OR (x: v7|QWORD, y: v5|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 24], y: v9|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v5|QWORD, y: v9|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = SETCC condition: != <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v10|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -10259 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.RegularEnumSet.add(RegularEnumSet.java:161) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: invokevirtual #9          // java.util.EnumSet.typeCheck:(java.lang.Enum)void
     5: aload_0       
     6: getfield      #0          // elements:long
     9: lstore_2      
    10: aload_0       
    11: dup           
    12: getfield      #0          // elements:long
    15: lconst_1      
    16: aload_1       
    17: invokevirtual #2          // java.lang.Enum.ordinal:()int
    20: lshl          
    21: lor           
    22: putfield      #0          // elements:long
    25: aload_0       
    26: getfield      #0          // elements:long
    29: lload_2       
    30: lcmp          
    31: ifeq          38
    34: iconst_1      
    35: goto          39
    38: iconst_0      
    39: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@371b94e0 slotKind: QWORD <|@ <|@
      nr   10  <|@ st <@st|@reference-map: [rdx:0, rsi:0]
live-base-pointers: []
java.util.RegularEnumSet.add(RegularEnumSet.java:161) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - - 
>@ <|@ instruction rcx|DWORD = MOV [rdx|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   12  <|@ instruction rax|DWORD[.] = MOV [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   14  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2b470f5c encoding: base: 0 shift: 3 <|@ <|@
      nr   16  <|@ instruction CMP (x: rax|QWORD[.], y: [rcx|DWORD * 8 + 104]) size: QWORD <|@ <|@
      nr   18  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   22  <|@ instruction rax|QWORD = MOV [rsi|QWORD[.] + 24] size: QWORD <|@ <|@
      nr   24  <|@ instruction rcx|DWORD = MOV [rdx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   26  <|@ instruction r10|QWORD = MOVE input: long[1|0x1] <|@ <|@
      nr   30  <|@ instruction r10|QWORD = SHL (x: r10|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr   32  <|@ instruction r10|QWORD = OR (x: r10|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr   34  <|@ instruction MOV (x: [rsi|QWORD[.] + 24], y: r10|QWORD) size: QWORD <|@ <|@
      nr   36  <|@ instruction CMP (x: rax|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr   38  <|@ instruction rax|DWORD = SETCC condition: != <|@ <|@
      nr   42  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   46  <|@ instruction MOV [r15|QWORD + 668] y: -10259 size: DWORD <|@ <|@
      nr   48  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   50  <|@ st <@st|@reference-map: [rdx:0, rsi:0]
live-base-pointers: []
java.util.RegularEnumSet.add(RegularEnumSet.java:161) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: invokevirtual #9          // java.util.EnumSet.typeCheck:(java.lang.Enum)void
     5: aload_0       
     6: getfield      #0          // elements:long
     9: lstore_2      
    10: aload_0       
    11: dup           
    12: getfield      #0          // elements:long
    15: lconst_1      
    16: aload_1       
    17: invokevirtual #2          // java.lang.Enum.ordinal:()int
    20: lshl          
    21: lor           
    22: putfield      #0          // elements:long
    25: aload_0       
    26: getfield      #0          // elements:long
    29: lload_2       
    30: lcmp          
    31: ifeq          38
    34: iconst_1      
    35: goto          39
    38: iconst_0      
    39: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@371b94e0 slotKind: QWORD <|@ <|@
      nr   10  <|@ st <@st|@reference-map: [rdx:0, rsi:0]
live-base-pointers: []
java.util.RegularEnumSet.add(RegularEnumSet.java:161) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - - 
>@ <|@ instruction rcx|DWORD = MOV [rdx|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   12  <|@ instruction rax|DWORD[.] = MOV [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   14  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2b470f5c encoding: base: 0 shift: 3 <|@ <|@
      nr   16  <|@ instruction CMP (x: rax|QWORD[.], y: [rcx|DWORD * 8 + 104]) size: QWORD <|@ <|@
      nr   18  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   22  <|@ instruction rax|QWORD = MOV [rsi|QWORD[.] + 24] size: QWORD <|@ <|@
      nr   24  <|@ instruction rcx|DWORD = MOV [rdx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   26  <|@ instruction r10|QWORD = MOVE input: long[1|0x1] <|@ <|@
      nr   30  <|@ instruction r10|QWORD = SHL (x: r10|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr   32  <|@ instruction r10|QWORD = OR (x: r10|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr   34  <|@ instruction MOV (x: [rsi|QWORD[.] + 24], y: r10|QWORD) size: QWORD <|@ <|@
      nr   36  <|@ instruction CMP (x: rax|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr   38  <|@ instruction rax|DWORD = SETCC condition: != <|@ <|@
      nr   42  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   46  <|@ instruction MOV [r15|QWORD + 668] y: -10259 size: DWORD <|@ <|@
      nr   48  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   50  <|@ st <@st|@reference-map: [rdx:0, rsi:0]
live-base-pointers: []
java.util.RegularEnumSet.add(RegularEnumSet.java:161) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: invokevirtual #9          // java.util.EnumSet.typeCheck:(java.lang.Enum)void
     5: aload_0       
     6: getfield      #0          // elements:long
     9: lstore_2      
    10: aload_0       
    11: dup           
    12: getfield      #0          // elements:long
    15: lconst_1      
    16: aload_1       
    17: invokevirtual #2          // java.lang.Enum.ordinal:()int
    20: lshl          
    21: lor           
    22: putfield      #0          // elements:long
    25: aload_0       
    26: getfield      #0          // elements:long
    29: lload_2       
    30: lcmp          
    31: ifeq          38
    34: iconst_1      
    35: goto          39
    38: iconst_0      
    39: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849c1e203493bc20f85efffffff900f1f80000000000f1f800000000089842400c0feff4883ec1848896c24108b4a088b460c48c1e003483b04cd680000000f8534000000488b46188b4a0c49c7c20100000049d3e24c0bd04c895618493bc20f95c00fb6c0488b6c24104883c418850500000000c5f877c341c7879c020000edd7ffff4d89a7a8020000e80000000090e80000000090e80000000090  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@371b94e0 slotKind: QWORD  <||@
  Comment 48 10 rcx|DWORD = MOV [rdx|QWORD[.] + 8] size: DWORD state [bci:0]  <||@
  Comment 48 [rdx:0, rsi:0]at java.util.RegularEnumSet.add(RegularEnumSet.java:161) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2  |3 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |-  |-   <||@
  Comment 48 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 51 12 rax|DWORD[.] = MOV [rsi|QWORD[.] + 12] size: DWORD  <||@
  Comment 54 14 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2b470f5c encoding: base: 0 shift: 3  <||@
  Comment 58 16 CMP (x: rax|QWORD[.], y: [rcx|DWORD * 8 + 104]) size: QWORD  <||@
  Comment 66 18 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2  <||@
  Comment 72 block B1 null  <||@
  Comment 72 20 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 72 22 rax|QWORD = MOV [rsi|QWORD[.] + 24] size: QWORD  <||@
  Comment 76 24 rcx|DWORD = MOV [rdx|QWORD[.] + 12] size: DWORD  <||@
  Comment 79 26 r10|QWORD = MOVE input: long[1|0x1]  <||@
  Comment 86 30 r10|QWORD = SHL (x: r10|QWORD, ~y: rcx|DWORD) size: QWORD  <||@
  Comment 89 32 r10|QWORD = OR (x: r10|QWORD, y: rax|QWORD) size: QWORD  <||@
  Comment 92 34 MOV (x: [rsi|QWORD[.] + 24], y: r10|QWORD) size: QWORD  <||@
  Comment 96 36 CMP (x: rax|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 99 38 rax|DWORD = SETCC condition: !=  <||@
  Comment 105 42 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 114 12  <||@
  Comment 124 block B2 null  <||@
  Comment 124 44 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 124 46 MOV [r15|QWORD + 668] y: -10259 size: DWORD  <||@
  Comment 135 48 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 142 50 DEOPT info [bci:0]  <||@
  Comment 142 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 147 [rdx:0, rsi:0]at java.util.RegularEnumSet.add(RegularEnumSet.java:161) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2  |3 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |-  |-   <||@
  Comment 148 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 148 4  <||@
  Comment 154 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 154 5  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-10140[java.util.RegularEnumSet.add(Enum)]"
  method "HotSpotCompilation-10140[java.util.RegularEnumSet.add(Enum)]"
  date 1527005241339
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 106dd55e0 448b560849c1e203493bc20f856f08a3ff900f1f80000000000f1f800000000089842400c0feff4883ec1848896c24108b4a088b460c48c1e003483b04cd680000000f8534000000488b46188b4a0c49c7c20100000049d3e24c0bd04c895618493bc20f95c00fb6c0488b6c24104883c4188505ae99abfdc5f877c341c7879c020000edd7ffff4d89a7a8020000e88b1fa3ff90e8a74fe7ff90e8811ea3ff90  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@371b94e0 slotKind: QWORD  <||@
  Comment 48 10 rcx|DWORD = MOV [rdx|QWORD[.] + 8] size: DWORD state [bci:0]  <||@
  Comment 48 [rdx:0, rsi:0]at java.util.RegularEnumSet.add(RegularEnumSet.java:161) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2  |3 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |-  |-   <||@
  Comment 48 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 51 12 rax|DWORD[.] = MOV [rsi|QWORD[.] + 12] size: DWORD  <||@
  Comment 54 14 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@2b470f5c encoding: base: 0 shift: 3  <||@
  Comment 58 16 CMP (x: rax|QWORD[.], y: [rcx|DWORD * 8 + 104]) size: QWORD  <||@
  Comment 66 18 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2  <||@
  Comment 72 block B1 null  <||@
  Comment 72 20 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 72 22 rax|QWORD = MOV [rsi|QWORD[.] + 24] size: QWORD  <||@
  Comment 76 24 rcx|DWORD = MOV [rdx|QWORD[.] + 12] size: DWORD  <||@
  Comment 79 26 r10|QWORD = MOVE input: long[1|0x1]  <||@
  Comment 86 30 r10|QWORD = SHL (x: r10|QWORD, ~y: rcx|DWORD) size: QWORD  <||@
  Comment 89 32 r10|QWORD = OR (x: r10|QWORD, y: rax|QWORD) size: QWORD  <||@
  Comment 92 34 MOV (x: [rsi|QWORD[.] + 24], y: r10|QWORD) size: QWORD  <||@
  Comment 96 36 CMP (x: rax|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 99 38 rax|DWORD = SETCC condition: !=  <||@
  Comment 105 42 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 114 12  <||@
  Comment 124 block B2 null  <||@
  Comment 124 44 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 124 46 MOV [r15|QWORD + 668] y: -10259 size: DWORD  <||@
  Comment 135 48 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 142 50 DEOPT info [bci:0]  <||@
  Comment 142 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 147 [rdx:0, rsi:0]at java.util.RegularEnumSet.add(RegularEnumSet.java:161) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2  |3 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |-  |-   <||@
  Comment 148 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 148 4  <||@
  Comment 154 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 154 5  <||@
  HexCodeFile>>> <|@
end_nmethod
