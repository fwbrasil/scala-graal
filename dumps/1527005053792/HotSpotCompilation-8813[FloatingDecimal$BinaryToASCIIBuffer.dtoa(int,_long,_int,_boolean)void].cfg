begin_compilation
  name " HotSpotCompilation-8813[sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)]"
  method "HotSpotCompilation-8813[sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)]"
  date 1527005172716
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B159" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v1199 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: v1199  <|@  <|@
f <@~|@floating>@ <|@
tid a1432 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1435 v1517 v1501 v1443 v1493 v1509 v1461 v1471 ?315 ?325 ?335 ?393 ?458 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i5 <|@
d <@d|@=== Debug Properties ===
index: 4
stamp: i32 [0 - 1] ⇈0000000000000001
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?6 ?1413 ?15 ?845 ?81 ?1412 ?95 ?108 ?1411 ?799 ?1410 ?701 v212 ?1409 ?315 ?1408 ?1407 ?325 ?1406 ?335 ?1405 ?341 ?347 ?368 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i4 <|@
d <@d|@=== Debug Properties ===
index: 3
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?6 i111 ?15 ?845 v56 i60 ?81 ?108 ?95 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j3 <|@
d <@d|@=== Debug Properties ===
index: 2
stamp: i64
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?6 i9 ?108 ?15 ?845 j112 ?95 j75 ?81 j560 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Lsun/misc/FloatingDecimal$BinaryToASCIIBuffer;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?6 v1575 ?1420 v1576 ?15 v1115 ?495 ?1420 v872 ?81 ?1419 ?95 ?108 ?1418 ?799 ?474 ?1417 ?701 ?228 ?236 ?732 ?845 ?690 v1585 ?300 ?1416 v1606 ?1415 ?1414 ?315 ?1413 ?1412 ?325 ?1411 ?335 ?1410 ?341 ?347 ?474 ?1409 ?368 v1113 ?1408 ?393 v1607 ?458 ?1407 ?423 ?1405 ?432 v1605 ?1406 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i2 <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?6 i98 ?15 i16 ?845 v32 v35 v56 i60 ?108 ?95 v72 i74 ?81 d569 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i31 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:444) [bci: 82]
rawvalue: 63
stableDimension: 0
stamp: i32 [63] ⇊000000000000003f ⇈000000000000003f
stampKind: i32
value: int[63|0x3f]
=== Inputs ===
=== Succesors ===
=== Usages ===
v32 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v32 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:444) [bci: 82]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2 
y: i31 
=== Succesors ===
=== Usages ===
v1199 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2 y: i31  <|@  <|@
f <@*|@fixed>@ <|@
tid v1199 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:444) [bci: 82]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v32 
=== Succesors ===
trueSuccessor: v1196 
falseSuccessor: v1198 
=== Usages ===
=== Predecessor ===
v0 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v32 #trueSuccessor: v1196 #falseSuccessor: v1198  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1196 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:444) [bci: 82]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1203 
=== Usages ===
=== Predecessor ===
v1199 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1203  <|@  <|@
f <@~|@floating>@ <|@
tid i34 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:444) [bci: 86]
rawvalue: -21
stableDimension: 0
stamp: i32 [-21] ⇊00000000ffffffeb ⇈00000000ffffffeb
stampKind: i32
value: int[-21|0xffffffffffffffeb]
=== Inputs ===
=== Succesors ===
=== Usages ===
v35 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v35 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:444) [bci: 88]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2 
y: i34 
=== Succesors ===
=== Usages ===
v1203 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2 y: i34  <|@  <|@
f <@*|@fixed>@ <|@
tid v1203 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:444) [bci: 88]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v35 
=== Succesors ===
trueSuccessor: v1202 
falseSuccessor: v1200 
=== Usages ===
=== Predecessor ===
v1196 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v35 #trueSuccessor: v1202 #falseSuccessor: v1200  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B160" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1202 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:444) [bci: 88]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1430 
=== Usages ===
=== Predecessor ===
v1203 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1430  <|@  <|@
f <@~|@floating>@ <|@
tid i1431 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -303123
stableDimension: 0
stamp: i32 [-303123] ⇊00000000fffb5fed ⇈00000000fffb5fed
stampKind: i32
value: int[-303123|0xfffffffffffb5fed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1433 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1430 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1429 
=== Predecessor ===
v1202 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B18" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1200 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:444) [bci: 88]
stamp: void
=== Inputs ===
=== Succesors ===
next: v858 
=== Usages ===
=== Predecessor ===
v1203 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v858  <|@  <|@
f <@~|@floating>@ <|@
tid v1575 <|@
d <@d|@=== Debug Properties ===
displacement: 26
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v858 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid i1128 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:439) [bci: 59]
rawvalue: 0
stableDimension: 0
stamp: i8 [0] ⇈0000000000000000
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v858 v861 i1423 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v858 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: FloatingDecimal$BinaryToASCIIBuffer.decimalDigitsRoundedUp
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:439) [bci: 59]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1575 
value: i1128 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v861 
=== Usages ===
=== Predecessor ===
v1200 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1575 value: i1128 stateAfter: - lastLocationAccess: - #next: v861  <|@  <|@
f <@~|@floating>@ <|@
tid v1576 <|@
d <@d|@=== Debug Properties ===
displacement: 25
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v861 v1425 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v861 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: FloatingDecimal$BinaryToASCIIBuffer.exactDecimalConversion
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:440) [bci: 64]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1576 
value: i1128 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v22 
=== Usages ===
=== Predecessor ===
v858 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1576 value: i1128 stateAfter: - lastLocationAccess: - #next: v22  <|@  <|@
f <@~|@floating>@ <|@
tid i8 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:426) [bci: 3]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
i800 i804 i806 ?1405 i69 v872 i666 i668 v131 i184 i189 v192 v966 i716 v212 i226 i227 v237 v247 i280 i285 i307 ?1416 ?315 ?1413 ?1413 ?325 ?1412 ?341 v342 ?347 ?347 v352 v1100 ?1408 ?1411 i367 ?368 ?368 ?1406 ?1407 i390 i391 v394 v403 i730 i390 i434 ?432 i734 v475 i802 v1109 v496 v500 i69 i69 v582 i609 i715 i226 i227 i1532 ?236 ?236 ?393 ?393 ?474 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i9 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Long.numberOfTrailingZeros(long) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:431) [bci: 45]
stamp: i32 [0 - 64] ⇈000000000000007f
=== Inputs ===
value: j3 
=== Succesors ===
=== Usages ===
i11 i524 ?15 ?845 ?81 j112 ?95 ?108 
=== Predecessor ===
- >@ <|@
instruction <@AMD64CountTrailingZeros|@org.graalvm.compiler.replacements.amd64.AMD64CountTrailingZerosNode>@ value: j3  <|@  <|@
f <@~|@floating>@ <|@
tid i10 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:434) [bci: 50]
rawvalue: 53
stableDimension: 0
stamp: i32 [53] ⇊0000000000000035 ⇈0000000000000035
stampKind: i32
value: int[53|0x35]
=== Inputs ===
=== Succesors ===
=== Usages ===
i11 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i11 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:434) [bci: 54]
stamp: i32 [-11 - 53]
=== Inputs ===
x: i10 
y: i9 
=== Succesors ===
=== Usages ===
?845 ?15 i16 i831 i45 ?81 ?799 ?95 ?108 i136 v121 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i10 y: i9  <|@  <|@
tid ?15 <|@
d <@d|@=== Debug Properties ===
bci: 67
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: false
localsSize: 33
locksSize: 0
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:440) [bci: 64]
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 443
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 i2 j3 - i4 i5 i9 i11 - - - - - - - - - - - - - - - - - - - - - - - - - 
=== Succesors ===
=== Usages ===
v1443 i1548 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2 j3 - i4 i5 i9 i11 - - - - - - - - - - - - - - - - - - - - - - - - -  <|@  <|@
f <@~|@floating>@ <|@
tid i71 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:471) [bci: 143]
rawvalue: 52
stableDimension: 0
stamp: i32 [52] ⇊0000000000000034 ⇈0000000000000034
stampKind: i32
value: int[52|0x34]
=== Inputs ===
=== Succesors ===
=== Usages ===
v72 i74 i524 j576 v586 v1545 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i46 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:448) [bci: 109]
rawvalue: 64
stableDimension: 0
stamp: i32 [64] ⇊0000000000000040 ⇈0000000000000040
stampKind: i32
value: int[64|0x40]
=== Inputs ===
=== Succesors ===
=== Usages ===
v47 v149 v153 v832 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a43 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:448) [bci: 102]
rawvalue: int[27]{0, 3, 5, 7, 10, ...}
stableDimension: 0
stamp: a!# [I
stampKind: a -
value: Object[int[27]{0, 3, 5, 7, 10, ...}]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1608 v1581 v1582 v1577 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i16 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:443) [bci: 71]
stamp: i32
=== Inputs ===
x: i11 
y: i2 
=== Succesors ===
=== Usages ===
i18 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i11 y: i2  <|@  <|@
f <@~|@floating>@ <|@
tid i17 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:443) [bci: 73]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1] ⇊00000000ffffffff
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i18 i61 i197 i125 i599 i609 i648 i651 i1534 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i18 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:443) [bci: 73]
stamp: i32
=== Inputs ===
x: i16 
y: i17 
=== Succesors ===
=== Usages ===
v19 i674 ?845 i677 v670 ?81 i678 v1608 i1609 ?108 ?95 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i16 y: i17  <|@  <|@
f <@~|@floating>@ <|@
tid i7 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:426) [bci: 0]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v19 v86 v99 v121 i142 i680 j173 j180 i184 i189 j1530 i716 j268 i280 i285 i232 i233 i295 j303 i307 i676 i327 i332 v348 i1532 i367 i730 v433 i434 i437 v1087 i489 j526 j529 i734 v643 v645 v733 i1610 i679 ?300 ?300 i715 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v19 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 2]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:443) [bci: 74]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i18 
y: i7 
=== Succesors ===
=== Usages ===
v22 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i18 y: i7  <|@  <|@
f <@*|@fixed>@ <|@
tid v22 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 2]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:443) [bci: 74]
stamp: void
trueSuccessorProbability: 0.7447171657016569
=== Inputs ===
condition: v19 
=== Succesors ===
trueSuccessor: v20 
falseSuccessor: v21 
=== Usages ===
=== Predecessor ===
v861 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v19 #trueSuccessor: v20 #falseSuccessor: v21  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B17" 
    xhandlers
    flags 
    probability 4604883035445177204
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v20 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 5]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:443) [bci: 74]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1546 
=== Usages ===
=== Predecessor ===
v22 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1546  <|@  <|@
f <@~|@floating>@ <|@
tid v1577 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a43 
index: - 
=== Succesors ===
=== Usages ===
i1546 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a43 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1546 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:448) [bci: 107]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1577 
=== Succesors ===
next: v1207 
=== Usages ===
i831 
=== Predecessor ===
v20 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1577 #next: v1207  <|@  <|@
f <@~|@floating>@ <|@
tid i831 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:448) [bci: 108]
stamp: i32
=== Inputs ===
x: i11 
y: i1546 
=== Succesors ===
=== Usages ===
v832 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i11 y: i1546  <|@  <|@
f <@~|@floating>@ <|@
tid v832 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:448) [bci: 111]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i831 
y: i46 
=== Succesors ===
=== Usages ===
v1207 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i831 y: i46  <|@  <|@
f <@*|@fixed>@ <|@
tid v1207 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:448) [bci: 111]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v832 
=== Succesors ===
trueSuccessor: v1204 
falseSuccessor: v1206 
=== Usages ===
=== Predecessor ===
i1546 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v832 #trueSuccessor: v1204 #falseSuccessor: v1206  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B16" 
    xhandlers
    flags 
    probability 4604883035445177204
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1204 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:448) [bci: 111]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1211 
=== Usages ===
=== Predecessor ===
v1207 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1211  <|@  <|@
f <@~|@floating>@ <|@
tid v72 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:471) [bci: 145]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2 
y: i71 
=== Succesors ===
=== Usages ===
v1211 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2 y: i71  <|@  <|@
f <@*|@fixed>@ <|@
tid v1211 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:471) [bci: 145]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v72 
=== Succesors ===
trueSuccessor: v1208 
falseSuccessor: v1210 
=== Usages ===
=== Predecessor ===
v1204 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v72 #trueSuccessor: v1208 #falseSuccessor: v1210  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B14" 
    xhandlers
    flags 
    probability 4604883035445177204
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1208 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:471) [bci: 145]
stamp: void
=== Inputs ===
=== Succesors ===
next: v59 
=== Usages ===
=== Predecessor ===
v1211 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v59  <|@  <|@
f <@~|@floating>@ <|@
tid v56 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:466) [bci: 122]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i4 
y: i2 
=== Succesors ===
=== Usages ===
v59 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i4 y: i2  <|@  <|@
f <@*|@fixed>@ <|@
tid v59 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:466) [bci: 122]
stamp: void
trueSuccessorProbability: 0.0020362233415496256
=== Inputs ===
condition: v56 
=== Succesors ===
trueSuccessor: v57 
falseSuccessor: v58 
=== Usages ===
=== Predecessor ===
v1208 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v56 #trueSuccessor: v57 #falseSuccessor: v58  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4564636031887714146
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v57 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:467) [bci: 125]
stamp: void
=== Inputs ===
=== Succesors ===
next: v541 
=== Usages ===
=== Predecessor ===
v59 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v541  <|@  <|@
f <@~|@floating>@ <|@
tid i60 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:467) [bci: 128]
stamp: i32
=== Inputs ===
x: i2 
y: i4 
=== Succesors ===
=== Usages ===
i61 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i2 y: i4  <|@  <|@
f <@~|@floating>@ <|@
tid i61 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:467) [bci: 130]
stamp: i32
=== Inputs ===
x: i60 
y: i17 
=== Succesors ===
=== Usages ===
v1580 v538 v544 v885 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i60 y: i17  <|@  <|@
f <@~|@floating>@ <|@
tid i537 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.insignificantDigitsForPow2(FloatingDecimal.java:852) [bci: 2]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:467) [bci: 131]
rawvalue: 2
stableDimension: 0
stamp: i32 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
v538 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v538 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.insignificantDigitsForPow2(FloatingDecimal.java:852) [bci: 2]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:467) [bci: 131]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i61 
y: i537 
=== Succesors ===
=== Usages ===
v541 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i61 y: i537  <|@  <|@
f <@*|@fixed>@ <|@
tid v541 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.insignificantDigitsForPow2(FloatingDecimal.java:852) [bci: 2]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:467) [bci: 131]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v538 
=== Succesors ===
trueSuccessor: v539 
falseSuccessor: v540 
=== Usages ===
=== Predecessor ===
v57 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v538 #trueSuccessor: v539 #falseSuccessor: v540  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B15" 
    xhandlers
    flags 
    probability 4560132432260343650
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v539 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.insignificantDigitsForPow2(FloatingDecimal.java:855) [bci: 19]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:467) [bci: 131]
stamp: void
=== Inputs ===
=== Succesors ===
next: v663 
=== Usages ===
=== Predecessor ===
v541 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v663  <|@  <|@
f <@*|@fixed>@ <|@
tid v663 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v67 
=== Predecessor ===
v539 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B13" 
    xhandlers
    flags 
    probability 4560132432260343650
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v540 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.insignificantDigitsForPow2(FloatingDecimal.java:852) [bci: 5]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:467) [bci: 131]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1547 
=== Usages ===
=== Predecessor ===
v541 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1547  <|@  <|@
f <@~|@floating>@ <|@
tid a873 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.insignificantDigitsForPow2(FloatingDecimal.java:852) [bci: 6]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:467) [bci: 131]
rawvalue: Class:sun.misc.FloatingDecimal$BinaryToASCIIBuffer
stableDimension: 0
stamp: a!# Ljava/lang/Class;
stampKind: a -
value: Object[Class:sun.misc.FloatingDecimal$BinaryToASCIIBuffer]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1578 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1578 <|@
d <@d|@=== Debug Properties ===
displacement: 104
scale: Times1
stamp: void*
=== Inputs ===
base: a873 
index: - 
=== Succesors ===
=== Usages ===
a1547 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a873 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1547 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FloatingDecimal$BinaryToASCIIBuffer.insignificantDigitsNumber
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.insignificantDigitsForPow2(FloatingDecimal.java:852) [bci: 6]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:467) [bci: 131]
nullCheck: false
stamp: n# [I
=== Inputs ===
stateBefore: - 
guard: - 
address: v1578 
=== Succesors ===
next: i1548 
=== Usages ===
a877 v1579 
=== Predecessor ===
v540 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1578 #next: i1548  <|@  <|@
f <@~|@floating>@ <|@
tid v1579 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1547 
=== Succesors ===
=== Usages ===
i1548 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1547  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1548 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.insignificantDigitsForPow2(FloatingDecimal.java:852) [bci: 9]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:467) [bci: 131]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?15 
guard: - 
address: v1579 
=== Succesors ===
next: v547 
=== Usages ===
v544 v885 
=== Predecessor ===
a1547 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?15 guard: - address: v1579 #next: v547  <|@  <|@
f <@~|@floating>@ <|@
tid v544 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.insignificantDigitsForPow2(FloatingDecimal.java:852) [bci: 10]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:467) [bci: 131]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i61 
y: i1548 
=== Succesors ===
=== Usages ===
v547 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i61 y: i1548  <|@  <|@
f <@*|@fixed>@ <|@
tid v547 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.insignificantDigitsForPow2(FloatingDecimal.java:852) [bci: 10]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:467) [bci: 131]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v544 
=== Succesors ===
trueSuccessor: v545 
falseSuccessor: v546 
=== Usages ===
=== Predecessor ===
i1548 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v544 #trueSuccessor: v545 #falseSuccessor: v546  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4555628832632973154
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v545 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.insignificantDigitsForPow2(FloatingDecimal.java:853) [bci: 13]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:467) [bci: 131]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1219 
=== Usages ===
=== Predecessor ===
v547 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1219  <|@  <|@
f <@~|@floating>@ <|@
tid v885 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.insignificantDigitsForPow2(FloatingDecimal.java:853) [bci: 17]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:467) [bci: 131]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i61 
y: i1548 
=== Succesors ===
=== Usages ===
v1219 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i61 y: i1548  <|@  <|@
f <@*|@fixed>@ <|@
tid v1219 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.insignificantDigitsForPow2(FloatingDecimal.java:853) [bci: 17]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:467) [bci: 131]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v885 
=== Succesors ===
trueSuccessor: v1216 
falseSuccessor: v1218 
=== Usages ===
=== Predecessor ===
v545 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v885 #trueSuccessor: v1216 #falseSuccessor: v1218  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B15" 
    xhandlers
    flags 
    probability 4555628832632973154
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1216 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.insignificantDigitsForPow2(FloatingDecimal.java:853) [bci: 17]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:467) [bci: 131]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1549 
=== Usages ===
i1549 
=== Predecessor ===
v1219 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1549  <|@  <|@
f <@~|@floating>@ <|@
tid a877 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.insignificantDigitsForPow2(FloatingDecimal.java:852) [bci: 6]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:467) [bci: 131]
op: Uncompress
stamp: a# [I
=== Inputs ===
value: a1547 
=== Succesors ===
=== Usages ===
v1580 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1547  <|@  <|@
f <@~|@floating>@ <|@
tid v1580 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a877 
index: i61 
=== Succesors ===
=== Usages ===
i1549 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a877 index: i61  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1549 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.insignificantDigitsForPow2(FloatingDecimal.java:853) [bci: 17]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:467) [bci: 131]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v1216 
address: v1580 
=== Succesors ===
next: v66 
=== Usages ===
i69 
=== Predecessor ===
v1216 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1216 address: v1580 #next: v66  <|@  <|@
f <@*|@fixed>@ <|@
tid v66 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:471) [bci: 142]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v67 
=== Predecessor ===
i1549 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B158" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1218 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.insignificantDigitsForPow2(FloatingDecimal.java:853) [bci: 17]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:467) [bci: 131]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1452 
=== Usages ===
=== Predecessor ===
v1219 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1452  <|@  <|@
f <@~|@floating>@ <|@
tid i1453 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -226843
stableDimension: 0
stamp: i32 [-226843] ⇊00000000fffc89e5 ⇈00000000fffc89e5
stampKind: i32
value: int[-226843|0xfffffffffffc89e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1441 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1452 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1438 
=== Predecessor ===
v1218 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B15" 
    xhandlers
    flags 
    probability 4555628832632973154
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v546 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.insignificantDigitsForPow2(FloatingDecimal.java:855) [bci: 19]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:467) [bci: 131]
stamp: void
=== Inputs ===
=== Succesors ===
next: v662 
=== Usages ===
=== Predecessor ===
v547 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v662  <|@  <|@
f <@*|@fixed>@ <|@
tid v662 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v67 
=== Predecessor ===
v546 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B15" 
    xhandlers
    flags 
    probability 4604869376833871008
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v58 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:469) [bci: 139]
stamp: void
=== Inputs ===
=== Succesors ===
next: v68 
=== Usages ===
=== Predecessor ===
v59 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v68  <|@  <|@
f <@*|@fixed>@ <|@
tid v68 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:471) [bci: 142]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v67 
=== Predecessor ===
v58 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B11" "B14" "B13" "B8" 
    successors 
    xhandlers
    flags 
    probability 4604883035445177204
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i69 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:471) [bci: 142]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v67 
values: i1549 i8 i8 i8 
=== Succesors ===
=== Usages ===
v872 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v67 values: i1549 i8 i8 i8  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v67 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:471) [bci: 142]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v66 v68 v662 v663 
=== Succesors ===
next: v78 
=== Usages ===
i69 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v66 v68 v662 v663 #next: v78  <|@  <|@
f <@~|@floating>@ <|@
tid i74 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:474) [bci: 162]
stamp: i32
=== Inputs ===
x: i71 
y: i2 
=== Succesors ===
=== Usages ===
j75 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i71 y: i2  <|@  <|@
f <@~|@floating>@ <|@
tid j75 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:474) [bci: 163]
stamp: i64
=== Inputs ===
x: j3 
y: i74 
=== Succesors ===
=== Usages ===
v872 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j3 y: i74  <|@  <|@
tid v872 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:476) [bci: 170]
returnStamp: void
signature: [Ljdk.vm.ci.meta.JavaType;@432f8ac4
stamp: void
targetMethod: HotSpotMethod<FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(int, long, int)>
=== Inputs ===
arguments: a1 i8 j75 i69 
=== Succesors ===
=== Usages ===
v78 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1 i8 j75 i69  <|@  <|@
tid ?1404 <|@
d <@d|@=== Debug Properties ===
bci: 170
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: true
localsSize: 33
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 476
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
=== Succesors ===
=== Usages ===
v78 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v78 <|@
d <@d|@=== Debug Properties ===
bci: 170
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:476) [bci: 170]
polymorphic: false
stamp: void
targetMethod: Direct#FloatingDecimal$BinaryToASCIIBuffer.developLongDigits
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v872 
stateDuring: ?1404 
=== Succesors ===
next: v80 
=== Usages ===
=== Predecessor ===
v67 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v872 stateDuring: ?1404 #next: v80  <|@  <|@
f <@*|@fixed>@ <|@
tid v80 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:477) [bci: 173]
stamp: void
=== Inputs ===
result: - 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v78 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: - memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B158" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1210 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:471) [bci: 145]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1444 
=== Usages ===
=== Predecessor ===
v1211 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1444  <|@  <|@
f <@~|@floating>@ <|@
tid i1445 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -222995
stableDimension: 0
stamp: i32 [-222995] ⇊00000000fffc98ed ⇈00000000fffc98ed
stampKind: i32
value: int[-222995|0xfffffffffffc98ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1441 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1444 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1438 
=== Predecessor ===
v1210 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B158" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1206 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:448) [bci: 111]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1439 
=== Usages ===
=== Predecessor ===
v1207 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1439  <|@  <|@
f <@~|@floating>@ <|@
tid i1440 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -222739
stableDimension: 0
stamp: i32 [-222739] ⇊00000000fffc99ed ⇈00000000fffc99ed
stampKind: i32
value: int[-222739|0xfffffffffffc99ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1441 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1439 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1438 
=== Predecessor ===
v1206 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B19" "B28" 
    xhandlers
    flags 
    probability 4598270386627586328
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v21 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 9]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:443) [bci: 74]
stamp: void
=== Inputs ===
=== Succesors ===
next: v42 
=== Usages ===
=== Predecessor ===
v22 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v42  <|@  <|@
f <@~|@floating>@ <|@
tid j590 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:827) [bci: 102]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
rawvalue: 4503599627370496
stableDimension: 0
stamp: i64 [4503599627370496] ⇊0010000000000000 ⇈0010000000000000
stampKind: i64
value: long[4503599627370496|0x10000000000000]
=== Inputs ===
=== Succesors ===
=== Usages ===
j591 j1539 j1540 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i605 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:827) [bci: 110]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
rawvalue: 1075
stableDimension: 0
stamp: i32 [1075] ⇊0000000000000433 ⇈0000000000000433
stampKind: i32
value: int[1075|0x433]
=== Inputs ===
=== Succesors ===
=== Usages ===
i606 i1543 i1544 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j559 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:820) [bci: 4]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
rawvalue: 4503599627370495
stableDimension: 0
stamp: i64 [4503599627370495] ⇊000fffffffffffff ⇈000fffffffffffff
stampKind: i64
value: long[4503599627370495|0xfffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
j560 j588 j589 j1541 j1542 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j560 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:820) [bci: 7]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: i64 [0 - 4503599627370495] ⇈000fffffffffffff
=== Inputs ===
x: j3 
y: j559 
=== Succesors ===
=== Usages ===
j561 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: j3 y: j559  <|@  <|@
f <@~|@floating>@ <|@
tid j558 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:820) [bci: 0]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
rawvalue: 4607182418800017408
stableDimension: 0
stamp: i64 [4607182418800017408] ⇊3ff0000000000000 ⇈3ff0000000000000
stampKind: i64
value: long[4607182418800017408|0x3ff0000000000000]
=== Inputs ===
=== Succesors ===
=== Usages ===
j561 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j561 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.OrNode$$Lambda$69/599890587@2745c573
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:820) [bci: 8]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: i64 [4607182418800017408 - 4611686018427387903] ⇊3ff0000000000000 ⇈3fffffffffffffff
=== Inputs ===
x: j560 
y: j558 
=== Succesors ===
=== Usages ===
d562 
=== Predecessor ===
- >@ <|@
instruction <@||@org.graalvm.compiler.nodes.calc.OrNode>@ x: j560 y: j558  <|@  <|@
f <@~|@floating>@ <|@
tid d562 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Double.longBitsToDouble(long) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:820) [bci: 9]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: f64! [4.9E-324 - 1.7976931348623157E308]
=== Inputs ===
value: j561 
=== Succesors ===
=== Usages ===
d564 
=== Predecessor ===
- >@ <|@
instruction <@Reinterpret|@org.graalvm.compiler.nodes.calc.ReinterpretNode>@ value: j561  <|@  <|@
f <@~|@floating>@ <|@
tid d563 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:821) [bci: 14]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
rawvalue: 1.5
stableDimension: 0
stamp: f64! [1.5]
stampKind: f64
value: double[1.5|0x3ff8000000000000]
=== Inputs ===
=== Succesors ===
=== Usages ===
d564 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid d564 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:821) [bci: 17]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: f64
=== Inputs ===
x: d562 
y: d563 
=== Succesors ===
=== Usages ===
d566 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: d562 y: d563  <|@  <|@
f <@~|@floating>@ <|@
tid d565 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:821) [bci: 18]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
rawvalue: 0.289529654
stableDimension: 0
stamp: f64! [0.289529654]
stampKind: f64
value: double[0.289529654|0x3fd287a762c9bd93]
=== Inputs ===
=== Succesors ===
=== Usages ===
d566 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid d566 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.MulNode$$Lambda$125/271184744@39a592fe
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:821) [bci: 21]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: f64
=== Inputs ===
x: d564 
y: d565 
=== Succesors ===
=== Usages ===
d568 
=== Predecessor ===
- >@ <|@
instruction <@*|@org.graalvm.compiler.nodes.calc.MulNode>@ x: d564 y: d565  <|@  <|@
f <@~|@floating>@ <|@
tid d567 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:821) [bci: 22]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
rawvalue: 0.176091259
stableDimension: 0
stamp: f64! [0.176091259]
stampKind: f64
value: double[0.176091259|0x3fc68a288b421b8c]
=== Inputs ===
=== Succesors ===
=== Usages ===
d568 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid d568 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:821) [bci: 25]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: f64
=== Inputs ===
x: d566 
y: d567 
=== Succesors ===
=== Usages ===
d572 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: d566 y: d567  <|@  <|@
f <@~|@floating>@ <|@
tid d569 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.FloatConvertNode$$Lambda$1/154487945@39bcec26
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:821) [bci: 27]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
op: I2D
stamp: f64! [-2.147483648E9 - 2.147483647E9]
=== Inputs ===
value: i2 
=== Succesors ===
=== Usages ===
d571 
=== Predecessor ===
- >@ <|@
instruction <@FloatConvert|@org.graalvm.compiler.nodes.calc.FloatConvertNode>@ value: i2  <|@  <|@
f <@~|@floating>@ <|@
tid d570 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:821) [bci: 28]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
rawvalue: 0.301029995663981
stableDimension: 0
stamp: f64! [0.301029995663981]
stampKind: f64
value: double[0.301029995663981|0x3fd34413509f79fb]
=== Inputs ===
=== Succesors ===
=== Usages ===
d571 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid d571 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.MulNode$$Lambda$125/271184744@39a592fe
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:821) [bci: 31]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: f64
=== Inputs ===
x: d569 
y: d570 
=== Succesors ===
=== Usages ===
d572 
=== Predecessor ===
- >@ <|@
instruction <@*|@org.graalvm.compiler.nodes.calc.MulNode>@ x: d569 y: d570  <|@  <|@
f <@~|@floating>@ <|@
tid d572 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:821) [bci: 32]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: f64
=== Inputs ===
x: d568 
y: d571 
=== Succesors ===
=== Usages ===
j573 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: d568 y: d571  <|@  <|@
f <@~|@floating>@ <|@
tid j573 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Double.doubleToRawLongBits(double) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:822) [bci: 37]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: i64
=== Inputs ===
value: d572 
=== Succesors ===
=== Usages ===
j575 v581 j589 v597 v602 j1541 j1542 
=== Predecessor ===
- >@ <|@
instruction <@Reinterpret|@org.graalvm.compiler.nodes.calc.ReinterpretNode>@ value: d572  <|@  <|@
f <@~|@floating>@ <|@
tid j580 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:824) [bci: 60]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
rawvalue: -9223372036854775808
stableDimension: 0
stamp: i64 [-9223372036854775808] ⇊8000000000000000 ⇈8000000000000000
stampKind: i64
value: long[-9223372036854775808|0x8000000000000000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v581 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v581 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:824) [bci: 66]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: void
=== Inputs ===
x: j573 
y: j580 
=== Succesors ===
=== Usages ===
v596 i609 v851 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: j573 y: j580  <|@  <|@
f <@~|@floating>@ <|@
tid j574 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:823) [bci: 44]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
rawvalue: 9218868437227405312
stableDimension: 0
stamp: i64 [9218868437227405312] ⇊7ff0000000000000 ⇈7ff0000000000000
stampKind: i64
value: long[9218868437227405312|0x7ff0000000000000]
=== Inputs ===
=== Succesors ===
=== Usages ===
j575 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j575 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:823) [bci: 47]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: i64 [0 - 9218868437227405312] ⇈7ff0000000000000
=== Inputs ===
x: j573 
y: j574 
=== Succesors ===
=== Usages ===
j576 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: j573 y: j574  <|@  <|@
f <@~|@floating>@ <|@
tid j576 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:823) [bci: 50]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: i64 [0 - 2047] ⇈00000000000007ff
=== Inputs ===
x: j575 
y: i71 
=== Succesors ===
=== Usages ===
i577 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j575 y: i71  <|@  <|@
f <@~|@floating>@ <|@
tid i577 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 64
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:823) [bci: 51]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
resultBits: 32
stamp: i32 [0 - 2047] ⇈00000000000007ff
=== Inputs ===
value: j576 
=== Succesors ===
=== Usages ===
i579 i606 i1543 i1544 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: j576  <|@  <|@
f <@~|@floating>@ <|@
tid i578 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:823) [bci: 55]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
rawvalue: -1023
stableDimension: 0
stamp: i32 [-1023] ⇊00000000fffffc01 ⇈00000000fffffc01
stampKind: i32
value: int[-1023|0xfffffffffffffc01]
=== Inputs ===
=== Succesors ===
=== Usages ===
i579 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i579 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:823) [bci: 55]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: i32 [-1023 - 1024]
=== Inputs ===
x: i577 
y: i578 
=== Succesors ===
=== Usages ===
v582 v586 j588 v1545 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i577 y: i578  <|@  <|@
f <@~|@floating>@ <|@
tid v582 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:825) [bci: 78]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i579 
y: i8 
=== Succesors ===
=== Usages ===
v585 v789 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i579 y: i8  <|@  <|@
f <@~|@floating>@ <|@
tid i38 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:448) [bci: 96]
rawvalue: 27
stableDimension: 0
stamp: i32 [27] ⇊000000000000001b ⇈000000000000001b
stampKind: i32
value: int[27|0x1b]
=== Inputs ===
=== Succesors ===
=== Usages ===
v670 v671 v917 v1188 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v670 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:448) [bci: 97]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i18 
y: i38 
=== Succesors ===
=== Usages ===
v42 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i18 y: i38  <|@  <|@
f <@*|@fixed>@ <|@
tid v42 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:448) [bci: 97]
stamp: void
trueSuccessorProbability: 0.5429471082944717
=== Inputs ===
condition: v670 
=== Succesors ===
trueSuccessor: v40 
falseSuccessor: v41 
=== Usages ===
=== Predecessor ===
v21 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v670 #trueSuccessor: v40 #falseSuccessor: v41  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B27" 
    xhandlers
    flags 
    probability 4594161794464019143
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v40 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:448) [bci: 100]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1550 
=== Usages ===
i1550 
=== Predecessor ===
v42 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1550  <|@  <|@
f <@~|@floating>@ <|@
tid v1608 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a43 
index: i18 
=== Succesors ===
=== Usages ===
i1550 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a43 index: i18  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1550 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:448) [bci: 107]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v40 
address: v1608 
=== Succesors ===
next: v1223 
=== Usages ===
i45 
=== Predecessor ===
v40 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v40 address: v1608 #next: v1223  <|@  <|@
f <@~|@floating>@ <|@
tid i45 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:448) [bci: 108]
stamp: i32
=== Inputs ===
x: i11 
y: i1550 
=== Succesors ===
=== Usages ===
v47 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i11 y: i1550  <|@  <|@
f <@~|@floating>@ <|@
tid v47 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:448) [bci: 111]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i45 
y: i46 
=== Succesors ===
=== Usages ===
v1223 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i45 y: i46  <|@  <|@
f <@*|@fixed>@ <|@
tid v1223 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:448) [bci: 111]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v47 
=== Succesors ===
trueSuccessor: v1220 
falseSuccessor: v1222 
=== Usages ===
=== Predecessor ===
i1550 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v47 #trueSuccessor: v1220 #falseSuccessor: v1222  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4594161794464019143
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1220 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:448) [bci: 111]
stamp: void
=== Inputs ===
=== Succesors ===
next: v585 
=== Usages ===
=== Predecessor ===
v1223 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v585  <|@  <|@
f <@*|@fixed>@ <|@
tid v585 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:825) [bci: 78]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: void
trueSuccessorProbability: 0.8090044605656586
=== Inputs ===
condition: v582 
=== Succesors ===
trueSuccessor: v583 
falseSuccessor: v584 
=== Usages ===
=== Predecessor ===
v1220 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v582 #trueSuccessor: v583 #falseSuccessor: v584  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B30" 
    xhandlers
    flags 
    probability 4592744391825976755
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v583 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:829) [bci: 147]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: void
=== Inputs ===
=== Succesors ===
next: v771 
=== Usages ===
=== Predecessor ===
v585 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v771  <|@  <|@
f <@*|@fixed>@ <|@
tid v771 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v770 
=== Predecessor ===
v583 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" "B26" 
    xhandlers
    flags 
    probability 4583287530145046380
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v584 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:825) [bci: 81]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1227 
=== Usages ===
=== Predecessor ===
v585 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1227  <|@  <|@
f <@~|@floating>@ <|@
tid v1545 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:825) [bci: 85]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i579 
y: i71 
=== Succesors ===
=== Usages ===
v1227 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i579 y: i71  <|@  <|@
f <@*|@fixed>@ <|@
tid v1227 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:825) [bci: 85]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1545 
=== Succesors ===
trueSuccessor: v1224 
falseSuccessor: v1226 
=== Usages ===
=== Predecessor ===
v584 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1545 #trueSuccessor: v1224 #falseSuccessor: v1226  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4583287530145046380
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1224 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:825) [bci: 85]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: void
=== Inputs ===
=== Succesors ===
next: v851 
=== Usages ===
=== Predecessor ===
v1227 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v851  <|@  <|@
f <@*|@fixed>@ <|@
tid v851 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:828) [bci: 117]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: void
trueSuccessorProbability: 0.007057615809059412
=== Inputs ===
condition: v581 
=== Succesors ===
trueSuccessor: v849 
falseSuccessor: v850 
=== Usages ===
=== Predecessor ===
v1224 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v581 #trueSuccessor: v849 #falseSuccessor: v850  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B40" 
    xhandlers
    flags 
    probability 4551025052825482075
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v849 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:828) [bci: 144]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: void
=== Inputs ===
=== Succesors ===
next: v852 
=== Usages ===
=== Predecessor ===
v851 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v852  <|@  <|@
f <@~|@floating>@ <|@
tid j1542 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:827) [bci: 101]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: i64 [0 - 4503599627370495] ⇈000fffffffffffff
=== Inputs ===
x: j573 
y: j559 
=== Succesors ===
=== Usages ===
j1540 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: j573 y: j559  <|@  <|@
f <@~|@floating>@ <|@
tid j1540 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.OrNode$$Lambda$69/599890587@2745c573
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:827) [bci: 105]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: i64 [4503599627370496 - 9007199254740991] ⇊0010000000000000 ⇈001fffffffffffff
=== Inputs ===
x: j1542 
y: j590 
=== Succesors ===
=== Usages ===
j1538 
=== Predecessor ===
- >@ <|@
instruction <@||@org.graalvm.compiler.nodes.calc.OrNode>@ x: j1542 y: j590  <|@  <|@
f <@~|@floating>@ <|@
tid i1544 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:827) [bci: 110]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: i32 [-972 - 1075]
=== Inputs ===
x: i605 
y: i577 
=== Succesors ===
=== Usages ===
j1538 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i605 y: i577  <|@  <|@
f <@~|@floating>@ <|@
tid j1538 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:827) [bci: 111]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: i64 [0 - 9007199254740991] ⇈001fffffffffffff
=== Inputs ===
x: j1540 
y: i1544 
=== Succesors ===
=== Usages ===
i1536 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j1540 y: i1544  <|@  <|@
f <@~|@floating>@ <|@
tid i1536 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 64
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:827) [bci: 112]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
resultBits: 32
stamp: i32
=== Inputs ===
value: j1538 
=== Succesors ===
=== Usages ===
i612 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: j1538  <|@  <|@
f <@*|@fixed>@ <|@
tid v852 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v610 
=== Predecessor ===
v849 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B37" 
    xhandlers
    flags 
    probability 4583233678357478789
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v850 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:828) [bci: 120]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: void
=== Inputs ===
=== Succesors ===
next: v846 
=== Usages ===
=== Predecessor ===
v851 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v846  <|@  <|@
f <@*|@fixed>@ <|@
tid v846 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v843 
=== Predecessor ===
v850 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B158" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1226 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:825) [bci: 85]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1450 
=== Usages ===
=== Predecessor ===
v1227 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1450  <|@  <|@
f <@~|@floating>@ <|@
tid i1451 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -287763
stableDimension: 0
stamp: i32 [-287763] ⇊00000000fffb9bed ⇈00000000fffb9bed
stampKind: i32
value: int[-287763|0xfffffffffffb9bed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1441 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1450 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1438 
=== Predecessor ===
v1226 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B158" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1222 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:448) [bci: 111]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1448 
=== Usages ===
=== Predecessor ===
v1223 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1448  <|@  <|@
f <@~|@floating>@ <|@
tid i1449 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -287507
stableDimension: 0
stamp: i32 [-287507] ⇊00000000fffb9ced ⇈00000000fffb9ced
stampKind: i32
value: int[-287507|0xfffffffffffb9ced]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1441 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1448 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1438 
=== Predecessor ===
v1222 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B29" "B33" 
    xhandlers
    flags 
    probability 4593071939154919121
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v41 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 174]
stamp: void
=== Inputs ===
=== Succesors ===
next: v789 
=== Usages ===
=== Predecessor ===
v42 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v789  <|@  <|@
f <@*|@fixed>@ <|@
tid v789 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:825) [bci: 78]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: void
trueSuccessorProbability: 0.8090044605656586
=== Inputs ===
condition: v582 
=== Succesors ===
trueSuccessor: v787 
falseSuccessor: v788 
=== Usages ===
=== Predecessor ===
v41 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v582 #trueSuccessor: v787 #falseSuccessor: v788  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B30" 
    xhandlers
    flags 
    probability 4591466140625282328
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v787 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:829) [bci: 147]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: void
=== Inputs ===
=== Succesors ===
next: v772 
=== Usages ===
=== Predecessor ===
v789 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v772  <|@  <|@
f <@*|@fixed>@ <|@
tid v772 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v770 
=== Predecessor ===
v787 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B21" "B29" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4596608865853000038
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v770 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v771 v772 
=== Succesors ===
next: v1231 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v771 v772 #next: v1231  <|@  <|@
f <@~|@floating>@ <|@
tid j601 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:830) [bci: 154]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
rawvalue: 9223372036854775807
stableDimension: 0
stamp: i64 [9223372036854775807] ⇊7fffffffffffffff ⇈7fffffffffffffff
stampKind: i64
value: long[9223372036854775807|0x7fffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v602 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v602 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:830) [bci: 160]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: void
=== Inputs ===
x: j573 
y: j601 
=== Succesors ===
=== Usages ===
v1231 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: j573 y: j601  <|@  <|@
f <@*|@fixed>@ <|@
tid v1231 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:830) [bci: 160]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v602 
=== Succesors ===
trueSuccessor: v1230 
falseSuccessor: v1228 
=== Usages ===
=== Predecessor ===
v770 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v602 #trueSuccessor: v1230 #falseSuccessor: v1228  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1230 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:830) [bci: 160]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1229 
=== Usages ===
=== Predecessor ===
v1231 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1229  <|@  <|@
tid ?81 <|@
d <@d|@=== Debug Properties ===
bci: 174
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: false
localsSize: 33
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 515
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 i2 j3 - i4 i5 i9 i11 i18 - - - - - - - - - - - - - - - - - - - - - - - - 
=== Succesors ===
=== Usages ===
v1229 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2 j3 - i4 i5 i9 i11 i18 - - - - - - - - - - - - - - - - - - - - - - - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v1229 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 1126
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:830) [bci: 160]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
reason: UnreachedCode
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?81 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1230 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?81  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B40" 
    xhandlers
    flags 
    probability 4596608865853000038
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1228 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:830) [bci: 160]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: void
=== Inputs ===
=== Succesors ===
next: v611 
=== Usages ===
=== Predecessor ===
v1231 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v611  <|@  <|@
f <@~|@floating>@ <|@
tid i609 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:830) [bci: 169]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: i32 [-1 - 0]
=== Inputs ===
condition: v581 
trueValue: i8 
falseValue: i17 
=== Succesors ===
=== Usages ===
i612 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v581 trueValue: i8 falseValue: i17  <|@  <|@
f <@*|@fixed>@ <|@
tid v611 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v610 
=== Predecessor ===
v1228 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B34" "B157" 
    xhandlers
    flags 
    probability 4582080415526971107
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v788 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:825) [bci: 81]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1235 
=== Usages ===
=== Predecessor ===
v789 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1235  <|@  <|@
f <@~|@floating>@ <|@
tid v586 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:825) [bci: 85]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i579 
y: i71 
=== Succesors ===
=== Usages ===
v1235 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i579 y: i71  <|@  <|@
f <@*|@fixed>@ <|@
tid v1235 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:825) [bci: 85]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v586 
=== Succesors ===
trueSuccessor: v1232 
falseSuccessor: v1234 
=== Usages ===
=== Predecessor ===
v788 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v586 #trueSuccessor: v1232 #falseSuccessor: v1234  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4582080415526971107
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1232 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:825) [bci: 85]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: void
=== Inputs ===
=== Succesors ===
next: v596 
=== Usages ===
=== Predecessor ===
v1235 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v596  <|@  <|@
f <@*|@fixed>@ <|@
tid v596 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:828) [bci: 117]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: void
trueSuccessorProbability: 0.007057615809059412
=== Inputs ===
condition: v581 
=== Succesors ===
trueSuccessor: v594 
falseSuccessor: v595 
=== Usages ===
=== Predecessor ===
v1232 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v581 #trueSuccessor: v594 #falseSuccessor: v595  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B40" 
    xhandlers
    flags 
    probability 4549934575870362106
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v594 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:828) [bci: 144]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: void
=== Inputs ===
=== Succesors ===
next: v614 
=== Usages ===
=== Predecessor ===
v596 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v614  <|@  <|@
f <@~|@floating>@ <|@
tid j1541 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:827) [bci: 101]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: i64 [0 - 4503599627370495] ⇈000fffffffffffff
=== Inputs ===
x: j573 
y: j559 
=== Succesors ===
=== Usages ===
j1539 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: j573 y: j559  <|@  <|@
f <@~|@floating>@ <|@
tid j1539 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.OrNode$$Lambda$69/599890587@2745c573
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:827) [bci: 105]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: i64 [4503599627370496 - 9007199254740991] ⇊0010000000000000 ⇈001fffffffffffff
=== Inputs ===
x: j1541 
y: j590 
=== Succesors ===
=== Usages ===
j1537 
=== Predecessor ===
- >@ <|@
instruction <@||@org.graalvm.compiler.nodes.calc.OrNode>@ x: j1541 y: j590  <|@  <|@
f <@~|@floating>@ <|@
tid i1543 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:827) [bci: 110]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: i32 [-972 - 1075]
=== Inputs ===
x: i605 
y: i577 
=== Succesors ===
=== Usages ===
j1537 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i605 y: i577  <|@  <|@
f <@~|@floating>@ <|@
tid j1537 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:827) [bci: 111]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: i64 [0 - 9007199254740991] ⇈001fffffffffffff
=== Inputs ===
x: j1539 
y: i1543 
=== Succesors ===
=== Usages ===
i1535 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j1539 y: i1543  <|@  <|@
f <@~|@floating>@ <|@
tid i1535 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 64
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:827) [bci: 112]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
resultBits: 32
stamp: i32
=== Inputs ===
value: j1537 
=== Succesors ===
=== Usages ===
i612 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: j1537  <|@  <|@
f <@*|@fixed>@ <|@
tid v614 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v610 
=== Predecessor ===
v594 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    probability 4582035083090615391
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v595 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:828) [bci: 120]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: void
=== Inputs ===
=== Succesors ===
next: v844 
=== Usages ===
=== Predecessor ===
v596 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v844  <|@  <|@
f <@*|@fixed>@ <|@
tid v844 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v843 
=== Predecessor ===
v595 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" "B25" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4587137980351417586
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v843 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v844 v846 
=== Succesors ===
next: v1239 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v844 v846 #next: v1239  <|@  <|@
f <@~|@floating>@ <|@
tid j588 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:826) [bci: 93]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: i64 [0 - 4503599627370495] ⇈000fffffffffffff
=== Inputs ===
x: j559 
y: i579 
=== Succesors ===
=== Usages ===
v597 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j559 y: i579  <|@  <|@
f <@~|@floating>@ <|@
tid v597 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:828) [bci: 127]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: void
=== Inputs ===
x: j573 
y: j588 
=== Succesors ===
=== Usages ===
v1239 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: j573 y: j588  <|@  <|@
f <@*|@fixed>@ <|@
tid v1239 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:828) [bci: 127]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v597 
=== Succesors ===
trueSuccessor: v1238 
falseSuccessor: v1236 
=== Usages ===
=== Predecessor ===
v843 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v597 #trueSuccessor: v1238 #falseSuccessor: v1236  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1238 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:828) [bci: 127]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1237 
=== Usages ===
=== Predecessor ===
v1239 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1237  <|@  <|@
tid ?845 <|@
d <@d|@=== Debug Properties ===
bci: 174
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: false
localsSize: 33
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 515
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 i2 j3 - i4 i5 i9 i11 i18 - - - - - - - - - - - - - - - - - - - - - - - - 
=== Succesors ===
=== Usages ===
v1237 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2 j3 - i4 i5 i9 i11 i18 - - - - - - - - - - - - - - - - - - - - - - - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v1237 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 1127
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:828) [bci: 127]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
reason: UnreachedCode
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?845 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1238 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?845  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" 
    xhandlers
    flags 
    probability 4587137980351417586
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1236 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:828) [bci: 127]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: void
=== Inputs ===
=== Succesors ===
next: v613 
=== Usages ===
=== Predecessor ===
v1239 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v613  <|@  <|@
f <@~|@floating>@ <|@
tid j589 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:827) [bci: 101]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: i64 [0 - 4503599627370495] ⇈000fffffffffffff
=== Inputs ===
x: j573 
y: j559 
=== Succesors ===
=== Usages ===
j591 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: j573 y: j559  <|@  <|@
f <@~|@floating>@ <|@
tid j591 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.OrNode$$Lambda$69/599890587@2745c573
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:827) [bci: 105]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: i64 [4503599627370496 - 9007199254740991] ⇊0010000000000000 ⇈001fffffffffffff
=== Inputs ===
x: j589 
y: j590 
=== Succesors ===
=== Usages ===
j592 
=== Predecessor ===
- >@ <|@
instruction <@||@org.graalvm.compiler.nodes.calc.OrNode>@ x: j589 y: j590  <|@  <|@
f <@~|@floating>@ <|@
tid i606 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:827) [bci: 110]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: i32 [-972 - 1075]
=== Inputs ===
x: i605 
y: i577 
=== Succesors ===
=== Usages ===
j592 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i605 y: i577  <|@  <|@
f <@~|@floating>@ <|@
tid j592 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:827) [bci: 111]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: i64 [0 - 9007199254740991] ⇈001fffffffffffff
=== Inputs ===
x: j591 
y: i606 
=== Succesors ===
=== Usages ===
i593 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j591 y: i606  <|@  <|@
f <@~|@floating>@ <|@
tid i593 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 64
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:827) [bci: 112]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
resultBits: 32
stamp: i32
=== Inputs ===
value: j592 
=== Succesors ===
=== Usages ===
i599 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: j592  <|@  <|@
f <@~|@floating>@ <|@
tid i599 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:828) [bci: 140]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: i32
=== Inputs ===
x: i17 
y: i593 
=== Succesors ===
=== Usages ===
i612 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i17 y: i593  <|@  <|@
f <@*|@fixed>@ <|@
tid v613 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v610 
=== Predecessor ===
v1236 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B32" "B39" "B35" "B24" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4598270386627586327
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i612 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v610 
values: i609 i599 i1535 i1536 
=== Succesors ===
=== Usages ===
?1413 i85 ?95 v99 i679 ?108 ?1412 ?799 i197 ?1411 i704 ?1410 ?315 ?1409 ?1408 ?325 ?1407 ?335 ?1406 ?341 ?347 ?1405 i366 i705 i1534 i668 i677 i1609 i1610 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v610 values: i609 i599 i1535 i1536  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v610 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v611 v613 v614 v852 
=== Succesors ===
next: v89 
=== Usages ===
i612 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v611 v613 v614 v852 #next: v89  <|@  <|@
f <@~|@floating>@ <|@
tid i85 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NegateNode$$Lambda$180/1857180762@4b0ec103
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:520) [bci: 184]
stamp: i32
=== Inputs ===
value: i612 
=== Succesors ===
=== Usages ===
v86 i666 
=== Predecessor ===
- >@ <|@
instruction <@Negate|@org.graalvm.compiler.nodes.calc.NegateNode>@ value: i612  <|@  <|@
f <@~|@floating>@ <|@
tid v86 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 2]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:520) [bci: 185]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i85 
y: i7 
=== Succesors ===
=== Usages ===
v89 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i85 y: i7  <|@  <|@
f <@*|@fixed>@ <|@
tid v89 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 2]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:520) [bci: 185]
stamp: void
trueSuccessorProbability: 0.7447175992468633
=== Inputs ===
condition: v86 
=== Succesors ===
trueSuccessor: v87 
falseSuccessor: v88 
=== Usages ===
=== Predecessor ===
v610 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v86 #trueSuccessor: v87 #falseSuccessor: v88  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" 
    xhandlers
    flags 
    probability 4596017585297594603
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v87 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 5]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:520) [bci: 185]
stamp: void
=== Inputs ===
=== Succesors ===
next: v91 
=== Usages ===
=== Predecessor ===
v89 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v91  <|@  <|@
f <@*|@fixed>@ <|@
tid v91 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 10]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:520) [bci: 185]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v92 
=== Predecessor ===
v87 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" 
    xhandlers
    flags 
    probability 4589360357487768198
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v88 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 9]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:520) [bci: 185]
stamp: void
=== Inputs ===
=== Succesors ===
next: v93 
=== Usages ===
=== Predecessor ===
v89 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v93  <|@  <|@
f <@~|@floating>@ <|@
tid i1610 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:715) [bci: 1111]
stamp: i32
=== Inputs ===
x: i7 
y: i612 
=== Succesors ===
=== Usages ===
i676 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i7 y: i612  <|@  <|@
f <@~|@floating>@ <|@
tid i1609 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:521) [bci: 194]
stamp: i32
=== Inputs ===
x: i18 
y: i612 
=== Succesors ===
=== Usages ===
i674 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i18 y: i612  <|@  <|@
f <@*|@fixed>@ <|@
tid v93 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 10]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:520) [bci: 185]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v92 
=== Predecessor ===
v88 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" "B42" 
    successors "B44" "B156" 
    xhandlers
    flags 
    probability 4598270386627586327
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i666 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 10]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:520) [bci: 185]
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
valueDescription: i32
=== Inputs ===
merge: v92 
values: i8 i85 
=== Succesors ===
=== Usages ===
?96 ?325 ?108 ?1407 ?1408 ?799 ?799 v671 v1583 v982 ?1405 ?1406 ?1407 ?315 ?315 ?1405 ?1406 v1581 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v92 values: i8 i85  <|@  <|@
f <@~|@floating>@ <|@
tid i674 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v92 
values: i18 i1609 
=== Succesors ===
=== Usages ===
i98 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v92 values: i18 i1609  <|@  <|@
f <@~|@floating>@ <|@
tid i676 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v92 
values: i7 i1610 
=== Succesors ===
=== Usages ===
v983 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v92 values: i7 i1610  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v92 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 10]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:520) [bci: 185]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v91 v93 
=== Succesors ===
next: v1243 
=== Usages ===
i666 i674 i676 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v91 v93 #next: v1243  <|@  <|@
f <@~|@floating>@ <|@
tid v671 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:591) [bci: 314]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i666 
y: i38 
=== Succesors ===
=== Usages ===
v1243 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i666 y: i38  <|@  <|@
f <@*|@fixed>@ <|@
tid v1243 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:591) [bci: 314]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v671 
=== Succesors ===
trueSuccessor: v1240 
falseSuccessor: v1242 
=== Usages ===
=== Predecessor ===
v92 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v671 #trueSuccessor: v1240 #falseSuccessor: v1242  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4598270386627586327
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1240 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:591) [bci: 314]
stamp: void
=== Inputs ===
=== Succesors ===
next: v102 
=== Usages ===
j1553 i1551 
=== Predecessor ===
v1243 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v102  <|@  <|@
f <@~|@floating>@ <|@
tid v99 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 2]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:523) [bci: 202]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i612 
y: i7 
=== Succesors ===
=== Usages ===
v102 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i612 y: i7  <|@  <|@
f <@*|@fixed>@ <|@
tid v102 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 2]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:523) [bci: 202]
stamp: void
trueSuccessorProbability: 0.7447175992468633
=== Inputs ===
condition: v99 
=== Succesors ===
trueSuccessor: v100 
falseSuccessor: v101 
=== Usages ===
=== Predecessor ===
v1240 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v99 #trueSuccessor: v100 #falseSuccessor: v101  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4596017585297594603
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v100 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 5]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:523) [bci: 202]
stamp: void
=== Inputs ===
=== Succesors ===
next: v104 
=== Usages ===
=== Predecessor ===
v102 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v104  <|@  <|@
f <@*|@fixed>@ <|@
tid v104 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 10]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:523) [bci: 202]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v105 
=== Predecessor ===
v100 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4589360357487768198
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v101 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 9]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:523) [bci: 202]
stamp: void
=== Inputs ===
=== Succesors ===
next: v106 
=== Usages ===
=== Predecessor ===
v102 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v106  <|@  <|@
f <@~|@floating>@ <|@
tid i677 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:524) [bci: 211]
stamp: i32
=== Inputs ===
x: i18 
y: i612 
=== Succesors ===
=== Usages ===
i678 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i18 y: i612  <|@  <|@
f <@~|@floating>@ <|@
tid i679 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:594) [bci: 340]
stamp: i32
=== Inputs ===
x: i612 
y: i7 
=== Succesors ===
=== Usages ===
i680 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i612 y: i7  <|@  <|@
f <@*|@fixed>@ <|@
tid v106 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 10]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:523) [bci: 202]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v105 
=== Predecessor ===
v101 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" "B46" 
    successors "B48" "B155" 
    xhandlers
    flags 
    probability 4598270386627586327
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i668 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 10]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:523) [bci: 202]
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
valueDescription: i32
=== Inputs ===
merge: v105 
values: i8 i612 
=== Succesors ===
=== Usages ===
?109 ?1405 ?1409 ?799 ?325 v1584 ?1408 v976 ?315 ?1407 ?1406 v917 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v105 values: i8 i612  <|@  <|@
f <@~|@floating>@ <|@
tid i678 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v105 
values: i18 i677 
=== Succesors ===
=== Usages ===
i120 i816 i118 v615 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v105 values: i18 i677  <|@  <|@
f <@~|@floating>@ <|@
tid i680 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v105 
values: i7 i679 
=== Succesors ===
=== Usages ===
v1188 v1582 v984 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v105 values: i7 i679  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v105 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 10]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:523) [bci: 202]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v104 v106 
=== Succesors ===
next: v1247 
=== Usages ===
i668 i678 i680 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v104 v106 #next: v1247  <|@  <|@
f <@~|@floating>@ <|@
tid v1188 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:594) [bci: 355]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i680 
y: i38 
=== Succesors ===
=== Usages ===
v1247 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i680 y: i38  <|@  <|@
f <@~|@floating>@ <|@
tid i98 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:521) [bci: 196]
stamp: i32
=== Inputs ===
x: i2 
y: i674 
=== Succesors ===
=== Usages ===
?108 i111 i114 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i2 y: i674  <|@  <|@
f <@*|@fixed>@ <|@
tid v1247 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:594) [bci: 345]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1188 
=== Succesors ===
trueSuccessor: v1244 
falseSuccessor: v1246 
=== Usages ===
=== Predecessor ===
v105 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1188 #trueSuccessor: v1244 #falseSuccessor: v1246  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B49" "B52" 
    xhandlers
    flags 
    probability 4598270386627586327
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1244 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:594) [bci: 345]
stamp: void
=== Inputs ===
=== Succesors ===
next: v618 
=== Usages ===
i1552 
=== Predecessor ===
v1247 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v618  <|@  <|@
f <@~|@floating>@ <|@
tid i524 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:538) [bci: 235]
stamp: i32 [-12 - 52]
=== Inputs ===
x: i71 
y: i9 
=== Succesors ===
=== Usages ===
i114 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i71 y: i9  <|@  <|@
f <@~|@floating>@ <|@
tid i114 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:538) [bci: 236]
stamp: i32
=== Inputs ===
x: i98 
y: i524 
=== Succesors ===
=== Usages ===
i817 i816 i118 v615 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i98 y: i524  <|@  <|@
f <@~|@floating>@ <|@
tid v615 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Math.min(Math.java:1336) [bci: 2]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:539) [bci: 243]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i678 
y: i114 
=== Succesors ===
=== Usages ===
v618 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i678 y: i114  <|@  <|@
f <@~|@floating>@ <|@
tid i111 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:527) [bci: 222]
stamp: i32
=== Inputs ===
x: i98 
y: i4 
=== Succesors ===
=== Usages ===
i817 i120 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i98 y: i4  <|@  <|@
f <@~|@floating>@ <|@
tid v121 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:550) [bci: 272]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i11 
y: i7 
=== Succesors ===
=== Usages ===
v124 v813 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i11 y: i7  <|@  <|@
f <@*|@fixed>@ <|@
tid v618 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.min(Math.java:1336) [bci: 2]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:539) [bci: 243]
stamp: void
trueSuccessorProbability: 0.44790294112836976
=== Inputs ===
condition: v615 
=== Succesors ===
trueSuccessor: v616 
falseSuccessor: v617 
=== Usages ===
=== Predecessor ===
v1244 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v615 #trueSuccessor: v616 #falseSuccessor: v617  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4592903625202481288
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v616 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.min(Math.java:1336) [bci: 9]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:539) [bci: 243]
stamp: void
=== Inputs ===
=== Succesors ===
next: v124 
=== Usages ===
=== Predecessor ===
v618 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v124  <|@  <|@
f <@~|@floating>@ <|@
tid i118 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:540) [bci: 252]
stamp: i32
=== Inputs ===
x: i114 
y: i678 
=== Succesors ===
=== Usages ===
i800 i802 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i114 y: i678  <|@  <|@
f <@~|@floating>@ <|@
tid i120 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:542) [bci: 266]
stamp: i32
=== Inputs ===
x: i111 
y: i678 
=== Succesors ===
=== Usages ===
i808 i129 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i111 y: i678  <|@  <|@
f <@*|@fixed>@ <|@
tid v124 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:550) [bci: 272]
stamp: void
trueSuccessorProbability: 0.3803485753451483
=== Inputs ===
condition: v121 
=== Succesors ===
trueSuccessor: v122 
falseSuccessor: v123 
=== Usages ===
=== Predecessor ===
v616 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v121 #trueSuccessor: v122 #falseSuccessor: v123  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B54" 
    xhandlers
    flags 
    probability 4586428360452806945
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v122 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:551) [bci: 275]
stamp: void
=== Inputs ===
=== Succesors ===
next: v791 
=== Usages ===
=== Predecessor ===
v124 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v791  <|@  <|@
f <@*|@fixed>@ <|@
tid v791 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v790 
=== Predecessor ===
v122 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B56" 
    xhandlers
    flags 
    probability 4589769855493975031
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v123 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:554) [bci: 278]
stamp: void
=== Inputs ===
=== Succesors ===
next: v126 
=== Usages ===
=== Predecessor ===
v124 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v126  <|@  <|@
f <@*|@fixed>@ <|@
tid v126 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:554) [bci: 278]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v127 
=== Predecessor ===
v123 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B53" "B55" 
    xhandlers
    flags 
    probability 4594245951440238058
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v617 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.min(Math.java:1336) [bci: 5]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:539) [bci: 243]
stamp: void
=== Inputs ===
=== Succesors ===
next: v813 
=== Usages ===
=== Predecessor ===
v618 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v813  <|@  <|@
f <@~|@floating>@ <|@
tid i816 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:541) [bci: 259]
stamp: i32
=== Inputs ===
x: i678 
y: i114 
=== Succesors ===
=== Usages ===
i804 i806 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i678 y: i114  <|@  <|@
f <@~|@floating>@ <|@
tid i817 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:542) [bci: 266]
stamp: i32
=== Inputs ===
x: i111 
y: i114 
=== Succesors ===
=== Usages ===
i808 i129 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i111 y: i114  <|@  <|@
f <@*|@fixed>@ <|@
tid v813 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:550) [bci: 272]
stamp: void
trueSuccessorProbability: 0.3803485753451483
=== Inputs ===
condition: v121 
=== Succesors ===
trueSuccessor: v811 
falseSuccessor: v812 
=== Usages ===
=== Predecessor ===
v617 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v121 #trueSuccessor: v811 #falseSuccessor: v812  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B54" 
    xhandlers
    flags 
    probability 4587886356549755024
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v811 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:551) [bci: 275]
stamp: void
=== Inputs ===
=== Succesors ===
next: v792 
=== Usages ===
=== Predecessor ===
v813 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v792  <|@  <|@
f <@*|@fixed>@ <|@
tid v792 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v790 
=== Predecessor ===
v811 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B50" "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4591660958128651480
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i808 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v790 
values: i120 i817 
=== Succesors ===
=== Usages ===
i125 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v790 values: i120 i817  <|@  <|@
f <@~|@floating>@ <|@
tid i802 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v790 
values: i118 i8 
=== Succesors ===
=== Usages ===
i800 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v790 values: i118 i8  <|@  <|@
f <@~|@floating>@ <|@
tid i806 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v790 
values: i8 i816 
=== Succesors ===
=== Usages ===
i804 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v790 values: i8 i816  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v790 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v791 v792 
=== Succesors ===
next: v128 
=== Usages ===
i808 i802 i806 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v791 v792 #next: v128  <|@  <|@
f <@~|@floating>@ <|@
tid i125 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:551) [bci: 275]
stamp: i32
=== Inputs ===
x: i808 
y: i17 
=== Succesors ===
=== Usages ===
i129 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i808 y: i17  <|@  <|@
f <@*|@fixed>@ <|@
tid v128 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:554) [bci: 278]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v127 
=== Predecessor ===
v790 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B56" 
    xhandlers
    flags 
    probability 4590957515205589900
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v812 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:554) [bci: 278]
stamp: void
=== Inputs ===
=== Succesors ===
next: v818 
=== Usages ===
=== Predecessor ===
v813 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v818  <|@  <|@
f <@*|@fixed>@ <|@
tid v818 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v127 
=== Predecessor ===
v812 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B51" "B54" "B55" 
    successors "B57" "B153" 
    xhandlers
    flags 
    probability 4598270386627586327
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i129 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:554) [bci: 278]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v127 
values: i120 i125 i817 
=== Succesors ===
=== Usages ===
?799 v131 i133 i134 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v127 values: i120 i125 i817  <|@  <|@
f <@~|@floating>@ <|@
tid i800 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v127 
values: i118 i802 i8 
=== Succesors ===
=== Usages ===
i133 ?799 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v127 values: i118 i802 i8  <|@  <|@
f <@~|@floating>@ <|@
tid i804 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v127 
values: i8 i806 i816 
=== Succesors ===
=== Usages ===
i134 ?799 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v127 values: i8 i806 i816  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v127 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:554) [bci: 278]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v126 v128 v818 
=== Succesors ===
next: v1251 
=== Usages ===
i129 i800 i804 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v126 v128 v818 #next: v1251  <|@  <|@
f <@~|@floating>@ <|@
tid j112 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:537) [bci: 228]
stamp: i64
=== Inputs ===
x: j3 
y: i9 
=== Succesors ===
=== Usages ===
?1407 ?799 j165 ?1406 ?315 ?1405 v982 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j3 y: i9  <|@  <|@
tid ?799 <|@
d <@d|@=== Debug Properties ===
bci: 278
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: false
localsSize: 33
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 554
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - j112 - - i5 - i11 - i612 i800 i666 i804 i668 i129 i666 - - - - - - - - - - - - - - - - - 
=== Succesors ===
=== Usages ===
v1517 j177 j175 i1556 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - j112 - - i5 - i11 - i612 i800 i666 i804 i668 i129 i666 - - - - - - - - - - - - - - - - -  <|@  <|@
f <@~|@floating>@ <|@
tid v131 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:554) [bci: 280]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i129 
y: i8 
=== Succesors ===
=== Usages ===
v1251 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i129 y: i8  <|@  <|@
f <@*|@fixed>@ <|@
tid v1251 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:554) [bci: 280]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v131 
=== Succesors ===
trueSuccessor: v1248 
falseSuccessor: v1250 
=== Usages ===
=== Predecessor ===
v127 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v131 #trueSuccessor: v1248 #falseSuccessor: v1250  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B58" "B93" 
    xhandlers
    flags 
    probability 4598270386627586327
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1248 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:554) [bci: 280]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1551 
=== Usages ===
=== Predecessor ===
v1251 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1551  <|@  <|@
f <@~|@floating>@ <|@
tid v1581 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a43 
index: i666 
=== Succesors ===
=== Usages ===
i1551 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a43 index: i666  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1551 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:591) [bci: 322]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v1240 
address: v1581 
=== Succesors ===
next: v152 
=== Usages ===
i141 
=== Predecessor ===
v1248 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1240 address: v1581 #next: v152  <|@  <|@
f <@~|@floating>@ <|@
tid i133 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:558) [bci: 287]
stamp: i32
=== Inputs ===
x: i800 
y: i129 
=== Succesors ===
=== Usages ===
i136 j166 ?1407 ?315 ?1406 ?1405 i322 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i800 y: i129  <|@  <|@
f <@~|@floating>@ <|@
tid i136 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:591) [bci: 307]
stamp: i32
=== Inputs ===
x: i11 
y: i133 
=== Succesors ===
=== Usages ===
i141 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i11 y: i133  <|@  <|@
f <@~|@floating>@ <|@
tid i141 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:591) [bci: 330]
stamp: i32
=== Inputs ===
x: i136 
y: i1551 
=== Succesors ===
=== Usages ===
v149 v161 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i136 y: i1551  <|@  <|@
f <@~|@floating>@ <|@
tid v149 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:595) [bci: 372]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i141 
y: i46 
=== Succesors ===
=== Usages ===
v152 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i141 y: i46  <|@  <|@
f <@~|@floating>@ <|@
tid i134 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:559) [bci: 294]
stamp: i32
=== Inputs ===
x: i804 
y: i129 
=== Succesors ===
=== Usages ===
i142 j168 ?1409 v976 ?315 ?1408 ?1407 ?325 ?1406 i331 ?1405 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i804 y: i129  <|@  <|@
f <@~|@floating>@ <|@
tid j271 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:688) [bci: 976]
rawvalue: 0
stableDimension: 0
stamp: i64 [0] ⇈0000000000000000
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v505 j468 v306 j468 v1533 ?495 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j273 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:688) [bci: 978]
rawvalue: 1
stableDimension: 0
stamp: i64 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v274 v507 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i219 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:680) [bci: 903]
rawvalue: 8
stableDimension: 0
stamp: i32 [8] ⇊0000000000000008 ⇈0000000000000008
stampKind: i32
value: int[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
v220 v379 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i216 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:680) [bci: 896]
rawvalue: -3
stableDimension: 0
stamp: i32 [-3] ⇊00000000fffffffd ⇈00000000fffffffd
stampKind: i32
value: int[-3|0xfffffffffffffffd]
=== Inputs ===
=== Succesors ===
=== Usages ===
v217 v372 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i200 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:672) [bci: 882]
rawvalue: 48
stableDimension: 0
stamp: i32 [48] ⇊0000000000000030 ⇈0000000000000030
stampKind: i32
value: int[48|0x30]
=== Inputs ===
=== Succesors ===
=== Usages ===
i201 i296 i358 i438 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v212 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:680) [bci: 891]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i5 
y: i8 
=== Succesors ===
=== Usages ===
v215 v371 v721 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i5 y: i8  <|@  <|@
f <@~|@floating>@ <|@
tid v1585 <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a1558 a1555 a1564 a1572 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@*|@fixed>@ <|@
tid v152 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:595) [bci: 372]
stamp: void
trueSuccessorProbability: 0.9886664055615392
=== Inputs ===
condition: v149 
=== Succesors ===
trueSuccessor: v150 
falseSuccessor: v151 
=== Usages ===
=== Predecessor ===
i1551 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v149 #trueSuccessor: v150 #falseSuccessor: v151  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B59" "B92" 
    xhandlers
    flags 
    probability 4598218266070781714
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v150 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:595) [bci: 375]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1552 
=== Usages ===
=== Predecessor ===
v152 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1552  <|@  <|@
f <@~|@floating>@ <|@
tid v1582 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a43 
index: i680 
=== Succesors ===
=== Usages ===
i1552 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a43 index: i680  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1552 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:594) [bci: 355]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v1244 
address: v1582 
=== Succesors ===
next: v159 
=== Usages ===
i148 
=== Predecessor ===
v150 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1244 address: v1582 #next: v159  <|@  <|@
f <@~|@floating>@ <|@
tid i142 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:594) [bci: 336]
stamp: i32
=== Inputs ===
x: i134 
y: i7 
=== Succesors ===
=== Usages ===
i148 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i134 y: i7  <|@  <|@
f <@~|@floating>@ <|@
tid i148 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:594) [bci: 365]
stamp: i32
=== Inputs ===
x: i142 
y: i1552 
=== Succesors ===
=== Usages ===
v153 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i142 y: i1552  <|@  <|@
f <@~|@floating>@ <|@
tid v153 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:595) [bci: 379]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i148 
y: i46 
=== Succesors ===
=== Usages ===
v159 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i148 y: i46  <|@  <|@
f <@*|@fixed>@ <|@
tid v159 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:595) [bci: 379]
stamp: void
trueSuccessorProbability: 0.9702874687399411
=== Inputs ===
condition: v153 
=== Succesors ===
trueSuccessor: v154 
falseSuccessor: v158 
=== Usages ===
=== Predecessor ===
i1552 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v153 #trueSuccessor: v154 #falseSuccessor: v158  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B60" "B61" 
    xhandlers
    flags 
    probability 4597991127864395515
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v154 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:596) [bci: 382]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1255 
=== Usages ===
=== Predecessor ===
v159 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1255  <|@  <|@
f <@~|@floating>@ <|@
tid i160 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:596) [bci: 384]
rawvalue: 32
stableDimension: 0
stamp: i32 [32] ⇊0000000000000020 ⇈0000000000000020
stampKind: i32
value: int[32|0x20]
=== Inputs ===
=== Succesors ===
=== Usages ===
v161 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v161 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:596) [bci: 386]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i141 
y: i160 
=== Succesors ===
=== Usages ===
v1255 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i141 y: i160  <|@  <|@
f <@*|@fixed>@ <|@
tid v1255 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:596) [bci: 386]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v161 
=== Succesors ===
trueSuccessor: v1254 
falseSuccessor: v1252 
=== Usages ===
=== Predecessor ===
v154 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v161 #trueSuccessor: v1254 #falseSuccessor: v1252  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B154" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1254 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:596) [bci: 386]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1513 
=== Usages ===
=== Predecessor ===
v1255 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1513  <|@  <|@
f <@~|@floating>@ <|@
tid i1514 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -233491
stableDimension: 0
stamp: i32 [-233491] ⇊00000000fffc6fed ⇈00000000fffc6fed
stampKind: i32
value: int[-233491|0xfffffffffffc6fed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1515 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1513 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1512 
=== Predecessor ===
v1254 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" "B91" 
    xhandlers
    flags 
    probability 4597991127864395515
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1252 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:596) [bci: 386]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1259 
=== Usages ===
=== Predecessor ===
v1255 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1259  <|@  <|@
f <@~|@floating>@ <|@
tid v917 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:653) [bci: 746]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i668 
y: i38 
=== Succesors ===
=== Usages ===
v1259 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i668 y: i38  <|@  <|@
f <@*|@fixed>@ <|@
tid v1259 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:653) [bci: 746]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v917 
=== Succesors ===
trueSuccessor: v1256 
falseSuccessor: v1258 
=== Usages ===
=== Predecessor ===
v1252 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v917 #trueSuccessor: v1256 #falseSuccessor: v1258  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B63" "B68" 
    xhandlers
    flags 
    probability 4597991127864395515
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1256 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:653) [bci: 746]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1553 
=== Usages ===
j1554 
=== Predecessor ===
v1259 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j1553  <|@  <|@
f <@~|@floating>@ <|@
tid a37 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:448) [bci: 93]
rawvalue: long[27]{1, 5, 25, 125, 625, ...}
stableDimension: 0
stamp: a!# [J
stampKind: a -
value: Object[long[27]{1, 5, 25, 125, 625, ...}]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1583 v1584 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1583 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: a37 
index: i666 
=== Succesors ===
=== Usages ===
j1553 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a37 index: i666  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1553 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: long
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:652) [bci: 734]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: v1240 
address: v1583 
=== Succesors ===
next: j1554 
=== Usages ===
j165 j179 j180 
=== Predecessor ===
v1256 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1240 address: v1583 #next: j1554  <|@  <|@
f <@~|@floating>@ <|@
tid v1584 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: a37 
index: i668 
=== Succesors ===
=== Usages ===
j1554 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a37 index: i668  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1554 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: long
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:653) [bci: 746]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: v1256 
address: v1584 
=== Succesors ===
next: j175 
=== Usages ===
j168 
=== Predecessor ===
j1553 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1256 address: v1584 #next: j175  <|@  <|@
f <@~|@floating>@ <|@
tid j165 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.MulNode$$Lambda$125/271184744@39a592fe
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:652) [bci: 735]
stamp: i64
=== Inputs ===
x: j112 
y: j1553 
=== Succesors ===
=== Usages ===
j166 
=== Predecessor ===
- >@ <|@
instruction <@*|@org.graalvm.compiler.nodes.calc.MulNode>@ x: j112 y: j1553  <|@  <|@
f <@~|@floating>@ <|@
tid j166 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:652) [bci: 738]
stamp: i64
=== Inputs ===
x: j165 
y: i133 
=== Succesors ===
=== Usages ===
j175 j177 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: j165 y: i133  <|@  <|@
f <@~|@floating>@ <|@
tid j168 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:653) [bci: 749]
stamp: i64
=== Inputs ===
x: j1554 
y: i134 
=== Succesors ===
=== Usages ===
j172 j173 j175 j177 ?300 ?701 ?228 ?236 j263 j265 ?690 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: j1554 y: i134  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j175 <|@
d <@d|@=== Debug Properties ===
canDeopt: true
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:662) [bci: 778]
op: DIV
stamp: i64
type: SIGNED
=== Inputs ===
stateBefore: ?799 
x: j166 
y: j168 
=== Succesors ===
next: j177 
=== Usages ===
i176 
=== Predecessor ===
j1554 >@ <|@
instruction <@/|@org.graalvm.compiler.nodes.calc.SignedDivNode>@ stateBefore: ?799 x: j166 y: j168 #next: j177  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j177 <|@
d <@d|@=== Debug Properties ===
canDeopt: true
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:663) [bci: 789]
op: REM
stamp: i64 [-9223372036854775807 - 9223372036854775807]
type: SIGNED
=== Inputs ===
stateBefore: ?799 
x: j166 
y: j168 
=== Succesors ===
next: a1555 
=== Usages ===
j526 j525 
=== Predecessor ===
j175 >@ <|@
instruction <@%|@org.graalvm.compiler.nodes.calc.SignedRemNode>@ stateBefore: ?799 x: j166 y: j168 #next: a1555  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1555 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FloatingDecimal$BinaryToASCIIBuffer.digits
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:672) [bci: 874]
nullCheck: false
stamp: n# [C
=== Inputs ===
stateBefore: - 
guard: - 
address: v1585 
=== Succesors ===
next: v195 
=== Usages ===
v930 a929 v1586 v1588 
=== Predecessor ===
j177 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1585 #next: v195  <|@  <|@
f <@~|@floating>@ <|@
tid v1586 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1555 
=== Succesors ===
=== Usages ===
i1557 i1556 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1555  <|@  <|@
f <@~|@floating>@ <|@
tid i171 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:655) [bci: 768]
rawvalue: 3
stableDimension: 0
stamp: i32 [3] ⇊0000000000000003 ⇈0000000000000003
stampKind: i32
value: int[3|0x3]
=== Inputs ===
=== Succesors ===
=== Usages ===
j172 j179 j267 j525 j528 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j172 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:655) [bci: 768]
stamp: i64 [-9223372036854775808 - 9223372036854775800] ⇈fffffffffffffff8
=== Inputs ===
x: j168 
y: i171 
=== Succesors ===
=== Usages ===
j174 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: j168 y: i171  <|@  <|@
f <@~|@floating>@ <|@
tid j173 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:655) [bci: 768]
stamp: i64 [-9223372036854775808 - 9223372036854775806] ⇈fffffffffffffffe
=== Inputs ===
x: j168 
y: i7 
=== Succesors ===
=== Usages ===
j174 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: j168 y: i7  <|@  <|@
f <@~|@floating>@ <|@
tid j174 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:655) [bci: 768]
stamp: i64 [-9223372036854775808 - 9223372036854775806] ⇈fffffffffffffffe
=== Inputs ===
x: j172 
y: j173 
=== Succesors ===
=== Usages ===
j304 v188 v284 ?701 ?228 ?236 ?300 ?690 j1529 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j172 y: j173  <|@  <|@
f <@~|@floating>@ <|@
tid j179 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:664) [bci: 798]
stamp: i64 [-9223372036854775808 - 9223372036854775800] ⇈fffffffffffffff8
=== Inputs ===
x: j1553 
y: i171 
=== Succesors ===
=== Usages ===
j181 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: j1553 y: i171  <|@  <|@
f <@~|@floating>@ <|@
tid j180 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:664) [bci: 798]
stamp: i64 [-9223372036854775808 - 9223372036854775806] ⇈fffffffffffffffe
=== Inputs ===
x: j1553 
y: i7 
=== Succesors ===
=== Usages ===
j181 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: j1553 y: i7  <|@  <|@
f <@~|@floating>@ <|@
tid j181 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:664) [bci: 798]
stamp: i64 [-9223372036854775808 - 9223372036854775806] ⇈fffffffffffffffe
=== Inputs ===
x: j179 
y: j180 
=== Succesors ===
=== Usages ===
j235 v183 j186 ?228 ?701 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j179 y: j180  <|@  <|@
f <@~|@floating>@ <|@
tid j525 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:663) [bci: 790]
stamp: i64 [-9223372036854775808 - 9223372036854775800] ⇈fffffffffffffff8
=== Inputs ===
x: j177 
y: i171 
=== Succesors ===
=== Usages ===
j527 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: j177 y: i171  <|@  <|@
f <@~|@floating>@ <|@
tid j526 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:663) [bci: 790]
stamp: i64 [-9223372036854775808 - 9223372036854775806] ⇈fffffffffffffffe
=== Inputs ===
x: j177 
y: i7 
=== Succesors ===
=== Usages ===
j527 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: j177 y: i7  <|@  <|@
f <@~|@floating>@ <|@
tid j527 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:663) [bci: 790]
stamp: i64 [-9223372036854775808 - 9223372036854775806] ⇈fffffffffffffffe
=== Inputs ===
x: j525 
y: j526 
=== Succesors ===
=== Usages ===
j234 v183 j186 ?228 ?701 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j525 y: j526  <|@  <|@
f <@~|@floating>@ <|@
tid j186 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:666) [bci: 820]
stamp: i64 [-9223372036854775808 - 9223372036854775806] ⇈fffffffffffffffe
=== Inputs ===
x: j181 
y: j527 
=== Succesors ===
=== Usages ===
v188 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j181 y: j527  <|@  <|@
f <@~|@floating>@ <|@
tid v188 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:666) [bci: 824]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j174 
y: j186 
=== Succesors ===
=== Usages ===
i189 v1263 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j174 y: j186  <|@  <|@
f <@~|@floating>@ <|@
tid i176 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 64
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:662) [bci: 779]
resultBits: 32
stamp: i32
=== Inputs ===
value: j175 
=== Succesors ===
=== Usages ===
v192 i201 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: j175  <|@  <|@
f <@~|@floating>@ <|@
tid v192 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:668) [bci: 859]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i176 
y: i8 
=== Succesors ===
=== Usages ===
v195 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i176 y: i8  <|@  <|@
f <@*|@fixed>@ <|@
tid v195 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:668) [bci: 859]
stamp: void
trueSuccessorProbability: 0.10789017046034499
=== Inputs ===
condition: v192 
=== Succesors ===
trueSuccessor: v193 
falseSuccessor: v194 
=== Usages ===
=== Predecessor ===
a1555 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v192 #trueSuccessor: v193 #falseSuccessor: v194  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B64" "B65" 
    xhandlers
    flags 
    probability 4583272634049493745
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v193 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:668) [bci: 862]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1263 
=== Usages ===
=== Predecessor ===
v195 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1263  <|@  <|@
f <@*|@fixed>@ <|@
tid v1263 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:668) [bci: 864]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v188 
=== Succesors ===
trueSuccessor: v1262 
falseSuccessor: v1260 
=== Usages ===
=== Predecessor ===
v193 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v188 #trueSuccessor: v1262 #falseSuccessor: v1260  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B154" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1262 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:668) [bci: 864]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1520 
=== Usages ===
=== Predecessor ===
v1263 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1520  <|@  <|@
f <@~|@floating>@ <|@
tid i1521 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -245267
stableDimension: 0
stamp: i32 [-245267] ⇊00000000fffc41ed ⇈00000000fffc41ed
stampKind: i32
value: int[-245267|0xfffffffffffc41ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1515 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1520 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1512 
=== Predecessor ===
v1262 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" "B67" 
    xhandlers
    flags 
    probability 4583272634049493745
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1260 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:668) [bci: 864]
stamp: void
=== Inputs ===
=== Succesors ===
next: v215 
=== Usages ===
=== Predecessor ===
v1263 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v215  <|@  <|@
f <@~|@floating>@ <|@
tid i197 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:670) [bci: 867]
stamp: i32
=== Inputs ===
x: i612 
y: i17 
=== Succesors ===
=== Usages ===
i704 i705 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i612 y: i17  <|@  <|@
f <@*|@fixed>@ <|@
tid v215 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:680) [bci: 891]
stamp: void
trueSuccessorProbability: 0.011534143105032153
=== Inputs ===
condition: v212 
=== Succesors ===
trueSuccessor: v213 
falseSuccessor: v214 
=== Usages ===
=== Predecessor ===
v1260 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v212 #trueSuccessor: v213 #falseSuccessor: v214  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B77" 
    xhandlers
    flags 
    probability 4554257208233383042
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v213 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:681) [bci: 908]
stamp: void
=== Inputs ===
=== Succesors ===
next: v225 
=== Usages ===
=== Predecessor ===
v215 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v225  <|@  <|@
f <@*|@fixed>@ <|@
tid v225 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:683) [bci: 914]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v224 
=== Predecessor ===
v213 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B73" 
    xhandlers
    flags 
    probability 4583184796790287775
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v214 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:680) [bci: 894]
stamp: void
=== Inputs ===
=== Succesors ===
next: v700 
=== Usages ===
=== Predecessor ===
v215 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v700  <|@  <|@
f <@*|@fixed>@ <|@
tid v700 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v699 
=== Predecessor ===
v214 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B69" "B70" 
    xhandlers
    flags 
    probability 4597039201284261789
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v194 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:672) [bci: 873]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1556 
=== Usages ===
=== Predecessor ===
v195 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1556  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1556 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:672) [bci: 888]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?799 
guard: - 
address: v1586 
=== Succesors ===
next: v1271 
=== Usages ===
v966 
=== Predecessor ===
v194 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?799 guard: - address: v1586 #next: v1271  <|@  <|@
f <@~|@floating>@ <|@
tid v966 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:672) [bci: 888]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1556 
y: i8 
=== Succesors ===
=== Usages ===
v1271 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i1556 y: i8  <|@  <|@
f <@*|@fixed>@ <|@
tid v1271 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:672) [bci: 888]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v966 
=== Succesors ===
trueSuccessor: v1270 
falseSuccessor: v1268 
=== Usages ===
=== Predecessor ===
i1556 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v966 #trueSuccessor: v1270 #falseSuccessor: v1268  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B154" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1270 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:672) [bci: 888]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1526 
=== Usages ===
=== Predecessor ===
v1271 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1526  <|@  <|@
f <@~|@floating>@ <|@
tid i1527 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -290587
stableDimension: 0
stamp: i32 [-290587] ⇊00000000fffb90e5 ⇈00000000fffb90e5
stampKind: i32
value: int[-290587|0xfffffffffffb90e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1515 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1526 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1512 
=== Predecessor ===
v1270 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B71" "B72" 
    xhandlers
    flags 
    probability 4597039201284261789
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1268 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:672) [bci: 888]
stamp: void
=== Inputs ===
=== Succesors ===
next: v973 
=== Usages ===
v973 
=== Predecessor ===
v1271 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v973  <|@  <|@
f <@~|@floating>@ <|@
tid v1588 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1555 
=== Succesors ===
=== Usages ===
v973 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1555  <|@  <|@
f <@~|@floating>@ <|@
tid i201 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:672) [bci: 886]
stamp: i32
=== Inputs ===
x: i176 
y: i200 
=== Succesors ===
=== Usages ===
i202 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i176 y: i200  <|@  <|@
f <@~|@floating>@ <|@
tid i202 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 32
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:672) [bci: 887]
resultBits: 16
stamp: i16
=== Inputs ===
value: i201 
=== Succesors ===
=== Usages ===
v973 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i201  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v973 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:672) [bci: 888]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1268 
address: v1588 
value: i202 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v721 
=== Usages ===
=== Predecessor ===
v1268 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1268 address: v1588 value: i202 stateAfter: - lastLocationAccess: - #next: v721  <|@  <|@
f <@*|@fixed>@ <|@
tid v721 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:680) [bci: 891]
stamp: void
trueSuccessorProbability: 0.011534143105032153
=== Inputs ===
condition: v212 
=== Succesors ===
trueSuccessor: v719 
falseSuccessor: v720 
=== Usages ===
=== Predecessor ===
v973 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v212 #trueSuccessor: v719 #falseSuccessor: v720  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B77" 
    xhandlers
    flags 
    probability 4567956811517496389
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v719 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:681) [bci: 908]
stamp: void
=== Inputs ===
=== Succesors ===
next: v722 
=== Usages ===
=== Predecessor ===
v721 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v722  <|@  <|@
f <@*|@fixed>@ <|@
tid v722 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v224 
=== Predecessor ===
v719 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B73" 
    xhandlers
    flags 
    probability 4596948413956274540
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v720 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:680) [bci: 894]
stamp: void
=== Inputs ===
=== Succesors ===
next: v702 
=== Usages ===
=== Predecessor ===
v721 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v702  <|@  <|@
f <@*|@fixed>@ <|@
tid v702 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v699 
=== Predecessor ===
v720 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B67" "B72" 
    successors "B74" "B75" 
    xhandlers
    flags 
    probability 4597889360879007520
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i704 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v699 
values: i197 i612 
=== Succesors ===
=== Usages ===
v217 v220 i705 ?701 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v699 values: i197 i612  <|@  <|@
f <@~|@floating>@ <|@
tid i716 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 1] ⇈0000000000000001
valueDescription: i32
=== Inputs ===
merge: v699 
values: i8 i7 
=== Succesors ===
=== Usages ===
i715 ?701 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v699 values: i8 i7  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v699 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v700 v702 
=== Succesors ===
next: v1275 
=== Usages ===
i704 i716 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v700 v702 #next: v1275  <|@  <|@
f <@~|@floating>@ <|@
tid v217 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:680) [bci: 898]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i704 
y: i216 
=== Succesors ===
=== Usages ===
v1275 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i704 y: i216  <|@  <|@
f <@~|@floating>@ <|@
tid v183 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:665) [bci: 806]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j527 
y: j181 
=== Succesors ===
=== Usages ===
i184 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j527 y: j181  <|@  <|@
f <@~|@floating>@ <|@
tid i184 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:665) [bci: 806]
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
condition: v183 
trueValue: i7 
falseValue: i8 
=== Succesors ===
=== Usages ===
i226 ?701 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v183 trueValue: i7 falseValue: i8  <|@  <|@
f <@~|@floating>@ <|@
tid i189 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:666) [bci: 824]
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
condition: v188 
trueValue: i7 
falseValue: i8 
=== Succesors ===
=== Usages ===
i227 ?701 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v188 trueValue: i7 falseValue: i8  <|@  <|@
f <@*|@fixed>@ <|@
tid v1275 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:680) [bci: 898]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v217 
=== Succesors ===
trueSuccessor: v1274 
falseSuccessor: v1272 
=== Usages ===
=== Predecessor ===
v699 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v217 #trueSuccessor: v1274 #falseSuccessor: v1272  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B90" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1274 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:680) [bci: 898]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1497 
=== Usages ===
=== Predecessor ===
v1275 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1497  <|@  <|@
f <@~|@floating>@ <|@
tid i1498 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -249363
stableDimension: 0
stamp: i32 [-249363] ⇊00000000fffc31ed ⇈00000000fffc31ed
stampKind: i32
value: int[-249363|0xfffffffffffc31ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1499 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1497 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1496 
=== Predecessor ===
v1274 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" "B89" 
    xhandlers
    flags 
    probability 4597889360879007520
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1272 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:680) [bci: 898]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1279 
=== Usages ===
=== Predecessor ===
v1275 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1279  <|@  <|@
f <@~|@floating>@ <|@
tid v220 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:680) [bci: 905]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i704 
y: i219 
=== Succesors ===
=== Usages ===
v1279 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i704 y: i219  <|@  <|@
f <@*|@fixed>@ <|@
tid v1279 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:680) [bci: 905]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v220 
=== Succesors ===
trueSuccessor: v1276 
falseSuccessor: v1278 
=== Usages ===
=== Predecessor ===
v1272 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v220 #trueSuccessor: v1276 #falseSuccessor: v1278  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B77" 
    xhandlers
    flags 
    probability 4597889360879007520
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1276 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:680) [bci: 905]
stamp: void
=== Inputs ===
=== Succesors ===
next: v223 
=== Usages ===
=== Predecessor ===
v1279 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v223  <|@  <|@
f <@*|@fixed>@ <|@
tid v223 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:683) [bci: 914]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v224 
=== Predecessor ===
v1276 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" "B66" "B71" 
    successors "B78" "B79" 
    xhandlers
    flags 
    probability 4597991127864395515
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i226 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:683) [bci: 914]
stamp: i32 [0 - 1] ⇈0000000000000001
valueDescription: i32
=== Inputs ===
merge: v224 
values: i184 i8 i8 
=== Succesors ===
=== Usages ===
?228 i232 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v224 values: i184 i8 i8  <|@  <|@
f <@~|@floating>@ <|@
tid i227 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:683) [bci: 914]
stamp: i32 [0 - 1] ⇈0000000000000001
valueDescription: i32
=== Inputs ===
merge: v224 
values: i189 i8 i8 
=== Succesors ===
=== Usages ===
?228 i233 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v224 values: i189 i8 i8  <|@  <|@
f <@~|@floating>@ <|@
tid i705 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v224 
values: i704 i197 i612 
=== Succesors ===
=== Usages ===
?228 ?236 i483 ?300 ?690 i483 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v224 values: i704 i197 i612  <|@  <|@
f <@~|@floating>@ <|@
tid i715 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 1] ⇈0000000000000001
valueDescription: i32
=== Inputs ===
merge: v224 
values: i716 i8 i7 
=== Succesors ===
=== Usages ===
?228 i231 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v224 values: i716 i8 i7  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v224 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:683) [bci: 914]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v223 v225 v722 
=== Succesors ===
next: v1283 
=== Usages ===
i226 i227 i705 i715 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v223 v225 v722 #next: v1283  <|@  <|@
f <@~|@floating>@ <|@
tid v930 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:700) [bci: 1038]
stamp: void
=== Inputs ===
value: a1555 
=== Succesors ===
=== Usages ===
v1283 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a1555  <|@  <|@
f <@*|@fixed>@ <|@
tid v1283 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:700) [bci: 1038]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v930 
=== Succesors ===
trueSuccessor: v1282 
falseSuccessor: v1280 
=== Usages ===
=== Predecessor ===
v224 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v930 #trueSuccessor: v1282 #falseSuccessor: v1280  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1282 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:700) [bci: 1038]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1281 
=== Usages ===
=== Predecessor ===
v1283 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1281  <|@  <|@
tid ?228 <|@
d <@d|@=== Debug Properties ===
bci: 914
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: false
localsSize: 33
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 683
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - - - - - - - i705 - - - - - - - i715 i226 i227 - - - - - j527 - j168 - j181 - j174 - 
=== Succesors ===
=== Usages ===
v1281 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - - - - - - i705 - - - - - - - i715 i226 i227 - - - - - j527 - j168 - j181 - j174 -  <|@  <|@
f <@*|@fixed>@ <|@
tid v1281 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 1185
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:700) [bci: 1038]
reason: NullCheckException
speculation: Object[d.a@1454271960]
stamp: void
=== Inputs ===
stateBefore: ?228 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1282 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?228  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B80" 
    xhandlers
    flags 
    probability 4597991127864395515
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1280 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:700) [bci: 1038]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1557 
=== Usages ===
=== Predecessor ===
v1283 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1557  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1557 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:700) [bci: 1038]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v1586 
=== Succesors ===
next: v229 
=== Usages ===
v948 
=== Predecessor ===
v1280 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1586 #next: v229  <|@  <|@
f <@~|@floating>@ <|@
tid a929 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:700) [bci: 1024]
op: Uncompress
stamp: a# [C
=== Inputs ===
value: a1555 
=== Succesors ===
=== Usages ===
v1587 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1555  <|@  <|@
f <@*|@fixed>@ <|@
tid v229 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:683) [bci: 914]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v230 
=== Predecessor ===
i1557 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" "B84" "B85" 
    successors "B81" "B88" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4611068895554337385
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i231 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v230 
values: i715 i295 i295 
=== Succesors ===
=== Usages ===
?236 i484 v948 v1587 i295 i484 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v230 values: i715 i295 i295  <|@  <|@
f <@~|@floating>@ <|@
tid i232 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 1] ⇈0000000000000001
valueDescription: i32
=== Inputs ===
merge: v230 
values: i226 i7 i280 
=== Succesors ===
=== Usages ===
i485 v237 i485 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v230 values: i226 i7 i280  <|@  <|@
f <@~|@floating>@ <|@
tid i233 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 1] ⇈0000000000000001
valueDescription: i32
=== Inputs ===
merge: v230 
values: i227 i7 i285 
=== Succesors ===
=== Usages ===
i486 i486 v247 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v230 values: i227 i7 i285  <|@  <|@
f <@~|@floating>@ <|@
tid j234 <|@
d <@d|@=== Debug Properties ===
stamp: i64 [-9223372036854775808 - 9223372036854775806] ⇈fffffffffffffffe
valueDescription: i64
=== Inputs ===
merge: v230 
values: j527 j530 j530 
=== Succesors ===
=== Usages ===
?236 v306 j303 j263 j265 j1530 v1533 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v230 values: j527 j530 j530  <|@  <|@
f <@~|@floating>@ <|@
tid j235 <|@
d <@d|@=== Debug Properties ===
stamp: i64 [-9223372036854775808 - 9223372036854775806] ⇈fffffffffffffffe
valueDescription: i64
=== Inputs ===
merge: v230 
values: j181 j269 j269 
=== Succesors ===
=== Usages ===
?236 j267 j268 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v230 values: j181 j269 j269  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v230 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: true
inversionCount: 0
loopFrequency: 7.607366281283892
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 2
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:683) [bci: 914]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v229 
=== Succesors ===
next: v246 
=== Usages ===
i231 i232 i233 j234 j235 v240 v252 v301 v681 v1287 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v229 #next: v246  <|@  <|@
f <@~|@floating>@ <|@
tid v237 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:683) [bci: 916]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i232 
y: i8 
=== Succesors ===
=== Usages ===
v246 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i232 y: i8  <|@  <|@
f <@*|@fixed>@ <|@
tid v246 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:683) [bci: 916]
stamp: void
trueSuccessorProbability: 0.9044543048889694
=== Inputs ===
condition: v237 
=== Succesors ===
trueSuccessor: v238 
falseSuccessor: v240 
=== Usages ===
=== Predecessor ===
v230 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v237 #trueSuccessor: v238 #falseSuccessor: v240  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B82" "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4610267259874414128
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v238 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:683) [bci: 919]
stamp: void
=== Inputs ===
=== Succesors ===
next: v262 
=== Usages ===
=== Predecessor ===
v246 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v262  <|@  <|@
f <@~|@floating>@ <|@
tid v247 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:683) [bci: 921]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i233 
y: i8 
=== Succesors ===
=== Usages ===
v262 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i233 y: i8  <|@  <|@
f <@*|@fixed>@ <|@
tid v262 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:683) [bci: 921]
stamp: void
trueSuccessorProbability: 0.9603010975971522
=== Inputs ===
condition: v247 
=== Succesors ===
trueSuccessor: v248 
falseSuccessor: v252 
=== Usages ===
=== Predecessor ===
v238 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v247 #trueSuccessor: v248 #falseSuccessor: v252  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors "B83" "B86" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4609966007107604873
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v248 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:684) [bci: 924]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1288 
=== Usages ===
=== Predecessor ===
v262 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1288  <|@  <|@
tid ?236 <|@
d <@d|@=== Debug Properties ===
bci: 914
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: false
localsSize: 33
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 683
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - - - - - - - i705 - - - - - - - i231 i8 i8 - - - - - j234 - j168 - j235 - j174 - 
=== Succesors ===
=== Usages ===
j263 j265 v1285 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - - - - - - i705 - - - - - - - i231 i8 i8 - - - - - j234 - j168 - j235 - j174 -  <|@  <|@
f <@~|@floating>@ <|@
tid v948 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:700) [bci: 1038]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i231 
y: i1557 
=== Succesors ===
=== Usages ===
v1288 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i231 y: i1557  <|@  <|@
f <@*|@fixed>@ <|@
tid v1288 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:700) [bci: 1038]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v948 
=== Succesors ===
trueSuccessor: v1284 
falseSuccessor: v1287 
=== Usages ===
=== Predecessor ===
v248 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v948 #trueSuccessor: v1284 #falseSuccessor: v1287  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B84" "B85" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4609966007107604873
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1284 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:700) [bci: 1038]
stamp: void
=== Inputs ===
=== Succesors ===
next: j263 
=== Usages ===
v943 
=== Predecessor ===
v1288 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j263  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j263 <|@
d <@d|@=== Debug Properties ===
canDeopt: true
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:684) [bci: 928]
op: DIV
stamp: i64
type: SIGNED
=== Inputs ===
stateBefore: ?236 
x: j234 
y: j168 
=== Succesors ===
next: j265 
=== Usages ===
i264 
=== Predecessor ===
v1284 >@ <|@
instruction <@/|@org.graalvm.compiler.nodes.calc.SignedDivNode>@ stateBefore: ?236 x: j234 y: j168 #next: j265  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j265 <|@
d <@d|@=== Debug Properties ===
canDeopt: true
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:685) [bci: 939]
op: REM
stamp: i64 [-9223372036854775807 - 9223372036854775806]
type: SIGNED
=== Inputs ===
stateBefore: ?236 
x: j234 
y: j168 
=== Succesors ===
next: v943 
=== Usages ===
j529 j528 
=== Predecessor ===
j263 >@ <|@
instruction <@%|@org.graalvm.compiler.nodes.calc.SignedRemNode>@ stateBefore: ?236 x: j234 y: j168 #next: v943  <|@  <|@
f <@~|@floating>@ <|@
tid v1587 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a929 
index: i231 
=== Succesors ===
=== Usages ===
v943 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a929 index: i231  <|@  <|@
f <@~|@floating>@ <|@
tid i264 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 64
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:684) [bci: 929]
resultBits: 32
stamp: i32
=== Inputs ===
value: j263 
=== Succesors ===
=== Usages ===
?690 i296 ?300 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: j263  <|@  <|@
f <@~|@floating>@ <|@
tid i296 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:700) [bci: 1036]
stamp: i32
=== Inputs ===
x: i264 
y: i200 
=== Succesors ===
=== Usages ===
i297 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i264 y: i200  <|@  <|@
f <@~|@floating>@ <|@
tid i297 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 32
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:700) [bci: 1037]
resultBits: 16
stamp: i16
=== Inputs ===
value: i296 
=== Succesors ===
=== Usages ===
v943 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i296  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v943 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:700) [bci: 1038]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1284 
address: v1587 
value: i297 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v277 
=== Usages ===
=== Predecessor ===
j265 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1284 address: v1587 value: i297 stateAfter: - lastLocationAccess: - #next: v277  <|@  <|@
f <@~|@floating>@ <|@
tid j528 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:685) [bci: 940]
stamp: i64 [-9223372036854775808 - 9223372036854775800] ⇈fffffffffffffff8
=== Inputs ===
x: j265 
y: i171 
=== Succesors ===
=== Usages ===
j530 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: j265 y: i171  <|@  <|@
f <@~|@floating>@ <|@
tid j529 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:685) [bci: 940]
stamp: i64 [-9223372036854775808 - 9223372036854775806] ⇈fffffffffffffffe
=== Inputs ===
x: j265 
y: i7 
=== Succesors ===
=== Usages ===
j530 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: j265 y: i7  <|@  <|@
f <@~|@floating>@ <|@
tid j530 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:685) [bci: 940]
stamp: i64 [-9223372036854775808 - 9223372036854775806] ⇈fffffffffffffffe
=== Inputs ===
x: j528 
y: j529 
=== Succesors ===
=== Usages ===
j234 v279 j282 j234 ?300 ?690 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j528 y: j529  <|@  <|@
f <@~|@floating>@ <|@
tid i295 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:700) [bci: 1029]
stamp: i32
=== Inputs ===
x: i231 
y: i7 
=== Succesors ===
=== Usages ===
?300 i231 ?690 i231 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i231 y: i7  <|@  <|@
f <@~|@floating>@ <|@
tid j267 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:686) [bci: 948]
stamp: i64 [-9223372036854775808 - 9223372036854775792] ⇈fffffffffffffff0
=== Inputs ===
x: j235 
y: i171 
=== Succesors ===
=== Usages ===
j269 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: j235 y: i171  <|@  <|@
f <@~|@floating>@ <|@
tid j268 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:686) [bci: 948]
stamp: i64 [-9223372036854775808 - 9223372036854775804] ⇈fffffffffffffffc
=== Inputs ===
x: j235 
y: i7 
=== Succesors ===
=== Usages ===
j269 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: j235 y: i7  <|@  <|@
f <@~|@floating>@ <|@
tid j269 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:686) [bci: 948]
stamp: i64 [-9223372036854775808 - 9223372036854775804] ⇈fffffffffffffffc
=== Inputs ===
x: j267 
y: j268 
=== Succesors ===
=== Usages ===
j235 v274 ?300 v279 j282 j235 ?690 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j267 y: j268  <|@  <|@
f <@~|@floating>@ <|@
tid v274 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:688) [bci: 978]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j269 
y: j273 
=== Succesors ===
=== Usages ===
v277 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j269 y: j273  <|@  <|@
f <@*|@fixed>@ <|@
tid v277 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:688) [bci: 978]
stamp: void
trueSuccessorProbability: 2.81873959865786E-4
=== Inputs ===
condition: v274 
=== Succesors ===
trueSuccessor: v275 
falseSuccessor: v276 
=== Usages ===
=== Predecessor ===
v943 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v274 #trueSuccessor: v275 #falseSuccessor: v276  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B80" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4557049088300125308
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v275 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:697) [bci: 1017]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1193 
=== Usages ===
=== Predecessor ===
v277 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1193  <|@  <|@
tid ?300 <|@
d <@d|@=== Debug Properties ===
bci: 1039
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: false
localsSize: 33
locksSize: 0
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:700) [bci: 1038]
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 700
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - - - - - - - i705 - - - - - - - i295 i7 i7 - - i264 - - j530 - j168 - j269 - j174 - 
=== Succesors ===
=== Usages ===
v1193 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - - - - - - i705 - - - - - - - i295 i7 i7 - - i264 - - j530 - j168 - j269 - j174 -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1193 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?300 
=== Succesors ===
next: v301 
=== Usages ===
=== Predecessor ===
v275 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?300 #next: v301  <|@  <|@
f <@*|@fixed>@ <|@
tid v301 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 0
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:683) [bci: 914]
stamp: void
=== Inputs ===
loopBegin: v230 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1193 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v230  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B80" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4609963953039085360
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v276 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:689) [bci: 981]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1194 
=== Usages ===
=== Predecessor ===
v277 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1194  <|@  <|@
f <@~|@floating>@ <|@
tid v279 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:689) [bci: 986]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j530 
y: j269 
=== Succesors ===
=== Usages ===
i280 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j530 y: j269  <|@  <|@
f <@~|@floating>@ <|@
tid i280 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:689) [bci: 986]
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
condition: v279 
trueValue: i7 
falseValue: i8 
=== Succesors ===
=== Usages ===
i232 ?690 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v279 trueValue: i7 falseValue: i8  <|@  <|@
f <@~|@floating>@ <|@
tid j282 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:690) [bci: 1000]
stamp: i64 [-9223372036854775808 - 9223372036854775806] ⇈fffffffffffffffe
=== Inputs ===
x: j269 
y: j530 
=== Succesors ===
=== Usages ===
v284 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j269 y: j530  <|@  <|@
f <@~|@floating>@ <|@
tid v284 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:690) [bci: 1004]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j174 
y: j282 
=== Succesors ===
=== Usages ===
i285 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j174 y: j282  <|@  <|@
f <@~|@floating>@ <|@
tid i285 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:690) [bci: 1004]
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
condition: v284 
trueValue: i7 
falseValue: i8 
=== Succesors ===
=== Usages ===
i233 ?690 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v284 trueValue: i7 falseValue: i8  <|@  <|@
tid ?690 <|@
d <@d|@=== Debug Properties ===
bci: 1039
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: false
localsSize: 33
locksSize: 0
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:700) [bci: 1038]
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 700
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - - - - - - - i705 - - - - - - - i295 i280 i285 - - i264 - - j530 - j168 - j269 - j174 - 
=== Succesors ===
=== Usages ===
v1194 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - - - - - - i705 - - - - - - - i295 i280 i285 - - i264 - - j530 - j168 - j269 - j174 -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1194 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?690 
=== Succesors ===
next: v681 
=== Usages ===
=== Predecessor ===
v276 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?690 #next: v681  <|@  <|@
f <@*|@fixed>@ <|@
tid v681 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 1
stamp: void
=== Inputs ===
loopBegin: v230 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1194 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v230  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1287 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:700) [bci: 1038]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v230 
=== Succesors ===
next: v1285 
=== Usages ===
=== Predecessor ===
v1288 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v230 #next: v1285  <|@  <|@
f <@*|@fixed>@ <|@
tid v1285 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 1191
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:700) [bci: 1038]
reason: BoundsCheckException
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?236 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1287 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?236  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors "B143" 
    xhandlers
    flags 
    probability 4589484464932113000
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v252 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:702) [bci: 1042]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v230 
=== Succesors ===
next: v1528 
=== Usages ===
=== Predecessor ===
v262 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v230 #next: v1528  <|@  <|@
f <@~|@floating>@ <|@
tid j1530 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:702) [bci: 1045]
stamp: i64 [-9223372036854775808 - 9223372036854775804] ⇈fffffffffffffffc
=== Inputs ===
x: j234 
y: i7 
=== Succesors ===
=== Usages ===
j1529 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: j234 y: i7  <|@  <|@
f <@~|@floating>@ <|@
tid j1529 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:702) [bci: 1048]
stamp: i64
=== Inputs ===
x: j1530 
y: j174 
=== Succesors ===
=== Usages ===
j487 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j1530 y: j174  <|@  <|@
f <@~|@floating>@ <|@
tid v1533 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:703) [bci: 1056]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j234 
y: j271 
=== Succesors ===
=== Usages ===
i1532 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: j234 y: j271  <|@  <|@
f <@~|@floating>@ <|@
tid i1532 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:703) [bci: 1056]
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
condition: v1533 
trueValue: i7 
falseValue: i8 
=== Succesors ===
=== Usages ===
i1531 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v1533 trueValue: i7 falseValue: i8  <|@  <|@
f <@~|@floating>@ <|@
tid i1531 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 32
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:703) [bci: 1064]
resultBits: 8
stamp: i8 [0 - 1] ⇈0000000000000001
=== Inputs ===
value: i1532 
=== Succesors ===
=== Usages ===
i1423 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i1532  <|@  <|@
f <@*|@fixed>@ <|@
tid v1528 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:702) [bci: 1042]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v481 
=== Predecessor ===
v252 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B143" 
    xhandlers
    flags 
    probability 4595581105729921479
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v240 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:702) [bci: 1042]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v230 
=== Succesors ===
next: v480 
=== Usages ===
=== Predecessor ===
v246 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v230 #next: v480  <|@  <|@
f <@~|@floating>@ <|@
tid j303 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:702) [bci: 1045]
stamp: i64 [-9223372036854775808 - 9223372036854775804] ⇈fffffffffffffffc
=== Inputs ===
x: j234 
y: i7 
=== Succesors ===
=== Usages ===
j304 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: j234 y: i7  <|@  <|@
f <@~|@floating>@ <|@
tid j304 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:702) [bci: 1048]
stamp: i64
=== Inputs ===
x: j303 
y: j174 
=== Succesors ===
=== Usages ===
j487 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j303 y: j174  <|@  <|@
f <@~|@floating>@ <|@
tid v306 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:703) [bci: 1056]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j234 
y: j271 
=== Succesors ===
=== Usages ===
i307 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: j234 y: j271  <|@  <|@
f <@~|@floating>@ <|@
tid i307 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:703) [bci: 1056]
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
condition: v306 
trueValue: i7 
falseValue: i8 
=== Succesors ===
=== Usages ===
i956 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v306 trueValue: i7 falseValue: i8  <|@  <|@
f <@~|@floating>@ <|@
tid i956 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 32
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:703) [bci: 1064]
resultBits: 8
stamp: i8 [0 - 1] ⇈0000000000000001
=== Inputs ===
value: i307 
=== Succesors ===
=== Usages ===
i1423 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i307  <|@  <|@
f <@*|@fixed>@ <|@
tid v480 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:760) [bci: 1426]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v481 
=== Predecessor ===
v240 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B90" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1278 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:680) [bci: 905]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1502 
=== Usages ===
=== Predecessor ===
v1279 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1502  <|@  <|@
f <@~|@floating>@ <|@
tid i1503 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -249619
stableDimension: 0
stamp: i32 [-249619] ⇊00000000fffc30ed ⇈00000000fffc30ed
stampKind: i32
value: int[-249619|0xfffffffffffc30ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1499 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1502 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1496 
=== Predecessor ===
v1278 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B74" "B89" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1499 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-249619 - -249363] ⇊00000000fffc30ed ⇈00000000fffc31ed
valueDescription: i32
=== Inputs ===
merge: v1496 
values: i1498 i1503 
=== Succesors ===
=== Usages ===
v1501 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1496 values: i1498 i1503  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1496 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1497 v1502 
=== Succesors ===
next: v1501 
=== Usages ===
i1499 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1497 v1502 #next: v1501  <|@  <|@
tid ?701 <|@
d <@d|@=== Debug Properties ===
bci: 889
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: false
localsSize: 33
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 680
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - - - i5 - - - i704 - - - - - - - i716 i184 i189 - - - - - j527 - j168 - j181 - j174 - 
=== Succesors ===
=== Usages ===
v1501 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - - i5 - - - i704 - - - - - - - i716 i184 i189 - - - - - j527 - j168 - j181 - j174 -  <|@  <|@
f <@*|@fixed>@ <|@
tid v1501 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?701 
actionAndReason: i1499 
speculation: a1432 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1496 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?701 actionAndReason: i1499 speculation: a1432  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B154" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1258 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:653) [bci: 746]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1522 
=== Usages ===
=== Predecessor ===
v1259 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1522  <|@  <|@
f <@~|@floating>@ <|@
tid i1523 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -235035
stableDimension: 0
stamp: i32 [-235035] ⇊00000000fffc69e5 ⇈00000000fffc69e5
stampKind: i32
value: int[-235035|0xfffffffffffc69e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1515 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1522 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1512 
=== Predecessor ===
v1258 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B94" 
    xhandlers
    flags 
    probability 4575295933574210854
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v158 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:710) [bci: 1070]
stamp: void
=== Inputs ===
=== Succesors ===
next: v157 
=== Usages ===
=== Predecessor ===
v159 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v157  <|@  <|@
f <@*|@fixed>@ <|@
tid v157 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:710) [bci: 1070]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v156 
=== Predecessor ===
v158 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B94" 
    xhandlers
    flags 
    probability 4568817853797302867
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v151 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:710) [bci: 1070]
stamp: void
=== Inputs ===
=== Succesors ===
next: v155 
=== Usages ===
=== Predecessor ===
v152 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v155  <|@  <|@
f <@*|@fixed>@ <|@
tid v155 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:710) [bci: 1070]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v156 
=== Predecessor ===
v151 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B93" "B92" 
    successors "B95" "B96" 
    xhandlers
    flags 
    probability 4577144435309065000
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v156 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:710) [bci: 1070]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v155 v157 
=== Succesors ===
next: a314 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v155 v157 #next: a314  <|@  <|@
tid v976 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Static
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:710) [bci: 1074]
returnStamp: a# Lsun/misc/FDBigInteger;
signature: [Ljdk.vm.ci.meta.JavaType;@6530e6a0
stamp: void
targetMethod: HotSpotMethod<FDBigInteger.valueOfPow52(int, int)>
=== Inputs ===
arguments: i668 i134 
=== Succesors ===
=== Usages ===
a314 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: i668 i134  <|@  <|@
tid ?1405 <|@
d <@d|@=== Debug Properties ===
bci: 1074
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: true
localsSize: 33
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 710
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - j112 - - i5 - - - i612 i133 i666 i134 i668 i8 i666 - - - - - - - - - - - - - - - - - 
=== Succesors ===
=== Usages ===
a314 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - j112 - - i5 - - - i612 i133 i666 i134 i668 i8 i666 - - - - - - - - - - - - - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a314 <|@
d <@d|@=== Debug Properties ===
bci: 1074
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:710) [bci: 1074]
polymorphic: false
stamp: a# Lsun/misc/FDBigInteger;
targetMethod: Direct#FDBigInteger.valueOfPow52
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v976 
stateDuring: ?1405 
=== Succesors ===
next: v1611 
=== Usages ===
v980 v981 ?1406 v1611 
=== Predecessor ===
v156 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v976 stateDuring: ?1405 #next: v1611  <|@  <|@
tid ?315 <|@
d <@d|@=== Debug Properties ===
bci: 1077
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: false
localsSize: 33
locksSize: 0
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:710) [bci: 1074]
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 710
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: a1 - j112 - - i5 - - - i612 i133 i666 i134 i668 i8 i666 - - - - - - - - - - - - - - - - - a1432 
=== Succesors ===
=== Usages ===
v1611 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - j112 - - i5 - - - i612 i133 i666 i134 i668 i8 i666 - - - - - - - - - - - - - - - - - a1432  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1611 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?315 
object: a314 
=== Succesors ===
next: i317 
=== Usages ===
=== Predecessor ===
a314 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?315 object: a314 #next: i317  <|@  <|@
tid v980 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:711) [bci: 1081]
returnStamp: i32
signature: [Ljdk.vm.ci.meta.JavaType;@3b33fbfc
stamp: void
targetMethod: HotSpotMethod<FDBigInteger.getNormalizationBias()>
=== Inputs ===
arguments: a314 
=== Succesors ===
=== Usages ===
i317 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a314  <|@  <|@
tid ?1406 <|@
d <@d|@=== Debug Properties ===
bci: 1081
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: true
localsSize: 33
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 711
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - j112 - - i5 - - - i612 i133 i666 i134 i668 i8 i666 - - - - - - - - - a314 - - - - - - - 
=== Succesors ===
=== Usages ===
i317 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - j112 - - i5 - - - i612 i133 i666 i134 i668 i8 i666 - - - - - - - - - a314 - - - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i317 <|@
d <@d|@=== Debug Properties ===
bci: 1081
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:711) [bci: 1081]
polymorphic: false
stamp: i32
targetMethod: Direct#FDBigInteger.getNormalizationBias
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v980 
stateDuring: ?1406 
=== Succesors ===
next: a320 
=== Usages ===
?1409 v981 ?1408 i322 ?325 i327 ?1407 i331 
=== Predecessor ===
v1611 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v980 stateDuring: ?1406 #next: a320  <|@  <|@
tid v981 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:712) [bci: 1090]
returnStamp: a# Lsun/misc/FDBigInteger;
signature: [Ljdk.vm.ci.meta.JavaType;@1ed691ef
stamp: void
targetMethod: HotSpotMethod<FDBigInteger.leftShift(int)>
=== Inputs ===
arguments: a314 i317 
=== Succesors ===
=== Usages ===
a320 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a314 i317  <|@  <|@
tid ?1407 <|@
d <@d|@=== Debug Properties ===
bci: 1090
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: true
localsSize: 33
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 712
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - j112 - - i5 - - - i612 i133 i666 i134 i668 i8 i666 - - - - - - - - - - i317 - - - - - - 
=== Succesors ===
=== Usages ===
a320 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - j112 - - i5 - - - i612 i133 i666 i134 i668 i8 i666 - - - - - - - - - - i317 - - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a320 <|@
d <@d|@=== Debug Properties ===
bci: 1090
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:712) [bci: 1090]
polymorphic: false
stamp: a# Lsun/misc/FDBigInteger;
targetMethod: Direct#FDBigInteger.leftShift
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v981 
stateDuring: ?1407 
=== Succesors ===
next: a324 
=== Usages ===
?1417 ?325 ?1416 ?335 v987 ?1415 ?341 ?347 ?1414 ?368 ?1411 ?1413 ?393 v995 ?1412 ?423 ?1410 ?432 ?732 ?1408 ?1409 
=== Predecessor ===
i317 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v981 stateDuring: ?1407 #next: a324  <|@  <|@
f <@~|@floating>@ <|@
tid i322 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:714) [bci: 1102]
stamp: i32
=== Inputs ===
x: i133 
y: i317 
=== Succesors ===
=== Usages ===
v982 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i133 y: i317  <|@  <|@
tid v982 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Static
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:714) [bci: 1103]
returnStamp: a# Lsun/misc/FDBigInteger;
signature: [Ljdk.vm.ci.meta.JavaType;@2190415b
stamp: void
targetMethod: HotSpotMethod<FDBigInteger.valueOfMulPow52(long, int, int)>
=== Inputs ===
arguments: j112 i666 i322 
=== Succesors ===
=== Usages ===
a324 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: j112 i666 i322  <|@  <|@
tid ?1408 <|@
d <@d|@=== Debug Properties ===
bci: 1103
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: true
localsSize: 33
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 714
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - - - i5 - - - i612 - - i134 i668 i8 i666 - - - - - - - - - a320 i317 - - - - - - 
=== Succesors ===
=== Usages ===
a324 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - - i5 - - - i612 - - i134 i668 i8 i666 - - - - - - - - - a320 i317 - - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a324 <|@
d <@d|@=== Debug Properties ===
bci: 1103
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:714) [bci: 1103]
polymorphic: false
stamp: a# Lsun/misc/FDBigInteger;
targetMethod: Direct#FDBigInteger.valueOfMulPow52
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v982 
stateDuring: ?1408 
=== Succesors ===
next: v1612 
=== Usages ===
a1189 ?1417 ?335 a1189 ?1416 v1612 ?341 v993 ?347 ?1415 ?368 ?432 ?1414 ?393 ?1410 ?732 ?1412 ?1413 ?423 ?1411 v1065 v1011 ?1409 v987 v988 v995 v1087 v1595 v1589 v1590 
=== Predecessor ===
a320 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v982 stateDuring: ?1408 #next: v1612  <|@  <|@
tid ?325 <|@
d <@d|@=== Debug Properties ===
bci: 1106
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: false
localsSize: 33
locksSize: 0
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:714) [bci: 1103]
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 714
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: a1 - - - - i5 - - - i612 - - i134 i668 i8 i666 - - - - - - - - - a320 i317 - - - - - - a1432 
=== Succesors ===
=== Usages ===
v1612 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - - i5 - - - i612 - - i134 i668 i8 i666 - - - - - - - - - a320 i317 - - - - - - a1432  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1612 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?325 
object: a324 
=== Succesors ===
next: a329 
=== Usages ===
=== Predecessor ===
a324 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?325 object: a324 #next: a329  <|@  <|@
f <@~|@floating>@ <|@
tid i327 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:715) [bci: 1118]
stamp: i32
=== Inputs ===
x: i317 
y: i7 
=== Succesors ===
=== Usages ===
v983 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i317 y: i7  <|@  <|@
tid v983 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Static
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:715) [bci: 1119]
returnStamp: a# Lsun/misc/FDBigInteger;
signature: [Ljdk.vm.ci.meta.JavaType;@43f7a62f
stamp: void
targetMethod: HotSpotMethod<FDBigInteger.valueOfPow52(int, int)>
=== Inputs ===
arguments: i676 i327 
=== Succesors ===
=== Usages ===
a329 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: i676 i327  <|@  <|@
tid ?1409 <|@
d <@d|@=== Debug Properties ===
bci: 1119
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: true
localsSize: 33
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 715
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - - - i5 - - - i612 - - i134 i668 - - - - - - - - - - - a320 i317 a324 - - - - - 
=== Succesors ===
=== Usages ===
a329 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - - i5 - - - i612 - - i134 i668 - - - - - - - - - - - a320 i317 a324 - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a329 <|@
d <@d|@=== Debug Properties ===
bci: 1119
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:715) [bci: 1119]
polymorphic: false
stamp: a# Lsun/misc/FDBigInteger;
targetMethod: Direct#FDBigInteger.valueOfPow52
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v983 
stateDuring: ?1409 
=== Succesors ===
next: a334 
=== Usages ===
?1413 ?335 ?1412 v988 ?341 v993 ?347 ?1411 ?368 a392 ?1410 
=== Predecessor ===
v1612 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v983 stateDuring: ?1409 #next: a334  <|@  <|@
f <@~|@floating>@ <|@
tid i331 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:717) [bci: 1132]
stamp: i32
=== Inputs ===
x: i134 
y: i317 
=== Succesors ===
=== Usages ===
i332 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i134 y: i317  <|@  <|@
f <@~|@floating>@ <|@
tid i332 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:717) [bci: 1134]
stamp: i32
=== Inputs ===
x: i331 
y: i7 
=== Succesors ===
=== Usages ===
v984 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i331 y: i7  <|@  <|@
tid v984 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Static
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:717) [bci: 1135]
returnStamp: a# Lsun/misc/FDBigInteger;
signature: [Ljdk.vm.ci.meta.JavaType;@67bf59b6
stamp: void
targetMethod: HotSpotMethod<FDBigInteger.valueOfPow52(int, int)>
=== Inputs ===
arguments: i680 i332 
=== Succesors ===
=== Usages ===
a334 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: i680 i332  <|@  <|@
tid ?1410 <|@
d <@d|@=== Debug Properties ===
bci: 1135
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: true
localsSize: 33
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 717
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - - - i5 - - - i612 - - - - - - - - - - - - - - - a320 - a324 a329 - - - - 
=== Succesors ===
=== Usages ===
a334 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - - i5 - - - i612 - - - - - - - - - - - - - - - a320 - a324 a329 - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a334 <|@
d <@d|@=== Debug Properties ===
bci: 1135
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:717) [bci: 1135]
polymorphic: false
stamp: a# Lsun/misc/FDBigInteger;
targetMethod: Direct#FDBigInteger.valueOfPow52
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v984 
stateDuring: ?1410 
=== Succesors ===
next: v1613 
=== Usages ===
v1011 ?1418 ?341 v1065 ?347 ?1417 ?368 v1091 ?1416 ?393 ?1412 ?732 ?1415 ?423 ?458 v1613 ?432 ?1414 ?1413 ?1411 v993 
=== Predecessor ===
a329 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v984 stateDuring: ?1410 #next: v1613  <|@  <|@
tid ?335 <|@
d <@d|@=== Debug Properties ===
bci: 1138
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: false
localsSize: 33
locksSize: 0
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:717) [bci: 1135]
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 717
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: a1 - - - - i5 - - - i612 - - - - - - - - - - - - - - - a320 - a324 a329 - - - - a1432 
=== Succesors ===
=== Usages ===
v1613 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - - i5 - - - i612 - - - - - - - - - - - - - - - a320 - a324 a329 - - - - a1432  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1613 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?335 
object: a334 
=== Succesors ===
next: i337 
=== Usages ===
=== Predecessor ===
a334 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?335 object: a334 #next: i337  <|@  <|@
tid v987 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:724) [bci: 1147]
returnStamp: i32
signature: [Ljdk.vm.ci.meta.JavaType;@4d4cf547
stamp: void
targetMethod: HotSpotMethod<FDBigInteger.quoRemIteration(FDBigInteger)>
=== Inputs ===
arguments: a324 a320 
=== Succesors ===
=== Usages ===
i337 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a324 a320  <|@  <|@
tid ?1411 <|@
d <@d|@=== Debug Properties ===
bci: 1147
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: true
localsSize: 33
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 724
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - - - i5 - - - i612 - - - - - - - i8 - - - - - - - a320 - a324 a329 a334 - - - 
=== Succesors ===
=== Usages ===
i337 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - - i5 - - - i612 - - - - - - - i8 - - - - - - - a320 - a324 a329 a334 - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i337 <|@
d <@d|@=== Debug Properties ===
bci: 1147
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:724) [bci: 1147]
polymorphic: false
stamp: i32
targetMethod: Direct#FDBigInteger.quoRemIteration
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v987 
stateDuring: ?1411 
=== Succesors ===
next: i340 
=== Usages ===
?1413 ?341 ?347 v352 i358 ?1412 
=== Predecessor ===
v1613 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v987 stateDuring: ?1411 #next: i340  <|@  <|@
tid v988 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:725) [bci: 1156]
returnStamp: i32
signature: [Ljdk.vm.ci.meta.JavaType;@6e75ff2c
stamp: void
targetMethod: HotSpotMethod<FDBigInteger.cmp(FDBigInteger)>
=== Inputs ===
arguments: a324 a329 
=== Succesors ===
=== Usages ===
i340 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a324 a329  <|@  <|@
tid ?1412 <|@
d <@d|@=== Debug Properties ===
bci: 1156
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: true
localsSize: 33
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 725
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - - - i5 - - - i612 - - - - - - - i8 - - - - i337 - - a320 - a324 a329 a334 - - - 
=== Succesors ===
=== Usages ===
i340 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - - i5 - - - i612 - - - - - - - i8 - - - - i337 - - a320 - a324 a329 a334 - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i340 <|@
d <@d|@=== Debug Properties ===
bci: 1156
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:725) [bci: 1156]
polymorphic: false
stamp: i32
targetMethod: Direct#FDBigInteger.cmp
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v988 
stateDuring: ?1412 
=== Succesors ===
next: v1304 
=== Usages ===
?341 v342 
=== Predecessor ===
i337 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v988 stateDuring: ?1412 #next: v1304  <|@  <|@
f <@~|@floating>@ <|@
tid v342 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:725) [bci: 1159]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i340 
y: i8 
=== Succesors ===
=== Usages ===
v1304 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i340 y: i8  <|@  <|@
f <@*|@fixed>@ <|@
tid v1304 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:725) [bci: 1159]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v342 
=== Succesors ===
trueSuccessor: v1303 
falseSuccessor: v1301 
=== Usages ===
=== Predecessor ===
i340 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v342 #trueSuccessor: v1303 #falseSuccessor: v1301  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1303 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:725) [bci: 1159]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1302 
=== Usages ===
=== Predecessor ===
v1304 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1302  <|@  <|@
tid ?341 <|@
d <@d|@=== Debug Properties ===
bci: 1159
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: false
localsSize: 33
locksSize: 0
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:725) [bci: 1156]
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 725
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: a1 - - - - i5 - - - i612 - - - - - - - i8 - - - - i337 - - a320 - a324 a329 a334 - - - i340 
=== Succesors ===
=== Usages ===
v1302 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - - i5 - - - i612 - - - - - - - i8 - - - - i337 - - a320 - a324 a329 a334 - - - i340  <|@  <|@
f <@*|@fixed>@ <|@
tid v1302 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 989
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:725) [bci: 1159]
reason: UnreachedCode
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?341 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1303 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?341  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B97" "B98" 
    xhandlers
    flags 
    probability 4577144435309065000
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1301 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:725) [bci: 1159]
stamp: void
=== Inputs ===
=== Succesors ===
next: i346 
=== Usages ===
=== Predecessor ===
v1304 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i346  <|@  <|@
tid v993 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:726) [bci: 1175]
returnStamp: i32
signature: [Ljdk.vm.ci.meta.JavaType;@104dfa13
stamp: void
targetMethod: HotSpotMethod<FDBigInteger.addAndCmp(FDBigInteger, FDBigInteger)>
=== Inputs ===
arguments: a334 a324 a329 
=== Succesors ===
=== Usages ===
i346 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a334 a324 a329  <|@  <|@
tid ?1413 <|@
d <@d|@=== Debug Properties ===
bci: 1175
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: true
localsSize: 33
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 726
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - - - i5 - - - i612 - - - - - - - i8 i8 - - - i337 - - a320 - a324 a329 a334 - - - 
=== Succesors ===
=== Usages ===
i346 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - - i5 - - - i612 - - - - - - - i8 i8 - - - i337 - - a320 - a324 a329 a334 - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i346 <|@
d <@d|@=== Debug Properties ===
bci: 1175
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:726) [bci: 1175]
polymorphic: false
stamp: i32
targetMethod: Direct#FDBigInteger.addAndCmp
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v993 
stateDuring: ?1413 
=== Succesors ===
next: v1308 
=== Usages ===
?347 v348 
=== Predecessor ===
v1301 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v993 stateDuring: ?1413 #next: v1308  <|@  <|@
tid ?347 <|@
d <@d|@=== Debug Properties ===
bci: 1178
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: false
localsSize: 33
locksSize: 0
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:726) [bci: 1175]
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 726
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: a1 - - - - i5 - - - i612 - - - - - - - i8 i8 - - - i337 - - a320 - a324 a329 a334 - - - i346 
=== Succesors ===
=== Usages ===
v1461 i1559 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - - i5 - - - i612 - - - - - - - i8 i8 - - - i337 - - a320 - a324 a329 a334 - - - i346  <|@  <|@
f <@~|@floating>@ <|@
tid v348 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:726) [bci: 1178]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i346 
y: i7 
=== Succesors ===
=== Usages ===
v1308 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i346 y: i7  <|@  <|@
f <@*|@fixed>@ <|@
tid v1308 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:726) [bci: 1178]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v348 
=== Succesors ===
trueSuccessor: v1307 
falseSuccessor: v1305 
=== Usages ===
=== Predecessor ===
i346 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v348 #trueSuccessor: v1307 #falseSuccessor: v1305  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B96" 
    successors "B102" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1307 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:726) [bci: 1178]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1457 
=== Usages ===
=== Predecessor ===
v1308 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1457  <|@  <|@
f <@~|@floating>@ <|@
tid i1458 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -254483
stableDimension: 0
stamp: i32 [-254483] ⇊00000000fffc1ded ⇈00000000fffc1ded
stampKind: i32
value: int[-254483|0xfffffffffffc1ded]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1459 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1457 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1456 
=== Predecessor ===
v1307 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B96" 
    successors "B99" "B100" 
    xhandlers
    flags 
    probability 4577144435309065000
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1305 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:726) [bci: 1178]
stamp: void
=== Inputs ===
=== Succesors ===
next: v355 
=== Usages ===
=== Predecessor ===
v1308 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v355  <|@  <|@
f <@~|@floating>@ <|@
tid v352 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:729) [bci: 1213]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i337 
y: i8 
=== Succesors ===
=== Usages ===
v355 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i337 y: i8  <|@  <|@
f <@*|@fixed>@ <|@
tid v355 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:729) [bci: 1213]
stamp: void
trueSuccessorProbability: 0.11184606133493691
=== Inputs ===
condition: v352 
=== Succesors ===
trueSuccessor: v353 
falseSuccessor: v354 
=== Usages ===
=== Predecessor ===
v1305 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v352 #trueSuccessor: v353 #falseSuccessor: v354  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B98" 
    successors "B104" 
    xhandlers
    flags 
    probability 4563003214077343158
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v353 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:729) [bci: 1216]
stamp: void
=== Inputs ===
=== Succesors ===
next: v363 
=== Usages ===
=== Predecessor ===
v355 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v363  <|@  <|@
f <@~|@floating>@ <|@
tid i1534 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:670) [bci: 867]
stamp: i32
=== Inputs ===
x: i612 
y: i17 
=== Succesors ===
=== Usages ===
i366 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i612 y: i17  <|@  <|@
f <@*|@fixed>@ <|@
tid v363 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:741) [bci: 1243]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v364 
=== Predecessor ===
v353 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B98" 
    successors "B101" "B103" 
    xhandlers
    flags 
    probability 4576474386411764849
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v354 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:733) [bci: 1227]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1558 
=== Usages ===
=== Predecessor ===
v355 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1558  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1558 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FloatingDecimal$BinaryToASCIIBuffer.digits
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:733) [bci: 1228]
nullCheck: false
stamp: n# [C
=== Inputs ===
stateBefore: - 
guard: - 
address: v1585 
=== Succesors ===
next: i1559 
=== Usages ===
v1604 v1603 
=== Predecessor ===
v354 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1585 #next: i1559  <|@  <|@
f <@~|@floating>@ <|@
tid v1603 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1558 
=== Succesors ===
=== Usages ===
i1559 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1558  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1559 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:733) [bci: 1242]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?347 
guard: - 
address: v1603 
=== Succesors ===
next: v1316 
=== Usages ===
v1100 
=== Predecessor ===
a1558 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?347 guard: - address: v1603 #next: v1316  <|@  <|@
f <@~|@floating>@ <|@
tid v1100 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:733) [bci: 1242]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1559 
y: i8 
=== Succesors ===
=== Usages ===
v1316 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i1559 y: i8  <|@  <|@
f <@*|@fixed>@ <|@
tid v1316 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:733) [bci: 1242]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v1100 
=== Succesors ===
trueSuccessor: v1315 
falseSuccessor: v1313 
=== Usages ===
=== Predecessor ===
i1559 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1100 #trueSuccessor: v1315 #falseSuccessor: v1313  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B102" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1315 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:733) [bci: 1242]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1464 
=== Usages ===
=== Predecessor ===
v1316 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1464  <|@  <|@
f <@~|@floating>@ <|@
tid i1465 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -291867
stableDimension: 0
stamp: i32 [-291867] ⇊00000000fffb8be5 ⇈00000000fffb8be5
stampKind: i32
value: int[-291867|0xfffffffffffb8be5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1459 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1464 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1456 
=== Predecessor ===
v1315 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B97" "B101" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1459 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-291867 - -254483] ⇊00000000fff801e5 ⇈00000000ffffbffd
valueDescription: i32
=== Inputs ===
merge: v1456 
values: i1458 i1465 
=== Succesors ===
=== Usages ===
v1461 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1456 values: i1458 i1465  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1456 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1457 v1464 
=== Succesors ===
next: v1461 
=== Usages ===
i1459 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1457 v1464 #next: v1461  <|@  <|@
f <@*|@fixed>@ <|@
tid v1461 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?347 
actionAndReason: i1459 
speculation: a1432 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1456 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?347 actionAndReason: i1459 speculation: a1432  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B104" 
    xhandlers
    flags 
    probability 4576474386411764849
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1313 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:733) [bci: 1242]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1105 
=== Usages ===
v1105 
=== Predecessor ===
v1316 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1105  <|@  <|@
f <@~|@floating>@ <|@
tid v1604 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1558 
=== Succesors ===
=== Usages ===
v1105 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1558  <|@  <|@
f <@~|@floating>@ <|@
tid i358 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:733) [bci: 1240]
stamp: i32
=== Inputs ===
x: i337 
y: i200 
=== Succesors ===
=== Usages ===
i359 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i337 y: i200  <|@  <|@
f <@~|@floating>@ <|@
tid i359 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 32
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:733) [bci: 1241]
resultBits: 16
stamp: i16
=== Inputs ===
value: i358 
=== Succesors ===
=== Usages ===
v1105 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i358  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1105 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:733) [bci: 1242]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1313 
address: v1604 
value: i359 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v365 
=== Usages ===
=== Predecessor ===
v1313 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1313 address: v1604 value: i359 stateAfter: - lastLocationAccess: - #next: v365  <|@  <|@
f <@*|@fixed>@ <|@
tid v365 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:741) [bci: 1243]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v364 
=== Predecessor ===
v1105 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B99" "B103" 
    successors "B105" "B106" 
    xhandlers
    flags 
    probability 4577144435309065000
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i366 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:741) [bci: 1243]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v364 
values: i1534 i612 
=== Succesors ===
=== Usages ===
?368 v372 v379 i483 ?1420 ?393 ?732 ?474 ?1419 ?423 ?1415 ?432 ?1418 ?1417 ?458 ?1416 ?1414 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v364 values: i1534 i612  <|@  <|@
f <@~|@floating>@ <|@
tid i367 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:741) [bci: 1243]
stamp: i32 [0 - 1] ⇈0000000000000001
valueDescription: i32
=== Inputs ===
merge: v364 
values: i8 i7 
=== Succesors ===
=== Usages ===
?368 i389 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v364 values: i8 i7  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v364 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:741) [bci: 1243]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v363 v365 
=== Succesors ===
next: v371 
=== Usages ===
i366 i367 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v363 v365 #next: v371  <|@  <|@
f <@*|@fixed>@ <|@
tid v371 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:741) [bci: 1245]
stamp: void
trueSuccessorProbability: 0.057125676488274206
=== Inputs ===
condition: v212 
=== Succesors ===
trueSuccessor: v369 
falseSuccessor: v370 
=== Usages ===
=== Predecessor ===
v364 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v212 #trueSuccessor: v369 #falseSuccessor: v370  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B110" 
    xhandlers
    flags 
    probability 4558614891679615696
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v369 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:742) [bci: 1262]
stamp: void
=== Inputs ===
=== Succesors ===
next: v385 
=== Usages ===
=== Predecessor ===
v371 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v385  <|@  <|@
f <@*|@fixed>@ <|@
tid v385 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:744) [bci: 1268]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v384 
=== Predecessor ===
v369 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B107" "B108" 
    xhandlers
    flags 
    probability 4576802206033562235
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v370 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:741) [bci: 1248]
stamp: void
=== Inputs ===
=== Succesors ===
next: v378 
=== Usages ===
=== Predecessor ===
v371 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v378  <|@  <|@
f <@~|@floating>@ <|@
tid v372 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:741) [bci: 1252]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i366 
y: i216 
=== Succesors ===
=== Usages ===
v378 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i366 y: i216  <|@  <|@
f <@*|@fixed>@ <|@
tid v378 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:741) [bci: 1252]
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v372 
=== Succesors ===
trueSuccessor: v377 
falseSuccessor: v376 
=== Usages ===
=== Predecessor ===
v370 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v372 #trueSuccessor: v377 #falseSuccessor: v376  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B106" 
    successors "B110" 
    xhandlers
    flags 
    probability 4567795006778821243
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v377 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:742) [bci: 1262]
stamp: void
=== Inputs ===
=== Succesors ===
next: v531 
=== Usages ===
=== Predecessor ===
v378 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v531  <|@  <|@
f <@*|@fixed>@ <|@
tid v531 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:742) [bci: 1262]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v384 
=== Predecessor ===
v377 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B106" 
    successors "B109" "B152" 
    xhandlers
    flags 
    probability 4575122898532446136
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v376 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:741) [bci: 1255]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1320 
=== Usages ===
=== Predecessor ===
v378 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1320  <|@  <|@
f <@~|@floating>@ <|@
tid v379 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:741) [bci: 1259]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i366 
y: i219 
=== Succesors ===
=== Usages ===
v1320 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i366 y: i219  <|@  <|@
f <@*|@fixed>@ <|@
tid v1320 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:741) [bci: 1259]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v379 
=== Succesors ===
trueSuccessor: v1317 
falseSuccessor: v1319 
=== Usages ===
=== Predecessor ===
v376 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v379 #trueSuccessor: v1317 #falseSuccessor: v1319  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B110" 
    xhandlers
    flags 
    probability 4575122898532446136
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1317 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:741) [bci: 1259]
stamp: void
=== Inputs ===
=== Succesors ===
next: v383 
=== Usages ===
=== Predecessor ===
v1320 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v383  <|@  <|@
f <@*|@fixed>@ <|@
tid v383 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:744) [bci: 1268]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v384 
=== Predecessor ===
v1317 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B109" "B105" "B107" 
    successors "B111" 
    xhandlers
    flags 
    probability 4577144435309065000
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v384 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:744) [bci: 1268]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v383 v385 v531 
=== Succesors ===
next: v387 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v383 v385 v531 #next: v387  <|@  <|@
f <@~|@floating>@ <|@
tid v1595 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a324 
index: - 
=== Succesors ===
=== Usages ===
a1566 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a324 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v1590 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a324 
index: - 
=== Succesors ===
=== Usages ===
i1563 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a324 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v1589 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a324 
index: - 
=== Succesors ===
=== Usages ===
i1562 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a324 index: -  <|@  <|@
tid v995 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:745) [bci: 1282]
returnStamp: i32
signature: [Ljdk.vm.ci.meta.JavaType;@d226345
stamp: void
targetMethod: HotSpotMethod<FDBigInteger.quoRemIteration(FDBigInteger)>
=== Inputs ===
arguments: a324 a320 
=== Succesors ===
=== Usages ===
i418 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a324 a320  <|@  <|@
f <@*|@fixed>@ <|@
tid v387 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:744) [bci: 1268]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v388 
=== Predecessor ===
v384 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B110" "B115" "B128" 
    successors "B112" "B134" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4595485752836987786
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i389 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v388 
values: i367 i437 i437 
=== Succesors ===
=== Usages ===
?393 ?1416 ?474 ?1420 ?423 v1602 ?432 i437 v1594 ?732 v1019 v1073 ?1419 ?458 ?1418 i484 ?1417 ?1414 ?1415 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v388 values: i367 i437 i437  <|@  <|@
f <@~|@floating>@ <|@
tid i390 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 1] ⇈0000000000000001
valueDescription: i32
=== Inputs ===
merge: v388 
values: i8 i8 i730 
=== Succesors ===
=== Usages ===
?1419 v394 ?474 i485 ?1420 ?1418 ?458 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v388 values: i8 i8 i730  <|@  <|@
f <@~|@floating>@ <|@
tid i391 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 1] ⇈0000000000000001
valueDescription: i32
=== Inputs ===
merge: v388 
values: i8 i434 i734 
=== Succesors ===
=== Usages ===
?1419 i486 v403 ?474 ?1420 ?1418 ?458 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v388 values: i8 i434 i734  <|@  <|@
f <@~|@floating>@ <|@
tid a392 <|@
d <@d|@=== Debug Properties ===
stamp: a# Lsun/misc/FDBigInteger;
valueDescription: a -
=== Inputs ===
merge: v388 
values: a329 a422 a422 
=== Succesors ===
=== Usages ===
v1614 ?1414 v999 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v388 values: a329 a422 a422  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v388 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: true
inversionCount: 0
loopFrequency: 16.873120865904998
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 2
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:744) [bci: 1268]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v387 
=== Succesors ===
next: v402 
=== Usages ===
i389 i390 i391 a392 v397 v408 v443 v723 v1389 v1364 v1374 v1339 v1344 v1349 v1354 v1379 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v387 #next: v402  <|@  <|@
f <@~|@floating>@ <|@
tid v403 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:744) [bci: 1275]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i391 
y: i8 
=== Succesors ===
=== Usages ===
v416 v448 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i391 y: i8  <|@  <|@
f <@~|@floating>@ <|@
tid v394 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:744) [bci: 1270]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i390 
y: i8 
=== Succesors ===
=== Usages ===
v402 v455 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i390 y: i8  <|@  <|@
f <@*|@fixed>@ <|@
tid v402 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:744) [bci: 1270]
stamp: void
trueSuccessorProbability: 0.9453314326443336
=== Inputs ===
condition: v394 
=== Succesors ===
trueSuccessor: v395 
falseSuccessor: v397 
=== Usages ===
=== Predecessor ===
v388 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v394 #trueSuccessor: v395 #falseSuccessor: v397  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B113" "B133" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4595140371449736969
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v395 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:744) [bci: 1273]
stamp: void
=== Inputs ===
=== Succesors ===
next: v416 
=== Usages ===
=== Predecessor ===
v402 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v416  <|@  <|@
f <@*|@fixed>@ <|@
tid v416 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:744) [bci: 1275]
stamp: void
trueSuccessorProbability: 0.9951368468672246
=== Inputs ===
condition: v403 
=== Succesors ===
trueSuccessor: v404 
falseSuccessor: v408 
=== Usages ===
=== Predecessor ===
v395 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v403 #trueSuccessor: v404 #falseSuccessor: v408  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B112" 
    successors "B114" "B117" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4595111326991487063
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v404 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:745) [bci: 1278]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1614 
=== Usages ===
=== Predecessor ===
v416 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1614  <|@  <|@
tid ?393 <|@
d <@d|@=== Debug Properties ===
bci: 1268
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: false
localsSize: 33
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 744
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - - - - - - - i366 - - - - - - - i389 i8 i8 - - - - - a320 - a324 a1432 a334 - - - 
=== Succesors ===
=== Usages ===
v1614 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - - - - - - i366 - - - - - - - i389 i8 i8 - - - - - a320 - a324 a1432 a334 - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1614 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?393 
object: a392 
=== Succesors ===
next: i418 
=== Usages ===
=== Predecessor ===
v404 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?393 object: a392 #next: i418  <|@  <|@
tid ?1414 <|@
d <@d|@=== Debug Properties ===
bci: 1282
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: true
localsSize: 33
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 745
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - - - - - - - i366 - - - - - - - i389 - - - - - - - a320 - a324 a392 a334 - - - 
=== Succesors ===
=== Usages ===
i418 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - - - - - - i366 - - - - - - - i389 - - - - - - - a320 - a324 a392 a334 - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i418 <|@
d <@d|@=== Debug Properties ===
bci: 1282
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:745) [bci: 1282]
polymorphic: false
stamp: i32
targetMethod: Direct#FDBigInteger.quoRemIteration
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v995 
stateDuring: ?1414 
=== Succesors ===
next: a422 
=== Usages ===
?1417 ?423 ?1415 ?432 i438 ?1416 ?732 
=== Predecessor ===
v1614 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v995 stateDuring: ?1414 #next: a422  <|@  <|@
tid v999 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:747) [bci: 1312]
returnStamp: a# Lsun/misc/FDBigInteger;
signature: [Ljdk.vm.ci.meta.JavaType;@27ee496b
stamp: void
targetMethod: HotSpotMethod<FDBigInteger.multBy10()>
=== Inputs ===
arguments: a392 
=== Succesors ===
=== Usages ===
a422 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a392  <|@  <|@
tid ?1415 <|@
d <@d|@=== Debug Properties ===
bci: 1312
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: true
localsSize: 33
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 747
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - - - - - - - i366 - - - - - - - i389 - - - - i418 - - a320 - a324 - a334 - - - 
=== Succesors ===
=== Usages ===
a422 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - - - - - - i366 - - - - - - - i389 - - - - i418 - - a320 - a324 - a334 - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a422 <|@
d <@d|@=== Debug Properties ===
bci: 1312
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:747) [bci: 1312]
polymorphic: false
stamp: a# Lsun/misc/FDBigInteger;
targetMethod: Direct#FDBigInteger.multBy10
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v999 
stateDuring: ?1415 
=== Succesors ===
next: i1560 
=== Usages ===
?423 a392 a392 v1011 ?432 ?1417 v1065 v1598 v1592 ?732 ?1416 v1591 
=== Predecessor ===
i418 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v999 stateDuring: ?1415 #next: i1560  <|@  <|@
tid ?423 <|@
d <@d|@=== Debug Properties ===
bci: 1315
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: false
localsSize: 33
locksSize: 0
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:747) [bci: 1312]
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 747
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: a1 - - - - - - - - i366 - - - - - - - i389 - - - - i418 - - a320 - a324 - a334 - - - a422 
=== Succesors ===
=== Usages ===
v1471 i1560 i1567 i1569 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - - - - - - i366 - - - - - - - i389 - - - - i418 - - a320 - a324 - a334 - - - a422  <|@  <|@
f <@~|@floating>@ <|@
tid v1592 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a422 
index: - 
=== Succesors ===
=== Usages ===
i1560 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a422 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1560 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FDBigInteger.offset
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:949) [bci: 15]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
nullCheck: true
stamp: i32
=== Inputs ===
stateBefore: ?423 
guard: - 
address: v1592 
=== Succesors ===
next: i1561 
=== Usages ===
i633 
=== Predecessor ===
a422 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?423 guard: - address: v1592 #next: i1561  <|@  <|@
f <@~|@floating>@ <|@
tid v1591 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a422 
index: - 
=== Succesors ===
=== Usages ===
i1561 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a422 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1561 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FDBigInteger.nWords
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:949) [bci: 11]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1591 
=== Succesors ===
next: i1562 
=== Usages ===
i633 v645 i651 
=== Predecessor ===
i1560 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1591 #next: i1562  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1562 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FDBigInteger.nWords
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:948) [bci: 1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1589 
=== Succesors ===
next: i1563 
=== Usages ===
i630 v643 i648 
=== Predecessor ===
i1561 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1589 #next: i1563  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1563 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FDBigInteger.offset
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:948) [bci: 5]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1590 
=== Succesors ===
next: v637 
=== Usages ===
i630 
=== Predecessor ===
i1562 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1590 #next: v637  <|@  <|@
f <@~|@floating>@ <|@
tid i633 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:949) [bci: 18]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: i32
=== Inputs ===
x: i1560 
y: i1561 
=== Succesors ===
=== Usages ===
v634 v639 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1560 y: i1561  <|@  <|@
f <@~|@floating>@ <|@
tid i630 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:948) [bci: 8]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: i32
=== Inputs ===
x: i1562 
y: i1563 
=== Succesors ===
=== Usages ===
v634 v639 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1562 y: i1563  <|@  <|@
f <@~|@floating>@ <|@
tid v634 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:950) [bci: 22]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i633 
y: i630 
=== Succesors ===
=== Usages ===
v637 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i633 y: i630  <|@  <|@
f <@~|@floating>@ <|@
tid i438 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:750) [bci: 1366]
stamp: i32
=== Inputs ===
x: i418 
y: i200 
=== Succesors ===
=== Usages ===
i439 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i418 y: i200  <|@  <|@
f <@~|@floating>@ <|@
tid i439 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 32
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:750) [bci: 1367]
resultBits: 16
stamp: i16
=== Inputs ===
value: i438 
=== Succesors ===
=== Usages ===
v1080 v1027 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i438  <|@  <|@
f <@~|@floating>@ <|@
tid i437 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:750) [bci: 1359]
stamp: i32
=== Inputs ===
x: i389 
y: i7 
=== Succesors ===
=== Usages ===
i389 i389 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i389 y: i7  <|@  <|@
f <@*|@fixed>@ <|@
tid v637 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:950) [bci: 22]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: void
trueSuccessorProbability: 0.2175262580341747
=== Inputs ===
condition: v634 
=== Succesors ===
trueSuccessor: v635 
falseSuccessor: v636 
=== Usages ===
=== Predecessor ===
i1563 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v634 #trueSuccessor: v635 #falseSuccessor: v636  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B113" 
    successors "B115" "B116" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4585332122103824215
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v635 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:951) [bci: 25]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: void
=== Inputs ===
=== Succesors ===
next: i431 
=== Usages ===
=== Predecessor ===
v637 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i431  <|@  <|@
tid v1011 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:749) [bci: 1340]
returnStamp: i32
signature: [Ljdk.vm.ci.meta.JavaType;@66235e25
stamp: void
targetMethod: HotSpotMethod<FDBigInteger.addAndCmp(FDBigInteger, FDBigInteger)>
=== Inputs ===
arguments: a334 a324 a422 
=== Succesors ===
=== Usages ===
i431 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a334 a324 a422  <|@  <|@
tid ?1416 <|@
d <@d|@=== Debug Properties ===
bci: 1340
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: true
localsSize: 33
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 749
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - - - - - - - i366 - - - - - - - i389 i8 - - - i418 - - a320 - a324 a422 a334 - - - 
=== Succesors ===
=== Usages ===
i431 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - - - - - - i366 - - - - - - - i389 i8 - - - i418 - - a320 - a324 a422 a334 - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i431 <|@
d <@d|@=== Debug Properties ===
bci: 1340
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:749) [bci: 1340]
polymorphic: false
stamp: i32
targetMethod: Direct#FDBigInteger.addAndCmp
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1011 
stateDuring: ?1416 
=== Succesors ===
next: a1564 
=== Usages ===
?432 v433 
=== Predecessor ===
v635 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1011 stateDuring: ?1416 #next: a1564  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1564 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FloatingDecimal$BinaryToASCIIBuffer.digits
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:750) [bci: 1354]
nullCheck: false
stamp: n# [C
=== Inputs ===
stateBefore: - 
guard: - 
address: v1585 
=== Succesors ===
next: i1565 
=== Usages ===
a1013 v1593 
=== Predecessor ===
i431 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1585 #next: i1565  <|@  <|@
tid ?432 <|@
d <@d|@=== Debug Properties ===
bci: 1343
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: false
localsSize: 33
locksSize: 0
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:749) [bci: 1340]
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 749
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: a1 - - - - - - - - i366 - - - - - - - i389 i8 - - - i418 - - a320 - a324 a422 a334 - - - i431 
=== Succesors ===
=== Usages ===
v1493 i1565 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - - - - - - i366 - - - - - - - i389 i8 - - - i418 - - a320 - a324 a422 a334 - - - i431  <|@  <|@
f <@~|@floating>@ <|@
tid v1593 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1564 
=== Succesors ===
=== Usages ===
i1565 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1564  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1565 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:750) [bci: 1368]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?432 
guard: - 
address: v1593 
=== Succesors ===
next: v1340 
=== Usages ===
v1019 
=== Predecessor ===
a1564 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?432 guard: - address: v1593 #next: v1340  <|@  <|@
f <@~|@floating>@ <|@
tid v1019 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:750) [bci: 1368]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i389 
y: i1565 
=== Succesors ===
=== Usages ===
v1340 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i389 y: i1565  <|@  <|@
f <@*|@fixed>@ <|@
tid v1340 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:750) [bci: 1368]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1019 
=== Succesors ===
trueSuccessor: v1336 
falseSuccessor: v1339 
=== Usages ===
=== Predecessor ===
i1565 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1019 #trueSuccessor: v1336 #falseSuccessor: v1339  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors "B111" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4585332122103824215
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1336 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:750) [bci: 1368]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1027 
=== Usages ===
v1027 
=== Predecessor ===
v1340 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1027  <|@  <|@
f <@~|@floating>@ <|@
tid a1013 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:750) [bci: 1354]
op: Uncompress
stamp: a# [C
=== Inputs ===
value: a1564 
=== Succesors ===
=== Usages ===
v1594 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1564  <|@  <|@
f <@~|@floating>@ <|@
tid v1594 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a1013 
index: i389 
=== Succesors ===
=== Usages ===
v1027 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1013 index: i389  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1027 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:750) [bci: 1368]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1336 
address: v1594 
value: i439 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v443 
=== Usages ===
=== Predecessor ===
v1336 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1336 address: v1594 value: i439 stateAfter: - lastLocationAccess: - #next: v443  <|@  <|@
f <@~|@floating>@ <|@
tid v433 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:749) [bci: 1343]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i431 
y: i7 
=== Succesors ===
=== Usages ===
i434 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i431 y: i7  <|@  <|@
f <@~|@floating>@ <|@
tid i434 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:749) [bci: 1343]
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
condition: v433 
trueValue: i7 
falseValue: i8 
=== Succesors ===
=== Usages ===
i391 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v433 trueValue: i7 falseValue: i8  <|@  <|@
f <@*|@fixed>@ <|@
tid v443 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:744) [bci: 1268]
stamp: void
=== Inputs ===
loopBegin: v388 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1027 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v388  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1339 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:750) [bci: 1368]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v388 
=== Succesors ===
next: v1493 
=== Usages ===
=== Predecessor ===
v1340 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v388 #next: v1493  <|@  <|@
f <@~|@floating>@ <|@
tid i1495 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -261147
stableDimension: 0
stamp: i32 [-261147] ⇊00000000fffc03e5 ⇈00000000fffc03e5
stampKind: i32
value: int[-261147|0xfffffffffffc03e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1493 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1493 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?432 
actionAndReason: i1495 
speculation: a1432 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1339 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?432 actionAndReason: i1495 speculation: a1432  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B113" 
    successors "B118" "B119" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4593818501724479617
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v636 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:952) [bci: 27]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1345 
=== Usages ===
=== Predecessor ===
v637 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1345  <|@  <|@
f <@~|@floating>@ <|@
tid v639 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:952) [bci: 29]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i630 
y: i633 
=== Succesors ===
=== Usages ===
v1345 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i630 y: i633  <|@  <|@
f <@*|@fixed>@ <|@
tid v1345 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:952) [bci: 29]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v639 
=== Succesors ===
trueSuccessor: v1344 
falseSuccessor: v1341 
=== Usages ===
=== Predecessor ===
v636 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v639 #trueSuccessor: v1344 #falseSuccessor: v1341  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B117" 
    successors "B132" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1344 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:952) [bci: 29]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v388 
=== Succesors ===
next: v1472 
=== Usages ===
=== Predecessor ===
v1345 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v388 #next: v1472  <|@  <|@
f <@~|@floating>@ <|@
tid i1473 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -263187
stableDimension: 0
stamp: i32 [-263187] ⇊00000000fffbfbed ⇈00000000fffbfbed
stampKind: i32
value: int[-263187|0xfffffffffffbfbed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1469 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1472 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1466 
=== Predecessor ===
v1344 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B117" 
    successors "B120" "B121" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4593818501724479617
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1341 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:952) [bci: 29]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1350 
=== Usages ===
=== Predecessor ===
v1345 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1350  <|@  <|@
f <@~|@floating>@ <|@
tid v643 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:957) [bci: 48]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1562 
y: i7 
=== Succesors ===
=== Usages ===
v1350 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1562 y: i7  <|@  <|@
f <@*|@fixed>@ <|@
tid v1350 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:957) [bci: 48]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v643 
=== Succesors ===
trueSuccessor: v1349 
falseSuccessor: v1346 
=== Usages ===
=== Predecessor ===
v1341 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v643 #trueSuccessor: v1349 #falseSuccessor: v1346  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B119" 
    successors "B132" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1349 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:957) [bci: 48]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v388 
=== Succesors ===
next: v1474 
=== Usages ===
=== Predecessor ===
v1350 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v388 #next: v1474  <|@  <|@
f <@~|@floating>@ <|@
tid i1475 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -263443
stableDimension: 0
stamp: i32 [-263443] ⇊00000000fffbfaed ⇈00000000fffbfaed
stampKind: i32
value: int[-263443|0xfffffffffffbfaed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1469 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1474 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1466 
=== Predecessor ===
v1349 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B119" 
    successors "B122" "B123" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4593818501724479617
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1346 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:957) [bci: 48]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1355 
=== Usages ===
=== Predecessor ===
v1350 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1355  <|@  <|@
f <@~|@floating>@ <|@
tid v645 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:957) [bci: 53]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1561 
y: i7 
=== Succesors ===
=== Usages ===
v1355 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1561 y: i7  <|@  <|@
f <@*|@fixed>@ <|@
tid v1355 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:957) [bci: 53]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v645 
=== Succesors ===
trueSuccessor: v1354 
falseSuccessor: v1351 
=== Usages ===
=== Predecessor ===
v1346 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v645 #trueSuccessor: v1354 #falseSuccessor: v1351  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B121" 
    successors "B132" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1354 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:957) [bci: 53]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v388 
=== Succesors ===
next: v1476 
=== Usages ===
=== Predecessor ===
v1355 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v388 #next: v1476  <|@  <|@
f <@~|@floating>@ <|@
tid i1477 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -263699
stableDimension: 0
stamp: i32 [-263699] ⇊00000000fffbf9ed ⇈00000000fffbf9ed
stampKind: i32
value: int[-263699|0xfffffffffffbf9ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1469 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1476 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1466 
=== Predecessor ===
v1354 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B123"
    from_bci -1
    to_bci -1
    predecessors "B121" 
    successors "B124" "B131" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4593818501724479617
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1351 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:957) [bci: 53]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1566 
=== Usages ===
=== Predecessor ===
v1355 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1566  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1566 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FDBigInteger.data
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:958) [bci: 57]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
nullCheck: false
stamp: n# [I
=== Inputs ===
stateBefore: - 
guard: - 
address: v1595 
=== Succesors ===
next: i1567 
=== Usages ===
a1034 v1596 
=== Predecessor ===
v1351 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1595 #next: i1567  <|@  <|@
f <@~|@floating>@ <|@
tid v1596 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1566 
=== Succesors ===
=== Usages ===
i1567 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1566  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1567 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:958) [bci: 65]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?423 
guard: - 
address: v1596 
=== Succesors ===
next: v1365 
=== Usages ===
v1040 
=== Predecessor ===
a1566 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?423 guard: - address: v1596 #next: v1365  <|@  <|@
f <@~|@floating>@ <|@
tid i648 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:958) [bci: 60]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: i32
=== Inputs ===
x: i1562 
y: i17 
=== Succesors ===
=== Usages ===
v1597 v1040 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1562 y: i17  <|@  <|@
f <@~|@floating>@ <|@
tid v1040 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:958) [bci: 65]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i648 
y: i1567 
=== Succesors ===
=== Usages ===
v1365 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i648 y: i1567  <|@  <|@
f <@*|@fixed>@ <|@
tid v1365 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:958) [bci: 65]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1040 
=== Succesors ===
trueSuccessor: v1361 
falseSuccessor: v1364 
=== Usages ===
=== Predecessor ===
i1567 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1040 #trueSuccessor: v1361 #falseSuccessor: v1364  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B124"
    from_bci -1
    to_bci -1
    predecessors "B123" 
    successors "B125" "B130" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4593818501724479617
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1361 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:958) [bci: 65]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1568 
=== Usages ===
i1570 
=== Predecessor ===
v1365 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1568  <|@  <|@
f <@~|@floating>@ <|@
tid v1598 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a422 
index: - 
=== Succesors ===
=== Usages ===
a1568 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a422 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1568 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FDBigInteger.data
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:959) [bci: 69]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
nullCheck: false
stamp: n# [I
=== Inputs ===
stateBefore: - 
guard: - 
address: v1598 
=== Succesors ===
next: i1569 
=== Usages ===
a1050 v1599 
=== Predecessor ===
v1361 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1598 #next: i1569  <|@  <|@
f <@~|@floating>@ <|@
tid v1599 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1568 
=== Succesors ===
=== Usages ===
i1569 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1568  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1569 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:959) [bci: 77]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?423 
guard: - 
address: v1599 
=== Succesors ===
next: v1375 
=== Usages ===
v1056 
=== Predecessor ===
a1568 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?423 guard: - address: v1599 #next: v1375  <|@  <|@
f <@~|@floating>@ <|@
tid i651 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:959) [bci: 72]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: i32
=== Inputs ===
x: i1561 
y: i17 
=== Succesors ===
=== Usages ===
v1600 v1056 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1561 y: i17  <|@  <|@
f <@~|@floating>@ <|@
tid v1056 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:959) [bci: 77]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i651 
y: i1569 
=== Succesors ===
=== Usages ===
v1375 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i651 y: i1569  <|@  <|@
f <@*|@fixed>@ <|@
tid v1375 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:959) [bci: 77]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1056 
=== Succesors ===
trueSuccessor: v1371 
falseSuccessor: v1374 
=== Usages ===
=== Predecessor ===
i1569 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1056 #trueSuccessor: v1371 #falseSuccessor: v1374  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B125"
    from_bci -1
    to_bci -1
    predecessors "B124" 
    successors "B126" "B127" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4593818501724479617
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1371 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:959) [bci: 77]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1570 
=== Usages ===
i1571 
=== Predecessor ===
v1375 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1570  <|@  <|@
f <@~|@floating>@ <|@
tid a1034 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:958) [bci: 57]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
op: Uncompress
stamp: a# [I
=== Inputs ===
value: a1566 
=== Succesors ===
=== Usages ===
v1597 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1566  <|@  <|@
f <@~|@floating>@ <|@
tid v1597 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a1034 
index: i648 
=== Succesors ===
=== Usages ===
i1570 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1034 index: i648  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1570 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:958) [bci: 65]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v1361 
address: v1597 
=== Succesors ===
next: i1571 
=== Usages ===
v653 v656 
=== Predecessor ===
v1371 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1361 address: v1597 #next: i1571  <|@  <|@
f <@~|@floating>@ <|@
tid a1050 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:959) [bci: 69]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
op: Uncompress
stamp: a# [I
=== Inputs ===
value: a1568 
=== Succesors ===
=== Usages ===
v1600 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1568  <|@  <|@
f <@~|@floating>@ <|@
tid v1600 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a1050 
index: i651 
=== Succesors ===
=== Usages ===
i1571 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1050 index: i651  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1571 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:959) [bci: 77]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v1371 
address: v1600 
=== Succesors ===
next: v1380 
=== Usages ===
v653 v656 
=== Predecessor ===
i1570 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1371 address: v1600 #next: v1380  <|@  <|@
f <@~|@floating>@ <|@
tid v653 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:960) [bci: 84]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1570 
y: i1571 
=== Succesors ===
=== Usages ===
v1380 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i1570 y: i1571  <|@  <|@
f <@*|@fixed>@ <|@
tid v1380 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:960) [bci: 84]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v653 
=== Succesors ===
trueSuccessor: v1379 
falseSuccessor: v1376 
=== Usages ===
=== Predecessor ===
i1571 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v653 #trueSuccessor: v1379 #falseSuccessor: v1376  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B126"
    from_bci -1
    to_bci -1
    predecessors "B125" 
    successors "B132" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1379 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:960) [bci: 84]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v388 
=== Succesors ===
next: v1486 
=== Usages ===
=== Predecessor ===
v1380 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v388 #next: v1486  <|@  <|@
f <@~|@floating>@ <|@
tid i1487 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -272403
stableDimension: 0
stamp: i32 [-272403] ⇊00000000fffbd7ed ⇈00000000fffbd7ed
stampKind: i32
value: int[-272403|0xfffffffffffbd7ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1469 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1486 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1466 
=== Predecessor ===
v1379 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B127"
    from_bci -1
    to_bci -1
    predecessors "B125" 
    successors "B128" "B129" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4593818501724479617
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1376 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:960) [bci: 84]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: void
=== Inputs ===
=== Succesors ===
next: i731 
=== Usages ===
=== Predecessor ===
v1380 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i731  <|@  <|@
tid v1065 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:749) [bci: 1340]
returnStamp: i32
signature: [Ljdk.vm.ci.meta.JavaType;@19c1ad90
stamp: void
targetMethod: HotSpotMethod<FDBigInteger.addAndCmp(FDBigInteger, FDBigInteger)>
=== Inputs ===
arguments: a334 a324 a422 
=== Succesors ===
=== Usages ===
i731 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a334 a324 a422  <|@  <|@
f <@~|@floating>@ <|@
tid v656 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:961) [bci: 102]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1570 
y: i1571 
=== Succesors ===
=== Usages ===
i730 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i1570 y: i1571  <|@  <|@
f <@~|@floating>@ <|@
tid i730 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1324]
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
condition: v656 
trueValue: i7 
falseValue: i8 
=== Succesors ===
=== Usages ===
?732 ?1417 i390 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v656 trueValue: i7 falseValue: i8  <|@  <|@
tid ?1417 <|@
d <@d|@=== Debug Properties ===
bci: 1340
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: true
localsSize: 33
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 749
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - - - - - - - i366 - - - - - - - i389 i730 - - - i418 - - a320 - a324 a422 a334 - - - 
=== Succesors ===
=== Usages ===
i731 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - - - - - - i366 - - - - - - - i389 i730 - - - i418 - - a320 - a324 a422 a334 - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i731 <|@
d <@d|@=== Debug Properties ===
bci: 1340
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:749) [bci: 1340]
polymorphic: false
stamp: i32
targetMethod: Direct#FDBigInteger.addAndCmp
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1065 
stateDuring: ?1417 
=== Succesors ===
next: a1572 
=== Usages ===
?732 v733 
=== Predecessor ===
v1376 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1065 stateDuring: ?1417 #next: a1572  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1572 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FloatingDecimal$BinaryToASCIIBuffer.digits
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:750) [bci: 1354]
nullCheck: false
stamp: n# [C
=== Inputs ===
stateBefore: - 
guard: - 
address: v1585 
=== Succesors ===
next: i1573 
=== Usages ===
a1067 v1601 
=== Predecessor ===
i731 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1585 #next: i1573  <|@  <|@
tid ?732 <|@
d <@d|@=== Debug Properties ===
bci: 1343
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: false
localsSize: 33
locksSize: 0
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:749) [bci: 1340]
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 749
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: a1 - - - - - - - - i366 - - - - - - - i389 i730 - - - i418 - - a320 - a324 a422 a334 - - - i731 
=== Succesors ===
=== Usages ===
v1509 i1573 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - - - - - - i366 - - - - - - - i389 i730 - - - i418 - - a320 - a324 a422 a334 - - - i731  <|@  <|@
f <@~|@floating>@ <|@
tid v1601 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1572 
=== Succesors ===
=== Usages ===
i1573 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1572  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1573 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:750) [bci: 1368]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?732 
guard: - 
address: v1601 
=== Succesors ===
next: v1390 
=== Usages ===
v1073 
=== Predecessor ===
a1572 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?732 guard: - address: v1601 #next: v1390  <|@  <|@
f <@~|@floating>@ <|@
tid v1073 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:750) [bci: 1368]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i389 
y: i1573 
=== Succesors ===
=== Usages ===
v1390 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i389 y: i1573  <|@  <|@
f <@*|@fixed>@ <|@
tid v1390 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:750) [bci: 1368]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1073 
=== Succesors ===
trueSuccessor: v1386 
falseSuccessor: v1389 
=== Usages ===
=== Predecessor ===
i1573 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1073 #trueSuccessor: v1386 #falseSuccessor: v1389  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B128"
    from_bci -1
    to_bci -1
    predecessors "B127" 
    successors "B111" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4593818501724479617
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1386 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:750) [bci: 1368]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1080 
=== Usages ===
v1080 
=== Predecessor ===
v1390 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1080  <|@  <|@
f <@~|@floating>@ <|@
tid a1067 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:750) [bci: 1354]
op: Uncompress
stamp: a# [C
=== Inputs ===
value: a1572 
=== Succesors ===
=== Usages ===
v1602 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1572  <|@  <|@
f <@~|@floating>@ <|@
tid v1602 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a1067 
index: i389 
=== Succesors ===
=== Usages ===
v1080 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1067 index: i389  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1080 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:750) [bci: 1368]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1386 
address: v1602 
value: i439 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v723 
=== Usages ===
=== Predecessor ===
v1386 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1386 address: v1602 value: i439 stateAfter: - lastLocationAccess: - #next: v723  <|@  <|@
f <@~|@floating>@ <|@
tid v733 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:749) [bci: 1343]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i731 
y: i7 
=== Succesors ===
=== Usages ===
i734 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i731 y: i7  <|@  <|@
f <@~|@floating>@ <|@
tid i734 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:749) [bci: 1343]
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
condition: v733 
trueValue: i7 
falseValue: i8 
=== Succesors ===
=== Usages ===
i391 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v733 trueValue: i7 falseValue: i8  <|@  <|@
f <@*|@fixed>@ <|@
tid v723 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 1
stamp: void
=== Inputs ===
loopBegin: v388 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1080 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v388  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B129"
    from_bci -1
    to_bci -1
    predecessors "B127" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1389 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:750) [bci: 1368]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v388 
=== Succesors ===
next: v1509 
=== Usages ===
=== Predecessor ===
v1390 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v388 #next: v1509  <|@  <|@
f <@~|@floating>@ <|@
tid i1511 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -274971
stableDimension: 0
stamp: i32 [-274971] ⇊00000000fffbcde5 ⇈00000000fffbcde5
stampKind: i32
value: int[-274971|0xfffffffffffbcde5]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1509 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1509 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?732 
actionAndReason: i1511 
speculation: a1432 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1389 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?732 actionAndReason: i1511 speculation: a1432  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B130"
    from_bci -1
    to_bci -1
    predecessors "B124" 
    successors "B132" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1374 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:959) [bci: 77]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v388 
=== Succesors ===
next: v1484 
=== Usages ===
=== Predecessor ===
v1375 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v388 #next: v1484  <|@  <|@
f <@~|@floating>@ <|@
tid i1485 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -270619
stableDimension: 0
stamp: i32 [-270619] ⇊00000000fffbdee5 ⇈00000000fffbdee5
stampKind: i32
value: int[-270619|0xfffffffffffbdee5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1469 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1484 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1466 
=== Predecessor ===
v1374 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B131"
    from_bci -1
    to_bci -1
    predecessors "B123" 
    successors "B132" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1364 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:958) [bci: 65]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v388 
=== Succesors ===
next: v1480 
=== Usages ===
=== Predecessor ===
v1365 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v388 #next: v1480  <|@  <|@
f <@~|@floating>@ <|@
tid i1481 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -266523
stableDimension: 0
stamp: i32 [-266523] ⇊00000000fffbeee5 ⇈00000000fffbeee5
stampKind: i32
value: int[-266523|0xfffffffffffbeee5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1469 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1480 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1466 
=== Predecessor ===
v1364 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B132"
    from_bci -1
    to_bci -1
    predecessors "B118" "B120" "B122" "B131" "B130" "B126" 
    successors 
    xhandlers
    flags 
    probability 2366641604183195648
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1469 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-272403 - -257291] ⇊00000000fff800e5 ⇈00000000fffffffd
valueDescription: i32
=== Inputs ===
merge: v1466 
values: i1473 i1475 i1477 i1481 i1485 i1487 
=== Succesors ===
=== Usages ===
v1471 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1466 values: i1473 i1475 i1477 i1481 i1485 i1487  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1466 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1472 v1474 v1476 v1480 v1484 v1486 
=== Succesors ===
next: v1471 
=== Usages ===
i1469 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1472 v1474 v1476 v1480 v1484 v1486 #next: v1471  <|@  <|@
f <@*|@fixed>@ <|@
tid v1471 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?423 
actionAndReason: i1469 
speculation: a1432 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1466 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?423 actionAndReason: i1469 speculation: a1432  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B133"
    from_bci -1
    to_bci -1
    predecessors "B112" 
    successors "B135" 
    xhandlers
    flags 
    probability 4560574604583547353
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v408 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:752) [bci: 1372]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v388 
=== Succesors ===
next: v407 
=== Usages ===
=== Predecessor ===
v416 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v388 #next: v407  <|@  <|@
f <@*|@fixed>@ <|@
tid v407 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:752) [bci: 1372]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v406 
=== Predecessor ===
v408 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B134"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B135" 
    xhandlers
    flags 
    probability 4576679723977066507
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v397 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:752) [bci: 1372]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v388 
=== Succesors ===
next: v405 
=== Usages ===
=== Predecessor ===
v402 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v388 #next: v405  <|@  <|@
f <@*|@fixed>@ <|@
tid v405 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:752) [bci: 1372]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v406 
=== Predecessor ===
v397 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B135"
    from_bci -1
    to_bci -1
    predecessors "B134" "B133" 
    successors "B136" "B137" 
    xhandlers
    flags 
    probability 4577144435309065001
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v406 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:752) [bci: 1372]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v405 v407 
=== Succesors ===
next: v448 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v405 v407 #next: v448  <|@  <|@
f <@*|@fixed>@ <|@
tid v448 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:752) [bci: 1374]
stamp: void
trueSuccessorProbability: 0.04269392663860493
=== Inputs ===
condition: v403 
=== Succesors ===
trueSuccessor: v446 
falseSuccessor: v447 
=== Usages ===
=== Predecessor ===
v406 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v403 #trueSuccessor: v446 #falseSuccessor: v447  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B136"
    from_bci -1
    to_bci -1
    predecessors "B135" 
    successors "B140" 
    xhandlers
    flags 
    probability 4556820306948856563
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v446 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:756) [bci: 1403]
stamp: void
=== Inputs ===
=== Succesors ===
next: v467 
=== Usages ===
=== Predecessor ===
v448 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v467  <|@  <|@
f <@*|@fixed>@ <|@
tid v467 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:758) [bci: 1406]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v466 
=== Predecessor ===
v446 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B137"
    from_bci -1
    to_bci -1
    predecessors "B135" 
    successors "B138" "B139" 
    xhandlers
    flags 
    probability 4576888663955794513
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v447 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:752) [bci: 1377]
stamp: void
=== Inputs ===
=== Succesors ===
next: v455 
=== Usages ===
=== Predecessor ===
v448 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v455  <|@  <|@
f <@*|@fixed>@ <|@
tid v455 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:752) [bci: 1379]
stamp: void
trueSuccessorProbability: 0.08103015075376885
=== Inputs ===
condition: v394 
=== Succesors ===
trueSuccessor: v454 
falseSuccessor: v453 
=== Usages ===
=== Predecessor ===
v447 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v394 #trueSuccessor: v454 #falseSuccessor: v453  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B138"
    from_bci -1
    to_bci -1
    predecessors "B137" 
    successors "B140" 
    xhandlers
    flags 
    probability 4560574604583547320
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v454 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:756) [bci: 1403]
stamp: void
=== Inputs ===
=== Succesors ===
next: v532 
=== Usages ===
=== Predecessor ===
v455 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v532  <|@  <|@
f <@*|@fixed>@ <|@
tid v532 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:756) [bci: 1403]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v466 
=== Predecessor ===
v454 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B139"
    from_bci -1
    to_bci -1
    predecessors "B137" 
    successors "B140" 
    xhandlers
    flags 
    probability 4576423952623796022
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v453 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:753) [bci: 1382]
stamp: void
=== Inputs ===
=== Succesors ===
next: a457 
=== Usages ===
=== Predecessor ===
v455 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a457  <|@  <|@
tid v1087 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:753) [bci: 1385]
returnStamp: a# Lsun/misc/FDBigInteger;
signature: [Ljdk.vm.ci.meta.JavaType;@7e7dda6
stamp: void
targetMethod: HotSpotMethod<FDBigInteger.leftShift(int)>
=== Inputs ===
arguments: a324 i7 
=== Succesors ===
=== Usages ===
a457 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a324 i7  <|@  <|@
tid ?1418 <|@
d <@d|@=== Debug Properties ===
bci: 1385
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: true
localsSize: 33
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 753
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - - - - - - - i366 - - - - - - - i389 i390 i391 - - - - - - - - - a334 - - - 
=== Succesors ===
=== Usages ===
a457 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - - - - - - i366 - - - - - - - i389 i390 i391 - - - - - - - - - a334 - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a457 <|@
d <@d|@=== Debug Properties ===
bci: 1385
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:753) [bci: 1385]
polymorphic: false
stamp: a# Lsun/misc/FDBigInteger;
targetMethod: Direct#FDBigInteger.leftShift
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1087 
stateDuring: ?1418 
=== Succesors ===
next: v1615 
=== Usages ===
v1091 a1189 ?1419 v1615 
=== Predecessor ===
v453 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1087 stateDuring: ?1418 #next: v1615  <|@  <|@
tid ?458 <|@
d <@d|@=== Debug Properties ===
bci: 1388
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: false
localsSize: 33
locksSize: 0
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:753) [bci: 1385]
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 753
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: a1 - - - - - - - - i366 - - - - - - - i389 i390 i391 - - - - - - - - - a334 - - - a1432 
=== Succesors ===
=== Usages ===
v1615 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - - - - - - i366 - - - - - - - i389 i390 i391 - - - - - - - - - a334 - - - a1432  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1615 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?458 
object: a457 
=== Succesors ===
next: i460 
=== Usages ===
=== Predecessor ===
a457 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?458 object: a457 #next: i460  <|@  <|@
tid v1091 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:754) [bci: 1394]
returnStamp: i32
signature: [Ljdk.vm.ci.meta.JavaType;@52176920
stamp: void
targetMethod: HotSpotMethod<FDBigInteger.cmp(FDBigInteger)>
=== Inputs ===
arguments: a457 a334 
=== Succesors ===
=== Usages ===
i460 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a457 a334  <|@  <|@
tid ?1419 <|@
d <@d|@=== Debug Properties ===
bci: 1394
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: true
localsSize: 33
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 754
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - - - - - - - i366 - - - - - - - i389 i390 i391 - - - - - - - a457 - - - - - 
=== Succesors ===
=== Usages ===
i460 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - - - - - - i366 - - - - - - - i389 i390 i391 - - - - - - - a457 - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i460 <|@
d <@d|@=== Debug Properties ===
bci: 1394
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:754) [bci: 1394]
polymorphic: false
stamp: i32
targetMethod: Direct#FDBigInteger.cmp
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1091 
stateDuring: ?1419 
=== Succesors ===
next: v465 
=== Usages ===
j462 
=== Predecessor ===
v1615 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1091 stateDuring: ?1419 #next: v465  <|@  <|@
f <@~|@floating>@ <|@
tid j462 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:754) [bci: 1397]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i460 
=== Succesors ===
=== Usages ===
j468 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i460  <|@  <|@
f <@*|@fixed>@ <|@
tid v465 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:758) [bci: 1406]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v466 
=== Predecessor ===
i460 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B140"
    from_bci -1
    to_bci -1
    predecessors "B139" "B136" "B138" 
    successors "B141" "B142" 
    xhandlers
    flags 
    probability 4577144435309065002
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j468 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:758) [bci: 1406]
stamp: i64 [-2147483648 - 2147483647]
valueDescription: i64
=== Inputs ===
merge: v466 
values: j462 j271 j271 
=== Succesors ===
=== Usages ===
?1420 ?474 j487 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v466 values: j462 j271 j271  <|@  <|@
f <@~|@floating>@ <|@
tid a1189 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:758) [bci: 1406]
stamp: a!# Lsun/misc/FDBigInteger;
valueDescription: a -
=== Inputs ===
merge: v466 
values: a457 a324 a324 
=== Succesors ===
=== Usages ===
v1084 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v466 values: a457 a324 a324  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v466 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:758) [bci: 1406]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v465 v467 v532 
=== Succesors ===
next: i473 
=== Usages ===
j468 a1189 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v465 v467 v532 #next: i473  <|@  <|@
f <@~|@floating>@ <|@
tid a471 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:758) [bci: 1409]
rawvalue: FDBigInteger@241972498
stableDimension: 0
stamp: a!# Lsun/misc/FDBigInteger;
stampKind: a -
value: Object[FDBigInteger@241972498]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1084 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
tid v1084 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:758) [bci: 1412]
returnStamp: i32
signature: [Ljdk.vm.ci.meta.JavaType;@2eb9c731
stamp: void
targetMethod: HotSpotMethod<FDBigInteger.cmp(FDBigInteger)>
=== Inputs ===
arguments: a1189 a471 
=== Succesors ===
=== Usages ===
i473 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1189 a471  <|@  <|@
tid ?1420 <|@
d <@d|@=== Debug Properties ===
bci: 1412
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: true
localsSize: 33
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 758
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: a1 - - - - - - - - i366 - - - - - - - i389 i390 i391 j468 - - - - - - - - - - - - a1 
=== Succesors ===
=== Usages ===
i473 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - - - - - - i366 - - - - - - - i389 i390 i391 j468 - - - - - - - - - - - - a1  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i473 <|@
d <@d|@=== Debug Properties ===
bci: 1412
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:758) [bci: 1412]
polymorphic: false
stamp: i32
targetMethod: Direct#FDBigInteger.cmp
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1084 
stateDuring: ?1420 
=== Succesors ===
next: v1398 
=== Usages ===
v475 
=== Predecessor ===
v466 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1084 stateDuring: ?1420 #next: v1398  <|@  <|@
f <@~|@floating>@ <|@
tid v475 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:758) [bci: 1415]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i473 
y: i8 
=== Succesors ===
=== Usages ===
v1398 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i473 y: i8  <|@  <|@
f <@*|@fixed>@ <|@
tid v1398 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:758) [bci: 1415]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v475 
=== Succesors ===
trueSuccessor: v1397 
falseSuccessor: v1395 
=== Usages ===
=== Predecessor ===
i473 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v475 #trueSuccessor: v1397 #falseSuccessor: v1395  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B141"
    from_bci -1
    to_bci -1
    predecessors "B140" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1397 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:758) [bci: 1415]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1396 
=== Usages ===
=== Predecessor ===
v1398 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1396  <|@  <|@
tid ?474 <|@
d <@d|@=== Debug Properties ===
bci: 1415
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: false
localsSize: 33
locksSize: 0
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:758) [bci: 1412]
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 758
stackSize: 2
=== Inputs ===
outerFrameState: - 
values: a1 - - - - - - - - i366 - - - - - - - i389 i390 i391 j468 - - - - - - - - - - - - a1 i8 
=== Succesors ===
=== Usages ===
v1396 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - - - - - - i366 - - - - - - - i389 i390 i391 j468 - - - - - - - - - - - - a1 i8  <|@  <|@
f <@*|@fixed>@ <|@
tid v1396 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 1187
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:758) [bci: 1415]
reason: UnreachedCode
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?474 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1397 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?474  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B142"
    from_bci -1
    to_bci -1
    predecessors "B140" 
    successors "B143" 
    xhandlers
    flags 
    probability 4577144435309065002
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1395 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:758) [bci: 1415]
stamp: void
=== Inputs ===
=== Succesors ===
next: v482 
=== Usages ===
=== Predecessor ===
v1398 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v482  <|@  <|@
f <@*|@fixed>@ <|@
tid v482 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:760) [bci: 1426]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v481 
=== Predecessor ===
v1395 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B143"
    from_bci -1
    to_bci -1
    predecessors "B88" "B142" "B87" 
    successors "B144" "B145" 
    xhandlers
    flags 
    probability 4598270386627586327
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i483 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:760) [bci: 1426]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v481 
values: i705 i366 i705 
=== Succesors ===
=== Usages ===
?495 i489 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v481 values: i705 i366 i705  <|@  <|@
f <@~|@floating>@ <|@
tid i484 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:760) [bci: 1426]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v481 
values: i231 i389 i231 
=== Succesors ===
=== Usages ===
?495 v1112 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v481 values: i231 i389 i231  <|@  <|@
f <@~|@floating>@ <|@
tid i485 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:760) [bci: 1426]
stamp: i32 [0 - 1] ⇈0000000000000001
valueDescription: i32
=== Inputs ===
merge: v481 
values: i232 i390 i232 
=== Succesors ===
=== Usages ===
v500 ?495 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v481 values: i232 i390 i232  <|@  <|@
f <@~|@floating>@ <|@
tid i486 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:760) [bci: 1426]
stamp: i32 [0 - 1] ⇈0000000000000001
valueDescription: i32
=== Inputs ===
merge: v481 
values: i233 i391 i233 
=== Succesors ===
=== Usages ===
v496 ?495 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v481 values: i233 i391 i233  <|@  <|@
f <@~|@floating>@ <|@
tid j487 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:760) [bci: 1426]
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v481 
values: j304 j468 j1529 
=== Succesors ===
=== Usages ===
v505 v507 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v481 values: j304 j468 j1529  <|@  <|@
f <@~|@floating>@ <|@
tid i1423 <|@
d <@d|@=== Debug Properties ===
stamp: i8 [0 - 1] ⇈0000000000000001
valueDescription: i8
=== Inputs ===
merge: v481 
values: i956 i1128 i1531 
=== Succesors ===
=== Usages ===
v1425 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v481 values: i956 i1128 i1531  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v481 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:760) [bci: 1426]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v480 v482 v1528 
=== Succesors ===
next: v1425 
=== Usages ===
i483 i484 i485 i486 j487 i1423 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v480 v482 v1528 #next: v1425  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1425 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: FloatingDecimal$BinaryToASCIIBuffer.exactDecimalConversion
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:703) [bci: 1064]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1576 
value: i1423 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1107 
=== Usages ===
=== Predecessor ===
v481 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1576 value: i1423 stateAfter: - lastLocationAccess: - #next: v1107  <|@  <|@
f <@~|@floating>@ <|@
tid v1605 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v1107 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid i489 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:760) [bci: 1430]
stamp: i32
=== Inputs ===
x: i483 
y: i7 
=== Succesors ===
=== Usages ===
v1107 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i483 y: i7  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1107 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: FloatingDecimal$BinaryToASCIIBuffer.decExponent
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:760) [bci: 1431]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1605 
value: i489 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1109 
=== Usages ===
=== Predecessor ===
v1425 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1605 value: i489 stateAfter: - lastLocationAccess: - #next: v1109  <|@  <|@
f <@~|@floating>@ <|@
tid v1606 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v1109 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1109 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: FloatingDecimal$BinaryToASCIIBuffer.firstDigitIndex
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:761) [bci: 1436]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1606 
value: i8 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1112 
=== Usages ===
=== Predecessor ===
v1107 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1606 value: i8 stateAfter: - lastLocationAccess: - #next: v1112  <|@  <|@
f <@~|@floating>@ <|@
tid v1607 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v1112 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1112 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: FloatingDecimal$BinaryToASCIIBuffer.nDigits
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:762) [bci: 1442]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1607 
value: i484 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v499 
=== Usages ===
=== Predecessor ===
v1109 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1607 value: i484 stateAfter: - lastLocationAccess: - #next: v499  <|@  <|@
f <@~|@floating>@ <|@
tid v496 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:766) [bci: 1447]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i486 
y: i8 
=== Succesors ===
=== Usages ===
v499 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i486 y: i8  <|@  <|@
f <@*|@fixed>@ <|@
tid v499 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:766) [bci: 1447]
stamp: void
trueSuccessorProbability: 0.6216282371371225
=== Inputs ===
condition: v496 
=== Succesors ===
trueSuccessor: v497 
falseSuccessor: v498 
=== Usages ===
=== Predecessor ===
v1112 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v496 #trueSuccessor: v497 #falseSuccessor: v498  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B144"
    from_bci -1
    to_bci -1
    predecessors "B143" 
    successors 
    xhandlers
    flags 
    probability 4594885466776022457
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v497 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:781) [bci: 1508]
stamp: void
=== Inputs ===
=== Succesors ===
next: v533 
=== Usages ===
=== Predecessor ===
v499 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v533  <|@  <|@
f <@*|@fixed>@ <|@
tid v533 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:781) [bci: 1508]
stamp: void
=== Inputs ===
result: - 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v497 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: - memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B145"
    from_bci -1
    to_bci -1
    predecessors "B143" 
    successors "B146" "B147" 
    xhandlers
    flags 
    probability 4591624594530912490
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v498 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:767) [bci: 1450]
stamp: void
=== Inputs ===
=== Succesors ===
next: v503 
=== Usages ===
=== Predecessor ===
v499 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v503  <|@  <|@
f <@~|@floating>@ <|@
tid v500 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:767) [bci: 1452]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i485 
y: i8 
=== Succesors ===
=== Usages ===
v503 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i485 y: i8  <|@  <|@
f <@*|@fixed>@ <|@
tid v503 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:767) [bci: 1452]
stamp: void
trueSuccessorProbability: 0.7008668650536939
=== Inputs ===
condition: v500 
=== Succesors ===
trueSuccessor: v501 
falseSuccessor: v502 
=== Usages ===
=== Predecessor ===
v498 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v500 #trueSuccessor: v501 #falseSuccessor: v502  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B146"
    from_bci -1
    to_bci -1
    predecessors "B145" 
    successors 
    xhandlers
    flags 
    probability 4589542575902081805
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v501 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:778) [bci: 1504]
stamp: void
=== Inputs ===
=== Succesors ===
next: v519 
=== Usages ===
=== Predecessor ===
v503 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v519  <|@  <|@
tid v1113 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:778) [bci: 1505]
returnStamp: void
signature: [Ljdk.vm.ci.meta.JavaType;@3a00425b
stamp: void
targetMethod: HotSpotMethod<FloatingDecimal$BinaryToASCIIBuffer.roundup()>
=== Inputs ===
arguments: a1 
=== Succesors ===
=== Usages ===
v519 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1  <|@  <|@
tid ?1421 <|@
d <@d|@=== Debug Properties ===
bci: 1505
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: true
localsSize: 33
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 778
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
=== Succesors ===
=== Usages ===
v519 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v519 <|@
d <@d|@=== Debug Properties ===
bci: 1505
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:778) [bci: 1505]
polymorphic: false
stamp: void
targetMethod: Direct#FloatingDecimal$BinaryToASCIIBuffer.roundup
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1113 
stateDuring: ?1421 
=== Succesors ===
next: v536 
=== Usages ===
=== Predecessor ===
v501 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1113 stateDuring: ?1421 #next: v536  <|@  <|@
f <@*|@fixed>@ <|@
tid v536 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:781) [bci: 1508]
stamp: void
=== Inputs ===
result: - 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v519 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: - memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B147"
    from_bci -1
    to_bci -1
    predecessors "B145" 
    successors "B148" "B149" 
    xhandlers
    flags 
    probability 4583985295923746675
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v502 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:768) [bci: 1455]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1402 
=== Usages ===
=== Predecessor ===
v503 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1402  <|@  <|@
f <@~|@floating>@ <|@
tid v505 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:768) [bci: 1459]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j487 
y: j271 
=== Succesors ===
=== Usages ===
v1402 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: j487 y: j271  <|@  <|@
f <@*|@fixed>@ <|@
tid v1402 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:768) [bci: 1459]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v505 
=== Succesors ===
trueSuccessor: v1401 
falseSuccessor: v1399 
=== Usages ===
=== Predecessor ===
v502 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v505 #trueSuccessor: v1401 #falseSuccessor: v1399  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B148"
    from_bci -1
    to_bci -1
    predecessors "B147" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1401 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:768) [bci: 1459]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1400 
=== Usages ===
=== Predecessor ===
v1402 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1400  <|@  <|@
tid ?495 <|@
d <@d|@=== Debug Properties ===
bci: 1445
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: false
localsSize: 33
locksSize: 0
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:762) [bci: 1442]
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 766
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - - - - - - - i483 - - - - - - - i484 i485 i486 j271 - - - - - - - - - - - - 
=== Succesors ===
=== Usages ===
v1400 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - - - - - - i483 - - - - - - - i484 i485 i486 j271 - - - - - - - - - - - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v1400 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 1114
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:768) [bci: 1459]
reason: UnreachedCode
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?495 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1401 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?495  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B149"
    from_bci -1
    to_bci -1
    predecessors "B147" 
    successors "B150" "B151" 
    xhandlers
    flags 
    probability 4583985295923746675
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1399 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:768) [bci: 1459]
stamp: void
=== Inputs ===
=== Succesors ===
next: v513 
=== Usages ===
=== Predecessor ===
v1402 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v513  <|@  <|@
f <@~|@floating>@ <|@
tid v507 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:774) [bci: 1494]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j487 
y: j273 
=== Succesors ===
=== Usages ===
v513 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j487 y: j273  <|@  <|@
f <@*|@fixed>@ <|@
tid v513 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:774) [bci: 1494]
stamp: void
trueSuccessorProbability: 0.4072231833910034
=== Inputs ===
condition: v507 
=== Succesors ===
trueSuccessor: v512 
falseSuccessor: v511 
=== Usages ===
=== Predecessor ===
v1399 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v507 #trueSuccessor: v512 #falseSuccessor: v511  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B150"
    from_bci -1
    to_bci -1
    predecessors "B149" 
    successors 
    xhandlers
    flags 
    probability 4577936391812347867
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v512 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:781) [bci: 1508]
stamp: void
=== Inputs ===
=== Succesors ===
next: v534 
=== Usages ===
=== Predecessor ===
v513 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v534  <|@  <|@
f <@*|@fixed>@ <|@
tid v534 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:781) [bci: 1508]
stamp: void
=== Inputs ===
result: - 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v512 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: - memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B151"
    from_bci -1
    to_bci -1
    predecessors "B149" 
    successors 
    xhandlers
    flags 
    probability 4580593910908099462
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v511 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:775) [bci: 1497]
stamp: void
=== Inputs ===
=== Succesors ===
next: v515 
=== Usages ===
=== Predecessor ===
v513 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v515  <|@  <|@
tid v1115 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:775) [bci: 1498]
returnStamp: void
signature: [Ljdk.vm.ci.meta.JavaType;@333a250
stamp: void
targetMethod: HotSpotMethod<FloatingDecimal$BinaryToASCIIBuffer.roundup()>
=== Inputs ===
arguments: a1 
=== Succesors ===
=== Usages ===
v515 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1  <|@  <|@
tid ?1422 <|@
d <@d|@=== Debug Properties ===
bci: 1498
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: true
localsSize: 33
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 775
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
=== Succesors ===
=== Usages ===
v515 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v515 <|@
d <@d|@=== Debug Properties ===
bci: 1498
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:775) [bci: 1498]
polymorphic: false
stamp: void
targetMethod: Direct#FloatingDecimal$BinaryToASCIIBuffer.roundup
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1115 
stateDuring: ?1422 
=== Succesors ===
next: v535 
=== Usages ===
=== Predecessor ===
v511 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1115 stateDuring: ?1422 #next: v535  <|@  <|@
f <@*|@fixed>@ <|@
tid v535 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:781) [bci: 1508]
stamp: void
=== Inputs ===
result: - 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v515 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: - memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B152"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1319 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:741) [bci: 1259]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1318 
=== Usages ===
=== Predecessor ===
v1320 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1318  <|@  <|@
tid ?368 <|@
d <@d|@=== Debug Properties ===
bci: 1243
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: false
localsSize: 33
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 741
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - - - i5 - - - i366 - - - - - - - i367 i8 i8 - - - - - a320 - a324 a329 a334 - - - 
=== Succesors ===
=== Usages ===
v1318 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - - i5 - - - i366 - - - - - - - i367 i8 i8 - - - - - a320 - a324 a329 a334 - - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v1318 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 1092
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:741) [bci: 1259]
reason: UnreachedCode
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?368 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1319 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?368  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B153"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B154" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1250 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:554) [bci: 280]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1518 
=== Usages ===
=== Predecessor ===
v1251 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1518  <|@  <|@
f <@~|@floating>@ <|@
tid i1519 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -229139
stableDimension: 0
stamp: i32 [-229139] ⇊00000000fffc80ed ⇈00000000fffc80ed
stampKind: i32
value: int[-229139|0xfffffffffffc80ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1515 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1518 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1512 
=== Predecessor ===
v1250 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B154"
    from_bci -1
    to_bci -1
    predecessors "B60" "B153" "B64" "B91" "B69" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1515 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-290587 - -229139] ⇊00000000fff800e5 ⇈00000000fffffffd
valueDescription: i32
=== Inputs ===
merge: v1512 
values: i1514 i1519 i1521 i1523 i1527 
=== Succesors ===
=== Usages ===
v1517 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1512 values: i1514 i1519 i1521 i1523 i1527  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1512 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1513 v1518 v1520 v1522 v1526 
=== Succesors ===
next: v1517 
=== Usages ===
i1515 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1513 v1518 v1520 v1522 v1526 #next: v1517  <|@  <|@
f <@*|@fixed>@ <|@
tid v1517 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?799 
actionAndReason: i1515 
speculation: a1432 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1512 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?799 actionAndReason: i1515 speculation: a1432  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B155"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1246 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:594) [bci: 345]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1245 
=== Usages ===
=== Predecessor ===
v1247 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1245  <|@  <|@
tid ?108 <|@
d <@d|@=== Debug Properties ===
bci: 202
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: true
localsSize: 33
locksSize: 0
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:523) [bci: 202]
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 523
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 i2 j3 - i4 i5 i9 i11 i18 i612 i98 i666 - - - - - - - - - - - - - - - - - - - - - 
=== Succesors ===
=== Usages ===
?109 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2 j3 - i4 i5 i9 i11 i18 i612 i98 i666 - - - - - - - - - - - - - - - - - - - - -  <|@  <|@
tid ?109 <|@
d <@d|@=== Debug Properties ===
bci: 10
code: ResolvedJavaMethodBytecode<Math.max(int, int)>
duringCall: false
localsSize: 2
locksSize: 0
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:523) [bci: 202]
rethrowException: false
sourceFile: Math.java
sourceLine: 1252
stackSize: 1
=== Inputs ===
outerFrameState: ?108 
values: - - i668 
=== Succesors ===
=== Usages ===
v1245 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?108 values: - - i668  <|@  <|@
f <@*|@fixed>@ <|@
tid v1245 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 903
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:594) [bci: 345]
reason: BoundsCheckException
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?109 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1246 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?109  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B156"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1242 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:591) [bci: 314]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1241 
=== Usages ===
=== Predecessor ===
v1243 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1241  <|@  <|@
tid ?95 <|@
d <@d|@=== Debug Properties ===
bci: 185
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: true
localsSize: 33
locksSize: 0
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:520) [bci: 185]
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 520
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 i2 j3 - i4 i5 i9 i11 i18 i612 - - - - - - - - - - - - - - - - - - - - - - - 
=== Succesors ===
=== Usages ===
?96 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2 j3 - i4 i5 i9 i11 i18 i612 - - - - - - - - - - - - - - - - - - - - - - -  <|@  <|@
tid ?96 <|@
d <@d|@=== Debug Properties ===
bci: 10
code: ResolvedJavaMethodBytecode<Math.max(int, int)>
duringCall: false
localsSize: 2
locksSize: 0
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:520) [bci: 185]
rethrowException: false
sourceFile: Math.java
sourceLine: 1252
stackSize: 1
=== Inputs ===
outerFrameState: ?95 
values: - - i666 
=== Succesors ===
=== Usages ===
v1241 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?95 values: - - i666  <|@  <|@
f <@*|@fixed>@ <|@
tid v1241 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 896
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:591) [bci: 314]
reason: UnreachedCode
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?96 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1242 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?96  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B157"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B158" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1234 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:825) [bci: 85]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1454 
=== Usages ===
=== Predecessor ===
v1235 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1454  <|@  <|@
f <@~|@floating>@ <|@
tid i1455 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -288019
stableDimension: 0
stamp: i32 [-288019] ⇊00000000fffb9aed ⇈00000000fffb9aed
stampKind: i32
value: int[-288019|0xfffffffffffb9aed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1441 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1454 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1438 
=== Predecessor ===
v1234 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B158"
    from_bci -1
    to_bci -1
    predecessors "B17" "B16" "B27" "B26" "B12" "B157" 
    successors 
    xhandlers
    flags 
    probability 2366641604183195648
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1441 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-288019 - -222739] ⇊00000000fff880e5 ⇈00000000ffff9ffd
valueDescription: i32
=== Inputs ===
merge: v1438 
values: i1440 i1445 i1449 i1451 i1453 i1455 
=== Succesors ===
=== Usages ===
v1443 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1438 values: i1440 i1445 i1449 i1451 i1453 i1455  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1438 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1439 v1444 v1448 v1450 v1452 v1454 
=== Succesors ===
next: v1443 
=== Usages ===
i1441 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1439 v1444 v1448 v1450 v1452 v1454 #next: v1443  <|@  <|@
f <@*|@fixed>@ <|@
tid v1443 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?15 
actionAndReason: i1441 
speculation: a1432 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1438 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?15 actionAndReason: i1441 speculation: a1432  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B159"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B160" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1198 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:444) [bci: 82]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1436 
=== Usages ===
=== Predecessor ===
v1199 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1436  <|@  <|@
f <@~|@floating>@ <|@
tid i1437 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -302867
stableDimension: 0
stamp: i32 [-302867] ⇊00000000fffb60ed ⇈00000000fffb60ed
stampKind: i32
value: int[-302867|0xfffffffffffb60ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1433 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1436 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1429 
=== Predecessor ===
v1198 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B160"
    from_bci -1
    to_bci -1
    predecessors "B2" "B159" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1433 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-303123 - -302867] ⇊00000000fffb40ed ⇈00000000fffb7fed
valueDescription: i32
=== Inputs ===
merge: v1429 
values: i1431 i1437 
=== Succesors ===
=== Usages ===
v1435 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1429 values: i1431 i1437  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1429 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1430 v1436 
=== Succesors ===
next: v1435 
=== Usages ===
i1433 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1430 v1436 #next: v1435  <|@  <|@
tid ?6 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: false
localsSize: 33
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 426
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 i2 j3 - i4 i5 - - - - - - - - - - - - - - - - - - - - - - - - - - - 
=== Succesors ===
=== Usages ===
v1435 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2 j3 - i4 i5 - - - - - - - - - - - - - - - - - - - - - - - - - - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v1435 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?6 
actionAndReason: i1433 
speculation: a1432 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1429 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?6 actionAndReason: i1433 speculation: a1432  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B159" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v1199 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: v1199  <|@  <|@
f <@~|@floating>@ <|@
tid a1432 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1435 v1517 v1501 v1443 v1493 v1509 v1461 v1471 ?315 ?325 ?335 ?393 ?458 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i5 <|@
result v4|DWORD <|@
d <@d|@=== Debug Properties ===
index: 4
stamp: i32 [0 - 1] ⇈0000000000000001
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?6 ?1413 ?15 ?845 ?81 ?1412 ?95 ?108 ?1411 ?799 ?1410 ?701 v212 ?1409 ?315 ?1408 ?1407 ?325 ?1406 ?335 ?1405 ?341 ?347 ?368 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i4 <|@
result v3|DWORD <|@
d <@d|@=== Debug Properties ===
index: 3
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?6 i111 ?15 ?845 v56 i60 ?81 ?108 ?95 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j3 <|@
result v2|QWORD <|@
d <@d|@=== Debug Properties ===
index: 2
stamp: i64
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?6 i9 ?108 ?15 ?845 j112 ?95 j75 ?81 j560 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Lsun/misc/FloatingDecimal$BinaryToASCIIBuffer;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?6 v1575 ?1420 v1576 ?15 v1115 ?495 ?1420 v872 ?81 ?1419 ?95 ?108 ?1418 ?799 ?474 ?1417 ?701 ?228 ?236 ?732 ?845 ?690 v1585 ?300 ?1416 v1606 ?1415 ?1414 ?315 ?1413 ?1412 ?325 ?1411 ?335 ?1410 ?341 ?347 ?474 ?1409 ?368 v1113 ?1408 ?393 v1607 ?458 ?1407 ?423 ?1405 ?432 v1605 ?1406 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i2 <|@
result v1|DWORD <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?6 i98 ?15 i16 ?845 v32 v35 v56 i60 ?108 ?95 v72 i74 ?81 d569 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i31 <|@
result int[63|0x3f] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:444) [bci: 82]
rawvalue: 63
stableDimension: 0
stamp: i32 [63] ⇊000000000000003f ⇈000000000000003f
stampKind: i32
value: int[63|0x3f]
=== Inputs ===
=== Succesors ===
=== Usages ===
v32 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v32 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:444) [bci: 82]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2 
y: i31 
=== Succesors ===
=== Usages ===
v1199 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2 y: i31  <|@  <|@
f <@*|@fixed>@ <|@
tid v1199 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:444) [bci: 82]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v32 
=== Succesors ===
trueSuccessor: v1196 
falseSuccessor: v1198 
=== Usages ===
=== Predecessor ===
v0 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v32 #trueSuccessor: v1196 #falseSuccessor: v1198  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|QWORD, r8|DWORD, r9|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@4a6681b7 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD = MOVE rcx|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v1|DWORD y: 63 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B159 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1196 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:444) [bci: 82]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1203 
=== Usages ===
=== Predecessor ===
v1199 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1203  <|@  <|@
f <@~|@floating>@ <|@
tid i34 <|@
result int[-21|0xffffffffffffffeb] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:444) [bci: 86]
rawvalue: -21
stableDimension: 0
stamp: i32 [-21] ⇊00000000ffffffeb ⇈00000000ffffffeb
stampKind: i32
value: int[-21|0xffffffffffffffeb]
=== Inputs ===
=== Succesors ===
=== Usages ===
v35 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v35 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:444) [bci: 88]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2 
y: i34 
=== Succesors ===
=== Usages ===
v1203 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2 y: i34  <|@  <|@
f <@*|@fixed>@ <|@
tid v1203 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:444) [bci: 88]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v35 
=== Succesors ===
trueSuccessor: v1202 
falseSuccessor: v1200 
=== Usages ===
=== Predecessor ===
v1196 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v35 #trueSuccessor: v1202 #falseSuccessor: v1200  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v1|DWORD y: -21 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B160" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1202 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:444) [bci: 88]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1430 
=== Usages ===
=== Predecessor ===
v1203 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1430  <|@  <|@
f <@~|@floating>@ <|@
tid i1431 <|@
result int[-303123|0xfffffffffffb5fed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -303123
stableDimension: 0
stamp: i32 [-303123] ⇊00000000fffb5fed ⇈00000000fffb5fed
stampKind: i32
value: int[-303123|0xfffffffffffb5fed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1433 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1430 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1429 
=== Predecessor ===
v1202 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-303123|0xfffffffffffb5fed]] destination: B2 -> B160 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B18" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1200 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:444) [bci: 88]
stamp: void
=== Inputs ===
=== Succesors ===
next: v858 
=== Usages ===
=== Predecessor ===
v1203 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v858  <|@  <|@
f <@~|@floating>@ <|@
tid v1575 <|@
result [v0|QWORD[.] + 26] <|@
d <@d|@=== Debug Properties ===
displacement: 26
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v858 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid i1128 <|@
result byte[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:439) [bci: 59]
rawvalue: 0
stableDimension: 0
stamp: i8 [0] ⇈0000000000000000
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v858 v861 i1423 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v858 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: FloatingDecimal$BinaryToASCIIBuffer.decimalDigitsRoundedUp
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:439) [bci: 59]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1575 
value: i1128 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v861 
=== Usages ===
=== Predecessor ===
v1200 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1575 value: i1128 stateAfter: - lastLocationAccess: - #next: v861  <|@  <|@
f <@~|@floating>@ <|@
tid v1576 <|@
result [v0|QWORD[.] + 25] <|@
d <@d|@=== Debug Properties ===
displacement: 25
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v861 v1425 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v861 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: FloatingDecimal$BinaryToASCIIBuffer.exactDecimalConversion
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:440) [bci: 64]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1576 
value: i1128 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v22 
=== Usages ===
=== Predecessor ===
v858 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1576 value: i1128 stateAfter: - lastLocationAccess: - #next: v22  <|@  <|@
f <@~|@floating>@ <|@
tid i8 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:426) [bci: 3]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
i800 i804 i806 ?1405 i69 v872 i666 i668 v131 i184 i189 v192 v966 i716 v212 i226 i227 v237 v247 i280 i285 i307 ?1416 ?315 ?1413 ?1413 ?325 ?1412 ?341 v342 ?347 ?347 v352 v1100 ?1408 ?1411 i367 ?368 ?368 ?1406 ?1407 i390 i391 v394 v403 i730 i390 i434 ?432 i734 v475 i802 v1109 v496 v500 i69 i69 v582 i609 i715 i226 i227 i1532 ?236 ?236 ?393 ?393 ?474 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i9 <|@
result v5|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Long.numberOfTrailingZeros(long) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:431) [bci: 45]
stamp: i32 [0 - 64] ⇈000000000000007f
=== Inputs ===
value: j3 
=== Succesors ===
=== Usages ===
i11 i524 ?15 ?845 ?81 j112 ?95 ?108 
=== Predecessor ===
- >@ <|@
instruction <@AMD64CountTrailingZeros|@org.graalvm.compiler.replacements.amd64.AMD64CountTrailingZerosNode>@ value: j3  <|@  <|@
f <@~|@floating>@ <|@
tid i10 <|@
result int[53|0x35] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:434) [bci: 50]
rawvalue: 53
stableDimension: 0
stamp: i32 [53] ⇊0000000000000035 ⇈0000000000000035
stampKind: i32
value: int[53|0x35]
=== Inputs ===
=== Succesors ===
=== Usages ===
i11 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i11 <|@
result v7|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:434) [bci: 54]
stamp: i32 [-11 - 53]
=== Inputs ===
x: i10 
y: i9 
=== Succesors ===
=== Usages ===
?845 ?15 i16 i831 i45 ?81 ?799 ?95 ?108 i136 v121 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i10 y: i9  <|@  <|@
tid ?15 <|@
d <@d|@=== Debug Properties ===
bci: 67
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: false
localsSize: 33
locksSize: 0
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:440) [bci: 64]
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 443
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 i2 j3 - i4 i5 i9 i11 - - - - - - - - - - - - - - - - - - - - - - - - - 
=== Succesors ===
=== Usages ===
v1443 i1548 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2 j3 - i4 i5 i9 i11 - - - - - - - - - - - - - - - - - - - - - - - - -  <|@  <|@
f <@~|@floating>@ <|@
tid i71 <|@
result int[52|0x34] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:471) [bci: 143]
rawvalue: 52
stableDimension: 0
stamp: i32 [52] ⇊0000000000000034 ⇈0000000000000034
stampKind: i32
value: int[52|0x34]
=== Inputs ===
=== Succesors ===
=== Usages ===
v72 i74 i524 j576 v586 v1545 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i46 <|@
result int[64|0x40] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:448) [bci: 109]
rawvalue: 64
stableDimension: 0
stamp: i32 [64] ⇊0000000000000040 ⇈0000000000000040
stampKind: i32
value: int[64|0x40]
=== Inputs ===
=== Succesors ===
=== Usages ===
v47 v149 v153 v832 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a43 <|@
result v8|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:448) [bci: 102]
rawvalue: int[27]{0, 3, 5, 7, 10, ...}
stableDimension: 0
stamp: a!# [I
stampKind: a -
value: Object[int[27]{0, 3, 5, 7, 10, ...}]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1608 v1581 v1582 v1577 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i16 <|@
result v9|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:443) [bci: 71]
stamp: i32
=== Inputs ===
x: i11 
y: i2 
=== Succesors ===
=== Usages ===
i18 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i11 y: i2  <|@  <|@
f <@~|@floating>@ <|@
tid i17 <|@
result int[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:443) [bci: 73]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1] ⇊00000000ffffffff
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i18 i61 i197 i125 i599 i609 i648 i651 i1534 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i18 <|@
result v10|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:443) [bci: 73]
stamp: i32
=== Inputs ===
x: i16 
y: i17 
=== Succesors ===
=== Usages ===
v19 i674 ?845 i677 v670 ?81 i678 v1608 i1609 ?108 ?95 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i16 y: i17  <|@  <|@
f <@~|@floating>@ <|@
tid i7 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:426) [bci: 0]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v19 v86 v99 v121 i142 i680 j173 j180 i184 i189 j1530 i716 j268 i280 i285 i232 i233 i295 j303 i307 i676 i327 i332 v348 i1532 i367 i730 v433 i434 i437 v1087 i489 j526 j529 i734 v643 v645 v733 i1610 i679 ?300 ?300 i715 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v19 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 2]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:443) [bci: 74]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i18 
y: i7 
=== Succesors ===
=== Usages ===
v22 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i18 y: i7  <|@  <|@
f <@*|@fixed>@ <|@
tid v22 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 2]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:443) [bci: 74]
stamp: void
trueSuccessorProbability: 0.7447171657016569
=== Inputs ===
condition: v19 
=== Succesors ===
trueSuccessor: v20 
falseSuccessor: v21 
=== Usages ===
=== Predecessor ===
v861 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v19 #trueSuccessor: v20 #falseSuccessor: v21  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v0|QWORD[.] + 26], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v0|QWORD[.] + 25], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = TZCNT v2|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = MOVE input: int[53|0x35] <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = SUB (x: v6|DWORD, ~y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[int[27]{0, 3, 5, 7, 10, ...}] <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = SUB (x: v7|DWORD, ~y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = DEC v9|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v10|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7447171657016569 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B17" 
    xhandlers
    flags 
    probability 4604883035445177204
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v20 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 5]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:443) [bci: 74]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1546 
=== Usages ===
=== Predecessor ===
v22 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1546  <|@  <|@
f <@~|@floating>@ <|@
tid v1577 <|@
result [v8|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a43 
index: - 
=== Succesors ===
=== Usages ===
i1546 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a43 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1546 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:448) [bci: 107]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1577 
=== Succesors ===
next: v1207 
=== Usages ===
i831 
=== Predecessor ===
v20 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1577 #next: v1207  <|@  <|@
f <@~|@floating>@ <|@
tid i831 <|@
result v11|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:448) [bci: 108]
stamp: i32
=== Inputs ===
x: i11 
y: i1546 
=== Succesors ===
=== Usages ===
v832 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i11 y: i1546  <|@  <|@
f <@~|@floating>@ <|@
tid v832 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:448) [bci: 111]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i831 
y: i46 
=== Succesors ===
=== Usages ===
v1207 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i831 y: i46  <|@  <|@
f <@*|@fixed>@ <|@
tid v1207 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:448) [bci: 111]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v832 
=== Succesors ===
trueSuccessor: v1204 
falseSuccessor: v1206 
=== Usages ===
=== Predecessor ===
i1546 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v832 #trueSuccessor: v1204 #falseSuccessor: v1206  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = ADD (x: v7|DWORD, ~y: [v8|QWORD[.] + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v11|DWORD y: 64 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B4 -> B5 falseDestination: B4 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B16" 
    xhandlers
    flags 
    probability 4604883035445177204
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1204 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:448) [bci: 111]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1211 
=== Usages ===
=== Predecessor ===
v1207 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1211  <|@  <|@
f <@~|@floating>@ <|@
tid v72 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:471) [bci: 145]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2 
y: i71 
=== Succesors ===
=== Usages ===
v1211 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2 y: i71  <|@  <|@
f <@*|@fixed>@ <|@
tid v1211 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:471) [bci: 145]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v72 
=== Succesors ===
trueSuccessor: v1208 
falseSuccessor: v1210 
=== Usages ===
=== Predecessor ===
v1204 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v72 #trueSuccessor: v1208 #falseSuccessor: v1210  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v1|DWORD y: 52 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B5 -> B6 falseDestination: B5 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B14" 
    xhandlers
    flags 
    probability 4604883035445177204
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1208 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:471) [bci: 145]
stamp: void
=== Inputs ===
=== Succesors ===
next: v59 
=== Usages ===
=== Predecessor ===
v1211 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v59  <|@  <|@
f <@~|@floating>@ <|@
tid v56 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:466) [bci: 122]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i4 
y: i2 
=== Succesors ===
=== Usages ===
v59 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i4 y: i2  <|@  <|@
f <@*|@fixed>@ <|@
tid v59 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:466) [bci: 122]
stamp: void
trueSuccessorProbability: 0.0020362233415496256
=== Inputs ===
condition: v56 
=== Succesors ===
trueSuccessor: v57 
falseSuccessor: v58 
=== Usages ===
=== Predecessor ===
v1208 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v56 #trueSuccessor: v57 #falseSuccessor: v58  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v1|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0020362233415496256 condition: > trueDestination: B6 -> B7 falseDestination: B6 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4564636031887714146
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v57 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:467) [bci: 125]
stamp: void
=== Inputs ===
=== Succesors ===
next: v541 
=== Usages ===
=== Predecessor ===
v59 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v541  <|@  <|@
f <@~|@floating>@ <|@
tid i60 <|@
result v12|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:467) [bci: 128]
stamp: i32
=== Inputs ===
x: i2 
y: i4 
=== Succesors ===
=== Usages ===
i61 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i2 y: i4  <|@  <|@
f <@~|@floating>@ <|@
tid i61 <|@
result v13|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:467) [bci: 130]
stamp: i32
=== Inputs ===
x: i60 
y: i17 
=== Succesors ===
=== Usages ===
v1580 v538 v544 v885 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i60 y: i17  <|@  <|@
f <@~|@floating>@ <|@
tid i537 <|@
result int[2|0x2] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.insignificantDigitsForPow2(FloatingDecimal.java:852) [bci: 2]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:467) [bci: 131]
rawvalue: 2
stableDimension: 0
stamp: i32 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
v538 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v538 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.insignificantDigitsForPow2(FloatingDecimal.java:852) [bci: 2]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:467) [bci: 131]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i61 
y: i537 
=== Succesors ===
=== Usages ===
v541 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i61 y: i537  <|@  <|@
f <@*|@fixed>@ <|@
tid v541 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.insignificantDigitsForPow2(FloatingDecimal.java:852) [bci: 2]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:467) [bci: 131]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v538 
=== Succesors ===
trueSuccessor: v539 
falseSuccessor: v540 
=== Usages ===
=== Predecessor ===
v57 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v538 #trueSuccessor: v539 #falseSuccessor: v540  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = SUB (x: v1|DWORD, ~y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = DEC v12|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v13|DWORD y: 2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B15" 
    xhandlers
    flags 
    probability 4560132432260343650
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v539 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.insignificantDigitsForPow2(FloatingDecimal.java:855) [bci: 19]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:467) [bci: 131]
stamp: void
=== Inputs ===
=== Succesors ===
next: v663 
=== Usages ===
=== Predecessor ===
v541 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v663  <|@  <|@
f <@*|@fixed>@ <|@
tid v663 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v67 
=== Predecessor ===
v539 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0]] destination: B8 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B13" 
    xhandlers
    flags 
    probability 4560132432260343650
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v540 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.insignificantDigitsForPow2(FloatingDecimal.java:852) [bci: 5]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:467) [bci: 131]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1547 
=== Usages ===
=== Predecessor ===
v541 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1547  <|@  <|@
f <@~|@floating>@ <|@
tid a873 <|@
result v14|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.insignificantDigitsForPow2(FloatingDecimal.java:852) [bci: 6]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:467) [bci: 131]
rawvalue: Class:sun.misc.FloatingDecimal$BinaryToASCIIBuffer
stableDimension: 0
stamp: a!# Ljava/lang/Class;
stampKind: a -
value: Object[Class:sun.misc.FloatingDecimal$BinaryToASCIIBuffer]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1578 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1578 <|@
result [v14|QWORD[.] + 104] <|@
d <@d|@=== Debug Properties ===
displacement: 104
scale: Times1
stamp: void*
=== Inputs ===
base: a873 
index: - 
=== Succesors ===
=== Usages ===
a1547 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a873 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1547 <|@
result v15|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FloatingDecimal$BinaryToASCIIBuffer.insignificantDigitsNumber
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.insignificantDigitsForPow2(FloatingDecimal.java:852) [bci: 6]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:467) [bci: 131]
nullCheck: false
stamp: n# [I
=== Inputs ===
stateBefore: - 
guard: - 
address: v1578 
=== Succesors ===
next: i1548 
=== Usages ===
a877 v1579 
=== Predecessor ===
v540 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1578 #next: i1548  <|@  <|@
f <@~|@floating>@ <|@
tid v1579 <|@
result [v15|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1547 
=== Succesors ===
=== Usages ===
i1548 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1547  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1548 <|@
result v16|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.insignificantDigitsForPow2(FloatingDecimal.java:852) [bci: 9]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:467) [bci: 131]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?15 
guard: - 
address: v1579 
=== Succesors ===
next: v547 
=== Usages ===
v544 v885 
=== Predecessor ===
a1547 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?15 guard: - address: v1579 #next: v547  <|@  <|@
f <@~|@floating>@ <|@
tid v544 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.insignificantDigitsForPow2(FloatingDecimal.java:852) [bci: 10]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:467) [bci: 131]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i61 
y: i1548 
=== Succesors ===
=== Usages ===
v547 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i61 y: i1548  <|@  <|@
f <@*|@fixed>@ <|@
tid v547 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.insignificantDigitsForPow2(FloatingDecimal.java:852) [bci: 10]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:467) [bci: 131]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v544 
=== Succesors ===
trueSuccessor: v545 
falseSuccessor: v546 
=== Usages ===
=== Predecessor ===
i1548 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v544 #trueSuccessor: v545 #falseSuccessor: v546  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v14|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:sun.misc.FloatingDecimal$BinaryToASCIIBuffer] <|@ <|@
      nr   -1  <|@ instruction v15|DWORD[.] = MOV [v14|QWORD[.] + 104] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:443) [bci: 67]
locals: v0|QWORD[.] v1|DWORD v2|QWORD - v3|DWORD v4|DWORD v5|DWORD v7|DWORD - - - - - - - - - - - - - - - - - - - - - - - - - 
>@ <|@ instruction v16|DWORD = MOV [v15|DWORD[.] * 8 + 12] size: DWORD state [bci:67] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v16|DWORD, y: v13|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B9 -> B10 falseDestination: B9 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4555628832632973154
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v545 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.insignificantDigitsForPow2(FloatingDecimal.java:853) [bci: 13]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:467) [bci: 131]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1219 
=== Usages ===
=== Predecessor ===
v547 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1219  <|@  <|@
f <@~|@floating>@ <|@
tid v885 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.insignificantDigitsForPow2(FloatingDecimal.java:853) [bci: 17]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:467) [bci: 131]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i61 
y: i1548 
=== Succesors ===
=== Usages ===
v1219 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i61 y: i1548  <|@  <|@
f <@*|@fixed>@ <|@
tid v1219 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.insignificantDigitsForPow2(FloatingDecimal.java:853) [bci: 17]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:467) [bci: 131]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v885 
=== Succesors ===
trueSuccessor: v1216 
falseSuccessor: v1218 
=== Usages ===
=== Predecessor ===
v545 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v885 #trueSuccessor: v1216 #falseSuccessor: v1218  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v16|DWORD, y: v13|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B10 -> B11 falseDestination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B15" 
    xhandlers
    flags 
    probability 4555628832632973154
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1216 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.insignificantDigitsForPow2(FloatingDecimal.java:853) [bci: 17]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:467) [bci: 131]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1549 
=== Usages ===
i1549 
=== Predecessor ===
v1219 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1549  <|@  <|@
f <@~|@floating>@ <|@
tid a877 <|@
result v17|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.insignificantDigitsForPow2(FloatingDecimal.java:852) [bci: 6]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:467) [bci: 131]
op: Uncompress
stamp: a# [I
=== Inputs ===
value: a1547 
=== Succesors ===
=== Usages ===
v1580 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1547  <|@  <|@
f <@~|@floating>@ <|@
tid v1580 <|@
result [v17|QWORD[.] + v13|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a877 
index: i61 
=== Succesors ===
=== Usages ===
i1549 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a877 index: i61  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1549 <|@
result v18|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.insignificantDigitsForPow2(FloatingDecimal.java:853) [bci: 17]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:467) [bci: 131]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v1216 
address: v1580 
=== Succesors ===
next: v66 
=== Usages ===
i69 
=== Predecessor ===
v1216 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1216 address: v1580 #next: v66  <|@  <|@
f <@*|@fixed>@ <|@
tid v66 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:471) [bci: 142]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v67 
=== Predecessor ===
i1549 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v17|QWORD[.] = UNCOMPRESSPOINTER (input: v15|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@e9a9e99 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = MOV [v17|QWORD[.] + v13|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v18|DWORD] destination: B11 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B158" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1218 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.insignificantDigitsForPow2(FloatingDecimal.java:853) [bci: 17]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:467) [bci: 131]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1452 
=== Usages ===
=== Predecessor ===
v1219 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1452  <|@  <|@
f <@~|@floating>@ <|@
tid i1453 <|@
result int[-226843|0xfffffffffffc89e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -226843
stableDimension: 0
stamp: i32 [-226843] ⇊00000000fffc89e5 ⇈00000000fffc89e5
stampKind: i32
value: int[-226843|0xfffffffffffc89e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1441 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1452 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1438 
=== Predecessor ===
v1218 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-226843|0xfffffffffffc89e5]] destination: B12 -> B158 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B15" 
    xhandlers
    flags 
    probability 4555628832632973154
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v546 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.insignificantDigitsForPow2(FloatingDecimal.java:855) [bci: 19]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:467) [bci: 131]
stamp: void
=== Inputs ===
=== Succesors ===
next: v662 
=== Usages ===
=== Predecessor ===
v547 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v662  <|@  <|@
f <@*|@fixed>@ <|@
tid v662 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v67 
=== Predecessor ===
v546 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0]] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B15" 
    xhandlers
    flags 
    probability 4604869376833871008
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v58 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:469) [bci: 139]
stamp: void
=== Inputs ===
=== Succesors ===
next: v68 
=== Usages ===
=== Predecessor ===
v59 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v68  <|@  <|@
f <@*|@fixed>@ <|@
tid v68 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:471) [bci: 142]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v67 
=== Predecessor ===
v58 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0]] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B11" "B14" "B13" "B8" 
    successors 
    xhandlers
    flags 
    probability 4604883035445177204
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i69 <|@
result v19|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:471) [bci: 142]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v67 
values: i1549 i8 i8 i8 
=== Succesors ===
=== Usages ===
v872 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v67 values: i1549 i8 i8 i8  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v67 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:471) [bci: 142]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v66 v68 v662 v663 
=== Succesors ===
next: v78 
=== Usages ===
i69 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v66 v68 v662 v663 #next: v78  <|@  <|@
f <@~|@floating>@ <|@
tid i74 <|@
result v21|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:474) [bci: 162]
stamp: i32
=== Inputs ===
x: i71 
y: i2 
=== Succesors ===
=== Usages ===
j75 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i71 y: i2  <|@  <|@
f <@~|@floating>@ <|@
tid j75 <|@
result v22|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:474) [bci: 163]
stamp: i64
=== Inputs ===
x: j3 
y: i74 
=== Succesors ===
=== Usages ===
v872 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j3 y: i74  <|@  <|@
tid v872 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:476) [bci: 170]
returnStamp: void
signature: [Ljdk.vm.ci.meta.JavaType;@432f8ac4
stamp: void
targetMethod: HotSpotMethod<FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(int, long, int)>
=== Inputs ===
arguments: a1 i8 j75 i69 
=== Succesors ===
=== Usages ===
v78 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1 i8 j75 i69  <|@  <|@
tid ?1404 <|@
d <@d|@=== Debug Properties ===
bci: 170
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: true
localsSize: 33
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 476
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
=== Succesors ===
=== Usages ===
v78 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v78 <|@
d <@d|@=== Debug Properties ===
bci: 170
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:476) [bci: 170]
polymorphic: false
stamp: void
targetMethod: Direct#FloatingDecimal$BinaryToASCIIBuffer.developLongDigits
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v872 
stateDuring: ?1404 
=== Succesors ===
next: v80 
=== Usages ===
=== Predecessor ===
v67 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v872 stateDuring: ?1404 #next: v80  <|@  <|@
f <@*|@fixed>@ <|@
tid v80 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:477) [bci: 173]
stamp: void
=== Inputs ===
result: - 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v78 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: - memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v19|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = MOVE input: int[52|0x34] <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = SUB (x: v20|DWORD, ~y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v21|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v22|QWORD = SHR (x: v2|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE v22|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE v19|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:476) [bci: 170]
locals: - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD, rcx|QWORD, r8|DWORD] [] callTarget: HotSpotMethod<FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(int, long, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:170] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B158" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1210 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:471) [bci: 145]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1444 
=== Usages ===
=== Predecessor ===
v1211 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1444  <|@  <|@
f <@~|@floating>@ <|@
tid i1445 <|@
result int[-222995|0xfffffffffffc98ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -222995
stableDimension: 0
stamp: i32 [-222995] ⇊00000000fffc98ed ⇈00000000fffc98ed
stampKind: i32
value: int[-222995|0xfffffffffffc98ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1441 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1444 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1438 
=== Predecessor ===
v1210 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-222995|0xfffffffffffc98ed]] destination: B16 -> B158 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B158" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1206 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:448) [bci: 111]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1439 
=== Usages ===
=== Predecessor ===
v1207 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1439  <|@  <|@
f <@~|@floating>@ <|@
tid i1440 <|@
result int[-222739|0xfffffffffffc99ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -222739
stableDimension: 0
stamp: i32 [-222739] ⇊00000000fffc99ed ⇈00000000fffc99ed
stampKind: i32
value: int[-222739|0xfffffffffffc99ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1441 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1439 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1438 
=== Predecessor ===
v1206 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-222739|0xfffffffffffc99ed]] destination: B17 -> B158 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B19" "B28" 
    xhandlers
    flags 
    probability 4598270386627586328
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v21 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 9]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:443) [bci: 74]
stamp: void
=== Inputs ===
=== Succesors ===
next: v42 
=== Usages ===
=== Predecessor ===
v22 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v42  <|@  <|@
f <@~|@floating>@ <|@
tid j590 <|@
result v23|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:827) [bci: 102]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
rawvalue: 4503599627370496
stableDimension: 0
stamp: i64 [4503599627370496] ⇊0010000000000000 ⇈0010000000000000
stampKind: i64
value: long[4503599627370496|0x10000000000000]
=== Inputs ===
=== Succesors ===
=== Usages ===
j591 j1539 j1540 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i605 <|@
result int[1075|0x433] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:827) [bci: 110]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
rawvalue: 1075
stableDimension: 0
stamp: i32 [1075] ⇊0000000000000433 ⇈0000000000000433
stampKind: i32
value: int[1075|0x433]
=== Inputs ===
=== Succesors ===
=== Usages ===
i606 i1543 i1544 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j559 <|@
result v24|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:820) [bci: 4]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
rawvalue: 4503599627370495
stableDimension: 0
stamp: i64 [4503599627370495] ⇊000fffffffffffff ⇈000fffffffffffff
stampKind: i64
value: long[4503599627370495|0xfffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
j560 j588 j589 j1541 j1542 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j560 <|@
result v25|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:820) [bci: 7]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: i64 [0 - 4503599627370495] ⇈000fffffffffffff
=== Inputs ===
x: j3 
y: j559 
=== Succesors ===
=== Usages ===
j561 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: j3 y: j559  <|@  <|@
f <@~|@floating>@ <|@
tid j558 <|@
result v26|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:820) [bci: 0]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
rawvalue: 4607182418800017408
stableDimension: 0
stamp: i64 [4607182418800017408] ⇊3ff0000000000000 ⇈3ff0000000000000
stampKind: i64
value: long[4607182418800017408|0x3ff0000000000000]
=== Inputs ===
=== Succesors ===
=== Usages ===
j561 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j561 <|@
result v27|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.OrNode$$Lambda$69/599890587@2745c573
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:820) [bci: 8]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: i64 [4607182418800017408 - 4611686018427387903] ⇊3ff0000000000000 ⇈3fffffffffffffff
=== Inputs ===
x: j560 
y: j558 
=== Succesors ===
=== Usages ===
d562 
=== Predecessor ===
- >@ <|@
instruction <@||@org.graalvm.compiler.nodes.calc.OrNode>@ x: j560 y: j558  <|@  <|@
f <@~|@floating>@ <|@
tid d562 <|@
result v28|DOUBLE <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Double.longBitsToDouble(long) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:820) [bci: 9]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: f64! [4.9E-324 - 1.7976931348623157E308]
=== Inputs ===
value: j561 
=== Succesors ===
=== Usages ===
d564 
=== Predecessor ===
- >@ <|@
instruction <@Reinterpret|@org.graalvm.compiler.nodes.calc.ReinterpretNode>@ value: j561  <|@  <|@
f <@~|@floating>@ <|@
tid d563 <|@
result double[1.5|0x3ff8000000000000] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:821) [bci: 14]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
rawvalue: 1.5
stableDimension: 0
stamp: f64! [1.5]
stampKind: f64
value: double[1.5|0x3ff8000000000000]
=== Inputs ===
=== Succesors ===
=== Usages ===
d564 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid d564 <|@
result v29|DOUBLE <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:821) [bci: 17]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: f64
=== Inputs ===
x: d562 
y: d563 
=== Succesors ===
=== Usages ===
d566 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: d562 y: d563  <|@  <|@
f <@~|@floating>@ <|@
tid d565 <|@
result double[0.289529654|0x3fd287a762c9bd93] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:821) [bci: 18]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
rawvalue: 0.289529654
stableDimension: 0
stamp: f64! [0.289529654]
stampKind: f64
value: double[0.289529654|0x3fd287a762c9bd93]
=== Inputs ===
=== Succesors ===
=== Usages ===
d566 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid d566 <|@
result v31|DOUBLE <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.MulNode$$Lambda$125/271184744@39a592fe
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:821) [bci: 21]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: f64
=== Inputs ===
x: d564 
y: d565 
=== Succesors ===
=== Usages ===
d568 
=== Predecessor ===
- >@ <|@
instruction <@*|@org.graalvm.compiler.nodes.calc.MulNode>@ x: d564 y: d565  <|@  <|@
f <@~|@floating>@ <|@
tid d567 <|@
result double[0.176091259|0x3fc68a288b421b8c] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:821) [bci: 22]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
rawvalue: 0.176091259
stableDimension: 0
stamp: f64! [0.176091259]
stampKind: f64
value: double[0.176091259|0x3fc68a288b421b8c]
=== Inputs ===
=== Succesors ===
=== Usages ===
d568 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid d568 <|@
result v33|DOUBLE <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:821) [bci: 25]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: f64
=== Inputs ===
x: d566 
y: d567 
=== Succesors ===
=== Usages ===
d572 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: d566 y: d567  <|@  <|@
f <@~|@floating>@ <|@
tid d569 <|@
result v35|DOUBLE <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.FloatConvertNode$$Lambda$1/154487945@39bcec26
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:821) [bci: 27]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
op: I2D
stamp: f64! [-2.147483648E9 - 2.147483647E9]
=== Inputs ===
value: i2 
=== Succesors ===
=== Usages ===
d571 
=== Predecessor ===
- >@ <|@
instruction <@FloatConvert|@org.graalvm.compiler.nodes.calc.FloatConvertNode>@ value: i2  <|@  <|@
f <@~|@floating>@ <|@
tid d570 <|@
result double[0.301029995663981|0x3fd34413509f79fb] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:821) [bci: 28]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
rawvalue: 0.301029995663981
stableDimension: 0
stamp: f64! [0.301029995663981]
stampKind: f64
value: double[0.301029995663981|0x3fd34413509f79fb]
=== Inputs ===
=== Succesors ===
=== Usages ===
d571 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid d571 <|@
result v36|DOUBLE <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.MulNode$$Lambda$125/271184744@39a592fe
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:821) [bci: 31]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: f64
=== Inputs ===
x: d569 
y: d570 
=== Succesors ===
=== Usages ===
d572 
=== Predecessor ===
- >@ <|@
instruction <@*|@org.graalvm.compiler.nodes.calc.MulNode>@ x: d569 y: d570  <|@  <|@
f <@~|@floating>@ <|@
tid d572 <|@
result v38|DOUBLE <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:821) [bci: 32]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: f64
=== Inputs ===
x: d568 
y: d571 
=== Succesors ===
=== Usages ===
j573 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: d568 y: d571  <|@  <|@
f <@~|@floating>@ <|@
tid j573 <|@
result v39|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Double.doubleToRawLongBits(double) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:822) [bci: 37]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: i64
=== Inputs ===
value: d572 
=== Succesors ===
=== Usages ===
j575 v581 j589 v597 v602 j1541 j1542 
=== Predecessor ===
- >@ <|@
instruction <@Reinterpret|@org.graalvm.compiler.nodes.calc.ReinterpretNode>@ value: d572  <|@  <|@
f <@~|@floating>@ <|@
tid j580 <|@
result v40|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:824) [bci: 60]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
rawvalue: -9223372036854775808
stableDimension: 0
stamp: i64 [-9223372036854775808] ⇊8000000000000000 ⇈8000000000000000
stampKind: i64
value: long[-9223372036854775808|0x8000000000000000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v581 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v581 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:824) [bci: 66]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: void
=== Inputs ===
x: j573 
y: j580 
=== Succesors ===
=== Usages ===
v596 i609 v851 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: j573 y: j580  <|@  <|@
f <@~|@floating>@ <|@
tid j574 <|@
result v41|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:823) [bci: 44]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
rawvalue: 9218868437227405312
stableDimension: 0
stamp: i64 [9218868437227405312] ⇊7ff0000000000000 ⇈7ff0000000000000
stampKind: i64
value: long[9218868437227405312|0x7ff0000000000000]
=== Inputs ===
=== Succesors ===
=== Usages ===
j575 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j575 <|@
result v42|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:823) [bci: 47]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: i64 [0 - 9218868437227405312] ⇈7ff0000000000000
=== Inputs ===
x: j573 
y: j574 
=== Succesors ===
=== Usages ===
j576 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: j573 y: j574  <|@  <|@
f <@~|@floating>@ <|@
tid j576 <|@
result v43|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:823) [bci: 50]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: i64 [0 - 2047] ⇈00000000000007ff
=== Inputs ===
x: j575 
y: i71 
=== Succesors ===
=== Usages ===
i577 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j575 y: i71  <|@  <|@
f <@~|@floating>@ <|@
tid i577 <|@
result v44|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 64
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:823) [bci: 51]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
resultBits: 32
stamp: i32 [0 - 2047] ⇈00000000000007ff
=== Inputs ===
value: j576 
=== Succesors ===
=== Usages ===
i579 i606 i1543 i1544 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: j576  <|@  <|@
f <@~|@floating>@ <|@
tid i578 <|@
result int[-1023|0xfffffffffffffc01] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:823) [bci: 55]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
rawvalue: -1023
stableDimension: 0
stamp: i32 [-1023] ⇊00000000fffffc01 ⇈00000000fffffc01
stampKind: i32
value: int[-1023|0xfffffffffffffc01]
=== Inputs ===
=== Succesors ===
=== Usages ===
i579 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i579 <|@
result v45|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:823) [bci: 55]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: i32 [-1023 - 1024]
=== Inputs ===
x: i577 
y: i578 
=== Succesors ===
=== Usages ===
v582 v586 j588 v1545 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i577 y: i578  <|@  <|@
f <@~|@floating>@ <|@
tid v582 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:825) [bci: 78]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i579 
y: i8 
=== Succesors ===
=== Usages ===
v585 v789 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i579 y: i8  <|@  <|@
f <@~|@floating>@ <|@
tid i38 <|@
result int[27|0x1b] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:448) [bci: 96]
rawvalue: 27
stableDimension: 0
stamp: i32 [27] ⇊000000000000001b ⇈000000000000001b
stampKind: i32
value: int[27|0x1b]
=== Inputs ===
=== Succesors ===
=== Usages ===
v670 v671 v917 v1188 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v670 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:448) [bci: 97]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i18 
y: i38 
=== Succesors ===
=== Usages ===
v42 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i18 y: i38  <|@  <|@
f <@*|@fixed>@ <|@
tid v42 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:448) [bci: 97]
stamp: void
trueSuccessorProbability: 0.5429471082944717
=== Inputs ===
condition: v670 
=== Succesors ===
trueSuccessor: v40 
falseSuccessor: v41 
=== Usages ===
=== Predecessor ===
v21 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v670 #trueSuccessor: v40 #falseSuccessor: v41  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v23|QWORD = MOVE input: long[4503599627370496|0x10000000000000] <|@ <|@
      nr   -1  <|@ instruction v24|QWORD = MOVE input: long[4503599627370495|0xfffffffffffff] <|@ <|@
      nr   -1  <|@ instruction v25|QWORD = AND (x: v2|QWORD, y: v24|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = MOVE input: long[4607182418800017408|0x3ff0000000000000] <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = OR (x: v25|QWORD, y: v26|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v28|DOUBLE = VMOVQ v27|QWORD nZ: XMM <|@ <|@
      nr   -1  <|@ instruction v30|DOUBLE = VMOVE input: double[1.5|0x3ff8000000000000] <|@ <|@
      nr   -1  <|@ instruction v29|DOUBLE = VSUBSD (x: v28|DOUBLE, y: v30|DOUBLE) nZ: XMM <|@ <|@
      nr   -1  <|@ instruction v32|DOUBLE = VMOVE input: double[0.289529654|0x3fd287a762c9bd93] <|@ <|@
      nr   -1  <|@ instruction v31|DOUBLE = VMULSD (x: v29|DOUBLE, y: v32|DOUBLE) nZ: XMM <|@ <|@
      nr   -1  <|@ instruction v34|DOUBLE = VMOVE input: double[0.176091259|0x3fc68a288b421b8c] <|@ <|@
      nr   -1  <|@ instruction v33|DOUBLE = VADDSD (x: v31|DOUBLE, y: v34|DOUBLE) nZ: XMM <|@ <|@
      nr   -1  <|@ instruction v35|DOUBLE = VCVTSI2SD v1|DWORD <|@ <|@
      nr   -1  <|@ instruction v37|DOUBLE = VMOVE input: double[0.301029995663981|0x3fd34413509f79fb] <|@ <|@
      nr   -1  <|@ instruction v36|DOUBLE = VMULSD (x: v35|DOUBLE, y: v37|DOUBLE) nZ: XMM <|@ <|@
      nr   -1  <|@ instruction v38|DOUBLE = VADDSD (x: v33|DOUBLE, y: v36|DOUBLE) nZ: XMM <|@ <|@
      nr   -1  <|@ instruction v39|QWORD = VMOVQ v38|DOUBLE <|@ <|@
      nr   -1  <|@ instruction v40|QWORD = MOVE input: long[-9223372036854775808|0x8000000000000000] <|@ <|@
      nr   -1  <|@ instruction v41|QWORD = MOVE input: long[9218868437227405312|0x7ff0000000000000] <|@ <|@
      nr   -1  <|@ instruction v42|QWORD = AND (x: v39|QWORD, y: v41|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v43|QWORD = SHR v42|QWORD y: 52 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v44|DWORD = MOV v43|QWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v45|DWORD = LEA [v44|DWORD - 1023] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v10|DWORD y: 27 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5429471082944717 condition: |<| trueDestination: B18 -> B19 falseDestination: B18 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B27" 
    xhandlers
    flags 
    probability 4594161794464019143
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v40 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:448) [bci: 100]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1550 
=== Usages ===
i1550 
=== Predecessor ===
v42 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1550  <|@  <|@
f <@~|@floating>@ <|@
tid v1608 <|@
result [v8|QWORD[.] + v10|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a43 
index: i18 
=== Succesors ===
=== Usages ===
i1550 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a43 index: i18  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1550 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:448) [bci: 107]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v40 
address: v1608 
=== Succesors ===
next: v1223 
=== Usages ===
i45 
=== Predecessor ===
v40 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v40 address: v1608 #next: v1223  <|@  <|@
f <@~|@floating>@ <|@
tid i45 <|@
result v46|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:448) [bci: 108]
stamp: i32
=== Inputs ===
x: i11 
y: i1550 
=== Succesors ===
=== Usages ===
v47 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i11 y: i1550  <|@  <|@
f <@~|@floating>@ <|@
tid v47 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:448) [bci: 111]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i45 
y: i46 
=== Succesors ===
=== Usages ===
v1223 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i45 y: i46  <|@  <|@
f <@*|@fixed>@ <|@
tid v1223 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:448) [bci: 111]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v47 
=== Succesors ===
trueSuccessor: v1220 
falseSuccessor: v1222 
=== Usages ===
=== Predecessor ===
i1550 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v47 #trueSuccessor: v1220 #falseSuccessor: v1222  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v46|DWORD = ADD (x: v7|DWORD, ~y: [v8|QWORD[.] + v10|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v46|DWORD y: 64 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B19 -> B20 falseDestination: B19 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4594161794464019143
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1220 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:448) [bci: 111]
stamp: void
=== Inputs ===
=== Succesors ===
next: v585 
=== Usages ===
=== Predecessor ===
v1223 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v585  <|@  <|@
f <@*|@fixed>@ <|@
tid v585 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:825) [bci: 78]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: void
trueSuccessorProbability: 0.8090044605656586
=== Inputs ===
condition: v582 
=== Succesors ===
trueSuccessor: v583 
falseSuccessor: v584 
=== Usages ===
=== Predecessor ===
v1220 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v582 #trueSuccessor: v583 #falseSuccessor: v584  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v45|DWORD, y: v45|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.8090044605656586 condition: < trueDestination: B20 -> B21 falseDestination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B30" 
    xhandlers
    flags 
    probability 4592744391825976755
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v583 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:829) [bci: 147]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: void
=== Inputs ===
=== Succesors ===
next: v771 
=== Usages ===
=== Predecessor ===
v585 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v771  <|@  <|@
f <@*|@fixed>@ <|@
tid v771 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v770 
=== Predecessor ===
v583 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B21 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" "B26" 
    xhandlers
    flags 
    probability 4583287530145046380
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v584 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:825) [bci: 81]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1227 
=== Usages ===
=== Predecessor ===
v585 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1227  <|@  <|@
f <@~|@floating>@ <|@
tid v1545 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:825) [bci: 85]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i579 
y: i71 
=== Succesors ===
=== Usages ===
v1227 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i579 y: i71  <|@  <|@
f <@*|@fixed>@ <|@
tid v1227 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:825) [bci: 85]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1545 
=== Succesors ===
trueSuccessor: v1224 
falseSuccessor: v1226 
=== Usages ===
=== Predecessor ===
v584 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1545 #trueSuccessor: v1224 #falseSuccessor: v1226  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v45|DWORD y: 52 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B22 -> B23 falseDestination: B22 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4583287530145046380
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1224 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:825) [bci: 85]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: void
=== Inputs ===
=== Succesors ===
next: v851 
=== Usages ===
=== Predecessor ===
v1227 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v851  <|@  <|@
f <@*|@fixed>@ <|@
tid v851 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:828) [bci: 117]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: void
trueSuccessorProbability: 0.007057615809059412
=== Inputs ===
condition: v581 
=== Succesors ===
trueSuccessor: v849 
falseSuccessor: v850 
=== Usages ===
=== Predecessor ===
v1224 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v581 #trueSuccessor: v849 #falseSuccessor: v850  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v40|QWORD, y: v39|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.007057615809059412 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B40" 
    xhandlers
    flags 
    probability 4551025052825482075
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v849 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:828) [bci: 144]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: void
=== Inputs ===
=== Succesors ===
next: v852 
=== Usages ===
=== Predecessor ===
v851 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v852  <|@  <|@
f <@~|@floating>@ <|@
tid j1542 <|@
result v47|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:827) [bci: 101]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: i64 [0 - 4503599627370495] ⇈000fffffffffffff
=== Inputs ===
x: j573 
y: j559 
=== Succesors ===
=== Usages ===
j1540 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: j573 y: j559  <|@  <|@
f <@~|@floating>@ <|@
tid j1540 <|@
result v48|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.OrNode$$Lambda$69/599890587@2745c573
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:827) [bci: 105]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: i64 [4503599627370496 - 9007199254740991] ⇊0010000000000000 ⇈001fffffffffffff
=== Inputs ===
x: j1542 
y: j590 
=== Succesors ===
=== Usages ===
j1538 
=== Predecessor ===
- >@ <|@
instruction <@||@org.graalvm.compiler.nodes.calc.OrNode>@ x: j1542 y: j590  <|@  <|@
f <@~|@floating>@ <|@
tid i1544 <|@
result v50|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:827) [bci: 110]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: i32 [-972 - 1075]
=== Inputs ===
x: i605 
y: i577 
=== Succesors ===
=== Usages ===
j1538 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i605 y: i577  <|@  <|@
f <@~|@floating>@ <|@
tid j1538 <|@
result v51|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:827) [bci: 111]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: i64 [0 - 9007199254740991] ⇈001fffffffffffff
=== Inputs ===
x: j1540 
y: i1544 
=== Succesors ===
=== Usages ===
i1536 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j1540 y: i1544  <|@  <|@
f <@~|@floating>@ <|@
tid i1536 <|@
result v52|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 64
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:827) [bci: 112]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
resultBits: 32
stamp: i32
=== Inputs ===
value: j1538 
=== Succesors ===
=== Usages ===
i612 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: j1538  <|@  <|@
f <@*|@fixed>@ <|@
tid v852 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v610 
=== Predecessor ===
v849 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v47|QWORD = AND (x: v39|QWORD, y: v24|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v48|QWORD = OR (x: v47|QWORD, y: v23|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v49|DWORD = MOVE input: int[1075|0x433] <|@ <|@
      nr   -1  <|@ instruction v50|DWORD = SUB (x: v49|DWORD, ~y: v44|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v50|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v51|QWORD = SHR (x: v48|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v52|DWORD = MOV v51|QWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v52|DWORD] destination: B24 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B37" 
    xhandlers
    flags 
    probability 4583233678357478789
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v850 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:828) [bci: 120]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: void
=== Inputs ===
=== Succesors ===
next: v846 
=== Usages ===
=== Predecessor ===
v851 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v846  <|@  <|@
f <@*|@fixed>@ <|@
tid v846 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v843 
=== Predecessor ===
v850 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B25 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B158" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1226 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:825) [bci: 85]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1450 
=== Usages ===
=== Predecessor ===
v1227 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1450  <|@  <|@
f <@~|@floating>@ <|@
tid i1451 <|@
result int[-287763|0xfffffffffffb9bed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -287763
stableDimension: 0
stamp: i32 [-287763] ⇊00000000fffb9bed ⇈00000000fffb9bed
stampKind: i32
value: int[-287763|0xfffffffffffb9bed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1441 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1450 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1438 
=== Predecessor ===
v1226 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-287763|0xfffffffffffb9bed]] destination: B26 -> B158 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B158" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1222 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:448) [bci: 111]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1448 
=== Usages ===
=== Predecessor ===
v1223 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1448  <|@  <|@
f <@~|@floating>@ <|@
tid i1449 <|@
result int[-287507|0xfffffffffffb9ced] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -287507
stableDimension: 0
stamp: i32 [-287507] ⇊00000000fffb9ced ⇈00000000fffb9ced
stampKind: i32
value: int[-287507|0xfffffffffffb9ced]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1441 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1448 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1438 
=== Predecessor ===
v1222 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-287507|0xfffffffffffb9ced]] destination: B27 -> B158 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B29" "B33" 
    xhandlers
    flags 
    probability 4593071939154919121
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v41 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 174]
stamp: void
=== Inputs ===
=== Succesors ===
next: v789 
=== Usages ===
=== Predecessor ===
v42 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v789  <|@  <|@
f <@*|@fixed>@ <|@
tid v789 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:825) [bci: 78]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: void
trueSuccessorProbability: 0.8090044605656586
=== Inputs ===
condition: v582 
=== Succesors ===
trueSuccessor: v787 
falseSuccessor: v788 
=== Usages ===
=== Predecessor ===
v41 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v582 #trueSuccessor: v787 #falseSuccessor: v788  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v45|DWORD, y: v45|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.8090044605656586 condition: < trueDestination: B28 -> B29 falseDestination: B28 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B30" 
    xhandlers
    flags 
    probability 4591466140625282328
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v787 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:829) [bci: 147]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: void
=== Inputs ===
=== Succesors ===
next: v772 
=== Usages ===
=== Predecessor ===
v789 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v772  <|@  <|@
f <@*|@fixed>@ <|@
tid v772 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v770 
=== Predecessor ===
v787 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B21" "B29" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4596608865853000038
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v770 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v771 v772 
=== Succesors ===
next: v1231 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v771 v772 #next: v1231  <|@  <|@
f <@~|@floating>@ <|@
tid j601 <|@
result v53|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:830) [bci: 154]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
rawvalue: 9223372036854775807
stableDimension: 0
stamp: i64 [9223372036854775807] ⇊7fffffffffffffff ⇈7fffffffffffffff
stampKind: i64
value: long[9223372036854775807|0x7fffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v602 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v602 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:830) [bci: 160]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: void
=== Inputs ===
x: j573 
y: j601 
=== Succesors ===
=== Usages ===
v1231 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: j573 y: j601  <|@  <|@
f <@*|@fixed>@ <|@
tid v1231 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:830) [bci: 160]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v602 
=== Succesors ===
trueSuccessor: v1230 
falseSuccessor: v1228 
=== Usages ===
=== Predecessor ===
v770 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v602 #trueSuccessor: v1230 #falseSuccessor: v1228  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v53|QWORD = MOVE input: long[9223372036854775807|0x7fffffffffffffff] <|@ <|@
      nr   -1  <|@ instruction TEST (x: v53|QWORD, y: v39|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1230 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:830) [bci: 160]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1229 
=== Usages ===
=== Predecessor ===
v1231 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1229  <|@  <|@
tid ?81 <|@
d <@d|@=== Debug Properties ===
bci: 174
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: false
localsSize: 33
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 515
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 i2 j3 - i4 i5 i9 i11 i18 - - - - - - - - - - - - - - - - - - - - - - - - 
=== Succesors ===
=== Usages ===
v1229 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2 j3 - i4 i5 i9 i11 i18 - - - - - - - - - - - - - - - - - - - - - - - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v1229 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 1126
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:830) [bci: 160]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
reason: UnreachedCode
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?81 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1230 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?81  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -288275 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 174]
locals: v0|QWORD[.] v1|DWORD v2|QWORD - v3|DWORD v4|DWORD v5|DWORD v7|DWORD v10|DWORD - - - - - - - - - - - - - - - - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:174] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B40" 
    xhandlers
    flags 
    probability 4596608865853000038
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1228 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:830) [bci: 160]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: void
=== Inputs ===
=== Succesors ===
next: v611 
=== Usages ===
=== Predecessor ===
v1231 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v611  <|@  <|@
f <@~|@floating>@ <|@
tid i609 <|@
result v54|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:830) [bci: 169]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: i32 [-1 - 0]
=== Inputs ===
condition: v581 
trueValue: i8 
falseValue: i17 
=== Succesors ===
=== Usages ===
i612 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v581 trueValue: i8 falseValue: i17  <|@  <|@
f <@*|@fixed>@ <|@
tid v611 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v610 
=== Predecessor ===
v1228 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v40|QWORD, y: v39|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v55|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction v54|DWORD = CMOVE (falseValue: int[-1|0xffffffffffffffff], ~trueValue: v55|DWORD) condition: = <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v54|DWORD] destination: B32 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B34" "B157" 
    xhandlers
    flags 
    probability 4582080415526971107
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v788 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:825) [bci: 81]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1235 
=== Usages ===
=== Predecessor ===
v789 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1235  <|@  <|@
f <@~|@floating>@ <|@
tid v586 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:825) [bci: 85]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i579 
y: i71 
=== Succesors ===
=== Usages ===
v1235 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i579 y: i71  <|@  <|@
f <@*|@fixed>@ <|@
tid v1235 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:825) [bci: 85]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v586 
=== Succesors ===
trueSuccessor: v1232 
falseSuccessor: v1234 
=== Usages ===
=== Predecessor ===
v788 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v586 #trueSuccessor: v1232 #falseSuccessor: v1234  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v45|DWORD y: 52 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B33 -> B34 falseDestination: B33 -> B157 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4582080415526971107
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1232 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:825) [bci: 85]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: void
=== Inputs ===
=== Succesors ===
next: v596 
=== Usages ===
=== Predecessor ===
v1235 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v596  <|@  <|@
f <@*|@fixed>@ <|@
tid v596 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:828) [bci: 117]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: void
trueSuccessorProbability: 0.007057615809059412
=== Inputs ===
condition: v581 
=== Succesors ===
trueSuccessor: v594 
falseSuccessor: v595 
=== Usages ===
=== Predecessor ===
v1232 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v581 #trueSuccessor: v594 #falseSuccessor: v595  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v40|QWORD, y: v39|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.007057615809059412 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B40" 
    xhandlers
    flags 
    probability 4549934575870362106
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v594 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:828) [bci: 144]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: void
=== Inputs ===
=== Succesors ===
next: v614 
=== Usages ===
=== Predecessor ===
v596 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v614  <|@  <|@
f <@~|@floating>@ <|@
tid j1541 <|@
result v56|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:827) [bci: 101]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: i64 [0 - 4503599627370495] ⇈000fffffffffffff
=== Inputs ===
x: j573 
y: j559 
=== Succesors ===
=== Usages ===
j1539 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: j573 y: j559  <|@  <|@
f <@~|@floating>@ <|@
tid j1539 <|@
result v57|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.OrNode$$Lambda$69/599890587@2745c573
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:827) [bci: 105]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: i64 [4503599627370496 - 9007199254740991] ⇊0010000000000000 ⇈001fffffffffffff
=== Inputs ===
x: j1541 
y: j590 
=== Succesors ===
=== Usages ===
j1537 
=== Predecessor ===
- >@ <|@
instruction <@||@org.graalvm.compiler.nodes.calc.OrNode>@ x: j1541 y: j590  <|@  <|@
f <@~|@floating>@ <|@
tid i1543 <|@
result v59|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:827) [bci: 110]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: i32 [-972 - 1075]
=== Inputs ===
x: i605 
y: i577 
=== Succesors ===
=== Usages ===
j1537 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i605 y: i577  <|@  <|@
f <@~|@floating>@ <|@
tid j1537 <|@
result v60|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:827) [bci: 111]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: i64 [0 - 9007199254740991] ⇈001fffffffffffff
=== Inputs ===
x: j1539 
y: i1543 
=== Succesors ===
=== Usages ===
i1535 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j1539 y: i1543  <|@  <|@
f <@~|@floating>@ <|@
tid i1535 <|@
result v61|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 64
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:827) [bci: 112]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
resultBits: 32
stamp: i32
=== Inputs ===
value: j1537 
=== Succesors ===
=== Usages ===
i612 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: j1537  <|@  <|@
f <@*|@fixed>@ <|@
tid v614 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v610 
=== Predecessor ===
v594 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v56|QWORD = AND (x: v39|QWORD, y: v24|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v57|QWORD = OR (x: v56|QWORD, y: v23|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v58|DWORD = MOVE input: int[1075|0x433] <|@ <|@
      nr   -1  <|@ instruction v59|DWORD = SUB (x: v58|DWORD, ~y: v44|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v59|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v60|QWORD = SHR (x: v57|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v61|DWORD = MOV v60|QWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v61|DWORD] destination: B35 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    probability 4582035083090615391
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v595 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:828) [bci: 120]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: void
=== Inputs ===
=== Succesors ===
next: v844 
=== Usages ===
=== Predecessor ===
v596 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v844  <|@  <|@
f <@*|@fixed>@ <|@
tid v844 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v843 
=== Predecessor ===
v595 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" "B25" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4587137980351417586
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v843 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v844 v846 
=== Succesors ===
next: v1239 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v844 v846 #next: v1239  <|@  <|@
f <@~|@floating>@ <|@
tid j588 <|@
result v62|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:826) [bci: 93]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: i64 [0 - 4503599627370495] ⇈000fffffffffffff
=== Inputs ===
x: j559 
y: i579 
=== Succesors ===
=== Usages ===
v597 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j559 y: i579  <|@  <|@
f <@~|@floating>@ <|@
tid v597 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:828) [bci: 127]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: void
=== Inputs ===
x: j573 
y: j588 
=== Succesors ===
=== Usages ===
v1239 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: j573 y: j588  <|@  <|@
f <@*|@fixed>@ <|@
tid v1239 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:828) [bci: 127]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v597 
=== Succesors ===
trueSuccessor: v1238 
falseSuccessor: v1236 
=== Usages ===
=== Predecessor ===
v843 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v597 #trueSuccessor: v1238 #falseSuccessor: v1236  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v45|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v62|QWORD = SHR (x: v24|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v62|QWORD, y: v39|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1238 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:828) [bci: 127]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1237 
=== Usages ===
=== Predecessor ===
v1239 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1237  <|@  <|@
tid ?845 <|@
d <@d|@=== Debug Properties ===
bci: 174
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: false
localsSize: 33
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 515
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 i2 j3 - i4 i5 i9 i11 i18 - - - - - - - - - - - - - - - - - - - - - - - - 
=== Succesors ===
=== Usages ===
v1237 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2 j3 - i4 i5 i9 i11 i18 - - - - - - - - - - - - - - - - - - - - - - - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v1237 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 1127
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:828) [bci: 127]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
reason: UnreachedCode
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?845 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1238 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?845  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -288531 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 174]
locals: v0|QWORD[.] v1|DWORD v2|QWORD - v3|DWORD v4|DWORD v5|DWORD v7|DWORD v10|DWORD - - - - - - - - - - - - - - - - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:174] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" 
    xhandlers
    flags 
    probability 4587137980351417586
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1236 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:828) [bci: 127]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: void
=== Inputs ===
=== Succesors ===
next: v613 
=== Usages ===
=== Predecessor ===
v1239 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v613  <|@  <|@
f <@~|@floating>@ <|@
tid j589 <|@
result v63|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:827) [bci: 101]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: i64 [0 - 4503599627370495] ⇈000fffffffffffff
=== Inputs ===
x: j573 
y: j559 
=== Succesors ===
=== Usages ===
j591 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: j573 y: j559  <|@  <|@
f <@~|@floating>@ <|@
tid j591 <|@
result v64|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.OrNode$$Lambda$69/599890587@2745c573
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:827) [bci: 105]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: i64 [4503599627370496 - 9007199254740991] ⇊0010000000000000 ⇈001fffffffffffff
=== Inputs ===
x: j589 
y: j590 
=== Succesors ===
=== Usages ===
j592 
=== Predecessor ===
- >@ <|@
instruction <@||@org.graalvm.compiler.nodes.calc.OrNode>@ x: j589 y: j590  <|@  <|@
f <@~|@floating>@ <|@
tid i606 <|@
result v66|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:827) [bci: 110]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: i32 [-972 - 1075]
=== Inputs ===
x: i605 
y: i577 
=== Succesors ===
=== Usages ===
j592 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i605 y: i577  <|@  <|@
f <@~|@floating>@ <|@
tid j592 <|@
result v67|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:827) [bci: 111]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: i64 [0 - 9007199254740991] ⇈001fffffffffffff
=== Inputs ===
x: j591 
y: i606 
=== Succesors ===
=== Usages ===
i593 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j591 y: i606  <|@  <|@
f <@~|@floating>@ <|@
tid i593 <|@
result v68|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 64
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:827) [bci: 112]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
resultBits: 32
stamp: i32
=== Inputs ===
value: j592 
=== Succesors ===
=== Usages ===
i599 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: j592  <|@  <|@
f <@~|@floating>@ <|@
tid i599 <|@
result v70|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:828) [bci: 140]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: i32
=== Inputs ===
x: i17 
y: i593 
=== Succesors ===
=== Usages ===
i612 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i17 y: i593  <|@  <|@
f <@*|@fixed>@ <|@
tid v613 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v610 
=== Predecessor ===
v1236 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v63|QWORD = AND (x: v39|QWORD, y: v24|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v64|QWORD = OR (x: v63|QWORD, y: v23|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v65|DWORD = MOVE input: int[1075|0x433] <|@ <|@
      nr   -1  <|@ instruction v66|DWORD = SUB (x: v65|DWORD, ~y: v44|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v66|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v67|QWORD = SHR (x: v64|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v68|DWORD = MOV v67|QWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v69|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr   -1  <|@ instruction v70|DWORD = SUB (x: v69|DWORD, ~y: v68|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v70|DWORD] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B32" "B39" "B35" "B24" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4598270386627586327
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i612 <|@
result v71|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v610 
values: i609 i599 i1535 i1536 
=== Succesors ===
=== Usages ===
?1413 i85 ?95 v99 i679 ?108 ?1412 ?799 i197 ?1411 i704 ?1410 ?315 ?1409 ?1408 ?325 ?1407 ?335 ?1406 ?341 ?347 ?1405 i366 i705 i1534 i668 i677 i1609 i1610 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v610 values: i609 i599 i1535 i1536  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v610 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v611 v613 v614 v852 
=== Succesors ===
next: v89 
=== Usages ===
i612 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v611 v613 v614 v852 #next: v89  <|@  <|@
f <@~|@floating>@ <|@
tid i85 <|@
result v72|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NegateNode$$Lambda$180/1857180762@4b0ec103
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:520) [bci: 184]
stamp: i32
=== Inputs ===
value: i612 
=== Succesors ===
=== Usages ===
v86 i666 
=== Predecessor ===
- >@ <|@
instruction <@Negate|@org.graalvm.compiler.nodes.calc.NegateNode>@ value: i612  <|@  <|@
f <@~|@floating>@ <|@
tid v86 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 2]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:520) [bci: 185]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i85 
y: i7 
=== Succesors ===
=== Usages ===
v89 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i85 y: i7  <|@  <|@
f <@*|@fixed>@ <|@
tid v89 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 2]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:520) [bci: 185]
stamp: void
trueSuccessorProbability: 0.7447175992468633
=== Inputs ===
condition: v86 
=== Succesors ===
trueSuccessor: v87 
falseSuccessor: v88 
=== Usages ===
=== Predecessor ===
v610 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v86 #trueSuccessor: v87 #falseSuccessor: v88  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v71|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v72|DWORD = NEG v71|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v72|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7447175992468633 condition: < trueDestination: B40 -> B41 falseDestination: B40 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" 
    xhandlers
    flags 
    probability 4596017585297594603
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v87 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 5]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:520) [bci: 185]
stamp: void
=== Inputs ===
=== Succesors ===
next: v91 
=== Usages ===
=== Predecessor ===
v89 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v91  <|@  <|@
f <@*|@fixed>@ <|@
tid v91 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 10]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:520) [bci: 185]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v92 
=== Predecessor ===
v87 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0], v10|DWORD, int[1|0x1]] destination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" 
    xhandlers
    flags 
    probability 4589360357487768198
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v88 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 9]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:520) [bci: 185]
stamp: void
=== Inputs ===
=== Succesors ===
next: v93 
=== Usages ===
=== Predecessor ===
v89 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v93  <|@  <|@
f <@~|@floating>@ <|@
tid i1610 <|@
result v74|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:715) [bci: 1111]
stamp: i32
=== Inputs ===
x: i7 
y: i612 
=== Succesors ===
=== Usages ===
i676 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i7 y: i612  <|@  <|@
f <@~|@floating>@ <|@
tid i1609 <|@
result v75|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:521) [bci: 194]
stamp: i32
=== Inputs ===
x: i18 
y: i612 
=== Succesors ===
=== Usages ===
i674 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i18 y: i612  <|@  <|@
f <@*|@fixed>@ <|@
tid v93 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 10]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:520) [bci: 185]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v92 
=== Predecessor ===
v88 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v73|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction v74|DWORD = SUB (x: v73|DWORD, ~y: v71|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v75|DWORD = SUB (x: v10|DWORD, ~y: v71|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v72|DWORD, v75|DWORD, v74|DWORD] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" "B42" 
    successors "B44" "B156" 
    xhandlers
    flags 
    probability 4598270386627586327
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i666 <|@
result v76|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 10]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:520) [bci: 185]
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
valueDescription: i32
=== Inputs ===
merge: v92 
values: i8 i85 
=== Succesors ===
=== Usages ===
?96 ?325 ?108 ?1407 ?1408 ?799 ?799 v671 v1583 v982 ?1405 ?1406 ?1407 ?315 ?315 ?1405 ?1406 v1581 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v92 values: i8 i85  <|@  <|@
f <@~|@floating>@ <|@
tid i674 <|@
result v77|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v92 
values: i18 i1609 
=== Succesors ===
=== Usages ===
i98 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v92 values: i18 i1609  <|@  <|@
f <@~|@floating>@ <|@
tid i676 <|@
result v78|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v92 
values: i7 i1610 
=== Succesors ===
=== Usages ===
v983 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v92 values: i7 i1610  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v92 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 10]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:520) [bci: 185]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v91 v93 
=== Succesors ===
next: v1243 
=== Usages ===
i666 i674 i676 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v91 v93 #next: v1243  <|@  <|@
f <@~|@floating>@ <|@
tid v671 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:591) [bci: 314]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i666 
y: i38 
=== Succesors ===
=== Usages ===
v1243 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i666 y: i38  <|@  <|@
f <@*|@fixed>@ <|@
tid v1243 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:591) [bci: 314]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v671 
=== Succesors ===
trueSuccessor: v1240 
falseSuccessor: v1242 
=== Usages ===
=== Predecessor ===
v92 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v671 #trueSuccessor: v1240 #falseSuccessor: v1242  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v76|DWORD, v77|DWORD, v78|DWORD] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v76|DWORD y: 27 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B43 -> B44 falseDestination: B43 -> B156 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4598270386627586327
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1240 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:591) [bci: 314]
stamp: void
=== Inputs ===
=== Succesors ===
next: v102 
=== Usages ===
j1553 i1551 
=== Predecessor ===
v1243 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v102  <|@  <|@
f <@~|@floating>@ <|@
tid v99 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 2]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:523) [bci: 202]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i612 
y: i7 
=== Succesors ===
=== Usages ===
v102 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i612 y: i7  <|@  <|@
f <@*|@fixed>@ <|@
tid v102 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 2]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:523) [bci: 202]
stamp: void
trueSuccessorProbability: 0.7447175992468633
=== Inputs ===
condition: v99 
=== Succesors ===
trueSuccessor: v100 
falseSuccessor: v101 
=== Usages ===
=== Predecessor ===
v1240 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v99 #trueSuccessor: v100 #falseSuccessor: v101  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v71|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7447175992468633 condition: < trueDestination: B44 -> B45 falseDestination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4596017585297594603
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v100 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 5]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:523) [bci: 202]
stamp: void
=== Inputs ===
=== Succesors ===
next: v104 
=== Usages ===
=== Predecessor ===
v102 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v104  <|@  <|@
f <@*|@fixed>@ <|@
tid v104 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 10]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:523) [bci: 202]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v105 
=== Predecessor ===
v100 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0], v10|DWORD, int[1|0x1]] destination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4589360357487768198
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v101 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 9]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:523) [bci: 202]
stamp: void
=== Inputs ===
=== Succesors ===
next: v106 
=== Usages ===
=== Predecessor ===
v102 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v106  <|@  <|@
f <@~|@floating>@ <|@
tid i677 <|@
result v79|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:524) [bci: 211]
stamp: i32
=== Inputs ===
x: i18 
y: i612 
=== Succesors ===
=== Usages ===
i678 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i18 y: i612  <|@  <|@
f <@~|@floating>@ <|@
tid i679 <|@
result v80|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:594) [bci: 340]
stamp: i32
=== Inputs ===
x: i612 
y: i7 
=== Succesors ===
=== Usages ===
i680 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i612 y: i7  <|@  <|@
f <@*|@fixed>@ <|@
tid v106 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 10]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:523) [bci: 202]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v105 
=== Predecessor ===
v101 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v79|DWORD = ADD (x: v10|DWORD, y: v71|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v80|DWORD = INC v71|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v71|DWORD, v79|DWORD, v80|DWORD] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" "B46" 
    successors "B48" "B155" 
    xhandlers
    flags 
    probability 4598270386627586327
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i668 <|@
result v81|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 10]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:523) [bci: 202]
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
valueDescription: i32
=== Inputs ===
merge: v105 
values: i8 i612 
=== Succesors ===
=== Usages ===
?109 ?1405 ?1409 ?799 ?325 v1584 ?1408 v976 ?315 ?1407 ?1406 v917 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v105 values: i8 i612  <|@  <|@
f <@~|@floating>@ <|@
tid i678 <|@
result v82|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v105 
values: i18 i677 
=== Succesors ===
=== Usages ===
i120 i816 i118 v615 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v105 values: i18 i677  <|@  <|@
f <@~|@floating>@ <|@
tid i680 <|@
result v83|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v105 
values: i7 i679 
=== Succesors ===
=== Usages ===
v1188 v1582 v984 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v105 values: i7 i679  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v105 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 10]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:523) [bci: 202]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v104 v106 
=== Succesors ===
next: v1247 
=== Usages ===
i668 i678 i680 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v104 v106 #next: v1247  <|@  <|@
f <@~|@floating>@ <|@
tid v1188 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:594) [bci: 355]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i680 
y: i38 
=== Succesors ===
=== Usages ===
v1247 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i680 y: i38  <|@  <|@
f <@~|@floating>@ <|@
tid i98 <|@
result v84|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:521) [bci: 196]
stamp: i32
=== Inputs ===
x: i2 
y: i674 
=== Succesors ===
=== Usages ===
?108 i111 i114 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i2 y: i674  <|@  <|@
f <@*|@fixed>@ <|@
tid v1247 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:594) [bci: 345]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1188 
=== Succesors ===
trueSuccessor: v1244 
falseSuccessor: v1246 
=== Usages ===
=== Predecessor ===
v105 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1188 #trueSuccessor: v1244 #falseSuccessor: v1246  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v81|DWORD, v82|DWORD, v83|DWORD] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v84|DWORD = ADD (x: v77|DWORD, y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v83|DWORD y: 27 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B47 -> B48 falseDestination: B47 -> B155 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B49" "B52" 
    xhandlers
    flags 
    probability 4598270386627586327
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1244 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:594) [bci: 345]
stamp: void
=== Inputs ===
=== Succesors ===
next: v618 
=== Usages ===
i1552 
=== Predecessor ===
v1247 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v618  <|@  <|@
f <@~|@floating>@ <|@
tid i524 <|@
result v86|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:538) [bci: 235]
stamp: i32 [-12 - 52]
=== Inputs ===
x: i71 
y: i9 
=== Succesors ===
=== Usages ===
i114 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i71 y: i9  <|@  <|@
f <@~|@floating>@ <|@
tid i114 <|@
result v87|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:538) [bci: 236]
stamp: i32
=== Inputs ===
x: i98 
y: i524 
=== Succesors ===
=== Usages ===
i817 i816 i118 v615 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i98 y: i524  <|@  <|@
f <@~|@floating>@ <|@
tid v615 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Math.min(Math.java:1336) [bci: 2]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:539) [bci: 243]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i678 
y: i114 
=== Succesors ===
=== Usages ===
v618 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i678 y: i114  <|@  <|@
f <@~|@floating>@ <|@
tid i111 <|@
result v88|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:527) [bci: 222]
stamp: i32
=== Inputs ===
x: i98 
y: i4 
=== Succesors ===
=== Usages ===
i817 i120 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i98 y: i4  <|@  <|@
f <@~|@floating>@ <|@
tid v121 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:550) [bci: 272]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i11 
y: i7 
=== Succesors ===
=== Usages ===
v124 v813 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i11 y: i7  <|@  <|@
f <@*|@fixed>@ <|@
tid v618 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.min(Math.java:1336) [bci: 2]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:539) [bci: 243]
stamp: void
trueSuccessorProbability: 0.44790294112836976
=== Inputs ===
condition: v615 
=== Succesors ===
trueSuccessor: v616 
falseSuccessor: v617 
=== Usages ===
=== Predecessor ===
v1244 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v615 #trueSuccessor: v616 #falseSuccessor: v617  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v85|DWORD = MOVE input: int[52|0x34] <|@ <|@
      nr   -1  <|@ instruction v86|DWORD = SUB (x: v85|DWORD, ~y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v87|DWORD = SUB (x: v84|DWORD, ~y: v86|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v88|DWORD = SUB (x: v84|DWORD, ~y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v87|DWORD, y: v82|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.44790294112836976 condition: > trueDestination: B48 -> B49 falseDestination: B48 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4592903625202481288
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v616 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.min(Math.java:1336) [bci: 9]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:539) [bci: 243]
stamp: void
=== Inputs ===
=== Succesors ===
next: v124 
=== Usages ===
=== Predecessor ===
v618 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v124  <|@  <|@
f <@~|@floating>@ <|@
tid i118 <|@
result v89|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:540) [bci: 252]
stamp: i32
=== Inputs ===
x: i114 
y: i678 
=== Succesors ===
=== Usages ===
i800 i802 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i114 y: i678  <|@  <|@
f <@~|@floating>@ <|@
tid i120 <|@
result v90|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:542) [bci: 266]
stamp: i32
=== Inputs ===
x: i111 
y: i678 
=== Succesors ===
=== Usages ===
i808 i129 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i111 y: i678  <|@  <|@
f <@*|@fixed>@ <|@
tid v124 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:550) [bci: 272]
stamp: void
trueSuccessorProbability: 0.3803485753451483
=== Inputs ===
condition: v121 
=== Succesors ===
trueSuccessor: v122 
falseSuccessor: v123 
=== Usages ===
=== Predecessor ===
v616 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v121 #trueSuccessor: v122 #falseSuccessor: v123  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v89|DWORD = SUB (x: v87|DWORD, ~y: v82|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v90|DWORD = SUB (x: v88|DWORD, ~y: v82|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v7|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.3803485753451483 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B54" 
    xhandlers
    flags 
    probability 4586428360452806945
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v122 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:551) [bci: 275]
stamp: void
=== Inputs ===
=== Succesors ===
next: v791 
=== Usages ===
=== Predecessor ===
v124 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v791  <|@  <|@
f <@*|@fixed>@ <|@
tid v791 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v790 
=== Predecessor ===
v122 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v90|DWORD, v89|DWORD, int[0|0x0]] destination: B50 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B56" 
    xhandlers
    flags 
    probability 4589769855493975031
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v123 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:554) [bci: 278]
stamp: void
=== Inputs ===
=== Succesors ===
next: v126 
=== Usages ===
=== Predecessor ===
v124 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v126  <|@  <|@
f <@*|@fixed>@ <|@
tid v126 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:554) [bci: 278]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v127 
=== Predecessor ===
v123 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v90|DWORD, v89|DWORD, int[0|0x0]] destination: B51 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B53" "B55" 
    xhandlers
    flags 
    probability 4594245951440238058
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v617 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.min(Math.java:1336) [bci: 5]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:539) [bci: 243]
stamp: void
=== Inputs ===
=== Succesors ===
next: v813 
=== Usages ===
=== Predecessor ===
v618 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v813  <|@  <|@
f <@~|@floating>@ <|@
tid i816 <|@
result v91|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:541) [bci: 259]
stamp: i32
=== Inputs ===
x: i678 
y: i114 
=== Succesors ===
=== Usages ===
i804 i806 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i678 y: i114  <|@  <|@
f <@~|@floating>@ <|@
tid i817 <|@
result v92|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:542) [bci: 266]
stamp: i32
=== Inputs ===
x: i111 
y: i114 
=== Succesors ===
=== Usages ===
i808 i129 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i111 y: i114  <|@  <|@
f <@*|@fixed>@ <|@
tid v813 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:550) [bci: 272]
stamp: void
trueSuccessorProbability: 0.3803485753451483
=== Inputs ===
condition: v121 
=== Succesors ===
trueSuccessor: v811 
falseSuccessor: v812 
=== Usages ===
=== Predecessor ===
v617 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v121 #trueSuccessor: v811 #falseSuccessor: v812  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v91|DWORD = SUB (x: v82|DWORD, ~y: v87|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v92|DWORD = SUB (x: v88|DWORD, ~y: v87|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v7|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.3803485753451483 condition: = trueDestination: B52 -> B53 falseDestination: B52 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B54" 
    xhandlers
    flags 
    probability 4587886356549755024
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v811 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:551) [bci: 275]
stamp: void
=== Inputs ===
=== Succesors ===
next: v792 
=== Usages ===
=== Predecessor ===
v813 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v792  <|@  <|@
f <@*|@fixed>@ <|@
tid v792 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v790 
=== Predecessor ===
v811 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v92|DWORD, int[0|0x0], v91|DWORD] destination: B53 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B50" "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4591660958128651480
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i808 <|@
result v93|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v790 
values: i120 i817 
=== Succesors ===
=== Usages ===
i125 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v790 values: i120 i817  <|@  <|@
f <@~|@floating>@ <|@
tid i802 <|@
result v94|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v790 
values: i118 i8 
=== Succesors ===
=== Usages ===
i800 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v790 values: i118 i8  <|@  <|@
f <@~|@floating>@ <|@
tid i806 <|@
result v95|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v790 
values: i8 i816 
=== Succesors ===
=== Usages ===
i804 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v790 values: i8 i816  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v790 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v791 v792 
=== Succesors ===
next: v128 
=== Usages ===
i808 i802 i806 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v791 v792 #next: v128  <|@  <|@
f <@~|@floating>@ <|@
tid i125 <|@
result v96|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:551) [bci: 275]
stamp: i32
=== Inputs ===
x: i808 
y: i17 
=== Succesors ===
=== Usages ===
i129 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i808 y: i17  <|@  <|@
f <@*|@fixed>@ <|@
tid v128 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:554) [bci: 278]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v127 
=== Predecessor ===
v790 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v93|DWORD, v94|DWORD, v95|DWORD] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v96|DWORD = DEC v93|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v96|DWORD, v94|DWORD, v95|DWORD] destination: B54 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B56" 
    xhandlers
    flags 
    probability 4590957515205589900
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v812 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:554) [bci: 278]
stamp: void
=== Inputs ===
=== Succesors ===
next: v818 
=== Usages ===
=== Predecessor ===
v813 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v818  <|@  <|@
f <@*|@fixed>@ <|@
tid v818 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v127 
=== Predecessor ===
v812 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v92|DWORD, int[0|0x0], v91|DWORD] destination: B55 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B51" "B54" "B55" 
    successors "B57" "B153" 
    xhandlers
    flags 
    probability 4598270386627586327
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i129 <|@
result v97|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:554) [bci: 278]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v127 
values: i120 i125 i817 
=== Succesors ===
=== Usages ===
?799 v131 i133 i134 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v127 values: i120 i125 i817  <|@  <|@
f <@~|@floating>@ <|@
tid i800 <|@
result v98|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v127 
values: i118 i802 i8 
=== Succesors ===
=== Usages ===
i133 ?799 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v127 values: i118 i802 i8  <|@  <|@
f <@~|@floating>@ <|@
tid i804 <|@
result v99|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v127 
values: i8 i806 i816 
=== Succesors ===
=== Usages ===
i134 ?799 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v127 values: i8 i806 i816  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v127 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:554) [bci: 278]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v126 v128 v818 
=== Succesors ===
next: v1251 
=== Usages ===
i129 i800 i804 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v126 v128 v818 #next: v1251  <|@  <|@
f <@~|@floating>@ <|@
tid j112 <|@
result v100|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:537) [bci: 228]
stamp: i64
=== Inputs ===
x: j3 
y: i9 
=== Succesors ===
=== Usages ===
?1407 ?799 j165 ?1406 ?315 ?1405 v982 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j3 y: i9  <|@  <|@
tid ?799 <|@
d <@d|@=== Debug Properties ===
bci: 278
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: false
localsSize: 33
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 554
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - j112 - - i5 - i11 - i612 i800 i666 i804 i668 i129 i666 - - - - - - - - - - - - - - - - - 
=== Succesors ===
=== Usages ===
v1517 j177 j175 i1556 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - j112 - - i5 - i11 - i612 i800 i666 i804 i668 i129 i666 - - - - - - - - - - - - - - - - -  <|@  <|@
f <@~|@floating>@ <|@
tid v131 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:554) [bci: 280]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i129 
y: i8 
=== Succesors ===
=== Usages ===
v1251 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i129 y: i8  <|@  <|@
f <@*|@fixed>@ <|@
tid v1251 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:554) [bci: 280]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v131 
=== Succesors ===
trueSuccessor: v1248 
falseSuccessor: v1250 
=== Usages ===
=== Predecessor ===
v127 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v131 #trueSuccessor: v1248 #falseSuccessor: v1250  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v97|DWORD, v98|DWORD, v99|DWORD] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v5|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v100|QWORD = SHR (x: v2|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v97|DWORD, y: v97|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B56 -> B57 falseDestination: B56 -> B153 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B58" "B93" 
    xhandlers
    flags 
    probability 4598270386627586327
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1248 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:554) [bci: 280]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1551 
=== Usages ===
=== Predecessor ===
v1251 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1551  <|@  <|@
f <@~|@floating>@ <|@
tid v1581 <|@
result [v8|QWORD[.] + v76|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a43 
index: i666 
=== Succesors ===
=== Usages ===
i1551 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a43 index: i666  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1551 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:591) [bci: 322]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v1240 
address: v1581 
=== Succesors ===
next: v152 
=== Usages ===
i141 
=== Predecessor ===
v1248 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1240 address: v1581 #next: v152  <|@  <|@
f <@~|@floating>@ <|@
tid i133 <|@
result v101|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:558) [bci: 287]
stamp: i32
=== Inputs ===
x: i800 
y: i129 
=== Succesors ===
=== Usages ===
i136 j166 ?1407 ?315 ?1406 ?1405 i322 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i800 y: i129  <|@  <|@
f <@~|@floating>@ <|@
tid i136 <|@
result v102|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:591) [bci: 307]
stamp: i32
=== Inputs ===
x: i11 
y: i133 
=== Succesors ===
=== Usages ===
i141 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i11 y: i133  <|@  <|@
f <@~|@floating>@ <|@
tid i141 <|@
result v103|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:591) [bci: 330]
stamp: i32
=== Inputs ===
x: i136 
y: i1551 
=== Succesors ===
=== Usages ===
v149 v161 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i136 y: i1551  <|@  <|@
f <@~|@floating>@ <|@
tid v149 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:595) [bci: 372]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i141 
y: i46 
=== Succesors ===
=== Usages ===
v152 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i141 y: i46  <|@  <|@
f <@~|@floating>@ <|@
tid i134 <|@
result v104|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:559) [bci: 294]
stamp: i32
=== Inputs ===
x: i804 
y: i129 
=== Succesors ===
=== Usages ===
i142 j168 ?1409 v976 ?315 ?1408 ?1407 ?325 ?1406 i331 ?1405 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i804 y: i129  <|@  <|@
f <@~|@floating>@ <|@
tid j271 <|@
result long[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:688) [bci: 976]
rawvalue: 0
stableDimension: 0
stamp: i64 [0] ⇈0000000000000000
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v505 j468 v306 j468 v1533 ?495 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j273 <|@
result long[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:688) [bci: 978]
rawvalue: 1
stableDimension: 0
stamp: i64 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v274 v507 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i219 <|@
result int[8|0x8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:680) [bci: 903]
rawvalue: 8
stableDimension: 0
stamp: i32 [8] ⇊0000000000000008 ⇈0000000000000008
stampKind: i32
value: int[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
v220 v379 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i216 <|@
result int[-3|0xfffffffffffffffd] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:680) [bci: 896]
rawvalue: -3
stableDimension: 0
stamp: i32 [-3] ⇊00000000fffffffd ⇈00000000fffffffd
stampKind: i32
value: int[-3|0xfffffffffffffffd]
=== Inputs ===
=== Succesors ===
=== Usages ===
v217 v372 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i200 <|@
result int[48|0x30] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:672) [bci: 882]
rawvalue: 48
stableDimension: 0
stamp: i32 [48] ⇊0000000000000030 ⇈0000000000000030
stampKind: i32
value: int[48|0x30]
=== Inputs ===
=== Succesors ===
=== Usages ===
i201 i296 i358 i438 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v212 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:680) [bci: 891]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i5 
y: i8 
=== Succesors ===
=== Usages ===
v215 v371 v721 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i5 y: i8  <|@  <|@
f <@~|@floating>@ <|@
tid v1585 <|@
result [v0|QWORD[.] + 28] <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a1558 a1555 a1564 a1572 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@*|@fixed>@ <|@
tid v152 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:595) [bci: 372]
stamp: void
trueSuccessorProbability: 0.9886664055615392
=== Inputs ===
condition: v149 
=== Succesors ===
trueSuccessor: v150 
falseSuccessor: v151 
=== Usages ===
=== Predecessor ===
i1551 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v149 #trueSuccessor: v150 #falseSuccessor: v151  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v101|DWORD = SUB (x: v98|DWORD, ~y: v97|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v102|DWORD = ADD (x: v101|DWORD, y: v7|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v103|DWORD = ADD (x: v102|DWORD, ~y: [v8|QWORD[.] + v76|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v104|DWORD = SUB (x: v99|DWORD, ~y: v97|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v103|DWORD y: 64 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9886664055615392 condition: < trueDestination: B57 -> B58 falseDestination: B57 -> B93 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B59" "B92" 
    xhandlers
    flags 
    probability 4598218266070781714
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v150 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:595) [bci: 375]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1552 
=== Usages ===
=== Predecessor ===
v152 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1552  <|@  <|@
f <@~|@floating>@ <|@
tid v1582 <|@
result [v8|QWORD[.] + v83|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a43 
index: i680 
=== Succesors ===
=== Usages ===
i1552 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a43 index: i680  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1552 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:594) [bci: 355]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v1244 
address: v1582 
=== Succesors ===
next: v159 
=== Usages ===
i148 
=== Predecessor ===
v150 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1244 address: v1582 #next: v159  <|@  <|@
f <@~|@floating>@ <|@
tid i142 <|@
result v105|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:594) [bci: 336]
stamp: i32
=== Inputs ===
x: i134 
y: i7 
=== Succesors ===
=== Usages ===
i148 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i134 y: i7  <|@  <|@
f <@~|@floating>@ <|@
tid i148 <|@
result v106|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:594) [bci: 365]
stamp: i32
=== Inputs ===
x: i142 
y: i1552 
=== Succesors ===
=== Usages ===
v153 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i142 y: i1552  <|@  <|@
f <@~|@floating>@ <|@
tid v153 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:595) [bci: 379]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i148 
y: i46 
=== Succesors ===
=== Usages ===
v159 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i148 y: i46  <|@  <|@
f <@*|@fixed>@ <|@
tid v159 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:595) [bci: 379]
stamp: void
trueSuccessorProbability: 0.9702874687399411
=== Inputs ===
condition: v153 
=== Succesors ===
trueSuccessor: v154 
falseSuccessor: v158 
=== Usages ===
=== Predecessor ===
i1552 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v153 #trueSuccessor: v154 #falseSuccessor: v158  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v105|DWORD = INC v104|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v106|DWORD = ADD (x: v105|DWORD, ~y: [v8|QWORD[.] + v83|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v106|DWORD y: 64 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9702874687399411 condition: < trueDestination: B58 -> B59 falseDestination: B58 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B60" "B61" 
    xhandlers
    flags 
    probability 4597991127864395515
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v154 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:596) [bci: 382]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1255 
=== Usages ===
=== Predecessor ===
v159 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1255  <|@  <|@
f <@~|@floating>@ <|@
tid i160 <|@
result int[32|0x20] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:596) [bci: 384]
rawvalue: 32
stableDimension: 0
stamp: i32 [32] ⇊0000000000000020 ⇈0000000000000020
stampKind: i32
value: int[32|0x20]
=== Inputs ===
=== Succesors ===
=== Usages ===
v161 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v161 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:596) [bci: 386]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i141 
y: i160 
=== Succesors ===
=== Usages ===
v1255 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i141 y: i160  <|@  <|@
f <@*|@fixed>@ <|@
tid v1255 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:596) [bci: 386]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v161 
=== Succesors ===
trueSuccessor: v1254 
falseSuccessor: v1252 
=== Usages ===
=== Predecessor ===
v154 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v161 #trueSuccessor: v1254 #falseSuccessor: v1252  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v103|DWORD y: 32 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B59 -> B60 falseDestination: B59 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B154" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1254 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:596) [bci: 386]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1513 
=== Usages ===
=== Predecessor ===
v1255 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1513  <|@  <|@
f <@~|@floating>@ <|@
tid i1514 <|@
result int[-233491|0xfffffffffffc6fed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -233491
stableDimension: 0
stamp: i32 [-233491] ⇊00000000fffc6fed ⇈00000000fffc6fed
stampKind: i32
value: int[-233491|0xfffffffffffc6fed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1515 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1513 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1512 
=== Predecessor ===
v1254 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-233491|0xfffffffffffc6fed]] destination: B60 -> B154 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" "B91" 
    xhandlers
    flags 
    probability 4597991127864395515
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1252 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:596) [bci: 386]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1259 
=== Usages ===
=== Predecessor ===
v1255 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1259  <|@  <|@
f <@~|@floating>@ <|@
tid v917 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:653) [bci: 746]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i668 
y: i38 
=== Succesors ===
=== Usages ===
v1259 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i668 y: i38  <|@  <|@
f <@*|@fixed>@ <|@
tid v1259 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:653) [bci: 746]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v917 
=== Succesors ===
trueSuccessor: v1256 
falseSuccessor: v1258 
=== Usages ===
=== Predecessor ===
v1252 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v917 #trueSuccessor: v1256 #falseSuccessor: v1258  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v81|DWORD y: 27 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B61 -> B62 falseDestination: B61 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B63" "B68" 
    xhandlers
    flags 
    probability 4597991127864395515
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1256 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:653) [bci: 746]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1553 
=== Usages ===
j1554 
=== Predecessor ===
v1259 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j1553  <|@  <|@
f <@~|@floating>@ <|@
tid a37 <|@
result v107|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:448) [bci: 93]
rawvalue: long[27]{1, 5, 25, 125, 625, ...}
stableDimension: 0
stamp: a!# [J
stampKind: a -
value: Object[long[27]{1, 5, 25, 125, 625, ...}]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1583 v1584 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1583 <|@
result [v107|QWORD[.] + v76|DWORD * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: a37 
index: i666 
=== Succesors ===
=== Usages ===
j1553 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a37 index: i666  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1553 <|@
result v108|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: long
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:652) [bci: 734]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: v1240 
address: v1583 
=== Succesors ===
next: j1554 
=== Usages ===
j165 j179 j180 
=== Predecessor ===
v1256 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1240 address: v1583 #next: j1554  <|@  <|@
f <@~|@floating>@ <|@
tid v1584 <|@
result [v107|QWORD[.] + v81|DWORD * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: a37 
index: i668 
=== Succesors ===
=== Usages ===
j1554 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a37 index: i668  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1554 <|@
result v109|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: long
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:653) [bci: 746]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: v1256 
address: v1584 
=== Succesors ===
next: j175 
=== Usages ===
j168 
=== Predecessor ===
j1553 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1256 address: v1584 #next: j175  <|@  <|@
f <@~|@floating>@ <|@
tid j165 <|@
result v110|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.MulNode$$Lambda$125/271184744@39a592fe
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:652) [bci: 735]
stamp: i64
=== Inputs ===
x: j112 
y: j1553 
=== Succesors ===
=== Usages ===
j166 
=== Predecessor ===
- >@ <|@
instruction <@*|@org.graalvm.compiler.nodes.calc.MulNode>@ x: j112 y: j1553  <|@  <|@
f <@~|@floating>@ <|@
tid j166 <|@
result v111|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:652) [bci: 738]
stamp: i64
=== Inputs ===
x: j165 
y: i133 
=== Succesors ===
=== Usages ===
j175 j177 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: j165 y: i133  <|@  <|@
f <@~|@floating>@ <|@
tid j168 <|@
result v112|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:653) [bci: 749]
stamp: i64
=== Inputs ===
x: j1554 
y: i134 
=== Succesors ===
=== Usages ===
j172 j173 j175 j177 ?300 ?701 ?228 ?236 j263 j265 ?690 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: j1554 y: i134  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j175 <|@
result v113|QWORD <|@
d <@d|@=== Debug Properties ===
canDeopt: true
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:662) [bci: 778]
op: DIV
stamp: i64
type: SIGNED
=== Inputs ===
stateBefore: ?799 
x: j166 
y: j168 
=== Succesors ===
next: j177 
=== Usages ===
i176 
=== Predecessor ===
j1554 >@ <|@
instruction <@/|@org.graalvm.compiler.nodes.calc.SignedDivNode>@ stateBefore: ?799 x: j166 y: j168 #next: j177  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j177 <|@
result v114|QWORD <|@
d <@d|@=== Debug Properties ===
canDeopt: true
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:663) [bci: 789]
op: REM
stamp: i64 [-9223372036854775807 - 9223372036854775807]
type: SIGNED
=== Inputs ===
stateBefore: ?799 
x: j166 
y: j168 
=== Succesors ===
next: a1555 
=== Usages ===
j526 j525 
=== Predecessor ===
j175 >@ <|@
instruction <@%|@org.graalvm.compiler.nodes.calc.SignedRemNode>@ stateBefore: ?799 x: j166 y: j168 #next: a1555  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1555 <|@
result v115|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FloatingDecimal$BinaryToASCIIBuffer.digits
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:672) [bci: 874]
nullCheck: false
stamp: n# [C
=== Inputs ===
stateBefore: - 
guard: - 
address: v1585 
=== Succesors ===
next: v195 
=== Usages ===
v930 a929 v1586 v1588 
=== Predecessor ===
j177 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1585 #next: v195  <|@  <|@
f <@~|@floating>@ <|@
tid v1586 <|@
result [v115|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1555 
=== Succesors ===
=== Usages ===
i1557 i1556 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1555  <|@  <|@
f <@~|@floating>@ <|@
tid i171 <|@
result int[3|0x3] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:655) [bci: 768]
rawvalue: 3
stableDimension: 0
stamp: i32 [3] ⇊0000000000000003 ⇈0000000000000003
stampKind: i32
value: int[3|0x3]
=== Inputs ===
=== Succesors ===
=== Usages ===
j172 j179 j267 j525 j528 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j172 <|@
result v116|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:655) [bci: 768]
stamp: i64 [-9223372036854775808 - 9223372036854775800] ⇈fffffffffffffff8
=== Inputs ===
x: j168 
y: i171 
=== Succesors ===
=== Usages ===
j174 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: j168 y: i171  <|@  <|@
f <@~|@floating>@ <|@
tid j173 <|@
result v117|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:655) [bci: 768]
stamp: i64 [-9223372036854775808 - 9223372036854775806] ⇈fffffffffffffffe
=== Inputs ===
x: j168 
y: i7 
=== Succesors ===
=== Usages ===
j174 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: j168 y: i7  <|@  <|@
f <@~|@floating>@ <|@
tid j174 <|@
result v118|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:655) [bci: 768]
stamp: i64 [-9223372036854775808 - 9223372036854775806] ⇈fffffffffffffffe
=== Inputs ===
x: j172 
y: j173 
=== Succesors ===
=== Usages ===
j304 v188 v284 ?701 ?228 ?236 ?300 ?690 j1529 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j172 y: j173  <|@  <|@
f <@~|@floating>@ <|@
tid j179 <|@
result v119|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:664) [bci: 798]
stamp: i64 [-9223372036854775808 - 9223372036854775800] ⇈fffffffffffffff8
=== Inputs ===
x: j1553 
y: i171 
=== Succesors ===
=== Usages ===
j181 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: j1553 y: i171  <|@  <|@
f <@~|@floating>@ <|@
tid j180 <|@
result v120|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:664) [bci: 798]
stamp: i64 [-9223372036854775808 - 9223372036854775806] ⇈fffffffffffffffe
=== Inputs ===
x: j1553 
y: i7 
=== Succesors ===
=== Usages ===
j181 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: j1553 y: i7  <|@  <|@
f <@~|@floating>@ <|@
tid j181 <|@
result v121|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:664) [bci: 798]
stamp: i64 [-9223372036854775808 - 9223372036854775806] ⇈fffffffffffffffe
=== Inputs ===
x: j179 
y: j180 
=== Succesors ===
=== Usages ===
j235 v183 j186 ?228 ?701 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j179 y: j180  <|@  <|@
f <@~|@floating>@ <|@
tid j525 <|@
result v122|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:663) [bci: 790]
stamp: i64 [-9223372036854775808 - 9223372036854775800] ⇈fffffffffffffff8
=== Inputs ===
x: j177 
y: i171 
=== Succesors ===
=== Usages ===
j527 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: j177 y: i171  <|@  <|@
f <@~|@floating>@ <|@
tid j526 <|@
result v123|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:663) [bci: 790]
stamp: i64 [-9223372036854775808 - 9223372036854775806] ⇈fffffffffffffffe
=== Inputs ===
x: j177 
y: i7 
=== Succesors ===
=== Usages ===
j527 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: j177 y: i7  <|@  <|@
f <@~|@floating>@ <|@
tid j527 <|@
result v124|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:663) [bci: 790]
stamp: i64 [-9223372036854775808 - 9223372036854775806] ⇈fffffffffffffffe
=== Inputs ===
x: j525 
y: j526 
=== Succesors ===
=== Usages ===
j234 v183 j186 ?228 ?701 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j525 y: j526  <|@  <|@
f <@~|@floating>@ <|@
tid j186 <|@
result v125|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:666) [bci: 820]
stamp: i64 [-9223372036854775808 - 9223372036854775806] ⇈fffffffffffffffe
=== Inputs ===
x: j181 
y: j527 
=== Succesors ===
=== Usages ===
v188 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j181 y: j527  <|@  <|@
f <@~|@floating>@ <|@
tid v188 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:666) [bci: 824]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j174 
y: j186 
=== Succesors ===
=== Usages ===
i189 v1263 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j174 y: j186  <|@  <|@
f <@~|@floating>@ <|@
tid i176 <|@
result v126|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 64
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:662) [bci: 779]
resultBits: 32
stamp: i32
=== Inputs ===
value: j175 
=== Succesors ===
=== Usages ===
v192 i201 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: j175  <|@  <|@
f <@~|@floating>@ <|@
tid v192 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:668) [bci: 859]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i176 
y: i8 
=== Succesors ===
=== Usages ===
v195 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i176 y: i8  <|@  <|@
f <@*|@fixed>@ <|@
tid v195 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:668) [bci: 859]
stamp: void
trueSuccessorProbability: 0.10789017046034499
=== Inputs ===
condition: v192 
=== Succesors ===
trueSuccessor: v193 
falseSuccessor: v194 
=== Usages ===
=== Predecessor ===
a1555 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v192 #trueSuccessor: v193 #falseSuccessor: v194  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v107|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[long[27]{1, 5, 25, 125, 625, ...}] <|@ <|@
      nr   -1  <|@ instruction v108|QWORD = MOV [v107|QWORD[.] + v76|DWORD * 8 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v109|QWORD = MOV [v107|QWORD[.] + v81|DWORD * 8 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v110|QWORD = IMUL (x: v100|QWORD, y: v108|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v101|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v111|QWORD = SHL (x: v110|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v104|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v112|QWORD = SHL (x: v109|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE v111|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction (highResult: rdx|QWORD, lowResult: rax|QWORD) = CDQ rax|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:554) [bci: 278]
locals: v0|QWORD[.] - v100|QWORD - - v4|DWORD - v7|DWORD - v71|DWORD v98|DWORD v76|DWORD v99|DWORD v81|DWORD v97|DWORD v76|DWORD - - - - - - - - - - - - - - - - - 
>@ <|@ instruction (highResult: rdx|QWORD, lowResult: rax|QWORD) = IDIV (highX: rdx|QWORD, lowX: rax|QWORD, y: v112|QWORD) size: QWORD state [bci:278] <|@ <|@
      nr   -1  <|@ instruction v113|QWORD = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v114|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v115|DWORD[.] = MOV [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v116|QWORD = SHL v112|QWORD y: 3 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v117|QWORD = SHL v112|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v118|QWORD = ADD (x: v116|QWORD, y: v117|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v119|QWORD = SHL v108|QWORD y: 3 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v120|QWORD = SHL v108|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v121|QWORD = ADD (x: v119|QWORD, y: v120|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v122|QWORD = SHL v114|QWORD y: 3 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v123|QWORD = SHL v114|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v124|QWORD = ADD (x: v122|QWORD, y: v123|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v125|QWORD = ADD (x: v121|QWORD, y: v124|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v126|DWORD = MOV v113|QWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v126|DWORD, y: v126|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.10789017046034499 condition: = trueDestination: B62 -> B63 falseDestination: B62 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B64" "B65" 
    xhandlers
    flags 
    probability 4583272634049493745
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v193 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:668) [bci: 862]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1263 
=== Usages ===
=== Predecessor ===
v195 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1263  <|@  <|@
f <@*|@fixed>@ <|@
tid v1263 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:668) [bci: 864]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v188 
=== Succesors ===
trueSuccessor: v1262 
falseSuccessor: v1260 
=== Usages ===
=== Predecessor ===
v193 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v188 #trueSuccessor: v1262 #falseSuccessor: v1260  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v125|QWORD, y: v118|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B63 -> B64 falseDestination: B63 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B154" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1262 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:668) [bci: 864]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1520 
=== Usages ===
=== Predecessor ===
v1263 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1520  <|@  <|@
f <@~|@floating>@ <|@
tid i1521 <|@
result int[-245267|0xfffffffffffc41ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -245267
stableDimension: 0
stamp: i32 [-245267] ⇊00000000fffc41ed ⇈00000000fffc41ed
stampKind: i32
value: int[-245267|0xfffffffffffc41ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1515 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1520 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1512 
=== Predecessor ===
v1262 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-245267|0xfffffffffffc41ed]] destination: B64 -> B154 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" "B67" 
    xhandlers
    flags 
    probability 4583272634049493745
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1260 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:668) [bci: 864]
stamp: void
=== Inputs ===
=== Succesors ===
next: v215 
=== Usages ===
=== Predecessor ===
v1263 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v215  <|@  <|@
f <@~|@floating>@ <|@
tid i197 <|@
result v127|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:670) [bci: 867]
stamp: i32
=== Inputs ===
x: i612 
y: i17 
=== Succesors ===
=== Usages ===
i704 i705 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i612 y: i17  <|@  <|@
f <@*|@fixed>@ <|@
tid v215 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:680) [bci: 891]
stamp: void
trueSuccessorProbability: 0.011534143105032153
=== Inputs ===
condition: v212 
=== Succesors ===
trueSuccessor: v213 
falseSuccessor: v214 
=== Usages ===
=== Predecessor ===
v1260 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v212 #trueSuccessor: v213 #falseSuccessor: v214  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v127|DWORD = DEC v71|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v4|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.011534143105032153 condition: = trueDestination: B65 -> B66 falseDestination: B65 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B77" 
    xhandlers
    flags 
    probability 4554257208233383042
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v213 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:681) [bci: 908]
stamp: void
=== Inputs ===
=== Succesors ===
next: v225 
=== Usages ===
=== Predecessor ===
v215 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v225  <|@  <|@
f <@*|@fixed>@ <|@
tid v225 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:683) [bci: 914]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v224 
=== Predecessor ===
v213 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0], int[0|0x0], v127|DWORD, int[0|0x0]] destination: B66 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B73" 
    xhandlers
    flags 
    probability 4583184796790287775
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v214 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:680) [bci: 894]
stamp: void
=== Inputs ===
=== Succesors ===
next: v700 
=== Usages ===
=== Predecessor ===
v215 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v700  <|@  <|@
f <@*|@fixed>@ <|@
tid v700 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v699 
=== Predecessor ===
v214 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v127|DWORD, int[0|0x0]] destination: B67 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B69" "B70" 
    xhandlers
    flags 
    probability 4597039201284261789
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v194 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:672) [bci: 873]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1556 
=== Usages ===
=== Predecessor ===
v195 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1556  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1556 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:672) [bci: 888]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?799 
guard: - 
address: v1586 
=== Succesors ===
next: v1271 
=== Usages ===
v966 
=== Predecessor ===
v194 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?799 guard: - address: v1586 #next: v1271  <|@  <|@
f <@~|@floating>@ <|@
tid v966 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:672) [bci: 888]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1556 
y: i8 
=== Succesors ===
=== Usages ===
v1271 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i1556 y: i8  <|@  <|@
f <@*|@fixed>@ <|@
tid v1271 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:672) [bci: 888]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v966 
=== Succesors ===
trueSuccessor: v1270 
falseSuccessor: v1268 
=== Usages ===
=== Predecessor ===
i1556 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v966 #trueSuccessor: v1270 #falseSuccessor: v1268  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:554) [bci: 278]
locals: v0|QWORD[.] - v100|QWORD - - v4|DWORD - v7|DWORD - v71|DWORD v98|DWORD v76|DWORD v99|DWORD v81|DWORD v97|DWORD v76|DWORD - - - - - - - - - - - - - - - - - 
>@ <|@ instruction CMP [v115|DWORD[.] * 8 + 12] y: 0 size: DWORD state [bci:278] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B68 -> B69 falseDestination: B68 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B154" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1270 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:672) [bci: 888]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1526 
=== Usages ===
=== Predecessor ===
v1271 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1526  <|@  <|@
f <@~|@floating>@ <|@
tid i1527 <|@
result int[-290587|0xfffffffffffb90e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -290587
stableDimension: 0
stamp: i32 [-290587] ⇊00000000fffb90e5 ⇈00000000fffb90e5
stampKind: i32
value: int[-290587|0xfffffffffffb90e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1515 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1526 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1512 
=== Predecessor ===
v1270 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-290587|0xfffffffffffb90e5]] destination: B69 -> B154 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B71" "B72" 
    xhandlers
    flags 
    probability 4597039201284261789
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1268 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:672) [bci: 888]
stamp: void
=== Inputs ===
=== Succesors ===
next: v973 
=== Usages ===
v973 
=== Predecessor ===
v1271 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v973  <|@  <|@
f <@~|@floating>@ <|@
tid v1588 <|@
result [v115|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1555 
=== Succesors ===
=== Usages ===
v973 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1555  <|@  <|@
f <@~|@floating>@ <|@
tid i201 <|@
result v128|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:672) [bci: 886]
stamp: i32
=== Inputs ===
x: i176 
y: i200 
=== Succesors ===
=== Usages ===
i202 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i176 y: i200  <|@  <|@
f <@~|@floating>@ <|@
tid i202 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 32
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:672) [bci: 887]
resultBits: 16
stamp: i16
=== Inputs ===
value: i201 
=== Succesors ===
=== Usages ===
v973 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i201  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v973 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:672) [bci: 888]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1268 
address: v1588 
value: i202 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v721 
=== Usages ===
=== Predecessor ===
v1268 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1268 address: v1588 value: i202 stateAfter: - lastLocationAccess: - #next: v721  <|@  <|@
f <@*|@fixed>@ <|@
tid v721 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:680) [bci: 891]
stamp: void
trueSuccessorProbability: 0.011534143105032153
=== Inputs ===
condition: v212 
=== Succesors ===
trueSuccessor: v719 
falseSuccessor: v720 
=== Usages ===
=== Predecessor ===
v973 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v212 #trueSuccessor: v719 #falseSuccessor: v720  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v128|DWORD = LEA [v126|DWORD + 48] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v115|DWORD[.] * 8 + 16], y: v128|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v4|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.011534143105032153 condition: = trueDestination: B70 -> B71 falseDestination: B70 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B77" 
    xhandlers
    flags 
    probability 4567956811517496389
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v719 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:681) [bci: 908]
stamp: void
=== Inputs ===
=== Succesors ===
next: v722 
=== Usages ===
=== Predecessor ===
v721 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v722  <|@  <|@
f <@*|@fixed>@ <|@
tid v722 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v224 
=== Predecessor ===
v719 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0], int[0|0x0], v71|DWORD, int[1|0x1]] destination: B71 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B73" 
    xhandlers
    flags 
    probability 4596948413956274540
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v720 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:680) [bci: 894]
stamp: void
=== Inputs ===
=== Succesors ===
next: v702 
=== Usages ===
=== Predecessor ===
v721 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v702  <|@  <|@
f <@*|@fixed>@ <|@
tid v702 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v699 
=== Predecessor ===
v720 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v71|DWORD, int[1|0x1]] destination: B72 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B67" "B72" 
    successors "B74" "B75" 
    xhandlers
    flags 
    probability 4597889360879007520
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i704 <|@
result v129|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v699 
values: i197 i612 
=== Succesors ===
=== Usages ===
v217 v220 i705 ?701 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v699 values: i197 i612  <|@  <|@
f <@~|@floating>@ <|@
tid i716 <|@
result v130|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 1] ⇈0000000000000001
valueDescription: i32
=== Inputs ===
merge: v699 
values: i8 i7 
=== Succesors ===
=== Usages ===
i715 ?701 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v699 values: i8 i7  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v699 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v700 v702 
=== Succesors ===
next: v1275 
=== Usages ===
i704 i716 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v700 v702 #next: v1275  <|@  <|@
f <@~|@floating>@ <|@
tid v217 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:680) [bci: 898]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i704 
y: i216 
=== Succesors ===
=== Usages ===
v1275 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i704 y: i216  <|@  <|@
f <@~|@floating>@ <|@
tid v183 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:665) [bci: 806]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j527 
y: j181 
=== Succesors ===
=== Usages ===
i184 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j527 y: j181  <|@  <|@
f <@~|@floating>@ <|@
tid i184 <|@
result v131|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:665) [bci: 806]
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
condition: v183 
trueValue: i7 
falseValue: i8 
=== Succesors ===
=== Usages ===
i226 ?701 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v183 trueValue: i7 falseValue: i8  <|@  <|@
f <@~|@floating>@ <|@
tid i189 <|@
result v132|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:666) [bci: 824]
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
condition: v188 
trueValue: i7 
falseValue: i8 
=== Succesors ===
=== Usages ===
i227 ?701 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v188 trueValue: i7 falseValue: i8  <|@  <|@
f <@*|@fixed>@ <|@
tid v1275 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:680) [bci: 898]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v217 
=== Succesors ===
trueSuccessor: v1274 
falseSuccessor: v1272 
=== Usages ===
=== Predecessor ===
v699 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v217 #trueSuccessor: v1274 #falseSuccessor: v1272  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v129|DWORD, v130|DWORD] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v121|QWORD, y: v124|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v131|DWORD = SETCC condition: > <|@ <|@
      nr   -1  <|@ instruction CMP (x: v125|QWORD, y: v118|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v132|DWORD = SETCC condition: > <|@ <|@
      nr   -1  <|@ instruction CMP v129|DWORD y: -3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B73 -> B74 falseDestination: B73 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B90" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1274 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:680) [bci: 898]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1497 
=== Usages ===
=== Predecessor ===
v1275 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1497  <|@  <|@
f <@~|@floating>@ <|@
tid i1498 <|@
result int[-249363|0xfffffffffffc31ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -249363
stableDimension: 0
stamp: i32 [-249363] ⇊00000000fffc31ed ⇈00000000fffc31ed
stampKind: i32
value: int[-249363|0xfffffffffffc31ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1499 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1497 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1496 
=== Predecessor ===
v1274 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-249363|0xfffffffffffc31ed]] destination: B74 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" "B89" 
    xhandlers
    flags 
    probability 4597889360879007520
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1272 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:680) [bci: 898]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1279 
=== Usages ===
=== Predecessor ===
v1275 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1279  <|@  <|@
f <@~|@floating>@ <|@
tid v220 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:680) [bci: 905]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i704 
y: i219 
=== Succesors ===
=== Usages ===
v1279 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i704 y: i219  <|@  <|@
f <@*|@fixed>@ <|@
tid v1279 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:680) [bci: 905]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v220 
=== Succesors ===
trueSuccessor: v1276 
falseSuccessor: v1278 
=== Usages ===
=== Predecessor ===
v1272 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v220 #trueSuccessor: v1276 #falseSuccessor: v1278  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v129|DWORD y: 8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B75 -> B76 falseDestination: B75 -> B89 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B77" 
    xhandlers
    flags 
    probability 4597889360879007520
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1276 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:680) [bci: 905]
stamp: void
=== Inputs ===
=== Succesors ===
next: v223 
=== Usages ===
=== Predecessor ===
v1279 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v223  <|@  <|@
f <@*|@fixed>@ <|@
tid v223 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:683) [bci: 914]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v224 
=== Predecessor ===
v1276 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v131|DWORD, v132|DWORD, v129|DWORD, v130|DWORD] destination: B76 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" "B66" "B71" 
    successors "B78" "B79" 
    xhandlers
    flags 
    probability 4597991127864395515
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i226 <|@
result v133|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:683) [bci: 914]
stamp: i32 [0 - 1] ⇈0000000000000001
valueDescription: i32
=== Inputs ===
merge: v224 
values: i184 i8 i8 
=== Succesors ===
=== Usages ===
?228 i232 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v224 values: i184 i8 i8  <|@  <|@
f <@~|@floating>@ <|@
tid i227 <|@
result v134|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:683) [bci: 914]
stamp: i32 [0 - 1] ⇈0000000000000001
valueDescription: i32
=== Inputs ===
merge: v224 
values: i189 i8 i8 
=== Succesors ===
=== Usages ===
?228 i233 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v224 values: i189 i8 i8  <|@  <|@
f <@~|@floating>@ <|@
tid i705 <|@
result v135|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v224 
values: i704 i197 i612 
=== Succesors ===
=== Usages ===
?228 ?236 i483 ?300 ?690 i483 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v224 values: i704 i197 i612  <|@  <|@
f <@~|@floating>@ <|@
tid i715 <|@
result v136|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 1] ⇈0000000000000001
valueDescription: i32
=== Inputs ===
merge: v224 
values: i716 i8 i7 
=== Succesors ===
=== Usages ===
?228 i231 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v224 values: i716 i8 i7  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v224 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:683) [bci: 914]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v223 v225 v722 
=== Succesors ===
next: v1283 
=== Usages ===
i226 i227 i705 i715 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v223 v225 v722 #next: v1283  <|@  <|@
f <@~|@floating>@ <|@
tid v930 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:700) [bci: 1038]
stamp: void
=== Inputs ===
value: a1555 
=== Succesors ===
=== Usages ===
v1283 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a1555  <|@  <|@
f <@*|@fixed>@ <|@
tid v1283 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:700) [bci: 1038]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v930 
=== Succesors ===
trueSuccessor: v1282 
falseSuccessor: v1280 
=== Usages ===
=== Predecessor ===
v224 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v930 #trueSuccessor: v1282 #falseSuccessor: v1280  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v133|DWORD, v134|DWORD, v135|DWORD, v136|DWORD] = LABEL numbPhis: 4 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v115|DWORD[.], y: v115|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B77 -> B78 falseDestination: B77 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1282 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:700) [bci: 1038]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1281 
=== Usages ===
=== Predecessor ===
v1283 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1281  <|@  <|@
tid ?228 <|@
d <@d|@=== Debug Properties ===
bci: 914
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: false
localsSize: 33
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 683
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - - - - - - - i705 - - - - - - - i715 i226 i227 - - - - - j527 - j168 - j181 - j174 - 
=== Succesors ===
=== Usages ===
v1281 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - - - - - - i705 - - - - - - - i715 i226 i227 - - - - - j527 - j168 - j181 - j174 -  <|@  <|@
f <@*|@fixed>@ <|@
tid v1281 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 1185
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:700) [bci: 1038]
reason: NullCheckException
speculation: Object[d.a@1454271960]
stamp: void
=== Inputs ===
stateBefore: ?228 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1282 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?228  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v137|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1454271960] <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -303371 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: v137|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:683) [bci: 914]
locals: v0|QWORD[.] - - - - - - - - v135|DWORD - - - - - - - v136|DWORD v133|DWORD v134|DWORD - - - - - v124|QWORD - v112|QWORD - v121|QWORD - v118|QWORD - 
>@ <|@ instruction DEOPT info [bci:914] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B80" 
    xhandlers
    flags 
    probability 4597991127864395515
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1280 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:700) [bci: 1038]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1557 
=== Usages ===
=== Predecessor ===
v1283 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1557  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1557 <|@
result v138|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:700) [bci: 1038]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v1586 
=== Succesors ===
next: v229 
=== Usages ===
v948 
=== Predecessor ===
v1280 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1586 #next: v229  <|@  <|@
f <@~|@floating>@ <|@
tid a929 <|@
result v139|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:700) [bci: 1024]
op: Uncompress
stamp: a# [C
=== Inputs ===
value: a1555 
=== Succesors ===
=== Usages ===
v1587 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1555  <|@  <|@
f <@*|@fixed>@ <|@
tid v229 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:683) [bci: 914]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v230 
=== Predecessor ===
i1557 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v138|DWORD = MOV [v115|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v139|QWORD[.] = UNCOMPRESSPOINTER (input: v115|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@e9a9e99 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v136|DWORD, v133|DWORD, v134|DWORD, v124|QWORD, v121|QWORD] destination: B79 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" "B84" "B85" 
    successors "B81" "B88" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4611068895554337385
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i231 <|@
result v140|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v230 
values: i715 i295 i295 
=== Succesors ===
=== Usages ===
?236 i484 v948 v1587 i295 i484 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v230 values: i715 i295 i295  <|@  <|@
f <@~|@floating>@ <|@
tid i232 <|@
result v141|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 1] ⇈0000000000000001
valueDescription: i32
=== Inputs ===
merge: v230 
values: i226 i7 i280 
=== Succesors ===
=== Usages ===
i485 v237 i485 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v230 values: i226 i7 i280  <|@  <|@
f <@~|@floating>@ <|@
tid i233 <|@
result v142|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 1] ⇈0000000000000001
valueDescription: i32
=== Inputs ===
merge: v230 
values: i227 i7 i285 
=== Succesors ===
=== Usages ===
i486 i486 v247 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v230 values: i227 i7 i285  <|@  <|@
f <@~|@floating>@ <|@
tid j234 <|@
result v143|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64 [-9223372036854775808 - 9223372036854775806] ⇈fffffffffffffffe
valueDescription: i64
=== Inputs ===
merge: v230 
values: j527 j530 j530 
=== Succesors ===
=== Usages ===
?236 v306 j303 j263 j265 j1530 v1533 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v230 values: j527 j530 j530  <|@  <|@
f <@~|@floating>@ <|@
tid j235 <|@
result v144|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64 [-9223372036854775808 - 9223372036854775806] ⇈fffffffffffffffe
valueDescription: i64
=== Inputs ===
merge: v230 
values: j181 j269 j269 
=== Succesors ===
=== Usages ===
?236 j267 j268 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v230 values: j181 j269 j269  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v230 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: true
inversionCount: 0
loopFrequency: 7.607366281283892
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 2
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:683) [bci: 914]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v229 
=== Succesors ===
next: v246 
=== Usages ===
i231 i232 i233 j234 j235 v240 v252 v301 v681 v1287 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v229 #next: v246  <|@  <|@
f <@~|@floating>@ <|@
tid v237 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:683) [bci: 916]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i232 
y: i8 
=== Succesors ===
=== Usages ===
v246 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i232 y: i8  <|@  <|@
f <@*|@fixed>@ <|@
tid v246 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:683) [bci: 916]
stamp: void
trueSuccessorProbability: 0.9044543048889694
=== Inputs ===
condition: v237 
=== Succesors ===
trueSuccessor: v238 
falseSuccessor: v240 
=== Usages ===
=== Predecessor ===
v230 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v237 #trueSuccessor: v238 #falseSuccessor: v240  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v140|DWORD, v141|DWORD, v142|DWORD, v143|QWORD, v144|QWORD] = LABEL numbPhis: 5 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v141|DWORD, y: v141|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9044543048889694 condition: = trueDestination: B80 -> B81 falseDestination: B80 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B82" "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4610267259874414128
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v238 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:683) [bci: 919]
stamp: void
=== Inputs ===
=== Succesors ===
next: v262 
=== Usages ===
=== Predecessor ===
v246 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v262  <|@  <|@
f <@~|@floating>@ <|@
tid v247 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:683) [bci: 921]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i233 
y: i8 
=== Succesors ===
=== Usages ===
v262 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i233 y: i8  <|@  <|@
f <@*|@fixed>@ <|@
tid v262 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:683) [bci: 921]
stamp: void
trueSuccessorProbability: 0.9603010975971522
=== Inputs ===
condition: v247 
=== Succesors ===
trueSuccessor: v248 
falseSuccessor: v252 
=== Usages ===
=== Predecessor ===
v238 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v247 #trueSuccessor: v248 #falseSuccessor: v252  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v142|DWORD, y: v142|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9603010975971522 condition: = trueDestination: B81 -> B82 falseDestination: B81 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors "B83" "B86" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4609966007107604873
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v248 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:684) [bci: 924]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1288 
=== Usages ===
=== Predecessor ===
v262 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1288  <|@  <|@
tid ?236 <|@
d <@d|@=== Debug Properties ===
bci: 914
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: false
localsSize: 33
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 683
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - - - - - - - i705 - - - - - - - i231 i8 i8 - - - - - j234 - j168 - j235 - j174 - 
=== Succesors ===
=== Usages ===
j263 j265 v1285 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - - - - - - i705 - - - - - - - i231 i8 i8 - - - - - j234 - j168 - j235 - j174 -  <|@  <|@
f <@~|@floating>@ <|@
tid v948 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:700) [bci: 1038]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i231 
y: i1557 
=== Succesors ===
=== Usages ===
v1288 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i231 y: i1557  <|@  <|@
f <@*|@fixed>@ <|@
tid v1288 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:700) [bci: 1038]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v948 
=== Succesors ===
trueSuccessor: v1284 
falseSuccessor: v1287 
=== Usages ===
=== Predecessor ===
v248 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v948 #trueSuccessor: v1284 #falseSuccessor: v1287  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v138|DWORD, y: v140|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B82 -> B83 falseDestination: B82 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B84" "B85" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4609966007107604873
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1284 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:700) [bci: 1038]
stamp: void
=== Inputs ===
=== Succesors ===
next: j263 
=== Usages ===
v943 
=== Predecessor ===
v1288 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j263  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j263 <|@
result v145|QWORD <|@
d <@d|@=== Debug Properties ===
canDeopt: true
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:684) [bci: 928]
op: DIV
stamp: i64
type: SIGNED
=== Inputs ===
stateBefore: ?236 
x: j234 
y: j168 
=== Succesors ===
next: j265 
=== Usages ===
i264 
=== Predecessor ===
v1284 >@ <|@
instruction <@/|@org.graalvm.compiler.nodes.calc.SignedDivNode>@ stateBefore: ?236 x: j234 y: j168 #next: j265  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j265 <|@
result v146|QWORD <|@
d <@d|@=== Debug Properties ===
canDeopt: true
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:685) [bci: 939]
op: REM
stamp: i64 [-9223372036854775807 - 9223372036854775806]
type: SIGNED
=== Inputs ===
stateBefore: ?236 
x: j234 
y: j168 
=== Succesors ===
next: v943 
=== Usages ===
j529 j528 
=== Predecessor ===
j263 >@ <|@
instruction <@%|@org.graalvm.compiler.nodes.calc.SignedRemNode>@ stateBefore: ?236 x: j234 y: j168 #next: v943  <|@  <|@
f <@~|@floating>@ <|@
tid v1587 <|@
result [v139|QWORD[.] + v140|DWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a929 
index: i231 
=== Succesors ===
=== Usages ===
v943 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a929 index: i231  <|@  <|@
f <@~|@floating>@ <|@
tid i264 <|@
result v147|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 64
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:684) [bci: 929]
resultBits: 32
stamp: i32
=== Inputs ===
value: j263 
=== Succesors ===
=== Usages ===
?690 i296 ?300 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: j263  <|@  <|@
f <@~|@floating>@ <|@
tid i296 <|@
result v148|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:700) [bci: 1036]
stamp: i32
=== Inputs ===
x: i264 
y: i200 
=== Succesors ===
=== Usages ===
i297 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i264 y: i200  <|@  <|@
f <@~|@floating>@ <|@
tid i297 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 32
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:700) [bci: 1037]
resultBits: 16
stamp: i16
=== Inputs ===
value: i296 
=== Succesors ===
=== Usages ===
v943 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i296  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v943 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:700) [bci: 1038]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1284 
address: v1587 
value: i297 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v277 
=== Usages ===
=== Predecessor ===
j265 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1284 address: v1587 value: i297 stateAfter: - lastLocationAccess: - #next: v277  <|@  <|@
f <@~|@floating>@ <|@
tid j528 <|@
result v149|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:685) [bci: 940]
stamp: i64 [-9223372036854775808 - 9223372036854775800] ⇈fffffffffffffff8
=== Inputs ===
x: j265 
y: i171 
=== Succesors ===
=== Usages ===
j530 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: j265 y: i171  <|@  <|@
f <@~|@floating>@ <|@
tid j529 <|@
result v150|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:685) [bci: 940]
stamp: i64 [-9223372036854775808 - 9223372036854775806] ⇈fffffffffffffffe
=== Inputs ===
x: j265 
y: i7 
=== Succesors ===
=== Usages ===
j530 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: j265 y: i7  <|@  <|@
f <@~|@floating>@ <|@
tid j530 <|@
result v151|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:685) [bci: 940]
stamp: i64 [-9223372036854775808 - 9223372036854775806] ⇈fffffffffffffffe
=== Inputs ===
x: j528 
y: j529 
=== Succesors ===
=== Usages ===
j234 v279 j282 j234 ?300 ?690 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j528 y: j529  <|@  <|@
f <@~|@floating>@ <|@
tid i295 <|@
result v152|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:700) [bci: 1029]
stamp: i32
=== Inputs ===
x: i231 
y: i7 
=== Succesors ===
=== Usages ===
?300 i231 ?690 i231 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i231 y: i7  <|@  <|@
f <@~|@floating>@ <|@
tid j267 <|@
result v153|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:686) [bci: 948]
stamp: i64 [-9223372036854775808 - 9223372036854775792] ⇈fffffffffffffff0
=== Inputs ===
x: j235 
y: i171 
=== Succesors ===
=== Usages ===
j269 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: j235 y: i171  <|@  <|@
f <@~|@floating>@ <|@
tid j268 <|@
result v154|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:686) [bci: 948]
stamp: i64 [-9223372036854775808 - 9223372036854775804] ⇈fffffffffffffffc
=== Inputs ===
x: j235 
y: i7 
=== Succesors ===
=== Usages ===
j269 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: j235 y: i7  <|@  <|@
f <@~|@floating>@ <|@
tid j269 <|@
result v155|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:686) [bci: 948]
stamp: i64 [-9223372036854775808 - 9223372036854775804] ⇈fffffffffffffffc
=== Inputs ===
x: j267 
y: j268 
=== Succesors ===
=== Usages ===
j235 v274 ?300 v279 j282 j235 ?690 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j267 y: j268  <|@  <|@
f <@~|@floating>@ <|@
tid v274 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:688) [bci: 978]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j269 
y: j273 
=== Succesors ===
=== Usages ===
v277 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j269 y: j273  <|@  <|@
f <@*|@fixed>@ <|@
tid v277 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:688) [bci: 978]
stamp: void
trueSuccessorProbability: 2.81873959865786E-4
=== Inputs ===
condition: v274 
=== Succesors ===
trueSuccessor: v275 
falseSuccessor: v276 
=== Usages ===
=== Predecessor ===
v943 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v274 #trueSuccessor: v275 #falseSuccessor: v276  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE v143|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction (highResult: rdx|QWORD, lowResult: rax|QWORD) = CDQ rax|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:683) [bci: 914]
locals: v0|QWORD[.] - - - - - - - - v135|DWORD - - - - - - - v140|DWORD int[0|0x0] int[0|0x0] - - - - - v143|QWORD - v112|QWORD - v144|QWORD - v118|QWORD - 
>@ <|@ instruction (highResult: rdx|QWORD, lowResult: rax|QWORD) = IDIV (highX: rdx|QWORD, lowX: rax|QWORD, y: v112|QWORD) size: QWORD state [bci:914] <|@ <|@
      nr   -1  <|@ instruction v145|QWORD = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v146|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v147|DWORD = MOV v145|QWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v148|DWORD = LEA [v147|DWORD + 48] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v139|QWORD[.] + v140|DWORD * 2 + 16], y: v148|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v149|QWORD = SHL v146|QWORD y: 3 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v150|QWORD = SHL v146|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v151|QWORD = ADD (x: v149|QWORD, y: v150|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v152|DWORD = INC v140|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v153|QWORD = SHL v144|QWORD y: 3 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v154|QWORD = SHL v144|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v155|QWORD = ADD (x: v153|QWORD, y: v154|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v155|QWORD y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 2.81873959865786E-4 condition: < trueDestination: B83 -> B84 falseDestination: B83 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B80" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4557049088300125308
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v275 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:697) [bci: 1017]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1193 
=== Usages ===
=== Predecessor ===
v277 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1193  <|@  <|@
tid ?300 <|@
d <@d|@=== Debug Properties ===
bci: 1039
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: false
localsSize: 33
locksSize: 0
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:700) [bci: 1038]
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 700
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - - - - - - - i705 - - - - - - - i295 i7 i7 - - i264 - - j530 - j168 - j269 - j174 - 
=== Succesors ===
=== Usages ===
v1193 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - - - - - - i705 - - - - - - - i295 i7 i7 - - i264 - - j530 - j168 - j269 - j174 -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1193 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?300 
=== Succesors ===
next: v301 
=== Usages ===
=== Predecessor ===
v275 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?300 #next: v301  <|@  <|@
f <@*|@fixed>@ <|@
tid v301 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 0
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:683) [bci: 914]
stamp: void
=== Inputs ===
loopBegin: v230 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1193 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v230  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:700) [bci: 1039]
locals: v0|QWORD[.] - - - - - - - - v135|DWORD - - - - - - - v152|DWORD int[1|0x1] int[1|0x1] - - v147|DWORD - - v151|QWORD - v112|QWORD - v155|QWORD - v118|QWORD - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:1039] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v152|DWORD, int[1|0x1], int[1|0x1], v151|QWORD, v155|QWORD] destination: B84 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B80" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4609963953039085360
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v276 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:689) [bci: 981]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1194 
=== Usages ===
=== Predecessor ===
v277 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1194  <|@  <|@
f <@~|@floating>@ <|@
tid v279 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:689) [bci: 986]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j530 
y: j269 
=== Succesors ===
=== Usages ===
i280 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j530 y: j269  <|@  <|@
f <@~|@floating>@ <|@
tid i280 <|@
result v156|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:689) [bci: 986]
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
condition: v279 
trueValue: i7 
falseValue: i8 
=== Succesors ===
=== Usages ===
i232 ?690 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v279 trueValue: i7 falseValue: i8  <|@  <|@
f <@~|@floating>@ <|@
tid j282 <|@
result v157|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:690) [bci: 1000]
stamp: i64 [-9223372036854775808 - 9223372036854775806] ⇈fffffffffffffffe
=== Inputs ===
x: j269 
y: j530 
=== Succesors ===
=== Usages ===
v284 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j269 y: j530  <|@  <|@
f <@~|@floating>@ <|@
tid v284 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:690) [bci: 1004]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j174 
y: j282 
=== Succesors ===
=== Usages ===
i285 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j174 y: j282  <|@  <|@
f <@~|@floating>@ <|@
tid i285 <|@
result v158|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:690) [bci: 1004]
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
condition: v284 
trueValue: i7 
falseValue: i8 
=== Succesors ===
=== Usages ===
i233 ?690 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v284 trueValue: i7 falseValue: i8  <|@  <|@
tid ?690 <|@
d <@d|@=== Debug Properties ===
bci: 1039
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: false
localsSize: 33
locksSize: 0
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:700) [bci: 1038]
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 700
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - - - - - - - i705 - - - - - - - i295 i280 i285 - - i264 - - j530 - j168 - j269 - j174 - 
=== Succesors ===
=== Usages ===
v1194 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - - - - - - i705 - - - - - - - i295 i280 i285 - - i264 - - j530 - j168 - j269 - j174 -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1194 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?690 
=== Succesors ===
next: v681 
=== Usages ===
=== Predecessor ===
v276 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?690 #next: v681  <|@  <|@
f <@*|@fixed>@ <|@
tid v681 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 1
stamp: void
=== Inputs ===
loopBegin: v230 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1194 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v230  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v155|QWORD, y: v151|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v156|DWORD = SETCC condition: > <|@ <|@
      nr   -1  <|@ instruction v157|QWORD = ADD (x: v155|QWORD, y: v151|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v157|QWORD, y: v118|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v158|DWORD = SETCC condition: > <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:700) [bci: 1039]
locals: v0|QWORD[.] - - - - - - - - v135|DWORD - - - - - - - v152|DWORD v156|DWORD v158|DWORD - - v147|DWORD - - v151|QWORD - v112|QWORD - v155|QWORD - v118|QWORD - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:1039] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v152|DWORD, v156|DWORD, v158|DWORD, v151|QWORD, v155|QWORD] destination: B85 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1287 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:700) [bci: 1038]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v230 
=== Succesors ===
next: v1285 
=== Usages ===
=== Predecessor ===
v1288 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v230 #next: v1285  <|@  <|@
f <@*|@fixed>@ <|@
tid v1285 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 1191
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:700) [bci: 1038]
reason: BoundsCheckException
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?236 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1287 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?236  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -304923 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:683) [bci: 914]
locals: v0|QWORD[.] - - - - - - - - v135|DWORD - - - - - - - v140|DWORD int[0|0x0] int[0|0x0] - - - - - v143|QWORD - v112|QWORD - v144|QWORD - v118|QWORD - 
>@ <|@ instruction DEOPT info [bci:914] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors "B143" 
    xhandlers
    flags 
    probability 4589484464932113000
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v252 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:702) [bci: 1042]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v230 
=== Succesors ===
next: v1528 
=== Usages ===
=== Predecessor ===
v262 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v230 #next: v1528  <|@  <|@
f <@~|@floating>@ <|@
tid j1530 <|@
result v159|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:702) [bci: 1045]
stamp: i64 [-9223372036854775808 - 9223372036854775804] ⇈fffffffffffffffc
=== Inputs ===
x: j234 
y: i7 
=== Succesors ===
=== Usages ===
j1529 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: j234 y: i7  <|@  <|@
f <@~|@floating>@ <|@
tid j1529 <|@
result v160|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:702) [bci: 1048]
stamp: i64
=== Inputs ===
x: j1530 
y: j174 
=== Succesors ===
=== Usages ===
j487 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j1530 y: j174  <|@  <|@
f <@~|@floating>@ <|@
tid v1533 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:703) [bci: 1056]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j234 
y: j271 
=== Succesors ===
=== Usages ===
i1532 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: j234 y: j271  <|@  <|@
f <@~|@floating>@ <|@
tid i1532 <|@
result v161|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:703) [bci: 1056]
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
condition: v1533 
trueValue: i7 
falseValue: i8 
=== Succesors ===
=== Usages ===
i1531 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v1533 trueValue: i7 falseValue: i8  <|@  <|@
f <@~|@floating>@ <|@
tid i1531 <|@
result v161|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 32
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:703) [bci: 1064]
resultBits: 8
stamp: i8 [0 - 1] ⇈0000000000000001
=== Inputs ===
value: i1532 
=== Succesors ===
=== Usages ===
i1423 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i1532  <|@  <|@
f <@*|@fixed>@ <|@
tid v1528 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:702) [bci: 1042]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v481 
=== Predecessor ===
v252 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v159|QWORD = SHL v143|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v160|QWORD = SUB (x: v159|QWORD, ~y: v118|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v143|QWORD, y: v143|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v161|DWORD = SETCC condition: = <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v135|DWORD, v140|DWORD, v141|DWORD, v142|DWORD, v160|QWORD, v161|DWORD] destination: B87 -> B143 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B143" 
    xhandlers
    flags 
    probability 4595581105729921479
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v240 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:702) [bci: 1042]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v230 
=== Succesors ===
next: v480 
=== Usages ===
=== Predecessor ===
v246 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v230 #next: v480  <|@  <|@
f <@~|@floating>@ <|@
tid j303 <|@
result v162|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:702) [bci: 1045]
stamp: i64 [-9223372036854775808 - 9223372036854775804] ⇈fffffffffffffffc
=== Inputs ===
x: j234 
y: i7 
=== Succesors ===
=== Usages ===
j304 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: j234 y: i7  <|@  <|@
f <@~|@floating>@ <|@
tid j304 <|@
result v163|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:702) [bci: 1048]
stamp: i64
=== Inputs ===
x: j303 
y: j174 
=== Succesors ===
=== Usages ===
j487 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j303 y: j174  <|@  <|@
f <@~|@floating>@ <|@
tid v306 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:703) [bci: 1056]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j234 
y: j271 
=== Succesors ===
=== Usages ===
i307 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: j234 y: j271  <|@  <|@
f <@~|@floating>@ <|@
tid i307 <|@
result v164|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:703) [bci: 1056]
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
condition: v306 
trueValue: i7 
falseValue: i8 
=== Succesors ===
=== Usages ===
i956 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v306 trueValue: i7 falseValue: i8  <|@  <|@
f <@~|@floating>@ <|@
tid i956 <|@
result v164|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 32
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:703) [bci: 1064]
resultBits: 8
stamp: i8 [0 - 1] ⇈0000000000000001
=== Inputs ===
value: i307 
=== Succesors ===
=== Usages ===
i1423 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i307  <|@  <|@
f <@*|@fixed>@ <|@
tid v480 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:760) [bci: 1426]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v481 
=== Predecessor ===
v240 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v162|QWORD = SHL v143|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v163|QWORD = SUB (x: v162|QWORD, ~y: v118|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v143|QWORD, y: v143|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v164|DWORD = SETCC condition: = <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v135|DWORD, v140|DWORD, v141|DWORD, v142|DWORD, v163|QWORD, v164|DWORD] destination: B88 -> B143 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B90" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1278 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:680) [bci: 905]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1502 
=== Usages ===
=== Predecessor ===
v1279 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1502  <|@  <|@
f <@~|@floating>@ <|@
tid i1503 <|@
result int[-249619|0xfffffffffffc30ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -249619
stableDimension: 0
stamp: i32 [-249619] ⇊00000000fffc30ed ⇈00000000fffc30ed
stampKind: i32
value: int[-249619|0xfffffffffffc30ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1499 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1502 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1496 
=== Predecessor ===
v1278 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-249619|0xfffffffffffc30ed]] destination: B89 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B74" "B89" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1499 <|@
result v165|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-249619 - -249363] ⇊00000000fffc30ed ⇈00000000fffc31ed
valueDescription: i32
=== Inputs ===
merge: v1496 
values: i1498 i1503 
=== Succesors ===
=== Usages ===
v1501 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1496 values: i1498 i1503  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1496 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1497 v1502 
=== Succesors ===
next: v1501 
=== Usages ===
i1499 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1497 v1502 #next: v1501  <|@  <|@
tid ?701 <|@
d <@d|@=== Debug Properties ===
bci: 889
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: false
localsSize: 33
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 680
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - - - i5 - - - i704 - - - - - - - i716 i184 i189 - - - - - j527 - j168 - j181 - j174 - 
=== Succesors ===
=== Usages ===
v1501 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - - i5 - - - i704 - - - - - - - i716 i184 i189 - - - - - j527 - j168 - j181 - j174 -  <|@  <|@
f <@*|@fixed>@ <|@
tid v1501 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?701 
actionAndReason: i1499 
speculation: a1432 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1496 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?701 actionAndReason: i1499 speculation: a1432  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v165|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v165|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:680) [bci: 889]
locals: v0|QWORD[.] - - - - v4|DWORD - - - v129|DWORD - - - - - - - v130|DWORD v131|DWORD v132|DWORD - - - - - v124|QWORD - v112|QWORD - v121|QWORD - v118|QWORD - 
>@ <|@ instruction DEOPT info [bci:889] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B154" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1258 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:653) [bci: 746]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1522 
=== Usages ===
=== Predecessor ===
v1259 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1522  <|@  <|@
f <@~|@floating>@ <|@
tid i1523 <|@
result int[-235035|0xfffffffffffc69e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -235035
stableDimension: 0
stamp: i32 [-235035] ⇊00000000fffc69e5 ⇈00000000fffc69e5
stampKind: i32
value: int[-235035|0xfffffffffffc69e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1515 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1522 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1512 
=== Predecessor ===
v1258 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-235035|0xfffffffffffc69e5]] destination: B91 -> B154 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B94" 
    xhandlers
    flags 
    probability 4575295933574210854
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v158 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:710) [bci: 1070]
stamp: void
=== Inputs ===
=== Succesors ===
next: v157 
=== Usages ===
=== Predecessor ===
v159 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v157  <|@  <|@
f <@*|@fixed>@ <|@
tid v157 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:710) [bci: 1070]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v156 
=== Predecessor ===
v158 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B92 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B94" 
    xhandlers
    flags 
    probability 4568817853797302867
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v151 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:710) [bci: 1070]
stamp: void
=== Inputs ===
=== Succesors ===
next: v155 
=== Usages ===
=== Predecessor ===
v152 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v155  <|@  <|@
f <@*|@fixed>@ <|@
tid v155 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:710) [bci: 1070]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v156 
=== Predecessor ===
v151 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B93 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B93" "B92" 
    successors "B95" "B96" 
    xhandlers
    flags 
    probability 4577144435309065000
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v156 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:710) [bci: 1070]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v155 v157 
=== Succesors ===
next: a314 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v155 v157 #next: a314  <|@  <|@
tid v976 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Static
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:710) [bci: 1074]
returnStamp: a# Lsun/misc/FDBigInteger;
signature: [Ljdk.vm.ci.meta.JavaType;@6530e6a0
stamp: void
targetMethod: HotSpotMethod<FDBigInteger.valueOfPow52(int, int)>
=== Inputs ===
arguments: i668 i134 
=== Succesors ===
=== Usages ===
a314 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: i668 i134  <|@  <|@
tid ?1405 <|@
d <@d|@=== Debug Properties ===
bci: 1074
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: true
localsSize: 33
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 710
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - j112 - - i5 - - - i612 i133 i666 i134 i668 i8 i666 - - - - - - - - - - - - - - - - - 
=== Succesors ===
=== Usages ===
a314 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - j112 - - i5 - - - i612 i133 i666 i134 i668 i8 i666 - - - - - - - - - - - - - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a314 <|@
result v166|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 1074
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:710) [bci: 1074]
polymorphic: false
stamp: a# Lsun/misc/FDBigInteger;
targetMethod: Direct#FDBigInteger.valueOfPow52
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v976 
stateDuring: ?1405 
=== Succesors ===
next: v1611 
=== Usages ===
v980 v981 ?1406 v1611 
=== Predecessor ===
v156 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v976 stateDuring: ?1405 #next: v1611  <|@  <|@
tid ?315 <|@
d <@d|@=== Debug Properties ===
bci: 1077
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: false
localsSize: 33
locksSize: 0
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:710) [bci: 1074]
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 710
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: a1 - j112 - - i5 - - - i612 i133 i666 i134 i668 i8 i666 - - - - - - - - - - - - - - - - - a1432 
=== Succesors ===
=== Usages ===
v1611 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - j112 - - i5 - - - i612 i133 i666 i134 i668 i8 i666 - - - - - - - - - - - - - - - - - a1432  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1611 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?315 
object: a314 
=== Succesors ===
next: i317 
=== Usages ===
=== Predecessor ===
a314 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?315 object: a314 #next: i317  <|@  <|@
tid v980 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:711) [bci: 1081]
returnStamp: i32
signature: [Ljdk.vm.ci.meta.JavaType;@3b33fbfc
stamp: void
targetMethod: HotSpotMethod<FDBigInteger.getNormalizationBias()>
=== Inputs ===
arguments: a314 
=== Succesors ===
=== Usages ===
i317 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a314  <|@  <|@
tid ?1406 <|@
d <@d|@=== Debug Properties ===
bci: 1081
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: true
localsSize: 33
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 711
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - j112 - - i5 - - - i612 i133 i666 i134 i668 i8 i666 - - - - - - - - - a314 - - - - - - - 
=== Succesors ===
=== Usages ===
i317 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - j112 - - i5 - - - i612 i133 i666 i134 i668 i8 i666 - - - - - - - - - a314 - - - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i317 <|@
result v167|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 1081
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:711) [bci: 1081]
polymorphic: false
stamp: i32
targetMethod: Direct#FDBigInteger.getNormalizationBias
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v980 
stateDuring: ?1406 
=== Succesors ===
next: a320 
=== Usages ===
?1409 v981 ?1408 i322 ?325 i327 ?1407 i331 
=== Predecessor ===
v1611 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v980 stateDuring: ?1406 #next: a320  <|@  <|@
tid v981 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:712) [bci: 1090]
returnStamp: a# Lsun/misc/FDBigInteger;
signature: [Ljdk.vm.ci.meta.JavaType;@1ed691ef
stamp: void
targetMethod: HotSpotMethod<FDBigInteger.leftShift(int)>
=== Inputs ===
arguments: a314 i317 
=== Succesors ===
=== Usages ===
a320 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a314 i317  <|@  <|@
tid ?1407 <|@
d <@d|@=== Debug Properties ===
bci: 1090
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: true
localsSize: 33
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 712
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - j112 - - i5 - - - i612 i133 i666 i134 i668 i8 i666 - - - - - - - - - - i317 - - - - - - 
=== Succesors ===
=== Usages ===
a320 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - j112 - - i5 - - - i612 i133 i666 i134 i668 i8 i666 - - - - - - - - - - i317 - - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a320 <|@
result v168|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 1090
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:712) [bci: 1090]
polymorphic: false
stamp: a# Lsun/misc/FDBigInteger;
targetMethod: Direct#FDBigInteger.leftShift
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v981 
stateDuring: ?1407 
=== Succesors ===
next: a324 
=== Usages ===
?1417 ?325 ?1416 ?335 v987 ?1415 ?341 ?347 ?1414 ?368 ?1411 ?1413 ?393 v995 ?1412 ?423 ?1410 ?432 ?732 ?1408 ?1409 
=== Predecessor ===
i317 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v981 stateDuring: ?1407 #next: a324  <|@  <|@
f <@~|@floating>@ <|@
tid i322 <|@
result v169|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:714) [bci: 1102]
stamp: i32
=== Inputs ===
x: i133 
y: i317 
=== Succesors ===
=== Usages ===
v982 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i133 y: i317  <|@  <|@
tid v982 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Static
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:714) [bci: 1103]
returnStamp: a# Lsun/misc/FDBigInteger;
signature: [Ljdk.vm.ci.meta.JavaType;@2190415b
stamp: void
targetMethod: HotSpotMethod<FDBigInteger.valueOfMulPow52(long, int, int)>
=== Inputs ===
arguments: j112 i666 i322 
=== Succesors ===
=== Usages ===
a324 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: j112 i666 i322  <|@  <|@
tid ?1408 <|@
d <@d|@=== Debug Properties ===
bci: 1103
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: true
localsSize: 33
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 714
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - - - i5 - - - i612 - - i134 i668 i8 i666 - - - - - - - - - a320 i317 - - - - - - 
=== Succesors ===
=== Usages ===
a324 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - - i5 - - - i612 - - i134 i668 i8 i666 - - - - - - - - - a320 i317 - - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a324 <|@
result v170|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 1103
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:714) [bci: 1103]
polymorphic: false
stamp: a# Lsun/misc/FDBigInteger;
targetMethod: Direct#FDBigInteger.valueOfMulPow52
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v982 
stateDuring: ?1408 
=== Succesors ===
next: v1612 
=== Usages ===
a1189 ?1417 ?335 a1189 ?1416 v1612 ?341 v993 ?347 ?1415 ?368 ?432 ?1414 ?393 ?1410 ?732 ?1412 ?1413 ?423 ?1411 v1065 v1011 ?1409 v987 v988 v995 v1087 v1595 v1589 v1590 
=== Predecessor ===
a320 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v982 stateDuring: ?1408 #next: v1612  <|@  <|@
tid ?325 <|@
d <@d|@=== Debug Properties ===
bci: 1106
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: false
localsSize: 33
locksSize: 0
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:714) [bci: 1103]
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 714
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: a1 - - - - i5 - - - i612 - - i134 i668 i8 i666 - - - - - - - - - a320 i317 - - - - - - a1432 
=== Succesors ===
=== Usages ===
v1612 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - - i5 - - - i612 - - i134 i668 i8 i666 - - - - - - - - - a320 i317 - - - - - - a1432  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1612 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?325 
object: a324 
=== Succesors ===
next: a329 
=== Usages ===
=== Predecessor ===
a324 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?325 object: a324 #next: a329  <|@  <|@
f <@~|@floating>@ <|@
tid i327 <|@
result v171|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:715) [bci: 1118]
stamp: i32
=== Inputs ===
x: i317 
y: i7 
=== Succesors ===
=== Usages ===
v983 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i317 y: i7  <|@  <|@
tid v983 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Static
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:715) [bci: 1119]
returnStamp: a# Lsun/misc/FDBigInteger;
signature: [Ljdk.vm.ci.meta.JavaType;@43f7a62f
stamp: void
targetMethod: HotSpotMethod<FDBigInteger.valueOfPow52(int, int)>
=== Inputs ===
arguments: i676 i327 
=== Succesors ===
=== Usages ===
a329 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: i676 i327  <|@  <|@
tid ?1409 <|@
d <@d|@=== Debug Properties ===
bci: 1119
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: true
localsSize: 33
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 715
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - - - i5 - - - i612 - - i134 i668 - - - - - - - - - - - a320 i317 a324 - - - - - 
=== Succesors ===
=== Usages ===
a329 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - - i5 - - - i612 - - i134 i668 - - - - - - - - - - - a320 i317 a324 - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a329 <|@
result v172|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 1119
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:715) [bci: 1119]
polymorphic: false
stamp: a# Lsun/misc/FDBigInteger;
targetMethod: Direct#FDBigInteger.valueOfPow52
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v983 
stateDuring: ?1409 
=== Succesors ===
next: a334 
=== Usages ===
?1413 ?335 ?1412 v988 ?341 v993 ?347 ?1411 ?368 a392 ?1410 
=== Predecessor ===
v1612 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v983 stateDuring: ?1409 #next: a334  <|@  <|@
f <@~|@floating>@ <|@
tid i331 <|@
result v173|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:717) [bci: 1132]
stamp: i32
=== Inputs ===
x: i134 
y: i317 
=== Succesors ===
=== Usages ===
i332 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i134 y: i317  <|@  <|@
f <@~|@floating>@ <|@
tid i332 <|@
result v174|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:717) [bci: 1134]
stamp: i32
=== Inputs ===
x: i331 
y: i7 
=== Succesors ===
=== Usages ===
v984 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i331 y: i7  <|@  <|@
tid v984 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Static
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:717) [bci: 1135]
returnStamp: a# Lsun/misc/FDBigInteger;
signature: [Ljdk.vm.ci.meta.JavaType;@67bf59b6
stamp: void
targetMethod: HotSpotMethod<FDBigInteger.valueOfPow52(int, int)>
=== Inputs ===
arguments: i680 i332 
=== Succesors ===
=== Usages ===
a334 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: i680 i332  <|@  <|@
tid ?1410 <|@
d <@d|@=== Debug Properties ===
bci: 1135
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: true
localsSize: 33
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 717
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - - - i5 - - - i612 - - - - - - - - - - - - - - - a320 - a324 a329 - - - - 
=== Succesors ===
=== Usages ===
a334 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - - i5 - - - i612 - - - - - - - - - - - - - - - a320 - a324 a329 - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a334 <|@
result v175|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 1135
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:717) [bci: 1135]
polymorphic: false
stamp: a# Lsun/misc/FDBigInteger;
targetMethod: Direct#FDBigInteger.valueOfPow52
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v984 
stateDuring: ?1410 
=== Succesors ===
next: v1613 
=== Usages ===
v1011 ?1418 ?341 v1065 ?347 ?1417 ?368 v1091 ?1416 ?393 ?1412 ?732 ?1415 ?423 ?458 v1613 ?432 ?1414 ?1413 ?1411 v993 
=== Predecessor ===
a329 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v984 stateDuring: ?1410 #next: v1613  <|@  <|@
tid ?335 <|@
d <@d|@=== Debug Properties ===
bci: 1138
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: false
localsSize: 33
locksSize: 0
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:717) [bci: 1135]
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 717
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: a1 - - - - i5 - - - i612 - - - - - - - - - - - - - - - a320 - a324 a329 - - - - a1432 
=== Succesors ===
=== Usages ===
v1613 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - - i5 - - - i612 - - - - - - - - - - - - - - - a320 - a324 a329 - - - - a1432  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1613 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?335 
object: a334 
=== Succesors ===
next: i337 
=== Usages ===
=== Predecessor ===
a334 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?335 object: a334 #next: i337  <|@  <|@
tid v987 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:724) [bci: 1147]
returnStamp: i32
signature: [Ljdk.vm.ci.meta.JavaType;@4d4cf547
stamp: void
targetMethod: HotSpotMethod<FDBigInteger.quoRemIteration(FDBigInteger)>
=== Inputs ===
arguments: a324 a320 
=== Succesors ===
=== Usages ===
i337 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a324 a320  <|@  <|@
tid ?1411 <|@
d <@d|@=== Debug Properties ===
bci: 1147
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: true
localsSize: 33
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 724
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - - - i5 - - - i612 - - - - - - - i8 - - - - - - - a320 - a324 a329 a334 - - - 
=== Succesors ===
=== Usages ===
i337 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - - i5 - - - i612 - - - - - - - i8 - - - - - - - a320 - a324 a329 a334 - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i337 <|@
result v176|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 1147
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:724) [bci: 1147]
polymorphic: false
stamp: i32
targetMethod: Direct#FDBigInteger.quoRemIteration
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v987 
stateDuring: ?1411 
=== Succesors ===
next: i340 
=== Usages ===
?1413 ?341 ?347 v352 i358 ?1412 
=== Predecessor ===
v1613 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v987 stateDuring: ?1411 #next: i340  <|@  <|@
tid v988 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:725) [bci: 1156]
returnStamp: i32
signature: [Ljdk.vm.ci.meta.JavaType;@6e75ff2c
stamp: void
targetMethod: HotSpotMethod<FDBigInteger.cmp(FDBigInteger)>
=== Inputs ===
arguments: a324 a329 
=== Succesors ===
=== Usages ===
i340 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a324 a329  <|@  <|@
tid ?1412 <|@
d <@d|@=== Debug Properties ===
bci: 1156
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: true
localsSize: 33
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 725
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - - - i5 - - - i612 - - - - - - - i8 - - - - i337 - - a320 - a324 a329 a334 - - - 
=== Succesors ===
=== Usages ===
i340 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - - i5 - - - i612 - - - - - - - i8 - - - - i337 - - a320 - a324 a329 a334 - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i340 <|@
result v177|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 1156
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:725) [bci: 1156]
polymorphic: false
stamp: i32
targetMethod: Direct#FDBigInteger.cmp
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v988 
stateDuring: ?1412 
=== Succesors ===
next: v1304 
=== Usages ===
?341 v342 
=== Predecessor ===
i337 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v988 stateDuring: ?1412 #next: v1304  <|@  <|@
f <@~|@floating>@ <|@
tid v342 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:725) [bci: 1159]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i340 
y: i8 
=== Succesors ===
=== Usages ===
v1304 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i340 y: i8  <|@  <|@
f <@*|@fixed>@ <|@
tid v1304 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:725) [bci: 1159]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v342 
=== Succesors ===
trueSuccessor: v1303 
falseSuccessor: v1301 
=== Usages ===
=== Predecessor ===
i340 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v342 #trueSuccessor: v1303 #falseSuccessor: v1301  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|DWORD = MOVE v81|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v104|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:710) [bci: 1074]
locals: v0|QWORD[.] - v100|QWORD - - v4|DWORD - - - v71|DWORD v101|DWORD v76|DWORD v104|DWORD v81|DWORD int[0|0x0] v76|DWORD - - - - - - - - - - - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|DWORD, rdx|DWORD] [] callTarget: HotSpotMethod<FDBigInteger.valueOfPow52(int, int)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1074] <|@ <|@
      nr   -1  <|@ instruction v166|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:710) [bci: 1077]
stack: Object[null] 
locals: v0|QWORD[.] - v100|QWORD - - v4|DWORD - - - v71|DWORD v101|DWORD v76|DWORD v104|DWORD v81|DWORD int[0|0x0] v76|DWORD - - - - - - - - - - - - - - - - - 
>@ <|@ instruction NULLCHECK [v166|QWORD[.]] state [bci:1077] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v166|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:711) [bci: 1081]
locals: v0|QWORD[.] - v100|QWORD - - v4|DWORD - - - v71|DWORD v101|DWORD v76|DWORD v104|DWORD v81|DWORD int[0|0x0] v76|DWORD - - - - - - - - - v166|QWORD[.] - - - - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<FDBigInteger.getNormalizationBias()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1081] <|@ <|@
      nr   -1  <|@ instruction v167|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v166|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v167|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:712) [bci: 1090]
locals: v0|QWORD[.] - v100|QWORD - - v4|DWORD - - - v71|DWORD v101|DWORD v76|DWORD v104|DWORD v81|DWORD int[0|0x0] v76|DWORD - - - - - - - - - - v167|DWORD - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<FDBigInteger.leftShift(int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1090] <|@ <|@
      nr   -1  <|@ instruction v168|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v169|DWORD = ADD (x: v167|DWORD, y: v101|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v100|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v76|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v169|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:714) [bci: 1103]
locals: v0|QWORD[.] - - - - v4|DWORD - - - v71|DWORD - - v104|DWORD v81|DWORD int[0|0x0] v76|DWORD - - - - - - - - - v168|QWORD[.] v167|DWORD - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD, rdx|DWORD, rcx|DWORD] [] callTarget: HotSpotMethod<FDBigInteger.valueOfMulPow52(long, int, int)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1103] <|@ <|@
      nr   -1  <|@ instruction v170|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:714) [bci: 1106]
stack: Object[null] 
locals: v0|QWORD[.] - - - - v4|DWORD - - - v71|DWORD - - v104|DWORD v81|DWORD int[0|0x0] v76|DWORD - - - - - - - - - v168|QWORD[.] v167|DWORD - - - - - - 
>@ <|@ instruction NULLCHECK [v170|QWORD[.]] state [bci:1106] <|@ <|@
      nr   -1  <|@ instruction v171|DWORD = INC v167|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|DWORD = MOVE v78|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v171|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:715) [bci: 1119]
locals: v0|QWORD[.] - - - - v4|DWORD - - - v71|DWORD - - v104|DWORD v81|DWORD - - - - - - - - - - - v168|QWORD[.] v167|DWORD v170|QWORD[.] - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|DWORD, rdx|DWORD] [] callTarget: HotSpotMethod<FDBigInteger.valueOfPow52(int, int)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1119] <|@ <|@
      nr   -1  <|@ instruction v172|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v173|DWORD = ADD (x: v104|DWORD, y: v167|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v174|DWORD = INC v173|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|DWORD = MOVE v83|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v174|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:717) [bci: 1135]
locals: v0|QWORD[.] - - - - v4|DWORD - - - v71|DWORD - - - - - - - - - - - - - - - v168|QWORD[.] - v170|QWORD[.] v172|QWORD[.] - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|DWORD, rdx|DWORD] [] callTarget: HotSpotMethod<FDBigInteger.valueOfPow52(int, int)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1135] <|@ <|@
      nr   -1  <|@ instruction v175|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:717) [bci: 1138]
stack: Object[null] 
locals: v0|QWORD[.] - - - - v4|DWORD - - - v71|DWORD - - - - - - - - - - - - - - - v168|QWORD[.] - v170|QWORD[.] v172|QWORD[.] - - - - 
>@ <|@ instruction NULLCHECK [v175|QWORD[.]] state [bci:1138] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v170|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v168|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:724) [bci: 1147]
locals: v0|QWORD[.] - - - - v4|DWORD - - - v71|DWORD - - - - - - - int[0|0x0] - - - - - - - v168|QWORD[.] - v170|QWORD[.] v172|QWORD[.] v175|QWORD[.] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<FDBigInteger.quoRemIteration(FDBigInteger)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1147] <|@ <|@
      nr   -1  <|@ instruction v176|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v170|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v172|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:725) [bci: 1156]
locals: v0|QWORD[.] - - - - v4|DWORD - - - v71|DWORD - - - - - - - int[0|0x0] - - - - v176|DWORD - - v168|QWORD[.] - v170|QWORD[.] v172|QWORD[.] v175|QWORD[.] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<FDBigInteger.cmp(FDBigInteger)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1156] <|@ <|@
      nr   -1  <|@ instruction v177|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v177|DWORD, y: v177|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B94 -> B95 falseDestination: B94 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1303 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:725) [bci: 1159]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1302 
=== Usages ===
=== Predecessor ===
v1304 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1302  <|@  <|@
tid ?341 <|@
d <@d|@=== Debug Properties ===
bci: 1159
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: false
localsSize: 33
locksSize: 0
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:725) [bci: 1156]
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 725
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: a1 - - - - i5 - - - i612 - - - - - - - i8 - - - - i337 - - a320 - a324 a329 a334 - - - i340 
=== Succesors ===
=== Usages ===
v1302 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - - i5 - - - i612 - - - - - - - i8 - - - - i337 - - a320 - a324 a329 a334 - - - i340  <|@  <|@
f <@*|@fixed>@ <|@
tid v1302 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 989
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:725) [bci: 1159]
reason: UnreachedCode
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?341 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1303 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?341  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -253203 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:725) [bci: 1159]
stack: v177|DWORD 
locals: v0|QWORD[.] - - - - v4|DWORD - - - v71|DWORD - - - - - - - int[0|0x0] - - - - v176|DWORD - - v168|QWORD[.] - v170|QWORD[.] v172|QWORD[.] v175|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:1159] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B97" "B98" 
    xhandlers
    flags 
    probability 4577144435309065000
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1301 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:725) [bci: 1159]
stamp: void
=== Inputs ===
=== Succesors ===
next: i346 
=== Usages ===
=== Predecessor ===
v1304 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i346  <|@  <|@
tid v993 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:726) [bci: 1175]
returnStamp: i32
signature: [Ljdk.vm.ci.meta.JavaType;@104dfa13
stamp: void
targetMethod: HotSpotMethod<FDBigInteger.addAndCmp(FDBigInteger, FDBigInteger)>
=== Inputs ===
arguments: a334 a324 a329 
=== Succesors ===
=== Usages ===
i346 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a334 a324 a329  <|@  <|@
tid ?1413 <|@
d <@d|@=== Debug Properties ===
bci: 1175
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: true
localsSize: 33
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 726
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - - - i5 - - - i612 - - - - - - - i8 i8 - - - i337 - - a320 - a324 a329 a334 - - - 
=== Succesors ===
=== Usages ===
i346 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - - i5 - - - i612 - - - - - - - i8 i8 - - - i337 - - a320 - a324 a329 a334 - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i346 <|@
result v178|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 1175
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:726) [bci: 1175]
polymorphic: false
stamp: i32
targetMethod: Direct#FDBigInteger.addAndCmp
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v993 
stateDuring: ?1413 
=== Succesors ===
next: v1308 
=== Usages ===
?347 v348 
=== Predecessor ===
v1301 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v993 stateDuring: ?1413 #next: v1308  <|@  <|@
tid ?347 <|@
d <@d|@=== Debug Properties ===
bci: 1178
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: false
localsSize: 33
locksSize: 0
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:726) [bci: 1175]
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 726
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: a1 - - - - i5 - - - i612 - - - - - - - i8 i8 - - - i337 - - a320 - a324 a329 a334 - - - i346 
=== Succesors ===
=== Usages ===
v1461 i1559 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - - i5 - - - i612 - - - - - - - i8 i8 - - - i337 - - a320 - a324 a329 a334 - - - i346  <|@  <|@
f <@~|@floating>@ <|@
tid v348 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:726) [bci: 1178]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i346 
y: i7 
=== Succesors ===
=== Usages ===
v1308 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i346 y: i7  <|@  <|@
f <@*|@fixed>@ <|@
tid v1308 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:726) [bci: 1178]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v348 
=== Succesors ===
trueSuccessor: v1307 
falseSuccessor: v1305 
=== Usages ===
=== Predecessor ===
i346 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v348 #trueSuccessor: v1307 #falseSuccessor: v1305  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v175|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v170|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE v172|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:726) [bci: 1175]
locals: v0|QWORD[.] - - - - v4|DWORD - - - v71|DWORD - - - - - - - int[0|0x0] int[0|0x0] - - - v176|DWORD - - v168|QWORD[.] - v170|QWORD[.] v172|QWORD[.] v175|QWORD[.] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] [] callTarget: HotSpotMethod<FDBigInteger.addAndCmp(FDBigInteger, FDBigInteger)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1175] <|@ <|@
      nr   -1  <|@ instruction v178|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v178|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B96 -> B97 falseDestination: B96 -> B98 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B96" 
    successors "B102" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1307 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:726) [bci: 1178]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1457 
=== Usages ===
=== Predecessor ===
v1308 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1457  <|@  <|@
f <@~|@floating>@ <|@
tid i1458 <|@
result int[-254483|0xfffffffffffc1ded] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -254483
stableDimension: 0
stamp: i32 [-254483] ⇊00000000fffc1ded ⇈00000000fffc1ded
stampKind: i32
value: int[-254483|0xfffffffffffc1ded]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1459 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1457 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1456 
=== Predecessor ===
v1307 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-254483|0xfffffffffffc1ded]] destination: B97 -> B102 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B96" 
    successors "B99" "B100" 
    xhandlers
    flags 
    probability 4577144435309065000
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1305 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:726) [bci: 1178]
stamp: void
=== Inputs ===
=== Succesors ===
next: v355 
=== Usages ===
=== Predecessor ===
v1308 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v355  <|@  <|@
f <@~|@floating>@ <|@
tid v352 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:729) [bci: 1213]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i337 
y: i8 
=== Succesors ===
=== Usages ===
v355 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i337 y: i8  <|@  <|@
f <@*|@fixed>@ <|@
tid v355 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:729) [bci: 1213]
stamp: void
trueSuccessorProbability: 0.11184606133493691
=== Inputs ===
condition: v352 
=== Succesors ===
trueSuccessor: v353 
falseSuccessor: v354 
=== Usages ===
=== Predecessor ===
v1305 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v352 #trueSuccessor: v353 #falseSuccessor: v354  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v176|DWORD, y: v176|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.11184606133493691 condition: = trueDestination: B98 -> B99 falseDestination: B98 -> B100 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B98" 
    successors "B104" 
    xhandlers
    flags 
    probability 4563003214077343158
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v353 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:729) [bci: 1216]
stamp: void
=== Inputs ===
=== Succesors ===
next: v363 
=== Usages ===
=== Predecessor ===
v355 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v363  <|@  <|@
f <@~|@floating>@ <|@
tid i1534 <|@
result v179|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:670) [bci: 867]
stamp: i32
=== Inputs ===
x: i612 
y: i17 
=== Succesors ===
=== Usages ===
i366 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i612 y: i17  <|@  <|@
f <@*|@fixed>@ <|@
tid v363 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:741) [bci: 1243]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v364 
=== Predecessor ===
v353 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v179|DWORD = DEC v71|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v179|DWORD, int[0|0x0]] destination: B99 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B98" 
    successors "B101" "B103" 
    xhandlers
    flags 
    probability 4576474386411764849
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v354 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:733) [bci: 1227]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1558 
=== Usages ===
=== Predecessor ===
v355 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1558  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1558 <|@
result v180|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FloatingDecimal$BinaryToASCIIBuffer.digits
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:733) [bci: 1228]
nullCheck: false
stamp: n# [C
=== Inputs ===
stateBefore: - 
guard: - 
address: v1585 
=== Succesors ===
next: i1559 
=== Usages ===
v1604 v1603 
=== Predecessor ===
v354 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1585 #next: i1559  <|@  <|@
f <@~|@floating>@ <|@
tid v1603 <|@
result [v180|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1558 
=== Succesors ===
=== Usages ===
i1559 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1558  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1559 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:733) [bci: 1242]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?347 
guard: - 
address: v1603 
=== Succesors ===
next: v1316 
=== Usages ===
v1100 
=== Predecessor ===
a1558 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?347 guard: - address: v1603 #next: v1316  <|@  <|@
f <@~|@floating>@ <|@
tid v1100 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:733) [bci: 1242]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1559 
y: i8 
=== Succesors ===
=== Usages ===
v1316 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i1559 y: i8  <|@  <|@
f <@*|@fixed>@ <|@
tid v1316 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:733) [bci: 1242]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v1100 
=== Succesors ===
trueSuccessor: v1315 
falseSuccessor: v1313 
=== Usages ===
=== Predecessor ===
i1559 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1100 #trueSuccessor: v1315 #falseSuccessor: v1313  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v180|DWORD[.] = MOV [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:726) [bci: 1178]
stack: v178|DWORD 
locals: v0|QWORD[.] - - - - v4|DWORD - - - v71|DWORD - - - - - - - int[0|0x0] int[0|0x0] - - - v176|DWORD - - v168|QWORD[.] - v170|QWORD[.] v172|QWORD[.] v175|QWORD[.] - - - 
>@ <|@ instruction CMP [v180|DWORD[.] * 8 + 12] y: 0 size: DWORD state [bci:1178] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B100 -> B101 falseDestination: B100 -> B103 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B102" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1315 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:733) [bci: 1242]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1464 
=== Usages ===
=== Predecessor ===
v1316 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1464  <|@  <|@
f <@~|@floating>@ <|@
tid i1465 <|@
result int[-291867|0xfffffffffffb8be5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -291867
stableDimension: 0
stamp: i32 [-291867] ⇊00000000fffb8be5 ⇈00000000fffb8be5
stampKind: i32
value: int[-291867|0xfffffffffffb8be5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1459 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1464 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1456 
=== Predecessor ===
v1315 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-291867|0xfffffffffffb8be5]] destination: B101 -> B102 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B97" "B101" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1459 <|@
result v181|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-291867 - -254483] ⇊00000000fff801e5 ⇈00000000ffffbffd
valueDescription: i32
=== Inputs ===
merge: v1456 
values: i1458 i1465 
=== Succesors ===
=== Usages ===
v1461 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1456 values: i1458 i1465  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1456 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1457 v1464 
=== Succesors ===
next: v1461 
=== Usages ===
i1459 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1457 v1464 #next: v1461  <|@  <|@
f <@*|@fixed>@ <|@
tid v1461 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?347 
actionAndReason: i1459 
speculation: a1432 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1456 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?347 actionAndReason: i1459 speculation: a1432  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v181|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v181|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:726) [bci: 1178]
stack: v178|DWORD 
locals: v0|QWORD[.] - - - - v4|DWORD - - - v71|DWORD - - - - - - - int[0|0x0] int[0|0x0] - - - v176|DWORD - - v168|QWORD[.] - v170|QWORD[.] v172|QWORD[.] v175|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:1178] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B104" 
    xhandlers
    flags 
    probability 4576474386411764849
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1313 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:733) [bci: 1242]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1105 
=== Usages ===
v1105 
=== Predecessor ===
v1316 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1105  <|@  <|@
f <@~|@floating>@ <|@
tid v1604 <|@
result [v180|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1558 
=== Succesors ===
=== Usages ===
v1105 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1558  <|@  <|@
f <@~|@floating>@ <|@
tid i358 <|@
result v182|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:733) [bci: 1240]
stamp: i32
=== Inputs ===
x: i337 
y: i200 
=== Succesors ===
=== Usages ===
i359 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i337 y: i200  <|@  <|@
f <@~|@floating>@ <|@
tid i359 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 32
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:733) [bci: 1241]
resultBits: 16
stamp: i16
=== Inputs ===
value: i358 
=== Succesors ===
=== Usages ===
v1105 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i358  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1105 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:733) [bci: 1242]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1313 
address: v1604 
value: i359 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v365 
=== Usages ===
=== Predecessor ===
v1313 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1313 address: v1604 value: i359 stateAfter: - lastLocationAccess: - #next: v365  <|@  <|@
f <@*|@fixed>@ <|@
tid v365 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:741) [bci: 1243]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v364 
=== Predecessor ===
v1105 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v182|DWORD = LEA [v176|DWORD + 48] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v180|DWORD[.] * 8 + 16], y: v182|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v71|DWORD, int[1|0x1]] destination: B103 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B99" "B103" 
    successors "B105" "B106" 
    xhandlers
    flags 
    probability 4577144435309065000
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i366 <|@
result v183|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:741) [bci: 1243]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v364 
values: i1534 i612 
=== Succesors ===
=== Usages ===
?368 v372 v379 i483 ?1420 ?393 ?732 ?474 ?1419 ?423 ?1415 ?432 ?1418 ?1417 ?458 ?1416 ?1414 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v364 values: i1534 i612  <|@  <|@
f <@~|@floating>@ <|@
tid i367 <|@
result v184|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:741) [bci: 1243]
stamp: i32 [0 - 1] ⇈0000000000000001
valueDescription: i32
=== Inputs ===
merge: v364 
values: i8 i7 
=== Succesors ===
=== Usages ===
?368 i389 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v364 values: i8 i7  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v364 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:741) [bci: 1243]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v363 v365 
=== Succesors ===
next: v371 
=== Usages ===
i366 i367 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v363 v365 #next: v371  <|@  <|@
f <@*|@fixed>@ <|@
tid v371 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:741) [bci: 1245]
stamp: void
trueSuccessorProbability: 0.057125676488274206
=== Inputs ===
condition: v212 
=== Succesors ===
trueSuccessor: v369 
falseSuccessor: v370 
=== Usages ===
=== Predecessor ===
v364 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v212 #trueSuccessor: v369 #falseSuccessor: v370  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v183|DWORD, v184|DWORD] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v4|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.057125676488274206 condition: = trueDestination: B104 -> B105 falseDestination: B104 -> B106 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B110" 
    xhandlers
    flags 
    probability 4558614891679615696
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v369 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:742) [bci: 1262]
stamp: void
=== Inputs ===
=== Succesors ===
next: v385 
=== Usages ===
=== Predecessor ===
v371 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v385  <|@  <|@
f <@*|@fixed>@ <|@
tid v385 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:744) [bci: 1268]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v384 
=== Predecessor ===
v369 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B105 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B107" "B108" 
    xhandlers
    flags 
    probability 4576802206033562235
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v370 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:741) [bci: 1248]
stamp: void
=== Inputs ===
=== Succesors ===
next: v378 
=== Usages ===
=== Predecessor ===
v371 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v378  <|@  <|@
f <@~|@floating>@ <|@
tid v372 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:741) [bci: 1252]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i366 
y: i216 
=== Succesors ===
=== Usages ===
v378 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i366 y: i216  <|@  <|@
f <@*|@fixed>@ <|@
tid v378 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:741) [bci: 1252]
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v372 
=== Succesors ===
trueSuccessor: v377 
falseSuccessor: v376 
=== Usages ===
=== Predecessor ===
v370 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v372 #trueSuccessor: v377 #falseSuccessor: v376  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v183|DWORD y: -3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: < trueDestination: B106 -> B107 falseDestination: B106 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B106" 
    successors "B110" 
    xhandlers
    flags 
    probability 4567795006778821243
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v377 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:742) [bci: 1262]
stamp: void
=== Inputs ===
=== Succesors ===
next: v531 
=== Usages ===
=== Predecessor ===
v378 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v531  <|@  <|@
f <@*|@fixed>@ <|@
tid v531 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:742) [bci: 1262]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v384 
=== Predecessor ===
v377 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B107 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B106" 
    successors "B109" "B152" 
    xhandlers
    flags 
    probability 4575122898532446136
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v376 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:741) [bci: 1255]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1320 
=== Usages ===
=== Predecessor ===
v378 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1320  <|@  <|@
f <@~|@floating>@ <|@
tid v379 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:741) [bci: 1259]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i366 
y: i219 
=== Succesors ===
=== Usages ===
v1320 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i366 y: i219  <|@  <|@
f <@*|@fixed>@ <|@
tid v1320 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:741) [bci: 1259]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v379 
=== Succesors ===
trueSuccessor: v1317 
falseSuccessor: v1319 
=== Usages ===
=== Predecessor ===
v376 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v379 #trueSuccessor: v1317 #falseSuccessor: v1319  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v183|DWORD y: 8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B108 -> B109 falseDestination: B108 -> B152 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B110" 
    xhandlers
    flags 
    probability 4575122898532446136
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1317 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:741) [bci: 1259]
stamp: void
=== Inputs ===
=== Succesors ===
next: v383 
=== Usages ===
=== Predecessor ===
v1320 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v383  <|@  <|@
f <@*|@fixed>@ <|@
tid v383 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:744) [bci: 1268]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v384 
=== Predecessor ===
v1317 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B109 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B109" "B105" "B107" 
    successors "B111" 
    xhandlers
    flags 
    probability 4577144435309065000
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v384 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:744) [bci: 1268]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v383 v385 v531 
=== Succesors ===
next: v387 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v383 v385 v531 #next: v387  <|@  <|@
f <@~|@floating>@ <|@
tid v1595 <|@
result [v170|QWORD[.] + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a324 
index: - 
=== Succesors ===
=== Usages ===
a1566 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a324 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v1590 <|@
result [v170|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a324 
index: - 
=== Succesors ===
=== Usages ===
i1563 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a324 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v1589 <|@
result [v170|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a324 
index: - 
=== Succesors ===
=== Usages ===
i1562 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a324 index: -  <|@  <|@
tid v995 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:745) [bci: 1282]
returnStamp: i32
signature: [Ljdk.vm.ci.meta.JavaType;@d226345
stamp: void
targetMethod: HotSpotMethod<FDBigInteger.quoRemIteration(FDBigInteger)>
=== Inputs ===
arguments: a324 a320 
=== Succesors ===
=== Usages ===
i418 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a324 a320  <|@  <|@
f <@*|@fixed>@ <|@
tid v387 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:744) [bci: 1268]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v388 
=== Predecessor ===
v384 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v184|DWORD, int[0|0x0], int[0|0x0], v172|QWORD[.]] destination: B110 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B110" "B115" "B128" 
    successors "B112" "B134" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4595485752836987786
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i389 <|@
result v185|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v388 
values: i367 i437 i437 
=== Succesors ===
=== Usages ===
?393 ?1416 ?474 ?1420 ?423 v1602 ?432 i437 v1594 ?732 v1019 v1073 ?1419 ?458 ?1418 i484 ?1417 ?1414 ?1415 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v388 values: i367 i437 i437  <|@  <|@
f <@~|@floating>@ <|@
tid i390 <|@
result v186|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 1] ⇈0000000000000001
valueDescription: i32
=== Inputs ===
merge: v388 
values: i8 i8 i730 
=== Succesors ===
=== Usages ===
?1419 v394 ?474 i485 ?1420 ?1418 ?458 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v388 values: i8 i8 i730  <|@  <|@
f <@~|@floating>@ <|@
tid i391 <|@
result v187|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 1] ⇈0000000000000001
valueDescription: i32
=== Inputs ===
merge: v388 
values: i8 i434 i734 
=== Succesors ===
=== Usages ===
?1419 i486 v403 ?474 ?1420 ?1418 ?458 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v388 values: i8 i434 i734  <|@  <|@
f <@~|@floating>@ <|@
tid a392 <|@
result v188|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a# Lsun/misc/FDBigInteger;
valueDescription: a -
=== Inputs ===
merge: v388 
values: a329 a422 a422 
=== Succesors ===
=== Usages ===
v1614 ?1414 v999 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v388 values: a329 a422 a422  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v388 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: true
inversionCount: 0
loopFrequency: 16.873120865904998
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 2
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:744) [bci: 1268]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v387 
=== Succesors ===
next: v402 
=== Usages ===
i389 i390 i391 a392 v397 v408 v443 v723 v1389 v1364 v1374 v1339 v1344 v1349 v1354 v1379 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v387 #next: v402  <|@  <|@
f <@~|@floating>@ <|@
tid v403 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:744) [bci: 1275]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i391 
y: i8 
=== Succesors ===
=== Usages ===
v416 v448 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i391 y: i8  <|@  <|@
f <@~|@floating>@ <|@
tid v394 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:744) [bci: 1270]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i390 
y: i8 
=== Succesors ===
=== Usages ===
v402 v455 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i390 y: i8  <|@  <|@
f <@*|@fixed>@ <|@
tid v402 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:744) [bci: 1270]
stamp: void
trueSuccessorProbability: 0.9453314326443336
=== Inputs ===
condition: v394 
=== Succesors ===
trueSuccessor: v395 
falseSuccessor: v397 
=== Usages ===
=== Predecessor ===
v388 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v394 #trueSuccessor: v395 #falseSuccessor: v397  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v185|DWORD, v186|DWORD, v187|DWORD, v188|QWORD[.]] = LABEL numbPhis: 4 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v186|DWORD, y: v186|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9453314326443336 condition: = trueDestination: B111 -> B112 falseDestination: B111 -> B134 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B113" "B133" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4595140371449736969
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v395 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:744) [bci: 1273]
stamp: void
=== Inputs ===
=== Succesors ===
next: v416 
=== Usages ===
=== Predecessor ===
v402 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v416  <|@  <|@
f <@*|@fixed>@ <|@
tid v416 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:744) [bci: 1275]
stamp: void
trueSuccessorProbability: 0.9951368468672246
=== Inputs ===
condition: v403 
=== Succesors ===
trueSuccessor: v404 
falseSuccessor: v408 
=== Usages ===
=== Predecessor ===
v395 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v403 #trueSuccessor: v404 #falseSuccessor: v408  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v187|DWORD, y: v187|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9951368468672246 condition: = trueDestination: B112 -> B113 falseDestination: B112 -> B133 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B112" 
    successors "B114" "B117" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4595111326991487063
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v404 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:745) [bci: 1278]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1614 
=== Usages ===
=== Predecessor ===
v416 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1614  <|@  <|@
tid ?393 <|@
d <@d|@=== Debug Properties ===
bci: 1268
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: false
localsSize: 33
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 744
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - - - - - - - i366 - - - - - - - i389 i8 i8 - - - - - a320 - a324 a1432 a334 - - - 
=== Succesors ===
=== Usages ===
v1614 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - - - - - - i366 - - - - - - - i389 i8 i8 - - - - - a320 - a324 a1432 a334 - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1614 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?393 
object: a392 
=== Succesors ===
next: i418 
=== Usages ===
=== Predecessor ===
v404 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?393 object: a392 #next: i418  <|@  <|@
tid ?1414 <|@
d <@d|@=== Debug Properties ===
bci: 1282
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: true
localsSize: 33
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 745
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - - - - - - - i366 - - - - - - - i389 - - - - - - - a320 - a324 a392 a334 - - - 
=== Succesors ===
=== Usages ===
i418 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - - - - - - i366 - - - - - - - i389 - - - - - - - a320 - a324 a392 a334 - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i418 <|@
result v189|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 1282
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:745) [bci: 1282]
polymorphic: false
stamp: i32
targetMethod: Direct#FDBigInteger.quoRemIteration
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v995 
stateDuring: ?1414 
=== Succesors ===
next: a422 
=== Usages ===
?1417 ?423 ?1415 ?432 i438 ?1416 ?732 
=== Predecessor ===
v1614 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v995 stateDuring: ?1414 #next: a422  <|@  <|@
tid v999 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:747) [bci: 1312]
returnStamp: a# Lsun/misc/FDBigInteger;
signature: [Ljdk.vm.ci.meta.JavaType;@27ee496b
stamp: void
targetMethod: HotSpotMethod<FDBigInteger.multBy10()>
=== Inputs ===
arguments: a392 
=== Succesors ===
=== Usages ===
a422 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a392  <|@  <|@
tid ?1415 <|@
d <@d|@=== Debug Properties ===
bci: 1312
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: true
localsSize: 33
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 747
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - - - - - - - i366 - - - - - - - i389 - - - - i418 - - a320 - a324 - a334 - - - 
=== Succesors ===
=== Usages ===
a422 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - - - - - - i366 - - - - - - - i389 - - - - i418 - - a320 - a324 - a334 - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a422 <|@
result v190|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 1312
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:747) [bci: 1312]
polymorphic: false
stamp: a# Lsun/misc/FDBigInteger;
targetMethod: Direct#FDBigInteger.multBy10
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v999 
stateDuring: ?1415 
=== Succesors ===
next: i1560 
=== Usages ===
?423 a392 a392 v1011 ?432 ?1417 v1065 v1598 v1592 ?732 ?1416 v1591 
=== Predecessor ===
i418 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v999 stateDuring: ?1415 #next: i1560  <|@  <|@
tid ?423 <|@
d <@d|@=== Debug Properties ===
bci: 1315
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: false
localsSize: 33
locksSize: 0
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:747) [bci: 1312]
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 747
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: a1 - - - - - - - - i366 - - - - - - - i389 - - - - i418 - - a320 - a324 - a334 - - - a422 
=== Succesors ===
=== Usages ===
v1471 i1560 i1567 i1569 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - - - - - - i366 - - - - - - - i389 - - - - i418 - - a320 - a324 - a334 - - - a422  <|@  <|@
f <@~|@floating>@ <|@
tid v1592 <|@
result [v190|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a422 
index: - 
=== Succesors ===
=== Usages ===
i1560 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a422 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1560 <|@
result v191|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FDBigInteger.offset
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:949) [bci: 15]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
nullCheck: true
stamp: i32
=== Inputs ===
stateBefore: ?423 
guard: - 
address: v1592 
=== Succesors ===
next: i1561 
=== Usages ===
i633 
=== Predecessor ===
a422 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?423 guard: - address: v1592 #next: i1561  <|@  <|@
f <@~|@floating>@ <|@
tid v1591 <|@
result [v190|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a422 
index: - 
=== Succesors ===
=== Usages ===
i1561 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a422 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1561 <|@
result v192|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FDBigInteger.nWords
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:949) [bci: 11]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1591 
=== Succesors ===
next: i1562 
=== Usages ===
i633 v645 i651 
=== Predecessor ===
i1560 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1591 #next: i1562  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1562 <|@
result v193|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FDBigInteger.nWords
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:948) [bci: 1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1589 
=== Succesors ===
next: i1563 
=== Usages ===
i630 v643 i648 
=== Predecessor ===
i1561 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1589 #next: i1563  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1563 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FDBigInteger.offset
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:948) [bci: 5]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1590 
=== Succesors ===
next: v637 
=== Usages ===
i630 
=== Predecessor ===
i1562 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1590 #next: v637  <|@  <|@
f <@~|@floating>@ <|@
tid i633 <|@
result v194|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:949) [bci: 18]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: i32
=== Inputs ===
x: i1560 
y: i1561 
=== Succesors ===
=== Usages ===
v634 v639 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1560 y: i1561  <|@  <|@
f <@~|@floating>@ <|@
tid i630 <|@
result v195|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:948) [bci: 8]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: i32
=== Inputs ===
x: i1562 
y: i1563 
=== Succesors ===
=== Usages ===
v634 v639 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1562 y: i1563  <|@  <|@
f <@~|@floating>@ <|@
tid v634 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:950) [bci: 22]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i633 
y: i630 
=== Succesors ===
=== Usages ===
v637 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i633 y: i630  <|@  <|@
f <@~|@floating>@ <|@
tid i438 <|@
result v196|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:750) [bci: 1366]
stamp: i32
=== Inputs ===
x: i418 
y: i200 
=== Succesors ===
=== Usages ===
i439 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i418 y: i200  <|@  <|@
f <@~|@floating>@ <|@
tid i439 <|@
result v196|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 32
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:750) [bci: 1367]
resultBits: 16
stamp: i16
=== Inputs ===
value: i438 
=== Succesors ===
=== Usages ===
v1080 v1027 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i438  <|@  <|@
f <@~|@floating>@ <|@
tid i437 <|@
result v197|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:750) [bci: 1359]
stamp: i32
=== Inputs ===
x: i389 
y: i7 
=== Succesors ===
=== Usages ===
i389 i389 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i389 y: i7  <|@  <|@
f <@*|@fixed>@ <|@
tid v637 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:950) [bci: 22]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: void
trueSuccessorProbability: 0.2175262580341747
=== Inputs ===
condition: v634 
=== Succesors ===
trueSuccessor: v635 
falseSuccessor: v636 
=== Usages ===
=== Predecessor ===
i1563 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v634 #trueSuccessor: v635 #falseSuccessor: v636  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:744) [bci: 1268]
locals: v0|QWORD[.] - - - - - - - - v183|DWORD - - - - - - - v185|DWORD int[0|0x0] int[0|0x0] - - - - - v168|QWORD[.] - v170|QWORD[.] Object[null] v175|QWORD[.] - - - 
>@ <|@ instruction NULLCHECK [v188|QWORD[.]] state [bci:1268] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v170|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v168|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:745) [bci: 1282]
locals: v0|QWORD[.] - - - - - - - - v183|DWORD - - - - - - - v185|DWORD - - - - - - - v168|QWORD[.] - v170|QWORD[.] v188|QWORD[.] v175|QWORD[.] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<FDBigInteger.quoRemIteration(FDBigInteger)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1282] <|@ <|@
      nr   -1  <|@ instruction v189|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v188|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:747) [bci: 1312]
locals: v0|QWORD[.] - - - - - - - - v183|DWORD - - - - - - - v185|DWORD - - - - v189|DWORD - - v168|QWORD[.] - v170|QWORD[.] - v175|QWORD[.] - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<FDBigInteger.multBy10()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1312] <|@ <|@
      nr   -1  <|@ instruction v190|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:747) [bci: 1315]
stack: v190|QWORD[.] 
locals: v0|QWORD[.] - - - - - - - - v183|DWORD - - - - - - - v185|DWORD - - - - v189|DWORD - - v168|QWORD[.] - v170|QWORD[.] - v175|QWORD[.] - - - 
>@ <|@ instruction v191|DWORD = MOV [v190|QWORD[.] + 12] size: DWORD state [bci:1315] <|@ <|@
      nr   -1  <|@ instruction v192|DWORD = MOV [v190|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v193|DWORD = MOV [v170|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v194|DWORD = ADD (x: v191|DWORD, y: v192|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v195|DWORD = ADD (x: v193|DWORD, ~y: [v170|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v196|DWORD = LEA [v189|DWORD + 48] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v197|DWORD = INC v185|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v195|DWORD, y: v194|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.2175262580341747 condition: > trueDestination: B113 -> B114 falseDestination: B113 -> B117 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B113" 
    successors "B115" "B116" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4585332122103824215
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v635 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:951) [bci: 25]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: void
=== Inputs ===
=== Succesors ===
next: i431 
=== Usages ===
=== Predecessor ===
v637 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i431  <|@  <|@
tid v1011 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:749) [bci: 1340]
returnStamp: i32
signature: [Ljdk.vm.ci.meta.JavaType;@66235e25
stamp: void
targetMethod: HotSpotMethod<FDBigInteger.addAndCmp(FDBigInteger, FDBigInteger)>
=== Inputs ===
arguments: a334 a324 a422 
=== Succesors ===
=== Usages ===
i431 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a334 a324 a422  <|@  <|@
tid ?1416 <|@
d <@d|@=== Debug Properties ===
bci: 1340
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: true
localsSize: 33
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 749
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - - - - - - - i366 - - - - - - - i389 i8 - - - i418 - - a320 - a324 a422 a334 - - - 
=== Succesors ===
=== Usages ===
i431 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - - - - - - i366 - - - - - - - i389 i8 - - - i418 - - a320 - a324 a422 a334 - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i431 <|@
result v198|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 1340
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:749) [bci: 1340]
polymorphic: false
stamp: i32
targetMethod: Direct#FDBigInteger.addAndCmp
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1011 
stateDuring: ?1416 
=== Succesors ===
next: a1564 
=== Usages ===
?432 v433 
=== Predecessor ===
v635 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1011 stateDuring: ?1416 #next: a1564  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1564 <|@
result v199|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FloatingDecimal$BinaryToASCIIBuffer.digits
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:750) [bci: 1354]
nullCheck: false
stamp: n# [C
=== Inputs ===
stateBefore: - 
guard: - 
address: v1585 
=== Succesors ===
next: i1565 
=== Usages ===
a1013 v1593 
=== Predecessor ===
i431 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1585 #next: i1565  <|@  <|@
tid ?432 <|@
d <@d|@=== Debug Properties ===
bci: 1343
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: false
localsSize: 33
locksSize: 0
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:749) [bci: 1340]
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 749
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: a1 - - - - - - - - i366 - - - - - - - i389 i8 - - - i418 - - a320 - a324 a422 a334 - - - i431 
=== Succesors ===
=== Usages ===
v1493 i1565 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - - - - - - i366 - - - - - - - i389 i8 - - - i418 - - a320 - a324 a422 a334 - - - i431  <|@  <|@
f <@~|@floating>@ <|@
tid v1593 <|@
result [v199|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1564 
=== Succesors ===
=== Usages ===
i1565 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1564  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1565 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:750) [bci: 1368]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?432 
guard: - 
address: v1593 
=== Succesors ===
next: v1340 
=== Usages ===
v1019 
=== Predecessor ===
a1564 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?432 guard: - address: v1593 #next: v1340  <|@  <|@
f <@~|@floating>@ <|@
tid v1019 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:750) [bci: 1368]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i389 
y: i1565 
=== Succesors ===
=== Usages ===
v1340 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i389 y: i1565  <|@  <|@
f <@*|@fixed>@ <|@
tid v1340 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:750) [bci: 1368]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1019 
=== Succesors ===
trueSuccessor: v1336 
falseSuccessor: v1339 
=== Usages ===
=== Predecessor ===
i1565 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1019 #trueSuccessor: v1336 #falseSuccessor: v1339  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v175|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v170|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE v190|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:749) [bci: 1340]
locals: v0|QWORD[.] - - - - - - - - v183|DWORD - - - - - - - v185|DWORD int[0|0x0] - - - v189|DWORD - - v168|QWORD[.] - v170|QWORD[.] v190|QWORD[.] v175|QWORD[.] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] [] callTarget: HotSpotMethod<FDBigInteger.addAndCmp(FDBigInteger, FDBigInteger)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1340] <|@ <|@
      nr   -1  <|@ instruction v198|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v199|DWORD[.] = MOV [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:749) [bci: 1343]
stack: v198|DWORD 
locals: v0|QWORD[.] - - - - - - - - v183|DWORD - - - - - - - v185|DWORD int[0|0x0] - - - v189|DWORD - - v168|QWORD[.] - v170|QWORD[.] v190|QWORD[.] v175|QWORD[.] - - - 
>@ <|@ instruction CMP (x: v185|DWORD, y: [v199|DWORD[.] * 8 + 12]) size: DWORD state [bci:1343] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B114 -> B115 falseDestination: B114 -> B116 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors "B111" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4585332122103824215
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1336 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:750) [bci: 1368]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1027 
=== Usages ===
v1027 
=== Predecessor ===
v1340 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1027  <|@  <|@
f <@~|@floating>@ <|@
tid a1013 <|@
result v200|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:750) [bci: 1354]
op: Uncompress
stamp: a# [C
=== Inputs ===
value: a1564 
=== Succesors ===
=== Usages ===
v1594 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1564  <|@  <|@
f <@~|@floating>@ <|@
tid v1594 <|@
result [v200|QWORD[.] + v185|DWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a1013 
index: i389 
=== Succesors ===
=== Usages ===
v1027 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1013 index: i389  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1027 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:750) [bci: 1368]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1336 
address: v1594 
value: i439 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v443 
=== Usages ===
=== Predecessor ===
v1336 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1336 address: v1594 value: i439 stateAfter: - lastLocationAccess: - #next: v443  <|@  <|@
f <@~|@floating>@ <|@
tid v433 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:749) [bci: 1343]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i431 
y: i7 
=== Succesors ===
=== Usages ===
i434 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i431 y: i7  <|@  <|@
f <@~|@floating>@ <|@
tid i434 <|@
result v201|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:749) [bci: 1343]
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
condition: v433 
trueValue: i7 
falseValue: i8 
=== Succesors ===
=== Usages ===
i391 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v433 trueValue: i7 falseValue: i8  <|@  <|@
f <@*|@fixed>@ <|@
tid v443 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:744) [bci: 1268]
stamp: void
=== Inputs ===
loopBegin: v388 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1027 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v388  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v200|QWORD[.] = UNCOMPRESSPOINTER (input: v199|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@e9a9e99 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v200|QWORD[.] + v185|DWORD * 2 + 16], y: v196|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction CMP v198|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v201|DWORD = SETCC condition: < <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v197|DWORD, int[0|0x0], v201|DWORD, v190|QWORD[.]] destination: B115 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1339 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:750) [bci: 1368]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v388 
=== Succesors ===
next: v1493 
=== Usages ===
=== Predecessor ===
v1340 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v388 #next: v1493  <|@  <|@
f <@~|@floating>@ <|@
tid i1495 <|@
result int[-261147|0xfffffffffffc03e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -261147
stableDimension: 0
stamp: i32 [-261147] ⇊00000000fffc03e5 ⇈00000000fffc03e5
stampKind: i32
value: int[-261147|0xfffffffffffc03e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1493 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1493 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?432 
actionAndReason: i1495 
speculation: a1432 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1339 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?432 actionAndReason: i1495 speculation: a1432  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -261147 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:749) [bci: 1343]
stack: v198|DWORD 
locals: v0|QWORD[.] - - - - - - - - v183|DWORD - - - - - - - v185|DWORD int[0|0x0] - - - v189|DWORD - - v168|QWORD[.] - v170|QWORD[.] v190|QWORD[.] v175|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:1343] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B113" 
    successors "B118" "B119" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4593818501724479617
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v636 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:952) [bci: 27]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1345 
=== Usages ===
=== Predecessor ===
v637 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1345  <|@  <|@
f <@~|@floating>@ <|@
tid v639 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:952) [bci: 29]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i630 
y: i633 
=== Succesors ===
=== Usages ===
v1345 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i630 y: i633  <|@  <|@
f <@*|@fixed>@ <|@
tid v1345 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:952) [bci: 29]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v639 
=== Succesors ===
trueSuccessor: v1344 
falseSuccessor: v1341 
=== Usages ===
=== Predecessor ===
v636 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v639 #trueSuccessor: v1344 #falseSuccessor: v1341  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v194|DWORD, y: v195|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B117 -> B118 falseDestination: B117 -> B119 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B117" 
    successors "B132" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1344 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:952) [bci: 29]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v388 
=== Succesors ===
next: v1472 
=== Usages ===
=== Predecessor ===
v1345 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v388 #next: v1472  <|@  <|@
f <@~|@floating>@ <|@
tid i1473 <|@
result int[-263187|0xfffffffffffbfbed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -263187
stableDimension: 0
stamp: i32 [-263187] ⇊00000000fffbfbed ⇈00000000fffbfbed
stampKind: i32
value: int[-263187|0xfffffffffffbfbed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1469 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1472 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1466 
=== Predecessor ===
v1344 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-263187|0xfffffffffffbfbed]] destination: B118 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B117" 
    successors "B120" "B121" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4593818501724479617
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1341 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:952) [bci: 29]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1350 
=== Usages ===
=== Predecessor ===
v1345 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1350  <|@  <|@
f <@~|@floating>@ <|@
tid v643 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:957) [bci: 48]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1562 
y: i7 
=== Succesors ===
=== Usages ===
v1350 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1562 y: i7  <|@  <|@
f <@*|@fixed>@ <|@
tid v1350 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:957) [bci: 48]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v643 
=== Succesors ===
trueSuccessor: v1349 
falseSuccessor: v1346 
=== Usages ===
=== Predecessor ===
v1341 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v643 #trueSuccessor: v1349 #falseSuccessor: v1346  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v193|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B119 -> B120 falseDestination: B119 -> B121 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B119" 
    successors "B132" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1349 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:957) [bci: 48]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v388 
=== Succesors ===
next: v1474 
=== Usages ===
=== Predecessor ===
v1350 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v388 #next: v1474  <|@  <|@
f <@~|@floating>@ <|@
tid i1475 <|@
result int[-263443|0xfffffffffffbfaed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -263443
stableDimension: 0
stamp: i32 [-263443] ⇊00000000fffbfaed ⇈00000000fffbfaed
stampKind: i32
value: int[-263443|0xfffffffffffbfaed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1469 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1474 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1466 
=== Predecessor ===
v1349 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-263443|0xfffffffffffbfaed]] destination: B120 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B119" 
    successors "B122" "B123" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4593818501724479617
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1346 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:957) [bci: 48]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1355 
=== Usages ===
=== Predecessor ===
v1350 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1355  <|@  <|@
f <@~|@floating>@ <|@
tid v645 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:957) [bci: 53]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1561 
y: i7 
=== Succesors ===
=== Usages ===
v1355 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1561 y: i7  <|@  <|@
f <@*|@fixed>@ <|@
tid v1355 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:957) [bci: 53]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v645 
=== Succesors ===
trueSuccessor: v1354 
falseSuccessor: v1351 
=== Usages ===
=== Predecessor ===
v1346 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v645 #trueSuccessor: v1354 #falseSuccessor: v1351  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v192|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B121 -> B122 falseDestination: B121 -> B123 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B121" 
    successors "B132" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1354 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:957) [bci: 53]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v388 
=== Succesors ===
next: v1476 
=== Usages ===
=== Predecessor ===
v1355 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v388 #next: v1476  <|@  <|@
f <@~|@floating>@ <|@
tid i1477 <|@
result int[-263699|0xfffffffffffbf9ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -263699
stableDimension: 0
stamp: i32 [-263699] ⇊00000000fffbf9ed ⇈00000000fffbf9ed
stampKind: i32
value: int[-263699|0xfffffffffffbf9ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1469 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1476 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1466 
=== Predecessor ===
v1354 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-263699|0xfffffffffffbf9ed]] destination: B122 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B123"
    from_bci -1
    to_bci -1
    predecessors "B121" 
    successors "B124" "B131" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4593818501724479617
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1351 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:957) [bci: 53]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1566 
=== Usages ===
=== Predecessor ===
v1355 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1566  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1566 <|@
result v202|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FDBigInteger.data
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:958) [bci: 57]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
nullCheck: false
stamp: n# [I
=== Inputs ===
stateBefore: - 
guard: - 
address: v1595 
=== Succesors ===
next: i1567 
=== Usages ===
a1034 v1596 
=== Predecessor ===
v1351 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1595 #next: i1567  <|@  <|@
f <@~|@floating>@ <|@
tid v1596 <|@
result [v202|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1566 
=== Succesors ===
=== Usages ===
i1567 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1566  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1567 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:958) [bci: 65]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?423 
guard: - 
address: v1596 
=== Succesors ===
next: v1365 
=== Usages ===
v1040 
=== Predecessor ===
a1566 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?423 guard: - address: v1596 #next: v1365  <|@  <|@
f <@~|@floating>@ <|@
tid i648 <|@
result v203|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:958) [bci: 60]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: i32
=== Inputs ===
x: i1562 
y: i17 
=== Succesors ===
=== Usages ===
v1597 v1040 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1562 y: i17  <|@  <|@
f <@~|@floating>@ <|@
tid v1040 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:958) [bci: 65]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i648 
y: i1567 
=== Succesors ===
=== Usages ===
v1365 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i648 y: i1567  <|@  <|@
f <@*|@fixed>@ <|@
tid v1365 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:958) [bci: 65]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1040 
=== Succesors ===
trueSuccessor: v1361 
falseSuccessor: v1364 
=== Usages ===
=== Predecessor ===
i1567 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1040 #trueSuccessor: v1361 #falseSuccessor: v1364  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v202|DWORD[.] = MOV [v170|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v203|DWORD = DEC v193|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:747) [bci: 1315]
stack: v190|QWORD[.] 
locals: v0|QWORD[.] - - - - - - - - v183|DWORD - - - - - - - v185|DWORD - - - - v189|DWORD - - v168|QWORD[.] - v170|QWORD[.] - v175|QWORD[.] - - - 
>@ <|@ instruction CMP (x: v203|DWORD, y: [v202|DWORD[.] * 8 + 12]) size: DWORD state [bci:1315] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B123 -> B124 falseDestination: B123 -> B131 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B124"
    from_bci -1
    to_bci -1
    predecessors "B123" 
    successors "B125" "B130" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4593818501724479617
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1361 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:958) [bci: 65]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1568 
=== Usages ===
i1570 
=== Predecessor ===
v1365 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1568  <|@  <|@
f <@~|@floating>@ <|@
tid v1598 <|@
result [v190|QWORD[.] + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a422 
index: - 
=== Succesors ===
=== Usages ===
a1568 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a422 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1568 <|@
result v204|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FDBigInteger.data
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:959) [bci: 69]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
nullCheck: false
stamp: n# [I
=== Inputs ===
stateBefore: - 
guard: - 
address: v1598 
=== Succesors ===
next: i1569 
=== Usages ===
a1050 v1599 
=== Predecessor ===
v1361 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1598 #next: i1569  <|@  <|@
f <@~|@floating>@ <|@
tid v1599 <|@
result [v204|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1568 
=== Succesors ===
=== Usages ===
i1569 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1568  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1569 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:959) [bci: 77]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?423 
guard: - 
address: v1599 
=== Succesors ===
next: v1375 
=== Usages ===
v1056 
=== Predecessor ===
a1568 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?423 guard: - address: v1599 #next: v1375  <|@  <|@
f <@~|@floating>@ <|@
tid i651 <|@
result v205|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:959) [bci: 72]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: i32
=== Inputs ===
x: i1561 
y: i17 
=== Succesors ===
=== Usages ===
v1600 v1056 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1561 y: i17  <|@  <|@
f <@~|@floating>@ <|@
tid v1056 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:959) [bci: 77]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i651 
y: i1569 
=== Succesors ===
=== Usages ===
v1375 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i651 y: i1569  <|@  <|@
f <@*|@fixed>@ <|@
tid v1375 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:959) [bci: 77]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1056 
=== Succesors ===
trueSuccessor: v1371 
falseSuccessor: v1374 
=== Usages ===
=== Predecessor ===
i1569 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1056 #trueSuccessor: v1371 #falseSuccessor: v1374  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v204|DWORD[.] = MOV [v190|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v205|DWORD = DEC v192|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:747) [bci: 1315]
stack: v190|QWORD[.] 
locals: v0|QWORD[.] - - - - - - - - v183|DWORD - - - - - - - v185|DWORD - - - - v189|DWORD - - v168|QWORD[.] - v170|QWORD[.] - v175|QWORD[.] - - - 
>@ <|@ instruction CMP (x: v205|DWORD, y: [v204|DWORD[.] * 8 + 12]) size: DWORD state [bci:1315] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B124 -> B125 falseDestination: B124 -> B130 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B125"
    from_bci -1
    to_bci -1
    predecessors "B124" 
    successors "B126" "B127" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4593818501724479617
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1371 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:959) [bci: 77]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1570 
=== Usages ===
i1571 
=== Predecessor ===
v1375 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1570  <|@  <|@
f <@~|@floating>@ <|@
tid a1034 <|@
result v206|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:958) [bci: 57]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
op: Uncompress
stamp: a# [I
=== Inputs ===
value: a1566 
=== Succesors ===
=== Usages ===
v1597 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1566  <|@  <|@
f <@~|@floating>@ <|@
tid v1597 <|@
result [v206|QWORD[.] + v203|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a1034 
index: i648 
=== Succesors ===
=== Usages ===
i1570 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1034 index: i648  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1570 <|@
result v207|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:958) [bci: 65]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v1361 
address: v1597 
=== Succesors ===
next: i1571 
=== Usages ===
v653 v656 
=== Predecessor ===
v1371 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1361 address: v1597 #next: i1571  <|@  <|@
f <@~|@floating>@ <|@
tid a1050 <|@
result v208|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:959) [bci: 69]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
op: Uncompress
stamp: a# [I
=== Inputs ===
value: a1568 
=== Succesors ===
=== Usages ===
v1600 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1568  <|@  <|@
f <@~|@floating>@ <|@
tid v1600 <|@
result [v208|QWORD[.] + v205|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a1050 
index: i651 
=== Succesors ===
=== Usages ===
i1571 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1050 index: i651  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1571 <|@
result v209|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:959) [bci: 77]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v1371 
address: v1600 
=== Succesors ===
next: v1380 
=== Usages ===
v653 v656 
=== Predecessor ===
i1570 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1371 address: v1600 #next: v1380  <|@  <|@
f <@~|@floating>@ <|@
tid v653 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:960) [bci: 84]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1570 
y: i1571 
=== Succesors ===
=== Usages ===
v1380 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i1570 y: i1571  <|@  <|@
f <@*|@fixed>@ <|@
tid v1380 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:960) [bci: 84]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v653 
=== Succesors ===
trueSuccessor: v1379 
falseSuccessor: v1376 
=== Usages ===
=== Predecessor ===
i1571 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v653 #trueSuccessor: v1379 #falseSuccessor: v1376  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v206|QWORD[.] = UNCOMPRESSPOINTER (input: v202|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@e9a9e99 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v207|DWORD = MOV [v206|QWORD[.] + v203|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v208|QWORD[.] = UNCOMPRESSPOINTER (input: v204|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@e9a9e99 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v209|DWORD = MOV [v208|QWORD[.] + v205|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v209|DWORD, y: v207|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B125 -> B126 falseDestination: B125 -> B127 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B126"
    from_bci -1
    to_bci -1
    predecessors "B125" 
    successors "B132" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1379 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:960) [bci: 84]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v388 
=== Succesors ===
next: v1486 
=== Usages ===
=== Predecessor ===
v1380 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v388 #next: v1486  <|@  <|@
f <@~|@floating>@ <|@
tid i1487 <|@
result int[-272403|0xfffffffffffbd7ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -272403
stableDimension: 0
stamp: i32 [-272403] ⇊00000000fffbd7ed ⇈00000000fffbd7ed
stampKind: i32
value: int[-272403|0xfffffffffffbd7ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1469 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1486 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1466 
=== Predecessor ===
v1379 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-272403|0xfffffffffffbd7ed]] destination: B126 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B127"
    from_bci -1
    to_bci -1
    predecessors "B125" 
    successors "B128" "B129" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4593818501724479617
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1376 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:960) [bci: 84]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: void
=== Inputs ===
=== Succesors ===
next: i731 
=== Usages ===
=== Predecessor ===
v1380 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i731  <|@  <|@
tid v1065 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:749) [bci: 1340]
returnStamp: i32
signature: [Ljdk.vm.ci.meta.JavaType;@19c1ad90
stamp: void
targetMethod: HotSpotMethod<FDBigInteger.addAndCmp(FDBigInteger, FDBigInteger)>
=== Inputs ===
arguments: a334 a324 a422 
=== Succesors ===
=== Usages ===
i731 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a334 a324 a422  <|@  <|@
f <@~|@floating>@ <|@
tid v656 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:961) [bci: 102]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1570 
y: i1571 
=== Succesors ===
=== Usages ===
i730 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i1570 y: i1571  <|@  <|@
f <@~|@floating>@ <|@
tid i730 <|@
result v210|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1324]
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
condition: v656 
trueValue: i7 
falseValue: i8 
=== Succesors ===
=== Usages ===
?732 ?1417 i390 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v656 trueValue: i7 falseValue: i8  <|@  <|@
tid ?1417 <|@
d <@d|@=== Debug Properties ===
bci: 1340
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: true
localsSize: 33
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 749
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - - - - - - - i366 - - - - - - - i389 i730 - - - i418 - - a320 - a324 a422 a334 - - - 
=== Succesors ===
=== Usages ===
i731 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - - - - - - i366 - - - - - - - i389 i730 - - - i418 - - a320 - a324 a422 a334 - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i731 <|@
result v211|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 1340
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:749) [bci: 1340]
polymorphic: false
stamp: i32
targetMethod: Direct#FDBigInteger.addAndCmp
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1065 
stateDuring: ?1417 
=== Succesors ===
next: a1572 
=== Usages ===
?732 v733 
=== Predecessor ===
v1376 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1065 stateDuring: ?1417 #next: a1572  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1572 <|@
result v212|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FloatingDecimal$BinaryToASCIIBuffer.digits
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:750) [bci: 1354]
nullCheck: false
stamp: n# [C
=== Inputs ===
stateBefore: - 
guard: - 
address: v1585 
=== Succesors ===
next: i1573 
=== Usages ===
a1067 v1601 
=== Predecessor ===
i731 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1585 #next: i1573  <|@  <|@
tid ?732 <|@
d <@d|@=== Debug Properties ===
bci: 1343
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: false
localsSize: 33
locksSize: 0
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:749) [bci: 1340]
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 749
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: a1 - - - - - - - - i366 - - - - - - - i389 i730 - - - i418 - - a320 - a324 a422 a334 - - - i731 
=== Succesors ===
=== Usages ===
v1509 i1573 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - - - - - - i366 - - - - - - - i389 i730 - - - i418 - - a320 - a324 a422 a334 - - - i731  <|@  <|@
f <@~|@floating>@ <|@
tid v1601 <|@
result [v212|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a1572 
=== Succesors ===
=== Usages ===
i1573 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1572  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1573 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:750) [bci: 1368]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?732 
guard: - 
address: v1601 
=== Succesors ===
next: v1390 
=== Usages ===
v1073 
=== Predecessor ===
a1572 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?732 guard: - address: v1601 #next: v1390  <|@  <|@
f <@~|@floating>@ <|@
tid v1073 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:750) [bci: 1368]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i389 
y: i1573 
=== Succesors ===
=== Usages ===
v1390 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i389 y: i1573  <|@  <|@
f <@*|@fixed>@ <|@
tid v1390 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:750) [bci: 1368]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1073 
=== Succesors ===
trueSuccessor: v1386 
falseSuccessor: v1389 
=== Usages ===
=== Predecessor ===
i1573 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1073 #trueSuccessor: v1386 #falseSuccessor: v1389  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v209|DWORD, y: v207|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v210|DWORD = SETCC condition: |>| <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v175|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v170|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE v190|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:749) [bci: 1340]
locals: v0|QWORD[.] - - - - - - - - v183|DWORD - - - - - - - v185|DWORD v210|DWORD - - - v189|DWORD - - v168|QWORD[.] - v170|QWORD[.] v190|QWORD[.] v175|QWORD[.] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] [] callTarget: HotSpotMethod<FDBigInteger.addAndCmp(FDBigInteger, FDBigInteger)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1340] <|@ <|@
      nr   -1  <|@ instruction v211|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v212|DWORD[.] = MOV [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:749) [bci: 1343]
stack: v211|DWORD 
locals: v0|QWORD[.] - - - - - - - - v183|DWORD - - - - - - - v185|DWORD v210|DWORD - - - v189|DWORD - - v168|QWORD[.] - v170|QWORD[.] v190|QWORD[.] v175|QWORD[.] - - - 
>@ <|@ instruction CMP (x: v185|DWORD, y: [v212|DWORD[.] * 8 + 12]) size: DWORD state [bci:1343] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B127 -> B128 falseDestination: B127 -> B129 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B128"
    from_bci -1
    to_bci -1
    predecessors "B127" 
    successors "B111" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4593818501724479617
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1386 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:750) [bci: 1368]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1080 
=== Usages ===
v1080 
=== Predecessor ===
v1390 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1080  <|@  <|@
f <@~|@floating>@ <|@
tid a1067 <|@
result v213|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:750) [bci: 1354]
op: Uncompress
stamp: a# [C
=== Inputs ===
value: a1572 
=== Succesors ===
=== Usages ===
v1602 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1572  <|@  <|@
f <@~|@floating>@ <|@
tid v1602 <|@
result [v213|QWORD[.] + v185|DWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a1067 
index: i389 
=== Succesors ===
=== Usages ===
v1080 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1067 index: i389  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1080 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:750) [bci: 1368]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1386 
address: v1602 
value: i439 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v723 
=== Usages ===
=== Predecessor ===
v1386 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1386 address: v1602 value: i439 stateAfter: - lastLocationAccess: - #next: v723  <|@  <|@
f <@~|@floating>@ <|@
tid v733 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:749) [bci: 1343]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i731 
y: i7 
=== Succesors ===
=== Usages ===
i734 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i731 y: i7  <|@  <|@
f <@~|@floating>@ <|@
tid i734 <|@
result v214|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:749) [bci: 1343]
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
condition: v733 
trueValue: i7 
falseValue: i8 
=== Succesors ===
=== Usages ===
i391 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v733 trueValue: i7 falseValue: i8  <|@  <|@
f <@*|@fixed>@ <|@
tid v723 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 1
stamp: void
=== Inputs ===
loopBegin: v388 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1080 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v388  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v213|QWORD[.] = UNCOMPRESSPOINTER (input: v212|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@e9a9e99 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v213|QWORD[.] + v185|DWORD * 2 + 16], y: v196|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction CMP v211|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v214|DWORD = SETCC condition: < <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v197|DWORD, v210|DWORD, v214|DWORD, v190|QWORD[.]] destination: B128 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B129"
    from_bci -1
    to_bci -1
    predecessors "B127" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1389 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:750) [bci: 1368]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v388 
=== Succesors ===
next: v1509 
=== Usages ===
=== Predecessor ===
v1390 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v388 #next: v1509  <|@  <|@
f <@~|@floating>@ <|@
tid i1511 <|@
result int[-274971|0xfffffffffffbcde5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -274971
stableDimension: 0
stamp: i32 [-274971] ⇊00000000fffbcde5 ⇈00000000fffbcde5
stampKind: i32
value: int[-274971|0xfffffffffffbcde5]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1509 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1509 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?732 
actionAndReason: i1511 
speculation: a1432 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1389 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?732 actionAndReason: i1511 speculation: a1432  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -274971 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:749) [bci: 1343]
stack: v211|DWORD 
locals: v0|QWORD[.] - - - - - - - - v183|DWORD - - - - - - - v185|DWORD v210|DWORD - - - v189|DWORD - - v168|QWORD[.] - v170|QWORD[.] v190|QWORD[.] v175|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:1343] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B130"
    from_bci -1
    to_bci -1
    predecessors "B124" 
    successors "B132" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1374 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:959) [bci: 77]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v388 
=== Succesors ===
next: v1484 
=== Usages ===
=== Predecessor ===
v1375 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v388 #next: v1484  <|@  <|@
f <@~|@floating>@ <|@
tid i1485 <|@
result int[-270619|0xfffffffffffbdee5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -270619
stableDimension: 0
stamp: i32 [-270619] ⇊00000000fffbdee5 ⇈00000000fffbdee5
stampKind: i32
value: int[-270619|0xfffffffffffbdee5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1469 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1484 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1466 
=== Predecessor ===
v1374 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-270619|0xfffffffffffbdee5]] destination: B130 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B131"
    from_bci -1
    to_bci -1
    predecessors "B123" 
    successors "B132" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1364 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FDBigInteger.cmp(FDBigInteger.java:958) [bci: 65]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:748) [bci: 1321]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v388 
=== Succesors ===
next: v1480 
=== Usages ===
=== Predecessor ===
v1365 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v388 #next: v1480  <|@  <|@
f <@~|@floating>@ <|@
tid i1481 <|@
result int[-266523|0xfffffffffffbeee5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -266523
stableDimension: 0
stamp: i32 [-266523] ⇊00000000fffbeee5 ⇈00000000fffbeee5
stampKind: i32
value: int[-266523|0xfffffffffffbeee5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1469 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1480 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1466 
=== Predecessor ===
v1364 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-266523|0xfffffffffffbeee5]] destination: B131 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B132"
    from_bci -1
    to_bci -1
    predecessors "B118" "B120" "B122" "B131" "B130" "B126" 
    successors 
    xhandlers
    flags 
    probability 2366641604183195648
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1469 <|@
result v215|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-272403 - -257291] ⇊00000000fff800e5 ⇈00000000fffffffd
valueDescription: i32
=== Inputs ===
merge: v1466 
values: i1473 i1475 i1477 i1481 i1485 i1487 
=== Succesors ===
=== Usages ===
v1471 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1466 values: i1473 i1475 i1477 i1481 i1485 i1487  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1466 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1472 v1474 v1476 v1480 v1484 v1486 
=== Succesors ===
next: v1471 
=== Usages ===
i1469 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1472 v1474 v1476 v1480 v1484 v1486 #next: v1471  <|@  <|@
f <@*|@fixed>@ <|@
tid v1471 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?423 
actionAndReason: i1469 
speculation: a1432 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1466 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?423 actionAndReason: i1469 speculation: a1432  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v215|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v215|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:747) [bci: 1315]
stack: v190|QWORD[.] 
locals: v0|QWORD[.] - - - - - - - - v183|DWORD - - - - - - - v185|DWORD - - - - v189|DWORD - - v168|QWORD[.] - v170|QWORD[.] - v175|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:1315] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B133"
    from_bci -1
    to_bci -1
    predecessors "B112" 
    successors "B135" 
    xhandlers
    flags 
    probability 4560574604583547353
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v408 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:752) [bci: 1372]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v388 
=== Succesors ===
next: v407 
=== Usages ===
=== Predecessor ===
v416 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v388 #next: v407  <|@  <|@
f <@*|@fixed>@ <|@
tid v407 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:752) [bci: 1372]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v406 
=== Predecessor ===
v408 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B133 -> B135 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B134"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B135" 
    xhandlers
    flags 
    probability 4576679723977066507
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v397 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:752) [bci: 1372]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v388 
=== Succesors ===
next: v405 
=== Usages ===
=== Predecessor ===
v402 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v388 #next: v405  <|@  <|@
f <@*|@fixed>@ <|@
tid v405 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:752) [bci: 1372]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v406 
=== Predecessor ===
v397 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B134 -> B135 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B135"
    from_bci -1
    to_bci -1
    predecessors "B134" "B133" 
    successors "B136" "B137" 
    xhandlers
    flags 
    probability 4577144435309065001
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v406 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:752) [bci: 1372]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v405 v407 
=== Succesors ===
next: v448 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v405 v407 #next: v448  <|@  <|@
f <@*|@fixed>@ <|@
tid v448 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:752) [bci: 1374]
stamp: void
trueSuccessorProbability: 0.04269392663860493
=== Inputs ===
condition: v403 
=== Succesors ===
trueSuccessor: v446 
falseSuccessor: v447 
=== Usages ===
=== Predecessor ===
v406 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v403 #trueSuccessor: v446 #falseSuccessor: v447  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v187|DWORD, y: v187|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.04269392663860493 condition: = trueDestination: B135 -> B136 falseDestination: B135 -> B137 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B136"
    from_bci -1
    to_bci -1
    predecessors "B135" 
    successors "B140" 
    xhandlers
    flags 
    probability 4556820306948856563
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v446 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:756) [bci: 1403]
stamp: void
=== Inputs ===
=== Succesors ===
next: v467 
=== Usages ===
=== Predecessor ===
v448 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v467  <|@  <|@
f <@*|@fixed>@ <|@
tid v467 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:758) [bci: 1406]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v466 
=== Predecessor ===
v446 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0], v170|QWORD[.]] destination: B136 -> B140 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B137"
    from_bci -1
    to_bci -1
    predecessors "B135" 
    successors "B138" "B139" 
    xhandlers
    flags 
    probability 4576888663955794513
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v447 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:752) [bci: 1377]
stamp: void
=== Inputs ===
=== Succesors ===
next: v455 
=== Usages ===
=== Predecessor ===
v448 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v455  <|@  <|@
f <@*|@fixed>@ <|@
tid v455 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:752) [bci: 1379]
stamp: void
trueSuccessorProbability: 0.08103015075376885
=== Inputs ===
condition: v394 
=== Succesors ===
trueSuccessor: v454 
falseSuccessor: v453 
=== Usages ===
=== Predecessor ===
v447 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v394 #trueSuccessor: v454 #falseSuccessor: v453  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v186|DWORD, y: v186|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.08103015075376885 condition: = trueDestination: B137 -> B138 falseDestination: B137 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B138"
    from_bci -1
    to_bci -1
    predecessors "B137" 
    successors "B140" 
    xhandlers
    flags 
    probability 4560574604583547320
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v454 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:756) [bci: 1403]
stamp: void
=== Inputs ===
=== Succesors ===
next: v532 
=== Usages ===
=== Predecessor ===
v455 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v532  <|@  <|@
f <@*|@fixed>@ <|@
tid v532 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:756) [bci: 1403]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v466 
=== Predecessor ===
v454 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0], v170|QWORD[.]] destination: B138 -> B140 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B139"
    from_bci -1
    to_bci -1
    predecessors "B137" 
    successors "B140" 
    xhandlers
    flags 
    probability 4576423952623796022
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v453 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:753) [bci: 1382]
stamp: void
=== Inputs ===
=== Succesors ===
next: a457 
=== Usages ===
=== Predecessor ===
v455 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a457  <|@  <|@
tid v1087 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:753) [bci: 1385]
returnStamp: a# Lsun/misc/FDBigInteger;
signature: [Ljdk.vm.ci.meta.JavaType;@7e7dda6
stamp: void
targetMethod: HotSpotMethod<FDBigInteger.leftShift(int)>
=== Inputs ===
arguments: a324 i7 
=== Succesors ===
=== Usages ===
a457 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a324 i7  <|@  <|@
tid ?1418 <|@
d <@d|@=== Debug Properties ===
bci: 1385
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: true
localsSize: 33
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 753
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - - - - - - - i366 - - - - - - - i389 i390 i391 - - - - - - - - - a334 - - - 
=== Succesors ===
=== Usages ===
a457 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - - - - - - i366 - - - - - - - i389 i390 i391 - - - - - - - - - a334 - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a457 <|@
result v216|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 1385
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:753) [bci: 1385]
polymorphic: false
stamp: a# Lsun/misc/FDBigInteger;
targetMethod: Direct#FDBigInteger.leftShift
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1087 
stateDuring: ?1418 
=== Succesors ===
next: v1615 
=== Usages ===
v1091 a1189 ?1419 v1615 
=== Predecessor ===
v453 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1087 stateDuring: ?1418 #next: v1615  <|@  <|@
tid ?458 <|@
d <@d|@=== Debug Properties ===
bci: 1388
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: false
localsSize: 33
locksSize: 0
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:753) [bci: 1385]
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 753
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: a1 - - - - - - - - i366 - - - - - - - i389 i390 i391 - - - - - - - - - a334 - - - a1432 
=== Succesors ===
=== Usages ===
v1615 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - - - - - - i366 - - - - - - - i389 i390 i391 - - - - - - - - - a334 - - - a1432  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1615 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?458 
object: a457 
=== Succesors ===
next: i460 
=== Usages ===
=== Predecessor ===
a457 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?458 object: a457 #next: i460  <|@  <|@
tid v1091 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:754) [bci: 1394]
returnStamp: i32
signature: [Ljdk.vm.ci.meta.JavaType;@52176920
stamp: void
targetMethod: HotSpotMethod<FDBigInteger.cmp(FDBigInteger)>
=== Inputs ===
arguments: a457 a334 
=== Succesors ===
=== Usages ===
i460 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a457 a334  <|@  <|@
tid ?1419 <|@
d <@d|@=== Debug Properties ===
bci: 1394
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: true
localsSize: 33
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 754
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - - - - - - - i366 - - - - - - - i389 i390 i391 - - - - - - - a457 - - - - - 
=== Succesors ===
=== Usages ===
i460 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - - - - - - i366 - - - - - - - i389 i390 i391 - - - - - - - a457 - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i460 <|@
result v217|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 1394
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:754) [bci: 1394]
polymorphic: false
stamp: i32
targetMethod: Direct#FDBigInteger.cmp
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1091 
stateDuring: ?1419 
=== Succesors ===
next: v465 
=== Usages ===
j462 
=== Predecessor ===
v1615 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1091 stateDuring: ?1419 #next: v465  <|@  <|@
f <@~|@floating>@ <|@
tid j462 <|@
result v218|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:754) [bci: 1397]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i460 
=== Succesors ===
=== Usages ===
j468 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i460  <|@  <|@
f <@*|@fixed>@ <|@
tid v465 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:758) [bci: 1406]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v466 
=== Predecessor ===
i460 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v170|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:753) [bci: 1385]
locals: v0|QWORD[.] - - - - - - - - v183|DWORD - - - - - - - v185|DWORD v186|DWORD v187|DWORD - - - - - - - - - v175|QWORD[.] - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<FDBigInteger.leftShift(int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1385] <|@ <|@
      nr   -1  <|@ instruction v216|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:753) [bci: 1388]
stack: Object[null] 
locals: v0|QWORD[.] - - - - - - - - v183|DWORD - - - - - - - v185|DWORD v186|DWORD v187|DWORD - - - - - - - - - v175|QWORD[.] - - - 
>@ <|@ instruction NULLCHECK [v216|QWORD[.]] state [bci:1388] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v216|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v175|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:754) [bci: 1394]
locals: v0|QWORD[.] - - - - - - - - v183|DWORD - - - - - - - v185|DWORD v186|DWORD v187|DWORD - - - - - - - v216|QWORD[.] - - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<FDBigInteger.cmp(FDBigInteger)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1394] <|@ <|@
      nr   -1  <|@ instruction v217|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v218|QWORD = MOVSXD v217|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v218|QWORD, v216|QWORD[.]] destination: B139 -> B140 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B140"
    from_bci -1
    to_bci -1
    predecessors "B139" "B136" "B138" 
    successors "B141" "B142" 
    xhandlers
    flags 
    probability 4577144435309065002
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j468 <|@
result v219|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:758) [bci: 1406]
stamp: i64 [-2147483648 - 2147483647]
valueDescription: i64
=== Inputs ===
merge: v466 
values: j462 j271 j271 
=== Succesors ===
=== Usages ===
?1420 ?474 j487 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v466 values: j462 j271 j271  <|@  <|@
f <@~|@floating>@ <|@
tid a1189 <|@
result v220|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:758) [bci: 1406]
stamp: a!# Lsun/misc/FDBigInteger;
valueDescription: a -
=== Inputs ===
merge: v466 
values: a457 a324 a324 
=== Succesors ===
=== Usages ===
v1084 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v466 values: a457 a324 a324  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v466 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:758) [bci: 1406]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v465 v467 v532 
=== Succesors ===
next: i473 
=== Usages ===
j468 a1189 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v465 v467 v532 #next: i473  <|@  <|@
f <@~|@floating>@ <|@
tid a471 <|@
result v221|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:758) [bci: 1409]
rawvalue: FDBigInteger@241972498
stableDimension: 0
stamp: a!# Lsun/misc/FDBigInteger;
stampKind: a -
value: Object[FDBigInteger@241972498]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1084 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
tid v1084 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:758) [bci: 1412]
returnStamp: i32
signature: [Ljdk.vm.ci.meta.JavaType;@2eb9c731
stamp: void
targetMethod: HotSpotMethod<FDBigInteger.cmp(FDBigInteger)>
=== Inputs ===
arguments: a1189 a471 
=== Succesors ===
=== Usages ===
i473 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1189 a471  <|@  <|@
tid ?1420 <|@
d <@d|@=== Debug Properties ===
bci: 1412
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: true
localsSize: 33
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 758
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: a1 - - - - - - - - i366 - - - - - - - i389 i390 i391 j468 - - - - - - - - - - - - a1 
=== Succesors ===
=== Usages ===
i473 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - - - - - - i366 - - - - - - - i389 i390 i391 j468 - - - - - - - - - - - - a1  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i473 <|@
result v222|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 1412
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:758) [bci: 1412]
polymorphic: false
stamp: i32
targetMethod: Direct#FDBigInteger.cmp
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1084 
stateDuring: ?1420 
=== Succesors ===
next: v1398 
=== Usages ===
v475 
=== Predecessor ===
v466 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1084 stateDuring: ?1420 #next: v1398  <|@  <|@
f <@~|@floating>@ <|@
tid v475 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:758) [bci: 1415]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i473 
y: i8 
=== Succesors ===
=== Usages ===
v1398 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i473 y: i8  <|@  <|@
f <@*|@fixed>@ <|@
tid v1398 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:758) [bci: 1415]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v475 
=== Succesors ===
trueSuccessor: v1397 
falseSuccessor: v1395 
=== Usages ===
=== Predecessor ===
i473 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v475 #trueSuccessor: v1397 #falseSuccessor: v1395  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v219|QWORD, v220|QWORD[.]] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v221|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[FDBigInteger@241972498] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v220|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v221|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:758) [bci: 1412]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] - - - - - - - - v183|DWORD - - - - - - - v185|DWORD v186|DWORD v187|DWORD v219|QWORD - - - - - - - - - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<FDBigInteger.cmp(FDBigInteger)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1412] <|@ <|@
      nr   -1  <|@ instruction v222|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v222|DWORD, y: v222|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B140 -> B141 falseDestination: B140 -> B142 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B141"
    from_bci -1
    to_bci -1
    predecessors "B140" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1397 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:758) [bci: 1415]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1396 
=== Usages ===
=== Predecessor ===
v1398 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1396  <|@  <|@
tid ?474 <|@
d <@d|@=== Debug Properties ===
bci: 1415
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: false
localsSize: 33
locksSize: 0
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:758) [bci: 1412]
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 758
stackSize: 2
=== Inputs ===
outerFrameState: - 
values: a1 - - - - - - - - i366 - - - - - - - i389 i390 i391 j468 - - - - - - - - - - - - a1 i8 
=== Succesors ===
=== Usages ===
v1396 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - - - - - - i366 - - - - - - - i389 i390 i391 j468 - - - - - - - - - - - - a1 i8  <|@  <|@
f <@*|@fixed>@ <|@
tid v1396 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 1187
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:758) [bci: 1415]
reason: UnreachedCode
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?474 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1397 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?474  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -303891 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:758) [bci: 1415]
stack: v0|QWORD[.] int[0|0x0] 
locals: v0|QWORD[.] - - - - - - - - v183|DWORD - - - - - - - v185|DWORD v186|DWORD v187|DWORD v219|QWORD - - - - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:1415] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B142"
    from_bci -1
    to_bci -1
    predecessors "B140" 
    successors "B143" 
    xhandlers
    flags 
    probability 4577144435309065002
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1395 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:758) [bci: 1415]
stamp: void
=== Inputs ===
=== Succesors ===
next: v482 
=== Usages ===
=== Predecessor ===
v1398 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v482  <|@  <|@
f <@*|@fixed>@ <|@
tid v482 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:760) [bci: 1426]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v481 
=== Predecessor ===
v1395 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v183|DWORD, v185|DWORD, v186|DWORD, v187|DWORD, v219|QWORD, byte[0|0x0]] destination: B142 -> B143 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B143"
    from_bci -1
    to_bci -1
    predecessors "B88" "B142" "B87" 
    successors "B144" "B145" 
    xhandlers
    flags 
    probability 4598270386627586327
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i483 <|@
result v223|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:760) [bci: 1426]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v481 
values: i705 i366 i705 
=== Succesors ===
=== Usages ===
?495 i489 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v481 values: i705 i366 i705  <|@  <|@
f <@~|@floating>@ <|@
tid i484 <|@
result v224|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:760) [bci: 1426]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v481 
values: i231 i389 i231 
=== Succesors ===
=== Usages ===
?495 v1112 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v481 values: i231 i389 i231  <|@  <|@
f <@~|@floating>@ <|@
tid i485 <|@
result v225|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:760) [bci: 1426]
stamp: i32 [0 - 1] ⇈0000000000000001
valueDescription: i32
=== Inputs ===
merge: v481 
values: i232 i390 i232 
=== Succesors ===
=== Usages ===
v500 ?495 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v481 values: i232 i390 i232  <|@  <|@
f <@~|@floating>@ <|@
tid i486 <|@
result v226|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:760) [bci: 1426]
stamp: i32 [0 - 1] ⇈0000000000000001
valueDescription: i32
=== Inputs ===
merge: v481 
values: i233 i391 i233 
=== Succesors ===
=== Usages ===
v496 ?495 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v481 values: i233 i391 i233  <|@  <|@
f <@~|@floating>@ <|@
tid j487 <|@
result v227|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:760) [bci: 1426]
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v481 
values: j304 j468 j1529 
=== Succesors ===
=== Usages ===
v505 v507 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v481 values: j304 j468 j1529  <|@  <|@
f <@~|@floating>@ <|@
tid i1423 <|@
result v228|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i8 [0 - 1] ⇈0000000000000001
valueDescription: i8
=== Inputs ===
merge: v481 
values: i956 i1128 i1531 
=== Succesors ===
=== Usages ===
v1425 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v481 values: i956 i1128 i1531  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v481 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:760) [bci: 1426]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v480 v482 v1528 
=== Succesors ===
next: v1425 
=== Usages ===
i483 i484 i485 i486 j487 i1423 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v480 v482 v1528 #next: v1425  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1425 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: FloatingDecimal$BinaryToASCIIBuffer.exactDecimalConversion
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:703) [bci: 1064]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1576 
value: i1423 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1107 
=== Usages ===
=== Predecessor ===
v481 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1576 value: i1423 stateAfter: - lastLocationAccess: - #next: v1107  <|@  <|@
f <@~|@floating>@ <|@
tid v1605 <|@
result [v0|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v1107 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid i489 <|@
result v229|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:760) [bci: 1430]
stamp: i32
=== Inputs ===
x: i483 
y: i7 
=== Succesors ===
=== Usages ===
v1107 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i483 y: i7  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1107 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: FloatingDecimal$BinaryToASCIIBuffer.decExponent
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:760) [bci: 1431]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1605 
value: i489 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1109 
=== Usages ===
=== Predecessor ===
v1425 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1605 value: i489 stateAfter: - lastLocationAccess: - #next: v1109  <|@  <|@
f <@~|@floating>@ <|@
tid v1606 <|@
result [v0|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v1109 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1109 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: FloatingDecimal$BinaryToASCIIBuffer.firstDigitIndex
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:761) [bci: 1436]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1606 
value: i8 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1112 
=== Usages ===
=== Predecessor ===
v1107 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1606 value: i8 stateAfter: - lastLocationAccess: - #next: v1112  <|@  <|@
f <@~|@floating>@ <|@
tid v1607 <|@
result [v0|QWORD[.] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v1112 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1112 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: FloatingDecimal$BinaryToASCIIBuffer.nDigits
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:762) [bci: 1442]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1607 
value: i484 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v499 
=== Usages ===
=== Predecessor ===
v1109 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1607 value: i484 stateAfter: - lastLocationAccess: - #next: v499  <|@  <|@
f <@~|@floating>@ <|@
tid v496 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:766) [bci: 1447]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i486 
y: i8 
=== Succesors ===
=== Usages ===
v499 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i486 y: i8  <|@  <|@
f <@*|@fixed>@ <|@
tid v499 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:766) [bci: 1447]
stamp: void
trueSuccessorProbability: 0.6216282371371225
=== Inputs ===
condition: v496 
=== Succesors ===
trueSuccessor: v497 
falseSuccessor: v498 
=== Usages ===
=== Predecessor ===
v1112 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v496 #trueSuccessor: v497 #falseSuccessor: v498  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v223|DWORD, v224|DWORD, v225|DWORD, v226|DWORD, v227|QWORD, v228|DWORD] = LABEL numbPhis: 6 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v0|QWORD[.] + 25], y: v228|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v229|DWORD = INC v223|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v229|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v224|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v226|DWORD, y: v226|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.6216282371371225 condition: = trueDestination: B143 -> B144 falseDestination: B143 -> B145 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B144"
    from_bci -1
    to_bci -1
    predecessors "B143" 
    successors 
    xhandlers
    flags 
    probability 4594885466776022457
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v497 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:781) [bci: 1508]
stamp: void
=== Inputs ===
=== Succesors ===
next: v533 
=== Usages ===
=== Predecessor ===
v499 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v533  <|@  <|@
f <@*|@fixed>@ <|@
tid v533 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:781) [bci: 1508]
stamp: void
=== Inputs ===
result: - 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v497 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: - memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B145"
    from_bci -1
    to_bci -1
    predecessors "B143" 
    successors "B146" "B147" 
    xhandlers
    flags 
    probability 4591624594530912490
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v498 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:767) [bci: 1450]
stamp: void
=== Inputs ===
=== Succesors ===
next: v503 
=== Usages ===
=== Predecessor ===
v499 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v503  <|@  <|@
f <@~|@floating>@ <|@
tid v500 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:767) [bci: 1452]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i485 
y: i8 
=== Succesors ===
=== Usages ===
v503 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i485 y: i8  <|@  <|@
f <@*|@fixed>@ <|@
tid v503 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:767) [bci: 1452]
stamp: void
trueSuccessorProbability: 0.7008668650536939
=== Inputs ===
condition: v500 
=== Succesors ===
trueSuccessor: v501 
falseSuccessor: v502 
=== Usages ===
=== Predecessor ===
v498 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v500 #trueSuccessor: v501 #falseSuccessor: v502  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v225|DWORD, y: v225|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7008668650536939 condition: = trueDestination: B145 -> B146 falseDestination: B145 -> B147 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B146"
    from_bci -1
    to_bci -1
    predecessors "B145" 
    successors 
    xhandlers
    flags 
    probability 4589542575902081805
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v501 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:778) [bci: 1504]
stamp: void
=== Inputs ===
=== Succesors ===
next: v519 
=== Usages ===
=== Predecessor ===
v503 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v519  <|@  <|@
tid v1113 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:778) [bci: 1505]
returnStamp: void
signature: [Ljdk.vm.ci.meta.JavaType;@3a00425b
stamp: void
targetMethod: HotSpotMethod<FloatingDecimal$BinaryToASCIIBuffer.roundup()>
=== Inputs ===
arguments: a1 
=== Succesors ===
=== Usages ===
v519 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1  <|@  <|@
tid ?1421 <|@
d <@d|@=== Debug Properties ===
bci: 1505
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: true
localsSize: 33
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 778
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
=== Succesors ===
=== Usages ===
v519 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v519 <|@
d <@d|@=== Debug Properties ===
bci: 1505
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:778) [bci: 1505]
polymorphic: false
stamp: void
targetMethod: Direct#FloatingDecimal$BinaryToASCIIBuffer.roundup
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1113 
stateDuring: ?1421 
=== Succesors ===
next: v536 
=== Usages ===
=== Predecessor ===
v501 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1113 stateDuring: ?1421 #next: v536  <|@  <|@
f <@*|@fixed>@ <|@
tid v536 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:781) [bci: 1508]
stamp: void
=== Inputs ===
result: - 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v519 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: - memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:778) [bci: 1505]
locals: - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<FloatingDecimal$BinaryToASCIIBuffer.roundup()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1505] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B147"
    from_bci -1
    to_bci -1
    predecessors "B145" 
    successors "B148" "B149" 
    xhandlers
    flags 
    probability 4583985295923746675
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v502 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:768) [bci: 1455]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1402 
=== Usages ===
=== Predecessor ===
v503 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1402  <|@  <|@
f <@~|@floating>@ <|@
tid v505 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:768) [bci: 1459]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j487 
y: j271 
=== Succesors ===
=== Usages ===
v1402 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: j487 y: j271  <|@  <|@
f <@*|@fixed>@ <|@
tid v1402 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:768) [bci: 1459]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v505 
=== Succesors ===
trueSuccessor: v1401 
falseSuccessor: v1399 
=== Usages ===
=== Predecessor ===
v502 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v505 #trueSuccessor: v1401 #falseSuccessor: v1399  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v227|QWORD, y: v227|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B147 -> B148 falseDestination: B147 -> B149 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B148"
    from_bci -1
    to_bci -1
    predecessors "B147" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1401 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:768) [bci: 1459]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1400 
=== Usages ===
=== Predecessor ===
v1402 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1400  <|@  <|@
tid ?495 <|@
d <@d|@=== Debug Properties ===
bci: 1445
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: false
localsSize: 33
locksSize: 0
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:762) [bci: 1442]
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 766
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - - - - - - - i483 - - - - - - - i484 i485 i486 j271 - - - - - - - - - - - - 
=== Succesors ===
=== Usages ===
v1400 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - - - - - - i483 - - - - - - - i484 i485 i486 j271 - - - - - - - - - - - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v1400 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 1114
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:768) [bci: 1459]
reason: UnreachedCode
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?495 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1401 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?495  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -285203 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:766) [bci: 1445]
locals: v0|QWORD[.] - - - - - - - - v223|DWORD - - - - - - - v224|DWORD v225|DWORD v226|DWORD long[0|0x0] - - - - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:1445] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B149"
    from_bci -1
    to_bci -1
    predecessors "B147" 
    successors "B150" "B151" 
    xhandlers
    flags 
    probability 4583985295923746675
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1399 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:768) [bci: 1459]
stamp: void
=== Inputs ===
=== Succesors ===
next: v513 
=== Usages ===
=== Predecessor ===
v1402 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v513  <|@  <|@
f <@~|@floating>@ <|@
tid v507 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:774) [bci: 1494]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j487 
y: j273 
=== Succesors ===
=== Usages ===
v513 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j487 y: j273  <|@  <|@
f <@*|@fixed>@ <|@
tid v513 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:774) [bci: 1494]
stamp: void
trueSuccessorProbability: 0.4072231833910034
=== Inputs ===
condition: v507 
=== Succesors ===
trueSuccessor: v512 
falseSuccessor: v511 
=== Usages ===
=== Predecessor ===
v1399 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v507 #trueSuccessor: v512 #falseSuccessor: v511  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v227|QWORD y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.4072231833910034 condition: < trueDestination: B149 -> B150 falseDestination: B149 -> B151 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B150"
    from_bci -1
    to_bci -1
    predecessors "B149" 
    successors 
    xhandlers
    flags 
    probability 4577936391812347867
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v512 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:781) [bci: 1508]
stamp: void
=== Inputs ===
=== Succesors ===
next: v534 
=== Usages ===
=== Predecessor ===
v513 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v534  <|@  <|@
f <@*|@fixed>@ <|@
tid v534 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:781) [bci: 1508]
stamp: void
=== Inputs ===
result: - 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v512 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: - memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B151"
    from_bci -1
    to_bci -1
    predecessors "B149" 
    successors 
    xhandlers
    flags 
    probability 4580593910908099462
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v511 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:775) [bci: 1497]
stamp: void
=== Inputs ===
=== Succesors ===
next: v515 
=== Usages ===
=== Predecessor ===
v513 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v515  <|@  <|@
tid v1115 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:775) [bci: 1498]
returnStamp: void
signature: [Ljdk.vm.ci.meta.JavaType;@333a250
stamp: void
targetMethod: HotSpotMethod<FloatingDecimal$BinaryToASCIIBuffer.roundup()>
=== Inputs ===
arguments: a1 
=== Succesors ===
=== Usages ===
v515 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1  <|@  <|@
tid ?1422 <|@
d <@d|@=== Debug Properties ===
bci: 1498
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: true
localsSize: 33
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 775
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
=== Succesors ===
=== Usages ===
v515 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v515 <|@
d <@d|@=== Debug Properties ===
bci: 1498
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:775) [bci: 1498]
polymorphic: false
stamp: void
targetMethod: Direct#FloatingDecimal$BinaryToASCIIBuffer.roundup
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1115 
stateDuring: ?1422 
=== Succesors ===
next: v535 
=== Usages ===
=== Predecessor ===
v511 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1115 stateDuring: ?1422 #next: v535  <|@  <|@
f <@*|@fixed>@ <|@
tid v535 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:781) [bci: 1508]
stamp: void
=== Inputs ===
result: - 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v515 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: - memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:775) [bci: 1498]
locals: - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<FloatingDecimal$BinaryToASCIIBuffer.roundup()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1498] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B152"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1319 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:741) [bci: 1259]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1318 
=== Usages ===
=== Predecessor ===
v1320 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1318  <|@  <|@
tid ?368 <|@
d <@d|@=== Debug Properties ===
bci: 1243
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: false
localsSize: 33
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 741
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - - - i5 - - - i366 - - - - - - - i367 i8 i8 - - - - - a320 - a324 a329 a334 - - - 
=== Succesors ===
=== Usages ===
v1318 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - - i5 - - - i366 - - - - - - - i367 i8 i8 - - - - - a320 - a324 a329 a334 - - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v1318 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 1092
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:741) [bci: 1259]
reason: UnreachedCode
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?368 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1319 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?368  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -279571 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:741) [bci: 1243]
locals: v0|QWORD[.] - - - - v4|DWORD - - - v183|DWORD - - - - - - - v184|DWORD int[0|0x0] int[0|0x0] - - - - - v168|QWORD[.] - v170|QWORD[.] v172|QWORD[.] v175|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:1243] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B153"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B154" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1250 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:554) [bci: 280]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1518 
=== Usages ===
=== Predecessor ===
v1251 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1518  <|@  <|@
f <@~|@floating>@ <|@
tid i1519 <|@
result int[-229139|0xfffffffffffc80ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -229139
stableDimension: 0
stamp: i32 [-229139] ⇊00000000fffc80ed ⇈00000000fffc80ed
stampKind: i32
value: int[-229139|0xfffffffffffc80ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1515 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1518 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1512 
=== Predecessor ===
v1250 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-229139|0xfffffffffffc80ed]] destination: B153 -> B154 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B154"
    from_bci -1
    to_bci -1
    predecessors "B60" "B153" "B64" "B91" "B69" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1515 <|@
result v230|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-290587 - -229139] ⇊00000000fff800e5 ⇈00000000fffffffd
valueDescription: i32
=== Inputs ===
merge: v1512 
values: i1514 i1519 i1521 i1523 i1527 
=== Succesors ===
=== Usages ===
v1517 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1512 values: i1514 i1519 i1521 i1523 i1527  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1512 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1513 v1518 v1520 v1522 v1526 
=== Succesors ===
next: v1517 
=== Usages ===
i1515 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1513 v1518 v1520 v1522 v1526 #next: v1517  <|@  <|@
f <@*|@fixed>@ <|@
tid v1517 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?799 
actionAndReason: i1515 
speculation: a1432 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1512 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?799 actionAndReason: i1515 speculation: a1432  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v230|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v230|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:554) [bci: 278]
locals: v0|QWORD[.] - v100|QWORD - - v4|DWORD - v7|DWORD - v71|DWORD v98|DWORD v76|DWORD v99|DWORD v81|DWORD v97|DWORD v76|DWORD - - - - - - - - - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:278] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B155"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1246 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:594) [bci: 345]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1245 
=== Usages ===
=== Predecessor ===
v1247 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1245  <|@  <|@
tid ?108 <|@
d <@d|@=== Debug Properties ===
bci: 202
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: true
localsSize: 33
locksSize: 0
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:523) [bci: 202]
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 523
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 i2 j3 - i4 i5 i9 i11 i18 i612 i98 i666 - - - - - - - - - - - - - - - - - - - - - 
=== Succesors ===
=== Usages ===
?109 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2 j3 - i4 i5 i9 i11 i18 i612 i98 i666 - - - - - - - - - - - - - - - - - - - - -  <|@  <|@
tid ?109 <|@
d <@d|@=== Debug Properties ===
bci: 10
code: ResolvedJavaMethodBytecode<Math.max(int, int)>
duringCall: false
localsSize: 2
locksSize: 0
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:523) [bci: 202]
rethrowException: false
sourceFile: Math.java
sourceLine: 1252
stackSize: 1
=== Inputs ===
outerFrameState: ?108 
values: - - i668 
=== Succesors ===
=== Usages ===
v1245 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?108 values: - - i668  <|@  <|@
f <@*|@fixed>@ <|@
tid v1245 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 903
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:594) [bci: 345]
reason: BoundsCheckException
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?109 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1246 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?109  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -231195 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Math.max(Math.java:1252) [bci: 10]
stack: v81|DWORD 
locals: - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:523) [bci: 202]
locals: v0|QWORD[.] v1|DWORD v2|QWORD - v3|DWORD v4|DWORD v5|DWORD v7|DWORD v10|DWORD v71|DWORD v84|DWORD v76|DWORD - - - - - - - - - - - - - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:10, 202] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B156"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1242 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:591) [bci: 314]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1241 
=== Usages ===
=== Predecessor ===
v1243 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1241  <|@  <|@
tid ?95 <|@
d <@d|@=== Debug Properties ===
bci: 185
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: true
localsSize: 33
locksSize: 0
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:520) [bci: 185]
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 520
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 i2 j3 - i4 i5 i9 i11 i18 i612 - - - - - - - - - - - - - - - - - - - - - - - 
=== Succesors ===
=== Usages ===
?96 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2 j3 - i4 i5 i9 i11 i18 i612 - - - - - - - - - - - - - - - - - - - - - - -  <|@  <|@
tid ?96 <|@
d <@d|@=== Debug Properties ===
bci: 10
code: ResolvedJavaMethodBytecode<Math.max(int, int)>
duringCall: false
localsSize: 2
locksSize: 0
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:520) [bci: 185]
rethrowException: false
sourceFile: Math.java
sourceLine: 1252
stackSize: 1
=== Inputs ===
outerFrameState: ?95 
values: - - i666 
=== Succesors ===
=== Usages ===
v1241 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?95 values: - - i666  <|@  <|@
f <@*|@fixed>@ <|@
tid v1241 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 896
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:591) [bci: 314]
reason: UnreachedCode
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?96 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1242 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?96  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -229395 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Math.max(Math.java:1252) [bci: 10]
stack: v76|DWORD 
locals: - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:520) [bci: 185]
locals: v0|QWORD[.] v1|DWORD v2|QWORD - v3|DWORD v4|DWORD v5|DWORD v7|DWORD v10|DWORD v71|DWORD - - - - - - - - - - - - - - - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:10, 185] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B157"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B158" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1234 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp(FloatingDecimal.java:825) [bci: 85]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 176]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1454 
=== Usages ===
=== Predecessor ===
v1235 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1454  <|@  <|@
f <@~|@floating>@ <|@
tid i1455 <|@
result int[-288019|0xfffffffffffb9aed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -288019
stableDimension: 0
stamp: i32 [-288019] ⇊00000000fffb9aed ⇈00000000fffb9aed
stampKind: i32
value: int[-288019|0xfffffffffffb9aed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1441 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1454 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1438 
=== Predecessor ===
v1234 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-288019|0xfffffffffffb9aed]] destination: B157 -> B158 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B158"
    from_bci -1
    to_bci -1
    predecessors "B17" "B16" "B27" "B26" "B12" "B157" 
    successors 
    xhandlers
    flags 
    probability 2366641604183195648
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1441 <|@
result v231|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-288019 - -222739] ⇊00000000fff880e5 ⇈00000000ffff9ffd
valueDescription: i32
=== Inputs ===
merge: v1438 
values: i1440 i1445 i1449 i1451 i1453 i1455 
=== Succesors ===
=== Usages ===
v1443 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1438 values: i1440 i1445 i1449 i1451 i1453 i1455  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1438 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1439 v1444 v1448 v1450 v1452 v1454 
=== Succesors ===
next: v1443 
=== Usages ===
i1441 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1439 v1444 v1448 v1450 v1452 v1454 #next: v1443  <|@  <|@
f <@*|@fixed>@ <|@
tid v1443 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?15 
actionAndReason: i1441 
speculation: a1432 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1438 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?15 actionAndReason: i1441 speculation: a1432  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v231|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v231|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:443) [bci: 67]
locals: v0|QWORD[.] v1|DWORD v2|QWORD - v3|DWORD v4|DWORD v5|DWORD v7|DWORD - - - - - - - - - - - - - - - - - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:67] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B159"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B160" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1198 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:444) [bci: 82]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1436 
=== Usages ===
=== Predecessor ===
v1199 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1436  <|@  <|@
f <@~|@floating>@ <|@
tid i1437 <|@
result int[-302867|0xfffffffffffb60ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -302867
stableDimension: 0
stamp: i32 [-302867] ⇊00000000fffb60ed ⇈00000000fffb60ed
stampKind: i32
value: int[-302867|0xfffffffffffb60ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1433 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1436 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1429 
=== Predecessor ===
v1198 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-302867|0xfffffffffffb60ed]] destination: B159 -> B160 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B160"
    from_bci -1
    to_bci -1
    predecessors "B2" "B159" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1433 <|@
result v232|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-303123 - -302867] ⇊00000000fffb40ed ⇈00000000fffb7fed
valueDescription: i32
=== Inputs ===
merge: v1429 
values: i1431 i1437 
=== Succesors ===
=== Usages ===
v1435 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1429 values: i1431 i1437  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1429 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1430 v1436 
=== Succesors ===
next: v1435 
=== Usages ===
i1433 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1430 v1436 #next: v1435  <|@  <|@
tid ?6 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)>
duringCall: false
localsSize: 33
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 426
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 i2 j3 - i4 i5 - - - - - - - - - - - - - - - - - - - - - - - - - - - 
=== Succesors ===
=== Usages ===
v1435 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2 j3 - i4 i5 - - - - - - - - - - - - - - - - - - - - - - - - - - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v1435 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?6 
actionAndReason: i1433 
speculation: a1432 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1429 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?6 actionAndReason: i1433 speculation: a1432  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v232|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v232|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:426) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD - v3|DWORD v4|DWORD - - - - - - - - - - - - - - - - - - - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B159" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|QWORD, r8|DWORD, r9|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@4a6681b7 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD = MOVE rcx|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v1|DWORD y: 63 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B159 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v1|DWORD y: -21 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B18" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v0|QWORD[.] + 26], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v0|QWORD[.] + 25], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = TZCNT v2|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = MOVE input: int[53|0x35] <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = SUB (x: v6|DWORD, ~y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[int[27]{0, 3, 5, 7, 10, ...}] <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = SUB (x: v7|DWORD, ~y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = DEC v9|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v10|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7447171657016569 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B17" 
    xhandlers
    flags 
    probability 4604883035445177204
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = ADD (x: v7|DWORD, ~y: [v8|QWORD[.] + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v11|DWORD y: 64 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B4 -> B5 falseDestination: B4 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B16" 
    xhandlers
    flags 
    probability 4604883035445177204
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v1|DWORD y: 52 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B5 -> B6 falseDestination: B5 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B14" 
    xhandlers
    flags 
    probability 4604883035445177204
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v1|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0020362233415496256 condition: > trueDestination: B6 -> B7 falseDestination: B6 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B15" 
    xhandlers
    flags 
    probability 4604869376833871008
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0]] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B11" "B14" "B13" "B8" 
    successors 
    xhandlers
    flags 
    probability 4604883035445177204
    begin_IR
      LIR
      nr   -1  <|@ instruction [v19|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = MOVE input: int[52|0x34] <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = SUB (x: v20|DWORD, ~y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v21|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v22|QWORD = SHR (x: v2|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE v22|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE v19|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:476) [bci: 170]
locals: - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD, rcx|QWORD, r8|DWORD] [] callTarget: HotSpotMethod<FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(int, long, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:170] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B19" "B28" 
    xhandlers
    flags 
    probability 4598270386627586328
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v24|QWORD = MOVE input: long[4503599627370495|0xfffffffffffff] <|@ <|@
      nr   -1  <|@ instruction v25|QWORD = AND (x: v2|QWORD, y: v24|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = MOVE input: long[4607182418800017408|0x3ff0000000000000] <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = OR (x: v25|QWORD, y: v26|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v28|DOUBLE = VMOVQ v27|QWORD nZ: XMM <|@ <|@
      nr   -1  <|@ instruction v30|DOUBLE = VMOVE input: double[1.5|0x3ff8000000000000] <|@ <|@
      nr   -1  <|@ instruction v29|DOUBLE = VSUBSD (x: v28|DOUBLE, y: v30|DOUBLE) nZ: XMM <|@ <|@
      nr   -1  <|@ instruction v32|DOUBLE = VMOVE input: double[0.289529654|0x3fd287a762c9bd93] <|@ <|@
      nr   -1  <|@ instruction v31|DOUBLE = VMULSD (x: v29|DOUBLE, y: v32|DOUBLE) nZ: XMM <|@ <|@
      nr   -1  <|@ instruction v34|DOUBLE = VMOVE input: double[0.176091259|0x3fc68a288b421b8c] <|@ <|@
      nr   -1  <|@ instruction v33|DOUBLE = VADDSD (x: v31|DOUBLE, y: v34|DOUBLE) nZ: XMM <|@ <|@
      nr   -1  <|@ instruction v35|DOUBLE = VCVTSI2SD v1|DWORD <|@ <|@
      nr   -1  <|@ instruction v37|DOUBLE = VMOVE input: double[0.301029995663981|0x3fd34413509f79fb] <|@ <|@
      nr   -1  <|@ instruction v36|DOUBLE = VMULSD (x: v35|DOUBLE, y: v37|DOUBLE) nZ: XMM <|@ <|@
      nr   -1  <|@ instruction v38|DOUBLE = VADDSD (x: v33|DOUBLE, y: v36|DOUBLE) nZ: XMM <|@ <|@
      nr   -1  <|@ instruction v39|QWORD = VMOVQ v38|DOUBLE <|@ <|@
      nr   -1  <|@ instruction v40|QWORD = MOVE input: long[-9223372036854775808|0x8000000000000000] <|@ <|@
      nr   -1  <|@ instruction v41|QWORD = MOVE input: long[9218868437227405312|0x7ff0000000000000] <|@ <|@
      nr   -1  <|@ instruction v42|QWORD = AND (x: v39|QWORD, y: v41|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v43|QWORD = SHR v42|QWORD y: 52 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v44|DWORD = MOV v43|QWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v45|DWORD = LEA [v44|DWORD - 1023] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v10|DWORD y: 27 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5429471082944717 condition: |<| trueDestination: B18 -> B19 falseDestination: B18 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B27" 
    xhandlers
    flags 
    probability 4594161794464019143
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v46|DWORD = ADD (x: v7|DWORD, ~y: [v8|QWORD[.] + v10|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v46|DWORD y: 64 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B19 -> B20 falseDestination: B19 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4594161794464019143
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v45|DWORD, y: v45|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.8090044605656586 condition: < trueDestination: B20 -> B21 falseDestination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B30" 
    xhandlers
    flags 
    probability 4592744391825976755
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B21 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B21" "B29" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4596608865853000038
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v53|QWORD = MOVE input: long[9223372036854775807|0x7fffffffffffffff] <|@ <|@
      nr   -1  <|@ instruction TEST (x: v53|QWORD, y: v39|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B40" 
    xhandlers
    flags 
    probability 4596608865853000038
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v40|QWORD, y: v39|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v55|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction v54|DWORD = CMOVE (falseValue: int[-1|0xffffffffffffffff], ~trueValue: v55|DWORD) condition: = <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v54|DWORD] destination: B32 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B32" "B39" "B35" "B24" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4598270386627586327
    begin_IR
      LIR
      nr   -1  <|@ instruction [v71|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v72|DWORD = NEG v71|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v72|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7447175992468633 condition: < trueDestination: B40 -> B41 falseDestination: B40 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" 
    xhandlers
    flags 
    probability 4596017585297594603
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0], v10|DWORD, int[1|0x1]] destination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" "B42" 
    successors "B44" "B156" 
    xhandlers
    flags 
    probability 4598270386627586327
    begin_IR
      LIR
      nr   -1  <|@ instruction [v76|DWORD, v77|DWORD, v78|DWORD] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v76|DWORD y: 27 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B43 -> B44 falseDestination: B43 -> B156 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4598270386627586327
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v71|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7447175992468633 condition: < trueDestination: B44 -> B45 falseDestination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4596017585297594603
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0], v10|DWORD, int[1|0x1]] destination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" "B46" 
    successors "B48" "B155" 
    xhandlers
    flags 
    probability 4598270386627586327
    begin_IR
      LIR
      nr   -1  <|@ instruction [v81|DWORD, v82|DWORD, v83|DWORD] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v84|DWORD = ADD (x: v77|DWORD, y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v83|DWORD y: 27 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B47 -> B48 falseDestination: B47 -> B155 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B49" "B52" 
    xhandlers
    flags 
    probability 4598270386627586327
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v85|DWORD = MOVE input: int[52|0x34] <|@ <|@
      nr   -1  <|@ instruction v86|DWORD = SUB (x: v85|DWORD, ~y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v87|DWORD = SUB (x: v84|DWORD, ~y: v86|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v88|DWORD = SUB (x: v84|DWORD, ~y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v87|DWORD, y: v82|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.44790294112836976 condition: > trueDestination: B48 -> B49 falseDestination: B48 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B53" "B55" 
    xhandlers
    flags 
    probability 4594245951440238058
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v91|DWORD = SUB (x: v82|DWORD, ~y: v87|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v92|DWORD = SUB (x: v88|DWORD, ~y: v87|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v7|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.3803485753451483 condition: = trueDestination: B52 -> B53 falseDestination: B52 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B56" 
    xhandlers
    flags 
    probability 4590957515205589900
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v92|DWORD, int[0|0x0], v91|DWORD] destination: B55 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B51" "B54" "B55" 
    successors "B57" "B153" 
    xhandlers
    flags 
    probability 4598270386627586327
    begin_IR
      LIR
      nr   -1  <|@ instruction [v97|DWORD, v98|DWORD, v99|DWORD] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v5|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v100|QWORD = SHR (x: v2|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v97|DWORD, y: v97|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B56 -> B57 falseDestination: B56 -> B153 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B58" "B93" 
    xhandlers
    flags 
    probability 4598270386627586327
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v101|DWORD = SUB (x: v98|DWORD, ~y: v97|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v102|DWORD = ADD (x: v101|DWORD, y: v7|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v103|DWORD = ADD (x: v102|DWORD, ~y: [v8|QWORD[.] + v76|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v104|DWORD = SUB (x: v99|DWORD, ~y: v97|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v103|DWORD y: 64 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9886664055615392 condition: < trueDestination: B57 -> B58 falseDestination: B57 -> B93 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B59" "B92" 
    xhandlers
    flags 
    probability 4598218266070781714
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v105|DWORD = INC v104|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v106|DWORD = ADD (x: v105|DWORD, ~y: [v8|QWORD[.] + v83|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v106|DWORD y: 64 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9702874687399411 condition: < trueDestination: B58 -> B59 falseDestination: B58 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B60" "B61" 
    xhandlers
    flags 
    probability 4597991127864395515
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v103|DWORD y: 32 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B59 -> B60 falseDestination: B59 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" "B91" 
    xhandlers
    flags 
    probability 4597991127864395515
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v81|DWORD y: 27 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B61 -> B62 falseDestination: B61 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B63" "B68" 
    xhandlers
    flags 
    probability 4597991127864395515
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v107|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[long[27]{1, 5, 25, 125, 625, ...}] <|@ <|@
      nr   -1  <|@ instruction v108|QWORD = MOV [v107|QWORD[.] + v76|DWORD * 8 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v109|QWORD = MOV [v107|QWORD[.] + v81|DWORD * 8 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v110|QWORD = IMUL (x: v100|QWORD, y: v108|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v101|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v111|QWORD = SHL (x: v110|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v104|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v112|QWORD = SHL (x: v109|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE v111|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction (highResult: rdx|QWORD, lowResult: rax|QWORD) = CDQ rax|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:554) [bci: 278]
locals: v0|QWORD[.] - v100|QWORD - - v4|DWORD - v7|DWORD - v71|DWORD v98|DWORD v76|DWORD v99|DWORD v81|DWORD v97|DWORD v76|DWORD - - - - - - - - - - - - - - - - - 
>@ <|@ instruction (highResult: rdx|QWORD, lowResult: rax|QWORD) = IDIV (highX: rdx|QWORD, lowX: rax|QWORD, y: v112|QWORD) size: QWORD state [bci:278] <|@ <|@
      nr   -1  <|@ instruction v113|QWORD = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v114|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v115|DWORD[.] = MOV [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v116|QWORD = SHL v112|QWORD y: 3 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v117|QWORD = SHL v112|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v118|QWORD = ADD (x: v116|QWORD, y: v117|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v119|QWORD = SHL v108|QWORD y: 3 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v120|QWORD = SHL v108|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v121|QWORD = ADD (x: v119|QWORD, y: v120|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v122|QWORD = SHL v114|QWORD y: 3 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v123|QWORD = SHL v114|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v124|QWORD = ADD (x: v122|QWORD, y: v123|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v125|QWORD = ADD (x: v121|QWORD, y: v124|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v126|DWORD = MOV v113|QWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v126|DWORD, y: v126|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.10789017046034499 condition: = trueDestination: B62 -> B63 falseDestination: B62 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B69" "B70" 
    xhandlers
    flags 
    probability 4597039201284261789
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:554) [bci: 278]
locals: v0|QWORD[.] - v100|QWORD - - v4|DWORD - v7|DWORD - v71|DWORD v98|DWORD v76|DWORD v99|DWORD v81|DWORD v97|DWORD v76|DWORD - - - - - - - - - - - - - - - - - 
>@ <|@ instruction CMP [v115|DWORD[.] * 8 + 12] y: 0 size: DWORD state [bci:278] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B68 -> B69 falseDestination: B68 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B71" "B72" 
    xhandlers
    flags 
    probability 4597039201284261789
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v128|DWORD = LEA [v126|DWORD + 48] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v115|DWORD[.] * 8 + 16], y: v128|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v4|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.011534143105032153 condition: = trueDestination: B70 -> B71 falseDestination: B70 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B73" 
    xhandlers
    flags 
    probability 4596948413956274540
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v71|DWORD, int[1|0x1]] destination: B72 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B67" "B72" 
    successors "B74" "B75" 
    xhandlers
    flags 
    probability 4597889360879007520
    begin_IR
      LIR
      nr   -1  <|@ instruction [v129|DWORD, v130|DWORD] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v121|QWORD, y: v124|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v131|DWORD = SETCC condition: > <|@ <|@
      nr   -1  <|@ instruction CMP (x: v125|QWORD, y: v118|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v132|DWORD = SETCC condition: > <|@ <|@
      nr   -1  <|@ instruction CMP v129|DWORD y: -3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B73 -> B74 falseDestination: B73 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" "B89" 
    xhandlers
    flags 
    probability 4597889360879007520
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v129|DWORD y: 8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B75 -> B76 falseDestination: B75 -> B89 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B77" 
    xhandlers
    flags 
    probability 4597889360879007520
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v131|DWORD, v132|DWORD, v129|DWORD, v130|DWORD] destination: B76 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" "B66" "B71" 
    successors "B78" "B79" 
    xhandlers
    flags 
    probability 4597991127864395515
    begin_IR
      LIR
      nr   -1  <|@ instruction [v133|DWORD, v134|DWORD, v135|DWORD, v136|DWORD] = LABEL numbPhis: 4 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v115|DWORD[.], y: v115|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B77 -> B78 falseDestination: B77 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B80" 
    xhandlers
    flags 
    probability 4597991127864395515
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v138|DWORD = MOV [v115|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v139|QWORD[.] = UNCOMPRESSPOINTER (input: v115|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@e9a9e99 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v136|DWORD, v133|DWORD, v134|DWORD, v124|QWORD, v121|QWORD] destination: B79 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" "B84" "B85" 
    successors "B81" "B88" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4611068895554337385
    begin_IR
      LIR
      nr   -1  <|@ instruction [v140|DWORD, v141|DWORD, v142|DWORD, v143|QWORD, v144|QWORD] = LABEL numbPhis: 5 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v141|DWORD, y: v141|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9044543048889694 condition: = trueDestination: B80 -> B81 falseDestination: B80 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B82" "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4610267259874414128
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v142|DWORD, y: v142|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9603010975971522 condition: = trueDestination: B81 -> B82 falseDestination: B81 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors "B83" "B86" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4609966007107604873
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v138|DWORD, y: v140|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B82 -> B83 falseDestination: B82 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B84" "B85" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4609966007107604873
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE v143|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction (highResult: rdx|QWORD, lowResult: rax|QWORD) = CDQ rax|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:683) [bci: 914]
locals: v0|QWORD[.] - - - - - - - - v135|DWORD - - - - - - - v140|DWORD int[0|0x0] int[0|0x0] - - - - - v143|QWORD - v112|QWORD - v144|QWORD - v118|QWORD - 
>@ <|@ instruction (highResult: rdx|QWORD, lowResult: rax|QWORD) = IDIV (highX: rdx|QWORD, lowX: rax|QWORD, y: v112|QWORD) size: QWORD state [bci:914] <|@ <|@
      nr   -1  <|@ instruction v145|QWORD = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v146|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v147|DWORD = MOV v145|QWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v148|DWORD = LEA [v147|DWORD + 48] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v139|QWORD[.] + v140|DWORD * 2 + 16], y: v148|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v149|QWORD = SHL v146|QWORD y: 3 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v150|QWORD = SHL v146|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v151|QWORD = ADD (x: v149|QWORD, y: v150|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v152|DWORD = INC v140|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v153|QWORD = SHL v144|QWORD y: 3 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v154|QWORD = SHL v144|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v155|QWORD = ADD (x: v153|QWORD, y: v154|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v155|QWORD y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 2.81873959865786E-4 condition: < trueDestination: B83 -> B84 falseDestination: B83 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B80" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4609963953039085360
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v155|QWORD, y: v151|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v156|DWORD = SETCC condition: > <|@ <|@
      nr   -1  <|@ instruction v157|QWORD = ADD (x: v155|QWORD, y: v151|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v157|QWORD, y: v118|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v158|DWORD = SETCC condition: > <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:700) [bci: 1039]
locals: v0|QWORD[.] - - - - - - - - v135|DWORD - - - - - - - v152|DWORD v156|DWORD v158|DWORD - - v147|DWORD - - v151|QWORD - v112|QWORD - v155|QWORD - v118|QWORD - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:1039] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v152|DWORD, v156|DWORD, v158|DWORD, v151|QWORD, v155|QWORD] destination: B85 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B80" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4557049088300125308
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:700) [bci: 1039]
locals: v0|QWORD[.] - - - - - - - - v135|DWORD - - - - - - - v152|DWORD int[1|0x1] int[1|0x1] - - v147|DWORD - - v151|QWORD - v112|QWORD - v155|QWORD - v118|QWORD - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:1039] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v152|DWORD, int[1|0x1], int[1|0x1], v151|QWORD, v155|QWORD] destination: B84 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B143" 
    xhandlers
    flags 
    probability 4595581105729921479
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v162|QWORD = SHL v143|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v163|QWORD = SUB (x: v162|QWORD, ~y: v118|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v143|QWORD, y: v143|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v164|DWORD = SETCC condition: = <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v135|DWORD, v140|DWORD, v141|DWORD, v142|DWORD, v163|QWORD, v164|DWORD] destination: B88 -> B143 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B143"
    from_bci -1
    to_bci -1
    predecessors "B88" "B142" "B87" 
    successors "B144" "B145" 
    xhandlers
    flags 
    probability 4598270386627586327
    begin_IR
      LIR
      nr   -1  <|@ instruction [v223|DWORD, v224|DWORD, v225|DWORD, v226|DWORD, v227|QWORD, v228|DWORD] = LABEL numbPhis: 6 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v0|QWORD[.] + 25], y: v228|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v229|DWORD = INC v223|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v229|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v224|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v226|DWORD, y: v226|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.6216282371371225 condition: = trueDestination: B143 -> B144 falseDestination: B143 -> B145 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B144"
    from_bci -1
    to_bci -1
    predecessors "B143" 
    successors 
    xhandlers
    flags 
    probability 4594885466776022457
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B29" "B33" 
    xhandlers
    flags 
    probability 4593071939154919121
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v45|DWORD, y: v45|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.8090044605656586 condition: < trueDestination: B28 -> B29 falseDestination: B28 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B30" 
    xhandlers
    flags 
    probability 4591466140625282328
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4592903625202481288
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v89|DWORD = SUB (x: v87|DWORD, ~y: v82|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v90|DWORD = SUB (x: v88|DWORD, ~y: v82|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v7|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.3803485753451483 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B56" 
    xhandlers
    flags 
    probability 4589769855493975031
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v90|DWORD, v89|DWORD, int[0|0x0]] destination: B51 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B145"
    from_bci -1
    to_bci -1
    predecessors "B143" 
    successors "B146" "B147" 
    xhandlers
    flags 
    probability 4591624594530912490
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v225|DWORD, y: v225|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7008668650536939 condition: = trueDestination: B145 -> B146 falseDestination: B145 -> B147 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B146"
    from_bci -1
    to_bci -1
    predecessors "B145" 
    successors 
    xhandlers
    flags 
    probability 4589542575902081805
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:778) [bci: 1505]
locals: - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<FloatingDecimal$BinaryToASCIIBuffer.roundup()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1505] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors "B143" 
    xhandlers
    flags 
    probability 4589484464932113000
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v159|QWORD = SHL v143|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v160|QWORD = SUB (x: v159|QWORD, ~y: v118|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v143|QWORD, y: v143|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v161|DWORD = SETCC condition: = <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v135|DWORD, v140|DWORD, v141|DWORD, v142|DWORD, v160|QWORD, v161|DWORD] destination: B87 -> B143 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4589360357487768198
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v79|DWORD = ADD (x: v10|DWORD, y: v71|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v80|DWORD = INC v71|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v71|DWORD, v79|DWORD, v80|DWORD] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" 
    xhandlers
    flags 
    probability 4589360357487768198
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v73|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction v74|DWORD = SUB (x: v73|DWORD, ~y: v71|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v75|DWORD = SUB (x: v10|DWORD, ~y: v71|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v72|DWORD, v75|DWORD, v74|DWORD] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B54" 
    xhandlers
    flags 
    probability 4587886356549755024
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v92|DWORD, int[0|0x0], v91|DWORD] destination: B53 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B50" "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4591660958128651480
    begin_IR
      LIR
      nr   -1  <|@ instruction [v93|DWORD, v94|DWORD, v95|DWORD] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v96|DWORD = DEC v93|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v96|DWORD, v94|DWORD, v95|DWORD] destination: B54 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B54" 
    xhandlers
    flags 
    probability 4586428360452806945
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v90|DWORD, v89|DWORD, int[0|0x0]] destination: B50 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B147"
    from_bci -1
    to_bci -1
    predecessors "B145" 
    successors "B148" "B149" 
    xhandlers
    flags 
    probability 4583985295923746675
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v227|QWORD, y: v227|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B147 -> B148 falseDestination: B147 -> B149 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B149"
    from_bci -1
    to_bci -1
    predecessors "B147" 
    successors "B150" "B151" 
    xhandlers
    flags 
    probability 4583985295923746675
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v227|QWORD y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.4072231833910034 condition: < trueDestination: B149 -> B150 falseDestination: B149 -> B151 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B151"
    from_bci -1
    to_bci -1
    predecessors "B149" 
    successors 
    xhandlers
    flags 
    probability 4580593910908099462
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:775) [bci: 1498]
locals: - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<FloatingDecimal$BinaryToASCIIBuffer.roundup()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1498] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" "B26" 
    xhandlers
    flags 
    probability 4583287530145046380
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v45|DWORD y: 52 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B22 -> B23 falseDestination: B22 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4583287530145046380
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v40|QWORD, y: v39|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.007057615809059412 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B37" 
    xhandlers
    flags 
    probability 4583233678357478789
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B25 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" "B25" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4587137980351417586
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v45|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v62|QWORD = SHR (x: v24|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v62|QWORD, y: v39|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" 
    xhandlers
    flags 
    probability 4587137980351417586
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v233|QWORD = MOVE input: long[4503599627370496|0x10000000000000] <|@ <|@
      nr   -1  <|@ instruction v63|QWORD = AND (x: v39|QWORD, y: v24|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v64|QWORD = OR (x: v63|QWORD, y: v233|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v65|DWORD = MOVE input: int[1075|0x433] <|@ <|@
      nr   -1  <|@ instruction v66|DWORD = SUB (x: v65|DWORD, ~y: v44|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v66|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v67|QWORD = SHR (x: v64|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v68|DWORD = MOV v67|QWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v69|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr   -1  <|@ instruction v70|DWORD = SUB (x: v69|DWORD, ~y: v68|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v70|DWORD] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B64" "B65" 
    xhandlers
    flags 
    probability 4583272634049493745
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v125|QWORD, y: v118|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B63 -> B64 falseDestination: B63 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" "B67" 
    xhandlers
    flags 
    probability 4583272634049493745
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v127|DWORD = DEC v71|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v4|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.011534143105032153 condition: = trueDestination: B65 -> B66 falseDestination: B65 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B73" 
    xhandlers
    flags 
    probability 4583184796790287775
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v127|DWORD, int[0|0x0]] destination: B67 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B34" "B157" 
    xhandlers
    flags 
    probability 4582080415526971107
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v45|DWORD y: 52 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B33 -> B34 falseDestination: B33 -> B157 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4582080415526971107
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v40|QWORD, y: v39|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.007057615809059412 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    probability 4582035083090615391
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B150"
    from_bci -1
    to_bci -1
    predecessors "B149" 
    successors 
    xhandlers
    flags 
    probability 4577936391812347867
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B94" 
    xhandlers
    flags 
    probability 4575295933574210854
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B92 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B93" "B92" 
    successors "B95" "B96" 
    xhandlers
    flags 
    probability 4577144435309065000
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|DWORD = MOVE v81|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v104|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:710) [bci: 1074]
locals: v0|QWORD[.] - v100|QWORD - - v4|DWORD - - - v71|DWORD v101|DWORD v76|DWORD v104|DWORD v81|DWORD int[0|0x0] v76|DWORD - - - - - - - - - - - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|DWORD, rdx|DWORD] [] callTarget: HotSpotMethod<FDBigInteger.valueOfPow52(int, int)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1074] <|@ <|@
      nr   -1  <|@ instruction v166|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:710) [bci: 1077]
stack: Object[null] 
locals: v0|QWORD[.] - v100|QWORD - - v4|DWORD - - - v71|DWORD v101|DWORD v76|DWORD v104|DWORD v81|DWORD int[0|0x0] v76|DWORD - - - - - - - - - - - - - - - - - 
>@ <|@ instruction NULLCHECK [v166|QWORD[.]] state [bci:1077] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v166|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:711) [bci: 1081]
locals: v0|QWORD[.] - v100|QWORD - - v4|DWORD - - - v71|DWORD v101|DWORD v76|DWORD v104|DWORD v81|DWORD int[0|0x0] v76|DWORD - - - - - - - - - v166|QWORD[.] - - - - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<FDBigInteger.getNormalizationBias()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1081] <|@ <|@
      nr   -1  <|@ instruction v167|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v166|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v167|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:712) [bci: 1090]
locals: v0|QWORD[.] - v100|QWORD - - v4|DWORD - - - v71|DWORD v101|DWORD v76|DWORD v104|DWORD v81|DWORD int[0|0x0] v76|DWORD - - - - - - - - - - v167|DWORD - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<FDBigInteger.leftShift(int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1090] <|@ <|@
      nr   -1  <|@ instruction v168|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v169|DWORD = ADD (x: v167|DWORD, y: v101|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v100|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v76|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v169|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:714) [bci: 1103]
locals: v0|QWORD[.] - - - - v4|DWORD - - - v71|DWORD - - v104|DWORD v81|DWORD int[0|0x0] v76|DWORD - - - - - - - - - v168|QWORD[.] v167|DWORD - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD, rdx|DWORD, rcx|DWORD] [] callTarget: HotSpotMethod<FDBigInteger.valueOfMulPow52(long, int, int)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1103] <|@ <|@
      nr   -1  <|@ instruction v170|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:714) [bci: 1106]
stack: Object[null] 
locals: v0|QWORD[.] - - - - v4|DWORD - - - v71|DWORD - - v104|DWORD v81|DWORD int[0|0x0] v76|DWORD - - - - - - - - - v168|QWORD[.] v167|DWORD - - - - - - 
>@ <|@ instruction NULLCHECK [v170|QWORD[.]] state [bci:1106] <|@ <|@
      nr   -1  <|@ instruction v171|DWORD = INC v167|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|DWORD = MOVE v78|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v171|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:715) [bci: 1119]
locals: v0|QWORD[.] - - - - v4|DWORD - - - v71|DWORD - - v104|DWORD v81|DWORD - - - - - - - - - - - v168|QWORD[.] v167|DWORD v170|QWORD[.] - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|DWORD, rdx|DWORD] [] callTarget: HotSpotMethod<FDBigInteger.valueOfPow52(int, int)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1119] <|@ <|@
      nr   -1  <|@ instruction v172|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v173|DWORD = ADD (x: v104|DWORD, y: v167|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v174|DWORD = INC v173|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|DWORD = MOVE v83|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v174|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:717) [bci: 1135]
locals: v0|QWORD[.] - - - - v4|DWORD - - - v71|DWORD - - - - - - - - - - - - - - - v168|QWORD[.] - v170|QWORD[.] v172|QWORD[.] - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|DWORD, rdx|DWORD] [] callTarget: HotSpotMethod<FDBigInteger.valueOfPow52(int, int)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1135] <|@ <|@
      nr   -1  <|@ instruction v175|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:717) [bci: 1138]
stack: Object[null] 
locals: v0|QWORD[.] - - - - v4|DWORD - - - v71|DWORD - - - - - - - - - - - - - - - v168|QWORD[.] - v170|QWORD[.] v172|QWORD[.] - - - - 
>@ <|@ instruction NULLCHECK [v175|QWORD[.]] state [bci:1138] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v170|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v168|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:724) [bci: 1147]
locals: v0|QWORD[.] - - - - v4|DWORD - - - v71|DWORD - - - - - - - int[0|0x0] - - - - - - - v168|QWORD[.] - v170|QWORD[.] v172|QWORD[.] v175|QWORD[.] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<FDBigInteger.quoRemIteration(FDBigInteger)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1147] <|@ <|@
      nr   -1  <|@ instruction v176|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v170|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v172|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:725) [bci: 1156]
locals: v0|QWORD[.] - - - - v4|DWORD - - - v71|DWORD - - - - - - - int[0|0x0] - - - - v176|DWORD - - v168|QWORD[.] - v170|QWORD[.] v172|QWORD[.] v175|QWORD[.] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<FDBigInteger.cmp(FDBigInteger)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1156] <|@ <|@
      nr   -1  <|@ instruction v177|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v177|DWORD, y: v177|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B94 -> B95 falseDestination: B94 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B97" "B98" 
    xhandlers
    flags 
    probability 4577144435309065000
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v175|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v170|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE v172|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:726) [bci: 1175]
locals: v0|QWORD[.] - - - - v4|DWORD - - - v71|DWORD - - - - - - - int[0|0x0] int[0|0x0] - - - v176|DWORD - - v168|QWORD[.] - v170|QWORD[.] v172|QWORD[.] v175|QWORD[.] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] [] callTarget: HotSpotMethod<FDBigInteger.addAndCmp(FDBigInteger, FDBigInteger)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1175] <|@ <|@
      nr   -1  <|@ instruction v178|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v178|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B96 -> B97 falseDestination: B96 -> B98 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B96" 
    successors "B99" "B100" 
    xhandlers
    flags 
    probability 4577144435309065000
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v176|DWORD, y: v176|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.11184606133493691 condition: = trueDestination: B98 -> B99 falseDestination: B98 -> B100 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B98" 
    successors "B101" "B103" 
    xhandlers
    flags 
    probability 4576474386411764849
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v180|DWORD[.] = MOV [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:726) [bci: 1178]
stack: v178|DWORD 
locals: v0|QWORD[.] - - - - v4|DWORD - - - v71|DWORD - - - - - - - int[0|0x0] int[0|0x0] - - - v176|DWORD - - v168|QWORD[.] - v170|QWORD[.] v172|QWORD[.] v175|QWORD[.] - - - 
>@ <|@ instruction CMP [v180|DWORD[.] * 8 + 12] y: 0 size: DWORD state [bci:1178] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B100 -> B101 falseDestination: B100 -> B103 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B104" 
    xhandlers
    flags 
    probability 4576474386411764849
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v182|DWORD = LEA [v176|DWORD + 48] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v180|DWORD[.] * 8 + 16], y: v182|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v71|DWORD, int[1|0x1]] destination: B103 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B99" "B103" 
    successors "B105" "B106" 
    xhandlers
    flags 
    probability 4577144435309065000
    begin_IR
      LIR
      nr   -1  <|@ instruction [v183|DWORD, v184|DWORD] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v4|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.057125676488274206 condition: = trueDestination: B104 -> B105 falseDestination: B104 -> B106 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B107" "B108" 
    xhandlers
    flags 
    probability 4576802206033562235
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v183|DWORD y: -3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: < trueDestination: B106 -> B107 falseDestination: B106 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B106" 
    successors "B109" "B152" 
    xhandlers
    flags 
    probability 4575122898532446136
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v183|DWORD y: 8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B108 -> B109 falseDestination: B108 -> B152 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B110" 
    xhandlers
    flags 
    probability 4575122898532446136
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B109 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B109" "B105" "B107" 
    successors "B111" 
    xhandlers
    flags 
    probability 4577144435309065000
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v184|DWORD, int[0|0x0], int[0|0x0], v172|QWORD[.]] destination: B110 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B110" "B115" "B128" 
    successors "B112" "B134" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4595485752836987786
    begin_IR
      LIR
      nr   -1  <|@ instruction [v185|DWORD, v186|DWORD, v187|DWORD, v188|QWORD[.]] = LABEL numbPhis: 4 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v186|DWORD, y: v186|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9453314326443336 condition: = trueDestination: B111 -> B112 falseDestination: B111 -> B134 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B113" "B133" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4595140371449736969
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v187|DWORD, y: v187|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9951368468672246 condition: = trueDestination: B112 -> B113 falseDestination: B112 -> B133 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B112" 
    successors "B114" "B117" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4595111326991487063
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:744) [bci: 1268]
locals: v0|QWORD[.] - - - - - - - - v183|DWORD - - - - - - - v185|DWORD int[0|0x0] int[0|0x0] - - - - - v168|QWORD[.] - v170|QWORD[.] Object[null] v175|QWORD[.] - - - 
>@ <|@ instruction NULLCHECK [v188|QWORD[.]] state [bci:1268] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v170|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v168|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:745) [bci: 1282]
locals: v0|QWORD[.] - - - - - - - - v183|DWORD - - - - - - - v185|DWORD - - - - - - - v168|QWORD[.] - v170|QWORD[.] v188|QWORD[.] v175|QWORD[.] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<FDBigInteger.quoRemIteration(FDBigInteger)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1282] <|@ <|@
      nr   -1  <|@ instruction v189|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v188|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:747) [bci: 1312]
locals: v0|QWORD[.] - - - - - - - - v183|DWORD - - - - - - - v185|DWORD - - - - v189|DWORD - - v168|QWORD[.] - v170|QWORD[.] - v175|QWORD[.] - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<FDBigInteger.multBy10()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1312] <|@ <|@
      nr   -1  <|@ instruction v190|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:747) [bci: 1315]
stack: v190|QWORD[.] 
locals: v0|QWORD[.] - - - - - - - - v183|DWORD - - - - - - - v185|DWORD - - - - v189|DWORD - - v168|QWORD[.] - v170|QWORD[.] - v175|QWORD[.] - - - 
>@ <|@ instruction v191|DWORD = MOV [v190|QWORD[.] + 12] size: DWORD state [bci:1315] <|@ <|@
      nr   -1  <|@ instruction v192|DWORD = MOV [v190|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v193|DWORD = MOV [v170|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v194|DWORD = ADD (x: v191|DWORD, y: v192|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v195|DWORD = ADD (x: v193|DWORD, ~y: [v170|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v196|DWORD = LEA [v189|DWORD + 48] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v197|DWORD = INC v185|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v195|DWORD, y: v194|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.2175262580341747 condition: > trueDestination: B113 -> B114 falseDestination: B113 -> B117 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B113" 
    successors "B118" "B119" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4593818501724479617
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v194|DWORD, y: v195|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B117 -> B118 falseDestination: B117 -> B119 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B117" 
    successors "B120" "B121" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4593818501724479617
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v193|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B119 -> B120 falseDestination: B119 -> B121 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B119" 
    successors "B122" "B123" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4593818501724479617
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v192|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B121 -> B122 falseDestination: B121 -> B123 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B123"
    from_bci -1
    to_bci -1
    predecessors "B121" 
    successors "B124" "B131" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4593818501724479617
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v202|DWORD[.] = MOV [v170|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v203|DWORD = DEC v193|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:747) [bci: 1315]
stack: v190|QWORD[.] 
locals: v0|QWORD[.] - - - - - - - - v183|DWORD - - - - - - - v185|DWORD - - - - v189|DWORD - - v168|QWORD[.] - v170|QWORD[.] - v175|QWORD[.] - - - 
>@ <|@ instruction CMP (x: v203|DWORD, y: [v202|DWORD[.] * 8 + 12]) size: DWORD state [bci:1315] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B123 -> B124 falseDestination: B123 -> B131 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B124"
    from_bci -1
    to_bci -1
    predecessors "B123" 
    successors "B125" "B130" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4593818501724479617
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v204|DWORD[.] = MOV [v190|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v205|DWORD = DEC v192|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:747) [bci: 1315]
stack: v190|QWORD[.] 
locals: v0|QWORD[.] - - - - - - - - v183|DWORD - - - - - - - v185|DWORD - - - - v189|DWORD - - v168|QWORD[.] - v170|QWORD[.] - v175|QWORD[.] - - - 
>@ <|@ instruction CMP (x: v205|DWORD, y: [v204|DWORD[.] * 8 + 12]) size: DWORD state [bci:1315] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B124 -> B125 falseDestination: B124 -> B130 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B125"
    from_bci -1
    to_bci -1
    predecessors "B124" 
    successors "B126" "B127" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4593818501724479617
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v206|QWORD[.] = UNCOMPRESSPOINTER (input: v202|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@e9a9e99 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v207|DWORD = MOV [v206|QWORD[.] + v203|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v208|QWORD[.] = UNCOMPRESSPOINTER (input: v204|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@e9a9e99 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v209|DWORD = MOV [v208|QWORD[.] + v205|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v209|DWORD, y: v207|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B125 -> B126 falseDestination: B125 -> B127 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B127"
    from_bci -1
    to_bci -1
    predecessors "B125" 
    successors "B128" "B129" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4593818501724479617
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v209|DWORD, y: v207|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v210|DWORD = SETCC condition: |>| <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v175|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v170|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE v190|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:749) [bci: 1340]
locals: v0|QWORD[.] - - - - - - - - v183|DWORD - - - - - - - v185|DWORD v210|DWORD - - - v189|DWORD - - v168|QWORD[.] - v170|QWORD[.] v190|QWORD[.] v175|QWORD[.] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] [] callTarget: HotSpotMethod<FDBigInteger.addAndCmp(FDBigInteger, FDBigInteger)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1340] <|@ <|@
      nr   -1  <|@ instruction v211|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v212|DWORD[.] = MOV [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:749) [bci: 1343]
stack: v211|DWORD 
locals: v0|QWORD[.] - - - - - - - - v183|DWORD - - - - - - - v185|DWORD v210|DWORD - - - v189|DWORD - - v168|QWORD[.] - v170|QWORD[.] v190|QWORD[.] v175|QWORD[.] - - - 
>@ <|@ instruction CMP (x: v185|DWORD, y: [v212|DWORD[.] * 8 + 12]) size: DWORD state [bci:1343] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B127 -> B128 falseDestination: B127 -> B129 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B128"
    from_bci -1
    to_bci -1
    predecessors "B127" 
    successors "B111" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4593818501724479617
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v213|QWORD[.] = UNCOMPRESSPOINTER (input: v212|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@e9a9e99 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v213|QWORD[.] + v185|DWORD * 2 + 16], y: v196|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction CMP v211|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v214|DWORD = SETCC condition: < <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v197|DWORD, v210|DWORD, v214|DWORD, v190|QWORD[.]] destination: B128 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B113" 
    successors "B115" "B116" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4585332122103824215
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v175|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v170|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE v190|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:749) [bci: 1340]
locals: v0|QWORD[.] - - - - - - - - v183|DWORD - - - - - - - v185|DWORD int[0|0x0] - - - v189|DWORD - - v168|QWORD[.] - v170|QWORD[.] v190|QWORD[.] v175|QWORD[.] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] [] callTarget: HotSpotMethod<FDBigInteger.addAndCmp(FDBigInteger, FDBigInteger)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1340] <|@ <|@
      nr   -1  <|@ instruction v198|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v199|DWORD[.] = MOV [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:749) [bci: 1343]
stack: v198|DWORD 
locals: v0|QWORD[.] - - - - - - - - v183|DWORD - - - - - - - v185|DWORD int[0|0x0] - - - v189|DWORD - - v168|QWORD[.] - v170|QWORD[.] v190|QWORD[.] v175|QWORD[.] - - - 
>@ <|@ instruction CMP (x: v185|DWORD, y: [v199|DWORD[.] * 8 + 12]) size: DWORD state [bci:1343] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B114 -> B115 falseDestination: B114 -> B116 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors "B111" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4585332122103824215
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v200|QWORD[.] = UNCOMPRESSPOINTER (input: v199|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@e9a9e99 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v200|QWORD[.] + v185|DWORD * 2 + 16], y: v196|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction CMP v198|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v201|DWORD = SETCC condition: < <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v197|DWORD, int[0|0x0], v201|DWORD, v190|QWORD[.]] destination: B115 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B134"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B135" 
    xhandlers
    flags 
    probability 4576679723977066507
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B134 -> B135 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B135"
    from_bci -1
    to_bci -1
    predecessors "B134" "B133" 
    successors "B136" "B137" 
    xhandlers
    flags 
    probability 4577144435309065001
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v187|DWORD, y: v187|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.04269392663860493 condition: = trueDestination: B135 -> B136 falseDestination: B135 -> B137 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B137"
    from_bci -1
    to_bci -1
    predecessors "B135" 
    successors "B138" "B139" 
    xhandlers
    flags 
    probability 4576888663955794513
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v186|DWORD, y: v186|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.08103015075376885 condition: = trueDestination: B137 -> B138 falseDestination: B137 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B139"
    from_bci -1
    to_bci -1
    predecessors "B137" 
    successors "B140" 
    xhandlers
    flags 
    probability 4576423952623796022
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v170|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:753) [bci: 1385]
locals: v0|QWORD[.] - - - - - - - - v183|DWORD - - - - - - - v185|DWORD v186|DWORD v187|DWORD - - - - - - - - - v175|QWORD[.] - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<FDBigInteger.leftShift(int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1385] <|@ <|@
      nr   -1  <|@ instruction v216|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:753) [bci: 1388]
stack: Object[null] 
locals: v0|QWORD[.] - - - - - - - - v183|DWORD - - - - - - - v185|DWORD v186|DWORD v187|DWORD - - - - - - - - - v175|QWORD[.] - - - 
>@ <|@ instruction NULLCHECK [v216|QWORD[.]] state [bci:1388] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v216|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v175|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:754) [bci: 1394]
locals: v0|QWORD[.] - - - - - - - - v183|DWORD - - - - - - - v185|DWORD v186|DWORD v187|DWORD - - - - - - - v216|QWORD[.] - - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<FDBigInteger.cmp(FDBigInteger)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1394] <|@ <|@
      nr   -1  <|@ instruction v217|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v218|QWORD = MOVSXD v217|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v218|QWORD, v216|QWORD[.]] destination: B139 -> B140 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B140"
    from_bci -1
    to_bci -1
    predecessors "B139" "B136" "B138" 
    successors "B141" "B142" 
    xhandlers
    flags 
    probability 4577144435309065002
    begin_IR
      LIR
      nr   -1  <|@ instruction [v219|QWORD, v220|QWORD[.]] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v221|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[FDBigInteger@241972498] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v220|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v221|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:758) [bci: 1412]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] - - - - - - - - v183|DWORD - - - - - - - v185|DWORD v186|DWORD v187|DWORD v219|QWORD - - - - - - - - - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<FDBigInteger.cmp(FDBigInteger)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1412] <|@ <|@
      nr   -1  <|@ instruction v222|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v222|DWORD, y: v222|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B140 -> B141 falseDestination: B140 -> B142 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B142"
    from_bci -1
    to_bci -1
    predecessors "B140" 
    successors "B143" 
    xhandlers
    flags 
    probability 4577144435309065002
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v183|DWORD, v185|DWORD, v186|DWORD, v187|DWORD, v219|QWORD, byte[0|0x0]] destination: B142 -> B143 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B94" 
    xhandlers
    flags 
    probability 4568817853797302867
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B93 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B77" 
    xhandlers
    flags 
    probability 4567956811517496389
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0], int[0|0x0], v71|DWORD, int[1|0x1]] destination: B71 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B106" 
    successors "B110" 
    xhandlers
    flags 
    probability 4567795006778821243
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B107 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4564636031887714146
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = SUB (x: v1|DWORD, ~y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = DEC v12|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v13|DWORD y: 2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B13" 
    xhandlers
    flags 
    probability 4560132432260343650
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v14|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:sun.misc.FloatingDecimal$BinaryToASCIIBuffer] <|@ <|@
      nr   -1  <|@ instruction v15|DWORD[.] = MOV [v14|QWORD[.] + 104] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:443) [bci: 67]
locals: v0|QWORD[.] v1|DWORD v2|QWORD - v3|DWORD v4|DWORD v5|DWORD v7|DWORD - - - - - - - - - - - - - - - - - - - - - - - - - 
>@ <|@ instruction v16|DWORD = MOV [v15|DWORD[.] * 8 + 12] size: DWORD state [bci:67] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v16|DWORD, y: v13|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B9 -> B10 falseDestination: B9 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B15" 
    xhandlers
    flags 
    probability 4555628832632973154
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0]] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B98" 
    successors "B104" 
    xhandlers
    flags 
    probability 4563003214077343158
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v179|DWORD = DEC v71|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v179|DWORD, int[0|0x0]] destination: B99 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B133"
    from_bci -1
    to_bci -1
    predecessors "B112" 
    successors "B135" 
    xhandlers
    flags 
    probability 4560574604583547353
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B133 -> B135 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B138"
    from_bci -1
    to_bci -1
    predecessors "B137" 
    successors "B140" 
    xhandlers
    flags 
    probability 4560574604583547320
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0], v170|QWORD[.]] destination: B138 -> B140 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B15" 
    xhandlers
    flags 
    probability 4560132432260343650
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0]] destination: B8 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B110" 
    xhandlers
    flags 
    probability 4558614891679615696
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B105 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B136"
    from_bci -1
    to_bci -1
    predecessors "B135" 
    successors "B140" 
    xhandlers
    flags 
    probability 4556820306948856563
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0], v170|QWORD[.]] destination: B136 -> B140 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4555628832632973154
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v16|DWORD, y: v13|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B10 -> B11 falseDestination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B15" 
    xhandlers
    flags 
    probability 4555628832632973154
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v17|QWORD[.] = UNCOMPRESSPOINTER (input: v15|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@e9a9e99 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = MOV [v17|QWORD[.] + v13|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v18|DWORD] destination: B11 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B77" 
    xhandlers
    flags 
    probability 4554257208233383042
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0], int[0|0x0], v127|DWORD, int[0|0x0]] destination: B66 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B40" 
    xhandlers
    flags 
    probability 4551025052825482075
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v235|QWORD = MOVE input: long[4503599627370496|0x10000000000000] <|@ <|@
      nr   -1  <|@ instruction v47|QWORD = AND (x: v39|QWORD, y: v24|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v48|QWORD = OR (x: v47|QWORD, y: v235|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v49|DWORD = MOVE input: int[1075|0x433] <|@ <|@
      nr   -1  <|@ instruction v50|DWORD = SUB (x: v49|DWORD, ~y: v44|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v50|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v51|QWORD = SHR (x: v48|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v52|DWORD = MOV v51|QWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v52|DWORD] destination: B24 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B40" 
    xhandlers
    flags 
    probability 4549934575870362106
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v234|QWORD = MOVE input: long[4503599627370496|0x10000000000000] <|@ <|@
      nr   -1  <|@ instruction v56|QWORD = AND (x: v39|QWORD, y: v24|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v57|QWORD = OR (x: v56|QWORD, y: v234|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v58|DWORD = MOVE input: int[1075|0x433] <|@ <|@
      nr   -1  <|@ instruction v59|DWORD = SUB (x: v58|DWORD, ~y: v44|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v59|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v60|QWORD = SHR (x: v57|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v61|DWORD = MOV v60|QWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v61|DWORD] destination: B35 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B102" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-291867|0xfffffffffffb8be5]] destination: B101 -> B102 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B97" "B101" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v181|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v181|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:726) [bci: 1178]
stack: v178|DWORD 
locals: v0|QWORD[.] - - - - v4|DWORD - - - v71|DWORD - - - - - - - int[0|0x0] int[0|0x0] - - - v176|DWORD - - v168|QWORD[.] - v170|QWORD[.] v172|QWORD[.] v175|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:1178] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B154" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-290587|0xfffffffffffb90e5]] destination: B69 -> B154 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B154"
    from_bci -1
    to_bci -1
    predecessors "B60" "B153" "B64" "B91" "B69" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr   -1  <|@ instruction [v230|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v230|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:554) [bci: 278]
locals: v0|QWORD[.] - v100|QWORD - - v4|DWORD - v7|DWORD - v71|DWORD v98|DWORD v76|DWORD v99|DWORD v81|DWORD v97|DWORD v76|DWORD - - - - - - - - - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:278] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B158" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-226843|0xfffffffffffc89e5]] destination: B12 -> B158 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B158"
    from_bci -1
    to_bci -1
    predecessors "B17" "B16" "B27" "B26" "B12" "B157" 
    successors 
    xhandlers
    flags 
    probability 2366641604183195648
    begin_IR
      LIR
      nr   -1  <|@ instruction [v231|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v231|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:443) [bci: 67]
locals: v0|QWORD[.] v1|DWORD v2|QWORD - v3|DWORD v4|DWORD v5|DWORD v7|DWORD - - - - - - - - - - - - - - - - - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:67] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B129"
    from_bci -1
    to_bci -1
    predecessors "B127" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -274971 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:749) [bci: 1343]
stack: v211|DWORD 
locals: v0|QWORD[.] - - - - - - - - v183|DWORD - - - - - - - v185|DWORD v210|DWORD - - - v189|DWORD - - v168|QWORD[.] - v170|QWORD[.] v190|QWORD[.] v175|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:1343] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -288275 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 174]
locals: v0|QWORD[.] v1|DWORD v2|QWORD - v3|DWORD v4|DWORD v5|DWORD v7|DWORD v10|DWORD - - - - - - - - - - - - - - - - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:174] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B90" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-249363|0xfffffffffffc31ed]] destination: B74 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B74" "B89" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v165|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v165|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:680) [bci: 889]
locals: v0|QWORD[.] - - - - v4|DWORD - - - v129|DWORD - - - - - - - v130|DWORD v131|DWORD v132|DWORD - - - - - v124|QWORD - v112|QWORD - v121|QWORD - v118|QWORD - 
>@ <|@ instruction DEOPT info [bci:889] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B152"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -279571 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:741) [bci: 1243]
locals: v0|QWORD[.] - - - - v4|DWORD - - - v183|DWORD - - - - - - - v184|DWORD int[0|0x0] int[0|0x0] - - - - - v168|QWORD[.] - v170|QWORD[.] v172|QWORD[.] v175|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:1243] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B160" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-303123|0xfffffffffffb5fed]] destination: B2 -> B160 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B160"
    from_bci -1
    to_bci -1
    predecessors "B2" "B159" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v232|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v232|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:426) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|QWORD - v3|DWORD v4|DWORD - - - - - - - - - - - - - - - - - - - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B90" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-249619|0xfffffffffffc30ed]] destination: B89 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B153"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B154" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-229139|0xfffffffffffc80ed]] destination: B153 -> B154 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B126"
    from_bci -1
    to_bci -1
    predecessors "B125" 
    successors "B132" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-272403|0xfffffffffffbd7ed]] destination: B126 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B132"
    from_bci -1
    to_bci -1
    predecessors "B118" "B120" "B122" "B131" "B130" "B126" 
    successors 
    xhandlers
    flags 
    probability 2366641604183195648
    begin_IR
      LIR
      nr   -1  <|@ instruction [v215|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v215|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:747) [bci: 1315]
stack: v190|QWORD[.] 
locals: v0|QWORD[.] - - - - - - - - v183|DWORD - - - - - - - v185|DWORD - - - - v189|DWORD - - v168|QWORD[.] - v170|QWORD[.] - v175|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:1315] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -253203 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:725) [bci: 1159]
stack: v177|DWORD 
locals: v0|QWORD[.] - - - - v4|DWORD - - - v71|DWORD - - - - - - - int[0|0x0] - - - - v176|DWORD - - v168|QWORD[.] - v170|QWORD[.] v172|QWORD[.] v175|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:1159] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B117" 
    successors "B132" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-263187|0xfffffffffffbfbed]] destination: B118 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B155"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -231195 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Math.max(Math.java:1252) [bci: 10]
stack: v81|DWORD 
locals: - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:523) [bci: 202]
locals: v0|QWORD[.] v1|DWORD v2|QWORD - v3|DWORD v4|DWORD v5|DWORD v7|DWORD v10|DWORD v71|DWORD v84|DWORD v76|DWORD - - - - - - - - - - - - - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:10, 202] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -288531 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 174]
locals: v0|QWORD[.] v1|DWORD v2|QWORD - v3|DWORD v4|DWORD v5|DWORD v7|DWORD v10|DWORD - - - - - - - - - - - - - - - - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:174] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B148"
    from_bci -1
    to_bci -1
    predecessors "B147" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -285203 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:766) [bci: 1445]
locals: v0|QWORD[.] - - - - - - - - v223|DWORD - - - - - - - v224|DWORD v225|DWORD v226|DWORD long[0|0x0] - - - - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:1445] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B130"
    from_bci -1
    to_bci -1
    predecessors "B124" 
    successors "B132" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-270619|0xfffffffffffbdee5]] destination: B130 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B156"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -229395 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Math.max(Math.java:1252) [bci: 10]
stack: v76|DWORD 
locals: - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:520) [bci: 185]
locals: v0|QWORD[.] v1|DWORD v2|QWORD - v3|DWORD v4|DWORD v5|DWORD v7|DWORD v10|DWORD v71|DWORD - - - - - - - - - - - - - - - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:10, 185] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B158" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-287507|0xfffffffffffb9ced]] destination: B27 -> B158 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B154" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-235035|0xfffffffffffc69e5]] destination: B91 -> B154 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B141"
    from_bci -1
    to_bci -1
    predecessors "B140" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -303891 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:758) [bci: 1415]
stack: v0|QWORD[.] int[0|0x0] 
locals: v0|QWORD[.] - - - - - - - - v183|DWORD - - - - - - - v185|DWORD v186|DWORD v187|DWORD v219|QWORD - - - - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:1415] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B159"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B160" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-302867|0xfffffffffffb60ed]] destination: B159 -> B160 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -261147 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:749) [bci: 1343]
stack: v198|DWORD 
locals: v0|QWORD[.] - - - - - - - - v183|DWORD - - - - - - - v185|DWORD int[0|0x0] - - - v189|DWORD - - v168|QWORD[.] - v170|QWORD[.] v190|QWORD[.] v175|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:1343] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B96" 
    successors "B102" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-254483|0xfffffffffffc1ded]] destination: B97 -> B102 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B154" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-233491|0xfffffffffffc6fed]] destination: B60 -> B154 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -304923 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:683) [bci: 914]
locals: v0|QWORD[.] - - - - - - - - v135|DWORD - - - - - - - v140|DWORD int[0|0x0] int[0|0x0] - - - - - v143|QWORD - v112|QWORD - v144|QWORD - v118|QWORD - 
>@ <|@ instruction DEOPT info [bci:914] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B158" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-287763|0xfffffffffffb9bed]] destination: B26 -> B158 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B121" 
    successors "B132" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-263699|0xfffffffffffbf9ed]] destination: B122 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B158" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-222995|0xfffffffffffc98ed]] destination: B16 -> B158 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B119" 
    successors "B132" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-263443|0xfffffffffffbfaed]] destination: B120 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B154" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-245267|0xfffffffffffc41ed]] destination: B64 -> B154 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B158" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-222739|0xfffffffffffc99ed]] destination: B17 -> B158 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B131"
    from_bci -1
    to_bci -1
    predecessors "B123" 
    successors "B132" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-266523|0xfffffffffffbeee5]] destination: B131 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B157"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B158" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-288019|0xfffffffffffb9aed]] destination: B157 -> B158 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v137|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1454271960] <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -303371 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: v137|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:683) [bci: 914]
locals: v0|QWORD[.] - - - - - - - - v135|DWORD - - - - - - - v136|DWORD v133|DWORD v134|DWORD - - - - - v124|QWORD - v112|QWORD - v121|QWORD - v118|QWORD - 
>@ <|@ instruction DEOPT info [bci:914] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: getstatic     #15         // $assertionsDisabled:boolean
     3: ifne          20
     6: lload_2       
     7: lconst_0      
     8: lcmp          
     9: ifgt          20
    12: new           #21         // java.lang.AssertionError
    15: dup           
    16: invokespecial #16         // java.lang.AssertionError.<init>:()void
    19: athrow        
    20: getstatic     #15         // $assertionsDisabled:boolean
    23: ifne          44
    26: lload_2       
    27: ldc2_w        #31         // 4503599627370496
    30: land          
    31: lconst_0      
    32: lcmp          
    33: ifne          44
    36: new           #21         // java.lang.AssertionError
    39: dup           
    40: invokespecial #16         // java.lang.AssertionError.<init>:()void
    43: athrow        
    44: lload_2       
    45: invokestatic  #20         // java.lang.Long.numberOfTrailingZeros:(long)int
    48: istore        6
    50: bipush        53
    52: iload         6
    54: isub          
    55: istore        7
    57: aload_0       
    58: iconst_0      
    59: putfield      #5          // decimalDigitsRoundedUp:boolean
    62: aload_0       
    63: iconst_0      
    64: putfield      #4          // exactDecimalConversion:boolean
    67: iconst_0      
    68: iload         7
    70: iload_1       
    71: isub          
    72: iconst_1      
    73: isub          
    74: invokestatic  #21         // java.lang.Math.max:(int, int)int
    77: istore        8
    79: iload_1       
    80: bipush        62
    82: if_icmpgt     174
    85: iload_1       
    86: bipush        -21
    88: if_icmplt     174
    91: iload         8
    93: getstatic     #18         // sun.misc.FDBigInteger.LONG_5_POW:long[]
    96: arraylength   
    97: if_icmpge     174
   100: iload         7
   102: getstatic     #22         // N_5_BITS:int[]
   105: iload         8
   107: iaload        
   108: iadd          
   109: bipush        64
   111: if_icmpge     174
   114: iload         8
   116: ifne          174
   119: iload_1       
   120: iload         4
   122: if_icmple     139
   125: iload_1       
   126: iload         4
   128: isub          
   129: iconst_1      
   130: isub          
   131: invokestatic  #23         // insignificantDigitsForPow2:(int)int
   134: istore        9
   136: goto          142
   139: iconst_0      
   140: istore        9
   142: iload_1       
   143: bipush        52
   145: if_icmplt     158
   148: lload_2       
   149: iload_1       
   150: bipush        52
   152: isub          
   153: lshl          
   154: lstore_2      
   155: goto          165
   158: lload_2       
   159: bipush        52
   161: iload_1       
   162: isub          
   163: lushr         
   164: lstore_2      
   165: aload_0       
   166: iconst_0      
   167: lload_2       
   168: iload         9
   170: invokespecial #24         // developLongDigits:(int, long, int)void
   173: return        
   174: lload_2       
   175: iload_1       
   176: invokestatic  #25         // estimateDecExp:(long, int)int
   179: istore        9
   181: iconst_0      
   182: iload         9
   184: ineg          
   185: invokestatic  #21         // java.lang.Math.max:(int, int)int
   188: istore        11
   190: iload         11
   192: iload         8
   194: iadd          
   195: iload_1       
   196: iadd          
   197: istore        10
   199: iconst_0      
   200: iload         9
   202: invokestatic  #21         // java.lang.Math.max:(int, int)int
   205: istore        13
   207: iload         13
   209: iload         8
   211: iadd          
   212: istore        12
   214: iload         11
   216: istore        15
   218: iload         10
   220: iload         4
   222: isub          
   223: istore        14
   225: lload_2       
   226: iload         6
   228: lushr         
   229: lstore_2      
   230: iload         10
   232: iload         7
   234: iconst_1      
   235: isub          
   236: isub          
   237: istore        10
   239: iload         10
   241: iload         12
   243: invokestatic  #26         // java.lang.Math.min:(int, int)int
   246: istore        16
   248: iload         10
   250: iload         16
   252: isub          
   253: istore        10
   255: iload         12
   257: iload         16
   259: isub          
   260: istore        12
   262: iload         14
   264: iload         16
   266: isub          
   267: istore        14
   269: iload         7
   271: iconst_1      
   272: if_icmpne     278
   275: iinc          
   278: iload         14
   280: ifge          300
   283: iload         10
   285: iload         14
   287: isub          
   288: istore        10
   290: iload         12
   292: iload         14
   294: isub          
   295: istore        12
   297: iconst_0      
   298: istore        14
   300: iconst_0      
   301: istore        17
   303: iload         7
   305: iload         10
   307: iadd          
   308: iload         11
   310: getstatic     #22         // N_5_BITS:int[]
   313: arraylength   
   314: if_icmpge     326
   317: getstatic     #22         // N_5_BITS:int[]
   320: iload         11
   322: iaload        
   323: goto          330
   326: iload         11
   328: iconst_3      
   329: imul          
   330: iadd          
   331: istore        23
   333: iload         12
   335: iconst_1      
   336: iadd          
   337: iload         13
   339: iconst_1      
   340: iadd          
   341: getstatic     #22         // N_5_BITS:int[]
   344: arraylength   
   345: if_icmpge     359
   348: getstatic     #22         // N_5_BITS:int[]
   351: iload         13
   353: iconst_1      
   354: iadd          
   355: iaload        
   356: goto          365
   359: iload         13
   361: iconst_1      
   362: iadd          
   363: iconst_3      
   364: imul          
   365: iadd          
   366: istore        24
   368: iload         23
   370: bipush        64
   372: if_icmpge     1070
   375: iload         24
   377: bipush        64
   379: if_icmpge     1070
   382: iload         23
   384: bipush        32
   386: if_icmpge     728
   389: iload         24
   391: bipush        32
   393: if_icmpge     728
   396: lload_2       
   397: l2i           
   398: getstatic     #27         // sun.misc.FDBigInteger.SMALL_5_POW:int[]
   401: iload         11
   403: iaload        
   404: imul          
   405: iload         10
   407: ishl          
   408: istore        25
   410: getstatic     #27         // sun.misc.FDBigInteger.SMALL_5_POW:int[]
   413: iload         13
   415: iaload        
   416: iload         12
   418: ishl          
   419: istore        26
   421: getstatic     #27         // sun.misc.FDBigInteger.SMALL_5_POW:int[]
   424: iload         15
   426: iaload        
   427: iload         14
   429: ishl          
   430: istore        27
   432: iload         26
   434: bipush        10
   436: imul          
   437: istore        28
   439: iconst_0      
   440: istore        17
   442: iload         25
   444: iload         26
   446: idiv          
   447: istore        22
   449: bipush        10
   451: iload         25
   453: iload         26
   455: irem          
   456: imul          
   457: istore        25
   459: iload         27
   461: bipush        10
   463: imul          
   464: istore        27
   466: iload         25
   468: iload         27
   470: if_icmpge     477
   473: iconst_1      
   474: goto          478
   477: iconst_0      
   478: istore        18
   480: iload         25
   482: iload         27
   484: iadd          
   485: iload         28
   487: if_icmple     494
   490: iconst_1      
   491: goto          495
   494: iconst_0      
   495: istore        19
   497: getstatic     #15         // $assertionsDisabled:boolean
   500: ifne          520
   503: iload         22
   505: bipush        10
   507: if_icmplt     520
   510: new           #21         // java.lang.AssertionError
   513: dup           
   514: iload         22
   516: invokespecial #28         // java.lang.AssertionError.<init>:(int)void
   519: athrow        
   520: iload         22
   522: ifne          536
   525: iload         19
   527: ifne          536
   530: iinc          
   533: goto          552
   536: aload_0       
   537: getfield      #6          // digits:char[]
   540: iload         17
   542: iinc          
   545: bipush        48
   547: iload         22
   549: iadd          
   550: i2c           
   551: castore       
   552: iload         5
   554: ifeq          571
   557: iload         9
   559: bipush        -3
   561: if_icmplt     571
   564: iload         9
   566: bipush        8
   568: if_icmplt     577
   571: iconst_0      
   572: dup           
   573: istore        18
   575: istore        19
   577: iload         18
   579: ifne          701
   582: iload         19
   584: ifne          701
   587: iload         25
   589: iload         26
   591: idiv          
   592: istore        22
   594: bipush        10
   596: iload         25
   598: iload         26
   600: irem          
   601: imul          
   602: istore        25
   604: iload         27
   606: bipush        10
   608: imul          
   609: istore        27
   611: getstatic     #15         // $assertionsDisabled:boolean
   614: ifne          634
   617: iload         22
   619: bipush        10
   621: if_icmplt     634
   624: new           #21         // java.lang.AssertionError
   627: dup           
   628: iload         22
   630: invokespecial #28         // java.lang.AssertionError.<init>:(int)void
   633: athrow        
   634: iload         27
   636: i2l           
   637: lconst_0      
   638: lcmp          
   639: ifle          676
   642: iload         25
   644: iload         27
   646: if_icmpge     653
   649: iconst_1      
   650: goto          654
   653: iconst_0      
   654: istore        18
   656: iload         25
   658: iload         27
   660: iadd          
   661: iload         28
   663: if_icmple     670
   666: iconst_1      
   667: goto          671
   670: iconst_0      
   671: istore        19
   673: goto          682
   676: iconst_1      
   677: istore        18
   679: iconst_1      
   680: istore        19
   682: aload_0       
   683: getfield      #6          // digits:char[]
   686: iload         17
   688: iinc          
   691: bipush        48
   693: iload         22
   695: iadd          
   696: i2c           
   697: castore       
   698: goto          577
   701: iload         25
   703: iconst_1      
   704: ishl          
   705: iload         28
   707: isub          
   708: i2l           
   709: lstore        20
   711: aload_0       
   712: iload         25
   714: ifne          721
   717: iconst_1      
   718: goto          722
   721: iconst_0      
   722: putfield      #4          // exactDecimalConversion:boolean
   725: goto          1426
   728: lload_2       
   729: getstatic     #18         // sun.misc.FDBigInteger.LONG_5_POW:long[]
   732: iload         11
   734: laload        
   735: lmul          
   736: iload         10
   738: lshl          
   739: lstore        25
   741: getstatic     #18         // sun.misc.FDBigInteger.LONG_5_POW:long[]
   744: iload         13
   746: laload        
   747: iload         12
   749: lshl          
   750: lstore        27
   752: getstatic     #18         // sun.misc.FDBigInteger.LONG_5_POW:long[]
   755: iload         15
   757: laload        
   758: iload         14
   760: lshl          
   761: lstore        29
   763: lload         27
   765: ldc2_w        #29         // 10
   768: lmul          
   769: lstore        31
   771: iconst_0      
   772: istore        17
   774: lload         25
   776: lload         27
   778: ldiv          
   779: l2i           
   780: istore        22
   782: ldc2_w        #29         // 10
   785: lload         25
   787: lload         27
   789: lrem          
   790: lmul          
   791: lstore        25
   793: lload         29
   795: ldc2_w        #29         // 10
   798: lmul          
   799: lstore        29
   801: lload         25
   803: lload         29
   805: lcmp          
   806: ifge          813
   809: iconst_1      
   810: goto          814
   813: iconst_0      
   814: istore        18
   816: lload         25
   818: lload         29
   820: ladd          
   821: lload         31
   823: lcmp          
   824: ifle          831
   827: iconst_1      
   828: goto          832
   831: iconst_0      
   832: istore        19
   834: getstatic     #15         // $assertionsDisabled:boolean
   837: ifne          857
   840: iload         22
   842: bipush        10
   844: if_icmplt     857
   847: new           #21         // java.lang.AssertionError
   850: dup           
   851: iload         22
   853: invokespecial #28         // java.lang.AssertionError.<init>:(int)void
   856: athrow        
   857: iload         22
   859: ifne          873
   862: iload         19
   864: ifne          873
   867: iinc          
   870: goto          889
   873: aload_0       
   874: getfield      #6          // digits:char[]
   877: iload         17
   879: iinc          
   882: bipush        48
   884: iload         22
   886: iadd          
   887: i2c           
   888: castore       
   889: iload         5
   891: ifeq          908
   894: iload         9
   896: bipush        -3
   898: if_icmplt     908
   901: iload         9
   903: bipush        8
   905: if_icmplt     914
   908: iconst_0      
   909: dup           
   910: istore        18
   912: istore        19
   914: iload         18
   916: ifne          1042
   919: iload         19
   921: ifne          1042
   924: lload         25
   926: lload         27
   928: ldiv          
   929: l2i           
   930: istore        22
   932: ldc2_w        #29         // 10
   935: lload         25
   937: lload         27
   939: lrem          
   940: lmul          
   941: lstore        25
   943: lload         29
   945: ldc2_w        #29         // 10
   948: lmul          
   949: lstore        29
   951: getstatic     #15         // $assertionsDisabled:boolean
   954: ifne          974
   957: iload         22
   959: bipush        10
   961: if_icmplt     974
   964: new           #21         // java.lang.AssertionError
   967: dup           
   968: iload         22
   970: invokespecial #28         // java.lang.AssertionError.<init>:(int)void
   973: athrow        
   974: lload         29
   976: lconst_0      
   977: lcmp          
   978: ifle          1017
   981: lload         25
   983: lload         29
   985: lcmp          
   986: ifge          993
   989: iconst_1      
   990: goto          994
   993: iconst_0      
   994: istore        18
   996: lload         25
   998: lload         29
  1000: ladd          
  1001: lload         31
  1003: lcmp          
  1004: ifle          1011
  1007: iconst_1      
  1008: goto          1012
  1011: iconst_0      
  1012: istore        19
  1014: goto          1023
  1017: iconst_1      
  1018: istore        18
  1020: iconst_1      
  1021: istore        19
  1023: aload_0       
  1024: getfield      #6          // digits:char[]
  1027: iload         17
  1029: iinc          
  1032: bipush        48
  1034: iload         22
  1036: iadd          
  1037: i2c           
  1038: castore       
  1039: goto          914
  1042: lload         25
  1044: iconst_1      
  1045: lshl          
  1046: lload         31
  1048: lsub          
  1049: lstore        20
  1051: aload_0       
  1052: lload         25
  1054: lconst_0      
  1055: lcmp          
  1056: ifne          1063
  1059: iconst_1      
  1060: goto          1064
  1063: iconst_0      
  1064: putfield      #4          // exactDecimalConversion:boolean
  1067: goto          1426
  1070: iload         13
  1072: iload         12
  1074: invokestatic  #29         // sun.misc.FDBigInteger.valueOfPow52:(int, int)sun.misc.FDBigInteger
  1077: astore        25
  1079: aload         25
  1081: invokevirtual #30         // sun.misc.FDBigInteger.getNormalizationBias:()int
  1084: istore        26
  1086: aload         25
  1088: iload         26
  1090: invokevirtual #31         // sun.misc.FDBigInteger.leftShift:(int)sun.misc.FDBigInteger
  1093: astore        25
  1095: lload_2       
  1096: iload         11
  1098: iload         10
  1100: iload         26
  1102: iadd          
  1103: invokestatic  #32         // sun.misc.FDBigInteger.valueOfMulPow52:(long, int, int)sun.misc.FDBigInteger
  1106: astore        27
  1108: iload         15
  1110: iconst_1      
  1111: iadd          
  1112: iload         14
  1114: iload         26
  1116: iadd          
  1117: iconst_1      
  1118: iadd          
  1119: invokestatic  #29         // sun.misc.FDBigInteger.valueOfPow52:(int, int)sun.misc.FDBigInteger
  1122: astore        28
  1124: iload         13
  1126: iconst_1      
  1127: iadd          
  1128: iload         12
  1130: iload         26
  1132: iadd          
  1133: iconst_1      
  1134: iadd          
  1135: invokestatic  #29         // sun.misc.FDBigInteger.valueOfPow52:(int, int)sun.misc.FDBigInteger
  1138: astore        29
  1140: iconst_0      
  1141: istore        17
  1143: aload         27
  1145: aload         25
  1147: invokevirtual #33         // sun.misc.FDBigInteger.quoRemIteration:(sun.misc.FDBigInteger)int
  1150: istore        22
  1152: aload         27
  1154: aload         28
  1156: invokevirtual #34         // sun.misc.FDBigInteger.cmp:(sun.misc.FDBigInteger)int
  1159: ifge          1166
  1162: iconst_1      
  1163: goto          1167
  1166: iconst_0      
  1167: istore        18
  1169: aload         29
  1171: aload         27
  1173: aload         28
  1175: invokevirtual #35         // sun.misc.FDBigInteger.addAndCmp:(sun.misc.FDBigInteger, sun.misc.FDBigInteger)int
  1178: ifgt          1185
  1181: iconst_1      
  1182: goto          1186
  1185: iconst_0      
  1186: istore        19
  1188: getstatic     #15         // $assertionsDisabled:boolean
  1191: ifne          1211
  1194: iload         22
  1196: bipush        10
  1198: if_icmplt     1211
  1201: new           #21         // java.lang.AssertionError
  1204: dup           
  1205: iload         22
  1207: invokespecial #28         // java.lang.AssertionError.<init>:(int)void
  1210: athrow        
  1211: iload         22
  1213: ifne          1227
  1216: iload         19
  1218: ifne          1227
  1221: iinc          
  1224: goto          1243
  1227: aload_0       
  1228: getfield      #6          // digits:char[]
  1231: iload         17
  1233: iinc          
  1236: bipush        48
  1238: iload         22
  1240: iadd          
  1241: i2c           
  1242: castore       
  1243: iload         5
  1245: ifeq          1262
  1248: iload         9
  1250: bipush        -3
  1252: if_icmplt     1262
  1255: iload         9
  1257: bipush        8
  1259: if_icmplt     1268
  1262: iconst_0      
  1263: dup           
  1264: istore        18
  1266: istore        19
  1268: iload         18
  1270: ifne          1372
  1273: iload         19
  1275: ifne          1372
  1278: aload         27
  1280: aload         25
  1282: invokevirtual #33         // sun.misc.FDBigInteger.quoRemIteration:(sun.misc.FDBigInteger)int
  1285: istore        22
  1287: getstatic     #15         // $assertionsDisabled:boolean
  1290: ifne          1310
  1293: iload         22
  1295: bipush        10
  1297: if_icmplt     1310
  1300: new           #21         // java.lang.AssertionError
  1303: dup           
  1304: iload         22
  1306: invokespecial #28         // java.lang.AssertionError.<init>:(int)void
  1309: athrow        
  1310: aload         28
  1312: invokevirtual #36         // sun.misc.FDBigInteger.multBy10:()sun.misc.FDBigInteger
  1315: astore        28
  1317: aload         27
  1319: aload         28
  1321: invokevirtual #34         // sun.misc.FDBigInteger.cmp:(sun.misc.FDBigInteger)int
  1324: ifge          1331
  1327: iconst_1      
  1328: goto          1332
  1331: iconst_0      
  1332: istore        18
  1334: aload         29
  1336: aload         27
  1338: aload         28
  1340: invokevirtual #35         // sun.misc.FDBigInteger.addAndCmp:(sun.misc.FDBigInteger, sun.misc.FDBigInteger)int
  1343: ifgt          1350
  1346: iconst_1      
  1347: goto          1351
  1350: iconst_0      
  1351: istore        19
  1353: aload_0       
  1354: getfield      #6          // digits:char[]
  1357: iload         17
  1359: iinc          
  1362: bipush        48
  1364: iload         22
  1366: iadd          
  1367: i2c           
  1368: castore       
  1369: goto          1268
  1372: iload         19
  1374: ifeq          1403
  1377: iload         18
  1379: ifeq          1403
  1382: aload         27
  1384: iconst_1      
  1385: invokevirtual #31         // sun.misc.FDBigInteger.leftShift:(int)sun.misc.FDBigInteger
  1388: astore        27
  1390: aload         27
  1392: aload         29
  1394: invokevirtual #34         // sun.misc.FDBigInteger.cmp:(sun.misc.FDBigInteger)int
  1397: i2l           
  1398: lstore        20
  1400: goto          1406
  1403: lconst_0      
  1404: lstore        20
  1406: aload_0       
  1407: aload         27
  1409: getstatic     #37         // sun.misc.FDBigInteger.ZERO:sun.misc.FDBigInteger
  1412: invokevirtual #34         // sun.misc.FDBigInteger.cmp:(sun.misc.FDBigInteger)int
  1415: ifne          1422
  1418: iconst_1      
  1419: goto          1423
  1422: iconst_0      
  1423: putfield      #4          // exactDecimalConversion:boolean
  1426: aload_0       
  1427: iload         9
  1429: iconst_1      
  1430: iadd          
  1431: putfield      #8          // decExponent:int
  1434: aload_0       
  1435: iconst_0      
  1436: putfield      #9          // firstDigitIndex:int
  1439: aload_0       
  1440: iload         17
  1442: putfield      #10         // nDigits:int
  1445: iload         19
  1447: ifeq          1508
  1450: iload         18
  1452: ifeq          1504
  1455: lload         20
  1457: lconst_0      
  1458: lcmp          
  1459: ifne          1490
  1462: aload_0       
  1463: getfield      #6          // digits:char[]
  1466: aload_0       
  1467: getfield      #9          // firstDigitIndex:int
  1470: aload_0       
  1471: getfield      #10         // nDigits:int
  1474: iadd          
  1475: iconst_1      
  1476: isub          
  1477: caload        
  1478: iconst_1      
  1479: iand          
  1480: ifeq          1508
  1483: aload_0       
  1484: invokespecial #38         // roundup:()void
  1487: goto          1508
  1490: lload         20
  1492: lconst_0      
  1493: lcmp          
  1494: ifle          1508
  1497: aload_0       
  1498: invokespecial #38         // roundup:()void
  1501: goto          1508
  1504: aload_0       
  1505: invokespecial #38         // roundup:()void
  1508: return        
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B159" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|QWORD, r8|DWORD, r9|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@4a6681b7 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction stack:40|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction r10|QWORD = MOVE rcx|QWORD moveKind: QWORD <|@ <|@
      nr   10  <|@ instruction stack:44|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr   12  <|@ instruction CMP rdx|DWORD y: 63 size: DWORD <|@ <|@
      nr   14  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B159 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   16  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   18  <|@ instruction CMP rdx|DWORD y: -21 size: DWORD <|@ <|@
      nr   20  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B18" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   34  <|@ instruction MOVB (x: [rsi|QWORD[.] + 26], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   36  <|@ instruction MOVB (x: [rsi|QWORD[.] + 25], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   38  <|@ instruction r11|DWORD = TZCNT r10|QWORD size: QWORD <|@ <|@
      nr   40  <|@ instruction rcx|DWORD = MOVE input: int[53|0x35] <|@ <|@
      nr   42  <|@ instruction rbx|DWORD = SUB (x: rcx|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr   44  <|@ instruction rdi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[int[27]{0, 3, 5, 7, 10, ...}] <|@ <|@
      nr   46  <|@ instruction rcx|DWORD = SUB (x: rbx|DWORD, ~y: rdx|DWORD) size: DWORD <|@ <|@
      nr   48  <|@ instruction rax|DWORD = DEC rcx|DWORD size: DWORD <|@ <|@
      nr   50  <|@ instruction CMP rax|DWORD y: 1 size: DWORD <|@ <|@
      nr   52  <|@ instruction BRANCH trueDestinationProbability: 0.7447171657016569 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B17" 
    xhandlers
    flags 
    probability 4604883035445177204
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   56  <|@ instruction rcx|DWORD = ADD (x: rbx|DWORD, ~y: [rdi|QWORD[.] + 16]) size: DWORD <|@ <|@
      nr   58  <|@ instruction CMP rcx|DWORD y: 64 size: DWORD <|@ <|@
      nr   60  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B4 -> B5 falseDestination: B4 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B16" 
    xhandlers
    flags 
    probability 4604883035445177204
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   64  <|@ instruction CMP rdx|DWORD y: 52 size: DWORD <|@ <|@
      nr   66  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B5 -> B6 falseDestination: B5 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B14" 
    xhandlers
    flags 
    probability 4604883035445177204
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   70  <|@ instruction CMP (x: rdx|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr   72  <|@ instruction BRANCH trueDestinationProbability: 0.0020362233415496256 condition: > trueDestination: B6 -> B7 falseDestination: B6 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B15" 
    xhandlers
    flags 
    probability 4604869376833871008
    begin_IR
      LIR
      nr  144  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  146  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  148  <|@ instruction JUMP ~[] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B11" "B14" "B13" "B8" 
    successors 
    xhandlers
    flags 
    probability 4604883035445177204
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  152  <|@ instruction rcx|DWORD = MOVE input: int[52|0x34] <|@ <|@
      nr  154  <|@ instruction rcx|DWORD = SUB (x: rcx|DWORD, ~y: rdx|DWORD) size: DWORD <|@ <|@
      nr  156  <|@ instruction r10|QWORD = SHR (x: r10|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr  158  <|@ instruction rdx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  160  <|@ instruction rcx|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  162  <|@ st <@st|@reference-map: []
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:476) [bci: 170]
locals: - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD, rcx|QWORD, r8|DWORD] [] callTarget: HotSpotMethod<FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(int, long, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:170] <|@ <|@
      nr  164  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B19" "B28" 
    xhandlers
    flags 
    probability 4598270386627586328
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  192  <|@ instruction rbp|QWORD = MOVE input: long[4503599627370495|0xfffffffffffff] <|@ <|@
      nr  194  <|@ instruction rcx|QWORD = AND (x: r10|QWORD, y: rbp|QWORD) size: QWORD <|@ <|@
      nr  196  <|@ instruction r13|QWORD = MOVE input: long[4607182418800017408|0x3ff0000000000000] <|@ <|@
      nr  198  <|@ instruction rcx|QWORD = OR (x: rcx|QWORD, y: r13|QWORD) size: QWORD <|@ <|@
      nr  200  <|@ instruction xmm0|DOUBLE = VMOVQ rcx|QWORD nZ: XMM <|@ <|@
      nr  202  <|@ instruction xmm1|DOUBLE = VMOVE input: double[1.5|0x3ff8000000000000] <|@ <|@
      nr  204  <|@ instruction xmm0|DOUBLE = VSUBSD (x: xmm0|DOUBLE, y: xmm1|DOUBLE) nZ: XMM <|@ <|@
      nr  206  <|@ instruction xmm1|DOUBLE = VMOVE input: double[0.289529654|0x3fd287a762c9bd93] <|@ <|@
      nr  208  <|@ instruction xmm0|DOUBLE = VMULSD (x: xmm0|DOUBLE, y: xmm1|DOUBLE) nZ: XMM <|@ <|@
      nr  210  <|@ instruction xmm1|DOUBLE = VMOVE input: double[0.176091259|0x3fc68a288b421b8c] <|@ <|@
      nr  212  <|@ instruction xmm0|DOUBLE = VADDSD (x: xmm0|DOUBLE, y: xmm1|DOUBLE) nZ: XMM <|@ <|@
      nr  214  <|@ instruction xmm1|DOUBLE = VCVTSI2SD rdx|DWORD <|@ <|@
      nr  216  <|@ instruction xmm2|DOUBLE = VMOVE input: double[0.301029995663981|0x3fd34413509f79fb] <|@ <|@
      nr  218  <|@ instruction xmm1|DOUBLE = VMULSD (x: xmm1|DOUBLE, y: xmm2|DOUBLE) nZ: XMM <|@ <|@
      nr  220  <|@ instruction xmm0|DOUBLE = VADDSD (x: xmm0|DOUBLE, y: xmm1|DOUBLE) nZ: XMM <|@ <|@
      nr  222  <|@ instruction r13|QWORD = VMOVQ xmm0|DOUBLE <|@ <|@
      nr  224  <|@ instruction rcx|QWORD = MOVE input: long[-9223372036854775808|0x8000000000000000] <|@ <|@
      nr  226  <|@ instruction r14|QWORD = MOVE input: long[9218868437227405312|0x7ff0000000000000] <|@ <|@
      nr  228  <|@ instruction r14|QWORD = AND (x: r13|QWORD, y: r14|QWORD) size: QWORD <|@ <|@
      nr  230  <|@ instruction r14|QWORD = SHR r14|QWORD y: 52 size: QWORD <|@ <|@
      nr  232  <|@ instruction r14|DWORD = MOV r14|QWORD size: DWORD <|@ <|@
      nr  234  <|@ instruction r9|DWORD = LEA [r14|DWORD - 1023] size: DWORD <|@ <|@
      nr  236  <|@ instruction CMP rax|DWORD y: 27 size: DWORD <|@ <|@
      nr  238  <|@ instruction BRANCH trueDestinationProbability: 0.5429471082944717 condition: |<| trueDestination: B18 -> B19 falseDestination: B18 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B27" 
    xhandlers
    flags 
    probability 4594161794464019143
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  242  <|@ instruction rsi|DWORD = ADD (x: rbx|DWORD, ~y: [rdi|QWORD[.] + rax|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr  244  <|@ instruction CMP rsi|DWORD y: 64 size: DWORD <|@ <|@
      nr  246  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B19 -> B20 falseDestination: B19 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4594161794464019143
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  250  <|@ instruction TEST (x: r9|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  252  <|@ instruction BRANCH trueDestinationProbability: 0.8090044605656586 condition: < trueDestination: B20 -> B21 falseDestination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B30" 
    xhandlers
    flags 
    probability 4592744391825976755
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  256  <|@ instruction JUMP ~[] destination: B21 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B21" "B29" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4596608865853000038
    begin_IR
      LIR
      nr  338  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  340  <|@ instruction rsi|QWORD = MOVE input: long[9223372036854775807|0x7fffffffffffffff] <|@ <|@
      nr  342  <|@ instruction TEST (x: rsi|QWORD, y: r13|QWORD) size: QWORD <|@ <|@
      nr  344  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B40" 
    xhandlers
    flags 
    probability 4596608865853000038
    begin_IR
      LIR
      nr  362  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  364  <|@ instruction TEST (x: rcx|QWORD, y: r13|QWORD) size: QWORD <|@ <|@
      nr  366  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  368  <|@ instruction rsi|DWORD = CMOVE (falseValue: int[-1|0xffffffffffffffff], ~trueValue: rcx|DWORD) condition: = <|@ <|@
      nr  370  <|@ instruction r9|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr  372  <|@ instruction JUMP ~[] destination: B32 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B32" "B39" "B35" "B24" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4598270386627586327
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  472  <|@ instruction rcx|DWORD = NEG r9|DWORD size: DWORD <|@ <|@
      nr  474  <|@ instruction CMP rcx|DWORD y: 1 size: DWORD <|@ <|@
      nr  476  <|@ instruction BRANCH trueDestinationProbability: 0.7447175992468633 condition: < trueDestination: B40 -> B41 falseDestination: B40 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" 
    xhandlers
    flags 
    probability 4596017585297594603
    begin_IR
      LIR
      nr  478  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  480  <|@ instruction stack:56|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  482  <|@ instruction rsi|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  484  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  486  <|@ instruction JUMP ~[] destination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" "B42" 
    successors "B44" "B156" 
    xhandlers
    flags 
    probability 4598270386627586327
    begin_IR
      LIR
      nr  502  <|@ instruction [] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr  504  <|@ instruction CMP rcx|DWORD y: 27 size: DWORD <|@ <|@
      nr  506  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B43 -> B44 falseDestination: B43 -> B156 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4598270386627586327
    begin_IR
      LIR
      nr  508  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  510  <|@ instruction CMP r9|DWORD y: 1 size: DWORD <|@ <|@
      nr  512  <|@ instruction BRANCH trueDestinationProbability: 0.7447175992468633 condition: < trueDestination: B44 -> B45 falseDestination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4596017585297594603
    begin_IR
      LIR
      nr  514  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  516  <|@ instruction r14|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  518  <|@ instruction r13|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  520  <|@ instruction stack:52|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  522  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  524  <|@ instruction JUMP ~[] destination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" "B46" 
    successors "B48" "B155" 
    xhandlers
    flags 
    probability 4598270386627586327
    begin_IR
      LIR
      nr  542  <|@ instruction [] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr  544  <|@ instruction rsi|DWORD = ADD (x: rsi|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr  546  <|@ instruction CMP rax|DWORD y: 27 size: DWORD <|@ <|@
      nr  548  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B47 -> B48 falseDestination: B47 -> B155 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B49" "B52" 
    xhandlers
    flags 
    probability 4598270386627586327
    begin_IR
      LIR
      nr  550  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  552  <|@ instruction rdx|DWORD = MOVE input: int[52|0x34] <|@ <|@
      nr  554  <|@ instruction rdx|DWORD = SUB (x: rdx|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr  556  <|@ instruction rbp|DWORD = SUB (x: rsi|DWORD, ~y: rdx|DWORD) size: DWORD <|@ <|@
      nr  558  <|@ instruction rsi|DWORD = SUB (x: rsi|DWORD, ~y: r8|DWORD) size: DWORD <|@ <|@
      nr  560  <|@ instruction CMP (x: rbp|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr  562  <|@ instruction BRANCH trueDestinationProbability: 0.44790294112836976 condition: > trueDestination: B48 -> B49 falseDestination: B48 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B53" "B55" 
    xhandlers
    flags 
    probability 4594245951440238058
    begin_IR
      LIR
      nr  586  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  588  <|@ instruction r14|DWORD = SUB (x: r14|DWORD, ~y: rbp|DWORD) size: DWORD <|@ <|@
      nr  590  <|@ instruction rsi|DWORD = SUB (x: rsi|DWORD, ~y: rbp|DWORD) size: DWORD <|@ <|@
      nr  592  <|@ instruction CMP rbx|DWORD y: 1 size: DWORD <|@ <|@
      nr  594  <|@ instruction BRANCH trueDestinationProbability: 0.3803485753451483 condition: = trueDestination: B52 -> B53 falseDestination: B52 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B56" 
    xhandlers
    flags 
    probability 4590957515205589900
    begin_IR
      LIR
      nr  608  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  610  <|@ instruction rbp|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  612  <|@ instruction JUMP ~[] destination: B55 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B51" "B54" "B55" 
    successors "B57" "B153" 
    xhandlers
    flags 
    probability 4598270386627586327
    begin_IR
      LIR
      nr  614  <|@ instruction [] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr  616  <|@ instruction r8|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  618  <|@ instruction rcx|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  620  <|@ instruction r10|QWORD = SHR (x: r10|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr  622  <|@ instruction TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr  624  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B56 -> B57 falseDestination: B56 -> B153 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B58" "B93" 
    xhandlers
    flags 
    probability 4598270386627586327
    begin_IR
      LIR
      nr  626  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  628  <|@ instruction r11|DWORD = SUB (x: rbp|DWORD, ~y: rsi|DWORD) size: DWORD <|@ <|@
      nr  630  <|@ instruction rcx|DWORD = ADD (x: r11|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  632  <|@ instruction rcx|DWORD = ADD (x: rcx|DWORD, ~y: [rdi|QWORD[.] + r8|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr  634  <|@ instruction rdx|DWORD = SUB (x: r14|DWORD, ~y: rsi|DWORD) size: DWORD <|@ <|@
      nr  636  <|@ instruction CMP rcx|DWORD y: 64 size: DWORD <|@ <|@
      nr  638  <|@ instruction BRANCH trueDestinationProbability: 0.9886664055615392 condition: < trueDestination: B57 -> B58 falseDestination: B57 -> B93 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B59" "B92" 
    xhandlers
    flags 
    probability 4598218266070781714
    begin_IR
      LIR
      nr  640  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  642  <|@ instruction stack:48|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  644  <|@ instruction rbx|DWORD = INC rdx|DWORD size: DWORD <|@ <|@
      nr  646  <|@ instruction rbx|DWORD = ADD (x: rbx|DWORD, ~y: [rdi|QWORD[.] + rax|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr  648  <|@ instruction CMP rbx|DWORD y: 64 size: DWORD <|@ <|@
      nr  650  <|@ instruction BRANCH trueDestinationProbability: 0.9702874687399411 condition: < trueDestination: B58 -> B59 falseDestination: B58 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B60" "B61" 
    xhandlers
    flags 
    probability 4597991127864395515
    begin_IR
      LIR
      nr  652  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  654  <|@ instruction CMP rcx|DWORD y: 32 size: DWORD <|@ <|@
      nr  656  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B59 -> B60 falseDestination: B59 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" "B91" 
    xhandlers
    flags 
    probability 4597991127864395515
    begin_IR
      LIR
      nr  674  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  676  <|@ instruction CMP r13|DWORD y: 27 size: DWORD <|@ <|@
      nr  678  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B61 -> B62 falseDestination: B61 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B63" "B68" 
    xhandlers
    flags 
    probability 4597991127864395515
    begin_IR
      LIR
      nr  680  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  682  <|@ instruction stack:60|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr  684  <|@ instruction stack:64|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr  686  <|@ instruction rbx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  688  <|@ instruction rcx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[long[27]{1, 5, 25, 125, 625, ...}] <|@ <|@
      nr  690  <|@ instruction rdi|QWORD = MOV [rcx|QWORD[.] + r8|DWORD * 8 + 16] size: QWORD <|@ <|@
      nr  692  <|@ instruction rax|QWORD = MOV [rcx|QWORD[.] + r13|DWORD * 8 + 16] size: QWORD <|@ <|@
      nr  694  <|@ instruction rcx|QWORD = IMUL (x: r10|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr  696  <|@ instruction rsi|QWORD = MOVE rcx|QWORD moveKind: QWORD <|@ <|@
      nr  698  <|@ instruction rcx|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  700  <|@ instruction rsi|QWORD = SHL (x: rsi|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr  702  <|@ instruction rcx|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  704  <|@ instruction r11|QWORD = SHL (x: rax|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr  706  <|@ instruction rax|QWORD = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  708  <|@ instruction (highResult: rdx|QWORD, lowResult: rax|QWORD) = CDQ rax|QWORD size: QWORD <|@ <|@
      nr  710  <|@ st <@st|@reference-map: [rbx:0]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:554) [bci: 278]
locals: rbx|QWORD[.] - r10|QWORD - - stack:44|DWORD - stack:48|DWORD - r9|DWORD stack:60|DWORD r8|DWORD r14|DWORD r13|DWORD stack:64|DWORD r8|DWORD - - - - - - - - - - - - - - - - - 
>@ <|@ instruction (highResult: rdx|QWORD, lowResult: rax|QWORD) = IDIV (highX: rdx|QWORD, lowX: rax|QWORD, y: r11|QWORD) size: QWORD state [bci:278] <|@ <|@
      nr  712  <|@ instruction rcx|DWORD[.] = MOV [rbx|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  714  <|@ instruction rsi|QWORD = SHL r11|QWORD y: 3 size: QWORD <|@ <|@
      nr  716  <|@ instruction rbp|QWORD = SHL r11|QWORD size: QWORD <|@ <|@
      nr  718  <|@ instruction rsi|QWORD = ADD (x: rsi|QWORD, y: rbp|QWORD) size: QWORD <|@ <|@
      nr  720  <|@ instruction rbp|QWORD = SHL rdi|QWORD y: 3 size: QWORD <|@ <|@
      nr  722  <|@ instruction rdi|QWORD = SHL rdi|QWORD size: QWORD <|@ <|@
      nr  724  <|@ instruction rbp|QWORD = ADD (x: rbp|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr  726  <|@ instruction rdi|QWORD = SHL rdx|QWORD y: 3 size: QWORD <|@ <|@
      nr  728  <|@ instruction rdx|QWORD = SHL rdx|QWORD size: QWORD <|@ <|@
      nr  730  <|@ instruction rdi|QWORD = ADD (x: rdi|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  732  <|@ instruction rdx|QWORD = ADD (x: rbp|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr  734  <|@ instruction rax|DWORD = MOV rax|QWORD size: DWORD <|@ <|@
      nr  736  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  738  <|@ instruction BRANCH trueDestinationProbability: 0.10789017046034499 condition: = trueDestination: B62 -> B63 falseDestination: B62 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B69" "B70" 
    xhandlers
    flags 
    probability 4597039201284261789
    begin_IR
      LIR
      nr  790  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  792  <|@ st <@st|@reference-map: [rcx:0, rbx:0]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:554) [bci: 278]
locals: rbx|QWORD[.] - r10|QWORD - - stack:44|DWORD - stack:48|DWORD - r9|DWORD stack:60|DWORD r8|DWORD r14|DWORD r13|DWORD stack:64|DWORD r8|DWORD - - - - - - - - - - - - - - - - - 
>@ <|@ instruction CMP [rcx|DWORD[.] * 8 + 12] y: 0 size: DWORD state [bci:278] <|@ <|@
      nr  794  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B68 -> B69 falseDestination: B68 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B71" "B72" 
    xhandlers
    flags 
    probability 4597039201284261789
    begin_IR
      LIR
      nr  814  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  816  <|@ instruction r10|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  818  <|@ instruction rax|DWORD = LEA [rax|DWORD + 48] size: DWORD <|@ <|@
      nr  820  <|@ instruction MOV (x: [rcx|DWORD[.] * 8 + 16], y: rax|DWORD) size: WORD <|@ <|@
      nr  822  <|@ instruction TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  824  <|@ instruction BRANCH trueDestinationProbability: 0.011534143105032153 condition: = trueDestination: B70 -> B71 falseDestination: B70 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B73" 
    xhandlers
    flags 
    probability 4596948413956274540
    begin_IR
      LIR
      nr  836  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  838  <|@ instruction rax|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  840  <|@ instruction r10|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  842  <|@ instruction JUMP ~[] destination: B72 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B67" "B72" 
    successors "B74" "B75" 
    xhandlers
    flags 
    probability 4597889360879007520
    begin_IR
      LIR
      nr  844  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  846  <|@ instruction CMP (x: rbp|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr  848  <|@ instruction r8|DWORD = SETCC condition: > <|@ <|@
      nr  850  <|@ instruction CMP (x: rdx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  852  <|@ instruction rdx|DWORD = SETCC condition: > <|@ <|@
      nr  854  <|@ instruction CMP r9|DWORD y: -3 size: DWORD <|@ <|@
      nr  856  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B73 -> B74 falseDestination: B73 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" "B89" 
    xhandlers
    flags 
    probability 4597889360879007520
    begin_IR
      LIR
      nr  866  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  868  <|@ instruction CMP r9|DWORD y: 8 size: DWORD <|@ <|@
      nr  870  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B75 -> B76 falseDestination: B75 -> B89 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B77" 
    xhandlers
    flags 
    probability 4597889360879007520
    begin_IR
      LIR
      nr  872  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  874  <|@ instruction JUMP ~[] destination: B76 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" "B66" "B71" 
    successors "B78" "B79" 
    xhandlers
    flags 
    probability 4597991127864395515
    begin_IR
      LIR
      nr  876  <|@ instruction [] = LABEL numbPhis: 4 align: false label: ? <|@ <|@
      nr  878  <|@ instruction TEST (x: rcx|DWORD[.], y: rcx|DWORD[.]) size: DWORD <|@ <|@
      nr  880  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B77 -> B78 falseDestination: B77 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B80" 
    xhandlers
    flags 
    probability 4597991127864395515
    begin_IR
      LIR
      nr  892  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  894  <|@ instruction r13|DWORD = MOV [rcx|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  896  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@e9a9e99 encoding: base: 0 shift: 3 <|@ <|@
      nr  898  <|@ instruction r14|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr  900  <|@ instruction rbp|QWORD = MOVE rdi|QWORD moveKind: QWORD <|@ <|@
      nr  902  <|@ instruction rdi|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  904  <|@ instruction JUMP ~[] destination: B79 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" "B84" "B85" 
    successors "B81" "B88" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4611068895554337385
    begin_IR
      LIR
      nr  906  <|@ instruction [] = LABEL numbPhis: 5 align: true label: ? <|@ <|@
      nr  908  <|@ instruction TEST (x: r8|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  910  <|@ instruction BRANCH trueDestinationProbability: 0.9044543048889694 condition: = trueDestination: B80 -> B81 falseDestination: B80 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B82" "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4610267259874414128
    begin_IR
      LIR
      nr  912  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  914  <|@ instruction TEST (x: rdi|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  916  <|@ instruction BRANCH trueDestinationProbability: 0.9603010975971522 condition: = trueDestination: B81 -> B82 falseDestination: B81 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors "B83" "B86" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4609966007107604873
    begin_IR
      LIR
      nr  918  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  920  <|@ instruction CMP (x: r13|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  922  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B82 -> B83 falseDestination: B82 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B84" "B85" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4609966007107604873
    begin_IR
      LIR
      nr  924  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  926  <|@ instruction rax|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr  928  <|@ instruction (highResult: rdx|QWORD, lowResult: rax|QWORD) = CDQ rax|QWORD size: QWORD <|@ <|@
      nr  930  <|@ st <@st|@reference-map: [rcx:0, rbx:0]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:683) [bci: 914]
locals: rbx|QWORD[.] - - - - - - - - r9|DWORD - - - - - - - r10|DWORD int[0|0x0] int[0|0x0] - - - - - rbp|QWORD - r11|QWORD - r14|QWORD - rsi|QWORD - 
>@ <|@ instruction (highResult: rdx|QWORD, lowResult: rax|QWORD) = IDIV (highX: rdx|QWORD, lowX: rax|QWORD, y: r11|QWORD) size: QWORD state [bci:914] <|@ <|@
      nr  932  <|@ instruction r8|DWORD = MOV rax|QWORD size: DWORD <|@ <|@
      nr  934  <|@ instruction rdi|DWORD = LEA [r8|DWORD + 48] size: DWORD <|@ <|@
      nr  936  <|@ instruction MOV (x: [rcx|QWORD[.] + r10|DWORD * 2 + 16], y: rdi|DWORD) size: WORD <|@ <|@
      nr  938  <|@ instruction rdi|QWORD = SHL rdx|QWORD y: 3 size: QWORD <|@ <|@
      nr  940  <|@ instruction rdx|QWORD = SHL rdx|QWORD size: QWORD <|@ <|@
      nr  942  <|@ instruction rdi|QWORD = ADD (x: rdi|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  944  <|@ instruction r10|DWORD = INC r10|DWORD size: DWORD <|@ <|@
      nr  946  <|@ instruction rdx|QWORD = SHL r14|QWORD y: 3 size: QWORD <|@ <|@
      nr  948  <|@ instruction r14|QWORD = SHL r14|QWORD size: QWORD <|@ <|@
      nr  950  <|@ instruction rdx|QWORD = ADD (x: rdx|QWORD, y: r14|QWORD) size: QWORD <|@ <|@
      nr  952  <|@ instruction CMP rdx|QWORD y: 1 size: QWORD <|@ <|@
      nr  954  <|@ instruction BRANCH trueDestinationProbability: 2.81873959865786E-4 condition: < trueDestination: B83 -> B84 falseDestination: B83 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B80" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4609963953039085360
    begin_IR
      LIR
      nr  970  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  972  <|@ instruction CMP (x: rdx|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr  974  <|@ instruction rax|DWORD = SETCC condition: > <|@ <|@
      nr  976  <|@ instruction rbp|QWORD = ADD (x: rdx|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr  978  <|@ instruction CMP (x: rbp|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  980  <|@ instruction rbp|DWORD = SETCC condition: > <|@ <|@
      nr  982  <|@ st <@st|@reference-map: [rcx:0, rbx:0]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:700) [bci: 1039]
locals: rbx|QWORD[.] - - - - - - - - r9|DWORD - - - - - - - r10|DWORD rax|DWORD rbp|DWORD - - r8|DWORD - - rdi|QWORD - r11|QWORD - rdx|QWORD - rsi|QWORD - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:1039] <|@ <|@
      nr  984  <|@ instruction r14|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  986  <|@ instruction r8|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  988  <|@ instruction stack:64|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr  990  <|@ instruction rbp|QWORD = MOVE rdi|QWORD moveKind: QWORD <|@ <|@
      nr  992  <|@ instruction rdi|DWORD = MOVE stack:64|DWORD moveKind: DWORD <|@ <|@
      nr  994  <|@ instruction JUMP ~[] destination: B85 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B80" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4557049088300125308
    begin_IR
      LIR
      nr  956  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  958  <|@ st <@st|@reference-map: [rcx:0, rbx:0]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:700) [bci: 1039]
locals: rbx|QWORD[.] - - - - - - - - r9|DWORD - - - - - - - r10|DWORD int[1|0x1] int[1|0x1] - - r8|DWORD - - rdi|QWORD - r11|QWORD - rdx|QWORD - rsi|QWORD - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:1039] <|@ <|@
      nr  960  <|@ instruction r14|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  962  <|@ instruction rbp|QWORD = MOVE rdi|QWORD moveKind: QWORD <|@ <|@
      nr  964  <|@ instruction rdi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  966  <|@ instruction r8|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  968  <|@ instruction JUMP ~[] destination: B84 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B143" 
    xhandlers
    flags 
    probability 4595581105729921479
    begin_IR
      LIR
      nr 1020  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1022  <|@ instruction rdx|QWORD = SHL rbp|QWORD size: QWORD <|@ <|@
      nr 1024  <|@ instruction rdx|QWORD = SUB (x: rdx|QWORD, ~y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1026  <|@ instruction TEST (x: rbp|QWORD, y: rbp|QWORD) size: QWORD <|@ <|@
      nr 1028  <|@ instruction rsi|DWORD = SETCC condition: = <|@ <|@
      nr 1030  <|@ instruction r11|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr 1032  <|@ instruction rsi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1034  <|@ instruction JUMP ~[] destination: B88 -> B143 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B143"
    from_bci -1
    to_bci -1
    predecessors "B88" "B142" "B87" 
    successors "B144" "B145" 
    xhandlers
    flags 
    probability 4598270386627586327
    begin_IR
      LIR
      nr 1770  <|@ instruction [] = LABEL numbPhis: 6 align: false label: ? <|@ <|@
      nr 1772  <|@ instruction MOVB (x: [rsi|QWORD[.] + 25], y: r11|DWORD) size: BYTE <|@ <|@
      nr 1774  <|@ instruction r11|DWORD = INC r9|DWORD size: DWORD <|@ <|@
      nr 1776  <|@ instruction MOV (x: [rsi|QWORD[.] + 12], y: r11|DWORD) size: DWORD <|@ <|@
      nr 1778  <|@ instruction MOV (x: [rsi|QWORD[.] + 16], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr 1780  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1782  <|@ instruction TEST (x: rdi|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr 1784  <|@ instruction BRANCH trueDestinationProbability: 0.6216282371371225 condition: = trueDestination: B143 -> B144 falseDestination: B143 -> B145 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B144"
    from_bci -1
    to_bci -1
    predecessors "B143" 
    successors 
    xhandlers
    flags 
    probability 4594885466776022457
    begin_IR
      LIR
      nr 1786  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1788  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B29" "B33" 
    xhandlers
    flags 
    probability 4593071939154919121
    begin_IR
      LIR
      nr  328  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  330  <|@ instruction TEST (x: r9|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  332  <|@ instruction BRANCH trueDestinationProbability: 0.8090044605656586 condition: < trueDestination: B28 -> B29 falseDestination: B28 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B30" 
    xhandlers
    flags 
    probability 4591466140625282328
    begin_IR
      LIR
      nr  334  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  336  <|@ instruction JUMP ~[] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4592903625202481288
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  566  <|@ instruction rbp|DWORD = SUB (x: rbp|DWORD, ~y: r14|DWORD) size: DWORD <|@ <|@
      nr  568  <|@ instruction rsi|DWORD = SUB (x: rsi|DWORD, ~y: r14|DWORD) size: DWORD <|@ <|@
      nr  570  <|@ instruction CMP rbx|DWORD y: 1 size: DWORD <|@ <|@
      nr  572  <|@ instruction BRANCH trueDestinationProbability: 0.3803485753451483 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B56" 
    xhandlers
    flags 
    probability 4589769855493975031
    begin_IR
      LIR
      nr  580  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  582  <|@ instruction r14|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  584  <|@ instruction JUMP ~[] destination: B51 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B145"
    from_bci -1
    to_bci -1
    predecessors "B143" 
    successors "B146" "B147" 
    xhandlers
    flags 
    probability 4591624594530912490
    begin_IR
      LIR
      nr 1790  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1792  <|@ instruction TEST (x: r8|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr 1794  <|@ instruction BRANCH trueDestinationProbability: 0.7008668650536939 condition: = trueDestination: B145 -> B146 falseDestination: B145 -> B147 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B146"
    from_bci -1
    to_bci -1
    predecessors "B145" 
    successors 
    xhandlers
    flags 
    probability 4589542575902081805
    begin_IR
      LIR
      nr 1796  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1798  <|@ st <@st|@reference-map: []
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:778) [bci: 1505]
locals: - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<FloatingDecimal$BinaryToASCIIBuffer.roundup()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1505] <|@ <|@
      nr 1800  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors "B143" 
    xhandlers
    flags 
    probability 4589484464932113000
    begin_IR
      LIR
      nr 1004  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1006  <|@ instruction rdx|QWORD = SHL rbp|QWORD size: QWORD <|@ <|@
      nr 1008  <|@ instruction rdx|QWORD = SUB (x: rdx|QWORD, ~y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1010  <|@ instruction TEST (x: rbp|QWORD, y: rbp|QWORD) size: QWORD <|@ <|@
      nr 1012  <|@ instruction rsi|DWORD = SETCC condition: = <|@ <|@
      nr 1014  <|@ instruction r11|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr 1016  <|@ instruction rsi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1018  <|@ instruction JUMP ~[] destination: B87 -> B143 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4589360357487768198
    begin_IR
      LIR
      nr  526  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  528  <|@ instruction r13|DWORD = ADD (x: rax|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  530  <|@ instruction r14|DWORD = INC r9|DWORD size: DWORD <|@ <|@
      nr  532  <|@ instruction stack:52|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  534  <|@ instruction rax|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  536  <|@ instruction r14|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr  538  <|@ instruction r13|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  540  <|@ instruction JUMP ~[] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" 
    xhandlers
    flags 
    probability 4589360357487768198
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  490  <|@ instruction rsi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  492  <|@ instruction rsi|DWORD = SUB (x: rsi|DWORD, ~y: r9|DWORD) size: DWORD <|@ <|@
      nr  494  <|@ instruction rbp|DWORD = SUB (x: rax|DWORD, ~y: r9|DWORD) size: DWORD <|@ <|@
      nr  496  <|@ instruction stack:56|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr  498  <|@ instruction rsi|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr  500  <|@ instruction JUMP ~[] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B54" 
    xhandlers
    flags 
    probability 4587886356549755024
    begin_IR
      LIR
      nr  596  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  598  <|@ instruction rbp|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  600  <|@ instruction JUMP ~[] destination: B53 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B50" "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4591660958128651480
    begin_IR
      LIR
      nr  602  <|@ instruction [] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr  604  <|@ instruction rsi|DWORD = DEC rsi|DWORD size: DWORD <|@ <|@
      nr  606  <|@ instruction JUMP ~[] destination: B54 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B54" 
    xhandlers
    flags 
    probability 4586428360452806945
    begin_IR
      LIR
      nr  574  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  576  <|@ instruction r14|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  578  <|@ instruction JUMP ~[] destination: B50 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B147"
    from_bci -1
    to_bci -1
    predecessors "B145" 
    successors "B148" "B149" 
    xhandlers
    flags 
    probability 4583985295923746675
    begin_IR
      LIR
      nr 1802  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1804  <|@ instruction TEST (x: rdx|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr 1806  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B147 -> B148 falseDestination: B147 -> B149 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B149"
    from_bci -1
    to_bci -1
    predecessors "B147" 
    successors "B150" "B151" 
    xhandlers
    flags 
    probability 4583985295923746675
    begin_IR
      LIR
      nr 1818  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1820  <|@ instruction CMP rdx|QWORD y: 1 size: QWORD <|@ <|@
      nr 1822  <|@ instruction BRANCH trueDestinationProbability: 0.4072231833910034 condition: < trueDestination: B149 -> B150 falseDestination: B149 -> B151 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B151"
    from_bci -1
    to_bci -1
    predecessors "B149" 
    successors 
    xhandlers
    flags 
    probability 4580593910908099462
    begin_IR
      LIR
      nr 1828  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1830  <|@ st <@st|@reference-map: []
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:775) [bci: 1498]
locals: - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<FloatingDecimal$BinaryToASCIIBuffer.roundup()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1498] <|@ <|@
      nr 1832  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" "B26" 
    xhandlers
    flags 
    probability 4583287530145046380
    begin_IR
      LIR
      nr  258  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  260  <|@ instruction CMP r9|DWORD y: 52 size: DWORD <|@ <|@
      nr  262  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B22 -> B23 falseDestination: B22 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4583287530145046380
    begin_IR
      LIR
      nr  264  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  266  <|@ instruction TEST (x: rcx|QWORD, y: r13|QWORD) size: QWORD <|@ <|@
      nr  268  <|@ instruction BRANCH trueDestinationProbability: 0.007057615809059412 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B37" 
    xhandlers
    flags 
    probability 4583233678357478789
    begin_IR
      LIR
      nr  300  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  302  <|@ instruction JUMP ~[] destination: B25 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" "B25" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4587137980351417586
    begin_IR
      LIR
      nr  420  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  422  <|@ instruction rcx|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  424  <|@ instruction rsi|QWORD = SHR (x: rbp|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr  426  <|@ instruction TEST (x: rsi|QWORD, y: r13|QWORD) size: QWORD <|@ <|@
      nr  428  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" 
    xhandlers
    flags 
    probability 4587137980351417586
    begin_IR
      LIR
      nr  446  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  448  <|@ instruction rcx|QWORD = MOVE input: long[4503599627370496|0x10000000000000] <|@ <|@
      nr  450  <|@ instruction r13|QWORD = AND (x: r13|QWORD, y: rbp|QWORD) size: QWORD <|@ <|@
      nr  452  <|@ instruction r13|QWORD = OR (x: r13|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  454  <|@ instruction rcx|DWORD = MOVE input: int[1075|0x433] <|@ <|@
      nr  456  <|@ instruction rcx|DWORD = SUB (x: rcx|DWORD, ~y: r14|DWORD) size: DWORD <|@ <|@
      nr  458  <|@ instruction r13|QWORD = SHR (x: r13|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr  460  <|@ instruction rcx|DWORD = MOV r13|QWORD size: DWORD <|@ <|@
      nr  462  <|@ instruction rsi|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  464  <|@ instruction rsi|DWORD = SUB (x: rsi|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  466  <|@ instruction r9|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr  468  <|@ instruction JUMP ~[] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B64" "B65" 
    xhandlers
    flags 
    probability 4583272634049493745
    begin_IR
      LIR
      nr  740  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  742  <|@ instruction rax|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  744  <|@ instruction CMP (x: rdx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  746  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B63 -> B64 falseDestination: B63 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" "B67" 
    xhandlers
    flags 
    probability 4583272634049493745
    begin_IR
      LIR
      nr  766  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  768  <|@ instruction r9|DWORD = DEC r9|DWORD size: DWORD <|@ <|@
      nr  770  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  772  <|@ instruction BRANCH trueDestinationProbability: 0.011534143105032153 condition: = trueDestination: B65 -> B66 falseDestination: B65 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B73" 
    xhandlers
    flags 
    probability 4583184796790287775
    begin_IR
      LIR
      nr  784  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  786  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  788  <|@ instruction JUMP ~[] destination: B67 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B34" "B157" 
    xhandlers
    flags 
    probability 4582080415526971107
    begin_IR
      LIR
      nr  374  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  376  <|@ instruction CMP r9|DWORD y: 52 size: DWORD <|@ <|@
      nr  378  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B33 -> B34 falseDestination: B33 -> B157 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4582080415526971107
    begin_IR
      LIR
      nr  380  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  382  <|@ instruction TEST (x: rcx|QWORD, y: r13|QWORD) size: QWORD <|@ <|@
      nr  384  <|@ instruction BRANCH trueDestinationProbability: 0.007057615809059412 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    probability 4582035083090615391
    begin_IR
      LIR
      nr  416  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  418  <|@ instruction JUMP ~[] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B150"
    from_bci -1
    to_bci -1
    predecessors "B149" 
    successors 
    xhandlers
    flags 
    probability 4577936391812347867
    begin_IR
      LIR
      nr 1824  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1826  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B94" 
    xhandlers
    flags 
    probability 4575295933574210854
    begin_IR
      LIR
      nr 1068  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1070  <|@ instruction stack:64|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr 1072  <|@ instruction stack:72|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr 1074  <|@ instruction stack:60|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr 1076  <|@ instruction stack:76|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr 1078  <|@ instruction stack:80|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr 1080  <|@ instruction JUMP ~[] destination: B92 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B93" "B92" 
    successors "B95" "B96" 
    xhandlers
    flags 
    probability 4577144435309065000
    begin_IR
      LIR
      nr 1096  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1098  <|@ instruction rsi|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr 1100  <|@ instruction rbp|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr 1102  <|@ instruction rdx|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr 1104  <|@ instruction stack:84|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr 1106  <|@ instruction stack:88|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr 1108  <|@ st <@st|@reference-map: [stack:104]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:710) [bci: 1074]
locals: stack:40|QWORD[.] - stack:72|QWORD - - stack:44|DWORD - - - stack:80|DWORD stack:64|DWORD stack:76|DWORD stack:88|DWORD stack:84|DWORD int[0|0x0] stack:76|DWORD - - - - - - - - - - - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|DWORD, rdx|DWORD] [] callTarget: HotSpotMethod<FDBigInteger.valueOfPow52(int, int)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1074] <|@ <|@
      nr 1110  <|@ st <@st|@reference-map: [rax:0, stack:104]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:710) [bci: 1077]
stack: Object[null] 
locals: stack:40|QWORD[.] - stack:72|QWORD - - stack:44|DWORD - - - stack:80|DWORD stack:64|DWORD stack:76|DWORD stack:88|DWORD stack:84|DWORD int[0|0x0] stack:76|DWORD - - - - - - - - - - - - - - - - - 
>@ <|@ instruction NULLCHECK [rax|QWORD[.]] state [bci:1077] <|@ <|@
      nr 1112  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1114  <|@ instruction stack:96|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1116  <|@ st <@st|@reference-map: [stack:48, stack:104]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:711) [bci: 1081]
locals: stack:40|QWORD[.] - stack:72|QWORD - - stack:44|DWORD - - - stack:80|DWORD stack:64|DWORD stack:76|DWORD stack:88|DWORD stack:84|DWORD int[0|0x0] stack:76|DWORD - - - - - - - - - stack:96|QWORD[.] - - - - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<FDBigInteger.getNormalizationBias()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1081] <|@ <|@
      nr 1118  <|@ instruction rsi|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1120  <|@ instruction rdx|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr 1122  <|@ instruction stack:100|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr 1124  <|@ st <@st|@reference-map: [stack:104]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:712) [bci: 1090]
locals: stack:40|QWORD[.] - stack:72|QWORD - - stack:44|DWORD - - - stack:80|DWORD stack:64|DWORD stack:76|DWORD stack:88|DWORD stack:84|DWORD int[0|0x0] stack:76|DWORD - - - - - - - - - - stack:100|DWORD - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<FDBigInteger.leftShift(int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1090] <|@ <|@
      nr 1126  <|@ instruction stack:96|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1128  <|@ instruction rcx|DWORD = ADD (x: stack:100|DWORD, y: stack:64|DWORD) size: DWORD <|@ <|@
      nr 1130  <|@ instruction rsi|QWORD = MOVE stack:72|QWORD moveKind: QWORD <|@ <|@
      nr 1132  <|@ instruction rdx|DWORD = MOVE stack:76|DWORD moveKind: DWORD <|@ <|@
      nr 1134  <|@ st <@st|@reference-map: [stack:48, stack:104]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:714) [bci: 1103]
locals: stack:40|QWORD[.] - - - - stack:44|DWORD - - - stack:80|DWORD - - stack:88|DWORD stack:84|DWORD int[0|0x0] stack:76|DWORD - - - - - - - - - stack:96|QWORD[.] stack:100|DWORD - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD, rdx|DWORD, rcx|DWORD] [] callTarget: HotSpotMethod<FDBigInteger.valueOfMulPow52(long, int, int)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1103] <|@ <|@
      nr 1136  <|@ instruction stack:72|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1138  <|@ st <@st|@reference-map: [stack:48, stack:72, stack:104]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:714) [bci: 1106]
stack: Object[null] 
locals: stack:40|QWORD[.] - - - - stack:44|DWORD - - - stack:80|DWORD - - stack:88|DWORD stack:84|DWORD int[0|0x0] stack:76|DWORD - - - - - - - - - stack:96|QWORD[.] stack:100|DWORD - - - - - - 
>@ <|@ instruction NULLCHECK [rax|QWORD[.]] state [bci:1106] <|@ <|@
      nr 1140  <|@ instruction rdx|DWORD = INC stack:100|DWORD size: DWORD <|@ <|@
      nr 1142  <|@ instruction rsi|DWORD = MOVE stack:56|DWORD moveKind: DWORD <|@ <|@
      nr 1144  <|@ st <@st|@reference-map: [stack:48, stack:72, stack:104]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:715) [bci: 1119]
locals: stack:40|QWORD[.] - - - - stack:44|DWORD - - - stack:80|DWORD - - stack:88|DWORD stack:84|DWORD - - - - - - - - - - - stack:96|QWORD[.] stack:100|DWORD stack:72|QWORD[.] - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|DWORD, rdx|DWORD] [] callTarget: HotSpotMethod<FDBigInteger.valueOfPow52(int, int)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1119] <|@ <|@
      nr 1146  <|@ instruction rdx|DWORD = ADD (x: stack:88|DWORD, y: stack:100|DWORD) size: DWORD <|@ <|@
      nr 1148  <|@ instruction rdx|DWORD = INC rdx|DWORD size: DWORD <|@ <|@
      nr 1150  <|@ instruction rsi|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr 1152  <|@ instruction stack:112|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1154  <|@ st <@st|@reference-map: [stack:32, stack:48, stack:72, stack:104]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:717) [bci: 1135]
locals: stack:40|QWORD[.] - - - - stack:44|DWORD - - - stack:80|DWORD - - - - - - - - - - - - - - - stack:96|QWORD[.] - stack:72|QWORD[.] stack:112|QWORD[.] - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|DWORD, rdx|DWORD] [] callTarget: HotSpotMethod<FDBigInteger.valueOfPow52(int, int)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1135] <|@ <|@
      nr 1156  <|@ instruction stack:120|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1158  <|@ st <@st|@reference-map: [stack:24, stack:32, stack:48, stack:72, stack:104]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:717) [bci: 1138]
stack: Object[null] 
locals: stack:40|QWORD[.] - - - - stack:44|DWORD - - - stack:80|DWORD - - - - - - - - - - - - - - - stack:96|QWORD[.] - stack:72|QWORD[.] stack:112|QWORD[.] - - - - 
>@ <|@ instruction NULLCHECK [rax|QWORD[.]] state [bci:1138] <|@ <|@
      nr 1160  <|@ instruction rsi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1162  <|@ instruction rdx|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1164  <|@ st <@st|@reference-map: [stack:24, stack:32, stack:48, stack:72, stack:104]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:724) [bci: 1147]
locals: stack:40|QWORD[.] - - - - stack:44|DWORD - - - stack:80|DWORD - - - - - - - int[0|0x0] - - - - - - - stack:96|QWORD[.] - stack:72|QWORD[.] stack:112|QWORD[.] stack:120|QWORD[.] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<FDBigInteger.quoRemIteration(FDBigInteger)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1147] <|@ <|@
      nr 1166  <|@ instruction rsi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1168  <|@ instruction rdx|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1170  <|@ instruction stack:60|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr 1172  <|@ st <@st|@reference-map: [stack:24, stack:32, stack:48, stack:72, stack:104]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:725) [bci: 1156]
locals: stack:40|QWORD[.] - - - - stack:44|DWORD - - - stack:80|DWORD - - - - - - - int[0|0x0] - - - - stack:60|DWORD - - stack:96|QWORD[.] - stack:72|QWORD[.] stack:112|QWORD[.] stack:120|QWORD[.] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<FDBigInteger.cmp(FDBigInteger)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1156] <|@ <|@
      nr 1174  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr 1176  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B94 -> B95 falseDestination: B94 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B97" "B98" 
    xhandlers
    flags 
    probability 4577144435309065000
    begin_IR
      LIR
      nr 1192  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1194  <|@ instruction rsi|QWORD[.] = MOVE stack:120|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1196  <|@ instruction rdx|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1198  <|@ instruction rcx|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1200  <|@ st <@st|@reference-map: [stack:24, stack:32, stack:48, stack:72, stack:104]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:726) [bci: 1175]
locals: stack:40|QWORD[.] - - - - stack:44|DWORD - - - stack:80|DWORD - - - - - - - int[0|0x0] int[0|0x0] - - - stack:60|DWORD - - stack:96|QWORD[.] - stack:72|QWORD[.] stack:112|QWORD[.] stack:120|QWORD[.] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] [] callTarget: HotSpotMethod<FDBigInteger.addAndCmp(FDBigInteger, FDBigInteger)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1175] <|@ <|@
      nr 1202  <|@ instruction CMP rax|DWORD y: 1 size: DWORD <|@ <|@
      nr 1204  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B96 -> B97 falseDestination: B96 -> B98 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B96" 
    successors "B99" "B100" 
    xhandlers
    flags 
    probability 4577144435309065000
    begin_IR
      LIR
      nr 1218  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1220  <|@ instruction r10|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr 1222  <|@ instruction TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr 1224  <|@ instruction BRANCH trueDestinationProbability: 0.11184606133493691 condition: = trueDestination: B98 -> B99 falseDestination: B98 -> B100 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B98" 
    successors "B101" "B103" 
    xhandlers
    flags 
    probability 4576474386411764849
    begin_IR
      LIR
      nr 1238  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1240  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1242  <|@ instruction rdx|DWORD[.] = MOV [rsi|QWORD[.] + 28] size: DWORD <|@ <|@
      nr 1244  <|@ st <@st|@reference-map: [rdx:0, rsi:0, stack:24, stack:32, stack:48, stack:72, stack:104]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:726) [bci: 1178]
stack: rax|DWORD 
locals: rsi|QWORD[.] - - - - stack:44|DWORD - - - stack:80|DWORD - - - - - - - int[0|0x0] int[0|0x0] - - - r10|DWORD - - stack:96|QWORD[.] - stack:72|QWORD[.] stack:112|QWORD[.] stack:120|QWORD[.] - - - 
>@ <|@ instruction CMP [rdx|DWORD[.] * 8 + 12] y: 0 size: DWORD state [bci:1178] <|@ <|@
      nr 1246  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B100 -> B101 falseDestination: B100 -> B103 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B104" 
    xhandlers
    flags 
    probability 4576474386411764849
    begin_IR
      LIR
      nr 1266  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1268  <|@ instruction r10|DWORD = LEA [r10|DWORD + 48] size: DWORD <|@ <|@
      nr 1270  <|@ instruction MOV (x: [rdx|DWORD[.] * 8 + 16], y: r10|DWORD) size: WORD <|@ <|@
      nr 1272  <|@ instruction r11|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1274  <|@ instruction r10|DWORD = MOVE stack:80|DWORD moveKind: DWORD <|@ <|@
      nr 1276  <|@ instruction rax|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1278  <|@ instruction JUMP ~[] destination: B103 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B99" "B103" 
    successors "B105" "B106" 
    xhandlers
    flags 
    probability 4577144435309065000
    begin_IR
      LIR
      nr 1280  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr 1282  <|@ instruction stack:60|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr 1284  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr 1286  <|@ instruction BRANCH trueDestinationProbability: 0.057125676488274206 condition: = trueDestination: B104 -> B105 falseDestination: B104 -> B106 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B107" "B108" 
    xhandlers
    flags 
    probability 4576802206033562235
    begin_IR
      LIR
      nr 1292  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1294  <|@ instruction CMP r10|DWORD y: -3 size: DWORD <|@ <|@
      nr 1296  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: < trueDestination: B106 -> B107 falseDestination: B106 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B106" 
    successors "B109" "B152" 
    xhandlers
    flags 
    probability 4575122898532446136
    begin_IR
      LIR
      nr 1302  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1304  <|@ instruction CMP r10|DWORD y: 8 size: DWORD <|@ <|@
      nr 1306  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B108 -> B109 falseDestination: B108 -> B152 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B110" 
    xhandlers
    flags 
    probability 4575122898532446136
    begin_IR
      LIR
      nr 1308  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1310  <|@ instruction JUMP ~[] destination: B109 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B109" "B105" "B107" 
    successors "B111" 
    xhandlers
    flags 
    probability 4577144435309065000
    begin_IR
      LIR
      nr 1312  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1314  <|@ instruction rcx|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1316  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1318  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1320  <|@ instruction stack:100|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr 1322  <|@ instruction rax|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1324  <|@ instruction r10|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1326  <|@ instruction JUMP ~[] destination: B110 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B110" "B115" "B128" 
    successors "B112" "B134" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4595485752836987786
    begin_IR
      LIR
      nr 1328  <|@ instruction [] = LABEL numbPhis: 4 align: true label: ? <|@ <|@
      nr 1330  <|@ instruction TEST (x: r8|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr 1332  <|@ instruction BRANCH trueDestinationProbability: 0.9453314326443336 condition: = trueDestination: B111 -> B112 falseDestination: B111 -> B134 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B113" "B133" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4595140371449736969
    begin_IR
      LIR
      nr 1334  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1336  <|@ instruction TEST (x: r9|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr 1338  <|@ instruction BRANCH trueDestinationProbability: 0.9951368468672246 condition: = trueDestination: B112 -> B113 falseDestination: B112 -> B133 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B112" 
    successors "B114" "B117" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4595111326991487063
    begin_IR
      LIR
      nr 1340  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1342  <|@ st <@st|@reference-map: [rax:0, rcx:0, r10:0, stack:24, stack:48, stack:72, stack:104]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:744) [bci: 1268]
locals: stack:40|QWORD[.] - - - - - - - - stack:60|DWORD - - - - - - - stack:100|DWORD int[0|0x0] int[0|0x0] - - - - - r10|QWORD[.] - rax|QWORD[.] Object[null] stack:120|QWORD[.] - - - 
>@ <|@ instruction NULLCHECK [rcx|QWORD[.]] state [bci:1268] <|@ <|@
      nr 1344  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1346  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1348  <|@ instruction stack:128|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1350  <|@ st <@st|@reference-map: [stack:16, stack:24, stack:48, stack:72, stack:104]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:745) [bci: 1282]
locals: stack:40|QWORD[.] - - - - - - - - stack:60|DWORD - - - - - - - stack:100|DWORD - - - - - - - stack:96|QWORD[.] - stack:72|QWORD[.] stack:128|QWORD[.] stack:120|QWORD[.] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<FDBigInteger.quoRemIteration(FDBigInteger)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1282] <|@ <|@
      nr 1352  <|@ instruction stack:88|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr 1354  <|@ instruction rsi|QWORD[.] = MOVE stack:128|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1356  <|@ st <@st|@reference-map: [stack:24, stack:48, stack:72, stack:104]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:747) [bci: 1312]
locals: stack:40|QWORD[.] - - - - - - - - stack:60|DWORD - - - - - - - stack:100|DWORD - - - - stack:88|DWORD - - stack:96|QWORD[.] - stack:72|QWORD[.] - stack:120|QWORD[.] - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<FDBigInteger.multBy10()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1312] <|@ <|@
      nr 1358  <|@ st <@st|@reference-map: [rax:0, stack:24, stack:48, stack:72, stack:104]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:747) [bci: 1315]
stack: rax|QWORD[.] 
locals: stack:40|QWORD[.] - - - - - - - - stack:60|DWORD - - - - - - - stack:100|DWORD - - - - stack:88|DWORD - - stack:96|QWORD[.] - stack:72|QWORD[.] - stack:120|QWORD[.] - - - 
>@ <|@ instruction rsi|DWORD = MOV [rax|QWORD[.] + 12] size: DWORD state [bci:1315] <|@ <|@
      nr 1360  <|@ instruction rdx|DWORD = MOV [rax|QWORD[.] + 16] size: DWORD <|@ <|@
      nr 1362  <|@ instruction r10|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1364  <|@ instruction rcx|DWORD = MOV [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr 1366  <|@ instruction rsi|DWORD = ADD (x: rsi|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr 1368  <|@ instruction r11|DWORD = ADD (x: rcx|DWORD, ~y: [r10|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr 1370  <|@ instruction r8|DWORD = MOVE stack:88|DWORD moveKind: DWORD <|@ <|@
      nr 1372  <|@ instruction r9|DWORD = LEA [r8|DWORD + 48] size: DWORD <|@ <|@
      nr 1374  <|@ instruction stack:56|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr 1376  <|@ instruction rbx|DWORD = INC stack:100|DWORD size: DWORD <|@ <|@
      nr 1378  <|@ instruction CMP (x: r11|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr 1380  <|@ instruction BRANCH trueDestinationProbability: 0.2175262580341747 condition: > trueDestination: B113 -> B114 falseDestination: B113 -> B117 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B113" 
    successors "B118" "B119" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4593818501724479617
    begin_IR
      LIR
      nr 1442  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1444  <|@ instruction CMP (x: rsi|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr 1446  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B117 -> B118 falseDestination: B117 -> B119 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B117" 
    successors "B120" "B121" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4593818501724479617
    begin_IR
      LIR
      nr 1460  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1462  <|@ instruction CMP rcx|DWORD y: 1 size: DWORD <|@ <|@
      nr 1464  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B119 -> B120 falseDestination: B119 -> B121 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B119" 
    successors "B122" "B123" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4593818501724479617
    begin_IR
      LIR
      nr 1478  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1480  <|@ instruction CMP rdx|DWORD y: 1 size: DWORD <|@ <|@
      nr 1482  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B121 -> B122 falseDestination: B121 -> B123 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B123"
    from_bci -1
    to_bci -1
    predecessors "B121" 
    successors "B124" "B131" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4593818501724479617
    begin_IR
      LIR
      nr 1496  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1498  <|@ instruction rsi|DWORD[.] = MOV [r10|QWORD[.] + 24] size: DWORD <|@ <|@
      nr 1500  <|@ instruction rcx|DWORD = DEC rcx|DWORD size: DWORD <|@ <|@
      nr 1502  <|@ st <@st|@reference-map: [rax:0, rsi:0, r10:0, stack:24, stack:48, stack:72, stack:104]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:747) [bci: 1315]
stack: rax|QWORD[.] 
locals: stack:40|QWORD[.] - - - - - - - - stack:60|DWORD - - - - - - - stack:100|DWORD - - - - r8|DWORD - - stack:96|QWORD[.] - r10|QWORD[.] - stack:120|QWORD[.] - - - 
>@ <|@ instruction CMP (x: rcx|DWORD, y: [rsi|DWORD[.] * 8 + 12]) size: DWORD state [bci:1315] <|@ <|@
      nr 1504  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B123 -> B124 falseDestination: B123 -> B131 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B124"
    from_bci -1
    to_bci -1
    predecessors "B123" 
    successors "B125" "B130" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4593818501724479617
    begin_IR
      LIR
      nr 1506  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1508  <|@ instruction r11|DWORD[.] = MOV [rax|QWORD[.] + 24] size: DWORD <|@ <|@
      nr 1510  <|@ instruction rdx|DWORD = DEC rdx|DWORD size: DWORD <|@ <|@
      nr 1512  <|@ st <@st|@reference-map: [rax:0, rsi:0, r10:0, r11:0, stack:24, stack:48, stack:72, stack:104]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:747) [bci: 1315]
stack: rax|QWORD[.] 
locals: stack:40|QWORD[.] - - - - - - - - stack:60|DWORD - - - - - - - stack:100|DWORD - - - - r8|DWORD - - stack:96|QWORD[.] - r10|QWORD[.] - stack:120|QWORD[.] - - - 
>@ <|@ instruction CMP (x: rdx|DWORD, y: [r11|DWORD[.] * 8 + 12]) size: DWORD state [bci:1315] <|@ <|@
      nr 1514  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B124 -> B125 falseDestination: B124 -> B130 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B125"
    from_bci -1
    to_bci -1
    predecessors "B124" 
    successors "B126" "B127" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4593818501724479617
    begin_IR
      LIR
      nr 1516  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1518  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@e9a9e99 encoding: base: 0 shift: 3 <|@ <|@
      nr 1520  <|@ instruction rsi|DWORD = MOV [rsi|QWORD[.] + rcx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 1522  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@e9a9e99 encoding: base: 0 shift: 3 <|@ <|@
      nr 1524  <|@ instruction rdx|DWORD = MOV [r11|QWORD[.] + rdx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 1526  <|@ instruction CMP (x: rdx|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr 1528  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B125 -> B126 falseDestination: B125 -> B127 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B127"
    from_bci -1
    to_bci -1
    predecessors "B125" 
    successors "B128" "B129" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4593818501724479617
    begin_IR
      LIR
      nr 1542  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1544  <|@ instruction stack:64|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1546  <|@ instruction CMP (x: rdx|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr 1548  <|@ instruction rbp|DWORD = SETCC condition: |>| <|@ <|@
      nr 1550  <|@ instruction rsi|QWORD[.] = MOVE stack:120|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1552  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1554  <|@ instruction rcx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1556  <|@ instruction stack:128|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1558  <|@ instruction stack:132|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr 1560  <|@ st <@st|@reference-map: [stack:16, stack:24, stack:48, stack:72, stack:104]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:749) [bci: 1340]
locals: stack:40|QWORD[.] - - - - - - - - stack:60|DWORD - - - - - - - stack:100|DWORD stack:132|DWORD - - - stack:88|DWORD - - stack:96|QWORD[.] - stack:72|QWORD[.] stack:128|QWORD[.] stack:120|QWORD[.] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] [] callTarget: HotSpotMethod<FDBigInteger.addAndCmp(FDBigInteger, FDBigInteger)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1340] <|@ <|@
      nr 1562  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1564  <|@ instruction rdx|DWORD[.] = MOV [rsi|QWORD[.] + 28] size: DWORD <|@ <|@
      nr 1566  <|@ instruction r10|DWORD = MOVE stack:100|DWORD moveKind: DWORD <|@ <|@
      nr 1568  <|@ st <@st|@reference-map: [rdx:0, rsi:0, stack:16, stack:24, stack:48, stack:72, stack:104]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:749) [bci: 1343]
stack: rax|DWORD 
locals: rsi|QWORD[.] - - - - - - - - stack:60|DWORD - - - - - - - r10|DWORD stack:132|DWORD - - - stack:88|DWORD - - stack:96|QWORD[.] - stack:72|QWORD[.] stack:128|QWORD[.] stack:120|QWORD[.] - - - 
>@ <|@ instruction CMP (x: r10|DWORD, y: [rdx|DWORD[.] * 8 + 12]) size: DWORD state [bci:1343] <|@ <|@
      nr 1570  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B127 -> B128 falseDestination: B127 -> B129 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B128"
    from_bci -1
    to_bci -1
    predecessors "B127" 
    successors "B111" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4593818501724479617
    begin_IR
      LIR
      nr 1572  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1574  <|@ instruction r9|DWORD = MOVE stack:56|DWORD moveKind: DWORD <|@ <|@
      nr 1576  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@e9a9e99 encoding: base: 0 shift: 3 <|@ <|@
      nr 1578  <|@ instruction MOV (x: [rdx|QWORD[.] + r10|DWORD * 2 + 16], y: r9|DWORD) size: WORD <|@ <|@
      nr 1580  <|@ instruction CMP rax|DWORD y: 1 size: DWORD <|@ <|@
      nr 1582  <|@ instruction r9|DWORD = SETCC condition: < <|@ <|@
      nr 1584  <|@ instruction rcx|QWORD[.] = MOVE stack:128|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1586  <|@ instruction r8|DWORD = MOVE stack:132|DWORD moveKind: DWORD <|@ <|@
      nr 1588  <|@ instruction stack:100|DWORD = STACKMOVE (input: stack:64|DWORD, ~backupSlot: stack:32|QWORD) scratch: rax <|@ <|@
      nr 1590  <|@ instruction rax|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1592  <|@ instruction r10|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1594  <|@ instruction JUMP ~[] destination: B128 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B113" 
    successors "B115" "B116" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4585332122103824215
    begin_IR
      LIR
      nr 1382  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1384  <|@ instruction stack:64|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1386  <|@ instruction stack:128|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1388  <|@ instruction rsi|QWORD[.] = MOVE stack:120|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1390  <|@ instruction rdx|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1392  <|@ instruction rcx|QWORD[.] = MOVE stack:128|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1394  <|@ st <@st|@reference-map: [stack:16, stack:24, stack:48, stack:72, stack:104]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:749) [bci: 1340]
locals: stack:40|QWORD[.] - - - - - - - - stack:60|DWORD - - - - - - - stack:100|DWORD int[0|0x0] - - - stack:88|DWORD - - stack:96|QWORD[.] - stack:72|QWORD[.] stack:128|QWORD[.] stack:120|QWORD[.] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] [] callTarget: HotSpotMethod<FDBigInteger.addAndCmp(FDBigInteger, FDBigInteger)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1340] <|@ <|@
      nr 1396  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1398  <|@ instruction rdx|DWORD[.] = MOV [rsi|QWORD[.] + 28] size: DWORD <|@ <|@
      nr 1400  <|@ instruction r10|DWORD = MOVE stack:100|DWORD moveKind: DWORD <|@ <|@
      nr 1402  <|@ st <@st|@reference-map: [rdx:0, rsi:0, stack:16, stack:24, stack:48, stack:72, stack:104]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:749) [bci: 1343]
stack: rax|DWORD 
locals: rsi|QWORD[.] - - - - - - - - stack:60|DWORD - - - - - - - r10|DWORD int[0|0x0] - - - stack:88|DWORD - - stack:96|QWORD[.] - stack:72|QWORD[.] stack:128|QWORD[.] stack:120|QWORD[.] - - - 
>@ <|@ instruction CMP (x: r10|DWORD, y: [rdx|DWORD[.] * 8 + 12]) size: DWORD state [bci:1343] <|@ <|@
      nr 1404  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B114 -> B115 falseDestination: B114 -> B116 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors "B111" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4585332122103824215
    begin_IR
      LIR
      nr 1406  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1408  <|@ instruction rbx|DWORD = MOVE stack:64|DWORD moveKind: DWORD <|@ <|@
      nr 1410  <|@ instruction r9|DWORD = MOVE stack:56|DWORD moveKind: DWORD <|@ <|@
      nr 1412  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@e9a9e99 encoding: base: 0 shift: 3 <|@ <|@
      nr 1414  <|@ instruction MOV (x: [rdx|QWORD[.] + r10|DWORD * 2 + 16], y: r9|DWORD) size: WORD <|@ <|@
      nr 1416  <|@ instruction CMP rax|DWORD y: 1 size: DWORD <|@ <|@
      nr 1418  <|@ instruction r9|DWORD = SETCC condition: < <|@ <|@
      nr 1420  <|@ instruction rcx|QWORD[.] = MOVE stack:128|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1422  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1424  <|@ instruction stack:100|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1426  <|@ instruction rax|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1428  <|@ instruction r10|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1430  <|@ instruction JUMP ~[] destination: B115 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B134"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B135" 
    xhandlers
    flags 
    probability 4576679723977066507
    begin_IR
      LIR
      nr 1648  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1650  <|@ instruction r10|DWORD = MOVE stack:100|DWORD moveKind: DWORD <|@ <|@
      nr 1652  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1654  <|@ instruction JUMP ~[] destination: B134 -> B135 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B135"
    from_bci -1
    to_bci -1
    predecessors "B134" "B133" 
    successors "B136" "B137" 
    xhandlers
    flags 
    probability 4577144435309065001
    begin_IR
      LIR
      nr 1656  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1658  <|@ instruction TEST (x: r9|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr 1660  <|@ instruction BRANCH trueDestinationProbability: 0.04269392663860493 condition: = trueDestination: B135 -> B136 falseDestination: B135 -> B137 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B137"
    from_bci -1
    to_bci -1
    predecessors "B135" 
    successors "B138" "B139" 
    xhandlers
    flags 
    probability 4576888663955794513
    begin_IR
      LIR
      nr 1674  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1676  <|@ instruction TEST (x: r8|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr 1678  <|@ instruction BRANCH trueDestinationProbability: 0.08103015075376885 condition: = trueDestination: B137 -> B138 falseDestination: B137 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B139"
    from_bci -1
    to_bci -1
    predecessors "B137" 
    successors "B140" 
    xhandlers
    flags 
    probability 4576423952623796022
    begin_IR
      LIR
      nr 1692  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1694  <|@ instruction stack:88|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr 1696  <|@ instruction stack:132|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr 1698  <|@ instruction rsi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1700  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1702  <|@ st <@st|@reference-map: [stack:24, stack:104]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:753) [bci: 1385]
locals: stack:40|QWORD[.] - - - - - - - - stack:60|DWORD - - - - - - - stack:100|DWORD stack:132|DWORD stack:88|DWORD - - - - - - - - - stack:120|QWORD[.] - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<FDBigInteger.leftShift(int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1385] <|@ <|@
      nr 1704  <|@ st <@st|@reference-map: [rax:0, stack:24, stack:104]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:753) [bci: 1388]
stack: Object[null] 
locals: stack:40|QWORD[.] - - - - - - - - stack:60|DWORD - - - - - - - stack:100|DWORD stack:132|DWORD stack:88|DWORD - - - - - - - - - stack:120|QWORD[.] - - - 
>@ <|@ instruction NULLCHECK [rax|QWORD[.]] state [bci:1388] <|@ <|@
      nr 1706  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1708  <|@ instruction rdx|QWORD[.] = MOVE stack:120|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1710  <|@ instruction stack:144|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1712  <|@ st <@st|@reference-map: [stack:0, stack:104]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:754) [bci: 1394]
locals: stack:40|QWORD[.] - - - - - - - - stack:60|DWORD - - - - - - - stack:100|DWORD stack:132|DWORD stack:88|DWORD - - - - - - - stack:144|QWORD[.] - - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<FDBigInteger.cmp(FDBigInteger)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1394] <|@ <|@
      nr 1714  <|@ instruction rsi|QWORD = MOVSXD rax|DWORD size: QWORD <|@ <|@
      nr 1716  <|@ instruction rax|QWORD[.] = MOVE stack:144|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1718  <|@ instruction stack:128|QWORD = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr 1720  <|@ instruction JUMP ~[] destination: B139 -> B140 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B140"
    from_bci -1
    to_bci -1
    predecessors "B139" "B136" "B138" 
    successors "B141" "B142" 
    xhandlers
    flags 
    probability 4577144435309065002
    begin_IR
      LIR
      nr 1722  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr 1724  <|@ instruction rdx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[FDBigInteger@241972498] <|@ <|@
      nr 1726  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1728  <|@ st <@st|@reference-map: [stack:104]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:758) [bci: 1412]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] - - - - - - - - stack:60|DWORD - - - - - - - stack:100|DWORD stack:132|DWORD stack:88|DWORD stack:128|QWORD - - - - - - - - - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<FDBigInteger.cmp(FDBigInteger)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1412] <|@ <|@
      nr 1730  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr 1732  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B140 -> B141 falseDestination: B140 -> B142 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B142"
    from_bci -1
    to_bci -1
    predecessors "B140" 
    successors "B143" 
    xhandlers
    flags 
    probability 4577144435309065002
    begin_IR
      LIR
      nr 1752  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1754  <|@ instruction r11|DWORD = MOVE input: byte[0|0x0] <|@ <|@
      nr 1756  <|@ instruction rdx|QWORD = MOVE stack:128|QWORD moveKind: QWORD <|@ <|@
      nr 1758  <|@ instruction rdi|DWORD = MOVE stack:88|DWORD moveKind: DWORD <|@ <|@
      nr 1760  <|@ instruction r8|DWORD = MOVE stack:132|DWORD moveKind: DWORD <|@ <|@
      nr 1762  <|@ instruction r10|DWORD = MOVE stack:100|DWORD moveKind: DWORD <|@ <|@
      nr 1764  <|@ instruction r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr 1766  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1768  <|@ instruction JUMP ~[] destination: B142 -> B143 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B94" 
    xhandlers
    flags 
    probability 4568817853797302867
    begin_IR
      LIR
      nr 1082  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1084  <|@ instruction stack:64|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr 1086  <|@ instruction stack:72|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr 1088  <|@ instruction stack:60|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr 1090  <|@ instruction stack:76|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr 1092  <|@ instruction stack:80|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr 1094  <|@ instruction JUMP ~[] destination: B93 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B77" 
    xhandlers
    flags 
    probability 4567956811517496389
    begin_IR
      LIR
      nr  826  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  828  <|@ instruction r10|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  830  <|@ instruction rdx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  832  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  834  <|@ instruction JUMP ~[] destination: B71 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B106" 
    successors "B110" 
    xhandlers
    flags 
    probability 4567795006778821243
    begin_IR
      LIR
      nr 1298  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1300  <|@ instruction JUMP ~[] destination: B107 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4564636031887714146
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   76  <|@ instruction stack:48|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr   78  <|@ instruction rsi|DWORD = SUB (x: rdx|DWORD, ~y: r8|DWORD) size: DWORD <|@ <|@
      nr   80  <|@ instruction rsi|DWORD = DEC rsi|DWORD size: DWORD <|@ <|@
      nr   82  <|@ instruction CMP rsi|DWORD y: 2 size: DWORD <|@ <|@
      nr   84  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B13" 
    xhandlers
    flags 
    probability 4560132432260343650
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   96  <|@ instruction rcx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:sun.misc.FloatingDecimal$BinaryToASCIIBuffer] <|@ <|@
      nr   98  <|@ instruction rcx|DWORD[.] = MOV [rcx|QWORD[.] + 104] size: DWORD <|@ <|@
      nr  100  <|@ st <@st|@reference-map: [rcx:0, stack:104]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:443) [bci: 67]
locals: stack:40|QWORD[.] rdx|DWORD r10|QWORD - r8|DWORD stack:44|DWORD r11|DWORD stack:48|DWORD - - - - - - - - - - - - - - - - - - - - - - - - - 
>@ <|@ instruction rbx|DWORD = MOV [rcx|DWORD[.] * 8 + 12] size: DWORD state [bci:67] <|@ <|@
      nr  102  <|@ instruction CMP (x: rbx|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr  104  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B9 -> B10 falseDestination: B9 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B15" 
    xhandlers
    flags 
    probability 4555628832632973154
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  138  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  140  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  142  <|@ instruction JUMP ~[] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B98" 
    successors "B104" 
    xhandlers
    flags 
    probability 4563003214077343158
    begin_IR
      LIR
      nr 1226  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1228  <|@ instruction rsi|DWORD = DEC stack:80|DWORD size: DWORD <|@ <|@
      nr 1230  <|@ instruction r11|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1232  <|@ instruction r10|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr 1234  <|@ instruction rax|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1236  <|@ instruction JUMP ~[] destination: B99 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B133"
    from_bci -1
    to_bci -1
    predecessors "B112" 
    successors "B135" 
    xhandlers
    flags 
    probability 4560574604583547353
    begin_IR
      LIR
      nr 1640  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1642  <|@ instruction r10|DWORD = MOVE stack:100|DWORD moveKind: DWORD <|@ <|@
      nr 1644  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1646  <|@ instruction JUMP ~[] destination: B133 -> B135 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B138"
    from_bci -1
    to_bci -1
    predecessors "B137" 
    successors "B140" 
    xhandlers
    flags 
    probability 4560574604583547320
    begin_IR
      LIR
      nr 1680  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1682  <|@ instruction rax|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1684  <|@ instruction stack:128|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1686  <|@ instruction stack:88|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr 1688  <|@ instruction stack:132|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr 1690  <|@ instruction JUMP ~[] destination: B138 -> B140 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B15" 
    xhandlers
    flags 
    probability 4560132432260343650
    begin_IR
      LIR
      nr   86  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   88  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   90  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr   92  <|@ instruction JUMP ~[] destination: B8 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B110" 
    xhandlers
    flags 
    probability 4558614891679615696
    begin_IR
      LIR
      nr 1288  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1290  <|@ instruction JUMP ~[] destination: B105 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B136"
    from_bci -1
    to_bci -1
    predecessors "B135" 
    successors "B140" 
    xhandlers
    flags 
    probability 4556820306948856563
    begin_IR
      LIR
      nr 1662  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1664  <|@ instruction rax|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1666  <|@ instruction stack:128|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1668  <|@ instruction stack:88|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr 1670  <|@ instruction stack:132|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr 1672  <|@ instruction JUMP ~[] destination: B136 -> B140 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4555628832632973154
    begin_IR
      LIR
      nr  106  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  108  <|@ instruction rax|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  110  <|@ instruction r13|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  112  <|@ instruction CMP (x: rbx|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr  114  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B10 -> B11 falseDestination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B15" 
    xhandlers
    flags 
    probability 4555628832632973154
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  118  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@e9a9e99 encoding: base: 0 shift: 3 <|@ <|@
      nr  120  <|@ instruction r8|DWORD = MOV [rcx|QWORD[.] + rsi|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  122  <|@ instruction rsi|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  124  <|@ instruction JUMP ~[] destination: B11 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B77" 
    xhandlers
    flags 
    probability 4554257208233383042
    begin_IR
      LIR
      nr  774  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  776  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  778  <|@ instruction rdx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  780  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  782  <|@ instruction JUMP ~[] destination: B66 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B40" 
    xhandlers
    flags 
    probability 4551025052825482075
    begin_IR
      LIR
      nr  270  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  272  <|@ instruction stack:52|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  274  <|@ instruction stack:48|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  276  <|@ instruction rax|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  278  <|@ instruction rbx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  280  <|@ instruction rcx|QWORD = MOVE input: long[4503599627370496|0x10000000000000] <|@ <|@
      nr  282  <|@ instruction r13|QWORD = AND (x: r13|QWORD, y: rbp|QWORD) size: QWORD <|@ <|@
      nr  284  <|@ instruction r13|QWORD = OR (x: r13|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  286  <|@ instruction rcx|DWORD = MOVE input: int[1075|0x433] <|@ <|@
      nr  288  <|@ instruction rcx|DWORD = SUB (x: rcx|DWORD, ~y: r14|DWORD) size: DWORD <|@ <|@
      nr  290  <|@ instruction r13|QWORD = SHR (x: r13|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr  292  <|@ instruction r9|DWORD = MOV r13|QWORD size: DWORD <|@ <|@
      nr  294  <|@ instruction rax|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  296  <|@ instruction rbx|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  298  <|@ instruction JUMP ~[] destination: B24 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B40" 
    xhandlers
    flags 
    probability 4549934575870362106
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  388  <|@ instruction stack:52|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  390  <|@ instruction stack:48|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  392  <|@ instruction rax|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  394  <|@ instruction rbx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  396  <|@ instruction rcx|QWORD = MOVE input: long[4503599627370496|0x10000000000000] <|@ <|@
      nr  398  <|@ instruction r13|QWORD = AND (x: r13|QWORD, y: rbp|QWORD) size: QWORD <|@ <|@
      nr  400  <|@ instruction r13|QWORD = OR (x: r13|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  402  <|@ instruction rcx|DWORD = MOVE input: int[1075|0x433] <|@ <|@
      nr  404  <|@ instruction rcx|DWORD = SUB (x: rcx|DWORD, ~y: r14|DWORD) size: DWORD <|@ <|@
      nr  406  <|@ instruction r13|QWORD = SHR (x: r13|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr  408  <|@ instruction r9|DWORD = MOV r13|QWORD size: DWORD <|@ <|@
      nr  410  <|@ instruction rax|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  412  <|@ instruction rbx|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  414  <|@ instruction JUMP ~[] destination: B35 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B102" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1248  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1250  <|@ instruction r11|DWORD = MOVE input: int[-291867|0xfffffffffffb8be5] <|@ <|@
      nr 1252  <|@ instruction rcx|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1254  <|@ instruction rbx|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1256  <|@ instruction JUMP ~[] destination: B101 -> B102 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B97" "B101" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1258  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1260  <|@ instruction MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD <|@ <|@
      nr 1262  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1264  <|@ st <@st|@reference-map: [rbx:0, stack:24, stack:32, stack:48, stack:72]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:726) [bci: 1178]
stack: rax|DWORD 
locals: rbx|QWORD[.] - - - - rcx|DWORD - - - stack:80|DWORD - - - - - - - int[0|0x0] int[0|0x0] - - - r10|DWORD - - stack:96|QWORD[.] - stack:72|QWORD[.] stack:112|QWORD[.] stack:120|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:1178] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B154" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  796  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  798  <|@ instruction rbp|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr  800  <|@ instruction rsi|DWORD = MOVE stack:64|DWORD moveKind: DWORD <|@ <|@
      nr  802  <|@ instruction r11|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  804  <|@ instruction rdi|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  806  <|@ instruction rcx|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  808  <|@ instruction r8|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  810  <|@ instruction r10|DWORD = MOVE input: int[-290587|0xfffffffffffb90e5] <|@ <|@
      nr  812  <|@ instruction JUMP ~[] destination: B69 -> B154 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B154"
    from_bci -1
    to_bci -1
    predecessors "B60" "B153" "B64" "B91" "B69" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr 1870  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1872  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1874  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1876  <|@ st <@st|@reference-map: [rbx:0]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:554) [bci: 278]
locals: rbx|QWORD[.] - r8|QWORD - - rcx|DWORD - rdi|DWORD - r9|DWORD rbp|DWORD r11|DWORD r14|DWORD r13|DWORD rsi|DWORD r11|DWORD - - - - - - - - - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:278] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B158" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  128  <|@ instruction r9|DWORD = MOVE input: int[-226843|0xfffffffffffc89e5] <|@ <|@
      nr  130  <|@ instruction rcx|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  132  <|@ instruction rbx|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  134  <|@ instruction JUMP ~[] destination: B12 -> B158 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B158"
    from_bci -1
    to_bci -1
    predecessors "B17" "B16" "B27" "B26" "B12" "B157" 
    successors 
    xhandlers
    flags 
    probability 2366641604183195648
    begin_IR
      LIR
      nr 1928  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1930  <|@ instruction MOV (x: [r15|QWORD + 668], y: r9|DWORD) size: DWORD <|@ <|@
      nr 1932  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1934  <|@ st <@st|@reference-map: [rbx:0]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:443) [bci: 67]
locals: rbx|QWORD[.] rdx|DWORD r10|QWORD - r8|DWORD rcx|DWORD r11|DWORD stack:48|DWORD - - - - - - - - - - - - - - - - - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:67] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B129"
    from_bci -1
    to_bci -1
    predecessors "B127" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1596  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1598  <|@ instruction rbp|DWORD = MOVE stack:132|DWORD moveKind: DWORD <|@ <|@
      nr 1600  <|@ instruction rbx|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1602  <|@ instruction MOV [r15|QWORD + 668] y: -274971 size: DWORD <|@ <|@
      nr 1604  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1606  <|@ st <@st|@reference-map: [rbx:0, stack:16, stack:24, stack:48, stack:72]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:749) [bci: 1343]
stack: rax|DWORD 
locals: rbx|QWORD[.] - - - - - - - - stack:60|DWORD - - - - - - - stack:100|DWORD rbp|DWORD - - - stack:88|DWORD - - stack:96|QWORD[.] - stack:72|QWORD[.] stack:128|QWORD[.] stack:120|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:1343] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  346  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  348  <|@ instruction stack:52|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  350  <|@ instruction stack:48|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  352  <|@ instruction rcx|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  354  <|@ instruction rbx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  356  <|@ instruction MOV [r15|QWORD + 668] y: -288275 size: DWORD <|@ <|@
      nr  358  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  360  <|@ st <@st|@reference-map: [rbx:0]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 174]
locals: rbx|QWORD[.] rdx|DWORD r10|QWORD - r8|DWORD rcx|DWORD r11|DWORD stack:48|DWORD stack:52|DWORD - - - - - - - - - - - - - - - - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:174] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B90" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  858  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  860  <|@ instruction rcx|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  862  <|@ instruction rax|DWORD = MOVE input: int[-249363|0xfffffffffffc31ed] <|@ <|@
      nr  864  <|@ instruction JUMP ~[] destination: B74 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B74" "B89" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1044  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1046  <|@ instruction MOV (x: [r15|QWORD + 668], y: rax|DWORD) size: DWORD <|@ <|@
      nr 1048  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1050  <|@ st <@st|@reference-map: [rbx:0]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:680) [bci: 889]
locals: rbx|QWORD[.] - - - - rcx|DWORD - - - r9|DWORD - - - - - - - r10|DWORD r8|DWORD rdx|DWORD - - - - - rdi|QWORD - r11|QWORD - rbp|QWORD - rsi|QWORD - 
>@ <|@ instruction DEOPT info [bci:889] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B152"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1834  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1836  <|@ instruction r9|QWORD[.] = MOVE stack:120|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1838  <|@ instruction rdi|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1840  <|@ instruction r8|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1842  <|@ instruction rcx|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr 1844  <|@ instruction rbx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1846  <|@ instruction rax|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1848  <|@ instruction MOV [r15|QWORD + 668] y: -279571 size: DWORD <|@ <|@
      nr 1850  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1852  <|@ st <@st|@reference-map: [rax:0, rbx:0, rdi:0, r8:0, r9:0]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:741) [bci: 1243]
locals: rbx|QWORD[.] - - - - rcx|DWORD - - - r10|DWORD - - - - - - - r11|DWORD int[0|0x0] int[0|0x0] - - - - - r8|QWORD[.] - rax|QWORD[.] rdi|QWORD[.] r9|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:1243] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B160" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   22  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   24  <|@ instruction r11|DWORD = MOVE input: int[-303123|0xfffffffffffb5fed] <|@ <|@
      nr   26  <|@ instruction rcx|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr   28  <|@ instruction rbx|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction JUMP ~[] destination: B2 -> B160 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B160"
    from_bci -1
    to_bci -1
    predecessors "B2" "B159" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1946  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1948  <|@ instruction MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD <|@ <|@
      nr 1950  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1952  <|@ st <@st|@reference-map: [rbx:0]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:426) [bci: 0]
locals: rbx|QWORD[.] rdx|DWORD r10|QWORD - r8|DWORD rcx|DWORD - - - - - - - - - - - - - - - - - - - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B90" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1036  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1038  <|@ instruction rcx|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr 1040  <|@ instruction rax|DWORD = MOVE input: int[-249619|0xfffffffffffc30ed] <|@ <|@
      nr 1042  <|@ instruction JUMP ~[] destination: B89 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B153"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B154" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1854  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1856  <|@ instruction r11|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr 1858  <|@ instruction rdi|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1860  <|@ instruction rcx|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1862  <|@ instruction rbx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1864  <|@ instruction r8|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr 1866  <|@ instruction r10|DWORD = MOVE input: int[-229139|0xfffffffffffc80ed] <|@ <|@
      nr 1868  <|@ instruction JUMP ~[] destination: B153 -> B154 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B126"
    from_bci -1
    to_bci -1
    predecessors "B125" 
    successors "B132" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1530  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1532  <|@ instruction r11|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1534  <|@ instruction rax|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr 1536  <|@ instruction rbx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1538  <|@ instruction r10|DWORD = MOVE input: int[-272403|0xfffffffffffbd7ed] <|@ <|@
      nr 1540  <|@ instruction JUMP ~[] destination: B126 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B132"
    from_bci -1
    to_bci -1
    predecessors "B118" "B120" "B122" "B131" "B130" "B126" 
    successors 
    xhandlers
    flags 
    probability 2366641604183195648
    begin_IR
      LIR
      nr 1632  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1634  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1636  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1638  <|@ st <@st|@reference-map: [rbx:0, r11:0, stack:24, stack:48, stack:72]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:747) [bci: 1315]
stack: r11|QWORD[.] 
locals: rbx|QWORD[.] - - - - - - - - stack:60|DWORD - - - - - - - stack:100|DWORD - - - - rax|DWORD - - stack:96|QWORD[.] - stack:72|QWORD[.] - stack:120|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:1315] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1178  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1180  <|@ instruction r10|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr 1182  <|@ instruction rcx|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1184  <|@ instruction rbx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1186  <|@ instruction MOV [r15|QWORD + 668] y: -253203 size: DWORD <|@ <|@
      nr 1188  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1190  <|@ st <@st|@reference-map: [rbx:0, stack:24, stack:32, stack:48, stack:72]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:725) [bci: 1159]
stack: rax|DWORD 
locals: rbx|QWORD[.] - - - - rcx|DWORD - - - stack:80|DWORD - - - - - - - int[0|0x0] - - - - r10|DWORD - - stack:96|QWORD[.] - stack:72|QWORD[.] stack:112|QWORD[.] stack:120|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:1159] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B117" 
    successors "B132" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1448  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1450  <|@ instruction r11|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1452  <|@ instruction rax|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr 1454  <|@ instruction rbx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1456  <|@ instruction r10|DWORD = MOVE input: int[-263187|0xfffffffffffbfbed] <|@ <|@
      nr 1458  <|@ instruction JUMP ~[] destination: B118 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B155"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1878  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1880  <|@ instruction stack:84|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr 1882  <|@ instruction stack:76|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1884  <|@ instruction stack:80|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr 1886  <|@ instruction stack:48|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1888  <|@ instruction rax|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1890  <|@ instruction rbx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1892  <|@ instruction MOV [r15|QWORD + 668] y: -231195 size: DWORD <|@ <|@
      nr 1894  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1896  <|@ st <@st|@reference-map: [rbx:0]
live-base-pointers: []
java.lang.Math.max(Math.java:1252) [bci: 10]
stack: stack:84|DWORD 
locals: - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:523) [bci: 202]
locals: rbx|QWORD[.] rdx|DWORD r10|QWORD - r8|DWORD rax|DWORD r11|DWORD stack:48|DWORD stack:52|DWORD stack:80|DWORD rsi|DWORD stack:76|DWORD - - - - - - - - - - - - - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:10, 202] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  432  <|@ instruction stack:52|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  434  <|@ instruction stack:48|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  436  <|@ instruction rcx|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  438  <|@ instruction rbx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  440  <|@ instruction MOV [r15|QWORD + 668] y: -288531 size: DWORD <|@ <|@
      nr  442  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  444  <|@ st <@st|@reference-map: [rbx:0]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 174]
locals: rbx|QWORD[.] rdx|DWORD r10|QWORD - r8|DWORD rcx|DWORD r11|DWORD stack:48|DWORD stack:52|DWORD - - - - - - - - - - - - - - - - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:174] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B148"
    from_bci -1
    to_bci -1
    predecessors "B147" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1808  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1810  <|@ instruction rbx|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1812  <|@ instruction MOV [r15|QWORD + 668] y: -285203 size: DWORD <|@ <|@
      nr 1814  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1816  <|@ st <@st|@reference-map: [rbx:0]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:766) [bci: 1445]
locals: rbx|QWORD[.] - - - - - - - - r9|DWORD - - - - - - - r10|DWORD r8|DWORD rdi|DWORD long[0|0x0] - - - - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:1445] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B130"
    from_bci -1
    to_bci -1
    predecessors "B124" 
    successors "B132" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1608  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1610  <|@ instruction r11|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1612  <|@ instruction rax|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr 1614  <|@ instruction rbx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1616  <|@ instruction r10|DWORD = MOVE input: int[-270619|0xfffffffffffbdee5] <|@ <|@
      nr 1618  <|@ instruction JUMP ~[] destination: B130 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B156"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1898  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1900  <|@ instruction stack:76|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1902  <|@ instruction stack:80|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr 1904  <|@ instruction stack:48|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1906  <|@ instruction rcx|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1908  <|@ instruction rbx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1910  <|@ instruction MOV [r15|QWORD + 668] y: -229395 size: DWORD <|@ <|@
      nr 1912  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1914  <|@ st <@st|@reference-map: [rbx:0]
live-base-pointers: []
java.lang.Math.max(Math.java:1252) [bci: 10]
stack: stack:76|DWORD 
locals: - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:520) [bci: 185]
locals: rbx|QWORD[.] rdx|DWORD r10|QWORD - r8|DWORD rcx|DWORD r11|DWORD stack:48|DWORD rax|DWORD stack:80|DWORD - - - - - - - - - - - - - - - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:10, 185] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B158" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  318  <|@ instruction r9|DWORD = MOVE input: int[-287507|0xfffffffffffb9ced] <|@ <|@
      nr  320  <|@ instruction stack:48|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  322  <|@ instruction rcx|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  324  <|@ instruction rbx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  326  <|@ instruction JUMP ~[] destination: B27 -> B158 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B154" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1052  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1054  <|@ instruction r11|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr 1056  <|@ instruction rdi|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr 1058  <|@ instruction rcx|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1060  <|@ instruction rbx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1062  <|@ instruction r8|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr 1064  <|@ instruction r10|DWORD = MOVE input: int[-235035|0xfffffffffffc69e5] <|@ <|@
      nr 1066  <|@ instruction JUMP ~[] destination: B91 -> B154 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B141"
    from_bci -1
    to_bci -1
    predecessors "B140" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1734  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1736  <|@ instruction r10|QWORD = MOVE stack:128|QWORD moveKind: QWORD <|@ <|@
      nr 1738  <|@ instruction r9|DWORD = MOVE stack:88|DWORD moveKind: DWORD <|@ <|@
      nr 1740  <|@ instruction r8|DWORD = MOVE stack:132|DWORD moveKind: DWORD <|@ <|@
      nr 1742  <|@ instruction r11|DWORD = MOVE stack:100|DWORD moveKind: DWORD <|@ <|@
      nr 1744  <|@ instruction rbx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1746  <|@ instruction MOV [r15|QWORD + 668] y: -303891 size: DWORD <|@ <|@
      nr 1748  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1750  <|@ st <@st|@reference-map: [rbx:0]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:758) [bci: 1415]
stack: rbx|QWORD[.] int[0|0x0] 
locals: rbx|QWORD[.] - - - - - - - - stack:60|DWORD - - - - - - - r11|DWORD r8|DWORD r9|DWORD r10|QWORD - - - - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:1415] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B159"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B160" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1936  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1938  <|@ instruction r11|DWORD = MOVE input: int[-302867|0xfffffffffffb60ed] <|@ <|@
      nr 1940  <|@ instruction rcx|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr 1942  <|@ instruction rbx|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1944  <|@ instruction JUMP ~[] destination: B159 -> B160 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1432  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1434  <|@ instruction rbx|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1436  <|@ instruction MOV [r15|QWORD + 668] y: -261147 size: DWORD <|@ <|@
      nr 1438  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1440  <|@ st <@st|@reference-map: [rbx:0, stack:16, stack:24, stack:48, stack:72]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:749) [bci: 1343]
stack: rax|DWORD 
locals: rbx|QWORD[.] - - - - - - - - stack:60|DWORD - - - - - - - stack:100|DWORD int[0|0x0] - - - stack:88|DWORD - - stack:96|QWORD[.] - stack:72|QWORD[.] stack:128|QWORD[.] stack:120|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:1343] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B96" 
    successors "B102" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1206  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1208  <|@ instruction r11|DWORD = MOVE input: int[-254483|0xfffffffffffc1ded] <|@ <|@
      nr 1210  <|@ instruction r10|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr 1212  <|@ instruction rcx|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1214  <|@ instruction rbx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1216  <|@ instruction JUMP ~[] destination: B97 -> B102 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B154" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  658  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  660  <|@ instruction r11|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  662  <|@ instruction rdi|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  664  <|@ instruction rcx|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  666  <|@ instruction rbx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  668  <|@ instruction r8|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  670  <|@ instruction r10|DWORD = MOVE input: int[-233491|0xfffffffffffc6fed] <|@ <|@
      nr  672  <|@ instruction JUMP ~[] destination: B60 -> B154 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  996  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  998  <|@ instruction MOV [r15|QWORD + 668] y: -304923 size: DWORD <|@ <|@
      nr 1000  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1002  <|@ st <@st|@reference-map: [rbx:0]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:683) [bci: 914]
locals: rbx|QWORD[.] - - - - - - - - r9|DWORD - - - - - - - r10|DWORD int[0|0x0] int[0|0x0] - - - - - rbp|QWORD - r11|QWORD - r14|QWORD - rsi|QWORD - 
>@ <|@ instruction DEOPT info [bci:914] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B158" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  306  <|@ instruction r9|DWORD = MOVE input: int[-287763|0xfffffffffffb9bed] <|@ <|@
      nr  308  <|@ instruction stack:48|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  310  <|@ instruction rcx|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  312  <|@ instruction rbx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  314  <|@ instruction JUMP ~[] destination: B26 -> B158 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B121" 
    successors "B132" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1484  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1486  <|@ instruction r11|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1488  <|@ instruction rax|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr 1490  <|@ instruction rbx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1492  <|@ instruction r10|DWORD = MOVE input: int[-263699|0xfffffffffffbf9ed] <|@ <|@
      nr 1494  <|@ instruction JUMP ~[] destination: B122 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B158" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  166  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  168  <|@ instruction stack:48|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  170  <|@ instruction rcx|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  172  <|@ instruction rbx|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  174  <|@ instruction r9|DWORD = MOVE input: int[-222995|0xfffffffffffc98ed] <|@ <|@
      nr  176  <|@ instruction JUMP ~[] destination: B16 -> B158 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B119" 
    successors "B132" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1466  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1468  <|@ instruction r11|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1470  <|@ instruction rax|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr 1472  <|@ instruction rbx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1474  <|@ instruction r10|DWORD = MOVE input: int[-263443|0xfffffffffffbfaed] <|@ <|@
      nr 1476  <|@ instruction JUMP ~[] destination: B120 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B154" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  748  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  750  <|@ instruction rbp|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr  752  <|@ instruction rsi|DWORD = MOVE stack:64|DWORD moveKind: DWORD <|@ <|@
      nr  754  <|@ instruction r11|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  756  <|@ instruction rdi|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  758  <|@ instruction rcx|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  760  <|@ instruction r8|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  762  <|@ instruction r10|DWORD = MOVE input: int[-245267|0xfffffffffffc41ed] <|@ <|@
      nr  764  <|@ instruction JUMP ~[] destination: B64 -> B154 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B158" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  180  <|@ instruction stack:48|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  182  <|@ instruction rcx|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  184  <|@ instruction rbx|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  186  <|@ instruction r9|DWORD = MOVE input: int[-222739|0xfffffffffffc99ed] <|@ <|@
      nr  188  <|@ instruction JUMP ~[] destination: B17 -> B158 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B131"
    from_bci -1
    to_bci -1
    predecessors "B123" 
    successors "B132" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1620  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1622  <|@ instruction r11|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1624  <|@ instruction rax|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr 1626  <|@ instruction rbx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1628  <|@ instruction r10|DWORD = MOVE input: int[-266523|0xfffffffffffbeee5] <|@ <|@
      nr 1630  <|@ instruction JUMP ~[] destination: B131 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B157"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B158" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1916  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1918  <|@ instruction r9|DWORD = MOVE input: int[-288019|0xfffffffffffb9aed] <|@ <|@
      nr 1920  <|@ instruction stack:48|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1922  <|@ instruction rcx|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1924  <|@ instruction rbx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1926  <|@ instruction JUMP ~[] destination: B157 -> B158 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  882  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  884  <|@ instruction rcx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1454271960] <|@ <|@
      nr  886  <|@ instruction MOV [r15|QWORD + 668] y: -303371 size: DWORD <|@ <|@
      nr  888  <|@ instruction MOV (x: [r15|QWORD + 680], y: rcx|QWORD[.]) size: QWORD <|@ <|@
      nr  890  <|@ st <@st|@reference-map: [rbx:0]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:683) [bci: 914]
locals: rbx|QWORD[.] - - - - - - - - r9|DWORD - - - - - - - r10|DWORD r8|DWORD rdx|DWORD - - - - - rdi|QWORD - r11|QWORD - rbp|QWORD - rsi|QWORD - 
>@ <|@ instruction DEOPT info [bci:914] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: getstatic     #15         // $assertionsDisabled:boolean
     3: ifne          20
     6: lload_2       
     7: lconst_0      
     8: lcmp          
     9: ifgt          20
    12: new           #21         // java.lang.AssertionError
    15: dup           
    16: invokespecial #16         // java.lang.AssertionError.<init>:()void
    19: athrow        
    20: getstatic     #15         // $assertionsDisabled:boolean
    23: ifne          44
    26: lload_2       
    27: ldc2_w        #31         // 4503599627370496
    30: land          
    31: lconst_0      
    32: lcmp          
    33: ifne          44
    36: new           #21         // java.lang.AssertionError
    39: dup           
    40: invokespecial #16         // java.lang.AssertionError.<init>:()void
    43: athrow        
    44: lload_2       
    45: invokestatic  #20         // java.lang.Long.numberOfTrailingZeros:(long)int
    48: istore        6
    50: bipush        53
    52: iload         6
    54: isub          
    55: istore        7
    57: aload_0       
    58: iconst_0      
    59: putfield      #5          // decimalDigitsRoundedUp:boolean
    62: aload_0       
    63: iconst_0      
    64: putfield      #4          // exactDecimalConversion:boolean
    67: iconst_0      
    68: iload         7
    70: iload_1       
    71: isub          
    72: iconst_1      
    73: isub          
    74: invokestatic  #21         // java.lang.Math.max:(int, int)int
    77: istore        8
    79: iload_1       
    80: bipush        62
    82: if_icmpgt     174
    85: iload_1       
    86: bipush        -21
    88: if_icmplt     174
    91: iload         8
    93: getstatic     #18         // sun.misc.FDBigInteger.LONG_5_POW:long[]
    96: arraylength   
    97: if_icmpge     174
   100: iload         7
   102: getstatic     #22         // N_5_BITS:int[]
   105: iload         8
   107: iaload        
   108: iadd          
   109: bipush        64
   111: if_icmpge     174
   114: iload         8
   116: ifne          174
   119: iload_1       
   120: iload         4
   122: if_icmple     139
   125: iload_1       
   126: iload         4
   128: isub          
   129: iconst_1      
   130: isub          
   131: invokestatic  #23         // insignificantDigitsForPow2:(int)int
   134: istore        9
   136: goto          142
   139: iconst_0      
   140: istore        9
   142: iload_1       
   143: bipush        52
   145: if_icmplt     158
   148: lload_2       
   149: iload_1       
   150: bipush        52
   152: isub          
   153: lshl          
   154: lstore_2      
   155: goto          165
   158: lload_2       
   159: bipush        52
   161: iload_1       
   162: isub          
   163: lushr         
   164: lstore_2      
   165: aload_0       
   166: iconst_0      
   167: lload_2       
   168: iload         9
   170: invokespecial #24         // developLongDigits:(int, long, int)void
   173: return        
   174: lload_2       
   175: iload_1       
   176: invokestatic  #25         // estimateDecExp:(long, int)int
   179: istore        9
   181: iconst_0      
   182: iload         9
   184: ineg          
   185: invokestatic  #21         // java.lang.Math.max:(int, int)int
   188: istore        11
   190: iload         11
   192: iload         8
   194: iadd          
   195: iload_1       
   196: iadd          
   197: istore        10
   199: iconst_0      
   200: iload         9
   202: invokestatic  #21         // java.lang.Math.max:(int, int)int
   205: istore        13
   207: iload         13
   209: iload         8
   211: iadd          
   212: istore        12
   214: iload         11
   216: istore        15
   218: iload         10
   220: iload         4
   222: isub          
   223: istore        14
   225: lload_2       
   226: iload         6
   228: lushr         
   229: lstore_2      
   230: iload         10
   232: iload         7
   234: iconst_1      
   235: isub          
   236: isub          
   237: istore        10
   239: iload         10
   241: iload         12
   243: invokestatic  #26         // java.lang.Math.min:(int, int)int
   246: istore        16
   248: iload         10
   250: iload         16
   252: isub          
   253: istore        10
   255: iload         12
   257: iload         16
   259: isub          
   260: istore        12
   262: iload         14
   264: iload         16
   266: isub          
   267: istore        14
   269: iload         7
   271: iconst_1      
   272: if_icmpne     278
   275: iinc          
   278: iload         14
   280: ifge          300
   283: iload         10
   285: iload         14
   287: isub          
   288: istore        10
   290: iload         12
   292: iload         14
   294: isub          
   295: istore        12
   297: iconst_0      
   298: istore        14
   300: iconst_0      
   301: istore        17
   303: iload         7
   305: iload         10
   307: iadd          
   308: iload         11
   310: getstatic     #22         // N_5_BITS:int[]
   313: arraylength   
   314: if_icmpge     326
   317: getstatic     #22         // N_5_BITS:int[]
   320: iload         11
   322: iaload        
   323: goto          330
   326: iload         11
   328: iconst_3      
   329: imul          
   330: iadd          
   331: istore        23
   333: iload         12
   335: iconst_1      
   336: iadd          
   337: iload         13
   339: iconst_1      
   340: iadd          
   341: getstatic     #22         // N_5_BITS:int[]
   344: arraylength   
   345: if_icmpge     359
   348: getstatic     #22         // N_5_BITS:int[]
   351: iload         13
   353: iconst_1      
   354: iadd          
   355: iaload        
   356: goto          365
   359: iload         13
   361: iconst_1      
   362: iadd          
   363: iconst_3      
   364: imul          
   365: iadd          
   366: istore        24
   368: iload         23
   370: bipush        64
   372: if_icmpge     1070
   375: iload         24
   377: bipush        64
   379: if_icmpge     1070
   382: iload         23
   384: bipush        32
   386: if_icmpge     728
   389: iload         24
   391: bipush        32
   393: if_icmpge     728
   396: lload_2       
   397: l2i           
   398: getstatic     #27         // sun.misc.FDBigInteger.SMALL_5_POW:int[]
   401: iload         11
   403: iaload        
   404: imul          
   405: iload         10
   407: ishl          
   408: istore        25
   410: getstatic     #27         // sun.misc.FDBigInteger.SMALL_5_POW:int[]
   413: iload         13
   415: iaload        
   416: iload         12
   418: ishl          
   419: istore        26
   421: getstatic     #27         // sun.misc.FDBigInteger.SMALL_5_POW:int[]
   424: iload         15
   426: iaload        
   427: iload         14
   429: ishl          
   430: istore        27
   432: iload         26
   434: bipush        10
   436: imul          
   437: istore        28
   439: iconst_0      
   440: istore        17
   442: iload         25
   444: iload         26
   446: idiv          
   447: istore        22
   449: bipush        10
   451: iload         25
   453: iload         26
   455: irem          
   456: imul          
   457: istore        25
   459: iload         27
   461: bipush        10
   463: imul          
   464: istore        27
   466: iload         25
   468: iload         27
   470: if_icmpge     477
   473: iconst_1      
   474: goto          478
   477: iconst_0      
   478: istore        18
   480: iload         25
   482: iload         27
   484: iadd          
   485: iload         28
   487: if_icmple     494
   490: iconst_1      
   491: goto          495
   494: iconst_0      
   495: istore        19
   497: getstatic     #15         // $assertionsDisabled:boolean
   500: ifne          520
   503: iload         22
   505: bipush        10
   507: if_icmplt     520
   510: new           #21         // java.lang.AssertionError
   513: dup           
   514: iload         22
   516: invokespecial #28         // java.lang.AssertionError.<init>:(int)void
   519: athrow        
   520: iload         22
   522: ifne          536
   525: iload         19
   527: ifne          536
   530: iinc          
   533: goto          552
   536: aload_0       
   537: getfield      #6          // digits:char[]
   540: iload         17
   542: iinc          
   545: bipush        48
   547: iload         22
   549: iadd          
   550: i2c           
   551: castore       
   552: iload         5
   554: ifeq          571
   557: iload         9
   559: bipush        -3
   561: if_icmplt     571
   564: iload         9
   566: bipush        8
   568: if_icmplt     577
   571: iconst_0      
   572: dup           
   573: istore        18
   575: istore        19
   577: iload         18
   579: ifne          701
   582: iload         19
   584: ifne          701
   587: iload         25
   589: iload         26
   591: idiv          
   592: istore        22
   594: bipush        10
   596: iload         25
   598: iload         26
   600: irem          
   601: imul          
   602: istore        25
   604: iload         27
   606: bipush        10
   608: imul          
   609: istore        27
   611: getstatic     #15         // $assertionsDisabled:boolean
   614: ifne          634
   617: iload         22
   619: bipush        10
   621: if_icmplt     634
   624: new           #21         // java.lang.AssertionError
   627: dup           
   628: iload         22
   630: invokespecial #28         // java.lang.AssertionError.<init>:(int)void
   633: athrow        
   634: iload         27
   636: i2l           
   637: lconst_0      
   638: lcmp          
   639: ifle          676
   642: iload         25
   644: iload         27
   646: if_icmpge     653
   649: iconst_1      
   650: goto          654
   653: iconst_0      
   654: istore        18
   656: iload         25
   658: iload         27
   660: iadd          
   661: iload         28
   663: if_icmple     670
   666: iconst_1      
   667: goto          671
   670: iconst_0      
   671: istore        19
   673: goto          682
   676: iconst_1      
   677: istore        18
   679: iconst_1      
   680: istore        19
   682: aload_0       
   683: getfield      #6          // digits:char[]
   686: iload         17
   688: iinc          
   691: bipush        48
   693: iload         22
   695: iadd          
   696: i2c           
   697: castore       
   698: goto          577
   701: iload         25
   703: iconst_1      
   704: ishl          
   705: iload         28
   707: isub          
   708: i2l           
   709: lstore        20
   711: aload_0       
   712: iload         25
   714: ifne          721
   717: iconst_1      
   718: goto          722
   721: iconst_0      
   722: putfield      #4          // exactDecimalConversion:boolean
   725: goto          1426
   728: lload_2       
   729: getstatic     #18         // sun.misc.FDBigInteger.LONG_5_POW:long[]
   732: iload         11
   734: laload        
   735: lmul          
   736: iload         10
   738: lshl          
   739: lstore        25
   741: getstatic     #18         // sun.misc.FDBigInteger.LONG_5_POW:long[]
   744: iload         13
   746: laload        
   747: iload         12
   749: lshl          
   750: lstore        27
   752: getstatic     #18         // sun.misc.FDBigInteger.LONG_5_POW:long[]
   755: iload         15
   757: laload        
   758: iload         14
   760: lshl          
   761: lstore        29
   763: lload         27
   765: ldc2_w        #29         // 10
   768: lmul          
   769: lstore        31
   771: iconst_0      
   772: istore        17
   774: lload         25
   776: lload         27
   778: ldiv          
   779: l2i           
   780: istore        22
   782: ldc2_w        #29         // 10
   785: lload         25
   787: lload         27
   789: lrem          
   790: lmul          
   791: lstore        25
   793: lload         29
   795: ldc2_w        #29         // 10
   798: lmul          
   799: lstore        29
   801: lload         25
   803: lload         29
   805: lcmp          
   806: ifge          813
   809: iconst_1      
   810: goto          814
   813: iconst_0      
   814: istore        18
   816: lload         25
   818: lload         29
   820: ladd          
   821: lload         31
   823: lcmp          
   824: ifle          831
   827: iconst_1      
   828: goto          832
   831: iconst_0      
   832: istore        19
   834: getstatic     #15         // $assertionsDisabled:boolean
   837: ifne          857
   840: iload         22
   842: bipush        10
   844: if_icmplt     857
   847: new           #21         // java.lang.AssertionError
   850: dup           
   851: iload         22
   853: invokespecial #28         // java.lang.AssertionError.<init>:(int)void
   856: athrow        
   857: iload         22
   859: ifne          873
   862: iload         19
   864: ifne          873
   867: iinc          
   870: goto          889
   873: aload_0       
   874: getfield      #6          // digits:char[]
   877: iload         17
   879: iinc          
   882: bipush        48
   884: iload         22
   886: iadd          
   887: i2c           
   888: castore       
   889: iload         5
   891: ifeq          908
   894: iload         9
   896: bipush        -3
   898: if_icmplt     908
   901: iload         9
   903: bipush        8
   905: if_icmplt     914
   908: iconst_0      
   909: dup           
   910: istore        18
   912: istore        19
   914: iload         18
   916: ifne          1042
   919: iload         19
   921: ifne          1042
   924: lload         25
   926: lload         27
   928: ldiv          
   929: l2i           
   930: istore        22
   932: ldc2_w        #29         // 10
   935: lload         25
   937: lload         27
   939: lrem          
   940: lmul          
   941: lstore        25
   943: lload         29
   945: ldc2_w        #29         // 10
   948: lmul          
   949: lstore        29
   951: getstatic     #15         // $assertionsDisabled:boolean
   954: ifne          974
   957: iload         22
   959: bipush        10
   961: if_icmplt     974
   964: new           #21         // java.lang.AssertionError
   967: dup           
   968: iload         22
   970: invokespecial #28         // java.lang.AssertionError.<init>:(int)void
   973: athrow        
   974: lload         29
   976: lconst_0      
   977: lcmp          
   978: ifle          1017
   981: lload         25
   983: lload         29
   985: lcmp          
   986: ifge          993
   989: iconst_1      
   990: goto          994
   993: iconst_0      
   994: istore        18
   996: lload         25
   998: lload         29
  1000: ladd          
  1001: lload         31
  1003: lcmp          
  1004: ifle          1011
  1007: iconst_1      
  1008: goto          1012
  1011: iconst_0      
  1012: istore        19
  1014: goto          1023
  1017: iconst_1      
  1018: istore        18
  1020: iconst_1      
  1021: istore        19
  1023: aload_0       
  1024: getfield      #6          // digits:char[]
  1027: iload         17
  1029: iinc          
  1032: bipush        48
  1034: iload         22
  1036: iadd          
  1037: i2c           
  1038: castore       
  1039: goto          914
  1042: lload         25
  1044: iconst_1      
  1045: lshl          
  1046: lload         31
  1048: lsub          
  1049: lstore        20
  1051: aload_0       
  1052: lload         25
  1054: lconst_0      
  1055: lcmp          
  1056: ifne          1063
  1059: iconst_1      
  1060: goto          1064
  1063: iconst_0      
  1064: putfield      #4          // exactDecimalConversion:boolean
  1067: goto          1426
  1070: iload         13
  1072: iload         12
  1074: invokestatic  #29         // sun.misc.FDBigInteger.valueOfPow52:(int, int)sun.misc.FDBigInteger
  1077: astore        25
  1079: aload         25
  1081: invokevirtual #30         // sun.misc.FDBigInteger.getNormalizationBias:()int
  1084: istore        26
  1086: aload         25
  1088: iload         26
  1090: invokevirtual #31         // sun.misc.FDBigInteger.leftShift:(int)sun.misc.FDBigInteger
  1093: astore        25
  1095: lload_2       
  1096: iload         11
  1098: iload         10
  1100: iload         26
  1102: iadd          
  1103: invokestatic  #32         // sun.misc.FDBigInteger.valueOfMulPow52:(long, int, int)sun.misc.FDBigInteger
  1106: astore        27
  1108: iload         15
  1110: iconst_1      
  1111: iadd          
  1112: iload         14
  1114: iload         26
  1116: iadd          
  1117: iconst_1      
  1118: iadd          
  1119: invokestatic  #29         // sun.misc.FDBigInteger.valueOfPow52:(int, int)sun.misc.FDBigInteger
  1122: astore        28
  1124: iload         13
  1126: iconst_1      
  1127: iadd          
  1128: iload         12
  1130: iload         26
  1132: iadd          
  1133: iconst_1      
  1134: iadd          
  1135: invokestatic  #29         // sun.misc.FDBigInteger.valueOfPow52:(int, int)sun.misc.FDBigInteger
  1138: astore        29
  1140: iconst_0      
  1141: istore        17
  1143: aload         27
  1145: aload         25
  1147: invokevirtual #33         // sun.misc.FDBigInteger.quoRemIteration:(sun.misc.FDBigInteger)int
  1150: istore        22
  1152: aload         27
  1154: aload         28
  1156: invokevirtual #34         // sun.misc.FDBigInteger.cmp:(sun.misc.FDBigInteger)int
  1159: ifge          1166
  1162: iconst_1      
  1163: goto          1167
  1166: iconst_0      
  1167: istore        18
  1169: aload         29
  1171: aload         27
  1173: aload         28
  1175: invokevirtual #35         // sun.misc.FDBigInteger.addAndCmp:(sun.misc.FDBigInteger, sun.misc.FDBigInteger)int
  1178: ifgt          1185
  1181: iconst_1      
  1182: goto          1186
  1185: iconst_0      
  1186: istore        19
  1188: getstatic     #15         // $assertionsDisabled:boolean
  1191: ifne          1211
  1194: iload         22
  1196: bipush        10
  1198: if_icmplt     1211
  1201: new           #21         // java.lang.AssertionError
  1204: dup           
  1205: iload         22
  1207: invokespecial #28         // java.lang.AssertionError.<init>:(int)void
  1210: athrow        
  1211: iload         22
  1213: ifne          1227
  1216: iload         19
  1218: ifne          1227
  1221: iinc          
  1224: goto          1243
  1227: aload_0       
  1228: getfield      #6          // digits:char[]
  1231: iload         17
  1233: iinc          
  1236: bipush        48
  1238: iload         22
  1240: iadd          
  1241: i2c           
  1242: castore       
  1243: iload         5
  1245: ifeq          1262
  1248: iload         9
  1250: bipush        -3
  1252: if_icmplt     1262
  1255: iload         9
  1257: bipush        8
  1259: if_icmplt     1268
  1262: iconst_0      
  1263: dup           
  1264: istore        18
  1266: istore        19
  1268: iload         18
  1270: ifne          1372
  1273: iload         19
  1275: ifne          1372
  1278: aload         27
  1280: aload         25
  1282: invokevirtual #33         // sun.misc.FDBigInteger.quoRemIteration:(sun.misc.FDBigInteger)int
  1285: istore        22
  1287: getstatic     #15         // $assertionsDisabled:boolean
  1290: ifne          1310
  1293: iload         22
  1295: bipush        10
  1297: if_icmplt     1310
  1300: new           #21         // java.lang.AssertionError
  1303: dup           
  1304: iload         22
  1306: invokespecial #28         // java.lang.AssertionError.<init>:(int)void
  1309: athrow        
  1310: aload         28
  1312: invokevirtual #36         // sun.misc.FDBigInteger.multBy10:()sun.misc.FDBigInteger
  1315: astore        28
  1317: aload         27
  1319: aload         28
  1321: invokevirtual #34         // sun.misc.FDBigInteger.cmp:(sun.misc.FDBigInteger)int
  1324: ifge          1331
  1327: iconst_1      
  1328: goto          1332
  1331: iconst_0      
  1332: istore        18
  1334: aload         29
  1336: aload         27
  1338: aload         28
  1340: invokevirtual #35         // sun.misc.FDBigInteger.addAndCmp:(sun.misc.FDBigInteger, sun.misc.FDBigInteger)int
  1343: ifgt          1350
  1346: iconst_1      
  1347: goto          1351
  1350: iconst_0      
  1351: istore        19
  1353: aload_0       
  1354: getfield      #6          // digits:char[]
  1357: iload         17
  1359: iinc          
  1362: bipush        48
  1364: iload         22
  1366: iadd          
  1367: i2c           
  1368: castore       
  1369: goto          1268
  1372: iload         19
  1374: ifeq          1403
  1377: iload         18
  1379: ifeq          1403
  1382: aload         27
  1384: iconst_1      
  1385: invokevirtual #31         // sun.misc.FDBigInteger.leftShift:(int)sun.misc.FDBigInteger
  1388: astore        27
  1390: aload         27
  1392: aload         29
  1394: invokevirtual #34         // sun.misc.FDBigInteger.cmp:(sun.misc.FDBigInteger)int
  1397: i2l           
  1398: lstore        20
  1400: goto          1406
  1403: lconst_0      
  1404: lstore        20
  1406: aload_0       
  1407: aload         27
  1409: getstatic     #37         // sun.misc.FDBigInteger.ZERO:sun.misc.FDBigInteger
  1412: invokevirtual #34         // sun.misc.FDBigInteger.cmp:(sun.misc.FDBigInteger)int
  1415: ifne          1422
  1418: iconst_1      
  1419: goto          1423
  1422: iconst_0      
  1423: putfield      #4          // exactDecimalConversion:boolean
  1426: aload_0       
  1427: iload         9
  1429: iconst_1      
  1430: iadd          
  1431: putfield      #8          // decExponent:int
  1434: aload_0       
  1435: iconst_0      
  1436: putfield      #9          // firstDigitIndex:int
  1439: aload_0       
  1440: iload         17
  1442: putfield      #10         // nDigits:int
  1445: iload         19
  1447: ifeq          1508
  1450: iload         18
  1452: ifeq          1504
  1455: lload         20
  1457: lconst_0      
  1458: lcmp          
  1459: ifne          1490
  1462: aload_0       
  1463: getfield      #6          // digits:char[]
  1466: aload_0       
  1467: getfield      #9          // firstDigitIndex:int
  1470: aload_0       
  1471: getfield      #10         // nDigits:int
  1474: iadd          
  1475: iconst_1      
  1476: isub          
  1477: caload        
  1478: iconst_1      
  1479: iand          
  1480: ifeq          1508
  1483: aload_0       
  1484: invokespecial #38         // roundup:()void
  1487: goto          1508
  1490: lload         20
  1492: lconst_0      
  1493: lcmp          
  1494: ifle          1508
  1497: aload_0       
  1498: invokespecial #38         // roundup:()void
  1501: goto          1508
  1504: aload_0       
  1505: invokespecial #38         // roundup:()void
  1508: return        
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B159" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|QWORD, r8|DWORD, r9|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@4a6681b7 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction stack:40|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction r10|QWORD = MOVE rcx|QWORD moveKind: QWORD <|@ <|@
      nr   10  <|@ instruction stack:44|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr   12  <|@ instruction CMP rdx|DWORD y: 63 size: DWORD <|@ <|@
      nr   14  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B159 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   16  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   18  <|@ instruction CMP rdx|DWORD y: -21 size: DWORD <|@ <|@
      nr   20  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B18" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   34  <|@ instruction MOVB (x: [rsi|QWORD[.] + 26], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   36  <|@ instruction MOVB (x: [rsi|QWORD[.] + 25], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   38  <|@ instruction r11|DWORD = TZCNT r10|QWORD size: QWORD <|@ <|@
      nr   40  <|@ instruction rcx|DWORD = MOVE input: int[53|0x35] <|@ <|@
      nr   42  <|@ instruction rbx|DWORD = SUB (x: rcx|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr   44  <|@ instruction rdi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[int[27]{0, 3, 5, 7, 10, ...}] <|@ <|@
      nr   46  <|@ instruction rcx|DWORD = SUB (x: rbx|DWORD, ~y: rdx|DWORD) size: DWORD <|@ <|@
      nr   48  <|@ instruction rax|DWORD = DEC rcx|DWORD size: DWORD <|@ <|@
      nr   50  <|@ instruction CMP rax|DWORD y: 1 size: DWORD <|@ <|@
      nr   52  <|@ instruction BRANCH trueDestinationProbability: 0.7447171657016569 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B17" 
    xhandlers
    flags 
    probability 4604883035445177204
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   56  <|@ instruction rcx|DWORD = ADD (x: rbx|DWORD, ~y: [rdi|QWORD[.] + 16]) size: DWORD <|@ <|@
      nr   58  <|@ instruction CMP rcx|DWORD y: 64 size: DWORD <|@ <|@
      nr   60  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B4 -> B5 falseDestination: B4 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B16" 
    xhandlers
    flags 
    probability 4604883035445177204
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   64  <|@ instruction CMP rdx|DWORD y: 52 size: DWORD <|@ <|@
      nr   66  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B5 -> B6 falseDestination: B5 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B14" 
    xhandlers
    flags 
    probability 4604883035445177204
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   70  <|@ instruction CMP (x: rdx|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr   72  <|@ instruction BRANCH trueDestinationProbability: 0.0020362233415496256 condition: > trueDestination: B6 -> B7 falseDestination: B6 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B15" 
    xhandlers
    flags 
    probability 4604869376833871008
    begin_IR
      LIR
      nr  144  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  146  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  148  <|@ instruction JUMP ~[] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B11" "B14" "B13" "B8" 
    successors 
    xhandlers
    flags 
    probability 4604883035445177204
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  152  <|@ instruction rcx|DWORD = MOVE input: int[52|0x34] <|@ <|@
      nr  154  <|@ instruction rcx|DWORD = SUB (x: rcx|DWORD, ~y: rdx|DWORD) size: DWORD <|@ <|@
      nr  156  <|@ instruction r10|QWORD = SHR (x: r10|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr  158  <|@ instruction rdx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  160  <|@ instruction rcx|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  162  <|@ st <@st|@reference-map: []
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:476) [bci: 170]
locals: - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD, rcx|QWORD, r8|DWORD] [] callTarget: HotSpotMethod<FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(int, long, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:170] <|@ <|@
      nr  164  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B19" "B28" 
    xhandlers
    flags 
    probability 4598270386627586328
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  192  <|@ instruction rbp|QWORD = MOVE input: long[4503599627370495|0xfffffffffffff] <|@ <|@
      nr  194  <|@ instruction rcx|QWORD = AND (x: r10|QWORD, y: rbp|QWORD) size: QWORD <|@ <|@
      nr  196  <|@ instruction r13|QWORD = MOVE input: long[4607182418800017408|0x3ff0000000000000] <|@ <|@
      nr  198  <|@ instruction rcx|QWORD = OR (x: rcx|QWORD, y: r13|QWORD) size: QWORD <|@ <|@
      nr  200  <|@ instruction xmm0|DOUBLE = VMOVQ rcx|QWORD nZ: XMM <|@ <|@
      nr  202  <|@ instruction xmm1|DOUBLE = VMOVE input: double[1.5|0x3ff8000000000000] <|@ <|@
      nr  204  <|@ instruction xmm0|DOUBLE = VSUBSD (x: xmm0|DOUBLE, y: xmm1|DOUBLE) nZ: XMM <|@ <|@
      nr  206  <|@ instruction xmm1|DOUBLE = VMOVE input: double[0.289529654|0x3fd287a762c9bd93] <|@ <|@
      nr  208  <|@ instruction xmm0|DOUBLE = VMULSD (x: xmm0|DOUBLE, y: xmm1|DOUBLE) nZ: XMM <|@ <|@
      nr  210  <|@ instruction xmm1|DOUBLE = VMOVE input: double[0.176091259|0x3fc68a288b421b8c] <|@ <|@
      nr  212  <|@ instruction xmm0|DOUBLE = VADDSD (x: xmm0|DOUBLE, y: xmm1|DOUBLE) nZ: XMM <|@ <|@
      nr  214  <|@ instruction xmm1|DOUBLE = VCVTSI2SD rdx|DWORD <|@ <|@
      nr  216  <|@ instruction xmm2|DOUBLE = VMOVE input: double[0.301029995663981|0x3fd34413509f79fb] <|@ <|@
      nr  218  <|@ instruction xmm1|DOUBLE = VMULSD (x: xmm1|DOUBLE, y: xmm2|DOUBLE) nZ: XMM <|@ <|@
      nr  220  <|@ instruction xmm0|DOUBLE = VADDSD (x: xmm0|DOUBLE, y: xmm1|DOUBLE) nZ: XMM <|@ <|@
      nr  222  <|@ instruction r13|QWORD = VMOVQ xmm0|DOUBLE <|@ <|@
      nr  224  <|@ instruction rcx|QWORD = MOVE input: long[-9223372036854775808|0x8000000000000000] <|@ <|@
      nr  226  <|@ instruction r14|QWORD = MOVE input: long[9218868437227405312|0x7ff0000000000000] <|@ <|@
      nr  228  <|@ instruction r14|QWORD = AND (x: r13|QWORD, y: r14|QWORD) size: QWORD <|@ <|@
      nr  230  <|@ instruction r14|QWORD = SHR r14|QWORD y: 52 size: QWORD <|@ <|@
      nr  232  <|@ instruction r14|DWORD = MOV r14|QWORD size: DWORD <|@ <|@
      nr  234  <|@ instruction r9|DWORD = LEA [r14|DWORD - 1023] size: DWORD <|@ <|@
      nr  236  <|@ instruction CMP rax|DWORD y: 27 size: DWORD <|@ <|@
      nr  238  <|@ instruction BRANCH trueDestinationProbability: 0.5429471082944717 condition: |<| trueDestination: B18 -> B19 falseDestination: B18 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B27" 
    xhandlers
    flags 
    probability 4594161794464019143
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  242  <|@ instruction rsi|DWORD = ADD (x: rbx|DWORD, ~y: [rdi|QWORD[.] + rax|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr  244  <|@ instruction CMP rsi|DWORD y: 64 size: DWORD <|@ <|@
      nr  246  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B19 -> B20 falseDestination: B19 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B30" "B22" 
    xhandlers
    flags 
    probability 4594161794464019143
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  250  <|@ instruction TEST (x: r9|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  252  <|@ instruction BRANCH trueDestinationProbability: 0.8090044605656586 condition: < trueDestination: B20 -> B30 falseDestination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B20" "B28" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4596608865853000038
    begin_IR
      LIR
      nr  338  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  340  <|@ instruction rsi|QWORD = MOVE input: long[9223372036854775807|0x7fffffffffffffff] <|@ <|@
      nr  342  <|@ instruction TEST (x: rsi|QWORD, y: r13|QWORD) size: QWORD <|@ <|@
      nr  344  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B40" 
    xhandlers
    flags 
    probability 4596608865853000038
    begin_IR
      LIR
      nr  362  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  364  <|@ instruction TEST (x: rcx|QWORD, y: r13|QWORD) size: QWORD <|@ <|@
      nr  366  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  368  <|@ instruction rsi|DWORD = CMOVE (falseValue: int[-1|0xffffffffffffffff], ~trueValue: rcx|DWORD) condition: = <|@ <|@
      nr  370  <|@ instruction r9|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr  372  <|@ instruction JUMP ~[] destination: B32 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B32" "B39" "B35" "B24" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4598270386627586327
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  472  <|@ instruction rcx|DWORD = NEG r9|DWORD size: DWORD <|@ <|@
      nr  474  <|@ instruction CMP rcx|DWORD y: 1 size: DWORD <|@ <|@
      nr  476  <|@ instruction BRANCH trueDestinationProbability: 0.7447175992468633 condition: < trueDestination: B40 -> B41 falseDestination: B40 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" 
    xhandlers
    flags 
    probability 4596017585297594603
    begin_IR
      LIR
      nr  478  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  480  <|@ instruction stack:56|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  482  <|@ instruction rsi|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  484  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  486  <|@ instruction JUMP ~[] destination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" "B42" 
    successors "B44" "B156" 
    xhandlers
    flags 
    probability 4598270386627586327
    begin_IR
      LIR
      nr  502  <|@ instruction [] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr  504  <|@ instruction CMP rcx|DWORD y: 27 size: DWORD <|@ <|@
      nr  506  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B43 -> B44 falseDestination: B43 -> B156 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4598270386627586327
    begin_IR
      LIR
      nr  508  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  510  <|@ instruction CMP r9|DWORD y: 1 size: DWORD <|@ <|@
      nr  512  <|@ instruction BRANCH trueDestinationProbability: 0.7447175992468633 condition: < trueDestination: B44 -> B45 falseDestination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4596017585297594603
    begin_IR
      LIR
      nr  514  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  516  <|@ instruction r14|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  518  <|@ instruction r13|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  520  <|@ instruction stack:52|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  522  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  524  <|@ instruction JUMP ~[] destination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" "B46" 
    successors "B48" "B155" 
    xhandlers
    flags 
    probability 4598270386627586327
    begin_IR
      LIR
      nr  542  <|@ instruction [] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr  544  <|@ instruction rsi|DWORD = ADD (x: rsi|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr  546  <|@ instruction CMP rax|DWORD y: 27 size: DWORD <|@ <|@
      nr  548  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B47 -> B48 falseDestination: B47 -> B155 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B49" "B52" 
    xhandlers
    flags 
    probability 4598270386627586327
    begin_IR
      LIR
      nr  550  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  552  <|@ instruction rdx|DWORD = MOVE input: int[52|0x34] <|@ <|@
      nr  554  <|@ instruction rdx|DWORD = SUB (x: rdx|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr  556  <|@ instruction rbp|DWORD = SUB (x: rsi|DWORD, ~y: rdx|DWORD) size: DWORD <|@ <|@
      nr  558  <|@ instruction rsi|DWORD = SUB (x: rsi|DWORD, ~y: r8|DWORD) size: DWORD <|@ <|@
      nr  560  <|@ instruction CMP (x: rbp|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr  562  <|@ instruction BRANCH trueDestinationProbability: 0.44790294112836976 condition: > trueDestination: B48 -> B49 falseDestination: B48 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B54" "B56" 
    xhandlers
    flags 
    probability 4594245951440238058
    begin_IR
      LIR
      nr  586  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  588  <|@ instruction r14|DWORD = SUB (x: r14|DWORD, ~y: rbp|DWORD) size: DWORD <|@ <|@
      nr  590  <|@ instruction rsi|DWORD = SUB (x: rsi|DWORD, ~y: rbp|DWORD) size: DWORD <|@ <|@
      nr  592  <|@ instruction CMP rbx|DWORD y: 1 size: DWORD <|@ <|@
      nr  598  <|@ instruction rbp|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  594  <|@ instruction BRANCH trueDestinationProbability: 0.3803485753451483 condition: = trueDestination: B52 -> B54 falseDestination: B52 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B49" "B54" "B52" 
    successors "B57" "B153" 
    xhandlers
    flags 
    probability 4598270386627586327
    begin_IR
      LIR
      nr  614  <|@ instruction [] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr  616  <|@ instruction r8|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  618  <|@ instruction rcx|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  620  <|@ instruction r10|QWORD = SHR (x: r10|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr  622  <|@ instruction TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr  624  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B56 -> B57 falseDestination: B56 -> B153 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B58" "B94" 
    xhandlers
    flags 
    probability 4598270386627586327
    begin_IR
      LIR
      nr  626  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  628  <|@ instruction r11|DWORD = SUB (x: rbp|DWORD, ~y: rsi|DWORD) size: DWORD <|@ <|@
      nr  630  <|@ instruction rcx|DWORD = ADD (x: r11|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  632  <|@ instruction rcx|DWORD = ADD (x: rcx|DWORD, ~y: [rdi|QWORD[.] + r8|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr  634  <|@ instruction rdx|DWORD = SUB (x: r14|DWORD, ~y: rsi|DWORD) size: DWORD <|@ <|@
      nr  636  <|@ instruction CMP rcx|DWORD y: 64 size: DWORD <|@ <|@
      nr  638  <|@ instruction BRANCH trueDestinationProbability: 0.9886664055615392 condition: < trueDestination: B57 -> B58 falseDestination: B57 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B59" "B94" 
    xhandlers
    flags 
    probability 4598218266070781714
    begin_IR
      LIR
      nr  640  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  642  <|@ instruction stack:48|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  644  <|@ instruction rbx|DWORD = INC rdx|DWORD size: DWORD <|@ <|@
      nr  646  <|@ instruction rbx|DWORD = ADD (x: rbx|DWORD, ~y: [rdi|QWORD[.] + rax|DWORD * 4 + 16]) size: DWORD <|@ <|@
      nr  648  <|@ instruction CMP rbx|DWORD y: 64 size: DWORD <|@ <|@
      nr  650  <|@ instruction BRANCH trueDestinationProbability: 0.9702874687399411 condition: < trueDestination: B58 -> B59 falseDestination: B58 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B60" "B61" 
    xhandlers
    flags 
    probability 4597991127864395515
    begin_IR
      LIR
      nr  652  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  654  <|@ instruction CMP rcx|DWORD y: 32 size: DWORD <|@ <|@
      nr  656  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B59 -> B60 falseDestination: B59 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" "B91" 
    xhandlers
    flags 
    probability 4597991127864395515
    begin_IR
      LIR
      nr  674  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  676  <|@ instruction CMP r13|DWORD y: 27 size: DWORD <|@ <|@
      nr  678  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B61 -> B62 falseDestination: B61 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B63" "B68" 
    xhandlers
    flags 
    probability 4597991127864395515
    begin_IR
      LIR
      nr  680  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  682  <|@ instruction stack:60|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr  684  <|@ instruction stack:64|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr  686  <|@ instruction rbx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  688  <|@ instruction rcx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[long[27]{1, 5, 25, 125, 625, ...}] <|@ <|@
      nr  690  <|@ instruction rdi|QWORD = MOV [rcx|QWORD[.] + r8|DWORD * 8 + 16] size: QWORD <|@ <|@
      nr  692  <|@ instruction rax|QWORD = MOV [rcx|QWORD[.] + r13|DWORD * 8 + 16] size: QWORD <|@ <|@
      nr  694  <|@ instruction rcx|QWORD = IMUL (x: r10|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr  696  <|@ instruction rsi|QWORD = MOVE rcx|QWORD moveKind: QWORD <|@ <|@
      nr  698  <|@ instruction rcx|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  700  <|@ instruction rsi|QWORD = SHL (x: rsi|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr  702  <|@ instruction rcx|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  704  <|@ instruction r11|QWORD = SHL (x: rax|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr  706  <|@ instruction rax|QWORD = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  708  <|@ instruction (highResult: rdx|QWORD, lowResult: rax|QWORD) = CDQ rax|QWORD size: QWORD <|@ <|@
      nr  710  <|@ st <@st|@reference-map: [rbx:0]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:554) [bci: 278]
locals: rbx|QWORD[.] - r10|QWORD - - stack:44|DWORD - stack:48|DWORD - r9|DWORD stack:60|DWORD r8|DWORD r14|DWORD r13|DWORD stack:64|DWORD r8|DWORD - - - - - - - - - - - - - - - - - 
>@ <|@ instruction (highResult: rdx|QWORD, lowResult: rax|QWORD) = IDIV (highX: rdx|QWORD, lowX: rax|QWORD, y: r11|QWORD) size: QWORD state [bci:278] <|@ <|@
      nr  712  <|@ instruction rcx|DWORD[.] = MOV [rbx|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  714  <|@ instruction rsi|QWORD = SHL r11|QWORD y: 3 size: QWORD <|@ <|@
      nr  716  <|@ instruction rbp|QWORD = SHL r11|QWORD size: QWORD <|@ <|@
      nr  718  <|@ instruction rsi|QWORD = ADD (x: rsi|QWORD, y: rbp|QWORD) size: QWORD <|@ <|@
      nr  720  <|@ instruction rbp|QWORD = SHL rdi|QWORD y: 3 size: QWORD <|@ <|@
      nr  722  <|@ instruction rdi|QWORD = SHL rdi|QWORD size: QWORD <|@ <|@
      nr  724  <|@ instruction rbp|QWORD = ADD (x: rbp|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr  726  <|@ instruction rdi|QWORD = SHL rdx|QWORD y: 3 size: QWORD <|@ <|@
      nr  728  <|@ instruction rdx|QWORD = SHL rdx|QWORD size: QWORD <|@ <|@
      nr  730  <|@ instruction rdi|QWORD = ADD (x: rdi|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  732  <|@ instruction rdx|QWORD = ADD (x: rbp|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr  734  <|@ instruction rax|DWORD = MOV rax|QWORD size: DWORD <|@ <|@
      nr  736  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  738  <|@ instruction BRANCH trueDestinationProbability: 0.10789017046034499 condition: = trueDestination: B62 -> B63 falseDestination: B62 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B69" "B70" 
    xhandlers
    flags 
    probability 4597039201284261789
    begin_IR
      LIR
      nr  790  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  792  <|@ st <@st|@reference-map: [rcx:0, rbx:0]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:554) [bci: 278]
locals: rbx|QWORD[.] - r10|QWORD - - stack:44|DWORD - stack:48|DWORD - r9|DWORD stack:60|DWORD r8|DWORD r14|DWORD r13|DWORD stack:64|DWORD r8|DWORD - - - - - - - - - - - - - - - - - 
>@ <|@ instruction CMP [rcx|DWORD[.] * 8 + 12] y: 0 size: DWORD state [bci:278] <|@ <|@
      nr  794  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B68 -> B69 falseDestination: B68 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B71" "B72" 
    xhandlers
    flags 
    probability 4597039201284261789
    begin_IR
      LIR
      nr  814  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  816  <|@ instruction r10|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  818  <|@ instruction rax|DWORD = LEA [rax|DWORD + 48] size: DWORD <|@ <|@
      nr  820  <|@ instruction MOV (x: [rcx|DWORD[.] * 8 + 16], y: rax|DWORD) size: WORD <|@ <|@
      nr  822  <|@ instruction TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  824  <|@ instruction BRANCH trueDestinationProbability: 0.011534143105032153 condition: = trueDestination: B70 -> B71 falseDestination: B70 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B73" 
    xhandlers
    flags 
    probability 4596948413956274540
    begin_IR
      LIR
      nr  836  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  838  <|@ instruction rax|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  840  <|@ instruction r10|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  842  <|@ instruction JUMP ~[] destination: B72 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B65" "B72" 
    successors "B74" "B75" 
    xhandlers
    flags 
    probability 4597889360879007520
    begin_IR
      LIR
      nr  844  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  846  <|@ instruction CMP (x: rbp|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr  848  <|@ instruction r8|DWORD = SETCC condition: > <|@ <|@
      nr  850  <|@ instruction CMP (x: rdx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  852  <|@ instruction rdx|DWORD = SETCC condition: > <|@ <|@
      nr  854  <|@ instruction CMP r9|DWORD y: -3 size: DWORD <|@ <|@
      nr  856  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B73 -> B74 falseDestination: B73 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B77" "B89" 
    xhandlers
    flags 
    probability 4597889360879007520
    begin_IR
      LIR
      nr  866  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  868  <|@ instruction CMP r9|DWORD y: 8 size: DWORD <|@ <|@
      nr  870  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B75 -> B77 falseDestination: B75 -> B89 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B75" "B66" "B71" 
    successors "B78" "B79" 
    xhandlers
    flags 
    probability 4597991127864395515
    begin_IR
      LIR
      nr  876  <|@ instruction [] = LABEL numbPhis: 4 align: false label: ? <|@ <|@
      nr  878  <|@ instruction TEST (x: rcx|DWORD[.], y: rcx|DWORD[.]) size: DWORD <|@ <|@
      nr  880  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B77 -> B78 falseDestination: B77 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B80" 
    xhandlers
    flags 
    probability 4597991127864395515
    begin_IR
      LIR
      nr  892  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  894  <|@ instruction r13|DWORD = MOV [rcx|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  896  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@e9a9e99 encoding: base: 0 shift: 3 <|@ <|@
      nr  898  <|@ instruction r14|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr  900  <|@ instruction rbp|QWORD = MOVE rdi|QWORD moveKind: QWORD <|@ <|@
      nr  902  <|@ instruction rdi|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  904  <|@ instruction JUMP ~[] destination: B79 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" "B84" "B85" 
    successors "B81" "B88" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4611068895554337385
    begin_IR
      LIR
      nr  906  <|@ instruction [] = LABEL numbPhis: 5 align: true label: ? <|@ <|@
      nr  908  <|@ instruction TEST (x: r8|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  910  <|@ instruction BRANCH trueDestinationProbability: 0.9044543048889694 condition: = trueDestination: B80 -> B81 falseDestination: B80 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B82" "B87" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4610267259874414128
    begin_IR
      LIR
      nr  912  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  914  <|@ instruction TEST (x: rdi|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  916  <|@ instruction BRANCH trueDestinationProbability: 0.9603010975971522 condition: = trueDestination: B81 -> B82 falseDestination: B81 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors "B83" "B86" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4609966007107604873
    begin_IR
      LIR
      nr  918  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  920  <|@ instruction CMP (x: r13|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  922  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B82 -> B83 falseDestination: B82 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B84" "B85" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4609966007107604873
    begin_IR
      LIR
      nr  924  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  926  <|@ instruction rax|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr  928  <|@ instruction (highResult: rdx|QWORD, lowResult: rax|QWORD) = CDQ rax|QWORD size: QWORD <|@ <|@
      nr  930  <|@ st <@st|@reference-map: [rcx:0, rbx:0]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:683) [bci: 914]
locals: rbx|QWORD[.] - - - - - - - - r9|DWORD - - - - - - - r10|DWORD int[0|0x0] int[0|0x0] - - - - - rbp|QWORD - r11|QWORD - r14|QWORD - rsi|QWORD - 
>@ <|@ instruction (highResult: rdx|QWORD, lowResult: rax|QWORD) = IDIV (highX: rdx|QWORD, lowX: rax|QWORD, y: r11|QWORD) size: QWORD state [bci:914] <|@ <|@
      nr  932  <|@ instruction r8|DWORD = MOV rax|QWORD size: DWORD <|@ <|@
      nr  934  <|@ instruction rdi|DWORD = LEA [r8|DWORD + 48] size: DWORD <|@ <|@
      nr  936  <|@ instruction MOV (x: [rcx|QWORD[.] + r10|DWORD * 2 + 16], y: rdi|DWORD) size: WORD <|@ <|@
      nr  938  <|@ instruction rdi|QWORD = SHL rdx|QWORD y: 3 size: QWORD <|@ <|@
      nr  940  <|@ instruction rdx|QWORD = SHL rdx|QWORD size: QWORD <|@ <|@
      nr  942  <|@ instruction rdi|QWORD = ADD (x: rdi|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  944  <|@ instruction r10|DWORD = INC r10|DWORD size: DWORD <|@ <|@
      nr  946  <|@ instruction rdx|QWORD = SHL r14|QWORD y: 3 size: QWORD <|@ <|@
      nr  948  <|@ instruction r14|QWORD = SHL r14|QWORD size: QWORD <|@ <|@
      nr  950  <|@ instruction rdx|QWORD = ADD (x: rdx|QWORD, y: r14|QWORD) size: QWORD <|@ <|@
      nr  952  <|@ instruction CMP rdx|QWORD y: 1 size: QWORD <|@ <|@
      nr  954  <|@ instruction BRANCH trueDestinationProbability: 2.81873959865786E-4 condition: < trueDestination: B83 -> B84 falseDestination: B83 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B80" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4609963953039085360
    begin_IR
      LIR
      nr  970  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  972  <|@ instruction CMP (x: rdx|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr  974  <|@ instruction rax|DWORD = SETCC condition: > <|@ <|@
      nr  976  <|@ instruction rbp|QWORD = ADD (x: rdx|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr  978  <|@ instruction CMP (x: rbp|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  980  <|@ instruction rbp|DWORD = SETCC condition: > <|@ <|@
      nr  982  <|@ st <@st|@reference-map: [rcx:0, rbx:0]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:700) [bci: 1039]
locals: rbx|QWORD[.] - - - - - - - - r9|DWORD - - - - - - - r10|DWORD rax|DWORD rbp|DWORD - - r8|DWORD - - rdi|QWORD - r11|QWORD - rdx|QWORD - rsi|QWORD - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:1039] <|@ <|@
      nr  984  <|@ instruction r14|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  986  <|@ instruction r8|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  988  <|@ instruction stack:64|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr  990  <|@ instruction rbp|QWORD = MOVE rdi|QWORD moveKind: QWORD <|@ <|@
      nr  992  <|@ instruction rdi|DWORD = MOVE stack:64|DWORD moveKind: DWORD <|@ <|@
      nr  994  <|@ instruction JUMP ~[] destination: B85 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B80" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4557049088300125308
    begin_IR
      LIR
      nr  956  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  958  <|@ st <@st|@reference-map: [rcx:0, rbx:0]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:700) [bci: 1039]
locals: rbx|QWORD[.] - - - - - - - - r9|DWORD - - - - - - - r10|DWORD int[1|0x1] int[1|0x1] - - r8|DWORD - - rdi|QWORD - r11|QWORD - rdx|QWORD - rsi|QWORD - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:1039] <|@ <|@
      nr  960  <|@ instruction r14|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  962  <|@ instruction rbp|QWORD = MOVE rdi|QWORD moveKind: QWORD <|@ <|@
      nr  964  <|@ instruction rdi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  966  <|@ instruction r8|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  968  <|@ instruction JUMP ~[] destination: B84 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B143" 
    xhandlers
    flags 
    probability 4595581105729921479
    begin_IR
      LIR
      nr 1020  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1022  <|@ instruction rdx|QWORD = SHL rbp|QWORD size: QWORD <|@ <|@
      nr 1024  <|@ instruction rdx|QWORD = SUB (x: rdx|QWORD, ~y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1026  <|@ instruction TEST (x: rbp|QWORD, y: rbp|QWORD) size: QWORD <|@ <|@
      nr 1028  <|@ instruction rsi|DWORD = SETCC condition: = <|@ <|@
      nr 1030  <|@ instruction r11|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr 1032  <|@ instruction rsi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1034  <|@ instruction JUMP ~[] destination: B88 -> B143 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B143"
    from_bci -1
    to_bci -1
    predecessors "B88" "B142" "B87" 
    successors "B144" "B145" 
    xhandlers
    flags 
    probability 4598270386627586327
    begin_IR
      LIR
      nr 1770  <|@ instruction [] = LABEL numbPhis: 6 align: false label: ? <|@ <|@
      nr 1772  <|@ instruction MOVB (x: [rsi|QWORD[.] + 25], y: r11|DWORD) size: BYTE <|@ <|@
      nr 1774  <|@ instruction r11|DWORD = INC r9|DWORD size: DWORD <|@ <|@
      nr 1776  <|@ instruction MOV (x: [rsi|QWORD[.] + 12], y: r11|DWORD) size: DWORD <|@ <|@
      nr 1778  <|@ instruction MOV (x: [rsi|QWORD[.] + 16], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr 1780  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1782  <|@ instruction TEST (x: rdi|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr 1784  <|@ instruction BRANCH trueDestinationProbability: 0.6216282371371225 condition: = trueDestination: B143 -> B144 falseDestination: B143 -> B145 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B144"
    from_bci -1
    to_bci -1
    predecessors "B143" 
    successors 
    xhandlers
    flags 
    probability 4594885466776022457
    begin_IR
      LIR
      nr 1786  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1788  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B30" "B33" 
    xhandlers
    flags 
    probability 4593071939154919121
    begin_IR
      LIR
      nr  328  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  330  <|@ instruction TEST (x: r9|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  332  <|@ instruction BRANCH trueDestinationProbability: 0.8090044605656586 condition: < trueDestination: B28 -> B30 falseDestination: B28 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B54" "B56" 
    xhandlers
    flags 
    probability 4592903625202481288
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  566  <|@ instruction rbp|DWORD = SUB (x: rbp|DWORD, ~y: r14|DWORD) size: DWORD <|@ <|@
      nr  568  <|@ instruction rsi|DWORD = SUB (x: rsi|DWORD, ~y: r14|DWORD) size: DWORD <|@ <|@
      nr  570  <|@ instruction CMP rbx|DWORD y: 1 size: DWORD <|@ <|@
      nr  576  <|@ instruction r14|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  572  <|@ instruction BRANCH trueDestinationProbability: 0.3803485753451483 condition: = trueDestination: B49 -> B54 falseDestination: B49 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B145"
    from_bci -1
    to_bci -1
    predecessors "B143" 
    successors "B146" "B147" 
    xhandlers
    flags 
    probability 4591624594530912490
    begin_IR
      LIR
      nr 1790  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1792  <|@ instruction TEST (x: r8|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr 1794  <|@ instruction BRANCH trueDestinationProbability: 0.7008668650536939 condition: = trueDestination: B145 -> B146 falseDestination: B145 -> B147 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B146"
    from_bci -1
    to_bci -1
    predecessors "B145" 
    successors 
    xhandlers
    flags 
    probability 4589542575902081805
    begin_IR
      LIR
      nr 1796  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1798  <|@ st <@st|@reference-map: []
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:778) [bci: 1505]
locals: - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<FloatingDecimal$BinaryToASCIIBuffer.roundup()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1505] <|@ <|@
      nr 1800  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors "B143" 
    xhandlers
    flags 
    probability 4589484464932113000
    begin_IR
      LIR
      nr 1004  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1006  <|@ instruction rdx|QWORD = SHL rbp|QWORD size: QWORD <|@ <|@
      nr 1008  <|@ instruction rdx|QWORD = SUB (x: rdx|QWORD, ~y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1010  <|@ instruction TEST (x: rbp|QWORD, y: rbp|QWORD) size: QWORD <|@ <|@
      nr 1012  <|@ instruction rsi|DWORD = SETCC condition: = <|@ <|@
      nr 1014  <|@ instruction r11|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr 1016  <|@ instruction rsi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1018  <|@ instruction JUMP ~[] destination: B87 -> B143 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4589360357487768198
    begin_IR
      LIR
      nr  526  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  528  <|@ instruction r13|DWORD = ADD (x: rax|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  530  <|@ instruction r14|DWORD = INC r9|DWORD size: DWORD <|@ <|@
      nr  532  <|@ instruction stack:52|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  534  <|@ instruction rax|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  536  <|@ instruction r14|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr  538  <|@ instruction r13|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  540  <|@ instruction JUMP ~[] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" 
    xhandlers
    flags 
    probability 4589360357487768198
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  490  <|@ instruction rsi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  492  <|@ instruction rsi|DWORD = SUB (x: rsi|DWORD, ~y: r9|DWORD) size: DWORD <|@ <|@
      nr  494  <|@ instruction rbp|DWORD = SUB (x: rax|DWORD, ~y: r9|DWORD) size: DWORD <|@ <|@
      nr  496  <|@ instruction stack:56|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr  498  <|@ instruction rsi|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr  500  <|@ instruction JUMP ~[] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B49" "B52" 
    successors "B56" 
    xhandlers
    flags 
    probability 4591660958128651480
    begin_IR
      LIR
      nr  602  <|@ instruction [] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr  604  <|@ instruction rsi|DWORD = DEC rsi|DWORD size: DWORD <|@ <|@
      nr  606  <|@ instruction JUMP ~[] destination: B54 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B147"
    from_bci -1
    to_bci -1
    predecessors "B145" 
    successors "B148" "B149" 
    xhandlers
    flags 
    probability 4583985295923746675
    begin_IR
      LIR
      nr 1802  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1804  <|@ instruction TEST (x: rdx|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr 1806  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B147 -> B148 falseDestination: B147 -> B149 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B149"
    from_bci -1
    to_bci -1
    predecessors "B147" 
    successors "B150" "B151" 
    xhandlers
    flags 
    probability 4583985295923746675
    begin_IR
      LIR
      nr 1818  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1820  <|@ instruction CMP rdx|QWORD y: 1 size: QWORD <|@ <|@
      nr 1822  <|@ instruction BRANCH trueDestinationProbability: 0.4072231833910034 condition: < trueDestination: B149 -> B150 falseDestination: B149 -> B151 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B151"
    from_bci -1
    to_bci -1
    predecessors "B149" 
    successors 
    xhandlers
    flags 
    probability 4580593910908099462
    begin_IR
      LIR
      nr 1828  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1830  <|@ st <@st|@reference-map: []
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:775) [bci: 1498]
locals: - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<FloatingDecimal$BinaryToASCIIBuffer.roundup()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1498] <|@ <|@
      nr 1832  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" "B26" 
    xhandlers
    flags 
    probability 4583287530145046380
    begin_IR
      LIR
      nr  258  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  260  <|@ instruction CMP r9|DWORD y: 52 size: DWORD <|@ <|@
      nr  262  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B22 -> B23 falseDestination: B22 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B37" 
    xhandlers
    flags 
    probability 4583287530145046380
    begin_IR
      LIR
      nr  264  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  266  <|@ instruction TEST (x: rcx|QWORD, y: r13|QWORD) size: QWORD <|@ <|@
      nr  268  <|@ instruction BRANCH trueDestinationProbability: 0.007057615809059412 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B34" "B23" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4587137980351417586
    begin_IR
      LIR
      nr  420  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  422  <|@ instruction rcx|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  424  <|@ instruction rsi|QWORD = SHR (x: rbp|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr  426  <|@ instruction TEST (x: rsi|QWORD, y: r13|QWORD) size: QWORD <|@ <|@
      nr  428  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" 
    xhandlers
    flags 
    probability 4587137980351417586
    begin_IR
      LIR
      nr  446  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  448  <|@ instruction rcx|QWORD = MOVE input: long[4503599627370496|0x10000000000000] <|@ <|@
      nr  450  <|@ instruction r13|QWORD = AND (x: r13|QWORD, y: rbp|QWORD) size: QWORD <|@ <|@
      nr  452  <|@ instruction r13|QWORD = OR (x: r13|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  454  <|@ instruction rcx|DWORD = MOVE input: int[1075|0x433] <|@ <|@
      nr  456  <|@ instruction rcx|DWORD = SUB (x: rcx|DWORD, ~y: r14|DWORD) size: DWORD <|@ <|@
      nr  458  <|@ instruction r13|QWORD = SHR (x: r13|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr  460  <|@ instruction rcx|DWORD = MOV r13|QWORD size: DWORD <|@ <|@
      nr  462  <|@ instruction rsi|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  464  <|@ instruction rsi|DWORD = SUB (x: rsi|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  466  <|@ instruction r9|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr  468  <|@ instruction JUMP ~[] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B64" "B65" 
    xhandlers
    flags 
    probability 4583272634049493745
    begin_IR
      LIR
      nr  740  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  742  <|@ instruction rax|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  744  <|@ instruction CMP (x: rdx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  746  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B63 -> B64 falseDestination: B63 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" "B73" 
    xhandlers
    flags 
    probability 4583272634049493745
    begin_IR
      LIR
      nr  766  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  768  <|@ instruction r9|DWORD = DEC r9|DWORD size: DWORD <|@ <|@
      nr  770  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  776  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  772  <|@ instruction BRANCH trueDestinationProbability: 0.011534143105032153 condition: = trueDestination: B65 -> B66 falseDestination: B65 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B34" "B157" 
    xhandlers
    flags 
    probability 4582080415526971107
    begin_IR
      LIR
      nr  374  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  376  <|@ instruction CMP r9|DWORD y: 52 size: DWORD <|@ <|@
      nr  378  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B33 -> B34 falseDestination: B33 -> B157 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" "B37" 
    xhandlers
    flags 
    probability 4582080415526971107
    begin_IR
      LIR
      nr  380  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  382  <|@ instruction TEST (x: rcx|QWORD, y: r13|QWORD) size: QWORD <|@ <|@
      nr  384  <|@ instruction BRANCH trueDestinationProbability: 0.007057615809059412 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B150"
    from_bci -1
    to_bci -1
    predecessors "B149" 
    successors 
    xhandlers
    flags 
    probability 4577936391812347867
    begin_IR
      LIR
      nr 1824  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1826  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B57" "B58" 
    successors "B95" "B96" 
    xhandlers
    flags 
    probability 4577144435309065000
    begin_IR
      LIR
      nr 1096  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1084  <|@ instruction stack:64|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr 1086  <|@ instruction stack:72|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr 1088  <|@ instruction stack:60|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr 1090  <|@ instruction stack:76|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr 1092  <|@ instruction stack:80|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr 1098  <|@ instruction rsi|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr 1100  <|@ instruction rbp|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr 1104  <|@ instruction stack:84|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr 1106  <|@ instruction stack:88|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr 1108  <|@ st <@st|@reference-map: [stack:104]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:710) [bci: 1074]
locals: stack:40|QWORD[.] - stack:72|QWORD - - stack:44|DWORD - - - stack:80|DWORD stack:64|DWORD stack:76|DWORD stack:88|DWORD stack:84|DWORD int[0|0x0] stack:76|DWORD - - - - - - - - - - - - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|DWORD, rdx|DWORD] [] callTarget: HotSpotMethod<FDBigInteger.valueOfPow52(int, int)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1074] <|@ <|@
      nr 1110  <|@ st <@st|@reference-map: [rax:0, stack:104]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:710) [bci: 1077]
stack: Object[null] 
locals: stack:40|QWORD[.] - stack:72|QWORD - - stack:44|DWORD - - - stack:80|DWORD stack:64|DWORD stack:76|DWORD stack:88|DWORD stack:84|DWORD int[0|0x0] stack:76|DWORD - - - - - - - - - - - - - - - - - 
>@ <|@ instruction NULLCHECK [rax|QWORD[.]] state [bci:1077] <|@ <|@
      nr 1112  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1114  <|@ instruction stack:96|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1116  <|@ st <@st|@reference-map: [stack:48, stack:104]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:711) [bci: 1081]
locals: stack:40|QWORD[.] - stack:72|QWORD - - stack:44|DWORD - - - stack:80|DWORD stack:64|DWORD stack:76|DWORD stack:88|DWORD stack:84|DWORD int[0|0x0] stack:76|DWORD - - - - - - - - - stack:96|QWORD[.] - - - - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<FDBigInteger.getNormalizationBias()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1081] <|@ <|@
      nr 1118  <|@ instruction rsi|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1120  <|@ instruction rdx|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr 1122  <|@ instruction stack:100|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr 1124  <|@ st <@st|@reference-map: [stack:104]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:712) [bci: 1090]
locals: stack:40|QWORD[.] - stack:72|QWORD - - stack:44|DWORD - - - stack:80|DWORD stack:64|DWORD stack:76|DWORD stack:88|DWORD stack:84|DWORD int[0|0x0] stack:76|DWORD - - - - - - - - - - stack:100|DWORD - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<FDBigInteger.leftShift(int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1090] <|@ <|@
      nr 1126  <|@ instruction stack:96|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1128  <|@ instruction rcx|DWORD = ADD (x: stack:100|DWORD, y: stack:64|DWORD) size: DWORD <|@ <|@
      nr 1130  <|@ instruction rsi|QWORD = MOVE stack:72|QWORD moveKind: QWORD <|@ <|@
      nr 1132  <|@ instruction rdx|DWORD = MOVE stack:76|DWORD moveKind: DWORD <|@ <|@
      nr 1134  <|@ st <@st|@reference-map: [stack:48, stack:104]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:714) [bci: 1103]
locals: stack:40|QWORD[.] - - - - stack:44|DWORD - - - stack:80|DWORD - - stack:88|DWORD stack:84|DWORD int[0|0x0] stack:76|DWORD - - - - - - - - - stack:96|QWORD[.] stack:100|DWORD - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD, rdx|DWORD, rcx|DWORD] [] callTarget: HotSpotMethod<FDBigInteger.valueOfMulPow52(long, int, int)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1103] <|@ <|@
      nr 1136  <|@ instruction stack:72|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1138  <|@ st <@st|@reference-map: [stack:48, stack:72, stack:104]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:714) [bci: 1106]
stack: Object[null] 
locals: stack:40|QWORD[.] - - - - stack:44|DWORD - - - stack:80|DWORD - - stack:88|DWORD stack:84|DWORD int[0|0x0] stack:76|DWORD - - - - - - - - - stack:96|QWORD[.] stack:100|DWORD - - - - - - 
>@ <|@ instruction NULLCHECK [rax|QWORD[.]] state [bci:1106] <|@ <|@
      nr 1140  <|@ instruction rdx|DWORD = INC stack:100|DWORD size: DWORD <|@ <|@
      nr 1142  <|@ instruction rsi|DWORD = MOVE stack:56|DWORD moveKind: DWORD <|@ <|@
      nr 1144  <|@ st <@st|@reference-map: [stack:48, stack:72, stack:104]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:715) [bci: 1119]
locals: stack:40|QWORD[.] - - - - stack:44|DWORD - - - stack:80|DWORD - - stack:88|DWORD stack:84|DWORD - - - - - - - - - - - stack:96|QWORD[.] stack:100|DWORD stack:72|QWORD[.] - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|DWORD, rdx|DWORD] [] callTarget: HotSpotMethod<FDBigInteger.valueOfPow52(int, int)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1119] <|@ <|@
      nr 1146  <|@ instruction rdx|DWORD = ADD (x: stack:88|DWORD, y: stack:100|DWORD) size: DWORD <|@ <|@
      nr 1148  <|@ instruction rdx|DWORD = INC rdx|DWORD size: DWORD <|@ <|@
      nr 1150  <|@ instruction rsi|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr 1152  <|@ instruction stack:112|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1154  <|@ st <@st|@reference-map: [stack:32, stack:48, stack:72, stack:104]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:717) [bci: 1135]
locals: stack:40|QWORD[.] - - - - stack:44|DWORD - - - stack:80|DWORD - - - - - - - - - - - - - - - stack:96|QWORD[.] - stack:72|QWORD[.] stack:112|QWORD[.] - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|DWORD, rdx|DWORD] [] callTarget: HotSpotMethod<FDBigInteger.valueOfPow52(int, int)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1135] <|@ <|@
      nr 1156  <|@ instruction stack:120|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1158  <|@ st <@st|@reference-map: [stack:24, stack:32, stack:48, stack:72, stack:104]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:717) [bci: 1138]
stack: Object[null] 
locals: stack:40|QWORD[.] - - - - stack:44|DWORD - - - stack:80|DWORD - - - - - - - - - - - - - - - stack:96|QWORD[.] - stack:72|QWORD[.] stack:112|QWORD[.] - - - - 
>@ <|@ instruction NULLCHECK [rax|QWORD[.]] state [bci:1138] <|@ <|@
      nr 1160  <|@ instruction rsi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1162  <|@ instruction rdx|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1164  <|@ st <@st|@reference-map: [stack:24, stack:32, stack:48, stack:72, stack:104]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:724) [bci: 1147]
locals: stack:40|QWORD[.] - - - - stack:44|DWORD - - - stack:80|DWORD - - - - - - - int[0|0x0] - - - - - - - stack:96|QWORD[.] - stack:72|QWORD[.] stack:112|QWORD[.] stack:120|QWORD[.] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<FDBigInteger.quoRemIteration(FDBigInteger)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1147] <|@ <|@
      nr 1166  <|@ instruction rsi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1168  <|@ instruction rdx|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1170  <|@ instruction stack:60|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr 1172  <|@ st <@st|@reference-map: [stack:24, stack:32, stack:48, stack:72, stack:104]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:725) [bci: 1156]
locals: stack:40|QWORD[.] - - - - stack:44|DWORD - - - stack:80|DWORD - - - - - - - int[0|0x0] - - - - stack:60|DWORD - - stack:96|QWORD[.] - stack:72|QWORD[.] stack:112|QWORD[.] stack:120|QWORD[.] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<FDBigInteger.cmp(FDBigInteger)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1156] <|@ <|@
      nr 1174  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr 1176  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B94 -> B95 falseDestination: B94 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B97" "B98" 
    xhandlers
    flags 
    probability 4577144435309065000
    begin_IR
      LIR
      nr 1192  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1194  <|@ instruction rsi|QWORD[.] = MOVE stack:120|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1196  <|@ instruction rdx|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1198  <|@ instruction rcx|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1200  <|@ st <@st|@reference-map: [stack:24, stack:32, stack:48, stack:72, stack:104]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:726) [bci: 1175]
locals: stack:40|QWORD[.] - - - - stack:44|DWORD - - - stack:80|DWORD - - - - - - - int[0|0x0] int[0|0x0] - - - stack:60|DWORD - - stack:96|QWORD[.] - stack:72|QWORD[.] stack:112|QWORD[.] stack:120|QWORD[.] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] [] callTarget: HotSpotMethod<FDBigInteger.addAndCmp(FDBigInteger, FDBigInteger)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1175] <|@ <|@
      nr 1202  <|@ instruction CMP rax|DWORD y: 1 size: DWORD <|@ <|@
      nr 1204  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B96 -> B97 falseDestination: B96 -> B98 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B96" 
    successors "B99" "B100" 
    xhandlers
    flags 
    probability 4577144435309065000
    begin_IR
      LIR
      nr 1218  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1220  <|@ instruction r10|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr 1222  <|@ instruction TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr 1224  <|@ instruction BRANCH trueDestinationProbability: 0.11184606133493691 condition: = trueDestination: B98 -> B99 falseDestination: B98 -> B100 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B98" 
    successors "B101" "B103" 
    xhandlers
    flags 
    probability 4576474386411764849
    begin_IR
      LIR
      nr 1238  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1240  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1242  <|@ instruction rdx|DWORD[.] = MOV [rsi|QWORD[.] + 28] size: DWORD <|@ <|@
      nr 1244  <|@ st <@st|@reference-map: [rdx:0, rsi:0, stack:24, stack:32, stack:48, stack:72, stack:104]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:726) [bci: 1178]
stack: rax|DWORD 
locals: rsi|QWORD[.] - - - - stack:44|DWORD - - - stack:80|DWORD - - - - - - - int[0|0x0] int[0|0x0] - - - r10|DWORD - - stack:96|QWORD[.] - stack:72|QWORD[.] stack:112|QWORD[.] stack:120|QWORD[.] - - - 
>@ <|@ instruction CMP [rdx|DWORD[.] * 8 + 12] y: 0 size: DWORD state [bci:1178] <|@ <|@
      nr 1246  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B100 -> B101 falseDestination: B100 -> B103 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B104" 
    xhandlers
    flags 
    probability 4576474386411764849
    begin_IR
      LIR
      nr 1266  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1268  <|@ instruction r10|DWORD = LEA [r10|DWORD + 48] size: DWORD <|@ <|@
      nr 1270  <|@ instruction MOV (x: [rdx|DWORD[.] * 8 + 16], y: r10|DWORD) size: WORD <|@ <|@
      nr 1272  <|@ instruction r11|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1274  <|@ instruction r10|DWORD = MOVE stack:80|DWORD moveKind: DWORD <|@ <|@
      nr 1278  <|@ instruction JUMP ~[] destination: B103 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B99" "B103" 
    successors "B110" "B106" 
    xhandlers
    flags 
    probability 4577144435309065000
    begin_IR
      LIR
      nr 1280  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr 1234  <|@ instruction rax|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1282  <|@ instruction stack:60|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr 1284  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr 1286  <|@ instruction BRANCH trueDestinationProbability: 0.057125676488274206 condition: = trueDestination: B104 -> B110 falseDestination: B104 -> B106 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B110" "B108" 
    xhandlers
    flags 
    probability 4576802206033562235
    begin_IR
      LIR
      nr 1292  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1294  <|@ instruction CMP r10|DWORD y: -3 size: DWORD <|@ <|@
      nr 1296  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: < trueDestination: B106 -> B110 falseDestination: B106 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B106" 
    successors "B110" "B152" 
    xhandlers
    flags 
    probability 4575122898532446136
    begin_IR
      LIR
      nr 1302  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1304  <|@ instruction CMP r10|DWORD y: 8 size: DWORD <|@ <|@
      nr 1306  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B108 -> B110 falseDestination: B108 -> B152 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B108" "B104" "B106" 
    successors "B111" 
    xhandlers
    flags 
    probability 4577144435309065000
    begin_IR
      LIR
      nr 1312  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1314  <|@ instruction rcx|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1316  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1318  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1320  <|@ instruction stack:100|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr 1326  <|@ instruction JUMP ~[] destination: B110 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B110" "B115" "B128" 
    successors "B112" "B135" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4595485752836987786
    begin_IR
      LIR
      nr 1328  <|@ instruction [] = LABEL numbPhis: 4 align: true label: ? <|@ <|@
      nr 1322  <|@ instruction rax|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1324  <|@ instruction r10|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1330  <|@ instruction TEST (x: r8|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr 1332  <|@ instruction BRANCH trueDestinationProbability: 0.9453314326443336 condition: = trueDestination: B111 -> B112 falseDestination: B111 -> B135 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B113" "B135" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4595140371449736969
    begin_IR
      LIR
      nr 1334  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1336  <|@ instruction TEST (x: r9|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr 1338  <|@ instruction BRANCH trueDestinationProbability: 0.9951368468672246 condition: = trueDestination: B112 -> B113 falseDestination: B112 -> B135 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B112" 
    successors "B114" "B117" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4595111326991487063
    begin_IR
      LIR
      nr 1340  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1342  <|@ st <@st|@reference-map: [rax:0, rcx:0, r10:0, stack:24, stack:48, stack:72, stack:104]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:744) [bci: 1268]
locals: stack:40|QWORD[.] - - - - - - - - stack:60|DWORD - - - - - - - stack:100|DWORD int[0|0x0] int[0|0x0] - - - - - r10|QWORD[.] - rax|QWORD[.] Object[null] stack:120|QWORD[.] - - - 
>@ <|@ instruction NULLCHECK [rcx|QWORD[.]] state [bci:1268] <|@ <|@
      nr 1344  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1346  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1348  <|@ instruction stack:128|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1350  <|@ st <@st|@reference-map: [stack:16, stack:24, stack:48, stack:72, stack:104]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:745) [bci: 1282]
locals: stack:40|QWORD[.] - - - - - - - - stack:60|DWORD - - - - - - - stack:100|DWORD - - - - - - - stack:96|QWORD[.] - stack:72|QWORD[.] stack:128|QWORD[.] stack:120|QWORD[.] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<FDBigInteger.quoRemIteration(FDBigInteger)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1282] <|@ <|@
      nr 1352  <|@ instruction stack:88|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr 1354  <|@ instruction rsi|QWORD[.] = MOVE stack:128|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1356  <|@ st <@st|@reference-map: [stack:24, stack:48, stack:72, stack:104]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:747) [bci: 1312]
locals: stack:40|QWORD[.] - - - - - - - - stack:60|DWORD - - - - - - - stack:100|DWORD - - - - stack:88|DWORD - - stack:96|QWORD[.] - stack:72|QWORD[.] - stack:120|QWORD[.] - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<FDBigInteger.multBy10()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1312] <|@ <|@
      nr 1358  <|@ st <@st|@reference-map: [rax:0, stack:24, stack:48, stack:72, stack:104]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:747) [bci: 1315]
stack: rax|QWORD[.] 
locals: stack:40|QWORD[.] - - - - - - - - stack:60|DWORD - - - - - - - stack:100|DWORD - - - - stack:88|DWORD - - stack:96|QWORD[.] - stack:72|QWORD[.] - stack:120|QWORD[.] - - - 
>@ <|@ instruction rsi|DWORD = MOV [rax|QWORD[.] + 12] size: DWORD state [bci:1315] <|@ <|@
      nr 1360  <|@ instruction rdx|DWORD = MOV [rax|QWORD[.] + 16] size: DWORD <|@ <|@
      nr 1362  <|@ instruction r10|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1364  <|@ instruction rcx|DWORD = MOV [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr 1366  <|@ instruction rsi|DWORD = ADD (x: rsi|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr 1368  <|@ instruction r11|DWORD = ADD (x: rcx|DWORD, ~y: [r10|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr 1370  <|@ instruction r8|DWORD = MOVE stack:88|DWORD moveKind: DWORD <|@ <|@
      nr 1372  <|@ instruction r9|DWORD = LEA [r8|DWORD + 48] size: DWORD <|@ <|@
      nr 1374  <|@ instruction stack:56|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr 1376  <|@ instruction rbx|DWORD = INC stack:100|DWORD size: DWORD <|@ <|@
      nr 1378  <|@ instruction CMP (x: r11|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr 1380  <|@ instruction BRANCH trueDestinationProbability: 0.2175262580341747 condition: > trueDestination: B113 -> B114 falseDestination: B113 -> B117 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B113" 
    successors "B118" "B119" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4593818501724479617
    begin_IR
      LIR
      nr 1442  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1444  <|@ instruction CMP (x: rsi|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr 1446  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B117 -> B118 falseDestination: B117 -> B119 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B117" 
    successors "B120" "B121" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4593818501724479617
    begin_IR
      LIR
      nr 1460  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1462  <|@ instruction CMP rcx|DWORD y: 1 size: DWORD <|@ <|@
      nr 1464  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B119 -> B120 falseDestination: B119 -> B121 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B119" 
    successors "B122" "B123" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4593818501724479617
    begin_IR
      LIR
      nr 1478  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1480  <|@ instruction CMP rdx|DWORD y: 1 size: DWORD <|@ <|@
      nr 1482  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B121 -> B122 falseDestination: B121 -> B123 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B123"
    from_bci -1
    to_bci -1
    predecessors "B121" 
    successors "B124" "B131" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4593818501724479617
    begin_IR
      LIR
      nr 1496  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1498  <|@ instruction rsi|DWORD[.] = MOV [r10|QWORD[.] + 24] size: DWORD <|@ <|@
      nr 1500  <|@ instruction rcx|DWORD = DEC rcx|DWORD size: DWORD <|@ <|@
      nr 1502  <|@ st <@st|@reference-map: [rax:0, rsi:0, r10:0, stack:24, stack:48, stack:72, stack:104]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:747) [bci: 1315]
stack: rax|QWORD[.] 
locals: stack:40|QWORD[.] - - - - - - - - stack:60|DWORD - - - - - - - stack:100|DWORD - - - - r8|DWORD - - stack:96|QWORD[.] - r10|QWORD[.] - stack:120|QWORD[.] - - - 
>@ <|@ instruction CMP (x: rcx|DWORD, y: [rsi|DWORD[.] * 8 + 12]) size: DWORD state [bci:1315] <|@ <|@
      nr 1504  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B123 -> B124 falseDestination: B123 -> B131 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B124"
    from_bci -1
    to_bci -1
    predecessors "B123" 
    successors "B125" "B130" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4593818501724479617
    begin_IR
      LIR
      nr 1506  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1508  <|@ instruction r11|DWORD[.] = MOV [rax|QWORD[.] + 24] size: DWORD <|@ <|@
      nr 1510  <|@ instruction rdx|DWORD = DEC rdx|DWORD size: DWORD <|@ <|@
      nr 1512  <|@ st <@st|@reference-map: [rax:0, rsi:0, r10:0, r11:0, stack:24, stack:48, stack:72, stack:104]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:747) [bci: 1315]
stack: rax|QWORD[.] 
locals: stack:40|QWORD[.] - - - - - - - - stack:60|DWORD - - - - - - - stack:100|DWORD - - - - r8|DWORD - - stack:96|QWORD[.] - r10|QWORD[.] - stack:120|QWORD[.] - - - 
>@ <|@ instruction CMP (x: rdx|DWORD, y: [r11|DWORD[.] * 8 + 12]) size: DWORD state [bci:1315] <|@ <|@
      nr 1514  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B124 -> B125 falseDestination: B124 -> B130 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B125"
    from_bci -1
    to_bci -1
    predecessors "B124" 
    successors "B126" "B127" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4593818501724479617
    begin_IR
      LIR
      nr 1516  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1518  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@e9a9e99 encoding: base: 0 shift: 3 <|@ <|@
      nr 1520  <|@ instruction rsi|DWORD = MOV [rsi|QWORD[.] + rcx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 1522  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@e9a9e99 encoding: base: 0 shift: 3 <|@ <|@
      nr 1524  <|@ instruction rdx|DWORD = MOV [r11|QWORD[.] + rdx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 1526  <|@ instruction CMP (x: rdx|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr 1528  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B125 -> B126 falseDestination: B125 -> B127 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B127"
    from_bci -1
    to_bci -1
    predecessors "B125" 
    successors "B128" "B129" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4593818501724479617
    begin_IR
      LIR
      nr 1542  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1544  <|@ instruction stack:64|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1546  <|@ instruction CMP (x: rdx|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr 1548  <|@ instruction rbp|DWORD = SETCC condition: |>| <|@ <|@
      nr 1550  <|@ instruction rsi|QWORD[.] = MOVE stack:120|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1552  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1554  <|@ instruction rcx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1556  <|@ instruction stack:128|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1558  <|@ instruction stack:132|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr 1560  <|@ st <@st|@reference-map: [stack:16, stack:24, stack:48, stack:72, stack:104]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:749) [bci: 1340]
locals: stack:40|QWORD[.] - - - - - - - - stack:60|DWORD - - - - - - - stack:100|DWORD stack:132|DWORD - - - stack:88|DWORD - - stack:96|QWORD[.] - stack:72|QWORD[.] stack:128|QWORD[.] stack:120|QWORD[.] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] [] callTarget: HotSpotMethod<FDBigInteger.addAndCmp(FDBigInteger, FDBigInteger)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1340] <|@ <|@
      nr 1562  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1564  <|@ instruction rdx|DWORD[.] = MOV [rsi|QWORD[.] + 28] size: DWORD <|@ <|@
      nr 1566  <|@ instruction r10|DWORD = MOVE stack:100|DWORD moveKind: DWORD <|@ <|@
      nr 1568  <|@ st <@st|@reference-map: [rdx:0, rsi:0, stack:16, stack:24, stack:48, stack:72, stack:104]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:749) [bci: 1343]
stack: rax|DWORD 
locals: rsi|QWORD[.] - - - - - - - - stack:60|DWORD - - - - - - - r10|DWORD stack:132|DWORD - - - stack:88|DWORD - - stack:96|QWORD[.] - stack:72|QWORD[.] stack:128|QWORD[.] stack:120|QWORD[.] - - - 
>@ <|@ instruction CMP (x: r10|DWORD, y: [rdx|DWORD[.] * 8 + 12]) size: DWORD state [bci:1343] <|@ <|@
      nr 1570  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B127 -> B128 falseDestination: B127 -> B129 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B128"
    from_bci -1
    to_bci -1
    predecessors "B127" 
    successors "B111" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4593818501724479617
    begin_IR
      LIR
      nr 1572  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1574  <|@ instruction r9|DWORD = MOVE stack:56|DWORD moveKind: DWORD <|@ <|@
      nr 1576  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@e9a9e99 encoding: base: 0 shift: 3 <|@ <|@
      nr 1578  <|@ instruction MOV (x: [rdx|QWORD[.] + r10|DWORD * 2 + 16], y: r9|DWORD) size: WORD <|@ <|@
      nr 1580  <|@ instruction CMP rax|DWORD y: 1 size: DWORD <|@ <|@
      nr 1582  <|@ instruction r9|DWORD = SETCC condition: < <|@ <|@
      nr 1584  <|@ instruction rcx|QWORD[.] = MOVE stack:128|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1586  <|@ instruction r8|DWORD = MOVE stack:132|DWORD moveKind: DWORD <|@ <|@
      nr 1588  <|@ instruction stack:100|DWORD = STACKMOVE (input: stack:64|DWORD, ~backupSlot: stack:32|QWORD) scratch: rax <|@ <|@
      nr 1594  <|@ instruction JUMP ~[] destination: B128 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B113" 
    successors "B115" "B116" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4585332122103824215
    begin_IR
      LIR
      nr 1382  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1384  <|@ instruction stack:64|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1386  <|@ instruction stack:128|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1388  <|@ instruction rsi|QWORD[.] = MOVE stack:120|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1390  <|@ instruction rdx|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1392  <|@ instruction rcx|QWORD[.] = MOVE stack:128|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1394  <|@ st <@st|@reference-map: [stack:16, stack:24, stack:48, stack:72, stack:104]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:749) [bci: 1340]
locals: stack:40|QWORD[.] - - - - - - - - stack:60|DWORD - - - - - - - stack:100|DWORD int[0|0x0] - - - stack:88|DWORD - - stack:96|QWORD[.] - stack:72|QWORD[.] stack:128|QWORD[.] stack:120|QWORD[.] - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] [] callTarget: HotSpotMethod<FDBigInteger.addAndCmp(FDBigInteger, FDBigInteger)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1340] <|@ <|@
      nr 1396  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1398  <|@ instruction rdx|DWORD[.] = MOV [rsi|QWORD[.] + 28] size: DWORD <|@ <|@
      nr 1400  <|@ instruction r10|DWORD = MOVE stack:100|DWORD moveKind: DWORD <|@ <|@
      nr 1402  <|@ st <@st|@reference-map: [rdx:0, rsi:0, stack:16, stack:24, stack:48, stack:72, stack:104]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:749) [bci: 1343]
stack: rax|DWORD 
locals: rsi|QWORD[.] - - - - - - - - stack:60|DWORD - - - - - - - r10|DWORD int[0|0x0] - - - stack:88|DWORD - - stack:96|QWORD[.] - stack:72|QWORD[.] stack:128|QWORD[.] stack:120|QWORD[.] - - - 
>@ <|@ instruction CMP (x: r10|DWORD, y: [rdx|DWORD[.] * 8 + 12]) size: DWORD state [bci:1343] <|@ <|@
      nr 1404  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B114 -> B115 falseDestination: B114 -> B116 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors "B111" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4585332122103824215
    begin_IR
      LIR
      nr 1406  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1408  <|@ instruction rbx|DWORD = MOVE stack:64|DWORD moveKind: DWORD <|@ <|@
      nr 1410  <|@ instruction r9|DWORD = MOVE stack:56|DWORD moveKind: DWORD <|@ <|@
      nr 1412  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@e9a9e99 encoding: base: 0 shift: 3 <|@ <|@
      nr 1414  <|@ instruction MOV (x: [rdx|QWORD[.] + r10|DWORD * 2 + 16], y: r9|DWORD) size: WORD <|@ <|@
      nr 1416  <|@ instruction CMP rax|DWORD y: 1 size: DWORD <|@ <|@
      nr 1418  <|@ instruction r9|DWORD = SETCC condition: < <|@ <|@
      nr 1420  <|@ instruction rcx|QWORD[.] = MOVE stack:128|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1422  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1424  <|@ instruction stack:100|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1430  <|@ instruction JUMP ~[] destination: B115 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B135"
    from_bci -1
    to_bci -1
    predecessors "B111" "B112" 
    successors "B136" "B137" 
    xhandlers
    flags 
    probability 4577144435309065001
    begin_IR
      LIR
      nr 1656  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1650  <|@ instruction r10|DWORD = MOVE stack:100|DWORD moveKind: DWORD <|@ <|@
      nr 1652  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1658  <|@ instruction TEST (x: r9|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr 1660  <|@ instruction BRANCH trueDestinationProbability: 0.04269392663860493 condition: = trueDestination: B135 -> B136 falseDestination: B135 -> B137 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B137"
    from_bci -1
    to_bci -1
    predecessors "B135" 
    successors "B138" "B139" 
    xhandlers
    flags 
    probability 4576888663955794513
    begin_IR
      LIR
      nr 1674  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1676  <|@ instruction TEST (x: r8|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr 1678  <|@ instruction BRANCH trueDestinationProbability: 0.08103015075376885 condition: = trueDestination: B137 -> B138 falseDestination: B137 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B139"
    from_bci -1
    to_bci -1
    predecessors "B137" 
    successors "B140" 
    xhandlers
    flags 
    probability 4576423952623796022
    begin_IR
      LIR
      nr 1692  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1694  <|@ instruction stack:88|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr 1696  <|@ instruction stack:132|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr 1698  <|@ instruction rsi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1700  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1702  <|@ st <@st|@reference-map: [stack:24, stack:104]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:753) [bci: 1385]
locals: stack:40|QWORD[.] - - - - - - - - stack:60|DWORD - - - - - - - stack:100|DWORD stack:132|DWORD stack:88|DWORD - - - - - - - - - stack:120|QWORD[.] - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<FDBigInteger.leftShift(int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1385] <|@ <|@
      nr 1704  <|@ st <@st|@reference-map: [rax:0, stack:24, stack:104]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:753) [bci: 1388]
stack: Object[null] 
locals: stack:40|QWORD[.] - - - - - - - - stack:60|DWORD - - - - - - - stack:100|DWORD stack:132|DWORD stack:88|DWORD - - - - - - - - - stack:120|QWORD[.] - - - 
>@ <|@ instruction NULLCHECK [rax|QWORD[.]] state [bci:1388] <|@ <|@
      nr 1706  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1708  <|@ instruction rdx|QWORD[.] = MOVE stack:120|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1710  <|@ instruction stack:144|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1712  <|@ st <@st|@reference-map: [stack:0, stack:104]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:754) [bci: 1394]
locals: stack:40|QWORD[.] - - - - - - - - stack:60|DWORD - - - - - - - stack:100|DWORD stack:132|DWORD stack:88|DWORD - - - - - - - stack:144|QWORD[.] - - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<FDBigInteger.cmp(FDBigInteger)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1394] <|@ <|@
      nr 1714  <|@ instruction rsi|QWORD = MOVSXD rax|DWORD size: QWORD <|@ <|@
      nr 1716  <|@ instruction rax|QWORD[.] = MOVE stack:144|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1718  <|@ instruction stack:128|QWORD = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr 1720  <|@ instruction JUMP ~[] destination: B139 -> B140 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B140"
    from_bci -1
    to_bci -1
    predecessors "B139" "B136" "B138" 
    successors "B141" "B142" 
    xhandlers
    flags 
    probability 4577144435309065002
    begin_IR
      LIR
      nr 1722  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr 1724  <|@ instruction rdx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[FDBigInteger@241972498] <|@ <|@
      nr 1726  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1728  <|@ st <@st|@reference-map: [stack:104]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:758) [bci: 1412]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] - - - - - - - - stack:60|DWORD - - - - - - - stack:100|DWORD stack:132|DWORD stack:88|DWORD stack:128|QWORD - - - - - - - - - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<FDBigInteger.cmp(FDBigInteger)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1412] <|@ <|@
      nr 1730  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr 1732  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B140 -> B141 falseDestination: B140 -> B142 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B142"
    from_bci -1
    to_bci -1
    predecessors "B140" 
    successors "B143" 
    xhandlers
    flags 
    probability 4577144435309065002
    begin_IR
      LIR
      nr 1752  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1754  <|@ instruction r11|DWORD = MOVE input: byte[0|0x0] <|@ <|@
      nr 1756  <|@ instruction rdx|QWORD = MOVE stack:128|QWORD moveKind: QWORD <|@ <|@
      nr 1758  <|@ instruction rdi|DWORD = MOVE stack:88|DWORD moveKind: DWORD <|@ <|@
      nr 1760  <|@ instruction r8|DWORD = MOVE stack:132|DWORD moveKind: DWORD <|@ <|@
      nr 1762  <|@ instruction r10|DWORD = MOVE stack:100|DWORD moveKind: DWORD <|@ <|@
      nr 1764  <|@ instruction r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr 1766  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1768  <|@ instruction JUMP ~[] destination: B142 -> B143 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B77" 
    xhandlers
    flags 
    probability 4567956811517496389
    begin_IR
      LIR
      nr  826  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  828  <|@ instruction r10|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  830  <|@ instruction rdx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  832  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  834  <|@ instruction JUMP ~[] destination: B71 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4564636031887714146
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   76  <|@ instruction stack:48|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr   78  <|@ instruction rsi|DWORD = SUB (x: rdx|DWORD, ~y: r8|DWORD) size: DWORD <|@ <|@
      nr   80  <|@ instruction rsi|DWORD = DEC rsi|DWORD size: DWORD <|@ <|@
      nr   82  <|@ instruction CMP rsi|DWORD y: 2 size: DWORD <|@ <|@
      nr   84  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B13" 
    xhandlers
    flags 
    probability 4560132432260343650
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   96  <|@ instruction rcx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:sun.misc.FloatingDecimal$BinaryToASCIIBuffer] <|@ <|@
      nr   98  <|@ instruction rcx|DWORD[.] = MOV [rcx|QWORD[.] + 104] size: DWORD <|@ <|@
      nr  100  <|@ st <@st|@reference-map: [rcx:0, stack:104]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:443) [bci: 67]
locals: stack:40|QWORD[.] rdx|DWORD r10|QWORD - r8|DWORD stack:44|DWORD r11|DWORD stack:48|DWORD - - - - - - - - - - - - - - - - - - - - - - - - - 
>@ <|@ instruction rbx|DWORD = MOV [rcx|DWORD[.] * 8 + 12] size: DWORD state [bci:67] <|@ <|@
      nr  102  <|@ instruction CMP (x: rbx|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr  104  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B9 -> B10 falseDestination: B9 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B15" 
    xhandlers
    flags 
    probability 4555628832632973154
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  138  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  140  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  142  <|@ instruction JUMP ~[] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B98" 
    successors "B104" 
    xhandlers
    flags 
    probability 4563003214077343158
    begin_IR
      LIR
      nr 1226  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1228  <|@ instruction rsi|DWORD = DEC stack:80|DWORD size: DWORD <|@ <|@
      nr 1230  <|@ instruction r11|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1232  <|@ instruction r10|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr 1236  <|@ instruction JUMP ~[] destination: B99 -> B104 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B138"
    from_bci -1
    to_bci -1
    predecessors "B137" 
    successors "B140" 
    xhandlers
    flags 
    probability 4560574604583547320
    begin_IR
      LIR
      nr 1680  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1682  <|@ instruction rax|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1684  <|@ instruction stack:128|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1686  <|@ instruction stack:88|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr 1688  <|@ instruction stack:132|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr 1690  <|@ instruction JUMP ~[] destination: B138 -> B140 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B15" 
    xhandlers
    flags 
    probability 4560132432260343650
    begin_IR
      LIR
      nr   86  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   88  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   90  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr   92  <|@ instruction JUMP ~[] destination: B8 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B136"
    from_bci -1
    to_bci -1
    predecessors "B135" 
    successors "B140" 
    xhandlers
    flags 
    probability 4556820306948856563
    begin_IR
      LIR
      nr 1662  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1664  <|@ instruction rax|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1666  <|@ instruction stack:128|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1668  <|@ instruction stack:88|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr 1670  <|@ instruction stack:132|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr 1672  <|@ instruction JUMP ~[] destination: B136 -> B140 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4555628832632973154
    begin_IR
      LIR
      nr  106  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  108  <|@ instruction rax|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  110  <|@ instruction r13|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  112  <|@ instruction CMP (x: rbx|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr  114  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B10 -> B11 falseDestination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B15" 
    xhandlers
    flags 
    probability 4555628832632973154
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  118  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@e9a9e99 encoding: base: 0 shift: 3 <|@ <|@
      nr  120  <|@ instruction r8|DWORD = MOV [rcx|QWORD[.] + rsi|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  122  <|@ instruction rsi|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  124  <|@ instruction JUMP ~[] destination: B11 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B77" 
    xhandlers
    flags 
    probability 4554257208233383042
    begin_IR
      LIR
      nr  774  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  778  <|@ instruction rdx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  780  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  782  <|@ instruction JUMP ~[] destination: B66 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B40" 
    xhandlers
    flags 
    probability 4551025052825482075
    begin_IR
      LIR
      nr  270  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  272  <|@ instruction stack:52|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  274  <|@ instruction stack:48|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  276  <|@ instruction rax|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  278  <|@ instruction rbx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  280  <|@ instruction rcx|QWORD = MOVE input: long[4503599627370496|0x10000000000000] <|@ <|@
      nr  282  <|@ instruction r13|QWORD = AND (x: r13|QWORD, y: rbp|QWORD) size: QWORD <|@ <|@
      nr  284  <|@ instruction r13|QWORD = OR (x: r13|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  286  <|@ instruction rcx|DWORD = MOVE input: int[1075|0x433] <|@ <|@
      nr  288  <|@ instruction rcx|DWORD = SUB (x: rcx|DWORD, ~y: r14|DWORD) size: DWORD <|@ <|@
      nr  290  <|@ instruction r13|QWORD = SHR (x: r13|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr  292  <|@ instruction r9|DWORD = MOV r13|QWORD size: DWORD <|@ <|@
      nr  294  <|@ instruction rax|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  296  <|@ instruction rbx|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  298  <|@ instruction JUMP ~[] destination: B24 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B40" 
    xhandlers
    flags 
    probability 4549934575870362106
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  388  <|@ instruction stack:52|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  390  <|@ instruction stack:48|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  392  <|@ instruction rax|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  394  <|@ instruction rbx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  396  <|@ instruction rcx|QWORD = MOVE input: long[4503599627370496|0x10000000000000] <|@ <|@
      nr  398  <|@ instruction r13|QWORD = AND (x: r13|QWORD, y: rbp|QWORD) size: QWORD <|@ <|@
      nr  400  <|@ instruction r13|QWORD = OR (x: r13|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  402  <|@ instruction rcx|DWORD = MOVE input: int[1075|0x433] <|@ <|@
      nr  404  <|@ instruction rcx|DWORD = SUB (x: rcx|DWORD, ~y: r14|DWORD) size: DWORD <|@ <|@
      nr  406  <|@ instruction r13|QWORD = SHR (x: r13|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr  408  <|@ instruction r9|DWORD = MOV r13|QWORD size: DWORD <|@ <|@
      nr  410  <|@ instruction rax|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  412  <|@ instruction rbx|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  414  <|@ instruction JUMP ~[] destination: B35 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B102" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1248  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1250  <|@ instruction r11|DWORD = MOVE input: int[-291867|0xfffffffffffb8be5] <|@ <|@
      nr 1252  <|@ instruction rcx|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1254  <|@ instruction rbx|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1256  <|@ instruction JUMP ~[] destination: B101 -> B102 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B97" "B101" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1258  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1260  <|@ instruction MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD <|@ <|@
      nr 1262  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1264  <|@ st <@st|@reference-map: [rbx:0, stack:24, stack:32, stack:48, stack:72]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:726) [bci: 1178]
stack: rax|DWORD 
locals: rbx|QWORD[.] - - - - rcx|DWORD - - - stack:80|DWORD - - - - - - - int[0|0x0] int[0|0x0] - - - r10|DWORD - - stack:96|QWORD[.] - stack:72|QWORD[.] stack:112|QWORD[.] stack:120|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:1178] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B154" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  796  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  798  <|@ instruction rbp|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr  800  <|@ instruction rsi|DWORD = MOVE stack:64|DWORD moveKind: DWORD <|@ <|@
      nr  802  <|@ instruction r11|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  804  <|@ instruction rdi|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  806  <|@ instruction rcx|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  808  <|@ instruction r8|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  810  <|@ instruction r10|DWORD = MOVE input: int[-290587|0xfffffffffffb90e5] <|@ <|@
      nr  812  <|@ instruction JUMP ~[] destination: B69 -> B154 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B154"
    from_bci -1
    to_bci -1
    predecessors "B60" "B153" "B64" "B91" "B69" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr 1870  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1872  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1874  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1876  <|@ st <@st|@reference-map: [rbx:0]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:554) [bci: 278]
locals: rbx|QWORD[.] - r8|QWORD - - rcx|DWORD - rdi|DWORD - r9|DWORD rbp|DWORD r11|DWORD r14|DWORD r13|DWORD rsi|DWORD r11|DWORD - - - - - - - - - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:278] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B158" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  128  <|@ instruction r9|DWORD = MOVE input: int[-226843|0xfffffffffffc89e5] <|@ <|@
      nr  130  <|@ instruction rcx|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  132  <|@ instruction rbx|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  134  <|@ instruction JUMP ~[] destination: B12 -> B158 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B158"
    from_bci -1
    to_bci -1
    predecessors "B17" "B16" "B27" "B26" "B12" "B157" 
    successors 
    xhandlers
    flags 
    probability 2366641604183195648
    begin_IR
      LIR
      nr 1928  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1930  <|@ instruction MOV (x: [r15|QWORD + 668], y: r9|DWORD) size: DWORD <|@ <|@
      nr 1932  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1934  <|@ st <@st|@reference-map: [rbx:0]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:443) [bci: 67]
locals: rbx|QWORD[.] rdx|DWORD r10|QWORD - r8|DWORD rcx|DWORD r11|DWORD stack:48|DWORD - - - - - - - - - - - - - - - - - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:67] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B129"
    from_bci -1
    to_bci -1
    predecessors "B127" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1596  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1598  <|@ instruction rbp|DWORD = MOVE stack:132|DWORD moveKind: DWORD <|@ <|@
      nr 1600  <|@ instruction rbx|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1602  <|@ instruction MOV [r15|QWORD + 668] y: -274971 size: DWORD <|@ <|@
      nr 1604  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1606  <|@ st <@st|@reference-map: [rbx:0, stack:16, stack:24, stack:48, stack:72]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:749) [bci: 1343]
stack: rax|DWORD 
locals: rbx|QWORD[.] - - - - - - - - stack:60|DWORD - - - - - - - stack:100|DWORD rbp|DWORD - - - stack:88|DWORD - - stack:96|QWORD[.] - stack:72|QWORD[.] stack:128|QWORD[.] stack:120|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:1343] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  346  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  348  <|@ instruction stack:52|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  350  <|@ instruction stack:48|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  352  <|@ instruction rcx|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  354  <|@ instruction rbx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  356  <|@ instruction MOV [r15|QWORD + 668] y: -288275 size: DWORD <|@ <|@
      nr  358  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  360  <|@ st <@st|@reference-map: [rbx:0]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 174]
locals: rbx|QWORD[.] rdx|DWORD r10|QWORD - r8|DWORD rcx|DWORD r11|DWORD stack:48|DWORD stack:52|DWORD - - - - - - - - - - - - - - - - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:174] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B90" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  858  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  860  <|@ instruction rcx|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  862  <|@ instruction rax|DWORD = MOVE input: int[-249363|0xfffffffffffc31ed] <|@ <|@
      nr  864  <|@ instruction JUMP ~[] destination: B74 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B74" "B89" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1044  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1046  <|@ instruction MOV (x: [r15|QWORD + 668], y: rax|DWORD) size: DWORD <|@ <|@
      nr 1048  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1050  <|@ st <@st|@reference-map: [rbx:0]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:680) [bci: 889]
locals: rbx|QWORD[.] - - - - rcx|DWORD - - - r9|DWORD - - - - - - - r10|DWORD r8|DWORD rdx|DWORD - - - - - rdi|QWORD - r11|QWORD - rbp|QWORD - rsi|QWORD - 
>@ <|@ instruction DEOPT info [bci:889] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B152"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1834  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1836  <|@ instruction r9|QWORD[.] = MOVE stack:120|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1838  <|@ instruction rdi|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1840  <|@ instruction r8|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1842  <|@ instruction rcx|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr 1844  <|@ instruction rbx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1846  <|@ instruction rax|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1848  <|@ instruction MOV [r15|QWORD + 668] y: -279571 size: DWORD <|@ <|@
      nr 1850  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1852  <|@ st <@st|@reference-map: [rax:0, rbx:0, rdi:0, r8:0, r9:0]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:741) [bci: 1243]
locals: rbx|QWORD[.] - - - - rcx|DWORD - - - r10|DWORD - - - - - - - r11|DWORD int[0|0x0] int[0|0x0] - - - - - r8|QWORD[.] - rax|QWORD[.] rdi|QWORD[.] r9|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:1243] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B160" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   22  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   24  <|@ instruction r11|DWORD = MOVE input: int[-303123|0xfffffffffffb5fed] <|@ <|@
      nr   30  <|@ instruction JUMP ~[] destination: B2 -> B160 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B160"
    from_bci -1
    to_bci -1
    predecessors "B2" "B159" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1946  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   26  <|@ instruction rcx|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr   28  <|@ instruction rbx|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1948  <|@ instruction MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD <|@ <|@
      nr 1950  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1952  <|@ st <@st|@reference-map: [rbx:0]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:426) [bci: 0]
locals: rbx|QWORD[.] rdx|DWORD r10|QWORD - r8|DWORD rcx|DWORD - - - - - - - - - - - - - - - - - - - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B90" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1036  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1038  <|@ instruction rcx|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr 1040  <|@ instruction rax|DWORD = MOVE input: int[-249619|0xfffffffffffc30ed] <|@ <|@
      nr 1042  <|@ instruction JUMP ~[] destination: B89 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B153"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B154" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1854  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1856  <|@ instruction r11|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr 1858  <|@ instruction rdi|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1860  <|@ instruction rcx|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1862  <|@ instruction rbx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1864  <|@ instruction r8|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr 1866  <|@ instruction r10|DWORD = MOVE input: int[-229139|0xfffffffffffc80ed] <|@ <|@
      nr 1868  <|@ instruction JUMP ~[] destination: B153 -> B154 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B126"
    from_bci -1
    to_bci -1
    predecessors "B125" 
    successors "B132" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1530  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1532  <|@ instruction r11|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1534  <|@ instruction rax|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr 1536  <|@ instruction rbx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1538  <|@ instruction r10|DWORD = MOVE input: int[-272403|0xfffffffffffbd7ed] <|@ <|@
      nr 1540  <|@ instruction JUMP ~[] destination: B126 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B132"
    from_bci -1
    to_bci -1
    predecessors "B118" "B120" "B122" "B131" "B130" "B126" 
    successors 
    xhandlers
    flags 
    probability 2366641604183195648
    begin_IR
      LIR
      nr 1632  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1634  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1636  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1638  <|@ st <@st|@reference-map: [rbx:0, r11:0, stack:24, stack:48, stack:72]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:747) [bci: 1315]
stack: r11|QWORD[.] 
locals: rbx|QWORD[.] - - - - - - - - stack:60|DWORD - - - - - - - stack:100|DWORD - - - - rax|DWORD - - stack:96|QWORD[.] - stack:72|QWORD[.] - stack:120|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:1315] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1178  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1180  <|@ instruction r10|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr 1182  <|@ instruction rcx|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1184  <|@ instruction rbx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1186  <|@ instruction MOV [r15|QWORD + 668] y: -253203 size: DWORD <|@ <|@
      nr 1188  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1190  <|@ st <@st|@reference-map: [rbx:0, stack:24, stack:32, stack:48, stack:72]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:725) [bci: 1159]
stack: rax|DWORD 
locals: rbx|QWORD[.] - - - - rcx|DWORD - - - stack:80|DWORD - - - - - - - int[0|0x0] - - - - r10|DWORD - - stack:96|QWORD[.] - stack:72|QWORD[.] stack:112|QWORD[.] stack:120|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:1159] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B117" 
    successors "B132" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1448  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1450  <|@ instruction r11|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1452  <|@ instruction rax|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr 1454  <|@ instruction rbx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1456  <|@ instruction r10|DWORD = MOVE input: int[-263187|0xfffffffffffbfbed] <|@ <|@
      nr 1458  <|@ instruction JUMP ~[] destination: B118 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B155"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1878  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1880  <|@ instruction stack:84|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr 1882  <|@ instruction stack:76|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1884  <|@ instruction stack:80|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr 1886  <|@ instruction stack:48|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1888  <|@ instruction rax|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1890  <|@ instruction rbx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1892  <|@ instruction MOV [r15|QWORD + 668] y: -231195 size: DWORD <|@ <|@
      nr 1894  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1896  <|@ st <@st|@reference-map: [rbx:0]
live-base-pointers: []
java.lang.Math.max(Math.java:1252) [bci: 10]
stack: stack:84|DWORD 
locals: - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:523) [bci: 202]
locals: rbx|QWORD[.] rdx|DWORD r10|QWORD - r8|DWORD rax|DWORD r11|DWORD stack:48|DWORD stack:52|DWORD stack:80|DWORD rsi|DWORD stack:76|DWORD - - - - - - - - - - - - - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:10, 202] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  432  <|@ instruction stack:52|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  434  <|@ instruction stack:48|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  436  <|@ instruction rcx|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  438  <|@ instruction rbx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  440  <|@ instruction MOV [r15|QWORD + 668] y: -288531 size: DWORD <|@ <|@
      nr  442  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  444  <|@ st <@st|@reference-map: [rbx:0]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 174]
locals: rbx|QWORD[.] rdx|DWORD r10|QWORD - r8|DWORD rcx|DWORD r11|DWORD stack:48|DWORD stack:52|DWORD - - - - - - - - - - - - - - - - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:174] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B148"
    from_bci -1
    to_bci -1
    predecessors "B147" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1808  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1810  <|@ instruction rbx|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1812  <|@ instruction MOV [r15|QWORD + 668] y: -285203 size: DWORD <|@ <|@
      nr 1814  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1816  <|@ st <@st|@reference-map: [rbx:0]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:766) [bci: 1445]
locals: rbx|QWORD[.] - - - - - - - - r9|DWORD - - - - - - - r10|DWORD r8|DWORD rdi|DWORD long[0|0x0] - - - - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:1445] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B130"
    from_bci -1
    to_bci -1
    predecessors "B124" 
    successors "B132" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1608  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1610  <|@ instruction r11|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1612  <|@ instruction rax|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr 1614  <|@ instruction rbx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1616  <|@ instruction r10|DWORD = MOVE input: int[-270619|0xfffffffffffbdee5] <|@ <|@
      nr 1618  <|@ instruction JUMP ~[] destination: B130 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B156"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1898  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1900  <|@ instruction stack:76|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1902  <|@ instruction stack:80|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr 1904  <|@ instruction stack:48|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1906  <|@ instruction rcx|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1908  <|@ instruction rbx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1910  <|@ instruction MOV [r15|QWORD + 668] y: -229395 size: DWORD <|@ <|@
      nr 1912  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1914  <|@ st <@st|@reference-map: [rbx:0]
live-base-pointers: []
java.lang.Math.max(Math.java:1252) [bci: 10]
stack: stack:76|DWORD 
locals: - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:520) [bci: 185]
locals: rbx|QWORD[.] rdx|DWORD r10|QWORD - r8|DWORD rcx|DWORD r11|DWORD stack:48|DWORD rax|DWORD stack:80|DWORD - - - - - - - - - - - - - - - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:10, 185] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B158" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  318  <|@ instruction r9|DWORD = MOVE input: int[-287507|0xfffffffffffb9ced] <|@ <|@
      nr  320  <|@ instruction stack:48|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  322  <|@ instruction rcx|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  324  <|@ instruction rbx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  326  <|@ instruction JUMP ~[] destination: B27 -> B158 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B154" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1052  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1054  <|@ instruction r11|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr 1056  <|@ instruction rdi|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr 1058  <|@ instruction rcx|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1060  <|@ instruction rbx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1062  <|@ instruction r8|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr 1064  <|@ instruction r10|DWORD = MOVE input: int[-235035|0xfffffffffffc69e5] <|@ <|@
      nr 1066  <|@ instruction JUMP ~[] destination: B91 -> B154 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B141"
    from_bci -1
    to_bci -1
    predecessors "B140" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1734  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1736  <|@ instruction r10|QWORD = MOVE stack:128|QWORD moveKind: QWORD <|@ <|@
      nr 1738  <|@ instruction r9|DWORD = MOVE stack:88|DWORD moveKind: DWORD <|@ <|@
      nr 1740  <|@ instruction r8|DWORD = MOVE stack:132|DWORD moveKind: DWORD <|@ <|@
      nr 1742  <|@ instruction r11|DWORD = MOVE stack:100|DWORD moveKind: DWORD <|@ <|@
      nr 1744  <|@ instruction rbx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1746  <|@ instruction MOV [r15|QWORD + 668] y: -303891 size: DWORD <|@ <|@
      nr 1748  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1750  <|@ st <@st|@reference-map: [rbx:0]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:758) [bci: 1415]
stack: rbx|QWORD[.] int[0|0x0] 
locals: rbx|QWORD[.] - - - - - - - - stack:60|DWORD - - - - - - - r11|DWORD r8|DWORD r9|DWORD r10|QWORD - - - - - - - - - - - - 
>@ <|@ instruction DEOPT info [bci:1415] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B159"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B160" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1936  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1938  <|@ instruction r11|DWORD = MOVE input: int[-302867|0xfffffffffffb60ed] <|@ <|@
      nr 1944  <|@ instruction JUMP ~[] destination: B159 -> B160 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1432  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1434  <|@ instruction rbx|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1436  <|@ instruction MOV [r15|QWORD + 668] y: -261147 size: DWORD <|@ <|@
      nr 1438  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1440  <|@ st <@st|@reference-map: [rbx:0, stack:16, stack:24, stack:48, stack:72]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:749) [bci: 1343]
stack: rax|DWORD 
locals: rbx|QWORD[.] - - - - - - - - stack:60|DWORD - - - - - - - stack:100|DWORD int[0|0x0] - - - stack:88|DWORD - - stack:96|QWORD[.] - stack:72|QWORD[.] stack:128|QWORD[.] stack:120|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:1343] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B96" 
    successors "B102" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1206  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1208  <|@ instruction r11|DWORD = MOVE input: int[-254483|0xfffffffffffc1ded] <|@ <|@
      nr 1210  <|@ instruction r10|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr 1212  <|@ instruction rcx|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1214  <|@ instruction rbx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1216  <|@ instruction JUMP ~[] destination: B97 -> B102 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B154" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  658  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  660  <|@ instruction r11|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  662  <|@ instruction rdi|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  664  <|@ instruction rcx|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  666  <|@ instruction rbx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  668  <|@ instruction r8|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  670  <|@ instruction r10|DWORD = MOVE input: int[-233491|0xfffffffffffc6fed] <|@ <|@
      nr  672  <|@ instruction JUMP ~[] destination: B60 -> B154 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  996  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  998  <|@ instruction MOV [r15|QWORD + 668] y: -304923 size: DWORD <|@ <|@
      nr 1000  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1002  <|@ st <@st|@reference-map: [rbx:0]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:683) [bci: 914]
locals: rbx|QWORD[.] - - - - - - - - r9|DWORD - - - - - - - r10|DWORD int[0|0x0] int[0|0x0] - - - - - rbp|QWORD - r11|QWORD - r14|QWORD - rsi|QWORD - 
>@ <|@ instruction DEOPT info [bci:914] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B158" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  306  <|@ instruction r9|DWORD = MOVE input: int[-287763|0xfffffffffffb9bed] <|@ <|@
      nr  308  <|@ instruction stack:48|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  310  <|@ instruction rcx|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  312  <|@ instruction rbx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  314  <|@ instruction JUMP ~[] destination: B26 -> B158 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B121" 
    successors "B132" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1484  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1486  <|@ instruction r11|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1488  <|@ instruction rax|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr 1490  <|@ instruction rbx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1492  <|@ instruction r10|DWORD = MOVE input: int[-263699|0xfffffffffffbf9ed] <|@ <|@
      nr 1494  <|@ instruction JUMP ~[] destination: B122 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B158" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  166  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  168  <|@ instruction stack:48|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  170  <|@ instruction rcx|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  172  <|@ instruction rbx|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  174  <|@ instruction r9|DWORD = MOVE input: int[-222995|0xfffffffffffc98ed] <|@ <|@
      nr  176  <|@ instruction JUMP ~[] destination: B16 -> B158 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B119" 
    successors "B132" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1466  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1468  <|@ instruction r11|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1470  <|@ instruction rax|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr 1472  <|@ instruction rbx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1474  <|@ instruction r10|DWORD = MOVE input: int[-263443|0xfffffffffffbfaed] <|@ <|@
      nr 1476  <|@ instruction JUMP ~[] destination: B120 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B154" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  748  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  750  <|@ instruction rbp|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr  752  <|@ instruction rsi|DWORD = MOVE stack:64|DWORD moveKind: DWORD <|@ <|@
      nr  754  <|@ instruction r11|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  756  <|@ instruction rdi|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  758  <|@ instruction rcx|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  760  <|@ instruction r8|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  762  <|@ instruction r10|DWORD = MOVE input: int[-245267|0xfffffffffffc41ed] <|@ <|@
      nr  764  <|@ instruction JUMP ~[] destination: B64 -> B154 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B158" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  180  <|@ instruction stack:48|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  182  <|@ instruction rcx|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  184  <|@ instruction rbx|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  186  <|@ instruction r9|DWORD = MOVE input: int[-222739|0xfffffffffffc99ed] <|@ <|@
      nr  188  <|@ instruction JUMP ~[] destination: B17 -> B158 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B131"
    from_bci -1
    to_bci -1
    predecessors "B123" 
    successors "B132" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1620  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1622  <|@ instruction r11|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1624  <|@ instruction rax|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr 1626  <|@ instruction rbx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1628  <|@ instruction r10|DWORD = MOVE input: int[-266523|0xfffffffffffbeee5] <|@ <|@
      nr 1630  <|@ instruction JUMP ~[] destination: B131 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B157"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B158" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1916  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1918  <|@ instruction r9|DWORD = MOVE input: int[-288019|0xfffffffffffb9aed] <|@ <|@
      nr 1920  <|@ instruction stack:48|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1922  <|@ instruction rcx|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1924  <|@ instruction rbx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1926  <|@ instruction JUMP ~[] destination: B157 -> B158 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  882  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  884  <|@ instruction rcx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1454271960] <|@ <|@
      nr  886  <|@ instruction MOV [r15|QWORD + 668] y: -303371 size: DWORD <|@ <|@
      nr  888  <|@ instruction MOV (x: [r15|QWORD + 680], y: rcx|QWORD[.]) size: QWORD <|@ <|@
      nr  890  <|@ st <@st|@reference-map: [rbx:0]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:683) [bci: 914]
locals: rbx|QWORD[.] - - - - - - - - r9|DWORD - - - - - - - r10|DWORD r8|DWORD rdx|DWORD - - - - - rdi|QWORD - r11|QWORD - rbp|QWORD - rsi|QWORD - 
>@ <|@ instruction DEOPT info [bci:914] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: getstatic     #15         // $assertionsDisabled:boolean
     3: ifne          20
     6: lload_2       
     7: lconst_0      
     8: lcmp          
     9: ifgt          20
    12: new           #21         // java.lang.AssertionError
    15: dup           
    16: invokespecial #16         // java.lang.AssertionError.<init>:()void
    19: athrow        
    20: getstatic     #15         // $assertionsDisabled:boolean
    23: ifne          44
    26: lload_2       
    27: ldc2_w        #31         // 4503599627370496
    30: land          
    31: lconst_0      
    32: lcmp          
    33: ifne          44
    36: new           #21         // java.lang.AssertionError
    39: dup           
    40: invokespecial #16         // java.lang.AssertionError.<init>:()void
    43: athrow        
    44: lload_2       
    45: invokestatic  #20         // java.lang.Long.numberOfTrailingZeros:(long)int
    48: istore        6
    50: bipush        53
    52: iload         6
    54: isub          
    55: istore        7
    57: aload_0       
    58: iconst_0      
    59: putfield      #5          // decimalDigitsRoundedUp:boolean
    62: aload_0       
    63: iconst_0      
    64: putfield      #4          // exactDecimalConversion:boolean
    67: iconst_0      
    68: iload         7
    70: iload_1       
    71: isub          
    72: iconst_1      
    73: isub          
    74: invokestatic  #21         // java.lang.Math.max:(int, int)int
    77: istore        8
    79: iload_1       
    80: bipush        62
    82: if_icmpgt     174
    85: iload_1       
    86: bipush        -21
    88: if_icmplt     174
    91: iload         8
    93: getstatic     #18         // sun.misc.FDBigInteger.LONG_5_POW:long[]
    96: arraylength   
    97: if_icmpge     174
   100: iload         7
   102: getstatic     #22         // N_5_BITS:int[]
   105: iload         8
   107: iaload        
   108: iadd          
   109: bipush        64
   111: if_icmpge     174
   114: iload         8
   116: ifne          174
   119: iload_1       
   120: iload         4
   122: if_icmple     139
   125: iload_1       
   126: iload         4
   128: isub          
   129: iconst_1      
   130: isub          
   131: invokestatic  #23         // insignificantDigitsForPow2:(int)int
   134: istore        9
   136: goto          142
   139: iconst_0      
   140: istore        9
   142: iload_1       
   143: bipush        52
   145: if_icmplt     158
   148: lload_2       
   149: iload_1       
   150: bipush        52
   152: isub          
   153: lshl          
   154: lstore_2      
   155: goto          165
   158: lload_2       
   159: bipush        52
   161: iload_1       
   162: isub          
   163: lushr         
   164: lstore_2      
   165: aload_0       
   166: iconst_0      
   167: lload_2       
   168: iload         9
   170: invokespecial #24         // developLongDigits:(int, long, int)void
   173: return        
   174: lload_2       
   175: iload_1       
   176: invokestatic  #25         // estimateDecExp:(long, int)int
   179: istore        9
   181: iconst_0      
   182: iload         9
   184: ineg          
   185: invokestatic  #21         // java.lang.Math.max:(int, int)int
   188: istore        11
   190: iload         11
   192: iload         8
   194: iadd          
   195: iload_1       
   196: iadd          
   197: istore        10
   199: iconst_0      
   200: iload         9
   202: invokestatic  #21         // java.lang.Math.max:(int, int)int
   205: istore        13
   207: iload         13
   209: iload         8
   211: iadd          
   212: istore        12
   214: iload         11
   216: istore        15
   218: iload         10
   220: iload         4
   222: isub          
   223: istore        14
   225: lload_2       
   226: iload         6
   228: lushr         
   229: lstore_2      
   230: iload         10
   232: iload         7
   234: iconst_1      
   235: isub          
   236: isub          
   237: istore        10
   239: iload         10
   241: iload         12
   243: invokestatic  #26         // java.lang.Math.min:(int, int)int
   246: istore        16
   248: iload         10
   250: iload         16
   252: isub          
   253: istore        10
   255: iload         12
   257: iload         16
   259: isub          
   260: istore        12
   262: iload         14
   264: iload         16
   266: isub          
   267: istore        14
   269: iload         7
   271: iconst_1      
   272: if_icmpne     278
   275: iinc          
   278: iload         14
   280: ifge          300
   283: iload         10
   285: iload         14
   287: isub          
   288: istore        10
   290: iload         12
   292: iload         14
   294: isub          
   295: istore        12
   297: iconst_0      
   298: istore        14
   300: iconst_0      
   301: istore        17
   303: iload         7
   305: iload         10
   307: iadd          
   308: iload         11
   310: getstatic     #22         // N_5_BITS:int[]
   313: arraylength   
   314: if_icmpge     326
   317: getstatic     #22         // N_5_BITS:int[]
   320: iload         11
   322: iaload        
   323: goto          330
   326: iload         11
   328: iconst_3      
   329: imul          
   330: iadd          
   331: istore        23
   333: iload         12
   335: iconst_1      
   336: iadd          
   337: iload         13
   339: iconst_1      
   340: iadd          
   341: getstatic     #22         // N_5_BITS:int[]
   344: arraylength   
   345: if_icmpge     359
   348: getstatic     #22         // N_5_BITS:int[]
   351: iload         13
   353: iconst_1      
   354: iadd          
   355: iaload        
   356: goto          365
   359: iload         13
   361: iconst_1      
   362: iadd          
   363: iconst_3      
   364: imul          
   365: iadd          
   366: istore        24
   368: iload         23
   370: bipush        64
   372: if_icmpge     1070
   375: iload         24
   377: bipush        64
   379: if_icmpge     1070
   382: iload         23
   384: bipush        32
   386: if_icmpge     728
   389: iload         24
   391: bipush        32
   393: if_icmpge     728
   396: lload_2       
   397: l2i           
   398: getstatic     #27         // sun.misc.FDBigInteger.SMALL_5_POW:int[]
   401: iload         11
   403: iaload        
   404: imul          
   405: iload         10
   407: ishl          
   408: istore        25
   410: getstatic     #27         // sun.misc.FDBigInteger.SMALL_5_POW:int[]
   413: iload         13
   415: iaload        
   416: iload         12
   418: ishl          
   419: istore        26
   421: getstatic     #27         // sun.misc.FDBigInteger.SMALL_5_POW:int[]
   424: iload         15
   426: iaload        
   427: iload         14
   429: ishl          
   430: istore        27
   432: iload         26
   434: bipush        10
   436: imul          
   437: istore        28
   439: iconst_0      
   440: istore        17
   442: iload         25
   444: iload         26
   446: idiv          
   447: istore        22
   449: bipush        10
   451: iload         25
   453: iload         26
   455: irem          
   456: imul          
   457: istore        25
   459: iload         27
   461: bipush        10
   463: imul          
   464: istore        27
   466: iload         25
   468: iload         27
   470: if_icmpge     477
   473: iconst_1      
   474: goto          478
   477: iconst_0      
   478: istore        18
   480: iload         25
   482: iload         27
   484: iadd          
   485: iload         28
   487: if_icmple     494
   490: iconst_1      
   491: goto          495
   494: iconst_0      
   495: istore        19
   497: getstatic     #15         // $assertionsDisabled:boolean
   500: ifne          520
   503: iload         22
   505: bipush        10
   507: if_icmplt     520
   510: new           #21         // java.lang.AssertionError
   513: dup           
   514: iload         22
   516: invokespecial #28         // java.lang.AssertionError.<init>:(int)void
   519: athrow        
   520: iload         22
   522: ifne          536
   525: iload         19
   527: ifne          536
   530: iinc          
   533: goto          552
   536: aload_0       
   537: getfield      #6          // digits:char[]
   540: iload         17
   542: iinc          
   545: bipush        48
   547: iload         22
   549: iadd          
   550: i2c           
   551: castore       
   552: iload         5
   554: ifeq          571
   557: iload         9
   559: bipush        -3
   561: if_icmplt     571
   564: iload         9
   566: bipush        8
   568: if_icmplt     577
   571: iconst_0      
   572: dup           
   573: istore        18
   575: istore        19
   577: iload         18
   579: ifne          701
   582: iload         19
   584: ifne          701
   587: iload         25
   589: iload         26
   591: idiv          
   592: istore        22
   594: bipush        10
   596: iload         25
   598: iload         26
   600: irem          
   601: imul          
   602: istore        25
   604: iload         27
   606: bipush        10
   608: imul          
   609: istore        27
   611: getstatic     #15         // $assertionsDisabled:boolean
   614: ifne          634
   617: iload         22
   619: bipush        10
   621: if_icmplt     634
   624: new           #21         // java.lang.AssertionError
   627: dup           
   628: iload         22
   630: invokespecial #28         // java.lang.AssertionError.<init>:(int)void
   633: athrow        
   634: iload         27
   636: i2l           
   637: lconst_0      
   638: lcmp          
   639: ifle          676
   642: iload         25
   644: iload         27
   646: if_icmpge     653
   649: iconst_1      
   650: goto          654
   653: iconst_0      
   654: istore        18
   656: iload         25
   658: iload         27
   660: iadd          
   661: iload         28
   663: if_icmple     670
   666: iconst_1      
   667: goto          671
   670: iconst_0      
   671: istore        19
   673: goto          682
   676: iconst_1      
   677: istore        18
   679: iconst_1      
   680: istore        19
   682: aload_0       
   683: getfield      #6          // digits:char[]
   686: iload         17
   688: iinc          
   691: bipush        48
   693: iload         22
   695: iadd          
   696: i2c           
   697: castore       
   698: goto          577
   701: iload         25
   703: iconst_1      
   704: ishl          
   705: iload         28
   707: isub          
   708: i2l           
   709: lstore        20
   711: aload_0       
   712: iload         25
   714: ifne          721
   717: iconst_1      
   718: goto          722
   721: iconst_0      
   722: putfield      #4          // exactDecimalConversion:boolean
   725: goto          1426
   728: lload_2       
   729: getstatic     #18         // sun.misc.FDBigInteger.LONG_5_POW:long[]
   732: iload         11
   734: laload        
   735: lmul          
   736: iload         10
   738: lshl          
   739: lstore        25
   741: getstatic     #18         // sun.misc.FDBigInteger.LONG_5_POW:long[]
   744: iload         13
   746: laload        
   747: iload         12
   749: lshl          
   750: lstore        27
   752: getstatic     #18         // sun.misc.FDBigInteger.LONG_5_POW:long[]
   755: iload         15
   757: laload        
   758: iload         14
   760: lshl          
   761: lstore        29
   763: lload         27
   765: ldc2_w        #29         // 10
   768: lmul          
   769: lstore        31
   771: iconst_0      
   772: istore        17
   774: lload         25
   776: lload         27
   778: ldiv          
   779: l2i           
   780: istore        22
   782: ldc2_w        #29         // 10
   785: lload         25
   787: lload         27
   789: lrem          
   790: lmul          
   791: lstore        25
   793: lload         29
   795: ldc2_w        #29         // 10
   798: lmul          
   799: lstore        29
   801: lload         25
   803: lload         29
   805: lcmp          
   806: ifge          813
   809: iconst_1      
   810: goto          814
   813: iconst_0      
   814: istore        18
   816: lload         25
   818: lload         29
   820: ladd          
   821: lload         31
   823: lcmp          
   824: ifle          831
   827: iconst_1      
   828: goto          832
   831: iconst_0      
   832: istore        19
   834: getstatic     #15         // $assertionsDisabled:boolean
   837: ifne          857
   840: iload         22
   842: bipush        10
   844: if_icmplt     857
   847: new           #21         // java.lang.AssertionError
   850: dup           
   851: iload         22
   853: invokespecial #28         // java.lang.AssertionError.<init>:(int)void
   856: athrow        
   857: iload         22
   859: ifne          873
   862: iload         19
   864: ifne          873
   867: iinc          
   870: goto          889
   873: aload_0       
   874: getfield      #6          // digits:char[]
   877: iload         17
   879: iinc          
   882: bipush        48
   884: iload         22
   886: iadd          
   887: i2c           
   888: castore       
   889: iload         5
   891: ifeq          908
   894: iload         9
   896: bipush        -3
   898: if_icmplt     908
   901: iload         9
   903: bipush        8
   905: if_icmplt     914
   908: iconst_0      
   909: dup           
   910: istore        18
   912: istore        19
   914: iload         18
   916: ifne          1042
   919: iload         19
   921: ifne          1042
   924: lload         25
   926: lload         27
   928: ldiv          
   929: l2i           
   930: istore        22
   932: ldc2_w        #29         // 10
   935: lload         25
   937: lload         27
   939: lrem          
   940: lmul          
   941: lstore        25
   943: lload         29
   945: ldc2_w        #29         // 10
   948: lmul          
   949: lstore        29
   951: getstatic     #15         // $assertionsDisabled:boolean
   954: ifne          974
   957: iload         22
   959: bipush        10
   961: if_icmplt     974
   964: new           #21         // java.lang.AssertionError
   967: dup           
   968: iload         22
   970: invokespecial #28         // java.lang.AssertionError.<init>:(int)void
   973: athrow        
   974: lload         29
   976: lconst_0      
   977: lcmp          
   978: ifle          1017
   981: lload         25
   983: lload         29
   985: lcmp          
   986: ifge          993
   989: iconst_1      
   990: goto          994
   993: iconst_0      
   994: istore        18
   996: lload         25
   998: lload         29
  1000: ladd          
  1001: lload         31
  1003: lcmp          
  1004: ifle          1011
  1007: iconst_1      
  1008: goto          1012
  1011: iconst_0      
  1012: istore        19
  1014: goto          1023
  1017: iconst_1      
  1018: istore        18
  1020: iconst_1      
  1021: istore        19
  1023: aload_0       
  1024: getfield      #6          // digits:char[]
  1027: iload         17
  1029: iinc          
  1032: bipush        48
  1034: iload         22
  1036: iadd          
  1037: i2c           
  1038: castore       
  1039: goto          914
  1042: lload         25
  1044: iconst_1      
  1045: lshl          
  1046: lload         31
  1048: lsub          
  1049: lstore        20
  1051: aload_0       
  1052: lload         25
  1054: lconst_0      
  1055: lcmp          
  1056: ifne          1063
  1059: iconst_1      
  1060: goto          1064
  1063: iconst_0      
  1064: putfield      #4          // exactDecimalConversion:boolean
  1067: goto          1426
  1070: iload         13
  1072: iload         12
  1074: invokestatic  #29         // sun.misc.FDBigInteger.valueOfPow52:(int, int)sun.misc.FDBigInteger
  1077: astore        25
  1079: aload         25
  1081: invokevirtual #30         // sun.misc.FDBigInteger.getNormalizationBias:()int
  1084: istore        26
  1086: aload         25
  1088: iload         26
  1090: invokevirtual #31         // sun.misc.FDBigInteger.leftShift:(int)sun.misc.FDBigInteger
  1093: astore        25
  1095: lload_2       
  1096: iload         11
  1098: iload         10
  1100: iload         26
  1102: iadd          
  1103: invokestatic  #32         // sun.misc.FDBigInteger.valueOfMulPow52:(long, int, int)sun.misc.FDBigInteger
  1106: astore        27
  1108: iload         15
  1110: iconst_1      
  1111: iadd          
  1112: iload         14
  1114: iload         26
  1116: iadd          
  1117: iconst_1      
  1118: iadd          
  1119: invokestatic  #29         // sun.misc.FDBigInteger.valueOfPow52:(int, int)sun.misc.FDBigInteger
  1122: astore        28
  1124: iload         13
  1126: iconst_1      
  1127: iadd          
  1128: iload         12
  1130: iload         26
  1132: iadd          
  1133: iconst_1      
  1134: iadd          
  1135: invokestatic  #29         // sun.misc.FDBigInteger.valueOfPow52:(int, int)sun.misc.FDBigInteger
  1138: astore        29
  1140: iconst_0      
  1141: istore        17
  1143: aload         27
  1145: aload         25
  1147: invokevirtual #33         // sun.misc.FDBigInteger.quoRemIteration:(sun.misc.FDBigInteger)int
  1150: istore        22
  1152: aload         27
  1154: aload         28
  1156: invokevirtual #34         // sun.misc.FDBigInteger.cmp:(sun.misc.FDBigInteger)int
  1159: ifge          1166
  1162: iconst_1      
  1163: goto          1167
  1166: iconst_0      
  1167: istore        18
  1169: aload         29
  1171: aload         27
  1173: aload         28
  1175: invokevirtual #35         // sun.misc.FDBigInteger.addAndCmp:(sun.misc.FDBigInteger, sun.misc.FDBigInteger)int
  1178: ifgt          1185
  1181: iconst_1      
  1182: goto          1186
  1185: iconst_0      
  1186: istore        19
  1188: getstatic     #15         // $assertionsDisabled:boolean
  1191: ifne          1211
  1194: iload         22
  1196: bipush        10
  1198: if_icmplt     1211
  1201: new           #21         // java.lang.AssertionError
  1204: dup           
  1205: iload         22
  1207: invokespecial #28         // java.lang.AssertionError.<init>:(int)void
  1210: athrow        
  1211: iload         22
  1213: ifne          1227
  1216: iload         19
  1218: ifne          1227
  1221: iinc          
  1224: goto          1243
  1227: aload_0       
  1228: getfield      #6          // digits:char[]
  1231: iload         17
  1233: iinc          
  1236: bipush        48
  1238: iload         22
  1240: iadd          
  1241: i2c           
  1242: castore       
  1243: iload         5
  1245: ifeq          1262
  1248: iload         9
  1250: bipush        -3
  1252: if_icmplt     1262
  1255: iload         9
  1257: bipush        8
  1259: if_icmplt     1268
  1262: iconst_0      
  1263: dup           
  1264: istore        18
  1266: istore        19
  1268: iload         18
  1270: ifne          1372
  1273: iload         19
  1275: ifne          1372
  1278: aload         27
  1280: aload         25
  1282: invokevirtual #33         // sun.misc.FDBigInteger.quoRemIteration:(sun.misc.FDBigInteger)int
  1285: istore        22
  1287: getstatic     #15         // $assertionsDisabled:boolean
  1290: ifne          1310
  1293: iload         22
  1295: bipush        10
  1297: if_icmplt     1310
  1300: new           #21         // java.lang.AssertionError
  1303: dup           
  1304: iload         22
  1306: invokespecial #28         // java.lang.AssertionError.<init>:(int)void
  1309: athrow        
  1310: aload         28
  1312: invokevirtual #36         // sun.misc.FDBigInteger.multBy10:()sun.misc.FDBigInteger
  1315: astore        28
  1317: aload         27
  1319: aload         28
  1321: invokevirtual #34         // sun.misc.FDBigInteger.cmp:(sun.misc.FDBigInteger)int
  1324: ifge          1331
  1327: iconst_1      
  1328: goto          1332
  1331: iconst_0      
  1332: istore        18
  1334: aload         29
  1336: aload         27
  1338: aload         28
  1340: invokevirtual #35         // sun.misc.FDBigInteger.addAndCmp:(sun.misc.FDBigInteger, sun.misc.FDBigInteger)int
  1343: ifgt          1350
  1346: iconst_1      
  1347: goto          1351
  1350: iconst_0      
  1351: istore        19
  1353: aload_0       
  1354: getfield      #6          // digits:char[]
  1357: iload         17
  1359: iinc          
  1362: bipush        48
  1364: iload         22
  1366: iadd          
  1367: i2c           
  1368: castore       
  1369: goto          1268
  1372: iload         19
  1374: ifeq          1403
  1377: iload         18
  1379: ifeq          1403
  1382: aload         27
  1384: iconst_1      
  1385: invokevirtual #31         // sun.misc.FDBigInteger.leftShift:(int)sun.misc.FDBigInteger
  1388: astore        27
  1390: aload         27
  1392: aload         29
  1394: invokevirtual #34         // sun.misc.FDBigInteger.cmp:(sun.misc.FDBigInteger)int
  1397: i2l           
  1398: lstore        20
  1400: goto          1406
  1403: lconst_0      
  1404: lstore        20
  1406: aload_0       
  1407: aload         27
  1409: getstatic     #37         // sun.misc.FDBigInteger.ZERO:sun.misc.FDBigInteger
  1412: invokevirtual #34         // sun.misc.FDBigInteger.cmp:(sun.misc.FDBigInteger)int
  1415: ifne          1422
  1418: iconst_1      
  1419: goto          1423
  1422: iconst_0      
  1423: putfield      #4          // exactDecimalConversion:boolean
  1426: aload_0       
  1427: iload         9
  1429: iconst_1      
  1430: iadd          
  1431: putfield      #8          // decExponent:int
  1434: aload_0       
  1435: iconst_0      
  1436: putfield      #9          // firstDigitIndex:int
  1439: aload_0       
  1440: iload         17
  1442: putfield      #10         // nDigits:int
  1445: iload         19
  1447: ifeq          1508
  1450: iload         18
  1452: ifeq          1504
  1455: lload         20
  1457: lconst_0      
  1458: lcmp          
  1459: ifne          1490
  1462: aload_0       
  1463: getfield      #6          // digits:char[]
  1466: aload_0       
  1467: getfield      #9          // firstDigitIndex:int
  1470: aload_0       
  1471: getfield      #10         // nDigits:int
  1474: iadd          
  1475: iconst_1      
  1476: isub          
  1477: caload        
  1478: iconst_1      
  1479: iand          
  1480: ifeq          1508
  1483: aload_0       
  1484: invokespecial #38         // roundup:()void
  1487: goto          1508
  1490: lload         20
  1492: lconst_0      
  1493: lcmp          
  1494: ifle          1508
  1497: aload_0       
  1498: invokespecial #38         // roundup:()void
  1501: goto          1508
  1504: aload_0       
  1505: invokespecial #38         // roundup:()void
  1508: return        
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849c1e203493bc20f85efffffff900f1f80000000000f1f800000000089842400c0feff4881ec880000004889ac248000000048897424684c8bd144894c246483fa3f0f8dc20d000083faeb0f8cf40b00004488661a44886619f34d0fbcdab9350000008bd9412bdb48bfaddeaddeaddeadde8bcb2bca8bc1ffc883f8010f8d570000008bcb034f1083f9400f8d660e000083fa340f8d130e0000413bd00f8f5409000041b800000000b9340000002bca49d3eaba00000000498bcae80000000090488bac24800000004881c488000000850500000000c5f877c348bdffffffffffff0f00498bca4823cd49bd000000000000f03f490bcdc4e1f96ec1c4c17b100d00000000c5fb5cc1c4c17b100d00000000c5fb59c1c4c17b100d00000000c5fb58c1c5f157c9c5f32acac4c17b101500000000c5f359cac5fb58c1c4c1f97ec548b9000000000000008049be000000000000f07f4d23f549c1ee34458bf6458d8e01fcffff83f81b0f83060300008bf30374871083fe400f8d250c00004585c90f8dd303000048beffffffffffffff7f4985f50f84340a00004985cdb900000000beffffffff0f44f1448bce418bc9f7d983f9010f8d4c030000c7442458010000008bf0b90000000083f91b0f83a20b00004183f9010f8d0c030000448bf041bd000000008944245cb80100000003f283f81b0f83ee0a0000ba34000000412bd38bee2bea412bf0413bee0f8f71020000442bf52bf583fb01bd000000000f84fa020000448bc1418bcb49d3ea85f60f8d380a0000448bdd442bde418bcb03cb42034c8710418bd62bd683f9400f8da8030000895c24608bdaffc3035c871083fb400f8d9303000083f9200f8cd70b00004183fd1b0f833f0b0000896c245489742450488b5c246848b9addeaddeaddeadde4a8b7cc1104a8b44e910498bca480fafcf488bf1418bcb48d3e68bca4c8bd849d3e3488bc6489949f7fb8b4b1c498bf348c1e603498beb48d1e54803f5488bef48c1e50348d1e74803ef488bfa48c1e70348d1e24803fa488bd54803d78bc085c00f84b2020000833ccd0c000000000f8458080000448b5424648d4030668904cd100000004585d20f84c0060000418bc241ba01000000483bef410f9fc0450fb6c0483bd60f9fc20fb6d24183f9fd0f8caf0800004183f9080f8d1309000085c90f84e00b0000448b2ccd0c00000048c1e1034c8bf5488bef8bfa0f1f80000000000f1f80000000004585c00f859f00000085ff0f853d010000453bea0f86d10a0000488bc5489949f7fb448bc0418d78306642897c5110488bfa48c1e70348d1e24803fa41ffc2498bd648c1e20349d1e64903d64883fa010f8c36000000483bd70f9fc00fb6c0488bea4803ef483bee400f9fc5400fb6ed8505000000004c8bf2448bc0896c2450488bef8b7c2450e974ffffff8505000000004c8bf2488befbf0100000041b801000000e958ffffff488bd548d1e2482bd64885ed400f94c6400fb6f6448bde488bf344885e19458bd941ffc344895e0c448966104489561485ff0f8541000000488bac24800000004881c488000000850500000000c5f877c34585c90f8c09fdffffe94c010000412bee412bf683fb0141be000000000f858dfdffffe9820000004585c00f85800000000f1f440000e80000000090488bac24800000004881c488000000850500000000c5f877c3488bd548d1e2482bd64885ed400f94c6400fb6f6448bde488bf3e955ffffff448be84503e9458bf141ffc68944245c418bc6458bf5458be9e9e8fcffffbe01000000412bf18be8412be9897424588bf5e9abfcffffffcee9fffcffff4885d20f84150800004883fa010f8caa0000006690e80000000090488bac24800000004881c488000000850500000000c5f877c34183f9340f8d1b0900004985cd0f845a050000418bc9488bf548d3ee4985f50f849c07000048b900000000000010004c23ed4c0be9b933040000412bce49d3ed418bcdbeffffffff2bf1448bcee901fcffff8b442464483bd60f8f1f09000041ffc985c041ba000000000f8560fdffffe9e80400004183f9340f8d490900004985cd758fe920050000488bac24800000004881c488000000850500000000c5f877c344895c24504c8954244889442454448944244444894c2440418bf58bea44896c243c896c243890e800000000908500488bf04889442430e80000000090488b7424308bd08944242c0f1f8000000000e8000000009048894424308b4c242c034c2450488b7424488b5424440f1f4000e80000000090488944244885008b54242cffc28b74245890e800000000908b5424380354242cffc28b74245448894424200f1f8000000000e8000000009048894424188500488b742448488b54243090e80000000090488b742448488b542420894424540f1f4000e8000000009085c00f8cce050000488b742418488b542448488b4c2420666690e8000000009083f8010f8c2e070000448b5424544585d20f8427030000488b7424688b561c833cd50c000000000f8419040000458d523066448914d51000000041bb01000000448b5424408b442464448954245485c00f84140000004183fafd0f8c0a0000004183fa080f8daf040000488b4c242041b90000000041b80000000044895c242c666690488b4424484c8b5424304585c00f85af0100004585c90f85a60100008501488bf0498bd248894c2410660f1f440000e8000000009089442438488b74241090e800000000908b700c8b50104c8b542448418b4a1003f2448bd945035a0c448b442438458d483044894c24588b5c242cffc3443bde0f8fd9000000413bf30f8fd604000083f9010f8cba06000083fa010f8c86060000418b7218ffc93b0cf50c0000000f83e8060000448b5818ffca423b14dd0c0000000f832705000048c1e6038b748e1049c1e303418b5493103bd60f8439040000895c24503bd6400f97c5400fb6ed488b742418498bd2488bc84889442410896c240ce80000000090488b7424688b561c448b54242c443b14d50c0000000f831b030000448b4c245848c1e2036646894c521083f801410f9cc1450fb6c9488b4c2410448b44240c48894424708b4424508944242c488b442470e9adfeffff895c24504889442410488b742418488b542448488b4c24100f1f4000e80000000090488b7424688b561c448b54242c443b14d50c0000000f83090500008b5c2450448b4c245848c1e2036646894c521083f801410f9cc1450fb6c9488b4c241041b800000000895c242ce93efeffff448b54242c488b7424684585c90f84270100004585c00f84f100000044894c2438448944240c488b742448ba010000000f1f440000e800000000908500488bf0488b542418488904240f1f4000e800000000904863f0488b0424488974241048baaddeaddeaddeadde488bf090e8000000009085c00f842004000041bb00000000488b5424108b7c2438448b44240c448b54242c448b4c2454488b742468e95dfaffff41ba01000000ba0000000041b800000000e95bf9ffff895c24608bf2412bf0ffce83fe020f8c5d00000048b9addeaddeaddeadde8b49688b1ccd0c0000003bde0f8f6e00000041b800000000488b742468e972f6ffff8b742440ffce41bb00000000448bd6e9f3fcffff488b44244848c74424100000000044894c2438448944240ce935ffffff41b800000000488b742468e931f6ffff488b44244848c74424100000000044894c2438448944240ce908ffffff8b4424644c8b6c24683bde0f86ea00000048c1e103448b44b110498bf5e9f2f5ffffba0000000041b800000000e98bf8ffff8944245c895c24608b442464488b5c246848b900000000000010004c23ed4c0be9b933040000412bce49d3ed458bcd8b44245c8b5c2460e9aaf6ffff8944245c895c24608b442464488b5c246848b900000000000010004c23ed4c0be9b933040000412bce49d3ed458bcd8b44245c8b5c2460e96ef6ffff41bbe58bfbff8b4c2464488bde45899f9c0200004d89a7a8020000e800000000908b6c24548b742450458bd88b7c24608b4c24644d8bc241bae590fbff4589979c0200004d89a7a8020000e8000000009041b9e589fcff8bc8498bdd45898f9c0200004d89a7a8020000e800000000908b6c240c488bde41c7879c020000e5cdfbff4d89a7a8020000e800000000908944245c895c24608b4c2464488b5c246841c7879c020000ed99fbff4d89a7a8020000e800000000908bc8b8ed31fcff4189879c0200004d89a7a8020000e800000000904c8b4c2418488b7c24204c8b4424308bc8488b5c2468488b44244841c7879c020000edbbfbff4d89a7a8020000e8000000009041bbed5ffbff418bc9488bde45899f9c0200004d89a7a8020000e800000000908bc8b8ed30fcffeb90458bd88bfb8b4c2464488b5c24684d8bc241baed80fcffe9f2feffff4c8bd8418bc0488b5c246841baedd7fbff4589979c0200004d89a7a8020000e80000000090448b5424548b4c2464488b5c246841c7879c020000ed22fcff4d89a7a8020000e800000000904c8bd8418bc0488b5c246841baedfbfbffebb344896c243c894c244444894c2440895c24608b442464488b5c246841c7879c020000e578fcff4d89a7a8020000e800000000908944245c895c24608b4c2464488b5c246841c7879c020000ed98fbff4d89a7a8020000e80000000090488bde41c7879c020000eda5fbff4d89a7a8020000e800000000904c8bd8418bc0488b5c246841bae5defbffe926ffffff894c244444894c2440895c24608b4c2464488b5c246841c7879c020000ed7ffcff4d89a7a8020000e8000000009041b9ed9cfbff895c24608b4c2464488b5c2468e9e0fdffff458bd88b7c24608b4c2464488b5c24684d8bc241bae569fcffe9a3fdffff4c8b542410448b4c2438448b44240c448b5c242c488b5c246841c7879c020000ed5cfbff4d89a7a8020000e8000000009041bbed60fbffe936feffff488bde41c7879c020000e503fcff4d89a7a8020000e8000000009041bbed1dfcff448b5424548b4c2464488b5c2468e903fdffff458bd88b7c24608b4c2464488b5c24684d8bc241baed6ffcffe915fdffff41c7879c020000e558fbff4d89a7a8020000e8000000009041b9ed9bfbff895c24608b4c2464488b5c2468e904fdffff4c8bd8418bc0488b5c246841baedf9fbffe9eefdffff895c2460418bc9488bde41b9ed98fcffe9d9fcffff4c8bd8418bc0488b5c246841baedfafbffe9c3fdffff8b6c24548b742450458bd88b7c24608bc84d8bc241baed41fcffe985fcffff895c2460418bc9488bde41b9ed99fcffe98ffcffff4c8bd8418bc0488b5c246841bae5eefbffe979fdffff41b9ed9afbff895c24608b4c2464488b5c2468e961fcffff48b9addeaddeaddeadde41c7879c020000f55efbff49898fa8020000e80000000090e80000000090e80000000090  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 46 block B0 null  <||@
  Comment 46 0 [rsi|QWORD[.], rdx|DWORD, rcx|QWORD, r8|DWORD, r9|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 46 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 54 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@4a6681b7 slotKind: QWORD  <||@
  Comment 54 6 stack:40|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 59 8 r10|QWORD = MOVE rcx|QWORD moveKind: QWORD  <||@
  Comment 62 10 stack:44|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 67 12 CMP rdx|DWORD y: 63 size: DWORD  <||@
  Comment 70 14 BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B159  <||@
  Comment 76 block B1 null  <||@
  Comment 76 16 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 76 18 CMP rdx|DWORD y: -21 size: DWORD  <||@
  Comment 79 20 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3  <||@
  Comment 85 block B3 null  <||@
  Comment 85 32 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 85 34 MOVB (x: [rsi|QWORD[.] + 26], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 89 36 MOVB (x: [rsi|QWORD[.] + 25], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 93 38 r11|DWORD = TZCNT r10|QWORD size: QWORD  <||@
  Comment 98 40 rcx|DWORD = MOVE input: int[53|0x35]  <||@
  Comment 103 42 rbx|DWORD = SUB (x: rcx|DWORD, ~y: r11|DWORD) size: DWORD  <||@
  Comment 108 44 rdi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[int[27]{0, 3, 5, 7, 10, ...}]  <||@
  Comment 108 {Object[int[27]{0, 3, 5, 7, 10, ...}]}  <||@
  Comment 118 46 rcx|DWORD = SUB (x: rbx|DWORD, ~y: rdx|DWORD) size: DWORD  <||@
  Comment 122 48 rax|DWORD = DEC rcx|DWORD size: DWORD  <||@
  Comment 126 50 CMP rax|DWORD y: 1 size: DWORD  <||@
  Comment 129 52 BRANCH trueDestinationProbability: 0.7447171657016569 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B18  <||@
  Comment 135 block B4 null  <||@
  Comment 135 54 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 135 56 rcx|DWORD = ADD (x: rbx|DWORD, ~y: [rdi|QWORD[.] + 16]) size: DWORD  <||@
  Comment 140 58 CMP rcx|DWORD y: 64 size: DWORD  <||@
  Comment 143 60 BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B4 -> B5 falseDestination: B4 -> B17  <||@
  Comment 149 block B5 null  <||@
  Comment 149 62 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 149 64 CMP rdx|DWORD y: 52 size: DWORD  <||@
  Comment 152 66 BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B5 -> B6 falseDestination: B5 -> B16  <||@
  Comment 158 block B6 null  <||@
  Comment 158 68 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 158 70 CMP (x: rdx|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 161 72 BRANCH trueDestinationProbability: 0.0020362233415496256 condition: > trueDestination: B6 -> B7 falseDestination: B6 -> B14  <||@
  Comment 167 block B14 null  <||@
  Comment 167 144 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 167 146 r8|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 173 148 JUMP ~[] destination: B14 -> B15  <||@
  Comment 173 block B15 null  <||@
  Comment 173 150 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 173 152 rcx|DWORD = MOVE input: int[52|0x34]  <||@
  Comment 178 154 rcx|DWORD = SUB (x: rcx|DWORD, ~y: rdx|DWORD) size: DWORD  <||@
  Comment 180 156 r10|QWORD = SHR (x: r10|QWORD, ~y: rcx|DWORD) size: QWORD  <||@
  Comment 183 158 rdx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 188 160 rcx|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 191 162 - = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD, rcx|QWORD, r8|DWORD] [] callTarget: HotSpotMethod<FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(int, long, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:170]  <||@
  Comment 191 {HotSpotMethod<FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(int, long, int)>}  <||@
  Comment 191 9  <||@
  Comment 196 []at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:476) [bci: 170, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5  |6  |7  |8  |9  |10  |11  |12  |13  |14  |15  |16  |17  |18  |19  |20  |21  |22  |23  |24  |25  |26  |27  |28  |29  |30  |31  |32 
     locals:  |-  |-  |-  |-  |-  |-  |-  |-  |-  |-  |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-    <||@
  Comment 197 164 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 212 12  <||@
  Comment 222 block B18 null  <||@
  Comment 222 190 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 222 192 rbp|QWORD = MOVE input: long[4503599627370495|0xfffffffffffff]  <||@
  Comment 232 194 rcx|QWORD = AND (x: r10|QWORD, y: rbp|QWORD) size: QWORD  <||@
  Comment 238 196 r13|QWORD = MOVE input: long[4607182418800017408|0x3ff0000000000000]  <||@
  Comment 248 198 rcx|QWORD = OR (x: rcx|QWORD, y: r13|QWORD) size: QWORD  <||@
  Comment 251 200 xmm0|DOUBLE = VMOVQ rcx|QWORD nZ: XMM  <||@
  Comment 256 202 xmm1|DOUBLE = VMOVE input: double[1.5|0x3ff8000000000000]  <||@
  Comment 256 {DataSection[0x0]}  <||@
  Comment 265 204 xmm0|DOUBLE = VSUBSD (x: xmm0|DOUBLE, y: xmm1|DOUBLE) nZ: XMM  <||@
  Comment 269 206 xmm1|DOUBLE = VMOVE input: double[0.289529654|0x3fd287a762c9bd93]  <||@
  Comment 269 {DataSection[0x8]}  <||@
  Comment 278 208 xmm0|DOUBLE = VMULSD (x: xmm0|DOUBLE, y: xmm1|DOUBLE) nZ: XMM  <||@
  Comment 282 210 xmm1|DOUBLE = VMOVE input: double[0.176091259|0x3fc68a288b421b8c]  <||@
  Comment 282 {DataSection[0x10]}  <||@
  Comment 291 212 xmm0|DOUBLE = VADDSD (x: xmm0|DOUBLE, y: xmm1|DOUBLE) nZ: XMM  <||@
  Comment 295 214 xmm1|DOUBLE = VCVTSI2SD rdx|DWORD  <||@
  Comment 303 216 xmm2|DOUBLE = VMOVE input: double[0.301029995663981|0x3fd34413509f79fb]  <||@
  Comment 303 {DataSection[0x18]}  <||@
  Comment 312 218 xmm1|DOUBLE = VMULSD (x: xmm1|DOUBLE, y: xmm2|DOUBLE) nZ: XMM  <||@
  Comment 316 220 xmm0|DOUBLE = VADDSD (x: xmm0|DOUBLE, y: xmm1|DOUBLE) nZ: XMM  <||@
  Comment 320 222 r13|QWORD = VMOVQ xmm0|DOUBLE  <||@
  Comment 325 224 rcx|QWORD = MOVE input: long[-9223372036854775808|0x8000000000000000]  <||@
  Comment 335 226 r14|QWORD = MOVE input: long[9218868437227405312|0x7ff0000000000000]  <||@
  Comment 345 228 r14|QWORD = AND (x: r13|QWORD, y: r14|QWORD) size: QWORD  <||@
  Comment 348 230 r14|QWORD = SHR r14|QWORD y: 52 size: QWORD  <||@
  Comment 352 232 r14|DWORD = MOV r14|QWORD size: DWORD  <||@
  Comment 355 234 r9|DWORD = LEA [r14|DWORD - 1023] size: DWORD  <||@
  Comment 362 236 CMP rax|DWORD y: 27 size: DWORD  <||@
  Comment 365 238 BRANCH trueDestinationProbability: 0.5429471082944717 condition: |<| trueDestination: B18 -> B19 falseDestination: B18 -> B28  <||@
  Comment 371 block B19 null  <||@
  Comment 371 240 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 371 242 rsi|DWORD = ADD (x: rbx|DWORD, ~y: [rdi|QWORD[.] + rax|DWORD * 4 + 16]) size: DWORD  <||@
  Comment 377 244 CMP rsi|DWORD y: 64 size: DWORD  <||@
  Comment 380 246 BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B19 -> B20 falseDestination: B19 -> B27  <||@
  Comment 386 block B20 null  <||@
  Comment 386 248 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 386 250 TEST (x: r9|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 389 252 BRANCH trueDestinationProbability: 0.8090044605656586 condition: < trueDestination: B20 -> B30 falseDestination: B20 -> B22  <||@
  Comment 395 block B30 null  <||@
  Comment 395 338 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 395 340 rsi|QWORD = MOVE input: long[9223372036854775807|0x7fffffffffffffff]  <||@
  Comment 405 342 TEST (x: rsi|QWORD, y: r13|QWORD) size: QWORD  <||@
  Comment 408 344 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B32  <||@
  Comment 414 block B32 null  <||@
  Comment 414 362 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 414 364 TEST (x: rcx|QWORD, y: r13|QWORD) size: QWORD  <||@
  Comment 417 366 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 422 368 rsi|DWORD = CMOVE (falseValue: int[-1|0xffffffffffffffff], ~trueValue: rcx|DWORD) condition: =  <||@
  Comment 430 370 r9|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 433 372 JUMP ~[] destination: B32 -> B40  <||@
  Comment 433 block B40 null  <||@
  Comment 433 470 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 433 472 rcx|DWORD = NEG r9|DWORD size: DWORD  <||@
  Comment 438 474 CMP rcx|DWORD y: 1 size: DWORD  <||@
  Comment 441 476 BRANCH trueDestinationProbability: 0.7447175992468633 condition: < trueDestination: B40 -> B41 falseDestination: B40 -> B42  <||@
  Comment 447 block B41 null  <||@
  Comment 447 478 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 447 480 stack:56|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 455 482 rsi|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 457 484 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 462 486 JUMP ~[] destination: B41 -> B43  <||@
  Comment 462 block B43 null  <||@
  Comment 462 502 [] = LABEL numbPhis: 3 align: false label: ?  <||@
  Comment 462 504 CMP rcx|DWORD y: 27 size: DWORD  <||@
  Comment 465 506 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B43 -> B44 falseDestination: B43 -> B156  <||@
  Comment 471 block B44 null  <||@
  Comment 471 508 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 471 510 CMP r9|DWORD y: 1 size: DWORD  <||@
  Comment 475 512 BRANCH trueDestinationProbability: 0.7447175992468633 condition: < trueDestination: B44 -> B45 falseDestination: B44 -> B46  <||@
  Comment 481 block B45 null  <||@
  Comment 481 514 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 481 516 r14|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 484 518 r13|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 490 520 stack:52|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 494 522 rax|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 499 524 JUMP ~[] destination: B45 -> B47  <||@
  Comment 499 block B47 null  <||@
  Comment 499 542 [] = LABEL numbPhis: 3 align: false label: ?  <||@
  Comment 499 544 rsi|DWORD = ADD (x: rsi|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 501 546 CMP rax|DWORD y: 27 size: DWORD  <||@
  Comment 504 548 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B47 -> B48 falseDestination: B47 -> B155  <||@
  Comment 510 block B48 null  <||@
  Comment 510 550 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 510 552 rdx|DWORD = MOVE input: int[52|0x34]  <||@
  Comment 515 554 rdx|DWORD = SUB (x: rdx|DWORD, ~y: r11|DWORD) size: DWORD  <||@
  Comment 518 556 rbp|DWORD = SUB (x: rsi|DWORD, ~y: rdx|DWORD) size: DWORD  <||@
  Comment 522 558 rsi|DWORD = SUB (x: rsi|DWORD, ~y: r8|DWORD) size: DWORD  <||@
  Comment 525 560 CMP (x: rbp|DWORD, y: r14|DWORD) size: DWORD  <||@
  Comment 528 562 BRANCH trueDestinationProbability: 0.44790294112836976 condition: > trueDestination: B48 -> B49 falseDestination: B48 -> B52  <||@
  Comment 534 block B52 null  <||@
  Comment 534 586 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 534 588 r14|DWORD = SUB (x: r14|DWORD, ~y: rbp|DWORD) size: DWORD  <||@
  Comment 537 590 rsi|DWORD = SUB (x: rsi|DWORD, ~y: rbp|DWORD) size: DWORD  <||@
  Comment 539 592 CMP rbx|DWORD y: 1 size: DWORD  <||@
  Comment 542 598 rbp|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 547 594 BRANCH trueDestinationProbability: 0.3803485753451483 condition: = trueDestination: B52 -> B54 falseDestination: B52 -> B56  <||@
  Comment 553 block B56 null  <||@
  Comment 553 614 [] = LABEL numbPhis: 3 align: false label: ?  <||@
  Comment 553 616 r8|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 556 618 rcx|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 559 620 r10|QWORD = SHR (x: r10|QWORD, ~y: rcx|DWORD) size: QWORD  <||@
  Comment 562 622 TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 564 624 BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B56 -> B57 falseDestination: B56 -> B153  <||@
  Comment 570 block B57 null  <||@
  Comment 570 626 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 570 628 r11|DWORD = SUB (x: rbp|DWORD, ~y: rsi|DWORD) size: DWORD  <||@
  Comment 576 630 rcx|DWORD = ADD (x: r11|DWORD, y: rbx|DWORD) size: DWORD  <||@
  Comment 581 632 rcx|DWORD = ADD (x: rcx|DWORD, ~y: [rdi|QWORD[.] + r8|DWORD * 4 + 16]) size: DWORD  <||@
  Comment 586 634 rdx|DWORD = SUB (x: r14|DWORD, ~y: rsi|DWORD) size: DWORD  <||@
  Comment 591 636 CMP rcx|DWORD y: 64 size: DWORD  <||@
  Comment 594 638 BRANCH trueDestinationProbability: 0.9886664055615392 condition: < trueDestination: B57 -> B58 falseDestination: B57 -> B94  <||@
  Comment 600 block B58 null  <||@
  Comment 600 640 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 600 642 stack:48|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 604 644 rbx|DWORD = INC rdx|DWORD size: DWORD  <||@
  Comment 608 646 rbx|DWORD = ADD (x: rbx|DWORD, ~y: [rdi|QWORD[.] + rax|DWORD * 4 + 16]) size: DWORD  <||@
  Comment 612 648 CMP rbx|DWORD y: 64 size: DWORD  <||@
  Comment 615 650 BRANCH trueDestinationProbability: 0.9702874687399411 condition: < trueDestination: B58 -> B59 falseDestination: B58 -> B94  <||@
  Comment 621 block B59 null  <||@
  Comment 621 652 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 621 654 CMP rcx|DWORD y: 32 size: DWORD  <||@
  Comment 624 656 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B59 -> B60 falseDestination: B59 -> B61  <||@
  Comment 630 block B61 null  <||@
  Comment 630 674 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 630 676 CMP r13|DWORD y: 27 size: DWORD  <||@
  Comment 634 678 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B61 -> B62 falseDestination: B61 -> B91  <||@
  Comment 640 block B62 null  <||@
  Comment 640 680 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 640 682 stack:60|DWORD = MOVE rbp|DWORD moveKind: DWORD  <||@
  Comment 644 684 stack:64|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 648 686 rbx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 653 688 rcx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[long[27]{1, 5, 25, 125, 625, ...}]  <||@
  Comment 653 {Object[long[27]{1, 5, 25, 125, 625, ...}]}  <||@
  Comment 663 690 rdi|QWORD = MOV [rcx|QWORD[.] + r8|DWORD * 8 + 16] size: QWORD  <||@
  Comment 668 692 rax|QWORD = MOV [rcx|QWORD[.] + r13|DWORD * 8 + 16] size: QWORD  <||@
  Comment 673 694 rcx|QWORD = IMUL (x: r10|QWORD, y: rdi|QWORD) size: QWORD  <||@
  Comment 680 696 rsi|QWORD = MOVE rcx|QWORD moveKind: QWORD  <||@
  Comment 683 698 rcx|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 686 700 rsi|QWORD = SHL (x: rsi|QWORD, ~y: rcx|DWORD) size: QWORD  <||@
  Comment 689 702 rcx|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 691 704 r11|QWORD = SHL (x: rax|QWORD, ~y: rcx|DWORD) size: QWORD  <||@
  Comment 697 706 rax|QWORD = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 700 708 (highResult: rdx|QWORD, lowResult: rax|QWORD) = CDQ rax|QWORD size: QWORD  <||@
  Comment 702 710 (highResult: rdx|QWORD, lowResult: rax|QWORD) = IDIV (highX: rdx|QWORD, lowX: rax|QWORD, y: r11|QWORD) size: QWORD state [bci:278]  <||@
  Comment 702 [rbx:0]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:554) [bci: 278, duringCall: false, rethrow: false]
              |0             |1  |2          |3  |4  |5               |6  |7               |8  |9         |10              |11        |12         |13         |14              |15        |16  |17  |18  |19  |20  |21  |22  |23  |24  |25  |26  |27  |28  |29  |30  |31  |32 
     locals:  |rbx|QWORD[.]  |-  |r10|QWORD  |-  |-  |stack:44|DWORD  |-  |stack:48|DWORD  |-  |r9|DWORD  |stack:60|DWORD  |r8|DWORD  |r14|DWORD  |r13|DWORD  |stack:64|DWORD  |r8|DWORD  |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-    <||@
  Comment 702 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 705 712 rcx|DWORD[.] = MOV [rbx|QWORD[.] + 28] size: DWORD  <||@
  Comment 708 714 rsi|QWORD = SHL r11|QWORD y: 3 size: QWORD  <||@
  Comment 715 716 rbp|QWORD = SHL r11|QWORD size: QWORD  <||@
  Comment 721 718 rsi|QWORD = ADD (x: rsi|QWORD, y: rbp|QWORD) size: QWORD  <||@
  Comment 724 720 rbp|QWORD = SHL rdi|QWORD y: 3 size: QWORD  <||@
  Comment 731 722 rdi|QWORD = SHL rdi|QWORD size: QWORD  <||@
  Comment 734 724 rbp|QWORD = ADD (x: rbp|QWORD, y: rdi|QWORD) size: QWORD  <||@
  Comment 737 726 rdi|QWORD = SHL rdx|QWORD y: 3 size: QWORD  <||@
  Comment 744 728 rdx|QWORD = SHL rdx|QWORD size: QWORD  <||@
  Comment 747 730 rdi|QWORD = ADD (x: rdi|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 750 732 rdx|QWORD = ADD (x: rbp|QWORD, y: rdi|QWORD) size: QWORD  <||@
  Comment 756 734 rax|DWORD = MOV rax|QWORD size: DWORD  <||@
  Comment 758 736 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 760 738 BRANCH trueDestinationProbability: 0.10789017046034499 condition: = trueDestination: B62 -> B63 falseDestination: B62 -> B68  <||@
  Comment 766 block B68 null  <||@
  Comment 766 790 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 766 792 CMP [rcx|DWORD[.] * 8 + 12] y: 0 size: DWORD state [bci:278]  <||@
  Comment 766 [rcx:0, rbx:0]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:554) [bci: 278, duringCall: false, rethrow: false]
              |0             |1  |2          |3  |4  |5               |6  |7               |8  |9         |10              |11        |12         |13         |14              |15        |16  |17  |18  |19  |20  |21  |22  |23  |24  |25  |26  |27  |28  |29  |30  |31  |32 
     locals:  |rbx|QWORD[.]  |-  |r10|QWORD  |-  |-  |stack:44|DWORD  |-  |stack:48|DWORD  |-  |r9|DWORD  |stack:60|DWORD  |r8|DWORD  |r14|DWORD  |r13|DWORD  |stack:64|DWORD  |r8|DWORD  |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-    <||@
  Comment 766 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 774 794 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B68 -> B69 falseDestination: B68 -> B70  <||@
  Comment 780 block B70 null  <||@
  Comment 780 814 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 780 816 r10|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 785 818 rax|DWORD = LEA [rax|DWORD + 48] size: DWORD  <||@
  Comment 788 820 MOV (x: [rcx|DWORD[.] * 8 + 16], y: rax|DWORD) size: WORD  <||@
  Comment 796 822 TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 799 824 BRANCH trueDestinationProbability: 0.011534143105032153 condition: = trueDestination: B70 -> B71 falseDestination: B70 -> B72  <||@
  Comment 805 block B72 null  <||@
  Comment 805 836 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 805 838 rax|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 808 840 r10|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 814 842 JUMP ~[] destination: B72 -> B73  <||@
  Comment 814 block B73 null  <||@
  Comment 814 844 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 814 846 CMP (x: rbp|QWORD, y: rdi|QWORD) size: QWORD  <||@
  Comment 817 848 r8|DWORD = SETCC condition: >  <||@
  Comment 825 850 CMP (x: rdx|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 828 852 rdx|DWORD = SETCC condition: >  <||@
  Comment 834 854 CMP r9|DWORD y: -3 size: DWORD  <||@
  Comment 838 856 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B73 -> B74 falseDestination: B73 -> B75  <||@
  Comment 844 block B75 null  <||@
  Comment 844 866 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 844 868 CMP r9|DWORD y: 8 size: DWORD  <||@
  Comment 848 870 BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B75 -> B77 falseDestination: B75 -> B89  <||@
  Comment 854 block B77 null  <||@
  Comment 854 876 [] = LABEL numbPhis: 4 align: false label: ?  <||@
  Comment 854 878 TEST (x: rcx|DWORD[.], y: rcx|DWORD[.]) size: DWORD  <||@
  Comment 856 880 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B77 -> B78 falseDestination: B77 -> B79  <||@
  Comment 862 block B79 null  <||@
  Comment 862 892 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 862 894 r13|DWORD = MOV [rcx|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 870 896 rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@e9a9e99 encoding: base: 0 shift: 3  <||@
  Comment 874 898 r14|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 877 900 rbp|QWORD = MOVE rdi|QWORD moveKind: QWORD  <||@
  Comment 880 902 rdi|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 882 904 JUMP ~[] destination: B79 -> B80  <||@
  Comment 882 block B80 loop 0 depth 1 header:230|LoopBegin  <||@
  Comment 882 906 [] = LABEL numbPhis: 5 align: true label: ?  <||@
  Comment 896 908 TEST (x: r8|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 899 910 BRANCH trueDestinationProbability: 0.9044543048889694 condition: = trueDestination: B80 -> B81 falseDestination: B80 -> B88  <||@
  Comment 905 block B81 loop 0 depth 1 header:230|LoopBegin  <||@
  Comment 905 912 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 905 914 TEST (x: rdi|DWORD, y: rdi|DWORD) size: DWORD  <||@
  Comment 907 916 BRANCH trueDestinationProbability: 0.9603010975971522 condition: = trueDestination: B81 -> B82 falseDestination: B81 -> B87  <||@
  Comment 913 block B82 loop 0 depth 1 header:230|LoopBegin  <||@
  Comment 913 918 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 913 920 CMP (x: r13|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 916 922 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B82 -> B83 falseDestination: B82 -> B86  <||@
  Comment 922 block B83 loop 0 depth 1 header:230|LoopBegin  <||@
  Comment 922 924 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 922 926 rax|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 925 928 (highResult: rdx|QWORD, lowResult: rax|QWORD) = CDQ rax|QWORD size: QWORD  <||@
  Comment 927 930 (highResult: rdx|QWORD, lowResult: rax|QWORD) = IDIV (highX: rdx|QWORD, lowX: rax|QWORD, y: r11|QWORD) size: QWORD state [bci:914]  <||@
  Comment 927 [rcx:0, rbx:0]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:683) [bci: 914, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4  |5  |6  |7  |8  |9         |10  |11  |12  |13  |14  |15  |16  |17         |18          |19          |20  |21  |22  |23  |24  |25         |26  |27         |28  |29         |30  |31         |32 
     locals:  |rbx|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-  |r9|DWORD  |-   |-   |-   |-   |-   |-   |-   |r10|DWORD  |int[0|0x0]  |int[0|0x0]  |-   |-   |-   |-   |-   |rbp|QWORD  |-   |r11|QWORD  |-   |r14|QWORD  |-   |rsi|QWORD  |-    <||@
  Comment 927 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 930 932 r8|DWORD = MOV rax|QWORD size: DWORD  <||@
  Comment 933 934 rdi|DWORD = LEA [r8|DWORD + 48] size: DWORD  <||@
  Comment 937 936 MOV (x: [rcx|QWORD[.] + r10|DWORD * 2 + 16], y: rdi|DWORD) size: WORD  <||@
  Comment 943 938 rdi|QWORD = SHL rdx|QWORD y: 3 size: QWORD  <||@
  Comment 950 940 rdx|QWORD = SHL rdx|QWORD size: QWORD  <||@
  Comment 953 942 rdi|QWORD = ADD (x: rdi|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 956 944 r10|DWORD = INC r10|DWORD size: DWORD  <||@
  Comment 959 946 rdx|QWORD = SHL r14|QWORD y: 3 size: QWORD  <||@
  Comment 966 948 r14|QWORD = SHL r14|QWORD size: QWORD  <||@
  Comment 969 950 rdx|QWORD = ADD (x: rdx|QWORD, y: r14|QWORD) size: QWORD  <||@
  Comment 972 952 CMP rdx|QWORD y: 1 size: QWORD  <||@
  Comment 976 954 BRANCH trueDestinationProbability: 2.81873959865786E-4 condition: < trueDestination: B83 -> B84 falseDestination: B83 -> B85  <||@
  Comment 982 block B85 loop 0 depth 1 header:230|LoopBegin  <||@
  Comment 982 970 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 982 972 CMP (x: rdx|QWORD, y: rdi|QWORD) size: QWORD  <||@
  Comment 985 974 rax|DWORD = SETCC condition: >  <||@
  Comment 991 976 rbp|QWORD = ADD (x: rdx|QWORD, y: rdi|QWORD) size: QWORD  <||@
  Comment 997 978 CMP (x: rbp|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 1000 980 rbp|DWORD = SETCC condition: >  <||@
  Comment 1008 982 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:1039]  <||@
  Comment 1008 [rcx:0, rbx:0]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:700) [bci: 1039, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4  |5  |6  |7  |8  |9         |10  |11  |12  |13  |14  |15  |16  |17         |18         |19         |20  |21  |22        |23  |24  |25         |26  |27         |28  |29         |30  |31         |32 
     locals:  |rbx|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-  |r9|DWORD  |-   |-   |-   |-   |-   |-   |-   |r10|DWORD  |rax|DWORD  |rbp|DWORD  |-   |-   |r8|DWORD  |-   |-   |rdi|QWORD  |-   |r11|QWORD  |-   |rdx|QWORD  |-   |rsi|QWORD  |-    <||@
  Comment 1008 {infopoint: SAFEPOINT}  <||@
  Comment 1008 11  <||@
  Comment 1014 984 r14|QWORD = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 1017 986 r8|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 1020 988 stack:64|DWORD = MOVE rbp|DWORD moveKind: DWORD  <||@
  Comment 1024 990 rbp|QWORD = MOVE rdi|QWORD moveKind: QWORD  <||@
  Comment 1027 992 rdi|DWORD = MOVE stack:64|DWORD moveKind: DWORD  <||@
  Comment 1031 994 JUMP ~[] destination: B85 -> B80  <||@
  Comment 1036 block B84 loop 0 depth 1 header:230|LoopBegin  <||@
  Comment 1036 956 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1036 958 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:1039]  <||@
  Comment 1036 [rcx:0, rbx:0]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:700) [bci: 1039, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4  |5  |6  |7  |8  |9         |10  |11  |12  |13  |14  |15  |16  |17         |18          |19          |20  |21  |22        |23  |24  |25         |26  |27         |28  |29         |30  |31         |32 
     locals:  |rbx|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-  |r9|DWORD  |-   |-   |-   |-   |-   |-   |-   |r10|DWORD  |int[1|0x1]  |int[1|0x1]  |-   |-   |r8|DWORD  |-   |-   |rdi|QWORD  |-   |r11|QWORD  |-   |rdx|QWORD  |-   |rsi|QWORD  |-    <||@
  Comment 1036 {infopoint: SAFEPOINT}  <||@
  Comment 1036 11  <||@
  Comment 1042 960 r14|QWORD = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 1045 962 rbp|QWORD = MOVE rdi|QWORD moveKind: QWORD  <||@
  Comment 1048 964 rdi|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1053 966 r8|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1059 968 JUMP ~[] destination: B84 -> B80  <||@
  Comment 1064 block B88 null  <||@
  Comment 1064 1020 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1064 1022 rdx|QWORD = SHL rbp|QWORD size: QWORD  <||@
  Comment 1070 1024 rdx|QWORD = SUB (x: rdx|QWORD, ~y: rsi|QWORD) size: QWORD  <||@
  Comment 1073 1026 TEST (x: rbp|QWORD, y: rbp|QWORD) size: QWORD  <||@
  Comment 1076 1028 rsi|DWORD = SETCC condition: =  <||@
  Comment 1084 1030 r11|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 1087 1032 rsi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 1090 1034 JUMP ~[] destination: B88 -> B143  <||@
  Comment 1090 block B143 null  <||@
  Comment 1090 1770 [] = LABEL numbPhis: 6 align: false label: ?  <||@
  Comment 1090 1772 MOVB (x: [rsi|QWORD[.] + 25], y: r11|DWORD) size: BYTE  <||@
  Comment 1094 1774 r11|DWORD = INC r9|DWORD size: DWORD  <||@
  Comment 1100 1776 MOV (x: [rsi|QWORD[.] + 12], y: r11|DWORD) size: DWORD  <||@
  Comment 1104 1778 MOV (x: [rsi|QWORD[.] + 16], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 1108 1780 MOV (x: [rsi|QWORD[.] + 20], y: r10|DWORD) size: DWORD  <||@
  Comment 1112 1782 TEST (x: rdi|DWORD, y: rdi|DWORD) size: DWORD  <||@
  Comment 1114 1784 BRANCH trueDestinationProbability: 0.6216282371371225 condition: = trueDestination: B143 -> B144 falseDestination: B143 -> B145  <||@
  Comment 1120 block B144 null  <||@
  Comment 1120 1786 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1120 1788 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 1135 12  <||@
  Comment 1145 block B28 null  <||@
  Comment 1145 328 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1145 330 TEST (x: r9|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 1148 332 BRANCH trueDestinationProbability: 0.8090044605656586 condition: < trueDestination: B28 -> B30 falseDestination: B28 -> B33  <||@
  Comment 1159 block B49 null  <||@
  Comment 1159 564 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1159 566 rbp|DWORD = SUB (x: rbp|DWORD, ~y: r14|DWORD) size: DWORD  <||@
  Comment 1162 568 rsi|DWORD = SUB (x: rsi|DWORD, ~y: r14|DWORD) size: DWORD  <||@
  Comment 1165 570 CMP rbx|DWORD y: 1 size: DWORD  <||@
  Comment 1168 576 r14|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1174 572 BRANCH trueDestinationProbability: 0.3803485753451483 condition: = trueDestination: B49 -> B54 falseDestination: B49 -> B56  <||@
  Comment 1185 block B145 null  <||@
  Comment 1185 1790 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1185 1792 TEST (x: r8|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 1188 1794 BRANCH trueDestinationProbability: 0.7008668650536939 condition: = trueDestination: B145 -> B146 falseDestination: B145 -> B147  <||@
  Comment 1194 block B146 null  <||@
  Comment 1194 1796 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1194 1798 - = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<FloatingDecimal$BinaryToASCIIBuffer.roundup()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1505]  <||@
  Comment 1194 9  <||@
  Comment 1199 {HotSpotMethod<FloatingDecimal$BinaryToASCIIBuffer.roundup()>}  <||@
  Comment 1204 []at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:778) [bci: 1505, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5  |6  |7  |8  |9  |10  |11  |12  |13  |14  |15  |16  |17  |18  |19  |20  |21  |22  |23  |24  |25  |26  |27  |28  |29  |30  |31  |32 
     locals:  |-  |-  |-  |-  |-  |-  |-  |-  |-  |-  |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-    <||@
  Comment 1205 1800 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 1220 12  <||@
  Comment 1230 block B87 null  <||@
  Comment 1230 1004 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1230 1006 rdx|QWORD = SHL rbp|QWORD size: QWORD  <||@
  Comment 1236 1008 rdx|QWORD = SUB (x: rdx|QWORD, ~y: rsi|QWORD) size: QWORD  <||@
  Comment 1239 1010 TEST (x: rbp|QWORD, y: rbp|QWORD) size: QWORD  <||@
  Comment 1242 1012 rsi|DWORD = SETCC condition: =  <||@
  Comment 1250 1014 r11|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 1253 1016 rsi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 1256 1018 JUMP ~[] destination: B87 -> B143  <||@
  Comment 1261 block B46 null  <||@
  Comment 1261 526 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1261 528 r13|DWORD = ADD (x: rax|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 1267 530 r14|DWORD = INC r9|DWORD size: DWORD  <||@
  Comment 1273 532 stack:52|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 1277 534 rax|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 1280 536 r14|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 1283 538 r13|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 1286 540 JUMP ~[] destination: B46 -> B47  <||@
  Comment 1291 block B42 null  <||@
  Comment 1291 488 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1291 490 rsi|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1296 492 rsi|DWORD = SUB (x: rsi|DWORD, ~y: r9|DWORD) size: DWORD  <||@
  Comment 1299 494 rbp|DWORD = SUB (x: rax|DWORD, ~y: r9|DWORD) size: DWORD  <||@
  Comment 1304 496 stack:56|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 1308 498 rsi|DWORD = MOVE rbp|DWORD moveKind: DWORD  <||@
  Comment 1310 500 JUMP ~[] destination: B42 -> B43  <||@
  Comment 1315 block B54 null  <||@
  Comment 1315 602 [] = LABEL numbPhis: 3 align: false label: ?  <||@
  Comment 1315 604 rsi|DWORD = DEC rsi|DWORD size: DWORD  <||@
  Comment 1317 606 JUMP ~[] destination: B54 -> B56  <||@
  Comment 1322 block B147 null  <||@
  Comment 1322 1802 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1322 1804 TEST (x: rdx|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 1325 1806 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B147 -> B148 falseDestination: B147 -> B149  <||@
  Comment 1331 block B149 null  <||@
  Comment 1331 1818 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1331 1820 CMP rdx|QWORD y: 1 size: QWORD  <||@
  Comment 1335 1822 BRANCH trueDestinationProbability: 0.4072231833910034 condition: < trueDestination: B149 -> B150 falseDestination: B149 -> B151  <||@
  Comment 1341 block B151 null  <||@
  Comment 1341 1828 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1341 1830 - = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<FloatingDecimal$BinaryToASCIIBuffer.roundup()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1498]  <||@
  Comment 1341 9  <||@
  Comment 1343 {HotSpotMethod<FloatingDecimal$BinaryToASCIIBuffer.roundup()>}  <||@
  Comment 1348 []at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:775) [bci: 1498, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5  |6  |7  |8  |9  |10  |11  |12  |13  |14  |15  |16  |17  |18  |19  |20  |21  |22  |23  |24  |25  |26  |27  |28  |29  |30  |31  |32 
     locals:  |-  |-  |-  |-  |-  |-  |-  |-  |-  |-  |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-    <||@
  Comment 1349 1832 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 1364 12  <||@
  Comment 1374 block B22 null  <||@
  Comment 1374 258 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1374 260 CMP r9|DWORD y: 52 size: DWORD  <||@
  Comment 1378 262 BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B22 -> B23 falseDestination: B22 -> B26  <||@
  Comment 1384 block B23 null  <||@
  Comment 1384 264 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1384 266 TEST (x: rcx|QWORD, y: r13|QWORD) size: QWORD  <||@
  Comment 1387 268 BRANCH trueDestinationProbability: 0.007057615809059412 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B37  <||@
  Comment 1393 block B37 null  <||@
  Comment 1393 420 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1393 422 rcx|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 1396 424 rsi|QWORD = SHR (x: rbp|QWORD, ~y: rcx|DWORD) size: QWORD  <||@
  Comment 1402 426 TEST (x: rsi|QWORD, y: r13|QWORD) size: QWORD  <||@
  Comment 1405 428 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B39  <||@
  Comment 1411 block B39 null  <||@
  Comment 1411 446 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1411 448 rcx|QWORD = MOVE input: long[4503599627370496|0x10000000000000]  <||@
  Comment 1421 450 r13|QWORD = AND (x: r13|QWORD, y: rbp|QWORD) size: QWORD  <||@
  Comment 1424 452 r13|QWORD = OR (x: r13|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 1427 454 rcx|DWORD = MOVE input: int[1075|0x433]  <||@
  Comment 1432 456 rcx|DWORD = SUB (x: rcx|DWORD, ~y: r14|DWORD) size: DWORD  <||@
  Comment 1435 458 r13|QWORD = SHR (x: r13|QWORD, ~y: rcx|DWORD) size: QWORD  <||@
  Comment 1438 460 rcx|DWORD = MOV r13|QWORD size: DWORD  <||@
  Comment 1441 462 rsi|DWORD = MOVE input: int[-1|0xffffffffffffffff]  <||@
  Comment 1446 464 rsi|DWORD = SUB (x: rsi|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 1448 466 r9|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 1451 468 JUMP ~[] destination: B39 -> B40  <||@
  Comment 1456 block B63 null  <||@
  Comment 1456 740 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1456 742 rax|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 1460 744 CMP (x: rdx|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 1463 746 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B63 -> B64 falseDestination: B63 -> B65  <||@
  Comment 1469 block B65 null  <||@
  Comment 1469 766 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1469 768 r9|DWORD = DEC r9|DWORD size: DWORD  <||@
  Comment 1472 770 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 1474 776 r10|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1480 772 BRANCH trueDestinationProbability: 0.011534143105032153 condition: = trueDestination: B65 -> B66 falseDestination: B65 -> B73  <||@
  Comment 1491 block B33 null  <||@
  Comment 1491 374 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1491 376 CMP r9|DWORD y: 52 size: DWORD  <||@
  Comment 1495 378 BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B33 -> B34 falseDestination: B33 -> B157  <||@
  Comment 1501 block B34 null  <||@
  Comment 1501 380 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1501 382 TEST (x: rcx|QWORD, y: r13|QWORD) size: QWORD  <||@
  Comment 1504 384 BRANCH trueDestinationProbability: 0.007057615809059412 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B37  <||@
  Comment 1511 block B150 null  <||@
  Comment 1511 1824 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1511 1826 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 1526 12  <||@
  Comment 1536 block B94 null  <||@
  Comment 1536 1096 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1536 1084 stack:64|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 1541 1086 stack:72|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 1546 1088 stack:60|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 1550 1090 stack:76|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 1555 1092 stack:80|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 1560 1098 rsi|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 1563 1100 rbp|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 1565 1104 stack:84|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 1570 1106 stack:88|DWORD = MOVE rbp|DWORD moveKind: DWORD  <||@
  Comment 1574 1108 rax|QWORD[.] = CALL_DIRECT [rsi|DWORD, rdx|DWORD] [] callTarget: HotSpotMethod<FDBigInteger.valueOfPow52(int, int)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1074]  <||@
  Comment 1574 8  <||@
  Comment 1575 {HotSpotMethod<FDBigInteger.valueOfPow52(int, int)>}  <||@
  Comment 1580 [stack:104]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:710) [bci: 1074, duringCall: true, rethrow: false]
              |0                  |1  |2               |3  |4  |5               |6  |7  |8  |9               |10              |11              |12              |13              |14          |15              |16  |17  |18  |19  |20  |21  |22  |23  |24  |25  |26  |27  |28  |29  |30  |31  |32 
     locals:  |stack:40|QWORD[.]  |-  |stack:72|QWORD  |-  |-  |stack:44|DWORD  |-  |-  |-  |stack:80|DWORD  |stack:64|DWORD  |stack:76|DWORD  |stack:88|DWORD  |stack:84|DWORD  |int[0|0x0]  |stack:76|DWORD  |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-    <||@
  Comment 1581 1110 NULLCHECK [rax|QWORD[.]] state [bci:1077]  <||@
  Comment 1581 [rax:0, stack:104]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:710) [bci: 1077, duringCall: false, rethrow: false]
              |0                  |1  |2               |3  |4  |5               |6  |7  |8  |9               |10              |11              |12              |13              |14          |15              |16  |17  |18  |19  |20  |21  |22  |23  |24  |25  |26  |27  |28  |29  |30  |31  |32 
     locals:  |stack:40|QWORD[.]  |-  |stack:72|QWORD  |-  |-  |stack:44|DWORD  |-  |-  |-  |stack:80|DWORD  |stack:64|DWORD  |stack:76|DWORD  |stack:88|DWORD  |stack:84|DWORD  |int[0|0x0]  |stack:76|DWORD  |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-  
     stack:   |Object[null]       |   |                |   |   |                |   |   |   |                |                |                |                |                |            |                |    |    |    |    |    |    |    |    |    |    |    |    |    |    |    |    |     <||@
  Comment 1581 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1583 1112 rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1586 1114 stack:96|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1591 1116 rax|DWORD = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<FDBigInteger.getNormalizationBias()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1081]  <||@
  Comment 1591 {HotSpotMethod<FDBigInteger.getNormalizationBias()>}  <||@
  Comment 1591 9  <||@
  Comment 1596 [stack:48, stack:104]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:711) [bci: 1081, duringCall: true, rethrow: false]
              |0                  |1  |2               |3  |4  |5               |6  |7  |8  |9               |10              |11              |12              |13              |14          |15              |16  |17  |18  |19  |20  |21  |22  |23  |24  |25                 |26  |27  |28  |29  |30  |31  |32 
     locals:  |stack:40|QWORD[.]  |-  |stack:72|QWORD  |-  |-  |stack:44|DWORD  |-  |-  |-  |stack:80|DWORD  |stack:64|DWORD  |stack:76|DWORD  |stack:88|DWORD  |stack:84|DWORD  |int[0|0x0]  |stack:76|DWORD  |-   |-   |-   |-   |-   |-   |-   |-   |-   |stack:96|QWORD[.]  |-   |-   |-   |-   |-   |-   |-    <||@
  Comment 1597 1118 rsi|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD  <||@
  Comment 1602 1120 rdx|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 1604 1122 stack:100|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 1608 1124 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<FDBigInteger.leftShift(int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1090]  <||@
  Comment 1608 9  <||@
  Comment 1615 {HotSpotMethod<FDBigInteger.leftShift(int)>}  <||@
  Comment 1620 [stack:104]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:712) [bci: 1090, duringCall: true, rethrow: false]
              |0                  |1  |2               |3  |4  |5               |6  |7  |8  |9               |10              |11              |12              |13              |14          |15              |16  |17  |18  |19  |20  |21  |22  |23  |24  |25  |26               |27  |28  |29  |30  |31  |32 
     locals:  |stack:40|QWORD[.]  |-  |stack:72|QWORD  |-  |-  |stack:44|DWORD  |-  |-  |-  |stack:80|DWORD  |stack:64|DWORD  |stack:76|DWORD  |stack:88|DWORD  |stack:84|DWORD  |int[0|0x0]  |stack:76|DWORD  |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |stack:100|DWORD  |-   |-   |-   |-   |-   |-    <||@
  Comment 1621 1126 stack:96|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1626 1128 rcx|DWORD = ADD (x: stack:100|DWORD, y: stack:64|DWORD) size: DWORD  <||@
  Comment 1634 1130 rsi|QWORD = MOVE stack:72|QWORD moveKind: QWORD  <||@
  Comment 1639 1132 rdx|DWORD = MOVE stack:76|DWORD moveKind: DWORD  <||@
  Comment 1643 1134 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD, rdx|DWORD, rcx|DWORD] [] callTarget: HotSpotMethod<FDBigInteger.valueOfMulPow52(long, int, int)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1103]  <||@
  Comment 1643 8  <||@
  Comment 1647 {HotSpotMethod<FDBigInteger.valueOfMulPow52(long, int, int)>}  <||@
  Comment 1652 [stack:48, stack:104]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:714) [bci: 1103, duringCall: true, rethrow: false]
              |0                  |1  |2  |3  |4  |5               |6  |7  |8  |9               |10  |11  |12              |13              |14          |15              |16  |17  |18  |19  |20  |21  |22  |23  |24  |25                 |26               |27  |28  |29  |30  |31  |32 
     locals:  |stack:40|QWORD[.]  |-  |-  |-  |-  |stack:44|DWORD  |-  |-  |-  |stack:80|DWORD  |-   |-   |stack:88|DWORD  |stack:84|DWORD  |int[0|0x0]  |stack:76|DWORD  |-   |-   |-   |-   |-   |-   |-   |-   |-   |stack:96|QWORD[.]  |stack:100|DWORD  |-   |-   |-   |-   |-   |-    <||@
  Comment 1653 1136 stack:72|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1658 1138 NULLCHECK [rax|QWORD[.]] state [bci:1106]  <||@
  Comment 1658 [stack:48, stack:72, stack:104]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:714) [bci: 1106, duringCall: false, rethrow: false]
              |0                  |1  |2  |3  |4  |5               |6  |7  |8  |9               |10  |11  |12              |13              |14          |15              |16  |17  |18  |19  |20  |21  |22  |23  |24  |25                 |26               |27  |28  |29  |30  |31  |32 
     locals:  |stack:40|QWORD[.]  |-  |-  |-  |-  |stack:44|DWORD  |-  |-  |-  |stack:80|DWORD  |-   |-   |stack:88|DWORD  |stack:84|DWORD  |int[0|0x0]  |stack:76|DWORD  |-   |-   |-   |-   |-   |-   |-   |-   |-   |stack:96|QWORD[.]  |stack:100|DWORD  |-   |-   |-   |-   |-   |-  
     stack:   |Object[null]       |   |   |   |   |                |   |   |   |                |    |    |                |                |            |                |    |    |    |    |    |    |    |    |    |                   |                 |    |    |    |    |    |     <||@
  Comment 1658 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1660 1140 rdx|DWORD = INC stack:100|DWORD size: DWORD  <||@
  Comment 1666 1142 rsi|DWORD = MOVE stack:56|DWORD moveKind: DWORD  <||@
  Comment 1670 1144 rax|QWORD[.] = CALL_DIRECT [rsi|DWORD, rdx|DWORD] [] callTarget: HotSpotMethod<FDBigInteger.valueOfPow52(int, int)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1119]  <||@
  Comment 1670 8  <||@
  Comment 1671 {HotSpotMethod<FDBigInteger.valueOfPow52(int, int)>}  <||@
  Comment 1676 [stack:48, stack:72, stack:104]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:715) [bci: 1119, duringCall: true, rethrow: false]
              |0                  |1  |2  |3  |4  |5               |6  |7  |8  |9               |10  |11  |12              |13              |14  |15  |16  |17  |18  |19  |20  |21  |22  |23  |24  |25                 |26               |27                 |28  |29  |30  |31  |32 
     locals:  |stack:40|QWORD[.]  |-  |-  |-  |-  |stack:44|DWORD  |-  |-  |-  |stack:80|DWORD  |-   |-   |stack:88|DWORD  |stack:84|DWORD  |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |stack:96|QWORD[.]  |stack:100|DWORD  |stack:72|QWORD[.]  |-   |-   |-   |-   |-    <||@
  Comment 1677 1146 rdx|DWORD = ADD (x: stack:88|DWORD, y: stack:100|DWORD) size: DWORD  <||@
  Comment 1685 1148 rdx|DWORD = INC rdx|DWORD size: DWORD  <||@
  Comment 1687 1150 rsi|DWORD = MOVE stack:60|DWORD moveKind: DWORD  <||@
  Comment 1691 1152 stack:112|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1696 1154 rax|QWORD[.] = CALL_DIRECT [rsi|DWORD, rdx|DWORD] [] callTarget: HotSpotMethod<FDBigInteger.valueOfPow52(int, int)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1135]  <||@
  Comment 1696 8  <||@
  Comment 1703 {HotSpotMethod<FDBigInteger.valueOfPow52(int, int)>}  <||@
  Comment 1708 [stack:32, stack:48, stack:72, stack:104]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:717) [bci: 1135, duringCall: true, rethrow: false]
              |0                  |1  |2  |3  |4  |5               |6  |7  |8  |9               |10  |11  |12  |13  |14  |15  |16  |17  |18  |19  |20  |21  |22  |23  |24  |25                 |26  |27                 |28                  |29  |30  |31  |32 
     locals:  |stack:40|QWORD[.]  |-  |-  |-  |-  |stack:44|DWORD  |-  |-  |-  |stack:80|DWORD  |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |stack:96|QWORD[.]  |-   |stack:72|QWORD[.]  |stack:112|QWORD[.]  |-   |-   |-   |-    <||@
  Comment 1709 1156 stack:120|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1714 1158 NULLCHECK [rax|QWORD[.]] state [bci:1138]  <||@
  Comment 1714 [stack:24, stack:32, stack:48, stack:72, stack:104]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:717) [bci: 1138, duringCall: false, rethrow: false]
              |0                  |1  |2  |3  |4  |5               |6  |7  |8  |9               |10  |11  |12  |13  |14  |15  |16  |17  |18  |19  |20  |21  |22  |23  |24  |25                 |26  |27                 |28                  |29  |30  |31  |32 
     locals:  |stack:40|QWORD[.]  |-  |-  |-  |-  |stack:44|DWORD  |-  |-  |-  |stack:80|DWORD  |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |stack:96|QWORD[.]  |-   |stack:72|QWORD[.]  |stack:112|QWORD[.]  |-   |-   |-   |-  
     stack:   |Object[null]       |   |   |   |   |                |   |   |   |                |    |    |    |    |    |    |    |    |    |    |    |    |    |    |    |                   |    |                   |                    |    |    |    |     <||@
  Comment 1714 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1716 1160 rsi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 1721 1162 rdx|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD  <||@
  Comment 1726 1164 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<FDBigInteger.quoRemIteration(FDBigInteger)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1147]  <||@
  Comment 1726 9  <||@
  Comment 1727 {HotSpotMethod<FDBigInteger.quoRemIteration(FDBigInteger)>}  <||@
  Comment 1732 [stack:24, stack:32, stack:48, stack:72, stack:104]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:724) [bci: 1147, duringCall: true, rethrow: false]
              |0                  |1  |2  |3  |4  |5               |6  |7  |8  |9               |10  |11  |12  |13  |14  |15  |16  |17          |18  |19  |20  |21  |22  |23  |24  |25                 |26  |27                 |28                  |29                  |30  |31  |32 
     locals:  |stack:40|QWORD[.]  |-  |-  |-  |-  |stack:44|DWORD  |-  |-  |-  |stack:80|DWORD  |-   |-   |-   |-   |-   |-   |-   |int[0|0x0]  |-   |-   |-   |-   |-   |-   |-   |stack:96|QWORD[.]  |-   |stack:72|QWORD[.]  |stack:112|QWORD[.]  |stack:120|QWORD[.]  |-   |-   |-    <||@
  Comment 1733 1166 rsi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 1738 1168 rdx|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD  <||@
  Comment 1743 1170 stack:60|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 1747 1172 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<FDBigInteger.cmp(FDBigInteger)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1156]  <||@
  Comment 1747 9  <||@
  Comment 1751 {HotSpotMethod<FDBigInteger.cmp(FDBigInteger)>}  <||@
  Comment 1756 [stack:24, stack:32, stack:48, stack:72, stack:104]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:725) [bci: 1156, duringCall: true, rethrow: false]
              |0                  |1  |2  |3  |4  |5               |6  |7  |8  |9               |10  |11  |12  |13  |14  |15  |16  |17          |18  |19  |20  |21  |22              |23  |24  |25                 |26  |27                 |28                  |29                  |30  |31  |32 
     locals:  |stack:40|QWORD[.]  |-  |-  |-  |-  |stack:44|DWORD  |-  |-  |-  |stack:80|DWORD  |-   |-   |-   |-   |-   |-   |-   |int[0|0x0]  |-   |-   |-   |-   |stack:60|DWORD  |-   |-   |stack:96|QWORD[.]  |-   |stack:72|QWORD[.]  |stack:112|QWORD[.]  |stack:120|QWORD[.]  |-   |-   |-    <||@
  Comment 1757 1174 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 1759 1176 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B94 -> B95 falseDestination: B94 -> B96  <||@
  Comment 1765 block B96 null  <||@
  Comment 1765 1192 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1765 1194 rsi|QWORD[.] = MOVE stack:120|QWORD[.] moveKind: QWORD  <||@
  Comment 1770 1196 rdx|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 1775 1198 rcx|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD  <||@
  Comment 1780 1200 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] [] callTarget: HotSpotMethod<FDBigInteger.addAndCmp(FDBigInteger, FDBigInteger)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1175]  <||@
  Comment 1780 9  <||@
  Comment 1783 {HotSpotMethod<FDBigInteger.addAndCmp(FDBigInteger, FDBigInteger)>}  <||@
  Comment 1788 [stack:24, stack:32, stack:48, stack:72, stack:104]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:726) [bci: 1175, duringCall: true, rethrow: false]
              |0                  |1  |2  |3  |4  |5               |6  |7  |8  |9               |10  |11  |12  |13  |14  |15  |16  |17          |18          |19  |20  |21  |22              |23  |24  |25                 |26  |27                 |28                  |29                  |30  |31  |32 
     locals:  |stack:40|QWORD[.]  |-  |-  |-  |-  |stack:44|DWORD  |-  |-  |-  |stack:80|DWORD  |-   |-   |-   |-   |-   |-   |-   |int[0|0x0]  |int[0|0x0]  |-   |-   |-   |stack:60|DWORD  |-   |-   |stack:96|QWORD[.]  |-   |stack:72|QWORD[.]  |stack:112|QWORD[.]  |stack:120|QWORD[.]  |-   |-   |-    <||@
  Comment 1789 1202 CMP rax|DWORD y: 1 size: DWORD  <||@
  Comment 1792 1204 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B96 -> B97 falseDestination: B96 -> B98  <||@
  Comment 1798 block B98 null  <||@
  Comment 1798 1218 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1798 1220 r10|DWORD = MOVE stack:60|DWORD moveKind: DWORD  <||@
  Comment 1803 1222 TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 1806 1224 BRANCH trueDestinationProbability: 0.11184606133493691 condition: = trueDestination: B98 -> B99 falseDestination: B98 -> B100  <||@
  Comment 1812 block B100 null  <||@
  Comment 1812 1238 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1812 1240 rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1817 1242 rdx|DWORD[.] = MOV [rsi|QWORD[.] + 28] size: DWORD  <||@
  Comment 1820 1244 CMP [rdx|DWORD[.] * 8 + 12] y: 0 size: DWORD state [bci:1178]  <||@
  Comment 1820 [rdx:0, rsi:0, stack:24, stack:32, stack:48, stack:72, stack:104]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:726) [bci: 1178, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4  |5               |6  |7  |8  |9               |10  |11  |12  |13  |14  |15  |16  |17          |18          |19  |20  |21  |22         |23  |24  |25                 |26  |27                 |28                  |29                  |30  |31  |32 
     locals:  |rsi|QWORD[.]  |-  |-  |-  |-  |stack:44|DWORD  |-  |-  |-  |stack:80|DWORD  |-   |-   |-   |-   |-   |-   |-   |int[0|0x0]  |int[0|0x0]  |-   |-   |-   |r10|DWORD  |-   |-   |stack:96|QWORD[.]  |-   |stack:72|QWORD[.]  |stack:112|QWORD[.]  |stack:120|QWORD[.]  |-   |-   |-  
     stack:   |rax|DWORD     |   |   |   |   |                |   |   |   |                |    |    |    |    |    |    |    |            |            |    |    |    |           |    |    |                   |    |                   |                    |                    |    |    |     <||@
  Comment 1820 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1828 1246 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B100 -> B101 falseDestination: B100 -> B103  <||@
  Comment 1834 block B103 null  <||@
  Comment 1834 1266 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1834 1268 r10|DWORD = LEA [r10|DWORD + 48] size: DWORD  <||@
  Comment 1838 1270 MOV (x: [rdx|DWORD[.] * 8 + 16], y: r10|DWORD) size: WORD  <||@
  Comment 1847 1272 r11|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1853 1274 r10|DWORD = MOVE stack:80|DWORD moveKind: DWORD  <||@
  Comment 1858 1278 JUMP ~[] destination: B103 -> B104  <||@
  Comment 1858 block B104 null  <||@
  Comment 1858 1280 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 1858 1234 rax|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 1862 1282 stack:60|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1867 1284 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 1869 1286 BRANCH trueDestinationProbability: 0.057125676488274206 condition: = trueDestination: B104 -> B110 falseDestination: B104 -> B106  <||@
  Comment 1875 block B106 null  <||@
  Comment 1875 1292 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1875 1294 CMP r10|DWORD y: -3 size: DWORD  <||@
  Comment 1879 1296 BRANCH trueDestinationProbability: 0.25 condition: < trueDestination: B106 -> B110 falseDestination: B106 -> B108  <||@
  Comment 1885 block B108 null  <||@
  Comment 1885 1302 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1885 1304 CMP r10|DWORD y: 8 size: DWORD  <||@
  Comment 1889 1306 BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B108 -> B110 falseDestination: B108 -> B152  <||@
  Comment 1895 block B110 null  <||@
  Comment 1895 1312 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1895 1314 rcx|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD  <||@
  Comment 1900 1316 r9|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1906 1318 r8|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1912 1320 stack:100|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 1917 1326 JUMP ~[] destination: B110 -> B111  <||@
  Comment 1917 block B111 loop 1 depth 1 header:388|LoopBegin  <||@
  Comment 1917 1328 [] = LABEL numbPhis: 4 align: true label: ?  <||@
  Comment 1920 1322 rax|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 1925 1324 r10|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD  <||@
  Comment 1930 1330 TEST (x: r8|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 1933 1332 BRANCH trueDestinationProbability: 0.9453314326443336 condition: = trueDestination: B111 -> B112 falseDestination: B111 -> B135  <||@
  Comment 1939 block B112 loop 1 depth 1 header:388|LoopBegin  <||@
  Comment 1939 1334 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1939 1336 TEST (x: r9|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 1942 1338 BRANCH trueDestinationProbability: 0.9951368468672246 condition: = trueDestination: B112 -> B113 falseDestination: B112 -> B135  <||@
  Comment 1948 block B113 loop 1 depth 1 header:388|LoopBegin  <||@
  Comment 1948 1340 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1948 1342 NULLCHECK [rcx|QWORD[.]] state [bci:1268]  <||@
  Comment 1948 [rax:0, rcx:0, r10:0, stack:24, stack:48, stack:72, stack:104]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:744) [bci: 1268, duringCall: false, rethrow: false]
              |0                  |1  |2  |3  |4  |5  |6  |7  |8  |9               |10  |11  |12  |13  |14  |15  |16  |17               |18          |19          |20  |21  |22  |23  |24  |25            |26  |27            |28            |29                  |30  |31  |32 
     locals:  |stack:40|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-  |stack:60|DWORD  |-   |-   |-   |-   |-   |-   |-   |stack:100|DWORD  |int[0|0x0]  |int[0|0x0]  |-   |-   |-   |-   |-   |r10|QWORD[.]  |-   |rax|QWORD[.]  |Object[null]  |stack:120|QWORD[.]  |-   |-   |-    <||@
  Comment 1948 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1950 1344 rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1953 1346 rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1956 1348 stack:128|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 1961 1350 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<FDBigInteger.quoRemIteration(FDBigInteger)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1282]  <||@
  Comment 1961 9  <||@
  Comment 1967 {HotSpotMethod<FDBigInteger.quoRemIteration(FDBigInteger)>}  <||@
  Comment 1972 [stack:16, stack:24, stack:48, stack:72, stack:104]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:745) [bci: 1282, duringCall: true, rethrow: false]
              |0                  |1  |2  |3  |4  |5  |6  |7  |8  |9               |10  |11  |12  |13  |14  |15  |16  |17               |18  |19  |20  |21  |22  |23  |24  |25                 |26  |27                 |28                  |29                  |30  |31  |32 
     locals:  |stack:40|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-  |stack:60|DWORD  |-   |-   |-   |-   |-   |-   |-   |stack:100|DWORD  |-   |-   |-   |-   |-   |-   |-   |stack:96|QWORD[.]  |-   |stack:72|QWORD[.]  |stack:128|QWORD[.]  |stack:120|QWORD[.]  |-   |-   |-    <||@
  Comment 1973 1352 stack:88|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 1977 1354 rsi|QWORD[.] = MOVE stack:128|QWORD[.] moveKind: QWORD  <||@
  Comment 1982 1356 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<FDBigInteger.multBy10()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1312]  <||@
  Comment 1982 9  <||@
  Comment 1983 {HotSpotMethod<FDBigInteger.multBy10()>}  <||@
  Comment 1988 [stack:24, stack:48, stack:72, stack:104]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:747) [bci: 1312, duringCall: true, rethrow: false]
              |0                  |1  |2  |3  |4  |5  |6  |7  |8  |9               |10  |11  |12  |13  |14  |15  |16  |17               |18  |19  |20  |21  |22              |23  |24  |25                 |26  |27                 |28  |29                  |30  |31  |32 
     locals:  |stack:40|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-  |stack:60|DWORD  |-   |-   |-   |-   |-   |-   |-   |stack:100|DWORD  |-   |-   |-   |-   |stack:88|DWORD  |-   |-   |stack:96|QWORD[.]  |-   |stack:72|QWORD[.]  |-   |stack:120|QWORD[.]  |-   |-   |-    <||@
  Comment 1989 1358 rsi|DWORD = MOV [rax|QWORD[.] + 12] size: DWORD state [bci:1315]  <||@
  Comment 1989 [rax:0, stack:24, stack:48, stack:72, stack:104]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:747) [bci: 1315, duringCall: false, rethrow: false]
              |0                  |1  |2  |3  |4  |5  |6  |7  |8  |9               |10  |11  |12  |13  |14  |15  |16  |17               |18  |19  |20  |21  |22              |23  |24  |25                 |26  |27                 |28  |29                  |30  |31  |32 
     locals:  |stack:40|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-  |stack:60|DWORD  |-   |-   |-   |-   |-   |-   |-   |stack:100|DWORD  |-   |-   |-   |-   |stack:88|DWORD  |-   |-   |stack:96|QWORD[.]  |-   |stack:72|QWORD[.]  |-   |stack:120|QWORD[.]  |-   |-   |-  
     stack:   |rax|QWORD[.]       |   |   |   |   |   |   |   |   |                |    |    |    |    |    |    |    |                 |    |    |    |    |                |    |    |                   |    |                   |    |                    |    |    |     <||@
  Comment 1989 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1992 1360 rdx|DWORD = MOV [rax|QWORD[.] + 16] size: DWORD  <||@
  Comment 1995 1362 r10|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 2000 1364 rcx|DWORD = MOV [r10|QWORD[.] + 16] size: DWORD  <||@
  Comment 2004 1366 rsi|DWORD = ADD (x: rsi|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 2006 1368 r11|DWORD = ADD (x: rcx|DWORD, ~y: [r10|QWORD[.] + 12]) size: DWORD  <||@
  Comment 2013 1370 r8|DWORD = MOVE stack:88|DWORD moveKind: DWORD  <||@
  Comment 2018 1372 r9|DWORD = LEA [r8|DWORD + 48] size: DWORD  <||@
  Comment 2022 1374 stack:56|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 2027 1376 rbx|DWORD = INC stack:100|DWORD size: DWORD  <||@
  Comment 2033 1378 CMP (x: r11|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 2036 1380 BRANCH trueDestinationProbability: 0.2175262580341747 condition: > trueDestination: B113 -> B114 falseDestination: B113 -> B117  <||@
  Comment 2042 block B117 loop 1 depth 1 header:388|LoopBegin  <||@
  Comment 2042 1442 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2042 1444 CMP (x: rsi|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 2045 1446 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B117 -> B118 falseDestination: B117 -> B119  <||@
  Comment 2051 block B119 loop 1 depth 1 header:388|LoopBegin  <||@
  Comment 2051 1460 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2051 1462 CMP rcx|DWORD y: 1 size: DWORD  <||@
  Comment 2054 1464 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B119 -> B120 falseDestination: B119 -> B121  <||@
  Comment 2060 block B121 loop 1 depth 1 header:388|LoopBegin  <||@
  Comment 2060 1478 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2060 1480 CMP rdx|DWORD y: 1 size: DWORD  <||@
  Comment 2063 1482 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B121 -> B122 falseDestination: B121 -> B123  <||@
  Comment 2069 block B123 loop 1 depth 1 header:388|LoopBegin  <||@
  Comment 2069 1496 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2069 1498 rsi|DWORD[.] = MOV [r10|QWORD[.] + 24] size: DWORD  <||@
  Comment 2073 1500 rcx|DWORD = DEC rcx|DWORD size: DWORD  <||@
  Comment 2075 1502 CMP (x: rcx|DWORD, y: [rsi|DWORD[.] * 8 + 12]) size: DWORD state [bci:1315]  <||@
  Comment 2075 [rax:0, rsi:0, r10:0, stack:24, stack:48, stack:72, stack:104]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:747) [bci: 1315, duringCall: false, rethrow: false]
              |0                  |1  |2  |3  |4  |5  |6  |7  |8  |9               |10  |11  |12  |13  |14  |15  |16  |17               |18  |19  |20  |21  |22        |23  |24  |25                 |26  |27            |28  |29                  |30  |31  |32 
     locals:  |stack:40|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-  |stack:60|DWORD  |-   |-   |-   |-   |-   |-   |-   |stack:100|DWORD  |-   |-   |-   |-   |r8|DWORD  |-   |-   |stack:96|QWORD[.]  |-   |r10|QWORD[.]  |-   |stack:120|QWORD[.]  |-   |-   |-  
     stack:   |rax|QWORD[.]       |   |   |   |   |   |   |   |   |                |    |    |    |    |    |    |    |                 |    |    |    |    |          |    |    |                   |    |              |    |                    |    |    |     <||@
  Comment 2075 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 2082 1504 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B123 -> B124 falseDestination: B123 -> B131  <||@
  Comment 2088 block B124 loop 1 depth 1 header:388|LoopBegin  <||@
  Comment 2088 1506 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2088 1508 r11|DWORD[.] = MOV [rax|QWORD[.] + 24] size: DWORD  <||@
  Comment 2092 1510 rdx|DWORD = DEC rdx|DWORD size: DWORD  <||@
  Comment 2094 1512 CMP (x: rdx|DWORD, y: [r11|DWORD[.] * 8 + 12]) size: DWORD state [bci:1315]  <||@
  Comment 2094 [rax:0, rsi:0, r10:0, r11:0, stack:24, stack:48, stack:72, stack:104]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:747) [bci: 1315, duringCall: false, rethrow: false]
              |0                  |1  |2  |3  |4  |5  |6  |7  |8  |9               |10  |11  |12  |13  |14  |15  |16  |17               |18  |19  |20  |21  |22        |23  |24  |25                 |26  |27            |28  |29                  |30  |31  |32 
     locals:  |stack:40|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-  |stack:60|DWORD  |-   |-   |-   |-   |-   |-   |-   |stack:100|DWORD  |-   |-   |-   |-   |r8|DWORD  |-   |-   |stack:96|QWORD[.]  |-   |r10|QWORD[.]  |-   |stack:120|QWORD[.]  |-   |-   |-  
     stack:   |rax|QWORD[.]       |   |   |   |   |   |   |   |   |                |    |    |    |    |    |    |    |                 |    |    |    |    |          |    |    |                   |    |              |    |                    |    |    |     <||@
  Comment 2094 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 2102 1514 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B124 -> B125 falseDestination: B124 -> B130  <||@
  Comment 2108 block B125 loop 1 depth 1 header:388|LoopBegin  <||@
  Comment 2108 1516 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2108 1518 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@e9a9e99 encoding: base: 0 shift: 3  <||@
  Comment 2112 1520 rsi|DWORD = MOV [rsi|QWORD[.] + rcx|DWORD * 4 + 16] size: DWORD  <||@
  Comment 2116 1522 r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@e9a9e99 encoding: base: 0 shift: 3  <||@
  Comment 2120 1524 rdx|DWORD = MOV [r11|QWORD[.] + rdx|DWORD * 4 + 16] size: DWORD  <||@
  Comment 2125 1526 CMP (x: rdx|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 2127 1528 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B125 -> B126 falseDestination: B125 -> B127  <||@
  Comment 2133 block B127 loop 1 depth 1 header:388|LoopBegin  <||@
  Comment 2133 1542 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2133 1544 stack:64|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 2137 1546 CMP (x: rdx|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 2139 1548 rbp|DWORD = SETCC condition: |>|  <||@
  Comment 2147 1550 rsi|QWORD[.] = MOVE stack:120|QWORD[.] moveKind: QWORD  <||@
  Comment 2152 1552 rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 2155 1554 rcx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 2158 1556 stack:128|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 2163 1558 stack:132|DWORD = MOVE rbp|DWORD moveKind: DWORD  <||@
  Comment 2167 1560 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] [] callTarget: HotSpotMethod<FDBigInteger.addAndCmp(FDBigInteger, FDBigInteger)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1340]  <||@
  Comment 2167 {HotSpotMethod<FDBigInteger.addAndCmp(FDBigInteger, FDBigInteger)>}  <||@
  Comment 2167 9  <||@
  Comment 2172 [stack:16, stack:24, stack:48, stack:72, stack:104]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:749) [bci: 1340, duringCall: true, rethrow: false]
              |0                  |1  |2  |3  |4  |5  |6  |7  |8  |9               |10  |11  |12  |13  |14  |15  |16  |17               |18               |19  |20  |21  |22              |23  |24  |25                 |26  |27                 |28                  |29                  |30  |31  |32 
     locals:  |stack:40|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-  |stack:60|DWORD  |-   |-   |-   |-   |-   |-   |-   |stack:100|DWORD  |stack:132|DWORD  |-   |-   |-   |stack:88|DWORD  |-   |-   |stack:96|QWORD[.]  |-   |stack:72|QWORD[.]  |stack:128|QWORD[.]  |stack:120|QWORD[.]  |-   |-   |-    <||@
  Comment 2173 1562 rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 2178 1564 rdx|DWORD[.] = MOV [rsi|QWORD[.] + 28] size: DWORD  <||@
  Comment 2181 1566 r10|DWORD = MOVE stack:100|DWORD moveKind: DWORD  <||@
  Comment 2186 1568 CMP (x: r10|DWORD, y: [rdx|DWORD[.] * 8 + 12]) size: DWORD state [bci:1343]  <||@
  Comment 2186 [rdx:0, rsi:0, stack:16, stack:24, stack:48, stack:72, stack:104]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:749) [bci: 1343, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4  |5  |6  |7  |8  |9               |10  |11  |12  |13  |14  |15  |16  |17         |18               |19  |20  |21  |22              |23  |24  |25                 |26  |27                 |28                  |29                  |30  |31  |32 
     locals:  |rsi|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-  |stack:60|DWORD  |-   |-   |-   |-   |-   |-   |-   |r10|DWORD  |stack:132|DWORD  |-   |-   |-   |stack:88|DWORD  |-   |-   |stack:96|QWORD[.]  |-   |stack:72|QWORD[.]  |stack:128|QWORD[.]  |stack:120|QWORD[.]  |-   |-   |-  
     stack:   |rax|DWORD     |   |   |   |   |   |   |   |   |                |    |    |    |    |    |    |    |           |                 |    |    |    |                |    |    |                   |    |                   |                    |                    |    |    |     <||@
  Comment 2186 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 2194 1570 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B127 -> B128 falseDestination: B127 -> B129  <||@
  Comment 2200 block B128 loop 1 depth 1 header:388|LoopBegin  <||@
  Comment 2200 1572 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2200 1574 r9|DWORD = MOVE stack:56|DWORD moveKind: DWORD  <||@
  Comment 2205 1576 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@e9a9e99 encoding: base: 0 shift: 3  <||@
  Comment 2209 1578 MOV (x: [rdx|QWORD[.] + r10|DWORD * 2 + 16], y: r9|DWORD) size: WORD  <||@
  Comment 2215 1580 CMP rax|DWORD y: 1 size: DWORD  <||@
  Comment 2218 1582 r9|DWORD = SETCC condition: <  <||@
  Comment 2226 1584 rcx|QWORD[.] = MOVE stack:128|QWORD[.] moveKind: QWORD  <||@
  Comment 2231 1586 r8|DWORD = MOVE stack:132|DWORD moveKind: DWORD  <||@
  Comment 2236 1588 stack:100|DWORD = STACKMOVE (input: stack:64|DWORD, ~backupSlot: stack:32|QWORD) scratch: rax  <||@
  Comment 2254 1594 JUMP ~[] destination: B128 -> B111  <||@
  Comment 2259 block B114 loop 1 depth 1 header:388|LoopBegin  <||@
  Comment 2259 1382 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2259 1384 stack:64|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 2263 1386 stack:128|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 2268 1388 rsi|QWORD[.] = MOVE stack:120|QWORD[.] moveKind: QWORD  <||@
  Comment 2273 1390 rdx|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 2278 1392 rcx|QWORD[.] = MOVE stack:128|QWORD[.] moveKind: QWORD  <||@
  Comment 2283 1394 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] [] callTarget: HotSpotMethod<FDBigInteger.addAndCmp(FDBigInteger, FDBigInteger)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1340]  <||@
  Comment 2283 9  <||@
  Comment 2287 {HotSpotMethod<FDBigInteger.addAndCmp(FDBigInteger, FDBigInteger)>}  <||@
  Comment 2292 [stack:16, stack:24, stack:48, stack:72, stack:104]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:749) [bci: 1340, duringCall: true, rethrow: false]
              |0                  |1  |2  |3  |4  |5  |6  |7  |8  |9               |10  |11  |12  |13  |14  |15  |16  |17               |18          |19  |20  |21  |22              |23  |24  |25                 |26  |27                 |28                  |29                  |30  |31  |32 
     locals:  |stack:40|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-  |stack:60|DWORD  |-   |-   |-   |-   |-   |-   |-   |stack:100|DWORD  |int[0|0x0]  |-   |-   |-   |stack:88|DWORD  |-   |-   |stack:96|QWORD[.]  |-   |stack:72|QWORD[.]  |stack:128|QWORD[.]  |stack:120|QWORD[.]  |-   |-   |-    <||@
  Comment 2293 1396 rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 2298 1398 rdx|DWORD[.] = MOV [rsi|QWORD[.] + 28] size: DWORD  <||@
  Comment 2301 1400 r10|DWORD = MOVE stack:100|DWORD moveKind: DWORD  <||@
  Comment 2306 1402 CMP (x: r10|DWORD, y: [rdx|DWORD[.] * 8 + 12]) size: DWORD state [bci:1343]  <||@
  Comment 2306 [rdx:0, rsi:0, stack:16, stack:24, stack:48, stack:72, stack:104]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:749) [bci: 1343, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4  |5  |6  |7  |8  |9               |10  |11  |12  |13  |14  |15  |16  |17         |18          |19  |20  |21  |22              |23  |24  |25                 |26  |27                 |28                  |29                  |30  |31  |32 
     locals:  |rsi|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-  |stack:60|DWORD  |-   |-   |-   |-   |-   |-   |-   |r10|DWORD  |int[0|0x0]  |-   |-   |-   |stack:88|DWORD  |-   |-   |stack:96|QWORD[.]  |-   |stack:72|QWORD[.]  |stack:128|QWORD[.]  |stack:120|QWORD[.]  |-   |-   |-  
     stack:   |rax|DWORD     |   |   |   |   |   |   |   |   |                |    |    |    |    |    |    |    |           |            |    |    |    |                |    |    |                   |    |                   |                    |                    |    |    |     <||@
  Comment 2306 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 2314 1404 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B114 -> B115 falseDestination: B114 -> B116  <||@
  Comment 2320 block B115 loop 1 depth 1 header:388|LoopBegin  <||@
  Comment 2320 1406 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2320 1408 rbx|DWORD = MOVE stack:64|DWORD moveKind: DWORD  <||@
  Comment 2324 1410 r9|DWORD = MOVE stack:56|DWORD moveKind: DWORD  <||@
  Comment 2329 1412 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@e9a9e99 encoding: base: 0 shift: 3  <||@
  Comment 2333 1414 MOV (x: [rdx|QWORD[.] + r10|DWORD * 2 + 16], y: r9|DWORD) size: WORD  <||@
  Comment 2339 1416 CMP rax|DWORD y: 1 size: DWORD  <||@
  Comment 2342 1418 r9|DWORD = SETCC condition: <  <||@
  Comment 2350 1420 rcx|QWORD[.] = MOVE stack:128|QWORD[.] moveKind: QWORD  <||@
  Comment 2355 1422 r8|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 2361 1424 stack:100|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 2365 1430 JUMP ~[] destination: B115 -> B111  <||@
  Comment 2370 block B135 null  <||@
  Comment 2370 1656 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2370 1650 r10|DWORD = MOVE stack:100|DWORD moveKind: DWORD  <||@
  Comment 2375 1652 rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 2380 1658 TEST (x: r9|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 2383 1660 BRANCH trueDestinationProbability: 0.04269392663860493 condition: = trueDestination: B135 -> B136 falseDestination: B135 -> B137  <||@
  Comment 2389 block B137 null  <||@
  Comment 2389 1674 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2389 1676 TEST (x: r8|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 2392 1678 BRANCH trueDestinationProbability: 0.08103015075376885 condition: = trueDestination: B137 -> B138 falseDestination: B137 -> B139  <||@
  Comment 2398 block B139 null  <||@
  Comment 2398 1692 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2398 1694 stack:88|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 2403 1696 stack:132|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 2408 1698 rsi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 2413 1700 rdx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 2418 1702 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<FDBigInteger.leftShift(int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1385]  <||@
  Comment 2418 9  <||@
  Comment 2423 {HotSpotMethod<FDBigInteger.leftShift(int)>}  <||@
  Comment 2428 [stack:24, stack:104]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:753) [bci: 1385, duringCall: true, rethrow: false]
              |0                  |1  |2  |3  |4  |5  |6  |7  |8  |9               |10  |11  |12  |13  |14  |15  |16  |17               |18               |19              |20  |21  |22  |23  |24  |25  |26  |27  |28  |29                  |30  |31  |32 
     locals:  |stack:40|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-  |stack:60|DWORD  |-   |-   |-   |-   |-   |-   |-   |stack:100|DWORD  |stack:132|DWORD  |stack:88|DWORD  |-   |-   |-   |-   |-   |-   |-   |-   |-   |stack:120|QWORD[.]  |-   |-   |-    <||@
  Comment 2429 1704 NULLCHECK [rax|QWORD[.]] state [bci:1388]  <||@
  Comment 2429 [rax:0, stack:24, stack:104]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:753) [bci: 1388, duringCall: false, rethrow: false]
              |0                  |1  |2  |3  |4  |5  |6  |7  |8  |9               |10  |11  |12  |13  |14  |15  |16  |17               |18               |19              |20  |21  |22  |23  |24  |25  |26  |27  |28  |29                  |30  |31  |32 
     locals:  |stack:40|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-  |stack:60|DWORD  |-   |-   |-   |-   |-   |-   |-   |stack:100|DWORD  |stack:132|DWORD  |stack:88|DWORD  |-   |-   |-   |-   |-   |-   |-   |-   |-   |stack:120|QWORD[.]  |-   |-   |-  
     stack:   |Object[null]       |   |   |   |   |   |   |   |   |                |    |    |    |    |    |    |    |                 |                 |                |    |    |    |    |    |    |    |    |    |                    |    |    |     <||@
  Comment 2429 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 2431 1706 rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 2434 1708 rdx|QWORD[.] = MOVE stack:120|QWORD[.] moveKind: QWORD  <||@
  Comment 2439 1710 stack:144|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 2443 1712 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<FDBigInteger.cmp(FDBigInteger)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1394]  <||@
  Comment 2443 9  <||@
  Comment 2447 {HotSpotMethod<FDBigInteger.cmp(FDBigInteger)>}  <||@
  Comment 2452 [stack:0, stack:104]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:754) [bci: 1394, duringCall: true, rethrow: false]
              |0                  |1  |2  |3  |4  |5  |6  |7  |8  |9               |10  |11  |12  |13  |14  |15  |16  |17               |18               |19              |20  |21  |22  |23  |24  |25  |26  |27                  |28  |29  |30  |31  |32 
     locals:  |stack:40|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-  |stack:60|DWORD  |-   |-   |-   |-   |-   |-   |-   |stack:100|DWORD  |stack:132|DWORD  |stack:88|DWORD  |-   |-   |-   |-   |-   |-   |-   |stack:144|QWORD[.]  |-   |-   |-   |-   |-    <||@
  Comment 2453 1714 rsi|QWORD = MOVSXD rax|DWORD size: QWORD  <||@
  Comment 2456 1716 rax|QWORD[.] = MOVE stack:144|QWORD[.] moveKind: QWORD  <||@
  Comment 2460 1718 stack:128|QWORD = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 2465 1720 JUMP ~[] destination: B139 -> B140  <||@
  Comment 2465 block B140 null  <||@
  Comment 2465 1722 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 2465 1724 rdx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[FDBigInteger@241972498]  <||@
  Comment 2465 {Object[FDBigInteger@241972498]}  <||@
  Comment 2475 1726 rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 2478 1728 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<FDBigInteger.cmp(FDBigInteger)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1412]  <||@
  Comment 2478 9  <||@
  Comment 2479 {HotSpotMethod<FDBigInteger.cmp(FDBigInteger)>}  <||@
  Comment 2484 [stack:104]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:758) [bci: 1412, duringCall: true, rethrow: false]
              |0                  |1  |2  |3  |4  |5  |6  |7  |8  |9               |10  |11  |12  |13  |14  |15  |16  |17               |18               |19              |20               |21  |22  |23  |24  |25  |26  |27  |28  |29  |30  |31  |32 
     locals:  |stack:40|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-  |stack:60|DWORD  |-   |-   |-   |-   |-   |-   |-   |stack:100|DWORD  |stack:132|DWORD  |stack:88|DWORD  |stack:128|QWORD  |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-  
     stack:   |stack:40|QWORD[.]  |   |   |   |   |   |   |   |   |                |    |    |    |    |    |    |    |                 |                 |                |                 |    |    |    |    |    |    |    |    |    |    |    |     <||@
  Comment 2485 1730 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 2487 1732 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B140 -> B141 falseDestination: B140 -> B142  <||@
  Comment 2493 block B142 null  <||@
  Comment 2493 1752 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2493 1754 r11|DWORD = MOVE input: byte[0|0x0]  <||@
  Comment 2499 1756 rdx|QWORD = MOVE stack:128|QWORD moveKind: QWORD  <||@
  Comment 2504 1758 rdi|DWORD = MOVE stack:88|DWORD moveKind: DWORD  <||@
  Comment 2508 1760 r8|DWORD = MOVE stack:132|DWORD moveKind: DWORD  <||@
  Comment 2513 1762 r10|DWORD = MOVE stack:100|DWORD moveKind: DWORD  <||@
  Comment 2518 1764 r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD  <||@
  Comment 2523 1766 rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 2528 1768 JUMP ~[] destination: B142 -> B143  <||@
  Comment 2533 block B71 null  <||@
  Comment 2533 826 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2533 828 r10|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 2539 830 rdx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 2544 832 r8|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 2550 834 JUMP ~[] destination: B71 -> B77  <||@
  Comment 2555 block B7 null  <||@
  Comment 2555 74 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2555 76 stack:48|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 2559 78 rsi|DWORD = SUB (x: rdx|DWORD, ~y: r8|DWORD) size: DWORD  <||@
  Comment 2564 80 rsi|DWORD = DEC rsi|DWORD size: DWORD  <||@
  Comment 2566 82 CMP rsi|DWORD y: 2 size: DWORD  <||@
  Comment 2569 84 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B9  <||@
  Comment 2575 block B9 null  <||@
  Comment 2575 94 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2575 96 rcx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:sun.misc.FloatingDecimal$BinaryToASCIIBuffer]  <||@
  Comment 2575 {Object[Class:sun.misc.FloatingDecimal$BinaryToASCIIBuffer]}  <||@
  Comment 2585 98 rcx|DWORD[.] = MOV [rcx|QWORD[.] + 104] size: DWORD  <||@
  Comment 2588 100 rbx|DWORD = MOV [rcx|DWORD[.] * 8 + 12] size: DWORD state [bci:67]  <||@
  Comment 2588 [rcx:0, stack:104]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:443) [bci: 67, duringCall: false, rethrow: false]
              |0                  |1          |2          |3  |4         |5               |6          |7               |8  |9  |10  |11  |12  |13  |14  |15  |16  |17  |18  |19  |20  |21  |22  |23  |24  |25  |26  |27  |28  |29  |30  |31  |32 
     locals:  |stack:40|QWORD[.]  |rdx|DWORD  |r10|QWORD  |-  |r8|DWORD  |stack:44|DWORD  |r11|DWORD  |stack:48|DWORD  |-  |-  |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-    <||@
  Comment 2588 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 2595 102 CMP (x: rbx|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 2597 104 BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B9 -> B10 falseDestination: B9 -> B13  <||@
  Comment 2603 block B13 null  <||@
  Comment 2603 136 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2603 138 r8|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 2609 140 rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 2614 142 JUMP ~[] destination: B13 -> B15  <||@
  Comment 2619 block B99 null  <||@
  Comment 2619 1226 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2619 1228 rsi|DWORD = DEC stack:80|DWORD size: DWORD  <||@
  Comment 2625 1230 r11|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 2631 1232 r10|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 2634 1236 JUMP ~[] destination: B99 -> B104  <||@
  Comment 2639 block B138 null  <||@
  Comment 2639 1680 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2639 1682 rax|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 2644 1684 stack:128|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 2653 1686 stack:88|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 2658 1688 stack:132|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 2663 1690 JUMP ~[] destination: B138 -> B140  <||@
  Comment 2668 block B8 null  <||@
  Comment 2668 86 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2668 88 r8|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 2674 90 rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 2679 92 JUMP ~[] destination: B8 -> B15  <||@
  Comment 2684 block B136 null  <||@
  Comment 2684 1662 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2684 1664 rax|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 2689 1666 stack:128|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 2698 1668 stack:88|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 2703 1670 stack:132|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 2708 1672 JUMP ~[] destination: B136 -> B140  <||@
  Comment 2713 block B10 null  <||@
  Comment 2713 106 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2713 108 rax|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 2717 110 r13|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 2722 112 CMP (x: rbx|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 2724 114 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B10 -> B11 falseDestination: B10 -> B12  <||@
  Comment 2730 block B11 null  <||@
  Comment 2730 116 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2730 118 rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@e9a9e99 encoding: base: 0 shift: 3  <||@
  Comment 2734 120 r8|DWORD = MOV [rcx|QWORD[.] + rsi|DWORD * 4 + 16] size: DWORD  <||@
  Comment 2739 122 rsi|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 2742 124 JUMP ~[] destination: B11 -> B15  <||@
  Comment 2747 block B66 null  <||@
  Comment 2747 774 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2747 778 rdx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 2752 780 r8|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 2758 782 JUMP ~[] destination: B66 -> B77  <||@
  Comment 2763 block B24 null  <||@
  Comment 2763 270 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2763 272 stack:52|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 2767 274 stack:48|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 2771 276 rax|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 2775 278 rbx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 2780 280 rcx|QWORD = MOVE input: long[4503599627370496|0x10000000000000]  <||@
  Comment 2790 282 r13|QWORD = AND (x: r13|QWORD, y: rbp|QWORD) size: QWORD  <||@
  Comment 2793 284 r13|QWORD = OR (x: r13|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 2796 286 rcx|DWORD = MOVE input: int[1075|0x433]  <||@
  Comment 2801 288 rcx|DWORD = SUB (x: rcx|DWORD, ~y: r14|DWORD) size: DWORD  <||@
  Comment 2804 290 r13|QWORD = SHR (x: r13|QWORD, ~y: rcx|DWORD) size: QWORD  <||@
  Comment 2807 292 r9|DWORD = MOV r13|QWORD size: DWORD  <||@
  Comment 2810 294 rax|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 2814 296 rbx|DWORD = MOVE stack:48|DWORD moveKind: DWORD  <||@
  Comment 2818 298 JUMP ~[] destination: B24 -> B40  <||@
  Comment 2823 block B35 null  <||@
  Comment 2823 386 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2823 388 stack:52|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 2827 390 stack:48|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 2831 392 rax|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 2835 394 rbx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 2840 396 rcx|QWORD = MOVE input: long[4503599627370496|0x10000000000000]  <||@
  Comment 2850 398 r13|QWORD = AND (x: r13|QWORD, y: rbp|QWORD) size: QWORD  <||@
  Comment 2853 400 r13|QWORD = OR (x: r13|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 2856 402 rcx|DWORD = MOVE input: int[1075|0x433]  <||@
  Comment 2861 404 rcx|DWORD = SUB (x: rcx|DWORD, ~y: r14|DWORD) size: DWORD  <||@
  Comment 2864 406 r13|QWORD = SHR (x: r13|QWORD, ~y: rcx|DWORD) size: QWORD  <||@
  Comment 2867 408 r9|DWORD = MOV r13|QWORD size: DWORD  <||@
  Comment 2870 410 rax|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 2874 412 rbx|DWORD = MOVE stack:48|DWORD moveKind: DWORD  <||@
  Comment 2878 414 JUMP ~[] destination: B35 -> B40  <||@
  Comment 2883 block B101 null  <||@
  Comment 2883 1248 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2883 1250 r11|DWORD = MOVE input: int[-291867|0xfffffffffffb8be5]  <||@
  Comment 2889 1252 rcx|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 2893 1254 rbx|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 2896 1256 JUMP ~[] destination: B101 -> B102  <||@
  Comment 2896 block B102 null  <||@
  Comment 2896 1258 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2896 1260 MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD  <||@
  Comment 2903 1262 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2910 1264 DEOPT info [bci:1178]  <||@
  Comment 2910 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 2915 [rbx:0, stack:24, stack:32, stack:48, stack:72]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:726) [bci: 1178, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4  |5          |6  |7  |8  |9               |10  |11  |12  |13  |14  |15  |16  |17          |18          |19  |20  |21  |22         |23  |24  |25                 |26  |27                 |28                  |29                  |30  |31  |32 
     locals:  |rbx|QWORD[.]  |-  |-  |-  |-  |rcx|DWORD  |-  |-  |-  |stack:80|DWORD  |-   |-   |-   |-   |-   |-   |-   |int[0|0x0]  |int[0|0x0]  |-   |-   |-   |r10|DWORD  |-   |-   |stack:96|QWORD[.]  |-   |stack:72|QWORD[.]  |stack:112|QWORD[.]  |stack:120|QWORD[.]  |-   |-   |-  
     stack:   |rax|DWORD     |   |   |   |   |           |   |   |   |                |    |    |    |    |    |    |    |            |            |    |    |    |           |    |    |                   |    |                   |                    |                    |    |    |     <||@
  Comment 2916 block B69 null  <||@
  Comment 2916 796 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2916 798 rbp|DWORD = MOVE stack:60|DWORD moveKind: DWORD  <||@
  Comment 2920 800 rsi|DWORD = MOVE stack:64|DWORD moveKind: DWORD  <||@
  Comment 2924 802 r11|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 2927 804 rdi|DWORD = MOVE stack:48|DWORD moveKind: DWORD  <||@
  Comment 2931 806 rcx|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 2935 808 r8|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 2938 810 r10|DWORD = MOVE input: int[-290587|0xfffffffffffb90e5]  <||@
  Comment 2944 812 JUMP ~[] destination: B69 -> B154  <||@
  Comment 2944 block B154 null  <||@
  Comment 2944 1870 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2944 1872 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 2951 1874 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2958 1876 DEOPT info [bci:278]  <||@
  Comment 2958 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 2963 [rbx:0]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:554) [bci: 278, duringCall: false, rethrow: false]
              |0             |1  |2         |3  |4  |5          |6  |7          |8  |9         |10         |11         |12         |13         |14         |15         |16  |17  |18  |19  |20  |21  |22  |23  |24  |25  |26  |27  |28  |29  |30  |31  |32 
     locals:  |rbx|QWORD[.]  |-  |r8|QWORD  |-  |-  |rcx|DWORD  |-  |rdi|DWORD  |-  |r9|DWORD  |rbp|DWORD  |r11|DWORD  |r14|DWORD  |r13|DWORD  |rsi|DWORD  |r11|DWORD  |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-    <||@
  Comment 2964 block B12 null  <||@
  Comment 2964 126 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2964 128 r9|DWORD = MOVE input: int[-226843|0xfffffffffffc89e5]  <||@
  Comment 2970 130 rcx|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 2972 132 rbx|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 2975 134 JUMP ~[] destination: B12 -> B158  <||@
  Comment 2975 block B158 null  <||@
  Comment 2975 1928 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2975 1930 MOV (x: [r15|QWORD + 668], y: r9|DWORD) size: DWORD  <||@
  Comment 2982 1932 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2989 1934 DEOPT info [bci:67]  <||@
  Comment 2989 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 2994 [rbx:0]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:443) [bci: 67, duringCall: false, rethrow: false]
              |0             |1          |2          |3  |4         |5          |6          |7               |8  |9  |10  |11  |12  |13  |14  |15  |16  |17  |18  |19  |20  |21  |22  |23  |24  |25  |26  |27  |28  |29  |30  |31  |32 
     locals:  |rbx|QWORD[.]  |rdx|DWORD  |r10|QWORD  |-  |r8|DWORD  |rcx|DWORD  |r11|DWORD  |stack:48|DWORD  |-  |-  |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-    <||@
  Comment 2995 block B129 null  <||@
  Comment 2995 1596 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2995 1598 rbp|DWORD = MOVE stack:132|DWORD moveKind: DWORD  <||@
  Comment 2999 1600 rbx|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 3002 1602 MOV [r15|QWORD + 668] y: -274971 size: DWORD  <||@
  Comment 3013 1604 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 3020 1606 DEOPT info [bci:1343]  <||@
  Comment 3020 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 3025 [rbx:0, stack:16, stack:24, stack:48, stack:72]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:749) [bci: 1343, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4  |5  |6  |7  |8  |9               |10  |11  |12  |13  |14  |15  |16  |17               |18         |19  |20  |21  |22              |23  |24  |25                 |26  |27                 |28                  |29                  |30  |31  |32 
     locals:  |rbx|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-  |stack:60|DWORD  |-   |-   |-   |-   |-   |-   |-   |stack:100|DWORD  |rbp|DWORD  |-   |-   |-   |stack:88|DWORD  |-   |-   |stack:96|QWORD[.]  |-   |stack:72|QWORD[.]  |stack:128|QWORD[.]  |stack:120|QWORD[.]  |-   |-   |-  
     stack:   |rax|DWORD     |   |   |   |   |   |   |   |   |                |    |    |    |    |    |    |    |                 |           |    |    |    |                |    |    |                   |    |                   |                    |                    |    |    |     <||@
  Comment 3026 block B31 null  <||@
  Comment 3026 346 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3026 348 stack:52|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 3030 350 stack:48|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 3034 352 rcx|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 3038 354 rbx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 3043 356 MOV [r15|QWORD + 668] y: -288275 size: DWORD  <||@
  Comment 3054 358 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 3061 360 DEOPT info [bci:174]  <||@
  Comment 3061 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 3066 [rbx:0]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 174, duringCall: false, rethrow: false]
              |0             |1          |2          |3  |4         |5          |6          |7               |8               |9  |10  |11  |12  |13  |14  |15  |16  |17  |18  |19  |20  |21  |22  |23  |24  |25  |26  |27  |28  |29  |30  |31  |32 
     locals:  |rbx|QWORD[.]  |rdx|DWORD  |r10|QWORD  |-  |r8|DWORD  |rcx|DWORD  |r11|DWORD  |stack:48|DWORD  |stack:52|DWORD  |-  |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-    <||@
  Comment 3067 block B74 null  <||@
  Comment 3067 858 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3067 860 rcx|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 3069 862 rax|DWORD = MOVE input: int[-249363|0xfffffffffffc31ed]  <||@
  Comment 3074 864 JUMP ~[] destination: B74 -> B90  <||@
  Comment 3074 block B90 null  <||@
  Comment 3074 1044 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 3074 1046 MOV (x: [r15|QWORD + 668], y: rax|DWORD) size: DWORD  <||@
  Comment 3081 1048 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 3088 1050 DEOPT info [bci:889]  <||@
  Comment 3088 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 3093 [rbx:0]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:680) [bci: 889, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4  |5          |6  |7  |8  |9         |10  |11  |12  |13  |14  |15  |16  |17         |18        |19         |20  |21  |22  |23  |24  |25         |26  |27         |28  |29         |30  |31         |32 
     locals:  |rbx|QWORD[.]  |-  |-  |-  |-  |rcx|DWORD  |-  |-  |-  |r9|DWORD  |-   |-   |-   |-   |-   |-   |-   |r10|DWORD  |r8|DWORD  |rdx|DWORD  |-   |-   |-   |-   |-   |rdi|QWORD  |-   |r11|QWORD  |-   |rbp|QWORD  |-   |rsi|QWORD  |-    <||@
  Comment 3094 block B152 null  <||@
  Comment 3094 1834 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3094 1836 r9|QWORD[.] = MOVE stack:120|QWORD[.] moveKind: QWORD  <||@
  Comment 3099 1838 rdi|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD  <||@
  Comment 3104 1840 r8|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD  <||@
  Comment 3109 1842 rcx|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 3111 1844 rbx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 3116 1846 rax|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 3121 1848 MOV [r15|QWORD + 668] y: -279571 size: DWORD  <||@
  Comment 3132 1850 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 3139 1852 DEOPT info [bci:1243]  <||@
  Comment 3139 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 3144 [rax:0, rbx:0, rdi:0, r8:0, r9:0]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:741) [bci: 1243, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4  |5          |6  |7  |8  |9          |10  |11  |12  |13  |14  |15  |16  |17         |18          |19          |20  |21  |22  |23  |24  |25           |26  |27            |28            |29           |30  |31  |32 
     locals:  |rbx|QWORD[.]  |-  |-  |-  |-  |rcx|DWORD  |-  |-  |-  |r10|DWORD  |-   |-   |-   |-   |-   |-   |-   |r11|DWORD  |int[0|0x0]  |int[0|0x0]  |-   |-   |-   |-   |-   |r8|QWORD[.]  |-   |rax|QWORD[.]  |rdi|QWORD[.]  |r9|QWORD[.]  |-   |-   |-    <||@
  Comment 3145 block B2 null  <||@
  Comment 3145 22 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3145 24 r11|DWORD = MOVE input: int[-303123|0xfffffffffffb5fed]  <||@
  Comment 3151 30 JUMP ~[] destination: B2 -> B160  <||@
  Comment 3151 block B160 null  <||@
  Comment 3151 1946 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 3151 26 rcx|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 3154 28 rbx|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 3157 1948 MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD  <||@
  Comment 3164 1950 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 3171 1952 DEOPT info [bci:0]  <||@
  Comment 3171 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 3176 [rbx:0]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:426) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2          |3  |4         |5          |6  |7  |8  |9  |10  |11  |12  |13  |14  |15  |16  |17  |18  |19  |20  |21  |22  |23  |24  |25  |26  |27  |28  |29  |30  |31  |32 
     locals:  |rbx|QWORD[.]  |rdx|DWORD  |r10|QWORD  |-  |r8|DWORD  |rcx|DWORD  |-  |-  |-  |-  |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-    <||@
  Comment 3177 block B89 null  <||@
  Comment 3177 1036 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3177 1038 rcx|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 3179 1040 rax|DWORD = MOVE input: int[-249619|0xfffffffffffc30ed]  <||@
  Comment 3184 1042 JUMP ~[] destination: B89 -> B90  <||@
  Comment 3186 block B153 null  <||@
  Comment 3186 1854 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3186 1856 r11|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 3189 1858 rdi|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 3191 1860 rcx|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 3195 1862 rbx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 3200 1864 r8|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 3203 1866 r10|DWORD = MOVE input: int[-229139|0xfffffffffffc80ed]  <||@
  Comment 3209 1868 JUMP ~[] destination: B153 -> B154  <||@
  Comment 3214 block B126 null  <||@
  Comment 3214 1530 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3214 1532 r11|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 3217 1534 rax|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 3220 1536 rbx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 3225 1538 r10|DWORD = MOVE input: int[-272403|0xfffffffffffbd7ed]  <||@
  Comment 3231 1540 JUMP ~[] destination: B126 -> B132  <||@
  Comment 3231 block B132 null  <||@
  Comment 3231 1632 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 3231 1634 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 3238 1636 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 3245 1638 DEOPT info [bci:1315]  <||@
  Comment 3245 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 3250 [rbx:0, r11:0, stack:24, stack:48, stack:72]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:747) [bci: 1315, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4  |5  |6  |7  |8  |9               |10  |11  |12  |13  |14  |15  |16  |17               |18  |19  |20  |21  |22         |23  |24  |25                 |26  |27                 |28  |29                  |30  |31  |32 
     locals:  |rbx|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-  |stack:60|DWORD  |-   |-   |-   |-   |-   |-   |-   |stack:100|DWORD  |-   |-   |-   |-   |rax|DWORD  |-   |-   |stack:96|QWORD[.]  |-   |stack:72|QWORD[.]  |-   |stack:120|QWORD[.]  |-   |-   |-  
     stack:   |r11|QWORD[.]  |   |   |   |   |   |   |   |   |                |    |    |    |    |    |    |    |                 |    |    |    |    |           |    |    |                   |    |                   |    |                    |    |    |     <||@
  Comment 3251 block B95 null  <||@
  Comment 3251 1178 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3251 1180 r10|DWORD = MOVE stack:60|DWORD moveKind: DWORD  <||@
  Comment 3256 1182 rcx|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 3260 1184 rbx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 3265 1186 MOV [r15|QWORD + 668] y: -253203 size: DWORD  <||@
  Comment 3276 1188 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 3283 1190 DEOPT info [bci:1159]  <||@
  Comment 3283 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 3288 [rbx:0, stack:24, stack:32, stack:48, stack:72]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:725) [bci: 1159, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4  |5          |6  |7  |8  |9               |10  |11  |12  |13  |14  |15  |16  |17          |18  |19  |20  |21  |22         |23  |24  |25                 |26  |27                 |28                  |29                  |30  |31  |32 
     locals:  |rbx|QWORD[.]  |-  |-  |-  |-  |rcx|DWORD  |-  |-  |-  |stack:80|DWORD  |-   |-   |-   |-   |-   |-   |-   |int[0|0x0]  |-   |-   |-   |-   |r10|DWORD  |-   |-   |stack:96|QWORD[.]  |-   |stack:72|QWORD[.]  |stack:112|QWORD[.]  |stack:120|QWORD[.]  |-   |-   |-  
     stack:   |rax|DWORD     |   |   |   |   |           |   |   |   |                |    |    |    |    |    |    |    |            |    |    |    |    |           |    |    |                   |    |                   |                    |                    |    |    |     <||@
  Comment 3289 block B118 null  <||@
  Comment 3289 1448 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3289 1450 r11|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 3292 1452 rax|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 3295 1454 rbx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 3300 1456 r10|DWORD = MOVE input: int[-263187|0xfffffffffffbfbed]  <||@
  Comment 3306 1458 JUMP ~[] destination: B118 -> B132  <||@
  Comment 3308 block B155 null  <||@
  Comment 3308 1878 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3308 1880 stack:84|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 3313 1882 stack:76|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 3317 1884 stack:80|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 3322 1886 stack:48|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 3326 1888 rax|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 3330 1890 rbx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 3335 1892 MOV [r15|QWORD + 668] y: -231195 size: DWORD  <||@
  Comment 3346 1894 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 3353 1896 DEOPT info [bci:10, 202]  <||@
  Comment 3353 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 3358 [rbx:0]at java.lang.Math.max(Math.java:1252) [bci: 10, duringCall: false, rethrow: false]
              |0               |1 
     locals:  |-               |- 
     stack:   |stack:84|DWORD  |  
  at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:523) [bci: 202, duringCall: true, rethrow: false]
              |0             |1          |2          |3  |4         |5          |6          |7               |8               |9               |10         |11              |12  |13  |14  |15  |16  |17  |18  |19  |20  |21  |22  |23  |24  |25  |26  |27  |28  |29  |30  |31  |32 
     locals:  |rbx|QWORD[.]  |rdx|DWORD  |r10|QWORD  |-  |r8|DWORD  |rax|DWORD  |r11|DWORD  |stack:48|DWORD  |stack:52|DWORD  |stack:80|DWORD  |rsi|DWORD  |stack:76|DWORD  |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-    <||@
  Comment 3359 block B38 null  <||@
  Comment 3359 430 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3359 432 stack:52|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 3363 434 stack:48|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 3367 436 rcx|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 3371 438 rbx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 3376 440 MOV [r15|QWORD + 668] y: -288531 size: DWORD  <||@
  Comment 3387 442 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 3394 444 DEOPT info [bci:174]  <||@
  Comment 3394 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 3399 [rbx:0]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 174, duringCall: false, rethrow: false]
              |0             |1          |2          |3  |4         |5          |6          |7               |8               |9  |10  |11  |12  |13  |14  |15  |16  |17  |18  |19  |20  |21  |22  |23  |24  |25  |26  |27  |28  |29  |30  |31  |32 
     locals:  |rbx|QWORD[.]  |rdx|DWORD  |r10|QWORD  |-  |r8|DWORD  |rcx|DWORD  |r11|DWORD  |stack:48|DWORD  |stack:52|DWORD  |-  |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-    <||@
  Comment 3400 block B148 null  <||@
  Comment 3400 1808 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3400 1810 rbx|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 3403 1812 MOV [r15|QWORD + 668] y: -285203 size: DWORD  <||@
  Comment 3414 1814 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 3421 1816 DEOPT info [bci:1445]  <||@
  Comment 3421 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 3426 [rbx:0]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:766) [bci: 1445, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4  |5  |6  |7  |8  |9         |10  |11  |12  |13  |14  |15  |16  |17         |18        |19         |20           |21  |22  |23  |24  |25  |26  |27  |28  |29  |30  |31  |32 
     locals:  |rbx|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-  |r9|DWORD  |-   |-   |-   |-   |-   |-   |-   |r10|DWORD  |r8|DWORD  |rdi|DWORD  |long[0|0x0]  |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-    <||@
  Comment 3427 block B130 null  <||@
  Comment 3427 1608 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3427 1610 r11|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 3430 1612 rax|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 3433 1614 rbx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 3438 1616 r10|DWORD = MOVE input: int[-270619|0xfffffffffffbdee5]  <||@
  Comment 3444 1618 JUMP ~[] destination: B130 -> B132  <||@
  Comment 3449 block B156 null  <||@
  Comment 3449 1898 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3449 1900 stack:76|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 3453 1902 stack:80|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 3458 1904 stack:48|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 3462 1906 rcx|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 3466 1908 rbx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 3471 1910 MOV [r15|QWORD + 668] y: -229395 size: DWORD  <||@
  Comment 3482 1912 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 3489 1914 DEOPT info [bci:10, 185]  <||@
  Comment 3489 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 3494 [rbx:0]at java.lang.Math.max(Math.java:1252) [bci: 10, duringCall: false, rethrow: false]
              |0               |1 
     locals:  |-               |- 
     stack:   |stack:76|DWORD  |  
  at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:520) [bci: 185, duringCall: true, rethrow: false]
              |0             |1          |2          |3  |4         |5          |6          |7               |8          |9               |10  |11  |12  |13  |14  |15  |16  |17  |18  |19  |20  |21  |22  |23  |24  |25  |26  |27  |28  |29  |30  |31  |32 
     locals:  |rbx|QWORD[.]  |rdx|DWORD  |r10|QWORD  |-  |r8|DWORD  |rcx|DWORD  |r11|DWORD  |stack:48|DWORD  |rax|DWORD  |stack:80|DWORD  |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-    <||@
  Comment 3495 block B27 null  <||@
  Comment 3495 316 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3495 318 r9|DWORD = MOVE input: int[-287507|0xfffffffffffb9ced]  <||@
  Comment 3501 320 stack:48|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 3505 322 rcx|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 3509 324 rbx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 3514 326 JUMP ~[] destination: B27 -> B158  <||@
  Comment 3519 block B91 null  <||@
  Comment 3519 1052 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3519 1054 r11|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 3522 1056 rdi|DWORD = MOVE stack:48|DWORD moveKind: DWORD  <||@
  Comment 3526 1058 rcx|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 3530 1060 rbx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 3535 1062 r8|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 3538 1064 r10|DWORD = MOVE input: int[-235035|0xfffffffffffc69e5]  <||@
  Comment 3544 1066 JUMP ~[] destination: B91 -> B154  <||@
  Comment 3549 block B141 null  <||@
  Comment 3549 1734 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3549 1736 r10|QWORD = MOVE stack:128|QWORD moveKind: QWORD  <||@
  Comment 3554 1738 r9|DWORD = MOVE stack:88|DWORD moveKind: DWORD  <||@
  Comment 3559 1740 r8|DWORD = MOVE stack:132|DWORD moveKind: DWORD  <||@
  Comment 3564 1742 r11|DWORD = MOVE stack:100|DWORD moveKind: DWORD  <||@
  Comment 3569 1744 rbx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 3574 1746 MOV [r15|QWORD + 668] y: -303891 size: DWORD  <||@
  Comment 3585 1748 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 3592 1750 DEOPT info [bci:1415]  <||@
  Comment 3592 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 3597 [rbx:0]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:758) [bci: 1415, duringCall: false, rethrow: false]
              |0             |1           |2  |3  |4  |5  |6  |7  |8  |9               |10  |11  |12  |13  |14  |15  |16  |17         |18        |19        |20         |21  |22  |23  |24  |25  |26  |27  |28  |29  |30  |31  |32 
     locals:  |rbx|QWORD[.]  |-           |-  |-  |-  |-  |-  |-  |-  |stack:60|DWORD  |-   |-   |-   |-   |-   |-   |-   |r11|DWORD  |r8|DWORD  |r9|DWORD  |r10|QWORD  |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-  
     stack:   |rbx|QWORD[.]  |int[0|0x0]  |   |   |   |   |   |   |   |                |    |    |    |    |    |    |    |           |          |          |           |    |    |    |    |    |    |    |    |    |    |    |     <||@
  Comment 3598 block B159 null  <||@
  Comment 3598 1936 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3598 1938 r11|DWORD = MOVE input: int[-302867|0xfffffffffffb60ed]  <||@
  Comment 3604 1944 JUMP ~[] destination: B159 -> B160  <||@
  Comment 3609 block B116 null  <||@
  Comment 3609 1432 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3609 1434 rbx|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 3612 1436 MOV [r15|QWORD + 668] y: -261147 size: DWORD  <||@
  Comment 3623 1438 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 3630 1440 DEOPT info [bci:1343]  <||@
  Comment 3630 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 3635 [rbx:0, stack:16, stack:24, stack:48, stack:72]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:749) [bci: 1343, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4  |5  |6  |7  |8  |9               |10  |11  |12  |13  |14  |15  |16  |17               |18          |19  |20  |21  |22              |23  |24  |25                 |26  |27                 |28                  |29                  |30  |31  |32 
     locals:  |rbx|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-  |stack:60|DWORD  |-   |-   |-   |-   |-   |-   |-   |stack:100|DWORD  |int[0|0x0]  |-   |-   |-   |stack:88|DWORD  |-   |-   |stack:96|QWORD[.]  |-   |stack:72|QWORD[.]  |stack:128|QWORD[.]  |stack:120|QWORD[.]  |-   |-   |-  
     stack:   |rax|DWORD     |   |   |   |   |   |   |   |   |                |    |    |    |    |    |    |    |                 |            |    |    |    |                |    |    |                   |    |                   |                    |                    |    |    |     <||@
  Comment 3636 block B97 null  <||@
  Comment 3636 1206 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3636 1208 r11|DWORD = MOVE input: int[-254483|0xfffffffffffc1ded]  <||@
  Comment 3642 1210 r10|DWORD = MOVE stack:60|DWORD moveKind: DWORD  <||@
  Comment 3647 1212 rcx|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 3651 1214 rbx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 3656 1216 JUMP ~[] destination: B97 -> B102  <||@
  Comment 3661 block B60 null  <||@
  Comment 3661 658 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3661 660 r11|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 3664 662 rdi|DWORD = MOVE stack:48|DWORD moveKind: DWORD  <||@
  Comment 3668 664 rcx|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 3672 666 rbx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 3677 668 r8|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 3680 670 r10|DWORD = MOVE input: int[-233491|0xfffffffffffc6fed]  <||@
  Comment 3686 672 JUMP ~[] destination: B60 -> B154  <||@
  Comment 3691 block B86 null  <||@
  Comment 3691 996 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3691 998 MOV [r15|QWORD + 668] y: -304923 size: DWORD  <||@
  Comment 3702 1000 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 3709 1002 DEOPT info [bci:914]  <||@
  Comment 3709 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 3714 [rbx:0]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:683) [bci: 914, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4  |5  |6  |7  |8  |9         |10  |11  |12  |13  |14  |15  |16  |17         |18          |19          |20  |21  |22  |23  |24  |25         |26  |27         |28  |29         |30  |31         |32 
     locals:  |rbx|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-  |r9|DWORD  |-   |-   |-   |-   |-   |-   |-   |r10|DWORD  |int[0|0x0]  |int[0|0x0]  |-   |-   |-   |-   |-   |rbp|QWORD  |-   |r11|QWORD  |-   |r14|QWORD  |-   |rsi|QWORD  |-    <||@
  Comment 3715 block B26 null  <||@
  Comment 3715 304 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3715 306 r9|DWORD = MOVE input: int[-287763|0xfffffffffffb9bed]  <||@
  Comment 3721 308 stack:48|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 3725 310 rcx|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 3729 312 rbx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 3734 314 JUMP ~[] destination: B26 -> B158  <||@
  Comment 3739 block B122 null  <||@
  Comment 3739 1484 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3739 1486 r11|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 3742 1488 rax|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 3745 1490 rbx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 3750 1492 r10|DWORD = MOVE input: int[-263699|0xfffffffffffbf9ed]  <||@
  Comment 3756 1494 JUMP ~[] destination: B122 -> B132  <||@
  Comment 3761 block B16 null  <||@
  Comment 3761 166 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3761 168 stack:48|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 3765 170 rcx|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 3768 172 rbx|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 3771 174 r9|DWORD = MOVE input: int[-222995|0xfffffffffffc98ed]  <||@
  Comment 3777 176 JUMP ~[] destination: B16 -> B158  <||@
  Comment 3782 block B120 null  <||@
  Comment 3782 1466 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3782 1468 r11|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 3785 1470 rax|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 3788 1472 rbx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 3793 1474 r10|DWORD = MOVE input: int[-263443|0xfffffffffffbfaed]  <||@
  Comment 3799 1476 JUMP ~[] destination: B120 -> B132  <||@
  Comment 3804 block B64 null  <||@
  Comment 3804 748 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3804 750 rbp|DWORD = MOVE stack:60|DWORD moveKind: DWORD  <||@
  Comment 3808 752 rsi|DWORD = MOVE stack:64|DWORD moveKind: DWORD  <||@
  Comment 3812 754 r11|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 3815 756 rdi|DWORD = MOVE stack:48|DWORD moveKind: DWORD  <||@
  Comment 3819 758 rcx|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 3821 760 r8|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 3824 762 r10|DWORD = MOVE input: int[-245267|0xfffffffffffc41ed]  <||@
  Comment 3830 764 JUMP ~[] destination: B64 -> B154  <||@
  Comment 3835 block B17 null  <||@
  Comment 3835 178 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3835 180 stack:48|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 3839 182 rcx|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 3842 184 rbx|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 3845 186 r9|DWORD = MOVE input: int[-222739|0xfffffffffffc99ed]  <||@
  Comment 3851 188 JUMP ~[] destination: B17 -> B158  <||@
  Comment 3856 block B131 null  <||@
  Comment 3856 1620 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3856 1622 r11|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 3859 1624 rax|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 3862 1626 rbx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 3867 1628 r10|DWORD = MOVE input: int[-266523|0xfffffffffffbeee5]  <||@
  Comment 3873 1630 JUMP ~[] destination: B131 -> B132  <||@
  Comment 3878 block B157 null  <||@
  Comment 3878 1916 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3878 1918 r9|DWORD = MOVE input: int[-288019|0xfffffffffffb9aed]  <||@
  Comment 3884 1920 stack:48|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 3888 1922 rcx|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 3892 1924 rbx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 3897 1926 JUMP ~[] destination: B157 -> B158  <||@
  Comment 3902 block B78 null  <||@
  Comment 3902 882 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3902 884 rcx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1454271960]  <||@
  Comment 3902 {Object[d.a@1454271960]}  <||@
  Comment 3912 886 MOV [r15|QWORD + 668] y: -303371 size: DWORD  <||@
  Comment 3923 888 MOV (x: [r15|QWORD + 680], y: rcx|QWORD[.]) size: QWORD  <||@
  Comment 3930 890 DEOPT info [bci:914]  <||@
  Comment 3930 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 3935 [rbx:0]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:683) [bci: 914, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4  |5  |6  |7  |8  |9         |10  |11  |12  |13  |14  |15  |16  |17         |18        |19         |20  |21  |22  |23  |24  |25         |26  |27         |28  |29         |30  |31         |32 
     locals:  |rbx|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-  |r9|DWORD  |-   |-   |-   |-   |-   |-   |-   |r10|DWORD  |r8|DWORD  |rdx|DWORD  |-   |-   |-   |-   |-   |rdi|QWORD  |-   |r11|QWORD  |-   |rbp|QWORD  |-   |rsi|QWORD  |-    <||@
  Comment 3936 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 3936 4  <||@
  Comment 3942 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 3942 5  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-8813[sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)]"
  method "HotSpotCompilation-8813[sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(int, long, int, boolean)]"
  date 1527005173642
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 107a2bd00   <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 46 block B0 null  <||@
  Comment 46 0 [rsi|QWORD[.], rdx|DWORD, rcx|QWORD, r8|DWORD, r9|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 46 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 54 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@4a6681b7 slotKind: QWORD  <||@
  Comment 54 6 stack:40|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 59 8 r10|QWORD = MOVE rcx|QWORD moveKind: QWORD  <||@
  Comment 62 10 stack:44|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 67 12 CMP rdx|DWORD y: 63 size: DWORD  <||@
  Comment 70 14 BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B159  <||@
  Comment 76 block B1 null  <||@
  Comment 76 16 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 76 18 CMP rdx|DWORD y: -21 size: DWORD  <||@
  Comment 79 20 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3  <||@
  Comment 85 block B3 null  <||@
  Comment 85 32 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 85 34 MOVB (x: [rsi|QWORD[.] + 26], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 89 36 MOVB (x: [rsi|QWORD[.] + 25], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 93 38 r11|DWORD = TZCNT r10|QWORD size: QWORD  <||@
  Comment 98 40 rcx|DWORD = MOVE input: int[53|0x35]  <||@
  Comment 103 42 rbx|DWORD = SUB (x: rcx|DWORD, ~y: r11|DWORD) size: DWORD  <||@
  Comment 108 44 rdi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[int[27]{0, 3, 5, 7, 10, ...}]  <||@
  Comment 108 {Object[int[27]{0, 3, 5, 7, 10, ...}]}  <||@
  Comment 118 46 rcx|DWORD = SUB (x: rbx|DWORD, ~y: rdx|DWORD) size: DWORD  <||@
  Comment 122 48 rax|DWORD = DEC rcx|DWORD size: DWORD  <||@
  Comment 126 50 CMP rax|DWORD y: 1 size: DWORD  <||@
  Comment 129 52 BRANCH trueDestinationProbability: 0.7447171657016569 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B18  <||@
  Comment 135 block B4 null  <||@
  Comment 135 54 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 135 56 rcx|DWORD = ADD (x: rbx|DWORD, ~y: [rdi|QWORD[.] + 16]) size: DWORD  <||@
  Comment 140 58 CMP rcx|DWORD y: 64 size: DWORD  <||@
  Comment 143 60 BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B4 -> B5 falseDestination: B4 -> B17  <||@
  Comment 149 block B5 null  <||@
  Comment 149 62 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 149 64 CMP rdx|DWORD y: 52 size: DWORD  <||@
  Comment 152 66 BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B5 -> B6 falseDestination: B5 -> B16  <||@
  Comment 158 block B6 null  <||@
  Comment 158 68 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 158 70 CMP (x: rdx|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 161 72 BRANCH trueDestinationProbability: 0.0020362233415496256 condition: > trueDestination: B6 -> B7 falseDestination: B6 -> B14  <||@
  Comment 167 block B14 null  <||@
  Comment 167 144 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 167 146 r8|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 173 148 JUMP ~[] destination: B14 -> B15  <||@
  Comment 173 block B15 null  <||@
  Comment 173 150 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 173 152 rcx|DWORD = MOVE input: int[52|0x34]  <||@
  Comment 178 154 rcx|DWORD = SUB (x: rcx|DWORD, ~y: rdx|DWORD) size: DWORD  <||@
  Comment 180 156 r10|QWORD = SHR (x: r10|QWORD, ~y: rcx|DWORD) size: QWORD  <||@
  Comment 183 158 rdx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 188 160 rcx|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 191 162 - = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD, rcx|QWORD, r8|DWORD] [] callTarget: HotSpotMethod<FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(int, long, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:170]  <||@
  Comment 191 {HotSpotMethod<FloatingDecimal$BinaryToASCIIBuffer.developLongDigits(int, long, int)>}  <||@
  Comment 191 9  <||@
  Comment 196 []at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:476) [bci: 170, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5  |6  |7  |8  |9  |10  |11  |12  |13  |14  |15  |16  |17  |18  |19  |20  |21  |22  |23  |24  |25  |26  |27  |28  |29  |30  |31  |32 
     locals:  |-  |-  |-  |-  |-  |-  |-  |-  |-  |-  |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-    <||@
  Comment 197 164 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 212 12  <||@
  Comment 222 block B18 null  <||@
  Comment 222 190 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 222 192 rbp|QWORD = MOVE input: long[4503599627370495|0xfffffffffffff]  <||@
  Comment 232 194 rcx|QWORD = AND (x: r10|QWORD, y: rbp|QWORD) size: QWORD  <||@
  Comment 238 196 r13|QWORD = MOVE input: long[4607182418800017408|0x3ff0000000000000]  <||@
  Comment 248 198 rcx|QWORD = OR (x: rcx|QWORD, y: r13|QWORD) size: QWORD  <||@
  Comment 251 200 xmm0|DOUBLE = VMOVQ rcx|QWORD nZ: XMM  <||@
  Comment 256 202 xmm1|DOUBLE = VMOVE input: double[1.5|0x3ff8000000000000]  <||@
  Comment 256 {DataSection[0x0]}  <||@
  Comment 265 204 xmm0|DOUBLE = VSUBSD (x: xmm0|DOUBLE, y: xmm1|DOUBLE) nZ: XMM  <||@
  Comment 269 206 xmm1|DOUBLE = VMOVE input: double[0.289529654|0x3fd287a762c9bd93]  <||@
  Comment 269 {DataSection[0x8]}  <||@
  Comment 278 208 xmm0|DOUBLE = VMULSD (x: xmm0|DOUBLE, y: xmm1|DOUBLE) nZ: XMM  <||@
  Comment 282 210 xmm1|DOUBLE = VMOVE input: double[0.176091259|0x3fc68a288b421b8c]  <||@
  Comment 282 {DataSection[0x10]}  <||@
  Comment 291 212 xmm0|DOUBLE = VADDSD (x: xmm0|DOUBLE, y: xmm1|DOUBLE) nZ: XMM  <||@
  Comment 295 214 xmm1|DOUBLE = VCVTSI2SD rdx|DWORD  <||@
  Comment 303 216 xmm2|DOUBLE = VMOVE input: double[0.301029995663981|0x3fd34413509f79fb]  <||@
  Comment 303 {DataSection[0x18]}  <||@
  Comment 312 218 xmm1|DOUBLE = VMULSD (x: xmm1|DOUBLE, y: xmm2|DOUBLE) nZ: XMM  <||@
  Comment 316 220 xmm0|DOUBLE = VADDSD (x: xmm0|DOUBLE, y: xmm1|DOUBLE) nZ: XMM  <||@
  Comment 320 222 r13|QWORD = VMOVQ xmm0|DOUBLE  <||@
  Comment 325 224 rcx|QWORD = MOVE input: long[-9223372036854775808|0x8000000000000000]  <||@
  Comment 335 226 r14|QWORD = MOVE input: long[9218868437227405312|0x7ff0000000000000]  <||@
  Comment 345 228 r14|QWORD = AND (x: r13|QWORD, y: r14|QWORD) size: QWORD  <||@
  Comment 348 230 r14|QWORD = SHR r14|QWORD y: 52 size: QWORD  <||@
  Comment 352 232 r14|DWORD = MOV r14|QWORD size: DWORD  <||@
  Comment 355 234 r9|DWORD = LEA [r14|DWORD - 1023] size: DWORD  <||@
  Comment 362 236 CMP rax|DWORD y: 27 size: DWORD  <||@
  Comment 365 238 BRANCH trueDestinationProbability: 0.5429471082944717 condition: |<| trueDestination: B18 -> B19 falseDestination: B18 -> B28  <||@
  Comment 371 block B19 null  <||@
  Comment 371 240 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 371 242 rsi|DWORD = ADD (x: rbx|DWORD, ~y: [rdi|QWORD[.] + rax|DWORD * 4 + 16]) size: DWORD  <||@
  Comment 377 244 CMP rsi|DWORD y: 64 size: DWORD  <||@
  Comment 380 246 BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B19 -> B20 falseDestination: B19 -> B27  <||@
  Comment 386 block B20 null  <||@
  Comment 386 248 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 386 250 TEST (x: r9|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 389 252 BRANCH trueDestinationProbability: 0.8090044605656586 condition: < trueDestination: B20 -> B30 falseDestination: B20 -> B22  <||@
  Comment 395 block B30 null  <||@
  Comment 395 338 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 395 340 rsi|QWORD = MOVE input: long[9223372036854775807|0x7fffffffffffffff]  <||@
  Comment 405 342 TEST (x: rsi|QWORD, y: r13|QWORD) size: QWORD  <||@
  Comment 408 344 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B32  <||@
  Comment 414 block B32 null  <||@
  Comment 414 362 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 414 364 TEST (x: rcx|QWORD, y: r13|QWORD) size: QWORD  <||@
  Comment 417 366 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 422 368 rsi|DWORD = CMOVE (falseValue: int[-1|0xffffffffffffffff], ~trueValue: rcx|DWORD) condition: =  <||@
  Comment 430 370 r9|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 433 372 JUMP ~[] destination: B32 -> B40  <||@
  Comment 433 block B40 null  <||@
  Comment 433 470 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 433 472 rcx|DWORD = NEG r9|DWORD size: DWORD  <||@
  Comment 438 474 CMP rcx|DWORD y: 1 size: DWORD  <||@
  Comment 441 476 BRANCH trueDestinationProbability: 0.7447175992468633 condition: < trueDestination: B40 -> B41 falseDestination: B40 -> B42  <||@
  Comment 447 block B41 null  <||@
  Comment 447 478 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 447 480 stack:56|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 455 482 rsi|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 457 484 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 462 486 JUMP ~[] destination: B41 -> B43  <||@
  Comment 462 block B43 null  <||@
  Comment 462 502 [] = LABEL numbPhis: 3 align: false label: ?  <||@
  Comment 462 504 CMP rcx|DWORD y: 27 size: DWORD  <||@
  Comment 465 506 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B43 -> B44 falseDestination: B43 -> B156  <||@
  Comment 471 block B44 null  <||@
  Comment 471 508 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 471 510 CMP r9|DWORD y: 1 size: DWORD  <||@
  Comment 475 512 BRANCH trueDestinationProbability: 0.7447175992468633 condition: < trueDestination: B44 -> B45 falseDestination: B44 -> B46  <||@
  Comment 481 block B45 null  <||@
  Comment 481 514 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 481 516 r14|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 484 518 r13|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 490 520 stack:52|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 494 522 rax|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 499 524 JUMP ~[] destination: B45 -> B47  <||@
  Comment 499 block B47 null  <||@
  Comment 499 542 [] = LABEL numbPhis: 3 align: false label: ?  <||@
  Comment 499 544 rsi|DWORD = ADD (x: rsi|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 501 546 CMP rax|DWORD y: 27 size: DWORD  <||@
  Comment 504 548 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B47 -> B48 falseDestination: B47 -> B155  <||@
  Comment 510 block B48 null  <||@
  Comment 510 550 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 510 552 rdx|DWORD = MOVE input: int[52|0x34]  <||@
  Comment 515 554 rdx|DWORD = SUB (x: rdx|DWORD, ~y: r11|DWORD) size: DWORD  <||@
  Comment 518 556 rbp|DWORD = SUB (x: rsi|DWORD, ~y: rdx|DWORD) size: DWORD  <||@
  Comment 522 558 rsi|DWORD = SUB (x: rsi|DWORD, ~y: r8|DWORD) size: DWORD  <||@
  Comment 525 560 CMP (x: rbp|DWORD, y: r14|DWORD) size: DWORD  <||@
  Comment 528 562 BRANCH trueDestinationProbability: 0.44790294112836976 condition: > trueDestination: B48 -> B49 falseDestination: B48 -> B52  <||@
  Comment 534 block B52 null  <||@
  Comment 534 586 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 534 588 r14|DWORD = SUB (x: r14|DWORD, ~y: rbp|DWORD) size: DWORD  <||@
  Comment 537 590 rsi|DWORD = SUB (x: rsi|DWORD, ~y: rbp|DWORD) size: DWORD  <||@
  Comment 539 592 CMP rbx|DWORD y: 1 size: DWORD  <||@
  Comment 542 598 rbp|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 547 594 BRANCH trueDestinationProbability: 0.3803485753451483 condition: = trueDestination: B52 -> B54 falseDestination: B52 -> B56  <||@
  Comment 553 block B56 null  <||@
  Comment 553 614 [] = LABEL numbPhis: 3 align: false label: ?  <||@
  Comment 553 616 r8|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 556 618 rcx|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 559 620 r10|QWORD = SHR (x: r10|QWORD, ~y: rcx|DWORD) size: QWORD  <||@
  Comment 562 622 TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 564 624 BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B56 -> B57 falseDestination: B56 -> B153  <||@
  Comment 570 block B57 null  <||@
  Comment 570 626 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 570 628 r11|DWORD = SUB (x: rbp|DWORD, ~y: rsi|DWORD) size: DWORD  <||@
  Comment 576 630 rcx|DWORD = ADD (x: r11|DWORD, y: rbx|DWORD) size: DWORD  <||@
  Comment 581 632 rcx|DWORD = ADD (x: rcx|DWORD, ~y: [rdi|QWORD[.] + r8|DWORD * 4 + 16]) size: DWORD  <||@
  Comment 586 634 rdx|DWORD = SUB (x: r14|DWORD, ~y: rsi|DWORD) size: DWORD  <||@
  Comment 591 636 CMP rcx|DWORD y: 64 size: DWORD  <||@
  Comment 594 638 BRANCH trueDestinationProbability: 0.9886664055615392 condition: < trueDestination: B57 -> B58 falseDestination: B57 -> B94  <||@
  Comment 600 block B58 null  <||@
  Comment 600 640 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 600 642 stack:48|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 604 644 rbx|DWORD = INC rdx|DWORD size: DWORD  <||@
  Comment 608 646 rbx|DWORD = ADD (x: rbx|DWORD, ~y: [rdi|QWORD[.] + rax|DWORD * 4 + 16]) size: DWORD  <||@
  Comment 612 648 CMP rbx|DWORD y: 64 size: DWORD  <||@
  Comment 615 650 BRANCH trueDestinationProbability: 0.9702874687399411 condition: < trueDestination: B58 -> B59 falseDestination: B58 -> B94  <||@
  Comment 621 block B59 null  <||@
  Comment 621 652 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 621 654 CMP rcx|DWORD y: 32 size: DWORD  <||@
  Comment 624 656 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B59 -> B60 falseDestination: B59 -> B61  <||@
  Comment 630 block B61 null  <||@
  Comment 630 674 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 630 676 CMP r13|DWORD y: 27 size: DWORD  <||@
  Comment 634 678 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B61 -> B62 falseDestination: B61 -> B91  <||@
  Comment 640 block B62 null  <||@
  Comment 640 680 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 640 682 stack:60|DWORD = MOVE rbp|DWORD moveKind: DWORD  <||@
  Comment 644 684 stack:64|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 648 686 rbx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 653 688 rcx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[long[27]{1, 5, 25, 125, 625, ...}]  <||@
  Comment 653 {Object[long[27]{1, 5, 25, 125, 625, ...}]}  <||@
  Comment 663 690 rdi|QWORD = MOV [rcx|QWORD[.] + r8|DWORD * 8 + 16] size: QWORD  <||@
  Comment 668 692 rax|QWORD = MOV [rcx|QWORD[.] + r13|DWORD * 8 + 16] size: QWORD  <||@
  Comment 673 694 rcx|QWORD = IMUL (x: r10|QWORD, y: rdi|QWORD) size: QWORD  <||@
  Comment 680 696 rsi|QWORD = MOVE rcx|QWORD moveKind: QWORD  <||@
  Comment 683 698 rcx|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 686 700 rsi|QWORD = SHL (x: rsi|QWORD, ~y: rcx|DWORD) size: QWORD  <||@
  Comment 689 702 rcx|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 691 704 r11|QWORD = SHL (x: rax|QWORD, ~y: rcx|DWORD) size: QWORD  <||@
  Comment 697 706 rax|QWORD = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 700 708 (highResult: rdx|QWORD, lowResult: rax|QWORD) = CDQ rax|QWORD size: QWORD  <||@
  Comment 702 710 (highResult: rdx|QWORD, lowResult: rax|QWORD) = IDIV (highX: rdx|QWORD, lowX: rax|QWORD, y: r11|QWORD) size: QWORD state [bci:278]  <||@
  Comment 702 [rbx:0]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:554) [bci: 278, duringCall: false, rethrow: false]
              |0             |1  |2          |3  |4  |5               |6  |7               |8  |9         |10              |11        |12         |13         |14              |15        |16  |17  |18  |19  |20  |21  |22  |23  |24  |25  |26  |27  |28  |29  |30  |31  |32 
     locals:  |rbx|QWORD[.]  |-  |r10|QWORD  |-  |-  |stack:44|DWORD  |-  |stack:48|DWORD  |-  |r9|DWORD  |stack:60|DWORD  |r8|DWORD  |r14|DWORD  |r13|DWORD  |stack:64|DWORD  |r8|DWORD  |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-    <||@
  Comment 702 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 705 712 rcx|DWORD[.] = MOV [rbx|QWORD[.] + 28] size: DWORD  <||@
  Comment 708 714 rsi|QWORD = SHL r11|QWORD y: 3 size: QWORD  <||@
  Comment 715 716 rbp|QWORD = SHL r11|QWORD size: QWORD  <||@
  Comment 721 718 rsi|QWORD = ADD (x: rsi|QWORD, y: rbp|QWORD) size: QWORD  <||@
  Comment 724 720 rbp|QWORD = SHL rdi|QWORD y: 3 size: QWORD  <||@
  Comment 731 722 rdi|QWORD = SHL rdi|QWORD size: QWORD  <||@
  Comment 734 724 rbp|QWORD = ADD (x: rbp|QWORD, y: rdi|QWORD) size: QWORD  <||@
  Comment 737 726 rdi|QWORD = SHL rdx|QWORD y: 3 size: QWORD  <||@
  Comment 744 728 rdx|QWORD = SHL rdx|QWORD size: QWORD  <||@
  Comment 747 730 rdi|QWORD = ADD (x: rdi|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 750 732 rdx|QWORD = ADD (x: rbp|QWORD, y: rdi|QWORD) size: QWORD  <||@
  Comment 756 734 rax|DWORD = MOV rax|QWORD size: DWORD  <||@
  Comment 758 736 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 760 738 BRANCH trueDestinationProbability: 0.10789017046034499 condition: = trueDestination: B62 -> B63 falseDestination: B62 -> B68  <||@
  Comment 766 block B68 null  <||@
  Comment 766 790 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 766 792 CMP [rcx|DWORD[.] * 8 + 12] y: 0 size: DWORD state [bci:278]  <||@
  Comment 766 [rcx:0, rbx:0]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:554) [bci: 278, duringCall: false, rethrow: false]
              |0             |1  |2          |3  |4  |5               |6  |7               |8  |9         |10              |11        |12         |13         |14              |15        |16  |17  |18  |19  |20  |21  |22  |23  |24  |25  |26  |27  |28  |29  |30  |31  |32 
     locals:  |rbx|QWORD[.]  |-  |r10|QWORD  |-  |-  |stack:44|DWORD  |-  |stack:48|DWORD  |-  |r9|DWORD  |stack:60|DWORD  |r8|DWORD  |r14|DWORD  |r13|DWORD  |stack:64|DWORD  |r8|DWORD  |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-    <||@
  Comment 766 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 774 794 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B68 -> B69 falseDestination: B68 -> B70  <||@
  Comment 780 block B70 null  <||@
  Comment 780 814 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 780 816 r10|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 785 818 rax|DWORD = LEA [rax|DWORD + 48] size: DWORD  <||@
  Comment 788 820 MOV (x: [rcx|DWORD[.] * 8 + 16], y: rax|DWORD) size: WORD  <||@
  Comment 796 822 TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 799 824 BRANCH trueDestinationProbability: 0.011534143105032153 condition: = trueDestination: B70 -> B71 falseDestination: B70 -> B72  <||@
  Comment 805 block B72 null  <||@
  Comment 805 836 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 805 838 rax|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 808 840 r10|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 814 842 JUMP ~[] destination: B72 -> B73  <||@
  Comment 814 block B73 null  <||@
  Comment 814 844 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 814 846 CMP (x: rbp|QWORD, y: rdi|QWORD) size: QWORD  <||@
  Comment 817 848 r8|DWORD = SETCC condition: >  <||@
  Comment 825 850 CMP (x: rdx|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 828 852 rdx|DWORD = SETCC condition: >  <||@
  Comment 834 854 CMP r9|DWORD y: -3 size: DWORD  <||@
  Comment 838 856 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B73 -> B74 falseDestination: B73 -> B75  <||@
  Comment 844 block B75 null  <||@
  Comment 844 866 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 844 868 CMP r9|DWORD y: 8 size: DWORD  <||@
  Comment 848 870 BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B75 -> B77 falseDestination: B75 -> B89  <||@
  Comment 854 block B77 null  <||@
  Comment 854 876 [] = LABEL numbPhis: 4 align: false label: ?  <||@
  Comment 854 878 TEST (x: rcx|DWORD[.], y: rcx|DWORD[.]) size: DWORD  <||@
  Comment 856 880 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B77 -> B78 falseDestination: B77 -> B79  <||@
  Comment 862 block B79 null  <||@
  Comment 862 892 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 862 894 r13|DWORD = MOV [rcx|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 870 896 rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@e9a9e99 encoding: base: 0 shift: 3  <||@
  Comment 874 898 r14|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 877 900 rbp|QWORD = MOVE rdi|QWORD moveKind: QWORD  <||@
  Comment 880 902 rdi|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 882 904 JUMP ~[] destination: B79 -> B80  <||@
  Comment 882 block B80 loop 0 depth 1 header:230|LoopBegin  <||@
  Comment 882 906 [] = LABEL numbPhis: 5 align: true label: ?  <||@
  Comment 896 908 TEST (x: r8|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 899 910 BRANCH trueDestinationProbability: 0.9044543048889694 condition: = trueDestination: B80 -> B81 falseDestination: B80 -> B88  <||@
  Comment 905 block B81 loop 0 depth 1 header:230|LoopBegin  <||@
  Comment 905 912 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 905 914 TEST (x: rdi|DWORD, y: rdi|DWORD) size: DWORD  <||@
  Comment 907 916 BRANCH trueDestinationProbability: 0.9603010975971522 condition: = trueDestination: B81 -> B82 falseDestination: B81 -> B87  <||@
  Comment 913 block B82 loop 0 depth 1 header:230|LoopBegin  <||@
  Comment 913 918 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 913 920 CMP (x: r13|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 916 922 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B82 -> B83 falseDestination: B82 -> B86  <||@
  Comment 922 block B83 loop 0 depth 1 header:230|LoopBegin  <||@
  Comment 922 924 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 922 926 rax|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 925 928 (highResult: rdx|QWORD, lowResult: rax|QWORD) = CDQ rax|QWORD size: QWORD  <||@
  Comment 927 930 (highResult: rdx|QWORD, lowResult: rax|QWORD) = IDIV (highX: rdx|QWORD, lowX: rax|QWORD, y: r11|QWORD) size: QWORD state [bci:914]  <||@
  Comment 927 [rcx:0, rbx:0]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:683) [bci: 914, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4  |5  |6  |7  |8  |9         |10  |11  |12  |13  |14  |15  |16  |17         |18          |19          |20  |21  |22  |23  |24  |25         |26  |27         |28  |29         |30  |31         |32 
     locals:  |rbx|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-  |r9|DWORD  |-   |-   |-   |-   |-   |-   |-   |r10|DWORD  |int[0|0x0]  |int[0|0x0]  |-   |-   |-   |-   |-   |rbp|QWORD  |-   |r11|QWORD  |-   |r14|QWORD  |-   |rsi|QWORD  |-    <||@
  Comment 927 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 930 932 r8|DWORD = MOV rax|QWORD size: DWORD  <||@
  Comment 933 934 rdi|DWORD = LEA [r8|DWORD + 48] size: DWORD  <||@
  Comment 937 936 MOV (x: [rcx|QWORD[.] + r10|DWORD * 2 + 16], y: rdi|DWORD) size: WORD  <||@
  Comment 943 938 rdi|QWORD = SHL rdx|QWORD y: 3 size: QWORD  <||@
  Comment 950 940 rdx|QWORD = SHL rdx|QWORD size: QWORD  <||@
  Comment 953 942 rdi|QWORD = ADD (x: rdi|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 956 944 r10|DWORD = INC r10|DWORD size: DWORD  <||@
  Comment 959 946 rdx|QWORD = SHL r14|QWORD y: 3 size: QWORD  <||@
  Comment 966 948 r14|QWORD = SHL r14|QWORD size: QWORD  <||@
  Comment 969 950 rdx|QWORD = ADD (x: rdx|QWORD, y: r14|QWORD) size: QWORD  <||@
  Comment 972 952 CMP rdx|QWORD y: 1 size: QWORD  <||@
  Comment 976 954 BRANCH trueDestinationProbability: 2.81873959865786E-4 condition: < trueDestination: B83 -> B84 falseDestination: B83 -> B85  <||@
  Comment 982 block B85 loop 0 depth 1 header:230|LoopBegin  <||@
  Comment 982 970 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 982 972 CMP (x: rdx|QWORD, y: rdi|QWORD) size: QWORD  <||@
  Comment 985 974 rax|DWORD = SETCC condition: >  <||@
  Comment 991 976 rbp|QWORD = ADD (x: rdx|QWORD, y: rdi|QWORD) size: QWORD  <||@
  Comment 997 978 CMP (x: rbp|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 1000 980 rbp|DWORD = SETCC condition: >  <||@
  Comment 1008 982 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:1039]  <||@
  Comment 1008 [rcx:0, rbx:0]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:700) [bci: 1039, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4  |5  |6  |7  |8  |9         |10  |11  |12  |13  |14  |15  |16  |17         |18         |19         |20  |21  |22        |23  |24  |25         |26  |27         |28  |29         |30  |31         |32 
     locals:  |rbx|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-  |r9|DWORD  |-   |-   |-   |-   |-   |-   |-   |r10|DWORD  |rax|DWORD  |rbp|DWORD  |-   |-   |r8|DWORD  |-   |-   |rdi|QWORD  |-   |r11|QWORD  |-   |rdx|QWORD  |-   |rsi|QWORD  |-    <||@
  Comment 1008 {infopoint: SAFEPOINT}  <||@
  Comment 1008 11  <||@
  Comment 1014 984 r14|QWORD = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 1017 986 r8|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 1020 988 stack:64|DWORD = MOVE rbp|DWORD moveKind: DWORD  <||@
  Comment 1024 990 rbp|QWORD = MOVE rdi|QWORD moveKind: QWORD  <||@
  Comment 1027 992 rdi|DWORD = MOVE stack:64|DWORD moveKind: DWORD  <||@
  Comment 1031 994 JUMP ~[] destination: B85 -> B80  <||@
  Comment 1036 block B84 loop 0 depth 1 header:230|LoopBegin  <||@
  Comment 1036 956 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1036 958 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:1039]  <||@
  Comment 1036 [rcx:0, rbx:0]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:700) [bci: 1039, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4  |5  |6  |7  |8  |9         |10  |11  |12  |13  |14  |15  |16  |17         |18          |19          |20  |21  |22        |23  |24  |25         |26  |27         |28  |29         |30  |31         |32 
     locals:  |rbx|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-  |r9|DWORD  |-   |-   |-   |-   |-   |-   |-   |r10|DWORD  |int[1|0x1]  |int[1|0x1]  |-   |-   |r8|DWORD  |-   |-   |rdi|QWORD  |-   |r11|QWORD  |-   |rdx|QWORD  |-   |rsi|QWORD  |-    <||@
  Comment 1036 {infopoint: SAFEPOINT}  <||@
  Comment 1036 11  <||@
  Comment 1042 960 r14|QWORD = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 1045 962 rbp|QWORD = MOVE rdi|QWORD moveKind: QWORD  <||@
  Comment 1048 964 rdi|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1053 966 r8|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1059 968 JUMP ~[] destination: B84 -> B80  <||@
  Comment 1064 block B88 null  <||@
  Comment 1064 1020 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1064 1022 rdx|QWORD = SHL rbp|QWORD size: QWORD  <||@
  Comment 1070 1024 rdx|QWORD = SUB (x: rdx|QWORD, ~y: rsi|QWORD) size: QWORD  <||@
  Comment 1073 1026 TEST (x: rbp|QWORD, y: rbp|QWORD) size: QWORD  <||@
  Comment 1076 1028 rsi|DWORD = SETCC condition: =  <||@
  Comment 1084 1030 r11|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 1087 1032 rsi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 1090 1034 JUMP ~[] destination: B88 -> B143  <||@
  Comment 1090 block B143 null  <||@
  Comment 1090 1770 [] = LABEL numbPhis: 6 align: false label: ?  <||@
  Comment 1090 1772 MOVB (x: [rsi|QWORD[.] + 25], y: r11|DWORD) size: BYTE  <||@
  Comment 1094 1774 r11|DWORD = INC r9|DWORD size: DWORD  <||@
  Comment 1100 1776 MOV (x: [rsi|QWORD[.] + 12], y: r11|DWORD) size: DWORD  <||@
  Comment 1104 1778 MOV (x: [rsi|QWORD[.] + 16], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 1108 1780 MOV (x: [rsi|QWORD[.] + 20], y: r10|DWORD) size: DWORD  <||@
  Comment 1112 1782 TEST (x: rdi|DWORD, y: rdi|DWORD) size: DWORD  <||@
  Comment 1114 1784 BRANCH trueDestinationProbability: 0.6216282371371225 condition: = trueDestination: B143 -> B144 falseDestination: B143 -> B145  <||@
  Comment 1120 block B144 null  <||@
  Comment 1120 1786 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1120 1788 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 1135 12  <||@
  Comment 1145 block B28 null  <||@
  Comment 1145 328 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1145 330 TEST (x: r9|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 1148 332 BRANCH trueDestinationProbability: 0.8090044605656586 condition: < trueDestination: B28 -> B30 falseDestination: B28 -> B33  <||@
  Comment 1159 block B49 null  <||@
  Comment 1159 564 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1159 566 rbp|DWORD = SUB (x: rbp|DWORD, ~y: r14|DWORD) size: DWORD  <||@
  Comment 1162 568 rsi|DWORD = SUB (x: rsi|DWORD, ~y: r14|DWORD) size: DWORD  <||@
  Comment 1165 570 CMP rbx|DWORD y: 1 size: DWORD  <||@
  Comment 1168 576 r14|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1174 572 BRANCH trueDestinationProbability: 0.3803485753451483 condition: = trueDestination: B49 -> B54 falseDestination: B49 -> B56  <||@
  Comment 1185 block B145 null  <||@
  Comment 1185 1790 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1185 1792 TEST (x: r8|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 1188 1794 BRANCH trueDestinationProbability: 0.7008668650536939 condition: = trueDestination: B145 -> B146 falseDestination: B145 -> B147  <||@
  Comment 1194 block B146 null  <||@
  Comment 1194 1796 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1194 1798 - = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<FloatingDecimal$BinaryToASCIIBuffer.roundup()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1505]  <||@
  Comment 1194 9  <||@
  Comment 1199 {HotSpotMethod<FloatingDecimal$BinaryToASCIIBuffer.roundup()>}  <||@
  Comment 1204 []at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:778) [bci: 1505, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5  |6  |7  |8  |9  |10  |11  |12  |13  |14  |15  |16  |17  |18  |19  |20  |21  |22  |23  |24  |25  |26  |27  |28  |29  |30  |31  |32 
     locals:  |-  |-  |-  |-  |-  |-  |-  |-  |-  |-  |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-    <||@
  Comment 1205 1800 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 1220 12  <||@
  Comment 1230 block B87 null  <||@
  Comment 1230 1004 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1230 1006 rdx|QWORD = SHL rbp|QWORD size: QWORD  <||@
  Comment 1236 1008 rdx|QWORD = SUB (x: rdx|QWORD, ~y: rsi|QWORD) size: QWORD  <||@
  Comment 1239 1010 TEST (x: rbp|QWORD, y: rbp|QWORD) size: QWORD  <||@
  Comment 1242 1012 rsi|DWORD = SETCC condition: =  <||@
  Comment 1250 1014 r11|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 1253 1016 rsi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 1256 1018 JUMP ~[] destination: B87 -> B143  <||@
  Comment 1261 block B46 null  <||@
  Comment 1261 526 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1261 528 r13|DWORD = ADD (x: rax|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 1267 530 r14|DWORD = INC r9|DWORD size: DWORD  <||@
  Comment 1273 532 stack:52|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 1277 534 rax|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 1280 536 r14|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 1283 538 r13|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 1286 540 JUMP ~[] destination: B46 -> B47  <||@
  Comment 1291 block B42 null  <||@
  Comment 1291 488 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1291 490 rsi|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1296 492 rsi|DWORD = SUB (x: rsi|DWORD, ~y: r9|DWORD) size: DWORD  <||@
  Comment 1299 494 rbp|DWORD = SUB (x: rax|DWORD, ~y: r9|DWORD) size: DWORD  <||@
  Comment 1304 496 stack:56|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 1308 498 rsi|DWORD = MOVE rbp|DWORD moveKind: DWORD  <||@
  Comment 1310 500 JUMP ~[] destination: B42 -> B43  <||@
  Comment 1315 block B54 null  <||@
  Comment 1315 602 [] = LABEL numbPhis: 3 align: false label: ?  <||@
  Comment 1315 604 rsi|DWORD = DEC rsi|DWORD size: DWORD  <||@
  Comment 1317 606 JUMP ~[] destination: B54 -> B56  <||@
  Comment 1322 block B147 null  <||@
  Comment 1322 1802 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1322 1804 TEST (x: rdx|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 1325 1806 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B147 -> B148 falseDestination: B147 -> B149  <||@
  Comment 1331 block B149 null  <||@
  Comment 1331 1818 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1331 1820 CMP rdx|QWORD y: 1 size: QWORD  <||@
  Comment 1335 1822 BRANCH trueDestinationProbability: 0.4072231833910034 condition: < trueDestination: B149 -> B150 falseDestination: B149 -> B151  <||@
  Comment 1341 block B151 null  <||@
  Comment 1341 1828 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1341 1830 - = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<FloatingDecimal$BinaryToASCIIBuffer.roundup()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1498]  <||@
  Comment 1341 9  <||@
  Comment 1343 {HotSpotMethod<FloatingDecimal$BinaryToASCIIBuffer.roundup()>}  <||@
  Comment 1348 []at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:775) [bci: 1498, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5  |6  |7  |8  |9  |10  |11  |12  |13  |14  |15  |16  |17  |18  |19  |20  |21  |22  |23  |24  |25  |26  |27  |28  |29  |30  |31  |32 
     locals:  |-  |-  |-  |-  |-  |-  |-  |-  |-  |-  |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-    <||@
  Comment 1349 1832 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 1364 12  <||@
  Comment 1374 block B22 null  <||@
  Comment 1374 258 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1374 260 CMP r9|DWORD y: 52 size: DWORD  <||@
  Comment 1378 262 BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B22 -> B23 falseDestination: B22 -> B26  <||@
  Comment 1384 block B23 null  <||@
  Comment 1384 264 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1384 266 TEST (x: rcx|QWORD, y: r13|QWORD) size: QWORD  <||@
  Comment 1387 268 BRANCH trueDestinationProbability: 0.007057615809059412 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B37  <||@
  Comment 1393 block B37 null  <||@
  Comment 1393 420 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1393 422 rcx|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 1396 424 rsi|QWORD = SHR (x: rbp|QWORD, ~y: rcx|DWORD) size: QWORD  <||@
  Comment 1402 426 TEST (x: rsi|QWORD, y: r13|QWORD) size: QWORD  <||@
  Comment 1405 428 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B39  <||@
  Comment 1411 block B39 null  <||@
  Comment 1411 446 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1411 448 rcx|QWORD = MOVE input: long[4503599627370496|0x10000000000000]  <||@
  Comment 1421 450 r13|QWORD = AND (x: r13|QWORD, y: rbp|QWORD) size: QWORD  <||@
  Comment 1424 452 r13|QWORD = OR (x: r13|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 1427 454 rcx|DWORD = MOVE input: int[1075|0x433]  <||@
  Comment 1432 456 rcx|DWORD = SUB (x: rcx|DWORD, ~y: r14|DWORD) size: DWORD  <||@
  Comment 1435 458 r13|QWORD = SHR (x: r13|QWORD, ~y: rcx|DWORD) size: QWORD  <||@
  Comment 1438 460 rcx|DWORD = MOV r13|QWORD size: DWORD  <||@
  Comment 1441 462 rsi|DWORD = MOVE input: int[-1|0xffffffffffffffff]  <||@
  Comment 1446 464 rsi|DWORD = SUB (x: rsi|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 1448 466 r9|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 1451 468 JUMP ~[] destination: B39 -> B40  <||@
  Comment 1456 block B63 null  <||@
  Comment 1456 740 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1456 742 rax|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 1460 744 CMP (x: rdx|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 1463 746 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B63 -> B64 falseDestination: B63 -> B65  <||@
  Comment 1469 block B65 null  <||@
  Comment 1469 766 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1469 768 r9|DWORD = DEC r9|DWORD size: DWORD  <||@
  Comment 1472 770 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 1474 776 r10|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1480 772 BRANCH trueDestinationProbability: 0.011534143105032153 condition: = trueDestination: B65 -> B66 falseDestination: B65 -> B73  <||@
  Comment 1491 block B33 null  <||@
  Comment 1491 374 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1491 376 CMP r9|DWORD y: 52 size: DWORD  <||@
  Comment 1495 378 BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B33 -> B34 falseDestination: B33 -> B157  <||@
  Comment 1501 block B34 null  <||@
  Comment 1501 380 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1501 382 TEST (x: rcx|QWORD, y: r13|QWORD) size: QWORD  <||@
  Comment 1504 384 BRANCH trueDestinationProbability: 0.007057615809059412 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B37  <||@
  Comment 1511 block B150 null  <||@
  Comment 1511 1824 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1511 1826 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 1526 12  <||@
  Comment 1536 block B94 null  <||@
  Comment 1536 1096 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1536 1084 stack:64|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 1541 1086 stack:72|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 1546 1088 stack:60|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 1550 1090 stack:76|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 1555 1092 stack:80|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 1560 1098 rsi|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 1563 1100 rbp|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 1565 1104 stack:84|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 1570 1106 stack:88|DWORD = MOVE rbp|DWORD moveKind: DWORD  <||@
  Comment 1574 1108 rax|QWORD[.] = CALL_DIRECT [rsi|DWORD, rdx|DWORD] [] callTarget: HotSpotMethod<FDBigInteger.valueOfPow52(int, int)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1074]  <||@
  Comment 1574 8  <||@
  Comment 1575 {HotSpotMethod<FDBigInteger.valueOfPow52(int, int)>}  <||@
  Comment 1580 [stack:104]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:710) [bci: 1074, duringCall: true, rethrow: false]
              |0                  |1  |2               |3  |4  |5               |6  |7  |8  |9               |10              |11              |12              |13              |14          |15              |16  |17  |18  |19  |20  |21  |22  |23  |24  |25  |26  |27  |28  |29  |30  |31  |32 
     locals:  |stack:40|QWORD[.]  |-  |stack:72|QWORD  |-  |-  |stack:44|DWORD  |-  |-  |-  |stack:80|DWORD  |stack:64|DWORD  |stack:76|DWORD  |stack:88|DWORD  |stack:84|DWORD  |int[0|0x0]  |stack:76|DWORD  |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-    <||@
  Comment 1581 1110 NULLCHECK [rax|QWORD[.]] state [bci:1077]  <||@
  Comment 1581 [rax:0, stack:104]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:710) [bci: 1077, duringCall: false, rethrow: false]
              |0                  |1  |2               |3  |4  |5               |6  |7  |8  |9               |10              |11              |12              |13              |14          |15              |16  |17  |18  |19  |20  |21  |22  |23  |24  |25  |26  |27  |28  |29  |30  |31  |32 
     locals:  |stack:40|QWORD[.]  |-  |stack:72|QWORD  |-  |-  |stack:44|DWORD  |-  |-  |-  |stack:80|DWORD  |stack:64|DWORD  |stack:76|DWORD  |stack:88|DWORD  |stack:84|DWORD  |int[0|0x0]  |stack:76|DWORD  |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-  
     stack:   |Object[null]       |   |                |   |   |                |   |   |   |                |                |                |                |                |            |                |    |    |    |    |    |    |    |    |    |    |    |    |    |    |    |    |     <||@
  Comment 1581 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1583 1112 rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1586 1114 stack:96|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1591 1116 rax|DWORD = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<FDBigInteger.getNormalizationBias()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1081]  <||@
  Comment 1591 {HotSpotMethod<FDBigInteger.getNormalizationBias()>}  <||@
  Comment 1591 9  <||@
  Comment 1596 [stack:48, stack:104]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:711) [bci: 1081, duringCall: true, rethrow: false]
              |0                  |1  |2               |3  |4  |5               |6  |7  |8  |9               |10              |11              |12              |13              |14          |15              |16  |17  |18  |19  |20  |21  |22  |23  |24  |25                 |26  |27  |28  |29  |30  |31  |32 
     locals:  |stack:40|QWORD[.]  |-  |stack:72|QWORD  |-  |-  |stack:44|DWORD  |-  |-  |-  |stack:80|DWORD  |stack:64|DWORD  |stack:76|DWORD  |stack:88|DWORD  |stack:84|DWORD  |int[0|0x0]  |stack:76|DWORD  |-   |-   |-   |-   |-   |-   |-   |-   |-   |stack:96|QWORD[.]  |-   |-   |-   |-   |-   |-   |-    <||@
  Comment 1597 1118 rsi|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD  <||@
  Comment 1602 1120 rdx|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 1604 1122 stack:100|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 1608 1124 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<FDBigInteger.leftShift(int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1090]  <||@
  Comment 1608 9  <||@
  Comment 1615 {HotSpotMethod<FDBigInteger.leftShift(int)>}  <||@
  Comment 1620 [stack:104]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:712) [bci: 1090, duringCall: true, rethrow: false]
              |0                  |1  |2               |3  |4  |5               |6  |7  |8  |9               |10              |11              |12              |13              |14          |15              |16  |17  |18  |19  |20  |21  |22  |23  |24  |25  |26               |27  |28  |29  |30  |31  |32 
     locals:  |stack:40|QWORD[.]  |-  |stack:72|QWORD  |-  |-  |stack:44|DWORD  |-  |-  |-  |stack:80|DWORD  |stack:64|DWORD  |stack:76|DWORD  |stack:88|DWORD  |stack:84|DWORD  |int[0|0x0]  |stack:76|DWORD  |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |stack:100|DWORD  |-   |-   |-   |-   |-   |-    <||@
  Comment 1621 1126 stack:96|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1626 1128 rcx|DWORD = ADD (x: stack:100|DWORD, y: stack:64|DWORD) size: DWORD  <||@
  Comment 1634 1130 rsi|QWORD = MOVE stack:72|QWORD moveKind: QWORD  <||@
  Comment 1639 1132 rdx|DWORD = MOVE stack:76|DWORD moveKind: DWORD  <||@
  Comment 1643 1134 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD, rdx|DWORD, rcx|DWORD] [] callTarget: HotSpotMethod<FDBigInteger.valueOfMulPow52(long, int, int)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1103]  <||@
  Comment 1643 8  <||@
  Comment 1647 {HotSpotMethod<FDBigInteger.valueOfMulPow52(long, int, int)>}  <||@
  Comment 1652 [stack:48, stack:104]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:714) [bci: 1103, duringCall: true, rethrow: false]
              |0                  |1  |2  |3  |4  |5               |6  |7  |8  |9               |10  |11  |12              |13              |14          |15              |16  |17  |18  |19  |20  |21  |22  |23  |24  |25                 |26               |27  |28  |29  |30  |31  |32 
     locals:  |stack:40|QWORD[.]  |-  |-  |-  |-  |stack:44|DWORD  |-  |-  |-  |stack:80|DWORD  |-   |-   |stack:88|DWORD  |stack:84|DWORD  |int[0|0x0]  |stack:76|DWORD  |-   |-   |-   |-   |-   |-   |-   |-   |-   |stack:96|QWORD[.]  |stack:100|DWORD  |-   |-   |-   |-   |-   |-    <||@
  Comment 1653 1136 stack:72|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1658 1138 NULLCHECK [rax|QWORD[.]] state [bci:1106]  <||@
  Comment 1658 [stack:48, stack:72, stack:104]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:714) [bci: 1106, duringCall: false, rethrow: false]
              |0                  |1  |2  |3  |4  |5               |6  |7  |8  |9               |10  |11  |12              |13              |14          |15              |16  |17  |18  |19  |20  |21  |22  |23  |24  |25                 |26               |27  |28  |29  |30  |31  |32 
     locals:  |stack:40|QWORD[.]  |-  |-  |-  |-  |stack:44|DWORD  |-  |-  |-  |stack:80|DWORD  |-   |-   |stack:88|DWORD  |stack:84|DWORD  |int[0|0x0]  |stack:76|DWORD  |-   |-   |-   |-   |-   |-   |-   |-   |-   |stack:96|QWORD[.]  |stack:100|DWORD  |-   |-   |-   |-   |-   |-  
     stack:   |Object[null]       |   |   |   |   |                |   |   |   |                |    |    |                |                |            |                |    |    |    |    |    |    |    |    |    |                   |                 |    |    |    |    |    |     <||@
  Comment 1658 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1660 1140 rdx|DWORD = INC stack:100|DWORD size: DWORD  <||@
  Comment 1666 1142 rsi|DWORD = MOVE stack:56|DWORD moveKind: DWORD  <||@
  Comment 1670 1144 rax|QWORD[.] = CALL_DIRECT [rsi|DWORD, rdx|DWORD] [] callTarget: HotSpotMethod<FDBigInteger.valueOfPow52(int, int)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1119]  <||@
  Comment 1670 8  <||@
  Comment 1671 {HotSpotMethod<FDBigInteger.valueOfPow52(int, int)>}  <||@
  Comment 1676 [stack:48, stack:72, stack:104]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:715) [bci: 1119, duringCall: true, rethrow: false]
              |0                  |1  |2  |3  |4  |5               |6  |7  |8  |9               |10  |11  |12              |13              |14  |15  |16  |17  |18  |19  |20  |21  |22  |23  |24  |25                 |26               |27                 |28  |29  |30  |31  |32 
     locals:  |stack:40|QWORD[.]  |-  |-  |-  |-  |stack:44|DWORD  |-  |-  |-  |stack:80|DWORD  |-   |-   |stack:88|DWORD  |stack:84|DWORD  |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |stack:96|QWORD[.]  |stack:100|DWORD  |stack:72|QWORD[.]  |-   |-   |-   |-   |-    <||@
  Comment 1677 1146 rdx|DWORD = ADD (x: stack:88|DWORD, y: stack:100|DWORD) size: DWORD  <||@
  Comment 1685 1148 rdx|DWORD = INC rdx|DWORD size: DWORD  <||@
  Comment 1687 1150 rsi|DWORD = MOVE stack:60|DWORD moveKind: DWORD  <||@
  Comment 1691 1152 stack:112|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1696 1154 rax|QWORD[.] = CALL_DIRECT [rsi|DWORD, rdx|DWORD] [] callTarget: HotSpotMethod<FDBigInteger.valueOfPow52(int, int)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1135]  <||@
  Comment 1696 8  <||@
  Comment 1703 {HotSpotMethod<FDBigInteger.valueOfPow52(int, int)>}  <||@
  Comment 1708 [stack:32, stack:48, stack:72, stack:104]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:717) [bci: 1135, duringCall: true, rethrow: false]
              |0                  |1  |2  |3  |4  |5               |6  |7  |8  |9               |10  |11  |12  |13  |14  |15  |16  |17  |18  |19  |20  |21  |22  |23  |24  |25                 |26  |27                 |28                  |29  |30  |31  |32 
     locals:  |stack:40|QWORD[.]  |-  |-  |-  |-  |stack:44|DWORD  |-  |-  |-  |stack:80|DWORD  |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |stack:96|QWORD[.]  |-   |stack:72|QWORD[.]  |stack:112|QWORD[.]  |-   |-   |-   |-    <||@
  Comment 1709 1156 stack:120|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1714 1158 NULLCHECK [rax|QWORD[.]] state [bci:1138]  <||@
  Comment 1714 [stack:24, stack:32, stack:48, stack:72, stack:104]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:717) [bci: 1138, duringCall: false, rethrow: false]
              |0                  |1  |2  |3  |4  |5               |6  |7  |8  |9               |10  |11  |12  |13  |14  |15  |16  |17  |18  |19  |20  |21  |22  |23  |24  |25                 |26  |27                 |28                  |29  |30  |31  |32 
     locals:  |stack:40|QWORD[.]  |-  |-  |-  |-  |stack:44|DWORD  |-  |-  |-  |stack:80|DWORD  |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |stack:96|QWORD[.]  |-   |stack:72|QWORD[.]  |stack:112|QWORD[.]  |-   |-   |-   |-  
     stack:   |Object[null]       |   |   |   |   |                |   |   |   |                |    |    |    |    |    |    |    |    |    |    |    |    |    |    |    |                   |    |                   |                    |    |    |    |     <||@
  Comment 1714 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1716 1160 rsi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 1721 1162 rdx|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD  <||@
  Comment 1726 1164 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<FDBigInteger.quoRemIteration(FDBigInteger)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1147]  <||@
  Comment 1726 9  <||@
  Comment 1727 {HotSpotMethod<FDBigInteger.quoRemIteration(FDBigInteger)>}  <||@
  Comment 1732 [stack:24, stack:32, stack:48, stack:72, stack:104]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:724) [bci: 1147, duringCall: true, rethrow: false]
              |0                  |1  |2  |3  |4  |5               |6  |7  |8  |9               |10  |11  |12  |13  |14  |15  |16  |17          |18  |19  |20  |21  |22  |23  |24  |25                 |26  |27                 |28                  |29                  |30  |31  |32 
     locals:  |stack:40|QWORD[.]  |-  |-  |-  |-  |stack:44|DWORD  |-  |-  |-  |stack:80|DWORD  |-   |-   |-   |-   |-   |-   |-   |int[0|0x0]  |-   |-   |-   |-   |-   |-   |-   |stack:96|QWORD[.]  |-   |stack:72|QWORD[.]  |stack:112|QWORD[.]  |stack:120|QWORD[.]  |-   |-   |-    <||@
  Comment 1733 1166 rsi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 1738 1168 rdx|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD  <||@
  Comment 1743 1170 stack:60|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 1747 1172 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<FDBigInteger.cmp(FDBigInteger)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1156]  <||@
  Comment 1747 9  <||@
  Comment 1751 {HotSpotMethod<FDBigInteger.cmp(FDBigInteger)>}  <||@
  Comment 1756 [stack:24, stack:32, stack:48, stack:72, stack:104]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:725) [bci: 1156, duringCall: true, rethrow: false]
              |0                  |1  |2  |3  |4  |5               |6  |7  |8  |9               |10  |11  |12  |13  |14  |15  |16  |17          |18  |19  |20  |21  |22              |23  |24  |25                 |26  |27                 |28                  |29                  |30  |31  |32 
     locals:  |stack:40|QWORD[.]  |-  |-  |-  |-  |stack:44|DWORD  |-  |-  |-  |stack:80|DWORD  |-   |-   |-   |-   |-   |-   |-   |int[0|0x0]  |-   |-   |-   |-   |stack:60|DWORD  |-   |-   |stack:96|QWORD[.]  |-   |stack:72|QWORD[.]  |stack:112|QWORD[.]  |stack:120|QWORD[.]  |-   |-   |-    <||@
  Comment 1757 1174 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 1759 1176 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B94 -> B95 falseDestination: B94 -> B96  <||@
  Comment 1765 block B96 null  <||@
  Comment 1765 1192 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1765 1194 rsi|QWORD[.] = MOVE stack:120|QWORD[.] moveKind: QWORD  <||@
  Comment 1770 1196 rdx|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 1775 1198 rcx|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD  <||@
  Comment 1780 1200 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] [] callTarget: HotSpotMethod<FDBigInteger.addAndCmp(FDBigInteger, FDBigInteger)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1175]  <||@
  Comment 1780 9  <||@
  Comment 1783 {HotSpotMethod<FDBigInteger.addAndCmp(FDBigInteger, FDBigInteger)>}  <||@
  Comment 1788 [stack:24, stack:32, stack:48, stack:72, stack:104]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:726) [bci: 1175, duringCall: true, rethrow: false]
              |0                  |1  |2  |3  |4  |5               |6  |7  |8  |9               |10  |11  |12  |13  |14  |15  |16  |17          |18          |19  |20  |21  |22              |23  |24  |25                 |26  |27                 |28                  |29                  |30  |31  |32 
     locals:  |stack:40|QWORD[.]  |-  |-  |-  |-  |stack:44|DWORD  |-  |-  |-  |stack:80|DWORD  |-   |-   |-   |-   |-   |-   |-   |int[0|0x0]  |int[0|0x0]  |-   |-   |-   |stack:60|DWORD  |-   |-   |stack:96|QWORD[.]  |-   |stack:72|QWORD[.]  |stack:112|QWORD[.]  |stack:120|QWORD[.]  |-   |-   |-    <||@
  Comment 1789 1202 CMP rax|DWORD y: 1 size: DWORD  <||@
  Comment 1792 1204 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B96 -> B97 falseDestination: B96 -> B98  <||@
  Comment 1798 block B98 null  <||@
  Comment 1798 1218 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1798 1220 r10|DWORD = MOVE stack:60|DWORD moveKind: DWORD  <||@
  Comment 1803 1222 TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 1806 1224 BRANCH trueDestinationProbability: 0.11184606133493691 condition: = trueDestination: B98 -> B99 falseDestination: B98 -> B100  <||@
  Comment 1812 block B100 null  <||@
  Comment 1812 1238 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1812 1240 rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1817 1242 rdx|DWORD[.] = MOV [rsi|QWORD[.] + 28] size: DWORD  <||@
  Comment 1820 1244 CMP [rdx|DWORD[.] * 8 + 12] y: 0 size: DWORD state [bci:1178]  <||@
  Comment 1820 [rdx:0, rsi:0, stack:24, stack:32, stack:48, stack:72, stack:104]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:726) [bci: 1178, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4  |5               |6  |7  |8  |9               |10  |11  |12  |13  |14  |15  |16  |17          |18          |19  |20  |21  |22         |23  |24  |25                 |26  |27                 |28                  |29                  |30  |31  |32 
     locals:  |rsi|QWORD[.]  |-  |-  |-  |-  |stack:44|DWORD  |-  |-  |-  |stack:80|DWORD  |-   |-   |-   |-   |-   |-   |-   |int[0|0x0]  |int[0|0x0]  |-   |-   |-   |r10|DWORD  |-   |-   |stack:96|QWORD[.]  |-   |stack:72|QWORD[.]  |stack:112|QWORD[.]  |stack:120|QWORD[.]  |-   |-   |-  
     stack:   |rax|DWORD     |   |   |   |   |                |   |   |   |                |    |    |    |    |    |    |    |            |            |    |    |    |           |    |    |                   |    |                   |                    |                    |    |    |     <||@
  Comment 1820 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1828 1246 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B100 -> B101 falseDestination: B100 -> B103  <||@
  Comment 1834 block B103 null  <||@
  Comment 1834 1266 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1834 1268 r10|DWORD = LEA [r10|DWORD + 48] size: DWORD  <||@
  Comment 1838 1270 MOV (x: [rdx|DWORD[.] * 8 + 16], y: r10|DWORD) size: WORD  <||@
  Comment 1847 1272 r11|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1853 1274 r10|DWORD = MOVE stack:80|DWORD moveKind: DWORD  <||@
  Comment 1858 1278 JUMP ~[] destination: B103 -> B104  <||@
  Comment 1858 block B104 null  <||@
  Comment 1858 1280 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 1858 1234 rax|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 1862 1282 stack:60|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1867 1284 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 1869 1286 BRANCH trueDestinationProbability: 0.057125676488274206 condition: = trueDestination: B104 -> B110 falseDestination: B104 -> B106  <||@
  Comment 1875 block B106 null  <||@
  Comment 1875 1292 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1875 1294 CMP r10|DWORD y: -3 size: DWORD  <||@
  Comment 1879 1296 BRANCH trueDestinationProbability: 0.25 condition: < trueDestination: B106 -> B110 falseDestination: B106 -> B108  <||@
  Comment 1885 block B108 null  <||@
  Comment 1885 1302 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1885 1304 CMP r10|DWORD y: 8 size: DWORD  <||@
  Comment 1889 1306 BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B108 -> B110 falseDestination: B108 -> B152  <||@
  Comment 1895 block B110 null  <||@
  Comment 1895 1312 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1895 1314 rcx|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD  <||@
  Comment 1900 1316 r9|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1906 1318 r8|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1912 1320 stack:100|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 1917 1326 JUMP ~[] destination: B110 -> B111  <||@
  Comment 1917 block B111 loop 1 depth 1 header:388|LoopBegin  <||@
  Comment 1917 1328 [] = LABEL numbPhis: 4 align: true label: ?  <||@
  Comment 1920 1322 rax|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 1925 1324 r10|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD  <||@
  Comment 1930 1330 TEST (x: r8|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 1933 1332 BRANCH trueDestinationProbability: 0.9453314326443336 condition: = trueDestination: B111 -> B112 falseDestination: B111 -> B135  <||@
  Comment 1939 block B112 loop 1 depth 1 header:388|LoopBegin  <||@
  Comment 1939 1334 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1939 1336 TEST (x: r9|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 1942 1338 BRANCH trueDestinationProbability: 0.9951368468672246 condition: = trueDestination: B112 -> B113 falseDestination: B112 -> B135  <||@
  Comment 1948 block B113 loop 1 depth 1 header:388|LoopBegin  <||@
  Comment 1948 1340 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1948 1342 NULLCHECK [rcx|QWORD[.]] state [bci:1268]  <||@
  Comment 1948 [rax:0, rcx:0, r10:0, stack:24, stack:48, stack:72, stack:104]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:744) [bci: 1268, duringCall: false, rethrow: false]
              |0                  |1  |2  |3  |4  |5  |6  |7  |8  |9               |10  |11  |12  |13  |14  |15  |16  |17               |18          |19          |20  |21  |22  |23  |24  |25            |26  |27            |28            |29                  |30  |31  |32 
     locals:  |stack:40|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-  |stack:60|DWORD  |-   |-   |-   |-   |-   |-   |-   |stack:100|DWORD  |int[0|0x0]  |int[0|0x0]  |-   |-   |-   |-   |-   |r10|QWORD[.]  |-   |rax|QWORD[.]  |Object[null]  |stack:120|QWORD[.]  |-   |-   |-    <||@
  Comment 1948 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1950 1344 rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1953 1346 rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1956 1348 stack:128|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 1961 1350 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<FDBigInteger.quoRemIteration(FDBigInteger)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1282]  <||@
  Comment 1961 9  <||@
  Comment 1967 {HotSpotMethod<FDBigInteger.quoRemIteration(FDBigInteger)>}  <||@
  Comment 1972 [stack:16, stack:24, stack:48, stack:72, stack:104]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:745) [bci: 1282, duringCall: true, rethrow: false]
              |0                  |1  |2  |3  |4  |5  |6  |7  |8  |9               |10  |11  |12  |13  |14  |15  |16  |17               |18  |19  |20  |21  |22  |23  |24  |25                 |26  |27                 |28                  |29                  |30  |31  |32 
     locals:  |stack:40|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-  |stack:60|DWORD  |-   |-   |-   |-   |-   |-   |-   |stack:100|DWORD  |-   |-   |-   |-   |-   |-   |-   |stack:96|QWORD[.]  |-   |stack:72|QWORD[.]  |stack:128|QWORD[.]  |stack:120|QWORD[.]  |-   |-   |-    <||@
  Comment 1973 1352 stack:88|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 1977 1354 rsi|QWORD[.] = MOVE stack:128|QWORD[.] moveKind: QWORD  <||@
  Comment 1982 1356 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<FDBigInteger.multBy10()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1312]  <||@
  Comment 1982 9  <||@
  Comment 1983 {HotSpotMethod<FDBigInteger.multBy10()>}  <||@
  Comment 1988 [stack:24, stack:48, stack:72, stack:104]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:747) [bci: 1312, duringCall: true, rethrow: false]
              |0                  |1  |2  |3  |4  |5  |6  |7  |8  |9               |10  |11  |12  |13  |14  |15  |16  |17               |18  |19  |20  |21  |22              |23  |24  |25                 |26  |27                 |28  |29                  |30  |31  |32 
     locals:  |stack:40|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-  |stack:60|DWORD  |-   |-   |-   |-   |-   |-   |-   |stack:100|DWORD  |-   |-   |-   |-   |stack:88|DWORD  |-   |-   |stack:96|QWORD[.]  |-   |stack:72|QWORD[.]  |-   |stack:120|QWORD[.]  |-   |-   |-    <||@
  Comment 1989 1358 rsi|DWORD = MOV [rax|QWORD[.] + 12] size: DWORD state [bci:1315]  <||@
  Comment 1989 [rax:0, stack:24, stack:48, stack:72, stack:104]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:747) [bci: 1315, duringCall: false, rethrow: false]
              |0                  |1  |2  |3  |4  |5  |6  |7  |8  |9               |10  |11  |12  |13  |14  |15  |16  |17               |18  |19  |20  |21  |22              |23  |24  |25                 |26  |27                 |28  |29                  |30  |31  |32 
     locals:  |stack:40|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-  |stack:60|DWORD  |-   |-   |-   |-   |-   |-   |-   |stack:100|DWORD  |-   |-   |-   |-   |stack:88|DWORD  |-   |-   |stack:96|QWORD[.]  |-   |stack:72|QWORD[.]  |-   |stack:120|QWORD[.]  |-   |-   |-  
     stack:   |rax|QWORD[.]       |   |   |   |   |   |   |   |   |                |    |    |    |    |    |    |    |                 |    |    |    |    |                |    |    |                   |    |                   |    |                    |    |    |     <||@
  Comment 1989 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1992 1360 rdx|DWORD = MOV [rax|QWORD[.] + 16] size: DWORD  <||@
  Comment 1995 1362 r10|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 2000 1364 rcx|DWORD = MOV [r10|QWORD[.] + 16] size: DWORD  <||@
  Comment 2004 1366 rsi|DWORD = ADD (x: rsi|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 2006 1368 r11|DWORD = ADD (x: rcx|DWORD, ~y: [r10|QWORD[.] + 12]) size: DWORD  <||@
  Comment 2013 1370 r8|DWORD = MOVE stack:88|DWORD moveKind: DWORD  <||@
  Comment 2018 1372 r9|DWORD = LEA [r8|DWORD + 48] size: DWORD  <||@
  Comment 2022 1374 stack:56|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 2027 1376 rbx|DWORD = INC stack:100|DWORD size: DWORD  <||@
  Comment 2033 1378 CMP (x: r11|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 2036 1380 BRANCH trueDestinationProbability: 0.2175262580341747 condition: > trueDestination: B113 -> B114 falseDestination: B113 -> B117  <||@
  Comment 2042 block B117 loop 1 depth 1 header:388|LoopBegin  <||@
  Comment 2042 1442 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2042 1444 CMP (x: rsi|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 2045 1446 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B117 -> B118 falseDestination: B117 -> B119  <||@
  Comment 2051 block B119 loop 1 depth 1 header:388|LoopBegin  <||@
  Comment 2051 1460 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2051 1462 CMP rcx|DWORD y: 1 size: DWORD  <||@
  Comment 2054 1464 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B119 -> B120 falseDestination: B119 -> B121  <||@
  Comment 2060 block B121 loop 1 depth 1 header:388|LoopBegin  <||@
  Comment 2060 1478 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2060 1480 CMP rdx|DWORD y: 1 size: DWORD  <||@
  Comment 2063 1482 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B121 -> B122 falseDestination: B121 -> B123  <||@
  Comment 2069 block B123 loop 1 depth 1 header:388|LoopBegin  <||@
  Comment 2069 1496 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2069 1498 rsi|DWORD[.] = MOV [r10|QWORD[.] + 24] size: DWORD  <||@
  Comment 2073 1500 rcx|DWORD = DEC rcx|DWORD size: DWORD  <||@
  Comment 2075 1502 CMP (x: rcx|DWORD, y: [rsi|DWORD[.] * 8 + 12]) size: DWORD state [bci:1315]  <||@
  Comment 2075 [rax:0, rsi:0, r10:0, stack:24, stack:48, stack:72, stack:104]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:747) [bci: 1315, duringCall: false, rethrow: false]
              |0                  |1  |2  |3  |4  |5  |6  |7  |8  |9               |10  |11  |12  |13  |14  |15  |16  |17               |18  |19  |20  |21  |22        |23  |24  |25                 |26  |27            |28  |29                  |30  |31  |32 
     locals:  |stack:40|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-  |stack:60|DWORD  |-   |-   |-   |-   |-   |-   |-   |stack:100|DWORD  |-   |-   |-   |-   |r8|DWORD  |-   |-   |stack:96|QWORD[.]  |-   |r10|QWORD[.]  |-   |stack:120|QWORD[.]  |-   |-   |-  
     stack:   |rax|QWORD[.]       |   |   |   |   |   |   |   |   |                |    |    |    |    |    |    |    |                 |    |    |    |    |          |    |    |                   |    |              |    |                    |    |    |     <||@
  Comment 2075 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 2082 1504 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B123 -> B124 falseDestination: B123 -> B131  <||@
  Comment 2088 block B124 loop 1 depth 1 header:388|LoopBegin  <||@
  Comment 2088 1506 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2088 1508 r11|DWORD[.] = MOV [rax|QWORD[.] + 24] size: DWORD  <||@
  Comment 2092 1510 rdx|DWORD = DEC rdx|DWORD size: DWORD  <||@
  Comment 2094 1512 CMP (x: rdx|DWORD, y: [r11|DWORD[.] * 8 + 12]) size: DWORD state [bci:1315]  <||@
  Comment 2094 [rax:0, rsi:0, r10:0, r11:0, stack:24, stack:48, stack:72, stack:104]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:747) [bci: 1315, duringCall: false, rethrow: false]
              |0                  |1  |2  |3  |4  |5  |6  |7  |8  |9               |10  |11  |12  |13  |14  |15  |16  |17               |18  |19  |20  |21  |22        |23  |24  |25                 |26  |27            |28  |29                  |30  |31  |32 
     locals:  |stack:40|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-  |stack:60|DWORD  |-   |-   |-   |-   |-   |-   |-   |stack:100|DWORD  |-   |-   |-   |-   |r8|DWORD  |-   |-   |stack:96|QWORD[.]  |-   |r10|QWORD[.]  |-   |stack:120|QWORD[.]  |-   |-   |-  
     stack:   |rax|QWORD[.]       |   |   |   |   |   |   |   |   |                |    |    |    |    |    |    |    |                 |    |    |    |    |          |    |    |                   |    |              |    |                    |    |    |     <||@
  Comment 2094 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 2102 1514 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B124 -> B125 falseDestination: B124 -> B130  <||@
  Comment 2108 block B125 loop 1 depth 1 header:388|LoopBegin  <||@
  Comment 2108 1516 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2108 1518 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@e9a9e99 encoding: base: 0 shift: 3  <||@
  Comment 2112 1520 rsi|DWORD = MOV [rsi|QWORD[.] + rcx|DWORD * 4 + 16] size: DWORD  <||@
  Comment 2116 1522 r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@e9a9e99 encoding: base: 0 shift: 3  <||@
  Comment 2120 1524 rdx|DWORD = MOV [r11|QWORD[.] + rdx|DWORD * 4 + 16] size: DWORD  <||@
  Comment 2125 1526 CMP (x: rdx|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 2127 1528 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B125 -> B126 falseDestination: B125 -> B127  <||@
  Comment 2133 block B127 loop 1 depth 1 header:388|LoopBegin  <||@
  Comment 2133 1542 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2133 1544 stack:64|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 2137 1546 CMP (x: rdx|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 2139 1548 rbp|DWORD = SETCC condition: |>|  <||@
  Comment 2147 1550 rsi|QWORD[.] = MOVE stack:120|QWORD[.] moveKind: QWORD  <||@
  Comment 2152 1552 rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 2155 1554 rcx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 2158 1556 stack:128|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 2163 1558 stack:132|DWORD = MOVE rbp|DWORD moveKind: DWORD  <||@
  Comment 2167 1560 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] [] callTarget: HotSpotMethod<FDBigInteger.addAndCmp(FDBigInteger, FDBigInteger)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1340]  <||@
  Comment 2167 {HotSpotMethod<FDBigInteger.addAndCmp(FDBigInteger, FDBigInteger)>}  <||@
  Comment 2167 9  <||@
  Comment 2172 [stack:16, stack:24, stack:48, stack:72, stack:104]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:749) [bci: 1340, duringCall: true, rethrow: false]
              |0                  |1  |2  |3  |4  |5  |6  |7  |8  |9               |10  |11  |12  |13  |14  |15  |16  |17               |18               |19  |20  |21  |22              |23  |24  |25                 |26  |27                 |28                  |29                  |30  |31  |32 
     locals:  |stack:40|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-  |stack:60|DWORD  |-   |-   |-   |-   |-   |-   |-   |stack:100|DWORD  |stack:132|DWORD  |-   |-   |-   |stack:88|DWORD  |-   |-   |stack:96|QWORD[.]  |-   |stack:72|QWORD[.]  |stack:128|QWORD[.]  |stack:120|QWORD[.]  |-   |-   |-    <||@
  Comment 2173 1562 rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 2178 1564 rdx|DWORD[.] = MOV [rsi|QWORD[.] + 28] size: DWORD  <||@
  Comment 2181 1566 r10|DWORD = MOVE stack:100|DWORD moveKind: DWORD  <||@
  Comment 2186 1568 CMP (x: r10|DWORD, y: [rdx|DWORD[.] * 8 + 12]) size: DWORD state [bci:1343]  <||@
  Comment 2186 [rdx:0, rsi:0, stack:16, stack:24, stack:48, stack:72, stack:104]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:749) [bci: 1343, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4  |5  |6  |7  |8  |9               |10  |11  |12  |13  |14  |15  |16  |17         |18               |19  |20  |21  |22              |23  |24  |25                 |26  |27                 |28                  |29                  |30  |31  |32 
     locals:  |rsi|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-  |stack:60|DWORD  |-   |-   |-   |-   |-   |-   |-   |r10|DWORD  |stack:132|DWORD  |-   |-   |-   |stack:88|DWORD  |-   |-   |stack:96|QWORD[.]  |-   |stack:72|QWORD[.]  |stack:128|QWORD[.]  |stack:120|QWORD[.]  |-   |-   |-  
     stack:   |rax|DWORD     |   |   |   |   |   |   |   |   |                |    |    |    |    |    |    |    |           |                 |    |    |    |                |    |    |                   |    |                   |                    |                    |    |    |     <||@
  Comment 2186 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 2194 1570 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B127 -> B128 falseDestination: B127 -> B129  <||@
  Comment 2200 block B128 loop 1 depth 1 header:388|LoopBegin  <||@
  Comment 2200 1572 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2200 1574 r9|DWORD = MOVE stack:56|DWORD moveKind: DWORD  <||@
  Comment 2205 1576 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@e9a9e99 encoding: base: 0 shift: 3  <||@
  Comment 2209 1578 MOV (x: [rdx|QWORD[.] + r10|DWORD * 2 + 16], y: r9|DWORD) size: WORD  <||@
  Comment 2215 1580 CMP rax|DWORD y: 1 size: DWORD  <||@
  Comment 2218 1582 r9|DWORD = SETCC condition: <  <||@
  Comment 2226 1584 rcx|QWORD[.] = MOVE stack:128|QWORD[.] moveKind: QWORD  <||@
  Comment 2231 1586 r8|DWORD = MOVE stack:132|DWORD moveKind: DWORD  <||@
  Comment 2236 1588 stack:100|DWORD = STACKMOVE (input: stack:64|DWORD, ~backupSlot: stack:32|QWORD) scratch: rax  <||@
  Comment 2254 1594 JUMP ~[] destination: B128 -> B111  <||@
  Comment 2259 block B114 loop 1 depth 1 header:388|LoopBegin  <||@
  Comment 2259 1382 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2259 1384 stack:64|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 2263 1386 stack:128|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 2268 1388 rsi|QWORD[.] = MOVE stack:120|QWORD[.] moveKind: QWORD  <||@
  Comment 2273 1390 rdx|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 2278 1392 rcx|QWORD[.] = MOVE stack:128|QWORD[.] moveKind: QWORD  <||@
  Comment 2283 1394 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.]] [] callTarget: HotSpotMethod<FDBigInteger.addAndCmp(FDBigInteger, FDBigInteger)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1340]  <||@
  Comment 2283 9  <||@
  Comment 2287 {HotSpotMethod<FDBigInteger.addAndCmp(FDBigInteger, FDBigInteger)>}  <||@
  Comment 2292 [stack:16, stack:24, stack:48, stack:72, stack:104]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:749) [bci: 1340, duringCall: true, rethrow: false]
              |0                  |1  |2  |3  |4  |5  |6  |7  |8  |9               |10  |11  |12  |13  |14  |15  |16  |17               |18          |19  |20  |21  |22              |23  |24  |25                 |26  |27                 |28                  |29                  |30  |31  |32 
     locals:  |stack:40|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-  |stack:60|DWORD  |-   |-   |-   |-   |-   |-   |-   |stack:100|DWORD  |int[0|0x0]  |-   |-   |-   |stack:88|DWORD  |-   |-   |stack:96|QWORD[.]  |-   |stack:72|QWORD[.]  |stack:128|QWORD[.]  |stack:120|QWORD[.]  |-   |-   |-    <||@
  Comment 2293 1396 rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 2298 1398 rdx|DWORD[.] = MOV [rsi|QWORD[.] + 28] size: DWORD  <||@
  Comment 2301 1400 r10|DWORD = MOVE stack:100|DWORD moveKind: DWORD  <||@
  Comment 2306 1402 CMP (x: r10|DWORD, y: [rdx|DWORD[.] * 8 + 12]) size: DWORD state [bci:1343]  <||@
  Comment 2306 [rdx:0, rsi:0, stack:16, stack:24, stack:48, stack:72, stack:104]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:749) [bci: 1343, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4  |5  |6  |7  |8  |9               |10  |11  |12  |13  |14  |15  |16  |17         |18          |19  |20  |21  |22              |23  |24  |25                 |26  |27                 |28                  |29                  |30  |31  |32 
     locals:  |rsi|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-  |stack:60|DWORD  |-   |-   |-   |-   |-   |-   |-   |r10|DWORD  |int[0|0x0]  |-   |-   |-   |stack:88|DWORD  |-   |-   |stack:96|QWORD[.]  |-   |stack:72|QWORD[.]  |stack:128|QWORD[.]  |stack:120|QWORD[.]  |-   |-   |-  
     stack:   |rax|DWORD     |   |   |   |   |   |   |   |   |                |    |    |    |    |    |    |    |           |            |    |    |    |                |    |    |                   |    |                   |                    |                    |    |    |     <||@
  Comment 2306 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 2314 1404 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B114 -> B115 falseDestination: B114 -> B116  <||@
  Comment 2320 block B115 loop 1 depth 1 header:388|LoopBegin  <||@
  Comment 2320 1406 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2320 1408 rbx|DWORD = MOVE stack:64|DWORD moveKind: DWORD  <||@
  Comment 2324 1410 r9|DWORD = MOVE stack:56|DWORD moveKind: DWORD  <||@
  Comment 2329 1412 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@e9a9e99 encoding: base: 0 shift: 3  <||@
  Comment 2333 1414 MOV (x: [rdx|QWORD[.] + r10|DWORD * 2 + 16], y: r9|DWORD) size: WORD  <||@
  Comment 2339 1416 CMP rax|DWORD y: 1 size: DWORD  <||@
  Comment 2342 1418 r9|DWORD = SETCC condition: <  <||@
  Comment 2350 1420 rcx|QWORD[.] = MOVE stack:128|QWORD[.] moveKind: QWORD  <||@
  Comment 2355 1422 r8|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 2361 1424 stack:100|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 2365 1430 JUMP ~[] destination: B115 -> B111  <||@
  Comment 2370 block B135 null  <||@
  Comment 2370 1656 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2370 1650 r10|DWORD = MOVE stack:100|DWORD moveKind: DWORD  <||@
  Comment 2375 1652 rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 2380 1658 TEST (x: r9|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 2383 1660 BRANCH trueDestinationProbability: 0.04269392663860493 condition: = trueDestination: B135 -> B136 falseDestination: B135 -> B137  <||@
  Comment 2389 block B137 null  <||@
  Comment 2389 1674 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2389 1676 TEST (x: r8|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 2392 1678 BRANCH trueDestinationProbability: 0.08103015075376885 condition: = trueDestination: B137 -> B138 falseDestination: B137 -> B139  <||@
  Comment 2398 block B139 null  <||@
  Comment 2398 1692 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2398 1694 stack:88|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 2403 1696 stack:132|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 2408 1698 rsi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 2413 1700 rdx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 2418 1702 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<FDBigInteger.leftShift(int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1385]  <||@
  Comment 2418 9  <||@
  Comment 2423 {HotSpotMethod<FDBigInteger.leftShift(int)>}  <||@
  Comment 2428 [stack:24, stack:104]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:753) [bci: 1385, duringCall: true, rethrow: false]
              |0                  |1  |2  |3  |4  |5  |6  |7  |8  |9               |10  |11  |12  |13  |14  |15  |16  |17               |18               |19              |20  |21  |22  |23  |24  |25  |26  |27  |28  |29                  |30  |31  |32 
     locals:  |stack:40|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-  |stack:60|DWORD  |-   |-   |-   |-   |-   |-   |-   |stack:100|DWORD  |stack:132|DWORD  |stack:88|DWORD  |-   |-   |-   |-   |-   |-   |-   |-   |-   |stack:120|QWORD[.]  |-   |-   |-    <||@
  Comment 2429 1704 NULLCHECK [rax|QWORD[.]] state [bci:1388]  <||@
  Comment 2429 [rax:0, stack:24, stack:104]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:753) [bci: 1388, duringCall: false, rethrow: false]
              |0                  |1  |2  |3  |4  |5  |6  |7  |8  |9               |10  |11  |12  |13  |14  |15  |16  |17               |18               |19              |20  |21  |22  |23  |24  |25  |26  |27  |28  |29                  |30  |31  |32 
     locals:  |stack:40|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-  |stack:60|DWORD  |-   |-   |-   |-   |-   |-   |-   |stack:100|DWORD  |stack:132|DWORD  |stack:88|DWORD  |-   |-   |-   |-   |-   |-   |-   |-   |-   |stack:120|QWORD[.]  |-   |-   |-  
     stack:   |Object[null]       |   |   |   |   |   |   |   |   |                |    |    |    |    |    |    |    |                 |                 |                |    |    |    |    |    |    |    |    |    |                    |    |    |     <||@
  Comment 2429 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 2431 1706 rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 2434 1708 rdx|QWORD[.] = MOVE stack:120|QWORD[.] moveKind: QWORD  <||@
  Comment 2439 1710 stack:144|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 2443 1712 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<FDBigInteger.cmp(FDBigInteger)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1394]  <||@
  Comment 2443 9  <||@
  Comment 2447 {HotSpotMethod<FDBigInteger.cmp(FDBigInteger)>}  <||@
  Comment 2452 [stack:0, stack:104]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:754) [bci: 1394, duringCall: true, rethrow: false]
              |0                  |1  |2  |3  |4  |5  |6  |7  |8  |9               |10  |11  |12  |13  |14  |15  |16  |17               |18               |19              |20  |21  |22  |23  |24  |25  |26  |27                  |28  |29  |30  |31  |32 
     locals:  |stack:40|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-  |stack:60|DWORD  |-   |-   |-   |-   |-   |-   |-   |stack:100|DWORD  |stack:132|DWORD  |stack:88|DWORD  |-   |-   |-   |-   |-   |-   |-   |stack:144|QWORD[.]  |-   |-   |-   |-   |-    <||@
  Comment 2453 1714 rsi|QWORD = MOVSXD rax|DWORD size: QWORD  <||@
  Comment 2456 1716 rax|QWORD[.] = MOVE stack:144|QWORD[.] moveKind: QWORD  <||@
  Comment 2460 1718 stack:128|QWORD = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 2465 1720 JUMP ~[] destination: B139 -> B140  <||@
  Comment 2465 block B140 null  <||@
  Comment 2465 1722 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 2465 1724 rdx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[FDBigInteger@241972498]  <||@
  Comment 2465 {Object[FDBigInteger@241972498]}  <||@
  Comment 2475 1726 rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 2478 1728 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<FDBigInteger.cmp(FDBigInteger)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:1412]  <||@
  Comment 2478 9  <||@
  Comment 2479 {HotSpotMethod<FDBigInteger.cmp(FDBigInteger)>}  <||@
  Comment 2484 [stack:104]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:758) [bci: 1412, duringCall: true, rethrow: false]
              |0                  |1  |2  |3  |4  |5  |6  |7  |8  |9               |10  |11  |12  |13  |14  |15  |16  |17               |18               |19              |20               |21  |22  |23  |24  |25  |26  |27  |28  |29  |30  |31  |32 
     locals:  |stack:40|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-  |stack:60|DWORD  |-   |-   |-   |-   |-   |-   |-   |stack:100|DWORD  |stack:132|DWORD  |stack:88|DWORD  |stack:128|QWORD  |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-  
     stack:   |stack:40|QWORD[.]  |   |   |   |   |   |   |   |   |                |    |    |    |    |    |    |    |                 |                 |                |                 |    |    |    |    |    |    |    |    |    |    |    |     <||@
  Comment 2485 1730 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 2487 1732 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B140 -> B141 falseDestination: B140 -> B142  <||@
  Comment 2493 block B142 null  <||@
  Comment 2493 1752 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2493 1754 r11|DWORD = MOVE input: byte[0|0x0]  <||@
  Comment 2499 1756 rdx|QWORD = MOVE stack:128|QWORD moveKind: QWORD  <||@
  Comment 2504 1758 rdi|DWORD = MOVE stack:88|DWORD moveKind: DWORD  <||@
  Comment 2508 1760 r8|DWORD = MOVE stack:132|DWORD moveKind: DWORD  <||@
  Comment 2513 1762 r10|DWORD = MOVE stack:100|DWORD moveKind: DWORD  <||@
  Comment 2518 1764 r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD  <||@
  Comment 2523 1766 rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 2528 1768 JUMP ~[] destination: B142 -> B143  <||@
  Comment 2533 block B71 null  <||@
  Comment 2533 826 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2533 828 r10|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 2539 830 rdx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 2544 832 r8|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 2550 834 JUMP ~[] destination: B71 -> B77  <||@
  Comment 2555 block B7 null  <||@
  Comment 2555 74 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2555 76 stack:48|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 2559 78 rsi|DWORD = SUB (x: rdx|DWORD, ~y: r8|DWORD) size: DWORD  <||@
  Comment 2564 80 rsi|DWORD = DEC rsi|DWORD size: DWORD  <||@
  Comment 2566 82 CMP rsi|DWORD y: 2 size: DWORD  <||@
  Comment 2569 84 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B9  <||@
  Comment 2575 block B9 null  <||@
  Comment 2575 94 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2575 96 rcx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:sun.misc.FloatingDecimal$BinaryToASCIIBuffer]  <||@
  Comment 2575 {Object[Class:sun.misc.FloatingDecimal$BinaryToASCIIBuffer]}  <||@
  Comment 2585 98 rcx|DWORD[.] = MOV [rcx|QWORD[.] + 104] size: DWORD  <||@
  Comment 2588 100 rbx|DWORD = MOV [rcx|DWORD[.] * 8 + 12] size: DWORD state [bci:67]  <||@
  Comment 2588 [rcx:0, stack:104]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:443) [bci: 67, duringCall: false, rethrow: false]
              |0                  |1          |2          |3  |4         |5               |6          |7               |8  |9  |10  |11  |12  |13  |14  |15  |16  |17  |18  |19  |20  |21  |22  |23  |24  |25  |26  |27  |28  |29  |30  |31  |32 
     locals:  |stack:40|QWORD[.]  |rdx|DWORD  |r10|QWORD  |-  |r8|DWORD  |stack:44|DWORD  |r11|DWORD  |stack:48|DWORD  |-  |-  |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-    <||@
  Comment 2588 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 2595 102 CMP (x: rbx|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 2597 104 BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B9 -> B10 falseDestination: B9 -> B13  <||@
  Comment 2603 block B13 null  <||@
  Comment 2603 136 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2603 138 r8|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 2609 140 rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 2614 142 JUMP ~[] destination: B13 -> B15  <||@
  Comment 2619 block B99 null  <||@
  Comment 2619 1226 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2619 1228 rsi|DWORD = DEC stack:80|DWORD size: DWORD  <||@
  Comment 2625 1230 r11|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 2631 1232 r10|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 2634 1236 JUMP ~[] destination: B99 -> B104  <||@
  Comment 2639 block B138 null  <||@
  Comment 2639 1680 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2639 1682 rax|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 2644 1684 stack:128|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 2653 1686 stack:88|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 2658 1688 stack:132|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 2663 1690 JUMP ~[] destination: B138 -> B140  <||@
  Comment 2668 block B8 null  <||@
  Comment 2668 86 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2668 88 r8|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 2674 90 rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 2679 92 JUMP ~[] destination: B8 -> B15  <||@
  Comment 2684 block B136 null  <||@
  Comment 2684 1662 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2684 1664 rax|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 2689 1666 stack:128|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 2698 1668 stack:88|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 2703 1670 stack:132|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 2708 1672 JUMP ~[] destination: B136 -> B140  <||@
  Comment 2713 block B10 null  <||@
  Comment 2713 106 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2713 108 rax|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 2717 110 r13|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 2722 112 CMP (x: rbx|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 2724 114 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B10 -> B11 falseDestination: B10 -> B12  <||@
  Comment 2730 block B11 null  <||@
  Comment 2730 116 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2730 118 rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@e9a9e99 encoding: base: 0 shift: 3  <||@
  Comment 2734 120 r8|DWORD = MOV [rcx|QWORD[.] + rsi|DWORD * 4 + 16] size: DWORD  <||@
  Comment 2739 122 rsi|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 2742 124 JUMP ~[] destination: B11 -> B15  <||@
  Comment 2747 block B66 null  <||@
  Comment 2747 774 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2747 778 rdx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 2752 780 r8|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 2758 782 JUMP ~[] destination: B66 -> B77  <||@
  Comment 2763 block B24 null  <||@
  Comment 2763 270 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2763 272 stack:52|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 2767 274 stack:48|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 2771 276 rax|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 2775 278 rbx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 2780 280 rcx|QWORD = MOVE input: long[4503599627370496|0x10000000000000]  <||@
  Comment 2790 282 r13|QWORD = AND (x: r13|QWORD, y: rbp|QWORD) size: QWORD  <||@
  Comment 2793 284 r13|QWORD = OR (x: r13|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 2796 286 rcx|DWORD = MOVE input: int[1075|0x433]  <||@
  Comment 2801 288 rcx|DWORD = SUB (x: rcx|DWORD, ~y: r14|DWORD) size: DWORD  <||@
  Comment 2804 290 r13|QWORD = SHR (x: r13|QWORD, ~y: rcx|DWORD) size: QWORD  <||@
  Comment 2807 292 r9|DWORD = MOV r13|QWORD size: DWORD  <||@
  Comment 2810 294 rax|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 2814 296 rbx|DWORD = MOVE stack:48|DWORD moveKind: DWORD  <||@
  Comment 2818 298 JUMP ~[] destination: B24 -> B40  <||@
  Comment 2823 block B35 null  <||@
  Comment 2823 386 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2823 388 stack:52|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 2827 390 stack:48|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 2831 392 rax|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 2835 394 rbx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 2840 396 rcx|QWORD = MOVE input: long[4503599627370496|0x10000000000000]  <||@
  Comment 2850 398 r13|QWORD = AND (x: r13|QWORD, y: rbp|QWORD) size: QWORD  <||@
  Comment 2853 400 r13|QWORD = OR (x: r13|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 2856 402 rcx|DWORD = MOVE input: int[1075|0x433]  <||@
  Comment 2861 404 rcx|DWORD = SUB (x: rcx|DWORD, ~y: r14|DWORD) size: DWORD  <||@
  Comment 2864 406 r13|QWORD = SHR (x: r13|QWORD, ~y: rcx|DWORD) size: QWORD  <||@
  Comment 2867 408 r9|DWORD = MOV r13|QWORD size: DWORD  <||@
  Comment 2870 410 rax|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 2874 412 rbx|DWORD = MOVE stack:48|DWORD moveKind: DWORD  <||@
  Comment 2878 414 JUMP ~[] destination: B35 -> B40  <||@
  Comment 2883 block B101 null  <||@
  Comment 2883 1248 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2883 1250 r11|DWORD = MOVE input: int[-291867|0xfffffffffffb8be5]  <||@
  Comment 2889 1252 rcx|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 2893 1254 rbx|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 2896 1256 JUMP ~[] destination: B101 -> B102  <||@
  Comment 2896 block B102 null  <||@
  Comment 2896 1258 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2896 1260 MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD  <||@
  Comment 2903 1262 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2910 1264 DEOPT info [bci:1178]  <||@
  Comment 2910 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 2915 [rbx:0, stack:24, stack:32, stack:48, stack:72]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:726) [bci: 1178, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4  |5          |6  |7  |8  |9               |10  |11  |12  |13  |14  |15  |16  |17          |18          |19  |20  |21  |22         |23  |24  |25                 |26  |27                 |28                  |29                  |30  |31  |32 
     locals:  |rbx|QWORD[.]  |-  |-  |-  |-  |rcx|DWORD  |-  |-  |-  |stack:80|DWORD  |-   |-   |-   |-   |-   |-   |-   |int[0|0x0]  |int[0|0x0]  |-   |-   |-   |r10|DWORD  |-   |-   |stack:96|QWORD[.]  |-   |stack:72|QWORD[.]  |stack:112|QWORD[.]  |stack:120|QWORD[.]  |-   |-   |-  
     stack:   |rax|DWORD     |   |   |   |   |           |   |   |   |                |    |    |    |    |    |    |    |            |            |    |    |    |           |    |    |                   |    |                   |                    |                    |    |    |     <||@
  Comment 2916 block B69 null  <||@
  Comment 2916 796 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2916 798 rbp|DWORD = MOVE stack:60|DWORD moveKind: DWORD  <||@
  Comment 2920 800 rsi|DWORD = MOVE stack:64|DWORD moveKind: DWORD  <||@
  Comment 2924 802 r11|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 2927 804 rdi|DWORD = MOVE stack:48|DWORD moveKind: DWORD  <||@
  Comment 2931 806 rcx|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 2935 808 r8|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 2938 810 r10|DWORD = MOVE input: int[-290587|0xfffffffffffb90e5]  <||@
  Comment 2944 812 JUMP ~[] destination: B69 -> B154  <||@
  Comment 2944 block B154 null  <||@
  Comment 2944 1870 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2944 1872 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 2951 1874 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2958 1876 DEOPT info [bci:278]  <||@
  Comment 2958 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 2963 [rbx:0]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:554) [bci: 278, duringCall: false, rethrow: false]
              |0             |1  |2         |3  |4  |5          |6  |7          |8  |9         |10         |11         |12         |13         |14         |15         |16  |17  |18  |19  |20  |21  |22  |23  |24  |25  |26  |27  |28  |29  |30  |31  |32 
     locals:  |rbx|QWORD[.]  |-  |r8|QWORD  |-  |-  |rcx|DWORD  |-  |rdi|DWORD  |-  |r9|DWORD  |rbp|DWORD  |r11|DWORD  |r14|DWORD  |r13|DWORD  |rsi|DWORD  |r11|DWORD  |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-    <||@
  Comment 2964 block B12 null  <||@
  Comment 2964 126 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2964 128 r9|DWORD = MOVE input: int[-226843|0xfffffffffffc89e5]  <||@
  Comment 2970 130 rcx|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 2972 132 rbx|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 2975 134 JUMP ~[] destination: B12 -> B158  <||@
  Comment 2975 block B158 null  <||@
  Comment 2975 1928 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2975 1930 MOV (x: [r15|QWORD + 668], y: r9|DWORD) size: DWORD  <||@
  Comment 2982 1932 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2989 1934 DEOPT info [bci:67]  <||@
  Comment 2989 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 2994 [rbx:0]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:443) [bci: 67, duringCall: false, rethrow: false]
              |0             |1          |2          |3  |4         |5          |6          |7               |8  |9  |10  |11  |12  |13  |14  |15  |16  |17  |18  |19  |20  |21  |22  |23  |24  |25  |26  |27  |28  |29  |30  |31  |32 
     locals:  |rbx|QWORD[.]  |rdx|DWORD  |r10|QWORD  |-  |r8|DWORD  |rcx|DWORD  |r11|DWORD  |stack:48|DWORD  |-  |-  |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-    <||@
  Comment 2995 block B129 null  <||@
  Comment 2995 1596 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2995 1598 rbp|DWORD = MOVE stack:132|DWORD moveKind: DWORD  <||@
  Comment 2999 1600 rbx|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 3002 1602 MOV [r15|QWORD + 668] y: -274971 size: DWORD  <||@
  Comment 3013 1604 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 3020 1606 DEOPT info [bci:1343]  <||@
  Comment 3020 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 3025 [rbx:0, stack:16, stack:24, stack:48, stack:72]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:749) [bci: 1343, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4  |5  |6  |7  |8  |9               |10  |11  |12  |13  |14  |15  |16  |17               |18         |19  |20  |21  |22              |23  |24  |25                 |26  |27                 |28                  |29                  |30  |31  |32 
     locals:  |rbx|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-  |stack:60|DWORD  |-   |-   |-   |-   |-   |-   |-   |stack:100|DWORD  |rbp|DWORD  |-   |-   |-   |stack:88|DWORD  |-   |-   |stack:96|QWORD[.]  |-   |stack:72|QWORD[.]  |stack:128|QWORD[.]  |stack:120|QWORD[.]  |-   |-   |-  
     stack:   |rax|DWORD     |   |   |   |   |   |   |   |   |                |    |    |    |    |    |    |    |                 |           |    |    |    |                |    |    |                   |    |                   |                    |                    |    |    |     <||@
  Comment 3026 block B31 null  <||@
  Comment 3026 346 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3026 348 stack:52|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 3030 350 stack:48|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 3034 352 rcx|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 3038 354 rbx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 3043 356 MOV [r15|QWORD + 668] y: -288275 size: DWORD  <||@
  Comment 3054 358 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 3061 360 DEOPT info [bci:174]  <||@
  Comment 3061 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 3066 [rbx:0]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 174, duringCall: false, rethrow: false]
              |0             |1          |2          |3  |4         |5          |6          |7               |8               |9  |10  |11  |12  |13  |14  |15  |16  |17  |18  |19  |20  |21  |22  |23  |24  |25  |26  |27  |28  |29  |30  |31  |32 
     locals:  |rbx|QWORD[.]  |rdx|DWORD  |r10|QWORD  |-  |r8|DWORD  |rcx|DWORD  |r11|DWORD  |stack:48|DWORD  |stack:52|DWORD  |-  |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-    <||@
  Comment 3067 block B74 null  <||@
  Comment 3067 858 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3067 860 rcx|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 3069 862 rax|DWORD = MOVE input: int[-249363|0xfffffffffffc31ed]  <||@
  Comment 3074 864 JUMP ~[] destination: B74 -> B90  <||@
  Comment 3074 block B90 null  <||@
  Comment 3074 1044 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 3074 1046 MOV (x: [r15|QWORD + 668], y: rax|DWORD) size: DWORD  <||@
  Comment 3081 1048 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 3088 1050 DEOPT info [bci:889]  <||@
  Comment 3088 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 3093 [rbx:0]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:680) [bci: 889, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4  |5          |6  |7  |8  |9         |10  |11  |12  |13  |14  |15  |16  |17         |18        |19         |20  |21  |22  |23  |24  |25         |26  |27         |28  |29         |30  |31         |32 
     locals:  |rbx|QWORD[.]  |-  |-  |-  |-  |rcx|DWORD  |-  |-  |-  |r9|DWORD  |-   |-   |-   |-   |-   |-   |-   |r10|DWORD  |r8|DWORD  |rdx|DWORD  |-   |-   |-   |-   |-   |rdi|QWORD  |-   |r11|QWORD  |-   |rbp|QWORD  |-   |rsi|QWORD  |-    <||@
  Comment 3094 block B152 null  <||@
  Comment 3094 1834 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3094 1836 r9|QWORD[.] = MOVE stack:120|QWORD[.] moveKind: QWORD  <||@
  Comment 3099 1838 rdi|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD  <||@
  Comment 3104 1840 r8|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD  <||@
  Comment 3109 1842 rcx|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 3111 1844 rbx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 3116 1846 rax|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 3121 1848 MOV [r15|QWORD + 668] y: -279571 size: DWORD  <||@
  Comment 3132 1850 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 3139 1852 DEOPT info [bci:1243]  <||@
  Comment 3139 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 3144 [rax:0, rbx:0, rdi:0, r8:0, r9:0]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:741) [bci: 1243, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4  |5          |6  |7  |8  |9          |10  |11  |12  |13  |14  |15  |16  |17         |18          |19          |20  |21  |22  |23  |24  |25           |26  |27            |28            |29           |30  |31  |32 
     locals:  |rbx|QWORD[.]  |-  |-  |-  |-  |rcx|DWORD  |-  |-  |-  |r10|DWORD  |-   |-   |-   |-   |-   |-   |-   |r11|DWORD  |int[0|0x0]  |int[0|0x0]  |-   |-   |-   |-   |-   |r8|QWORD[.]  |-   |rax|QWORD[.]  |rdi|QWORD[.]  |r9|QWORD[.]  |-   |-   |-    <||@
  Comment 3145 block B2 null  <||@
  Comment 3145 22 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3145 24 r11|DWORD = MOVE input: int[-303123|0xfffffffffffb5fed]  <||@
  Comment 3151 30 JUMP ~[] destination: B2 -> B160  <||@
  Comment 3151 block B160 null  <||@
  Comment 3151 1946 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 3151 26 rcx|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 3154 28 rbx|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 3157 1948 MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD  <||@
  Comment 3164 1950 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 3171 1952 DEOPT info [bci:0]  <||@
  Comment 3171 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 3176 [rbx:0]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:426) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2          |3  |4         |5          |6  |7  |8  |9  |10  |11  |12  |13  |14  |15  |16  |17  |18  |19  |20  |21  |22  |23  |24  |25  |26  |27  |28  |29  |30  |31  |32 
     locals:  |rbx|QWORD[.]  |rdx|DWORD  |r10|QWORD  |-  |r8|DWORD  |rcx|DWORD  |-  |-  |-  |-  |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-    <||@
  Comment 3177 block B89 null  <||@
  Comment 3177 1036 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3177 1038 rcx|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 3179 1040 rax|DWORD = MOVE input: int[-249619|0xfffffffffffc30ed]  <||@
  Comment 3184 1042 JUMP ~[] destination: B89 -> B90  <||@
  Comment 3186 block B153 null  <||@
  Comment 3186 1854 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3186 1856 r11|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 3189 1858 rdi|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 3191 1860 rcx|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 3195 1862 rbx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 3200 1864 r8|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 3203 1866 r10|DWORD = MOVE input: int[-229139|0xfffffffffffc80ed]  <||@
  Comment 3209 1868 JUMP ~[] destination: B153 -> B154  <||@
  Comment 3214 block B126 null  <||@
  Comment 3214 1530 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3214 1532 r11|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 3217 1534 rax|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 3220 1536 rbx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 3225 1538 r10|DWORD = MOVE input: int[-272403|0xfffffffffffbd7ed]  <||@
  Comment 3231 1540 JUMP ~[] destination: B126 -> B132  <||@
  Comment 3231 block B132 null  <||@
  Comment 3231 1632 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 3231 1634 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 3238 1636 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 3245 1638 DEOPT info [bci:1315]  <||@
  Comment 3245 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 3250 [rbx:0, r11:0, stack:24, stack:48, stack:72]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:747) [bci: 1315, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4  |5  |6  |7  |8  |9               |10  |11  |12  |13  |14  |15  |16  |17               |18  |19  |20  |21  |22         |23  |24  |25                 |26  |27                 |28  |29                  |30  |31  |32 
     locals:  |rbx|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-  |stack:60|DWORD  |-   |-   |-   |-   |-   |-   |-   |stack:100|DWORD  |-   |-   |-   |-   |rax|DWORD  |-   |-   |stack:96|QWORD[.]  |-   |stack:72|QWORD[.]  |-   |stack:120|QWORD[.]  |-   |-   |-  
     stack:   |r11|QWORD[.]  |   |   |   |   |   |   |   |   |                |    |    |    |    |    |    |    |                 |    |    |    |    |           |    |    |                   |    |                   |    |                    |    |    |     <||@
  Comment 3251 block B95 null  <||@
  Comment 3251 1178 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3251 1180 r10|DWORD = MOVE stack:60|DWORD moveKind: DWORD  <||@
  Comment 3256 1182 rcx|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 3260 1184 rbx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 3265 1186 MOV [r15|QWORD + 668] y: -253203 size: DWORD  <||@
  Comment 3276 1188 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 3283 1190 DEOPT info [bci:1159]  <||@
  Comment 3283 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 3288 [rbx:0, stack:24, stack:32, stack:48, stack:72]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:725) [bci: 1159, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4  |5          |6  |7  |8  |9               |10  |11  |12  |13  |14  |15  |16  |17          |18  |19  |20  |21  |22         |23  |24  |25                 |26  |27                 |28                  |29                  |30  |31  |32 
     locals:  |rbx|QWORD[.]  |-  |-  |-  |-  |rcx|DWORD  |-  |-  |-  |stack:80|DWORD  |-   |-   |-   |-   |-   |-   |-   |int[0|0x0]  |-   |-   |-   |-   |r10|DWORD  |-   |-   |stack:96|QWORD[.]  |-   |stack:72|QWORD[.]  |stack:112|QWORD[.]  |stack:120|QWORD[.]  |-   |-   |-  
     stack:   |rax|DWORD     |   |   |   |   |           |   |   |   |                |    |    |    |    |    |    |    |            |    |    |    |    |           |    |    |                   |    |                   |                    |                    |    |    |     <||@
  Comment 3289 block B118 null  <||@
  Comment 3289 1448 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3289 1450 r11|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 3292 1452 rax|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 3295 1454 rbx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 3300 1456 r10|DWORD = MOVE input: int[-263187|0xfffffffffffbfbed]  <||@
  Comment 3306 1458 JUMP ~[] destination: B118 -> B132  <||@
  Comment 3308 block B155 null  <||@
  Comment 3308 1878 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3308 1880 stack:84|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 3313 1882 stack:76|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 3317 1884 stack:80|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 3322 1886 stack:48|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 3326 1888 rax|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 3330 1890 rbx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 3335 1892 MOV [r15|QWORD + 668] y: -231195 size: DWORD  <||@
  Comment 3346 1894 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 3353 1896 DEOPT info [bci:10, 202]  <||@
  Comment 3353 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 3358 [rbx:0]at java.lang.Math.max(Math.java:1252) [bci: 10, duringCall: false, rethrow: false]
              |0               |1 
     locals:  |-               |- 
     stack:   |stack:84|DWORD  |  
  at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:523) [bci: 202, duringCall: true, rethrow: false]
              |0             |1          |2          |3  |4         |5          |6          |7               |8               |9               |10         |11              |12  |13  |14  |15  |16  |17  |18  |19  |20  |21  |22  |23  |24  |25  |26  |27  |28  |29  |30  |31  |32 
     locals:  |rbx|QWORD[.]  |rdx|DWORD  |r10|QWORD  |-  |r8|DWORD  |rax|DWORD  |r11|DWORD  |stack:48|DWORD  |stack:52|DWORD  |stack:80|DWORD  |rsi|DWORD  |stack:76|DWORD  |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-    <||@
  Comment 3359 block B38 null  <||@
  Comment 3359 430 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3359 432 stack:52|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 3363 434 stack:48|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 3367 436 rcx|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 3371 438 rbx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 3376 440 MOV [r15|QWORD + 668] y: -288531 size: DWORD  <||@
  Comment 3387 442 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 3394 444 DEOPT info [bci:174]  <||@
  Comment 3394 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 3399 [rbx:0]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:515) [bci: 174, duringCall: false, rethrow: false]
              |0             |1          |2          |3  |4         |5          |6          |7               |8               |9  |10  |11  |12  |13  |14  |15  |16  |17  |18  |19  |20  |21  |22  |23  |24  |25  |26  |27  |28  |29  |30  |31  |32 
     locals:  |rbx|QWORD[.]  |rdx|DWORD  |r10|QWORD  |-  |r8|DWORD  |rcx|DWORD  |r11|DWORD  |stack:48|DWORD  |stack:52|DWORD  |-  |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-    <||@
  Comment 3400 block B148 null  <||@
  Comment 3400 1808 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3400 1810 rbx|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 3403 1812 MOV [r15|QWORD + 668] y: -285203 size: DWORD  <||@
  Comment 3414 1814 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 3421 1816 DEOPT info [bci:1445]  <||@
  Comment 3421 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 3426 [rbx:0]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:766) [bci: 1445, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4  |5  |6  |7  |8  |9         |10  |11  |12  |13  |14  |15  |16  |17         |18        |19         |20           |21  |22  |23  |24  |25  |26  |27  |28  |29  |30  |31  |32 
     locals:  |rbx|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-  |r9|DWORD  |-   |-   |-   |-   |-   |-   |-   |r10|DWORD  |r8|DWORD  |rdi|DWORD  |long[0|0x0]  |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-    <||@
  Comment 3427 block B130 null  <||@
  Comment 3427 1608 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3427 1610 r11|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 3430 1612 rax|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 3433 1614 rbx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 3438 1616 r10|DWORD = MOVE input: int[-270619|0xfffffffffffbdee5]  <||@
  Comment 3444 1618 JUMP ~[] destination: B130 -> B132  <||@
  Comment 3449 block B156 null  <||@
  Comment 3449 1898 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3449 1900 stack:76|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 3453 1902 stack:80|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 3458 1904 stack:48|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 3462 1906 rcx|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 3466 1908 rbx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 3471 1910 MOV [r15|QWORD + 668] y: -229395 size: DWORD  <||@
  Comment 3482 1912 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 3489 1914 DEOPT info [bci:10, 185]  <||@
  Comment 3489 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 3494 [rbx:0]at java.lang.Math.max(Math.java:1252) [bci: 10, duringCall: false, rethrow: false]
              |0               |1 
     locals:  |-               |- 
     stack:   |stack:76|DWORD  |  
  at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:520) [bci: 185, duringCall: true, rethrow: false]
              |0             |1          |2          |3  |4         |5          |6          |7               |8          |9               |10  |11  |12  |13  |14  |15  |16  |17  |18  |19  |20  |21  |22  |23  |24  |25  |26  |27  |28  |29  |30  |31  |32 
     locals:  |rbx|QWORD[.]  |rdx|DWORD  |r10|QWORD  |-  |r8|DWORD  |rcx|DWORD  |r11|DWORD  |stack:48|DWORD  |rax|DWORD  |stack:80|DWORD  |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-    <||@
  Comment 3495 block B27 null  <||@
  Comment 3495 316 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3495 318 r9|DWORD = MOVE input: int[-287507|0xfffffffffffb9ced]  <||@
  Comment 3501 320 stack:48|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 3505 322 rcx|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 3509 324 rbx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 3514 326 JUMP ~[] destination: B27 -> B158  <||@
  Comment 3519 block B91 null  <||@
  Comment 3519 1052 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3519 1054 r11|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 3522 1056 rdi|DWORD = MOVE stack:48|DWORD moveKind: DWORD  <||@
  Comment 3526 1058 rcx|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 3530 1060 rbx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 3535 1062 r8|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 3538 1064 r10|DWORD = MOVE input: int[-235035|0xfffffffffffc69e5]  <||@
  Comment 3544 1066 JUMP ~[] destination: B91 -> B154  <||@
  Comment 3549 block B141 null  <||@
  Comment 3549 1734 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3549 1736 r10|QWORD = MOVE stack:128|QWORD moveKind: QWORD  <||@
  Comment 3554 1738 r9|DWORD = MOVE stack:88|DWORD moveKind: DWORD  <||@
  Comment 3559 1740 r8|DWORD = MOVE stack:132|DWORD moveKind: DWORD  <||@
  Comment 3564 1742 r11|DWORD = MOVE stack:100|DWORD moveKind: DWORD  <||@
  Comment 3569 1744 rbx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 3574 1746 MOV [r15|QWORD + 668] y: -303891 size: DWORD  <||@
  Comment 3585 1748 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 3592 1750 DEOPT info [bci:1415]  <||@
  Comment 3592 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 3597 [rbx:0]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:758) [bci: 1415, duringCall: false, rethrow: false]
              |0             |1           |2  |3  |4  |5  |6  |7  |8  |9               |10  |11  |12  |13  |14  |15  |16  |17         |18        |19        |20         |21  |22  |23  |24  |25  |26  |27  |28  |29  |30  |31  |32 
     locals:  |rbx|QWORD[.]  |-           |-  |-  |-  |-  |-  |-  |-  |stack:60|DWORD  |-   |-   |-   |-   |-   |-   |-   |r11|DWORD  |r8|DWORD  |r9|DWORD  |r10|QWORD  |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-   |-  
     stack:   |rbx|QWORD[.]  |int[0|0x0]  |   |   |   |   |   |   |   |                |    |    |    |    |    |    |    |           |          |          |           |    |    |    |    |    |    |    |    |    |    |    |     <||@
  Comment 3598 block B159 null  <||@
  Comment 3598 1936 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3598 1938 r11|DWORD = MOVE input: int[-302867|0xfffffffffffb60ed]  <||@
  Comment 3604 1944 JUMP ~[] destination: B159 -> B160  <||@
  Comment 3609 block B116 null  <||@
  Comment 3609 1432 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3609 1434 rbx|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 3612 1436 MOV [r15|QWORD + 668] y: -261147 size: DWORD  <||@
  Comment 3623 1438 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 3630 1440 DEOPT info [bci:1343]  <||@
  Comment 3630 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 3635 [rbx:0, stack:16, stack:24, stack:48, stack:72]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:749) [bci: 1343, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4  |5  |6  |7  |8  |9               |10  |11  |12  |13  |14  |15  |16  |17               |18          |19  |20  |21  |22              |23  |24  |25                 |26  |27                 |28                  |29                  |30  |31  |32 
     locals:  |rbx|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-  |stack:60|DWORD  |-   |-   |-   |-   |-   |-   |-   |stack:100|DWORD  |int[0|0x0]  |-   |-   |-   |stack:88|DWORD  |-   |-   |stack:96|QWORD[.]  |-   |stack:72|QWORD[.]  |stack:128|QWORD[.]  |stack:120|QWORD[.]  |-   |-   |-  
     stack:   |rax|DWORD     |   |   |   |   |   |   |   |   |                |    |    |    |    |    |    |    |                 |            |    |    |    |                |    |    |                   |    |                   |                    |                    |    |    |     <||@
  Comment 3636 block B97 null  <||@
  Comment 3636 1206 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3636 1208 r11|DWORD = MOVE input: int[-254483|0xfffffffffffc1ded]  <||@
  Comment 3642 1210 r10|DWORD = MOVE stack:60|DWORD moveKind: DWORD  <||@
  Comment 3647 1212 rcx|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 3651 1214 rbx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 3656 1216 JUMP ~[] destination: B97 -> B102  <||@
  Comment 3661 block B60 null  <||@
  Comment 3661 658 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3661 660 r11|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 3664 662 rdi|DWORD = MOVE stack:48|DWORD moveKind: DWORD  <||@
  Comment 3668 664 rcx|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 3672 666 rbx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 3677 668 r8|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 3680 670 r10|DWORD = MOVE input: int[-233491|0xfffffffffffc6fed]  <||@
  Comment 3686 672 JUMP ~[] destination: B60 -> B154  <||@
  Comment 3691 block B86 null  <||@
  Comment 3691 996 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3691 998 MOV [r15|QWORD + 668] y: -304923 size: DWORD  <||@
  Comment 3702 1000 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 3709 1002 DEOPT info [bci:914]  <||@
  Comment 3709 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 3714 [rbx:0]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:683) [bci: 914, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4  |5  |6  |7  |8  |9         |10  |11  |12  |13  |14  |15  |16  |17         |18          |19          |20  |21  |22  |23  |24  |25         |26  |27         |28  |29         |30  |31         |32 
     locals:  |rbx|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-  |r9|DWORD  |-   |-   |-   |-   |-   |-   |-   |r10|DWORD  |int[0|0x0]  |int[0|0x0]  |-   |-   |-   |-   |-   |rbp|QWORD  |-   |r11|QWORD  |-   |r14|QWORD  |-   |rsi|QWORD  |-    <||@
  Comment 3715 block B26 null  <||@
  Comment 3715 304 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3715 306 r9|DWORD = MOVE input: int[-287763|0xfffffffffffb9bed]  <||@
  Comment 3721 308 stack:48|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 3725 310 rcx|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 3729 312 rbx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 3734 314 JUMP ~[] destination: B26 -> B158  <||@
  Comment 3739 block B122 null  <||@
  Comment 3739 1484 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3739 1486 r11|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 3742 1488 rax|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 3745 1490 rbx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 3750 1492 r10|DWORD = MOVE input: int[-263699|0xfffffffffffbf9ed]  <||@
  Comment 3756 1494 JUMP ~[] destination: B122 -> B132  <||@
  Comment 3761 block B16 null  <||@
  Comment 3761 166 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3761 168 stack:48|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 3765 170 rcx|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 3768 172 rbx|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 3771 174 r9|DWORD = MOVE input: int[-222995|0xfffffffffffc98ed]  <||@
  Comment 3777 176 JUMP ~[] destination: B16 -> B158  <||@
  Comment 3782 block B120 null  <||@
  Comment 3782 1466 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3782 1468 r11|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 3785 1470 rax|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 3788 1472 rbx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 3793 1474 r10|DWORD = MOVE input: int[-263443|0xfffffffffffbfaed]  <||@
  Comment 3799 1476 JUMP ~[] destination: B120 -> B132  <||@
  Comment 3804 block B64 null  <||@
  Comment 3804 748 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3804 750 rbp|DWORD = MOVE stack:60|DWORD moveKind: DWORD  <||@
  Comment 3808 752 rsi|DWORD = MOVE stack:64|DWORD moveKind: DWORD  <||@
  Comment 3812 754 r11|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 3815 756 rdi|DWORD = MOVE stack:48|DWORD moveKind: DWORD  <||@
  Comment 3819 758 rcx|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 3821 760 r8|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 3824 762 r10|DWORD = MOVE input: int[-245267|0xfffffffffffc41ed]  <||@
  Comment 3830 764 JUMP ~[] destination: B64 -> B154  <||@
  Comment 3835 block B17 null  <||@
  Comment 3835 178 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3835 180 stack:48|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 3839 182 rcx|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 3842 184 rbx|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 3845 186 r9|DWORD = MOVE input: int[-222739|0xfffffffffffc99ed]  <||@
  Comment 3851 188 JUMP ~[] destination: B17 -> B158  <||@
  Comment 3856 block B131 null  <||@
  Comment 3856 1620 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3856 1622 r11|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 3859 1624 rax|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 3862 1626 rbx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 3867 1628 r10|DWORD = MOVE input: int[-266523|0xfffffffffffbeee5]  <||@
  Comment 3873 1630 JUMP ~[] destination: B131 -> B132  <||@
  Comment 3878 block B157 null  <||@
  Comment 3878 1916 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3878 1918 r9|DWORD = MOVE input: int[-288019|0xfffffffffffb9aed]  <||@
  Comment 3884 1920 stack:48|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 3888 1922 rcx|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 3892 1924 rbx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 3897 1926 JUMP ~[] destination: B157 -> B158  <||@
  Comment 3902 block B78 null  <||@
  Comment 3902 882 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3902 884 rcx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1454271960]  <||@
  Comment 3902 {Object[d.a@1454271960]}  <||@
  Comment 3912 886 MOV [r15|QWORD + 668] y: -303371 size: DWORD  <||@
  Comment 3923 888 MOV (x: [r15|QWORD + 680], y: rcx|QWORD[.]) size: QWORD  <||@
  Comment 3930 890 DEOPT info [bci:914]  <||@
  Comment 3930 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 3935 [rbx:0]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.dtoa(FloatingDecimal.java:683) [bci: 914, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4  |5  |6  |7  |8  |9         |10  |11  |12  |13  |14  |15  |16  |17         |18        |19         |20  |21  |22  |23  |24  |25         |26  |27         |28  |29         |30  |31         |32 
     locals:  |rbx|QWORD[.]  |-  |-  |-  |-  |-  |-  |-  |-  |r9|DWORD  |-   |-   |-   |-   |-   |-   |-   |r10|DWORD  |r8|DWORD  |rdx|DWORD  |-   |-   |-   |-   |-   |rdi|QWORD  |-   |r11|QWORD  |-   |rbp|QWORD  |-   |rsi|QWORD  |-    <||@
  Comment 3936 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 3936 4  <||@
  Comment 3942 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 3942 5  <||@
  HexCodeFile>>> <|@
end_nmethod
