begin_compilation
  name " HotSpotCompilation-10113[org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove()]"
  method "HotSpotCompilation-10113[org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove()]"
  date 1527005238308
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a737 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: a737  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a! Lorg/graalvm/collections/EconomicMapImpl$SparseMapIterator;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?2 v764 ?27 ?38 ?38 v766 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v764 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a737 a744 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a737 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl$SparseMapIterator.this$0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:675) [bci: 1]
nullCheck: false
stamp: n# Lorg/graalvm/collections/EconomicMapImpl;
=== Inputs ===
stateBefore: - 
guard: - 
address: v764 
=== Succesors ===
next: a738 
=== Usages ===
a302 v768 v765 v767 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v764 #next: a738  <|@  <|@
tid ?2 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<EconomicMapImpl$SparseMapIterator.remove()>
duringCall: false
localsSize: 1
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 675
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 
=== Succesors ===
=== Usages ===
v655 a738 i742 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1  <|@  <|@
f <@~|@floating>@ <|@
tid v765 <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a737 
=== Succesors ===
=== Usages ===
a738 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a737  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a738 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.hashArray
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.hasHashArray(EconomicMapImpl.java:603) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.access$100(EconomicMapImpl.java:56) [bci: 1]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:675) [bci: 4]
nullCheck: true
stamp: n# [B
=== Inputs ===
stateBefore: ?2 
guard: - 
address: v765 
=== Succesors ===
next: i739 
=== Usages ===
v444 
=== Predecessor ===
a737 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?2 guard: - address: v765 #next: i739  <|@  <|@
f <@~|@floating>@ <|@
tid v766 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i739 i746 v443 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i739 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl$SparseMapIterator.current
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 37]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v766 
=== Succesors ===
next: v12 
=== Usages ===
i18 i103 i223 
=== Predecessor ===
a738 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v766 #next: v12  <|@  <|@
f <@~|@floating>@ <|@
tid i17 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:676) [bci: 23]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1] ⇊00000000ffffffff
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i18 i269 i55 i149 i145 i123 i135 i258 i264 i501 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i18 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:676) [bci: 23]
stamp: i32
=== Inputs ===
x: i739 
y: i17 
=== Succesors ===
=== Usages ===
i23 i224 i54 i102 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i739 y: i17  <|@  <|@
f <@~|@floating>@ <|@
tid v444 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.hasHashArray(EconomicMapImpl.java:603) [bci: 4]
at org.graalvm.collections.EconomicMapImpl.access$100(EconomicMapImpl.java:56) [bci: 1]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:675) [bci: 4]
stamp: void
=== Inputs ===
value: a738 
=== Succesors ===
=== Usages ===
v12 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a738  <|@  <|@
f <@~|@floating>@ <|@
tid a302 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:675) [bci: 1]
op: Uncompress
stamp: a# Lorg/graalvm/collections/EconomicMapImpl;
=== Inputs ===
value: a737 
=== Succesors ===
=== Usages ===
v334 a226 a228 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a737  <|@  <|@
f <@~|@floating>@ <|@
tid a105 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:646) [bci: 74]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?115 v655 v682 a692 a664 a664 a664 a664 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
tid ?38 <|@
d <@d|@=== Debug Properties ===
bci: 42
code: ResolvedJavaMethodBytecode<EconomicMapImpl$SparseMapIterator.remove()>
duringCall: true
localsSize: 1
locksSize: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 678
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: a1 a1 
=== Succesors ===
=== Usages ===
?163 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a1  <|@  <|@
tid ?163 <|@
d <@d|@=== Debug Properties ===
bci: 2
code: ResolvedJavaMethodBytecode<EconomicMapImpl.access$400(EconomicMapImpl, int)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 56
stackSize: 0
=== Inputs ===
outerFrameState: ?38 
values: - - 
=== Succesors ===
=== Usages ===
?206 ?76 ?104 ?114 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?38 values: - -  <|@  <|@
f <@~|@floating>@ <|@
tid i16 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:676) [bci: 22]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i23 i192 i85 i179 i175 i107 i112 v130 i137 i154 i180 i174 v517 i512 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i57 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:637) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
rawvalue: 9
stableDimension: 0
stamp: i32 [9] ⇊0000000000000009 ⇈0000000000000009
stampKind: i32
value: int[9|0x9]
=== Inputs ===
=== Succesors ===
=== Usages ===
v58 v265 j703 j712 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v12 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:675) [bci: 7]
stamp: void
trueSuccessorProbability: 0.23442118598057549
=== Inputs ===
condition: v444 
=== Succesors ===
trueSuccessor: v10 
falseSuccessor: v11 
=== Usages ===
=== Predecessor ===
i739 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v444 #trueSuccessor: v10 #falseSuccessor: v11  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4597613933617174380
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v10 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 31]
stamp: void
=== Inputs ===
=== Succesors ===
next: i740 
=== Usages ===
=== Predecessor ===
v12 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i740  <|@  <|@
f <@~|@floating>@ <|@
tid v767 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a737 
=== Succesors ===
=== Usages ===
i740 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a737  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i740 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.totalEntries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:633) [bci: 3]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v767 
=== Succesors ===
next: v61 
=== Usages ===
i54 i248 i246 i123 
=== Predecessor ===
v10 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v767 #next: v61  <|@  <|@
f <@~|@floating>@ <|@
tid i123 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:650) [bci: 100]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
stamp: i32
=== Inputs ===
x: i740 
y: i17 
=== Succesors ===
=== Usages ===
i252 i250 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i740 y: i17  <|@  <|@
f <@~|@floating>@ <|@
tid i54 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:633) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
stamp: i32
=== Inputs ===
x: i740 
y: i18 
=== Succesors ===
=== Usages ===
i55 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i740 y: i18  <|@  <|@
f <@~|@floating>@ <|@
tid i55 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:633) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
stamp: i32
=== Inputs ===
x: i54 
y: i17 
=== Succesors ===
=== Usages ===
v58 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i54 y: i17  <|@  <|@
f <@~|@floating>@ <|@
tid v58 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:637) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i55 
y: i57 
=== Succesors ===
=== Usages ===
v61 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i55 y: i57  <|@  <|@
f <@*|@fixed>@ <|@
tid v61 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:637) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
stamp: void
trueSuccessorProbability: 0.8554295858465635
=== Inputs ===
condition: v58 
=== Succesors ===
trueSuccessor: v59 
falseSuccessor: v60 
=== Usages ===
=== Predecessor ===
i740 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v58 #trueSuccessor: v59 #falseSuccessor: v60  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B7" 
    xhandlers
    flags 
    probability 4596392904429638157
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v59 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:637) [bci: 22]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v216 
=== Usages ===
=== Predecessor ===
v61 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v216  <|@  <|@
f <@*|@fixed>@ <|@
tid v216 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v215 
=== Predecessor ===
v59 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B25" 
    xhandlers
    flags 
    probability 4585044937785939323
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v60 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:646) [bci: 72]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v68 
=== Usages ===
=== Predecessor ===
v61 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v68  <|@  <|@
f <@*|@fixed>@ <|@
tid v68 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:646) [bci: 72]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v69 
=== Predecessor ===
v60 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" "B49" 
    xhandlers
    flags 
    probability 4605070940468357669
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v11 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:676) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: a741 
=== Usages ===
=== Predecessor ===
v12 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a741  <|@  <|@
f <@~|@floating>@ <|@
tid v768 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a737 
=== Succesors ===
=== Usages ===
a741 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a737  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a741 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.entries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.access$200(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:676) [bci: 24]
nullCheck: false
stamp: n [Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v768 
=== Succesors ===
next: i742 
=== Usages ===
a316 v769 
=== Predecessor ===
v11 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v768 #next: i742  <|@  <|@
f <@~|@floating>@ <|@
tid v769 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a741 
=== Succesors ===
=== Usages ===
i742 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a741  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i742 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.access$200(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:676) [bci: 24]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?2 
guard: - 
address: v769 
=== Succesors ===
next: v587 
=== Usages ===
v322 
=== Predecessor ===
a741 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?2 guard: - address: v769 #next: v587  <|@  <|@
f <@~|@floating>@ <|@
tid i23 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 6]
at org.graalvm.collections.EconomicMapImpl.access$200(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:676) [bci: 24]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i18 
y: i16 
=== Succesors ===
=== Usages ===
v770 v322 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i18 y: i16  <|@  <|@
f <@~|@floating>@ <|@
tid v322 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.access$200(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:676) [bci: 24]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i23 
y: i742 
=== Succesors ===
=== Usages ===
v587 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i23 y: i742  <|@  <|@
f <@*|@fixed>@ <|@
tid v587 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.access$200(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:676) [bci: 24]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v322 
=== Succesors ===
trueSuccessor: v584 
falseSuccessor: v586 
=== Usages ===
=== Predecessor ===
i742 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v322 #trueSuccessor: v584 #falseSuccessor: v586  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B24" 
    xhandlers
    flags 
    probability 4605070940468357669
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v584 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.access$200(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:676) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: a743 
=== Usages ===
a743 
=== Predecessor ===
v587 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a743  <|@  <|@
f <@~|@floating>@ <|@
tid a316 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.access$200(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:676) [bci: 24]
op: Uncompress
stamp: a [Ljava/lang/Object;
=== Inputs ===
value: a741 
=== Succesors ===
=== Usages ===
v770 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a741  <|@  <|@
f <@~|@floating>@ <|@
tid v770 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a316 
index: i23 
=== Succesors ===
=== Usages ===
a743 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a316 index: i23  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a743 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.access$200(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:676) [bci: 24]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: v584 
address: v770 
=== Succesors ===
next: i26 
=== Usages ===
a330 
=== Predecessor ===
v584 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v584 address: v770 #next: i26  <|@  <|@
f <@~|@floating>@ <|@
tid a330 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.access$200(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:676) [bci: 24]
op: Uncompress
stamp: a Ljava/lang/Object;
=== Inputs ===
value: a743 
=== Succesors ===
=== Usages ===
v334 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a743  <|@  <|@
tid v334 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.access$300(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:676) [bci: 27]
returnStamp: i32
signature: [Ljdk.vm.ci.meta.JavaType;@77b4de78
stamp: void
targetMethod: HotSpotMethod<EconomicMapImpl.findAndRemoveHash(Object)>
=== Inputs ===
arguments: a302 a330 
=== Succesors ===
=== Usages ===
i26 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a302 a330  <|@  <|@
tid ?27 <|@
d <@d|@=== Debug Properties ===
bci: 27
code: ResolvedJavaMethodBytecode<EconomicMapImpl$SparseMapIterator.remove()>
duringCall: true
localsSize: 1
locksSize: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.access$300(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:676) [bci: 27]
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 676
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 
=== Succesors ===
=== Usages ===
?28 ?645 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1  <|@  <|@
tid ?645 <|@
d <@d|@=== Debug Properties ===
bci: 2
code: ResolvedJavaMethodBytecode<EconomicMapImpl.access$300(EconomicMapImpl, Object)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 56
stackSize: 0
=== Inputs ===
outerFrameState: ?27 
values: - - 
=== Succesors ===
=== Usages ===
i26 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?27 values: - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i26 <|@
d <@d|@=== Debug Properties ===
bci: 2
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.access$300(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:676) [bci: 27]
polymorphic: false
stamp: i32
targetMethod: Direct#EconomicMapImpl.findAndRemoveHash
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v334 
stateDuring: ?645 
=== Succesors ===
next: a744 
=== Usages ===
?28 
=== Predecessor ===
a743 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v334 stateDuring: ?645 #next: a744  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a744 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl$SparseMapIterator.this$0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 33]
nullCheck: false
stamp: n# Lorg/graalvm/collections/EconomicMapImpl;
=== Inputs ===
stateBefore: - 
guard: - 
address: v764 
=== Succesors ===
next: i745 
=== Usages ===
a336 v771 
=== Predecessor ===
i26 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v764 #next: i745  <|@  <|@
tid ?28 <|@
d <@d|@=== Debug Properties ===
bci: 5
code: ResolvedJavaMethodBytecode<EconomicMapImpl.access$300(EconomicMapImpl, Object)>
duringCall: false
localsSize: 2
locksSize: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.access$300(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:676) [bci: 27]
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 56
stackSize: 1
=== Inputs ===
outerFrameState: ?27 
values: - - i26 
=== Succesors ===
=== Usages ===
i745 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?27 values: - - i26  <|@  <|@
f <@~|@floating>@ <|@
tid v771 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a744 
=== Succesors ===
=== Usages ===
i745 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a744  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i745 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.totalEntries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:633) [bci: 3]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
nullCheck: true
stamp: i32
=== Inputs ===
stateBefore: ?28 
guard: - 
address: v771 
=== Succesors ===
next: i746 
=== Usages ===
i263 i269 i248 i246 
=== Predecessor ===
a744 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?28 guard: - address: v771 #next: i746  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i746 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl$SparseMapIterator.current
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 37]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v766 
=== Succesors ===
next: v268 
=== Usages ===
i258 i223 i103 
=== Predecessor ===
i745 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v766 #next: v268  <|@  <|@
f <@~|@floating>@ <|@
tid i258 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 41]
stamp: i32
=== Inputs ===
x: i746 
y: i17 
=== Succesors ===
=== Usages ===
i263 i224 i102 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i746 y: i17  <|@  <|@
f <@~|@floating>@ <|@
tid i263 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:633) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
stamp: i32
=== Inputs ===
x: i745 
y: i258 
=== Succesors ===
=== Usages ===
i264 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i745 y: i258  <|@  <|@
f <@~|@floating>@ <|@
tid i264 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:633) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
stamp: i32
=== Inputs ===
x: i263 
y: i17 
=== Succesors ===
=== Usages ===
v265 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i263 y: i17  <|@  <|@
f <@~|@floating>@ <|@
tid v265 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:637) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i264 
y: i57 
=== Succesors ===
=== Usages ===
v268 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i264 y: i57  <|@  <|@
f <@~|@floating>@ <|@
tid i269 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:650) [bci: 100]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
stamp: i32
=== Inputs ===
x: i745 
y: i17 
=== Succesors ===
=== Usages ===
i252 i250 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i745 y: i17  <|@  <|@
f <@~|@floating>@ <|@
tid a336 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 33]
op: Uncompress
stamp: a# Lorg/graalvm/collections/EconomicMapImpl;
=== Inputs ===
value: a744 
=== Succesors ===
=== Usages ===
a226 a228 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a744  <|@  <|@
f <@*|@fixed>@ <|@
tid v268 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:637) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
stamp: void
trueSuccessorProbability: 0.8554295858465635
=== Inputs ===
condition: v265 
=== Succesors ===
trueSuccessor: v266 
falseSuccessor: v267 
=== Usages ===
=== Predecessor ===
i746 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v265 #trueSuccessor: v266 #falseSuccessor: v267  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4604074023238621295
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v266 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:637) [bci: 22]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v217 
=== Usages ===
=== Predecessor ===
v268 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v217  <|@  <|@
f <@*|@fixed>@ <|@
tid v217 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v215 
=== Predecessor ===
v266 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B2" "B6" 
    successors "B8" "B23" 
    xhandlers
    flags 
    probability 4605880244273396978
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i223 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v215 
values: i739 i746 
=== Succesors ===
=== Usages ===
i103 ?76 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v215 values: i739 i746  <|@  <|@
f <@~|@floating>@ <|@
tid i224 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v215 
values: i18 i258 
=== Succesors ===
=== Usages ===
i103 i102 i75 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v215 values: i18 i258  <|@  <|@
f <@~|@floating>@ <|@
tid a228 <|@
d <@d|@=== Debug Properties ===
stamp: a!# Lorg/graalvm/collections/EconomicMapImpl;
valueDescription: a -
=== Inputs ===
merge: v215 
values: a302 a336 
=== Succesors ===
=== Usages ===
a226 a226 v772 ?76 v773 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v215 values: a302 a336  <|@  <|@
f <@~|@floating>@ <|@
tid i248 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v215 
values: i740 i745 
=== Succesors ===
=== Usages ===
i246 i246 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v215 values: i740 i745  <|@  <|@
f <@~|@floating>@ <|@
tid i252 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v215 
values: i123 i269 
=== Succesors ===
=== Usages ===
i250 i250 v79 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v215 values: i123 i269  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v215 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v216 v217 
=== Succesors ===
next: a747 
=== Usages ===
i223 i224 a228 i248 i252 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v216 v217 #next: a747  <|@  <|@
f <@~|@floating>@ <|@
tid v772 <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: a228 
index: - 
=== Succesors ===
=== Usages ===
a747 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a228 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a747 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.hashArray
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.hasHashArray(EconomicMapImpl.java:603) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:637) [bci: 23]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
nullCheck: false
stamp: n# [B
=== Inputs ===
stateBefore: - 
guard: - 
address: v772 
=== Succesors ===
next: v72 
=== Usages ===
v447 
=== Predecessor ===
v215 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v772 #next: v72  <|@  <|@
f <@~|@floating>@ <|@
tid v447 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.hasHashArray(EconomicMapImpl.java:603) [bci: 4]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:637) [bci: 23]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
stamp: void
=== Inputs ===
value: a747 
=== Succesors ===
=== Usages ===
v72 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a747  <|@  <|@
f <@*|@fixed>@ <|@
tid v72 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:637) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
stamp: void
trueSuccessorProbability: 0.6758796339967927
=== Inputs ===
condition: v447 
=== Succesors ===
trueSuccessor: v67 
falseSuccessor: v71 
=== Usages ===
=== Predecessor ===
a747 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v447 #trueSuccessor: v67 #falseSuccessor: v71  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" 
    xhandlers
    flags 
    probability 4603382888838454779
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v67 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:638) [bci: 29]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v73 
=== Usages ===
=== Predecessor ===
v72 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v73  <|@  <|@
f <@*|@fixed>@ <|@
tid v73 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:638) [bci: 29]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v74 
=== Predecessor ===
v67 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B15" 
    successors "B10" "B22" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4607807854194933496
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i75 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v74 
values: i224 i85 
=== Succesors ===
=== Usages ===
?76 v79 i102 i85 i179 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v74 values: i224 i85  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v74 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 1.9698005896823043
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:638) [bci: 29]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v73 
=== Succesors ===
next: v84 
=== Usages ===
i75 v81 v100 v621 v616 v601 v606 v611 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v73 #next: v84  <|@  <|@
f <@~|@floating>@ <|@
tid v79 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:638) [bci: 36]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i75 
y: i252 
=== Succesors ===
=== Usages ===
v84 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i75 y: i252  <|@  <|@
f <@*|@fixed>@ <|@
tid v84 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:638) [bci: 36]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
stamp: void
trueSuccessorProbability: 0.49233439910722987
=== Inputs ===
condition: v79 
=== Succesors ===
trueSuccessor: v80 
falseSuccessor: v81 
=== Usages ===
=== Predecessor ===
v74 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v79 #trueSuccessor: v80 #falseSuccessor: v81  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B20" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4603225620296671221
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v80 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:639) [bci: 39]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: a748 
=== Usages ===
=== Predecessor ===
v84 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a748  <|@  <|@
f <@~|@floating>@ <|@
tid v773 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a228 
index: - 
=== Succesors ===
=== Usages ===
a748 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a228 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a748 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.entries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:639) [bci: 45]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
nullCheck: false
stamp: n [Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v773 
=== Succesors ===
next: v749 
=== Usages ===
a346 v786 v777 
=== Predecessor ===
v80 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v773 #next: v749  <|@  <|@
tid ?76 <|@
d <@d|@=== Debug Properties ===
bci: 29
code: ResolvedJavaMethodBytecode<EconomicMapImpl.remove(int)>
duringCall: false
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 638
stackSize: 0
=== Inputs ===
outerFrameState: ?163 
values: a228 - i75 - i223 
=== Succesors ===
=== Usages ===
v665 v749 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?163 values: a228 - i75 - i223  <|@  <|@
f <@~|@floating>@ <|@
tid v786 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a748 
=== Succesors ===
=== Usages ===
v749 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a748  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v749 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?76 
guard: - 
address: v786 
=== Succesors ===
next: v602 
=== Usages ===
v719 
=== Predecessor ===
a748 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?76 guard: - address: v786 #next: v602  <|@  <|@
f <@~|@floating>@ <|@
tid v718 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v719 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v719 <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v749 
y: v718 
=== Succesors ===
=== Usages ===
v602 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v749 y: v718  <|@  <|@
f <@*|@fixed>@ <|@
tid v602 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v719 
=== Succesors ===
trueSuccessor: v598 
falseSuccessor: v601 
=== Usages ===
=== Predecessor ===
v749 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v719 #trueSuccessor: v598 #falseSuccessor: v601  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B19" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4603225620296671221
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v598 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: i750 
=== Usages ===
=== Predecessor ===
v602 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i750  <|@  <|@
f <@~|@floating>@ <|@
tid v777 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a748 
=== Succesors ===
=== Usages ===
i750 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a748  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i750 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:639) [bci: 45]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v777 
=== Succesors ===
next: v607 
=== Usages ===
v352 v365 v375 v387 
=== Predecessor ===
v598 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v777 #next: v607  <|@  <|@
f <@~|@floating>@ <|@
tid i85 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:639) [bci: 44]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
stamp: i32
=== Inputs ===
x: i75 
y: i16 
=== Succesors ===
=== Usages ===
i75 i174 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i75 y: i16  <|@  <|@
f <@~|@floating>@ <|@
tid i174 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 6]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:640) [bci: 57]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i85 
y: i16 
=== Succesors ===
=== Usages ===
i175 v774 v352 j759 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i85 y: i16  <|@  <|@
f <@~|@floating>@ <|@
tid v352 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:639) [bci: 45]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i174 
y: i750 
=== Succesors ===
=== Usages ===
v607 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i174 y: i750  <|@  <|@
f <@*|@fixed>@ <|@
tid v607 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:639) [bci: 45]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v352 
=== Succesors ===
trueSuccessor: v603 
falseSuccessor: v606 
=== Usages ===
=== Predecessor ===
i750 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v352 #trueSuccessor: v603 #falseSuccessor: v606  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" "B18" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4603225620296671221
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v603 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:639) [bci: 45]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v612 
=== Usages ===
a751 
=== Predecessor ===
v607 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v612  <|@  <|@
f <@~|@floating>@ <|@
tid i179 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 6]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:640) [bci: 60]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i75 
y: i16 
=== Succesors ===
=== Usages ===
i180 v775 v365 j762 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i75 y: i16  <|@  <|@
f <@~|@floating>@ <|@
tid v365 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setKey(EconomicMapImpl.java:777) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:639) [bci: 48]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i179 
y: i750 
=== Succesors ===
=== Usages ===
v612 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i179 y: i750  <|@  <|@
f <@*|@fixed>@ <|@
tid v612 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setKey(EconomicMapImpl.java:777) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:639) [bci: 48]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v365 
=== Succesors ===
trueSuccessor: v608 
falseSuccessor: v611 
=== Usages ===
=== Predecessor ===
v603 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v365 #trueSuccessor: v608 #falseSuccessor: v611  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B17" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4603225620296671221
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v608 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setKey(EconomicMapImpl.java:777) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:639) [bci: 48]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v617 
=== Usages ===
v373 
=== Predecessor ===
v612 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v617  <|@  <|@
f <@~|@floating>@ <|@
tid i175 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:640) [bci: 57]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
stamp: i32 [-2147483647 - 2147483647] ⇊0000000000000001
=== Inputs ===
x: i174 
y: i16 
=== Succesors ===
=== Usages ===
v375 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i174 y: i16  <|@  <|@
f <@~|@floating>@ <|@
tid v375 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:640) [bci: 57]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i175 
y: i750 
=== Succesors ===
=== Usages ===
v617 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i175 y: i750  <|@  <|@
f <@*|@fixed>@ <|@
tid v617 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:640) [bci: 57]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v375 
=== Succesors ===
trueSuccessor: v613 
falseSuccessor: v616 
=== Usages ===
=== Predecessor ===
v608 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v375 #trueSuccessor: v613 #falseSuccessor: v616  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B16" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4603225620296671221
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v613 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:640) [bci: 57]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v622 
=== Usages ===
a752 
=== Predecessor ===
v617 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v622  <|@  <|@
f <@~|@floating>@ <|@
tid i180 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:640) [bci: 60]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
stamp: i32 [-2147483647 - 2147483647] ⇊0000000000000001
=== Inputs ===
x: i179 
y: i16 
=== Succesors ===
=== Usages ===
v387 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i179 y: i16  <|@  <|@
f <@~|@floating>@ <|@
tid v387 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:640) [bci: 60]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i180 
y: i750 
=== Succesors ===
=== Usages ===
v622 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i180 y: i750  <|@  <|@
f <@*|@fixed>@ <|@
tid v622 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:640) [bci: 60]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v387 
=== Succesors ===
trueSuccessor: v618 
falseSuccessor: v621 
=== Usages ===
=== Predecessor ===
v613 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v387 #trueSuccessor: v618 #falseSuccessor: v621  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B9" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4603225620296671221
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v618 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:640) [bci: 60]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: a751 
=== Usages ===
v395 
=== Predecessor ===
v622 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a751  <|@  <|@
f <@~|@floating>@ <|@
tid a346 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:639) [bci: 45]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
op: Uncompress
stamp: a [Ljava/lang/Object;
=== Inputs ===
value: a748 
=== Succesors ===
=== Usages ===
v778 v776 v774 v775 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a748  <|@  <|@
f <@~|@floating>@ <|@
tid v774 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a346 
index: i174 
=== Succesors ===
=== Usages ===
a751 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a346 index: i174  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a751 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:639) [bci: 45]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: v603 
address: v774 
=== Succesors ===
next: v373 
=== Usages ===
v373 
=== Predecessor ===
v618 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v603 address: v774 #next: v373  <|@  <|@
f <@~|@floating>@ <|@
tid v775 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a346 
index: i179 
=== Succesors ===
=== Usages ===
v373 j702 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a346 index: i179  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v373 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
location: Array: Object
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setKey(EconomicMapImpl.java:777) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:639) [bci: 48]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v608 
address: v775 
value: a751 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j702 
=== Usages ===
=== Predecessor ===
a751 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v608 address: v775 value: a751 stateAfter: - lastLocationAccess: - #next: j702  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j702 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.setKey(EconomicMapImpl.java:777) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:639) [bci: 48]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v775 
=== Succesors ===
next: v707 
=== Usages ===
j703 
=== Predecessor ===
v373 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: v775 #next: v707  <|@  <|@
f <@~|@floating>@ <|@
tid j703 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.setKey(EconomicMapImpl.java:777) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:639) [bci: 48]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j702 
y: i57 
=== Succesors ===
=== Usages ===
v787 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j702 y: i57  <|@  <|@
f <@~|@floating>@ <|@
tid j706 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.loadLongConfigValue(int) [bci: -1]
at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.cardTableAddress(GraalHotSpotVMConfigNode.java:114) [bci: 6]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:133) [bci: 7]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.setKey(EconomicMapImpl.java:777) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:639) [bci: 48]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
rawvalue: 4682670080
stableDimension: 0
stamp: i64 [4682670080] ⇊00000001171be000 ⇈00000001171be000
stampKind: i64
value: long[4682670080|0x1171be000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v787 v788 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v787 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j703 
index: j706 
=== Succesors ===
=== Usages ===
v707 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j703 index: j706  <|@  <|@
f <@~|@floating>@ <|@
tid i708 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.setKey(EconomicMapImpl.java:777) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:639) [bci: 48]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
rawvalue: 0
stableDimension: 0
stamp: i8 [0] ⇈0000000000000000
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v707 v715 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v707 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.setKey(EconomicMapImpl.java:777) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:639) [bci: 48]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v787 
value: i708 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a752 
=== Usages ===
=== Predecessor ===
j702 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v787 value: i708 stateAfter: - lastLocationAccess: - #next: a752  <|@  <|@
f <@~|@floating>@ <|@
tid j759 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483646] ⇈fffffffffffffffe
=== Inputs ===
value: i174 
=== Succesors ===
=== Usages ===
v776 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i174  <|@  <|@
f <@~|@floating>@ <|@
tid v776 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times4
stamp: void*
=== Inputs ===
base: a346 
index: j759 
=== Succesors ===
=== Usages ===
a752 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a346 index: j759  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a752 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:640) [bci: 57]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: v613 
address: v776 
=== Succesors ===
next: v395 
=== Usages ===
v395 
=== Predecessor ===
v707 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v613 address: v776 #next: v395  <|@  <|@
f <@~|@floating>@ <|@
tid j762 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483646] ⇈fffffffffffffffe
=== Inputs ===
value: i179 
=== Succesors ===
=== Usages ===
v778 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i179  <|@  <|@
f <@~|@floating>@ <|@
tid v778 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times4
stamp: void*
=== Inputs ===
base: a346 
index: j762 
=== Succesors ===
=== Usages ===
v395 j711 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a346 index: j762  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v395 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
location: Array: Object
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:640) [bci: 60]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v618 
address: v778 
value: a752 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j711 
=== Usages ===
=== Predecessor ===
a752 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v618 address: v778 value: a752 stateAfter: - lastLocationAccess: - #next: j711  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j711 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:640) [bci: 60]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v778 
=== Succesors ===
next: v715 
=== Usages ===
j712 
=== Predecessor ===
v395 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: v778 #next: v715  <|@  <|@
f <@~|@floating>@ <|@
tid j712 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:640) [bci: 60]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j711 
y: i57 
=== Succesors ===
=== Usages ===
v788 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j711 y: i57  <|@  <|@
f <@~|@floating>@ <|@
tid v788 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j712 
index: j706 
=== Succesors ===
=== Usages ===
v715 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j712 index: j706  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v715 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:640) [bci: 60]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v788 
value: i708 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v100 
=== Usages ===
=== Predecessor ===
j711 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v788 value: i708 stateAfter: - lastLocationAccess: - #next: v100  <|@  <|@
f <@*|@fixed>@ <|@
tid v100 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:638) [bci: 29]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
stamp: void
=== Inputs ===
loopBegin: v74 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v715 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v74  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v621 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:640) [bci: 60]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v74 
=== Succesors ===
next: v675 
=== Usages ===
=== Predecessor ===
v622 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v74 #next: v675  <|@  <|@
f <@~|@floating>@ <|@
tid i676 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -99355
stableDimension: 0
stamp: i32 [-99355] ⇊00000000fffe7be5 ⇈00000000fffe7be5
stampKind: i32
value: int[-99355|0xfffffffffffe7be5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i663 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v675 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v660 
=== Predecessor ===
v621 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v616 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:640) [bci: 57]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v74 
=== Succesors ===
next: v673 
=== Usages ===
=== Predecessor ===
v617 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v74 #next: v673  <|@  <|@
f <@~|@floating>@ <|@
tid i674 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -96283
stableDimension: 0
stamp: i32 [-96283] ⇊00000000fffe87e5 ⇈00000000fffe87e5
stampKind: i32
value: int[-96283|0xfffffffffffe87e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i663 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v673 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v660 
=== Predecessor ===
v616 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v611 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setKey(EconomicMapImpl.java:777) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:639) [bci: 48]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v74 
=== Succesors ===
next: v671 
=== Usages ===
=== Predecessor ===
v612 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v74 #next: v671  <|@  <|@
f <@~|@floating>@ <|@
tid i672 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -93723
stableDimension: 0
stamp: i32 [-93723] ⇊00000000fffe91e5 ⇈00000000fffe91e5
stampKind: i32
value: int[-93723|0xfffffffffffe91e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i663 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v671 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v660 
=== Predecessor ===
v611 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v606 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:639) [bci: 45]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v74 
=== Succesors ===
next: v669 
=== Usages ===
=== Predecessor ===
v607 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v74 #next: v669  <|@  <|@
f <@~|@floating>@ <|@
tid i670 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -90395
stableDimension: 0
stamp: i32 [-90395] ⇊00000000fffe9ee5 ⇈00000000fffe9ee5
stampKind: i32
value: int[-90395|0xfffffffffffe9ee5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i663 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v669 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v660 
=== Predecessor ===
v606 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v601 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v74 
=== Succesors ===
next: v666 
=== Usages ===
=== Predecessor ===
v602 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v74 #next: v666  <|@  <|@
f <@~|@floating>@ <|@
tid a668 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: d.a@789277403
stableDimension: 0
stamp: a!# Lcom/oracle/graal/enterprise/l/d$a;
stampKind: a -
value: Object[d.a@789277403]
=== Inputs ===
=== Succesors ===
=== Usages ===
a664 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i667 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -92732
stableDimension: 0
stamp: i32 [-92732] ⇊00000000fffe95c4 ⇈00000000fffe95c4
stampKind: i32
value: int[-92732|0xfffffffffffe95c4]
=== Inputs ===
=== Succesors ===
=== Usages ===
i663 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v666 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v660 
=== Predecessor ===
v601 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B19" "B18" "B17" "B16" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i663 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-99355 - -90395] ⇊00000000fffe00c4 ⇈00000000fffefff5
valueDescription: i32
=== Inputs ===
merge: v660 
values: i667 i670 i672 i674 i676 
=== Succesors ===
=== Usages ===
v665 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v660 values: i667 i670 i672 i674 i676  <|@  <|@
f <@~|@floating>@ <|@
tid a664 <|@
d <@d|@=== Debug Properties ===
stamp: a# Lcom/oracle/graal/enterprise/l/d$a;
valueDescription: a -
=== Inputs ===
merge: v660 
values: a668 a105 a105 a105 a105 
=== Succesors ===
=== Usages ===
v665 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v660 values: a668 a105 a105 a105 a105  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v660 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v666 v669 v671 v673 v675 
=== Succesors ===
next: v665 
=== Usages ===
i663 a664 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v666 v669 v671 v673 v675 #next: v665  <|@  <|@
f <@*|@fixed>@ <|@
tid v665 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?76 
actionAndReason: i663 
speculation: a664 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v660 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?76 actionAndReason: i663 speculation: a664  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B25" 
    xhandlers
    flags 
    probability 4603382888838454779
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v81 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:643) [bci: 69]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v74 
=== Succesors ===
next: v101 
=== Usages ===
=== Predecessor ===
v84 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v74 #next: v101  <|@  <|@
f <@*|@fixed>@ <|@
tid v101 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:646) [bci: 72]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v69 
=== Predecessor ===
v81 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B25" 
    xhandlers
    flags 
    probability 4598666330787790318
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v71 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:646) [bci: 72]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v70 
=== Usages ===
=== Predecessor ===
v72 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v70  <|@  <|@
f <@*|@fixed>@ <|@
tid v70 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:646) [bci: 72]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v69 
=== Predecessor ===
v71 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B25" 
    xhandlers
    flags 
    probability 4592639758501055923
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v267 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:646) [bci: 72]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v270 
=== Usages ===
=== Predecessor ===
v268 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v270  <|@  <|@
f <@*|@fixed>@ <|@
tid v270 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v69 
=== Predecessor ===
v267 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B3" "B23" "B22" "B24" 
    successors "B26" "B47" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i102 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:646) [bci: 72]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v69 
values: i18 i224 i75 i258 
=== Succesors ===
=== Usages ===
?104 i107 i501 v517 ?114 ?115 v118 i128 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v69 values: i18 i224 i75 i258  <|@  <|@
f <@~|@floating>@ <|@
tid i103 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:646) [bci: 72]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v69 
values: i739 i223 i224 i746 
=== Succesors ===
=== Usages ===
?104 i167 ?114 i167 i167 v442 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v69 values: i739 i223 i224 i746  <|@  <|@
f <@~|@floating>@ <|@
tid a226 <|@
d <@d|@=== Debug Properties ===
stamp: a!# Lorg/graalvm/collections/EconomicMapImpl;
valueDescription: a -
=== Inputs ===
merge: v69 
values: a302 a228 a228 a336 
=== Succesors ===
=== Usages ===
v442 ?104 ?114 v785 v783 v779 ?115 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v69 values: a302 a228 a228 a336  <|@  <|@
f <@~|@floating>@ <|@
tid i246 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v69 
values: i740 i248 i248 i745 
=== Succesors ===
=== Usages ===
i195 i192 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v69 values: i740 i248 i248 i745  <|@  <|@
f <@~|@floating>@ <|@
tid i250 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v69 
values: i123 i252 i252 i269 
=== Succesors ===
=== Usages ===
v423 i212 v118 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v69 values: i123 i252 i252 i269  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v69 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:646) [bci: 72]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v68 v70 v101 v270 
=== Succesors ===
next: a753 
=== Usages ===
i102 i103 a226 i246 i250 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v68 v70 v101 v270 #next: a753  <|@  <|@
f <@~|@floating>@ <|@
tid v779 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a226 
index: - 
=== Succesors ===
=== Usages ===
a753 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a226 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a753 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.entries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setKey(EconomicMapImpl.java:777) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:646) [bci: 75]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
nullCheck: false
stamp: n [Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v779 
=== Succesors ===
next: i754 
=== Usages ===
a398 v780 
=== Predecessor ===
v69 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v779 #next: i754  <|@  <|@
tid ?104 <|@
d <@d|@=== Debug Properties ===
bci: 72
code: ResolvedJavaMethodBytecode<EconomicMapImpl.remove(int)>
duringCall: false
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 646
stackSize: 0
=== Inputs ===
outerFrameState: ?163 
values: a226 - i102 - i103 
=== Succesors ===
=== Usages ===
v682 i754 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?163 values: a226 - i102 - i103  <|@  <|@
f <@~|@floating>@ <|@
tid v780 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a753 
=== Succesors ===
=== Usages ===
i754 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a753  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i754 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setKey(EconomicMapImpl.java:777) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:646) [bci: 75]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?104 
guard: - 
address: v780 
=== Succesors ===
next: v630 
=== Usages ===
v404 v414 v514 v188 
=== Predecessor ===
a753 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?104 guard: - address: v780 #next: v630  <|@  <|@
f <@~|@floating>@ <|@
tid i107 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setKey(EconomicMapImpl.java:777) [bci: 6]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:646) [bci: 75]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i102 
y: i16 
=== Succesors ===
=== Usages ===
v781 i112 v404 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i102 y: i16  <|@  <|@
f <@~|@floating>@ <|@
tid v404 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setKey(EconomicMapImpl.java:777) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:646) [bci: 75]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i107 
y: i754 
=== Succesors ===
=== Usages ===
v630 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i107 y: i754  <|@  <|@
f <@*|@fixed>@ <|@
tid v630 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setKey(EconomicMapImpl.java:777) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:646) [bci: 75]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v404 
=== Succesors ===
trueSuccessor: v627 
falseSuccessor: v629 
=== Usages ===
=== Predecessor ===
i754 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v404 #trueSuccessor: v627 #falseSuccessor: v629  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" "B46" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v627 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setKey(EconomicMapImpl.java:777) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:646) [bci: 75]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v634 
=== Usages ===
v412 
=== Predecessor ===
v630 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v634  <|@  <|@
f <@~|@floating>@ <|@
tid i112 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:647) [bci: 81]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
stamp: i32 [-2147483647 - 2147483647] ⇊0000000000000001
=== Inputs ===
x: i107 
y: i16 
=== Succesors ===
=== Usages ===
v782 v414 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i107 y: i16  <|@  <|@
f <@~|@floating>@ <|@
tid v414 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:647) [bci: 81]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i112 
y: i754 
=== Succesors ===
=== Usages ===
v634 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i112 y: i754  <|@  <|@
f <@*|@fixed>@ <|@
tid v634 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:647) [bci: 81]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v414 
=== Succesors ===
trueSuccessor: v631 
falseSuccessor: v633 
=== Usages ===
=== Predecessor ===
v627 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v414 #trueSuccessor: v631 #falseSuccessor: v633  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B39" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v631 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:647) [bci: 81]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v412 
=== Usages ===
v421 
=== Predecessor ===
v634 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v412  <|@  <|@
f <@~|@floating>@ <|@
tid a398 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setKey(EconomicMapImpl.java:777) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:646) [bci: 75]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
op: Uncompress
stamp: a [Ljava/lang/Object;
=== Inputs ===
value: a753 
=== Succesors ===
=== Usages ===
v784 v782 v781 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a753  <|@  <|@
f <@~|@floating>@ <|@
tid v781 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a398 
index: i107 
=== Succesors ===
=== Usages ===
v412 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a398 index: i107  <|@  <|@
f <@~|@floating>@ <|@
tid a453 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setKey(EconomicMapImpl.java:777) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:646) [bci: 75]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
rawvalue: null
stableDimension: 0
stamp: n - NULL
stampKind: n -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v412 v421 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v412 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
location: Array: Object
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setKey(EconomicMapImpl.java:777) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:646) [bci: 75]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v627 
address: v781 
value: a453 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v421 
=== Usages ===
=== Predecessor ===
v631 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v627 address: v781 value: a453 stateAfter: - lastLocationAccess: - #next: v421  <|@  <|@
f <@~|@floating>@ <|@
tid v782 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a398 
index: i112 
=== Succesors ===
=== Usages ===
v421 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a398 index: i112  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v421 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
location: Array: Object
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:647) [bci: 81]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v631 
address: v782 
value: a453 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v121 
=== Usages ===
=== Predecessor ===
v412 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v631 address: v782 value: a453 stateAfter: - lastLocationAccess: - #next: v121  <|@  <|@
f <@~|@floating>@ <|@
tid v785 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a226 
index: - 
=== Succesors ===
=== Usages ===
i755 v437 i757 v439 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a226 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v118 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:648) [bci: 91]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i102 
y: i250 
=== Succesors ===
=== Usages ===
v121 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i102 y: i250  <|@  <|@
f <@*|@fixed>@ <|@
tid v121 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:648) [bci: 91]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
stamp: void
trueSuccessorProbability: 0.640014121444422
=== Inputs ===
condition: v118 
=== Succesors ===
trueSuccessor: v119 
falseSuccessor: v120 
=== Usages ===
=== Predecessor ===
v421 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v118 #trueSuccessor: v119 #falseSuccessor: v120  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4603939954262974325
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v119 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:650) [bci: 94]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v728 
=== Usages ===
=== Predecessor ===
v121 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v728  <|@  <|@
f <@~|@floating>@ <|@
tid v517 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i102 
y: i16 
=== Succesors ===
=== Usages ===
v728 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i102 y: i16  <|@  <|@
f <@*|@fixed>@ <|@
tid v728 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:651) [bci: 112]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v517 
=== Succesors ===
trueSuccessor: v724 
falseSuccessor: v727 
=== Usages ===
=== Predecessor ===
v119 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v517 #trueSuccessor: v724 #falseSuccessor: v727  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B32" 
    xhandlers
    flags 
    probability 4599436354635603829
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v724 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:651) [bci: 112]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v722 
=== Usages ===
=== Predecessor ===
v728 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v722  <|@  <|@
f <@*|@fixed>@ <|@
tid v722 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:651) [bci: 112]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v721 
=== Predecessor ===
v724 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" "B38" 
    xhandlers
    flags 
    probability 4599436354635603829
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v727 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:651) [bci: 112]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v734 
=== Usages ===
=== Predecessor ===
v728 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v734  <|@  <|@
f <@~|@floating>@ <|@
tid i501 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i32
=== Inputs ===
x: i102 
y: i17 
=== Succesors ===
=== Usages ===
i512 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i102 y: i17  <|@  <|@
f <@~|@floating>@ <|@
tid i512 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i501 
y: i16 
=== Succesors ===
=== Usages ===
v514 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i501 y: i16  <|@  <|@
f <@~|@floating>@ <|@
tid v514 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i512 
y: i754 
=== Succesors ===
=== Usages ===
v734 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i512 y: i754  <|@  <|@
f <@*|@fixed>@ <|@
tid v734 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:651) [bci: 112]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v514 
=== Succesors ===
trueSuccessor: v725 
falseSuccessor: v733 
=== Usages ===
=== Predecessor ===
v727 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v514 #trueSuccessor: v725 #falseSuccessor: v733  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B32" 
    xhandlers
    flags 
    probability 4599436354635603829
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v725 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:651) [bci: 112]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v723 
=== Usages ===
=== Predecessor ===
v734 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v723  <|@  <|@
f <@*|@fixed>@ <|@
tid v723 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:651) [bci: 112]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v721 
=== Predecessor ===
v725 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B29" "B31" 
    successors "B33" 
    xhandlers
    flags 
    probability 4603939954262974325
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v721 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:651) [bci: 112]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v722 v723 
=== Succesors ===
next: v423 
=== Usages ===
v519 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v722 v723 #next: v423  <|@  <|@
f <@~|@floating>@ <|@
tid v783 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a226 
index: - 
=== Succesors ===
=== Usages ===
v423 v434 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a226 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v423 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: EconomicMapImpl.totalEntries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:650) [bci: 101]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v783 
value: i250 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: i755 
=== Usages ===
=== Predecessor ===
v721 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v783 value: i250 stateAfter: - lastLocationAccess: - #next: i755  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i755 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.deletedEntries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:653) [bci: 130]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v785 
=== Succesors ===
next: v126 
=== Usages ===
i720 
=== Predecessor ===
v423 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v785 #next: v126  <|@  <|@
f <@*|@fixed>@ <|@
tid v126 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:651) [bci: 104]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v127 
=== Predecessor ===
i755 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" "B36" 
    successors "B34" "B35" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4604463905423979885
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i128 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v127 
values: i102 i135 
=== Succesors ===
=== Usages ===
i135 v130 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v127 values: i102 i135  <|@  <|@
f <@~|@floating>@ <|@
tid i212 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v127 
values: i250 i145 
=== Succesors ===
=== Usages ===
i145 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v127 values: i250 i145  <|@  <|@
f <@~|@floating>@ <|@
tid i720 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v127 
values: i755 i149 
=== Succesors ===
=== Usages ===
i149 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v127 values: i755 i149  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v127 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 1.0908890324817575
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:651) [bci: 104]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v126 
=== Succesors ===
next: v134 
=== Usages ===
i128 v131 v141 v152 i212 i720 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v126 #next: v134  <|@  <|@
f <@~|@floating>@ <|@
tid v130 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:651) [bci: 105]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i128 
y: i16 
=== Succesors ===
=== Usages ===
v134 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i128 y: i16  <|@  <|@
f <@*|@fixed>@ <|@
tid v134 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:651) [bci: 105]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
stamp: void
trueSuccessorProbability: 0.1273946083388714
=== Inputs ===
condition: v130 
=== Succesors ===
trueSuccessor: v131 
falseSuccessor: v133 
=== Usages ===
=== Predecessor ===
v127 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v130 #trueSuccessor: v131 #falseSuccessor: v133  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B45" 
    xhandlers
    flags 
    probability 4591073578059033886
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v131 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:661) [bci: 162]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v127 
=== Succesors ===
next: v165 
=== Usages ===
=== Predecessor ===
v134 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v127 #next: v165  <|@  <|@
f <@*|@fixed>@ <|@
tid v165 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v164 
=== Predecessor ===
v131 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" "B37" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4603662760749496265
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v133 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:651) [bci: 108]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: a756 
=== Usages ===
v519 
=== Predecessor ===
v134 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a756  <|@  <|@
f <@~|@floating>@ <|@
tid v519 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
kf: v721 v133 
=== Succesors ===
=== Usages ===
a756 
=== Predecessor ===
- >@ <|@
instruction <@c|@com.oracle.graal.enterprise.k.c>@ kf: v721 v133  <|@  <|@
f <@~|@floating>@ <|@
tid i135 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:651) [bci: 111]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
stamp: i32
=== Inputs ===
x: i128 
y: i17 
=== Succesors ===
=== Usages ===
i128 i137 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i128 y: i17  <|@  <|@
f <@~|@floating>@ <|@
tid i137 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 6]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:651) [bci: 112]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i135 
y: i16 
=== Succesors ===
=== Usages ===
v784 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i135 y: i16  <|@  <|@
f <@~|@floating>@ <|@
tid v784 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a398 
index: i137 
=== Succesors ===
=== Usages ===
a756 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a398 index: i137  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a756 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:651) [bci: 112]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: v519 
address: v784 
=== Succesors ===
next: v143 
=== Usages ===
v456 
=== Predecessor ===
v133 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v519 address: v784 #next: v143  <|@  <|@
f <@~|@floating>@ <|@
tid v456 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:651) [bci: 115]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
stamp: void
=== Inputs ===
value: a756 
=== Succesors ===
=== Usages ===
v143 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a756  <|@  <|@
f <@*|@fixed>@ <|@
tid v143 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:651) [bci: 115]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
stamp: void
trueSuccessorProbability: 0.09548013245033116
=== Inputs ===
condition: v456 
=== Succesors ===
trueSuccessor: v140 
falseSuccessor: v141 
=== Usages ===
=== Predecessor ===
a756 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v456 #trueSuccessor: v140 #falseSuccessor: v141  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B33" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4588544039611883407
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v140 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:652) [bci: 118]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v434 
=== Usages ===
=== Predecessor ===
v143 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v434  <|@  <|@
f <@~|@floating>@ <|@
tid i145 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:652) [bci: 124]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
stamp: i32
=== Inputs ===
x: i212 
y: i17 
=== Succesors ===
=== Usages ===
v434 i212 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i212 y: i17  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v434 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: EconomicMapImpl.totalEntries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:652) [bci: 125]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v783 
value: i145 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v437 
=== Usages ===
=== Predecessor ===
v140 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v783 value: i145 stateAfter: - lastLocationAccess: - #next: v437  <|@  <|@
f <@~|@floating>@ <|@
tid i149 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:653) [bci: 134]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
stamp: i32
=== Inputs ===
x: i720 
y: i17 
=== Succesors ===
=== Usages ===
v437 i720 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i720 y: i17  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v437 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: EconomicMapImpl.deletedEntries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:653) [bci: 135]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v785 
value: i149 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v152 
=== Usages ===
=== Predecessor ===
v434 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v785 value: i149 stateAfter: - lastLocationAccess: - #next: v152  <|@  <|@
f <@*|@fixed>@ <|@
tid v152 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:651) [bci: 104]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
stamp: void
=== Inputs ===
loopBegin: v127 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v437 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v127  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B45" 
    xhandlers
    flags 
    probability 4603138809588490704
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v141 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:661) [bci: 162]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v127 
=== Succesors ===
next: v166 
=== Usages ===
=== Predecessor ===
v143 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v127 #next: v166  <|@  <|@
f <@*|@fixed>@ <|@
tid v166 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v164 
=== Predecessor ===
v141 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v733 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:651) [bci: 112]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v688 
=== Usages ===
=== Predecessor ===
v734 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v688  <|@  <|@
f <@~|@floating>@ <|@
tid a690 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: d.a@480163006
stableDimension: 0
stamp: a!# Lcom/oracle/graal/enterprise/k/d$a;
stampKind: a -
value: Object[d.a@480163006]
=== Inputs ===
=== Succesors ===
=== Usages ===
a692 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i689 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -109083
stableDimension: 0
stamp: i32 [-109083] ⇊00000000fffe55e5 ⇈00000000fffe55e5
stampKind: i32
value: int[-109083|0xfffffffffffe55e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i691 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v688 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v687 
=== Predecessor ===
v733 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B40" "B42" 
    xhandlers
    flags 
    probability 4600156548991992086
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v120 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:657) [bci: 144]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v643 
=== Usages ===
=== Predecessor ===
v121 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v643  <|@  <|@
f <@~|@floating>@ <|@
tid i187 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.maybeCompress(EconomicMapImpl.java:475) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:658) [bci: 157]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
rawvalue: 8
stableDimension: 0
stamp: i32 [8] ⇊0000000000000008 ⇈0000000000000008
stampKind: i32
value: int[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
v188 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v188 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.maybeCompress(EconomicMapImpl.java:475) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:658) [bci: 157]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i754 
y: i187 
=== Succesors ===
=== Usages ===
v643 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i754 y: i187  <|@  <|@
f <@*|@fixed>@ <|@
tid v643 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.maybeCompress(EconomicMapImpl.java:475) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:658) [bci: 157]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v188 
=== Succesors ===
trueSuccessor: v642 
falseSuccessor: v640 
=== Usages ===
=== Predecessor ===
v120 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v188 #trueSuccessor: v642 #falseSuccessor: v640  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v642 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.maybeCompress(EconomicMapImpl.java:475) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:658) [bci: 157]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v694 
=== Usages ===
=== Predecessor ===
v643 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v694  <|@  <|@
f <@~|@floating>@ <|@
tid i695 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -112915
stableDimension: 0
stamp: i32 [-112915] ⇊00000000fffe46ed ⇈00000000fffe46ed
stampKind: i32
value: int[-112915|0xfffffffffffe46ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i691 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v694 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v687 
=== Predecessor ===
v642 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B38" "B40" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i691 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-112915 - -109083] ⇊00000000fffe44e5 ⇈00000000fffe57ed
valueDescription: i32
=== Inputs ===
merge: v687 
values: i689 i695 
=== Succesors ===
=== Usages ===
v693 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v687 values: i689 i695  <|@  <|@
f <@~|@floating>@ <|@
tid a692 <|@
d <@d|@=== Debug Properties ===
stamp: a# Lcom/oracle/graal/enterprise/k/d$a;
valueDescription: a -
=== Inputs ===
merge: v687 
values: a690 a105 
=== Succesors ===
=== Usages ===
v693 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v687 values: a690 a105  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v687 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v688 v694 
=== Succesors ===
next: v693 
=== Usages ===
i691 a692 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v688 v694 #next: v693  <|@  <|@
tid ?114 <|@
d <@d|@=== Debug Properties ===
bci: 81
code: ResolvedJavaMethodBytecode<EconomicMapImpl.remove(int)>
duringCall: true
localsSize: 5
locksSize: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:647) [bci: 81]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 647
stackSize: 0
=== Inputs ===
outerFrameState: ?163 
values: a226 - i102 - i103 
=== Succesors ===
=== Usages ===
?115 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?163 values: a226 - i102 - i103  <|@  <|@
tid ?115 <|@
d <@d|@=== Debug Properties ===
bci: 11
code: ResolvedJavaMethodBytecode<EconomicMapImpl.setRawValue(int, Object)>
duringCall: false
localsSize: 3
locksSize: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:647) [bci: 81]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 792
stackSize: 0
=== Inputs ===
outerFrameState: ?114 
values: a226 i102 a105 
=== Succesors ===
=== Usages ===
v693 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?114 values: a226 i102 a105  <|@  <|@
f <@*|@fixed>@ <|@
tid v693 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?115 
actionAndReason: i691 
speculation: a692 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v687 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?115 actionAndReason: i691 speculation: a692  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4600156548991992086
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v640 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.maybeCompress(EconomicMapImpl.java:475) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:658) [bci: 157]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: i757 
=== Usages ===
=== Predecessor ===
v643 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i757  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i757 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.deletedEntries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:657) [bci: 146]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v785 
=== Succesors ===
next: v439 
=== Usages ===
i154 
=== Predecessor ===
v640 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v785 #next: v439  <|@  <|@
f <@~|@floating>@ <|@
tid i154 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:657) [bci: 150]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
stamp: i32
=== Inputs ===
x: i757 
y: i16 
=== Succesors ===
=== Usages ===
v439 v197 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i757 y: i16  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v439 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: EconomicMapImpl.deletedEntries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:657) [bci: 151]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v785 
value: i154 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v200 
=== Usages ===
=== Predecessor ===
i757 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v785 value: i154 stateAfter: - lastLocationAccess: - #next: v200  <|@  <|@
f <@~|@floating>@ <|@
tid i192 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.RightShiftNode$$Lambda$143/1909420937@4b2846e5
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.maybeCompress(EconomicMapImpl.java:475) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:658) [bci: 157]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
stamp: i32 [-1073741824 - 1073741823]
=== Inputs ===
x: i246 
y: i16 
=== Succesors ===
=== Usages ===
i196 
=== Predecessor ===
- >@ <|@
instruction <@>>|@org.graalvm.compiler.nodes.calc.RightShiftNode>@ x: i246 y: i16  <|@  <|@
f <@~|@floating>@ <|@
tid i194 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.maybeCompress(EconomicMapImpl.java:475) [bci: 24]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:658) [bci: 157]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
rawvalue: 2
stableDimension: 0
stamp: i32 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
i195 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i195 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.RightShiftNode$$Lambda$143/1909420937@4b2846e5
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.maybeCompress(EconomicMapImpl.java:475) [bci: 25]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:658) [bci: 157]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
stamp: i32 [-536870912 - 536870911]
=== Inputs ===
x: i246 
y: i194 
=== Succesors ===
=== Usages ===
i196 
=== Predecessor ===
- >@ <|@
instruction <@>>|@org.graalvm.compiler.nodes.calc.RightShiftNode>@ x: i246 y: i194  <|@  <|@
f <@~|@floating>@ <|@
tid i196 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.maybeCompress(EconomicMapImpl.java:475) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:658) [bci: 157]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
stamp: i32 [-1610612736 - 1610612734]
=== Inputs ===
x: i192 
y: i195 
=== Succesors ===
=== Usages ===
v197 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i192 y: i195  <|@  <|@
f <@~|@floating>@ <|@
tid v197 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.maybeCompress(EconomicMapImpl.java:475) [bci: 27]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:658) [bci: 157]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i154 
y: i196 
=== Succesors ===
=== Usages ===
v200 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i154 y: i196  <|@  <|@
f <@*|@fixed>@ <|@
tid v200 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.maybeCompress(EconomicMapImpl.java:475) [bci: 27]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:658) [bci: 157]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
stamp: void
trueSuccessorProbability: 0.9807503712628541
=== Inputs ===
condition: v197 
=== Succesors ===
trueSuccessor: v198 
falseSuccessor: v199 
=== Usages ===
=== Predecessor ===
v439 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v197 #trueSuccessor: v198 #falseSuccessor: v199  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4600031716514929204
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v198 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.maybeCompress(EconomicMapImpl.java:478) [bci: 36]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:658) [bci: 157]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v211 
=== Usages ===
=== Predecessor ===
v200 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v211  <|@  <|@
f <@*|@fixed>@ <|@
tid v211 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v164 
=== Predecessor ===
v198 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4574639300685707378
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v199 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.maybeCompress(EconomicMapImpl.java:476) [bci: 30]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:658) [bci: 157]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: i202 
=== Usages ===
=== Predecessor ===
v200 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i202  <|@  <|@
tid v442 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.maybeCompress(EconomicMapImpl.java:476) [bci: 32]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:658) [bci: 157]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
returnStamp: i32
signature: [Ljdk.vm.ci.meta.JavaType;@31d3fe7
stamp: void
targetMethod: HotSpotMethod<EconomicMapImpl.compressLarge(int)>
=== Inputs ===
arguments: a226 i103 
=== Succesors ===
=== Usages ===
i202 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a226 i103  <|@  <|@
tid ?206 <|@
d <@d|@=== Debug Properties ===
bci: 157
code: ResolvedJavaMethodBytecode<EconomicMapImpl.remove(int)>
duringCall: true
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 658
stackSize: 0
=== Inputs ===
outerFrameState: ?163 
values: - - - - - 
=== Succesors ===
=== Usages ===
?646 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?163 values: - - - - -  <|@  <|@
tid ?646 <|@
d <@d|@=== Debug Properties ===
bci: 32
code: ResolvedJavaMethodBytecode<EconomicMapImpl.maybeCompress(int)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 476
stackSize: 0
=== Inputs ===
outerFrameState: ?206 
values: - - 
=== Succesors ===
=== Usages ===
i202 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?206 values: - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i202 <|@
d <@d|@=== Debug Properties ===
bci: 32
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.maybeCompress(EconomicMapImpl.java:476) [bci: 32]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:658) [bci: 157]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
polymorphic: false
stamp: i32
targetMethod: Direct#EconomicMapImpl.compressLarge
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v442 
stateDuring: ?646 
=== Succesors ===
next: v168 
=== Usages ===
i167 
=== Predecessor ===
v199 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v442 stateDuring: ?646 #next: v168  <|@  <|@
f <@*|@fixed>@ <|@
tid v168 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v164 
=== Predecessor ===
i202 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B34" "B37" "B44" "B43" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i167 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v164 
values: i103 i103 i202 i103 
=== Succesors ===
=== Usages ===
v443 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v164 values: i103 i103 i202 i103  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v164 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v165 v166 v168 v211 
=== Succesors ===
next: v443 
=== Usages ===
i167 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v165 v166 v168 v211 #next: v443  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v443 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: EconomicMapImpl$SparseMapIterator.current
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 45]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v766 
value: i167 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v42 
=== Usages ===
=== Predecessor ===
v164 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v766 value: i167 stateAfter: - lastLocationAccess: - #next: v42  <|@  <|@
f <@*|@fixed>@ <|@
tid v42 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:679) [bci: 48]
stamp: void
=== Inputs ===
result: - 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v443 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: - memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B48" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v633 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:647) [bci: 81]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v685 
=== Usages ===
=== Predecessor ===
v634 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v685  <|@  <|@
f <@~|@floating>@ <|@
tid i686 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -106267
stableDimension: 0
stamp: i32 [-106267] ⇊00000000fffe60e5 ⇈00000000fffe60e5
stampKind: i32
value: int[-106267|0xfffffffffffe60e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i680 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v685 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v677 
=== Predecessor ===
v633 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B48" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v629 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setKey(EconomicMapImpl.java:777) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:646) [bci: 75]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v683 
=== Usages ===
=== Predecessor ===
v630 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v683  <|@  <|@
f <@~|@floating>@ <|@
tid i684 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -103707
stableDimension: 0
stamp: i32 [-103707] ⇊00000000fffe6ae5 ⇈00000000fffe6ae5
stampKind: i32
value: int[-103707|0xfffffffffffe6ae5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i680 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v683 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v677 
=== Predecessor ===
v629 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" "B46" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i680 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-106267 - -102411] ⇊00000000fffe60e5 ⇈00000000fffe6ff5
valueDescription: i32
=== Inputs ===
merge: v677 
values: i684 i686 
=== Succesors ===
=== Usages ===
v682 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v677 values: i684 i686  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v677 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v683 v685 
=== Succesors ===
next: v682 
=== Usages ===
i680 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v683 v685 #next: v682  <|@  <|@
f <@*|@fixed>@ <|@
tid v682 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?104 
actionAndReason: i680 
speculation: a105 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v677 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?104 actionAndReason: i680 speculation: a105  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v586 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.access$200(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:676) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v655 
=== Usages ===
=== Predecessor ===
v587 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v655  <|@  <|@
f <@~|@floating>@ <|@
tid i659 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -82715
stableDimension: 0
stamp: i32 [-82715] ⇊00000000fffebce5 ⇈00000000fffebce5
stampKind: i32
value: int[-82715|0xfffffffffffebce5]
=== Inputs ===
=== Succesors ===
=== Usages ===
v655 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v655 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?2 
actionAndReason: i659 
speculation: a105 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v586 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?2 actionAndReason: i659 speculation: a105  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a737 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: a737  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a! Lorg/graalvm/collections/EconomicMapImpl$SparseMapIterator;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?2 v764 ?27 ?38 ?38 v766 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v764 <|@
result [v0|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a737 a744 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a737 <|@
result v1|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl$SparseMapIterator.this$0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:675) [bci: 1]
nullCheck: false
stamp: n# Lorg/graalvm/collections/EconomicMapImpl;
=== Inputs ===
stateBefore: - 
guard: - 
address: v764 
=== Succesors ===
next: a738 
=== Usages ===
a302 v768 v765 v767 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v764 #next: a738  <|@  <|@
tid ?2 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<EconomicMapImpl$SparseMapIterator.remove()>
duringCall: false
localsSize: 1
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 675
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 
=== Succesors ===
=== Usages ===
v655 a738 i742 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1  <|@  <|@
f <@~|@floating>@ <|@
tid v765 <|@
result [v1|DWORD[.] * 8 + 28] <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a737 
=== Succesors ===
=== Usages ===
a738 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a737  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a738 <|@
result v2|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.hashArray
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.hasHashArray(EconomicMapImpl.java:603) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.access$100(EconomicMapImpl.java:56) [bci: 1]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:675) [bci: 4]
nullCheck: true
stamp: n# [B
=== Inputs ===
stateBefore: ?2 
guard: - 
address: v765 
=== Succesors ===
next: i739 
=== Usages ===
v444 
=== Predecessor ===
a737 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?2 guard: - address: v765 #next: i739  <|@  <|@
f <@~|@floating>@ <|@
tid v766 <|@
result [v0|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i739 i746 v443 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i739 <|@
result v3|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl$SparseMapIterator.current
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 37]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v766 
=== Succesors ===
next: v12 
=== Usages ===
i18 i103 i223 
=== Predecessor ===
a738 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v766 #next: v12  <|@  <|@
f <@~|@floating>@ <|@
tid i17 <|@
result int[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:676) [bci: 23]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1] ⇊00000000ffffffff
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i18 i269 i55 i149 i145 i123 i135 i258 i264 i501 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i18 <|@
result v4|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:676) [bci: 23]
stamp: i32
=== Inputs ===
x: i739 
y: i17 
=== Succesors ===
=== Usages ===
i23 i224 i54 i102 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i739 y: i17  <|@  <|@
f <@~|@floating>@ <|@
tid v444 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.hasHashArray(EconomicMapImpl.java:603) [bci: 4]
at org.graalvm.collections.EconomicMapImpl.access$100(EconomicMapImpl.java:56) [bci: 1]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:675) [bci: 4]
stamp: void
=== Inputs ===
value: a738 
=== Succesors ===
=== Usages ===
v12 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a738  <|@  <|@
f <@~|@floating>@ <|@
tid a302 <|@
result v5|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:675) [bci: 1]
op: Uncompress
stamp: a# Lorg/graalvm/collections/EconomicMapImpl;
=== Inputs ===
value: a737 
=== Succesors ===
=== Usages ===
v334 a226 a228 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a737  <|@  <|@
f <@~|@floating>@ <|@
tid a105 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:646) [bci: 74]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?115 v655 v682 a692 a664 a664 a664 a664 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
tid ?38 <|@
d <@d|@=== Debug Properties ===
bci: 42
code: ResolvedJavaMethodBytecode<EconomicMapImpl$SparseMapIterator.remove()>
duringCall: true
localsSize: 1
locksSize: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 678
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: a1 a1 
=== Succesors ===
=== Usages ===
?163 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a1  <|@  <|@
tid ?163 <|@
d <@d|@=== Debug Properties ===
bci: 2
code: ResolvedJavaMethodBytecode<EconomicMapImpl.access$400(EconomicMapImpl, int)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 56
stackSize: 0
=== Inputs ===
outerFrameState: ?38 
values: - - 
=== Succesors ===
=== Usages ===
?206 ?76 ?104 ?114 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?38 values: - -  <|@  <|@
f <@~|@floating>@ <|@
tid i16 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:676) [bci: 22]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i23 i192 i85 i179 i175 i107 i112 v130 i137 i154 i180 i174 v517 i512 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i57 <|@
result int[9|0x9] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:637) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
rawvalue: 9
stableDimension: 0
stamp: i32 [9] ⇊0000000000000009 ⇈0000000000000009
stampKind: i32
value: int[9|0x9]
=== Inputs ===
=== Succesors ===
=== Usages ===
v58 v265 j703 j712 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v12 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:675) [bci: 7]
stamp: void
trueSuccessorProbability: 0.23442118598057549
=== Inputs ===
condition: v444 
=== Succesors ===
trueSuccessor: v10 
falseSuccessor: v11 
=== Usages ===
=== Predecessor ===
i739 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v444 #trueSuccessor: v10 #falseSuccessor: v11  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@2981e1af slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD[.] = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:675) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction v2|DWORD[.] = MOV [v1|DWORD[.] * 8 + 28] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOV [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = DEC v3|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|QWORD[.] = UNCOMPRESSPOINTER (input: v1|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@40538b65 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TEST (x: v2|DWORD[.], y: v2|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.23442118598057549 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4597613933617174380
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v10 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 31]
stamp: void
=== Inputs ===
=== Succesors ===
next: i740 
=== Usages ===
=== Predecessor ===
v12 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i740  <|@  <|@
f <@~|@floating>@ <|@
tid v767 <|@
result [v1|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a737 
=== Succesors ===
=== Usages ===
i740 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a737  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i740 <|@
result v6|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.totalEntries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:633) [bci: 3]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v767 
=== Succesors ===
next: v61 
=== Usages ===
i54 i248 i246 i123 
=== Predecessor ===
v10 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v767 #next: v61  <|@  <|@
f <@~|@floating>@ <|@
tid i123 <|@
result v7|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:650) [bci: 100]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
stamp: i32
=== Inputs ===
x: i740 
y: i17 
=== Succesors ===
=== Usages ===
i252 i250 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i740 y: i17  <|@  <|@
f <@~|@floating>@ <|@
tid i54 <|@
result v8|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:633) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
stamp: i32
=== Inputs ===
x: i740 
y: i18 
=== Succesors ===
=== Usages ===
i55 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i740 y: i18  <|@  <|@
f <@~|@floating>@ <|@
tid i55 <|@
result v9|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:633) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
stamp: i32
=== Inputs ===
x: i54 
y: i17 
=== Succesors ===
=== Usages ===
v58 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i54 y: i17  <|@  <|@
f <@~|@floating>@ <|@
tid v58 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:637) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i55 
y: i57 
=== Succesors ===
=== Usages ===
v61 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i55 y: i57  <|@  <|@
f <@*|@fixed>@ <|@
tid v61 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:637) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
stamp: void
trueSuccessorProbability: 0.8554295858465635
=== Inputs ===
condition: v58 
=== Succesors ===
trueSuccessor: v59 
falseSuccessor: v60 
=== Usages ===
=== Predecessor ===
i740 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v58 #trueSuccessor: v59 #falseSuccessor: v60  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = MOV [v1|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = DEC v6|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = SUB (x: v6|DWORD, ~y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = DEC v8|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v9|DWORD y: 9 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.8554295858465635 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B7" 
    xhandlers
    flags 
    probability 4596392904429638157
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v59 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:637) [bci: 22]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v216 
=== Usages ===
=== Predecessor ===
v61 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v216  <|@  <|@
f <@*|@fixed>@ <|@
tid v216 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v215 
=== Predecessor ===
v59 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v3|DWORD, v4|DWORD, v5|QWORD[.], v6|DWORD, v7|DWORD] destination: B2 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B25" 
    xhandlers
    flags 
    probability 4585044937785939323
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v60 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:646) [bci: 72]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v68 
=== Usages ===
=== Predecessor ===
v61 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v68  <|@  <|@
f <@*|@fixed>@ <|@
tid v68 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:646) [bci: 72]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v69 
=== Predecessor ===
v60 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v4|DWORD, v3|DWORD, v5|QWORD[.], v6|DWORD, v7|DWORD] destination: B3 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" "B49" 
    xhandlers
    flags 
    probability 4605070940468357669
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v11 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:676) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: a741 
=== Usages ===
=== Predecessor ===
v12 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a741  <|@  <|@
f <@~|@floating>@ <|@
tid v768 <|@
result [v1|DWORD[.] * 8 + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a737 
=== Succesors ===
=== Usages ===
a741 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a737  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a741 <|@
result v10|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.entries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.access$200(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:676) [bci: 24]
nullCheck: false
stamp: n [Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v768 
=== Succesors ===
next: i742 
=== Usages ===
a316 v769 
=== Predecessor ===
v11 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v768 #next: i742  <|@  <|@
f <@~|@floating>@ <|@
tid v769 <|@
result [v10|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a741 
=== Succesors ===
=== Usages ===
i742 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a741  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i742 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.access$200(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:676) [bci: 24]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?2 
guard: - 
address: v769 
=== Succesors ===
next: v587 
=== Usages ===
v322 
=== Predecessor ===
a741 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?2 guard: - address: v769 #next: v587  <|@  <|@
f <@~|@floating>@ <|@
tid i23 <|@
result v11|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 6]
at org.graalvm.collections.EconomicMapImpl.access$200(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:676) [bci: 24]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i18 
y: i16 
=== Succesors ===
=== Usages ===
v770 v322 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i18 y: i16  <|@  <|@
f <@~|@floating>@ <|@
tid v322 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.access$200(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:676) [bci: 24]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i23 
y: i742 
=== Succesors ===
=== Usages ===
v587 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i23 y: i742  <|@  <|@
f <@*|@fixed>@ <|@
tid v587 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.access$200(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:676) [bci: 24]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v322 
=== Succesors ===
trueSuccessor: v584 
falseSuccessor: v586 
=== Usages ===
=== Predecessor ===
i742 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v322 #trueSuccessor: v584 #falseSuccessor: v586  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v10|DWORD[.] = MOV [v1|DWORD[.] * 8 + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = SHL v4|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:675) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction CMP (x: v11|DWORD, y: [v10|DWORD[.] * 8 + 12]) size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B4 -> B5 falseDestination: B4 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B24" 
    xhandlers
    flags 
    probability 4605070940468357669
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v584 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.access$200(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:676) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: a743 
=== Usages ===
a743 
=== Predecessor ===
v587 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a743  <|@  <|@
f <@~|@floating>@ <|@
tid a316 <|@
result v12|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.access$200(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:676) [bci: 24]
op: Uncompress
stamp: a [Ljava/lang/Object;
=== Inputs ===
value: a741 
=== Succesors ===
=== Usages ===
v770 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a741  <|@  <|@
f <@~|@floating>@ <|@
tid v770 <|@
result [v12|QWORD[.] + v11|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a316 
index: i23 
=== Succesors ===
=== Usages ===
a743 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a316 index: i23  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a743 <|@
result v13|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.access$200(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:676) [bci: 24]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: v584 
address: v770 
=== Succesors ===
next: i26 
=== Usages ===
a330 
=== Predecessor ===
v584 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v584 address: v770 #next: i26  <|@  <|@
f <@~|@floating>@ <|@
tid a330 <|@
result v14|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.access$200(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:676) [bci: 24]
op: Uncompress
stamp: a Ljava/lang/Object;
=== Inputs ===
value: a743 
=== Succesors ===
=== Usages ===
v334 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a743  <|@  <|@
tid v334 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.access$300(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:676) [bci: 27]
returnStamp: i32
signature: [Ljdk.vm.ci.meta.JavaType;@77b4de78
stamp: void
targetMethod: HotSpotMethod<EconomicMapImpl.findAndRemoveHash(Object)>
=== Inputs ===
arguments: a302 a330 
=== Succesors ===
=== Usages ===
i26 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a302 a330  <|@  <|@
tid ?27 <|@
d <@d|@=== Debug Properties ===
bci: 27
code: ResolvedJavaMethodBytecode<EconomicMapImpl$SparseMapIterator.remove()>
duringCall: true
localsSize: 1
locksSize: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.access$300(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:676) [bci: 27]
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 676
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 
=== Succesors ===
=== Usages ===
?28 ?645 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1  <|@  <|@
tid ?645 <|@
d <@d|@=== Debug Properties ===
bci: 2
code: ResolvedJavaMethodBytecode<EconomicMapImpl.access$300(EconomicMapImpl, Object)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 56
stackSize: 0
=== Inputs ===
outerFrameState: ?27 
values: - - 
=== Succesors ===
=== Usages ===
i26 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?27 values: - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i26 <|@
result v15|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 2
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.access$300(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:676) [bci: 27]
polymorphic: false
stamp: i32
targetMethod: Direct#EconomicMapImpl.findAndRemoveHash
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v334 
stateDuring: ?645 
=== Succesors ===
next: a744 
=== Usages ===
?28 
=== Predecessor ===
a743 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v334 stateDuring: ?645 #next: a744  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a744 <|@
result v16|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl$SparseMapIterator.this$0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 33]
nullCheck: false
stamp: n# Lorg/graalvm/collections/EconomicMapImpl;
=== Inputs ===
stateBefore: - 
guard: - 
address: v764 
=== Succesors ===
next: i745 
=== Usages ===
a336 v771 
=== Predecessor ===
i26 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v764 #next: i745  <|@  <|@
tid ?28 <|@
d <@d|@=== Debug Properties ===
bci: 5
code: ResolvedJavaMethodBytecode<EconomicMapImpl.access$300(EconomicMapImpl, Object)>
duringCall: false
localsSize: 2
locksSize: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.access$300(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:676) [bci: 27]
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 56
stackSize: 1
=== Inputs ===
outerFrameState: ?27 
values: - - i26 
=== Succesors ===
=== Usages ===
i745 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?27 values: - - i26  <|@  <|@
f <@~|@floating>@ <|@
tid v771 <|@
result [v16|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a744 
=== Succesors ===
=== Usages ===
i745 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a744  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i745 <|@
result v17|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.totalEntries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:633) [bci: 3]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
nullCheck: true
stamp: i32
=== Inputs ===
stateBefore: ?28 
guard: - 
address: v771 
=== Succesors ===
next: i746 
=== Usages ===
i263 i269 i248 i246 
=== Predecessor ===
a744 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?28 guard: - address: v771 #next: i746  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i746 <|@
result v18|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl$SparseMapIterator.current
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 37]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v766 
=== Succesors ===
next: v268 
=== Usages ===
i258 i223 i103 
=== Predecessor ===
i745 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v766 #next: v268  <|@  <|@
f <@~|@floating>@ <|@
tid i258 <|@
result v19|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 41]
stamp: i32
=== Inputs ===
x: i746 
y: i17 
=== Succesors ===
=== Usages ===
i263 i224 i102 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i746 y: i17  <|@  <|@
f <@~|@floating>@ <|@
tid i263 <|@
result v20|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:633) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
stamp: i32
=== Inputs ===
x: i745 
y: i258 
=== Succesors ===
=== Usages ===
i264 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i745 y: i258  <|@  <|@
f <@~|@floating>@ <|@
tid i264 <|@
result v21|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:633) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
stamp: i32
=== Inputs ===
x: i263 
y: i17 
=== Succesors ===
=== Usages ===
v265 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i263 y: i17  <|@  <|@
f <@~|@floating>@ <|@
tid v265 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:637) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i264 
y: i57 
=== Succesors ===
=== Usages ===
v268 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i264 y: i57  <|@  <|@
f <@~|@floating>@ <|@
tid i269 <|@
result v22|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:650) [bci: 100]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
stamp: i32
=== Inputs ===
x: i745 
y: i17 
=== Succesors ===
=== Usages ===
i252 i250 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i745 y: i17  <|@  <|@
f <@~|@floating>@ <|@
tid a336 <|@
result v23|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 33]
op: Uncompress
stamp: a# Lorg/graalvm/collections/EconomicMapImpl;
=== Inputs ===
value: a744 
=== Succesors ===
=== Usages ===
a226 a228 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a744  <|@  <|@
f <@*|@fixed>@ <|@
tid v268 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:637) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
stamp: void
trueSuccessorProbability: 0.8554295858465635
=== Inputs ===
condition: v265 
=== Succesors ===
trueSuccessor: v266 
falseSuccessor: v267 
=== Usages ===
=== Predecessor ===
i746 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v265 #trueSuccessor: v266 #falseSuccessor: v267  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v12|QWORD[.] = UNCOMPRESSPOINTER (input: v10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@40538b65 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v13|DWORD[.] = MOV [v12|QWORD[.] + v11|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|QWORD[.] = UNCOMPRESSPOINTER (input: v13|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@40538b65 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v5|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v14|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.access$300(EconomicMapImpl.java:56) [bci: 2]
locals: - - 
org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:676) [bci: 27]
locals: v0|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<EconomicMapImpl.findAndRemoveHash(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:2, 27] <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v16|DWORD[.] = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.access$300(EconomicMapImpl.java:56) [bci: 5]
stack: v15|DWORD 
locals: - - 
org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:676) [bci: 27]
locals: v0|QWORD[.] 
>@ <|@ instruction v17|DWORD = MOV [v16|DWORD[.] * 8 + 12] size: DWORD state [bci:5, 27] <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = MOV [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v19|DWORD = DEC v18|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = SUB (x: v17|DWORD, ~y: v19|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = DEC v20|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v22|DWORD = DEC v17|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v23|QWORD[.] = UNCOMPRESSPOINTER (input: v16|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@40538b65 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMP v21|DWORD y: 9 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.8554295858465635 condition: < trueDestination: B5 -> B6 falseDestination: B5 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4604074023238621295
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v266 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:637) [bci: 22]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v217 
=== Usages ===
=== Predecessor ===
v268 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v217  <|@  <|@
f <@*|@fixed>@ <|@
tid v217 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v215 
=== Predecessor ===
v266 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v18|DWORD, v19|DWORD, v23|QWORD[.], v17|DWORD, v22|DWORD] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B2" "B6" 
    successors "B8" "B23" 
    xhandlers
    flags 
    probability 4605880244273396978
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i223 <|@
result v24|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v215 
values: i739 i746 
=== Succesors ===
=== Usages ===
i103 ?76 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v215 values: i739 i746  <|@  <|@
f <@~|@floating>@ <|@
tid i224 <|@
result v25|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v215 
values: i18 i258 
=== Succesors ===
=== Usages ===
i103 i102 i75 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v215 values: i18 i258  <|@  <|@
f <@~|@floating>@ <|@
tid a228 <|@
result v26|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a!# Lorg/graalvm/collections/EconomicMapImpl;
valueDescription: a -
=== Inputs ===
merge: v215 
values: a302 a336 
=== Succesors ===
=== Usages ===
a226 a226 v772 ?76 v773 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v215 values: a302 a336  <|@  <|@
f <@~|@floating>@ <|@
tid i248 <|@
result v27|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v215 
values: i740 i745 
=== Succesors ===
=== Usages ===
i246 i246 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v215 values: i740 i745  <|@  <|@
f <@~|@floating>@ <|@
tid i252 <|@
result v28|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v215 
values: i123 i269 
=== Succesors ===
=== Usages ===
i250 i250 v79 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v215 values: i123 i269  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v215 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v216 v217 
=== Succesors ===
next: a747 
=== Usages ===
i223 i224 a228 i248 i252 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v216 v217 #next: a747  <|@  <|@
f <@~|@floating>@ <|@
tid v772 <|@
result [v26|QWORD[.] + 28] <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: a228 
index: - 
=== Succesors ===
=== Usages ===
a747 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a228 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a747 <|@
result v29|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.hashArray
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.hasHashArray(EconomicMapImpl.java:603) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:637) [bci: 23]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
nullCheck: false
stamp: n# [B
=== Inputs ===
stateBefore: - 
guard: - 
address: v772 
=== Succesors ===
next: v72 
=== Usages ===
v447 
=== Predecessor ===
v215 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v772 #next: v72  <|@  <|@
f <@~|@floating>@ <|@
tid v447 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.hasHashArray(EconomicMapImpl.java:603) [bci: 4]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:637) [bci: 23]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
stamp: void
=== Inputs ===
value: a747 
=== Succesors ===
=== Usages ===
v72 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a747  <|@  <|@
f <@*|@fixed>@ <|@
tid v72 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:637) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
stamp: void
trueSuccessorProbability: 0.6758796339967927
=== Inputs ===
condition: v447 
=== Succesors ===
trueSuccessor: v67 
falseSuccessor: v71 
=== Usages ===
=== Predecessor ===
a747 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v447 #trueSuccessor: v67 #falseSuccessor: v71  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v24|DWORD, v25|DWORD, v26|QWORD[.], v27|DWORD, v28|DWORD] = LABEL numbPhis: 5 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v29|DWORD[.] = MOV [v26|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v29|DWORD[.], y: v29|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.6758796339967927 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" 
    xhandlers
    flags 
    probability 4603382888838454779
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v67 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:638) [bci: 29]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v73 
=== Usages ===
=== Predecessor ===
v72 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v73  <|@  <|@
f <@*|@fixed>@ <|@
tid v73 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:638) [bci: 29]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v74 
=== Predecessor ===
v67 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v25|DWORD] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B15" 
    successors "B10" "B22" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4607807854194933496
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i75 <|@
result v30|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v74 
values: i224 i85 
=== Succesors ===
=== Usages ===
?76 v79 i102 i85 i179 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v74 values: i224 i85  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v74 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 1.9698005896823043
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:638) [bci: 29]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v73 
=== Succesors ===
next: v84 
=== Usages ===
i75 v81 v100 v621 v616 v601 v606 v611 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v73 #next: v84  <|@  <|@
f <@~|@floating>@ <|@
tid v79 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:638) [bci: 36]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i75 
y: i252 
=== Succesors ===
=== Usages ===
v84 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i75 y: i252  <|@  <|@
f <@*|@fixed>@ <|@
tid v84 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:638) [bci: 36]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
stamp: void
trueSuccessorProbability: 0.49233439910722987
=== Inputs ===
condition: v79 
=== Succesors ===
trueSuccessor: v80 
falseSuccessor: v81 
=== Usages ===
=== Predecessor ===
v74 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v79 #trueSuccessor: v80 #falseSuccessor: v81  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v30|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v28|DWORD, y: v30|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.49233439910722987 condition: > trueDestination: B9 -> B10 falseDestination: B9 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B20" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4603225620296671221
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v80 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:639) [bci: 39]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: a748 
=== Usages ===
=== Predecessor ===
v84 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a748  <|@  <|@
f <@~|@floating>@ <|@
tid v773 <|@
result [v26|QWORD[.] + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a228 
index: - 
=== Succesors ===
=== Usages ===
a748 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a228 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a748 <|@
result v31|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.entries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:639) [bci: 45]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
nullCheck: false
stamp: n [Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v773 
=== Succesors ===
next: v749 
=== Usages ===
a346 v786 v777 
=== Predecessor ===
v80 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v773 #next: v749  <|@  <|@
tid ?76 <|@
d <@d|@=== Debug Properties ===
bci: 29
code: ResolvedJavaMethodBytecode<EconomicMapImpl.remove(int)>
duringCall: false
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 638
stackSize: 0
=== Inputs ===
outerFrameState: ?163 
values: a228 - i75 - i223 
=== Succesors ===
=== Usages ===
v665 v749 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?163 values: a228 - i75 - i223  <|@  <|@
f <@~|@floating>@ <|@
tid v786 <|@
result [v31|DWORD[.] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a748 
=== Succesors ===
=== Usages ===
v749 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a748  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v749 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?76 
guard: - 
address: v786 
=== Succesors ===
next: v602 
=== Usages ===
v719 
=== Predecessor ===
a748 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?76 guard: - address: v786 #next: v602  <|@  <|@
f <@~|@floating>@ <|@
tid v718 <|@
result meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v719 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v719 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v749 
y: v718 
=== Succesors ===
=== Usages ===
v602 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v749 y: v718  <|@  <|@
f <@*|@fixed>@ <|@
tid v602 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v719 
=== Succesors ===
trueSuccessor: v598 
falseSuccessor: v601 
=== Usages ===
=== Predecessor ===
v749 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v719 #trueSuccessor: v598 #falseSuccessor: v601  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v31|DWORD[.] = MOV [v26|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:638) [bci: 29]
locals: v26|QWORD[.] - v30|DWORD - v24|DWORD 
org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
locals: - - 
org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] 
>@ <|@ instruction CMP [v31|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} state [bci:29, 2, 42] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B19" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4603225620296671221
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v598 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: i750 
=== Usages ===
=== Predecessor ===
v602 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i750  <|@  <|@
f <@~|@floating>@ <|@
tid v777 <|@
result [v31|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a748 
=== Succesors ===
=== Usages ===
i750 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a748  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i750 <|@
result v32|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:639) [bci: 45]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v777 
=== Succesors ===
next: v607 
=== Usages ===
v352 v365 v375 v387 
=== Predecessor ===
v598 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v777 #next: v607  <|@  <|@
f <@~|@floating>@ <|@
tid i85 <|@
result v33|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:639) [bci: 44]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
stamp: i32
=== Inputs ===
x: i75 
y: i16 
=== Succesors ===
=== Usages ===
i75 i174 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i75 y: i16  <|@  <|@
f <@~|@floating>@ <|@
tid i174 <|@
result v34|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 6]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:640) [bci: 57]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i85 
y: i16 
=== Succesors ===
=== Usages ===
i175 v774 v352 j759 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i85 y: i16  <|@  <|@
f <@~|@floating>@ <|@
tid v352 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:639) [bci: 45]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i174 
y: i750 
=== Succesors ===
=== Usages ===
v607 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i174 y: i750  <|@  <|@
f <@*|@fixed>@ <|@
tid v607 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:639) [bci: 45]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v352 
=== Succesors ===
trueSuccessor: v603 
falseSuccessor: v606 
=== Usages ===
=== Predecessor ===
i750 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v352 #trueSuccessor: v603 #falseSuccessor: v606  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v32|DWORD = MOV [v31|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v33|DWORD = INC v30|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v34|DWORD = SHL v33|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v32|DWORD, y: v34|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B11 -> B12 falseDestination: B11 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" "B18" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4603225620296671221
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v603 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:639) [bci: 45]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v612 
=== Usages ===
a751 
=== Predecessor ===
v607 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v612  <|@  <|@
f <@~|@floating>@ <|@
tid i179 <|@
result v35|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 6]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:640) [bci: 60]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i75 
y: i16 
=== Succesors ===
=== Usages ===
i180 v775 v365 j762 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i75 y: i16  <|@  <|@
f <@~|@floating>@ <|@
tid v365 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setKey(EconomicMapImpl.java:777) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:639) [bci: 48]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i179 
y: i750 
=== Succesors ===
=== Usages ===
v612 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i179 y: i750  <|@  <|@
f <@*|@fixed>@ <|@
tid v612 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setKey(EconomicMapImpl.java:777) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:639) [bci: 48]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v365 
=== Succesors ===
trueSuccessor: v608 
falseSuccessor: v611 
=== Usages ===
=== Predecessor ===
v603 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v365 #trueSuccessor: v608 #falseSuccessor: v611  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v35|DWORD = SHL v30|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v32|DWORD, y: v35|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B12 -> B13 falseDestination: B12 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B17" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4603225620296671221
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v608 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setKey(EconomicMapImpl.java:777) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:639) [bci: 48]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v617 
=== Usages ===
v373 
=== Predecessor ===
v612 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v617  <|@  <|@
f <@~|@floating>@ <|@
tid i175 <|@
result v36|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:640) [bci: 57]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
stamp: i32 [-2147483647 - 2147483647] ⇊0000000000000001
=== Inputs ===
x: i174 
y: i16 
=== Succesors ===
=== Usages ===
v375 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i174 y: i16  <|@  <|@
f <@~|@floating>@ <|@
tid v375 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:640) [bci: 57]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i175 
y: i750 
=== Succesors ===
=== Usages ===
v617 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i175 y: i750  <|@  <|@
f <@*|@fixed>@ <|@
tid v617 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:640) [bci: 57]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v375 
=== Succesors ===
trueSuccessor: v613 
falseSuccessor: v616 
=== Usages ===
=== Predecessor ===
v608 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v375 #trueSuccessor: v613 #falseSuccessor: v616  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v36|DWORD = INC v34|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v32|DWORD, y: v36|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B16" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4603225620296671221
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v613 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:640) [bci: 57]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v622 
=== Usages ===
a752 
=== Predecessor ===
v617 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v622  <|@  <|@
f <@~|@floating>@ <|@
tid i180 <|@
result v37|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:640) [bci: 60]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
stamp: i32 [-2147483647 - 2147483647] ⇊0000000000000001
=== Inputs ===
x: i179 
y: i16 
=== Succesors ===
=== Usages ===
v387 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i179 y: i16  <|@  <|@
f <@~|@floating>@ <|@
tid v387 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:640) [bci: 60]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i180 
y: i750 
=== Succesors ===
=== Usages ===
v622 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i180 y: i750  <|@  <|@
f <@*|@fixed>@ <|@
tid v622 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:640) [bci: 60]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v387 
=== Succesors ===
trueSuccessor: v618 
falseSuccessor: v621 
=== Usages ===
=== Predecessor ===
v613 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v387 #trueSuccessor: v618 #falseSuccessor: v621  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v37|DWORD = INC v35|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v32|DWORD, y: v37|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B9" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4603225620296671221
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v618 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:640) [bci: 60]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: a751 
=== Usages ===
v395 
=== Predecessor ===
v622 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a751  <|@  <|@
f <@~|@floating>@ <|@
tid a346 <|@
result v38|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:639) [bci: 45]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
op: Uncompress
stamp: a [Ljava/lang/Object;
=== Inputs ===
value: a748 
=== Succesors ===
=== Usages ===
v778 v776 v774 v775 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a748  <|@  <|@
f <@~|@floating>@ <|@
tid v774 <|@
result [v38|QWORD[.] + v34|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a346 
index: i174 
=== Succesors ===
=== Usages ===
a751 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a346 index: i174  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a751 <|@
result v39|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:639) [bci: 45]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: v603 
address: v774 
=== Succesors ===
next: v373 
=== Usages ===
v373 
=== Predecessor ===
v618 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v603 address: v774 #next: v373  <|@  <|@
f <@~|@floating>@ <|@
tid v775 <|@
result [v38|QWORD[.] + v35|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a346 
index: i179 
=== Succesors ===
=== Usages ===
v373 j702 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a346 index: i179  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v373 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
location: Array: Object
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setKey(EconomicMapImpl.java:777) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:639) [bci: 48]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v608 
address: v775 
value: a751 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j702 
=== Usages ===
=== Predecessor ===
a751 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v608 address: v775 value: a751 stateAfter: - lastLocationAccess: - #next: j702  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j702 <|@
result [v38|QWORD[.] + v35|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.setKey(EconomicMapImpl.java:777) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:639) [bci: 48]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v775 
=== Succesors ===
next: v707 
=== Usages ===
j703 
=== Predecessor ===
v373 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: v775 #next: v707  <|@  <|@
f <@~|@floating>@ <|@
tid j703 <|@
result v40|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.setKey(EconomicMapImpl.java:777) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:639) [bci: 48]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j702 
y: i57 
=== Succesors ===
=== Usages ===
v787 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j702 y: i57  <|@  <|@
f <@~|@floating>@ <|@
tid j706 <|@
result v42|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.loadLongConfigValue(int) [bci: -1]
at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.cardTableAddress(GraalHotSpotVMConfigNode.java:114) [bci: 6]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:133) [bci: 7]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.setKey(EconomicMapImpl.java:777) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:639) [bci: 48]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
rawvalue: 4682670080
stableDimension: 0
stamp: i64 [4682670080] ⇊00000001171be000 ⇈00000001171be000
stampKind: i64
value: long[4682670080|0x1171be000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v787 v788 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v787 <|@
result [v40|QWORD[*] + v42|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j703 
index: j706 
=== Succesors ===
=== Usages ===
v707 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j703 index: j706  <|@  <|@
f <@~|@floating>@ <|@
tid i708 <|@
result byte[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.setKey(EconomicMapImpl.java:777) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:639) [bci: 48]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
rawvalue: 0
stableDimension: 0
stamp: i8 [0] ⇈0000000000000000
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v707 v715 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v707 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.setKey(EconomicMapImpl.java:777) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:639) [bci: 48]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v787 
value: i708 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a752 
=== Usages ===
=== Predecessor ===
j702 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v787 value: i708 stateAfter: - lastLocationAccess: - #next: a752  <|@  <|@
f <@~|@floating>@ <|@
tid j759 <|@
result v43|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483646] ⇈fffffffffffffffe
=== Inputs ===
value: i174 
=== Succesors ===
=== Usages ===
v776 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i174  <|@  <|@
f <@~|@floating>@ <|@
tid v776 <|@
result [v38|QWORD[.] + v43|QWORD * 4 + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times4
stamp: void*
=== Inputs ===
base: a346 
index: j759 
=== Succesors ===
=== Usages ===
a752 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a346 index: j759  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a752 <|@
result v44|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:640) [bci: 57]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: v613 
address: v776 
=== Succesors ===
next: v395 
=== Usages ===
v395 
=== Predecessor ===
v707 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v613 address: v776 #next: v395  <|@  <|@
f <@~|@floating>@ <|@
tid j762 <|@
result v45|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483646] ⇈fffffffffffffffe
=== Inputs ===
value: i179 
=== Succesors ===
=== Usages ===
v778 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i179  <|@  <|@
f <@~|@floating>@ <|@
tid v778 <|@
result [v38|QWORD[.] + v45|QWORD * 4 + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times4
stamp: void*
=== Inputs ===
base: a346 
index: j762 
=== Succesors ===
=== Usages ===
v395 j711 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a346 index: j762  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v395 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
location: Array: Object
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:640) [bci: 60]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v618 
address: v778 
value: a752 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j711 
=== Usages ===
=== Predecessor ===
a752 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v618 address: v778 value: a752 stateAfter: - lastLocationAccess: - #next: j711  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j711 <|@
result [v38|QWORD[.] + v45|QWORD * 4 + 20] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:640) [bci: 60]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v778 
=== Succesors ===
next: v715 
=== Usages ===
j712 
=== Predecessor ===
v395 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: v778 #next: v715  <|@  <|@
f <@~|@floating>@ <|@
tid j712 <|@
result v46|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:640) [bci: 60]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j711 
y: i57 
=== Succesors ===
=== Usages ===
v788 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j711 y: i57  <|@  <|@
f <@~|@floating>@ <|@
tid v788 <|@
result [v46|QWORD[*] + v42|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j712 
index: j706 
=== Succesors ===
=== Usages ===
v715 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j712 index: j706  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v715 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:640) [bci: 60]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v788 
value: i708 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v100 
=== Usages ===
=== Predecessor ===
j711 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v788 value: i708 stateAfter: - lastLocationAccess: - #next: v100  <|@  <|@
f <@*|@fixed>@ <|@
tid v100 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:638) [bci: 29]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
stamp: void
=== Inputs ===
loopBegin: v74 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v715 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v74  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v38|QWORD[.] = UNCOMPRESSPOINTER (input: v31|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@40538b65 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v39|DWORD[.] = MOV [v38|QWORD[.] + v34|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v38|QWORD[.] + v35|DWORD * 4 + 16], y: v39|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v41|QWORD[.] = LEA [v38|QWORD[.] + v35|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v40|QWORD[*] = SHR v41|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v42|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v40|QWORD[*] + v42|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v43|QWORD = MOVSXD v34|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v44|DWORD[.] = MOV [v38|QWORD[.] + v43|QWORD * 4 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v45|QWORD = MOVSXD v35|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v38|QWORD[.] + v45|QWORD * 4 + 20], y: v44|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v47|QWORD[.] = LEA [v38|QWORD[.] + v45|QWORD * 4 + 20] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v46|QWORD[*] = SHR v47|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v46|QWORD[*] + v42|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v33|DWORD] destination: B15 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v621 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:640) [bci: 60]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v74 
=== Succesors ===
next: v675 
=== Usages ===
=== Predecessor ===
v622 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v74 #next: v675  <|@  <|@
f <@~|@floating>@ <|@
tid i676 <|@
result int[-99355|0xfffffffffffe7be5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -99355
stableDimension: 0
stamp: i32 [-99355] ⇊00000000fffe7be5 ⇈00000000fffe7be5
stampKind: i32
value: int[-99355|0xfffffffffffe7be5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i663 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v675 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v660 
=== Predecessor ===
v621 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-99355|0xfffffffffffe7be5], Object[null]] destination: B16 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v616 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:640) [bci: 57]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v74 
=== Succesors ===
next: v673 
=== Usages ===
=== Predecessor ===
v617 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v74 #next: v673  <|@  <|@
f <@~|@floating>@ <|@
tid i674 <|@
result int[-96283|0xfffffffffffe87e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -96283
stableDimension: 0
stamp: i32 [-96283] ⇊00000000fffe87e5 ⇈00000000fffe87e5
stampKind: i32
value: int[-96283|0xfffffffffffe87e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i663 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v673 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v660 
=== Predecessor ===
v616 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-96283|0xfffffffffffe87e5], Object[null]] destination: B17 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v611 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setKey(EconomicMapImpl.java:777) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:639) [bci: 48]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v74 
=== Succesors ===
next: v671 
=== Usages ===
=== Predecessor ===
v612 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v74 #next: v671  <|@  <|@
f <@~|@floating>@ <|@
tid i672 <|@
result int[-93723|0xfffffffffffe91e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -93723
stableDimension: 0
stamp: i32 [-93723] ⇊00000000fffe91e5 ⇈00000000fffe91e5
stampKind: i32
value: int[-93723|0xfffffffffffe91e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i663 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v671 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v660 
=== Predecessor ===
v611 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-93723|0xfffffffffffe91e5], Object[null]] destination: B18 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v606 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:639) [bci: 45]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v74 
=== Succesors ===
next: v669 
=== Usages ===
=== Predecessor ===
v607 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v74 #next: v669  <|@  <|@
f <@~|@floating>@ <|@
tid i670 <|@
result int[-90395|0xfffffffffffe9ee5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -90395
stableDimension: 0
stamp: i32 [-90395] ⇊00000000fffe9ee5 ⇈00000000fffe9ee5
stampKind: i32
value: int[-90395|0xfffffffffffe9ee5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i663 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v669 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v660 
=== Predecessor ===
v606 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-90395|0xfffffffffffe9ee5], Object[null]] destination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v601 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v74 
=== Succesors ===
next: v666 
=== Usages ===
=== Predecessor ===
v602 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v74 #next: v666  <|@  <|@
f <@~|@floating>@ <|@
tid a668 <|@
result v48|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: d.a@789277403
stableDimension: 0
stamp: a!# Lcom/oracle/graal/enterprise/l/d$a;
stampKind: a -
value: Object[d.a@789277403]
=== Inputs ===
=== Succesors ===
=== Usages ===
a664 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i667 <|@
result int[-92732|0xfffffffffffe95c4] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -92732
stableDimension: 0
stamp: i32 [-92732] ⇊00000000fffe95c4 ⇈00000000fffe95c4
stampKind: i32
value: int[-92732|0xfffffffffffe95c4]
=== Inputs ===
=== Succesors ===
=== Usages ===
i663 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v666 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v660 
=== Predecessor ===
v601 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v48|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@789277403] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-92732|0xfffffffffffe95c4], v48|QWORD[.]] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B19" "B18" "B17" "B16" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i663 <|@
result v49|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-99355 - -90395] ⇊00000000fffe00c4 ⇈00000000fffefff5
valueDescription: i32
=== Inputs ===
merge: v660 
values: i667 i670 i672 i674 i676 
=== Succesors ===
=== Usages ===
v665 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v660 values: i667 i670 i672 i674 i676  <|@  <|@
f <@~|@floating>@ <|@
tid a664 <|@
result v50|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a# Lcom/oracle/graal/enterprise/l/d$a;
valueDescription: a -
=== Inputs ===
merge: v660 
values: a668 a105 a105 a105 a105 
=== Succesors ===
=== Usages ===
v665 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v660 values: a668 a105 a105 a105 a105  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v660 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v666 v669 v671 v673 v675 
=== Succesors ===
next: v665 
=== Usages ===
i663 a664 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v666 v669 v671 v673 v675 #next: v665  <|@  <|@
f <@*|@fixed>@ <|@
tid v665 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?76 
actionAndReason: i663 
speculation: a664 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v660 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?76 actionAndReason: i663 speculation: a664  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v49|DWORD, v50|QWORD[.]] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v49|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: v50|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:638) [bci: 29]
locals: v26|QWORD[.] - v30|DWORD - v24|DWORD 
org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
locals: - - 
org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:29, 2, 42] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B25" 
    xhandlers
    flags 
    probability 4603382888838454779
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v81 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:643) [bci: 69]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v74 
=== Succesors ===
next: v101 
=== Usages ===
=== Predecessor ===
v84 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v74 #next: v101  <|@  <|@
f <@*|@fixed>@ <|@
tid v101 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:646) [bci: 72]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v69 
=== Predecessor ===
v81 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v30|DWORD, v25|DWORD, v26|QWORD[.], v27|DWORD, v28|DWORD] destination: B22 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B25" 
    xhandlers
    flags 
    probability 4598666330787790318
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v71 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:646) [bci: 72]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v70 
=== Usages ===
=== Predecessor ===
v72 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v70  <|@  <|@
f <@*|@fixed>@ <|@
tid v70 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:646) [bci: 72]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v69 
=== Predecessor ===
v71 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v25|DWORD, v24|DWORD, v26|QWORD[.], v27|DWORD, v28|DWORD] destination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B25" 
    xhandlers
    flags 
    probability 4592639758501055923
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v267 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:646) [bci: 72]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v270 
=== Usages ===
=== Predecessor ===
v268 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v270  <|@  <|@
f <@*|@fixed>@ <|@
tid v270 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v69 
=== Predecessor ===
v267 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v19|DWORD, v18|DWORD, v23|QWORD[.], v17|DWORD, v22|DWORD] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B3" "B23" "B22" "B24" 
    successors "B26" "B47" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i102 <|@
result v51|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:646) [bci: 72]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v69 
values: i18 i224 i75 i258 
=== Succesors ===
=== Usages ===
?104 i107 i501 v517 ?114 ?115 v118 i128 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v69 values: i18 i224 i75 i258  <|@  <|@
f <@~|@floating>@ <|@
tid i103 <|@
result v52|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:646) [bci: 72]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v69 
values: i739 i223 i224 i746 
=== Succesors ===
=== Usages ===
?104 i167 ?114 i167 i167 v442 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v69 values: i739 i223 i224 i746  <|@  <|@
f <@~|@floating>@ <|@
tid a226 <|@
result v53|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a!# Lorg/graalvm/collections/EconomicMapImpl;
valueDescription: a -
=== Inputs ===
merge: v69 
values: a302 a228 a228 a336 
=== Succesors ===
=== Usages ===
v442 ?104 ?114 v785 v783 v779 ?115 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v69 values: a302 a228 a228 a336  <|@  <|@
f <@~|@floating>@ <|@
tid i246 <|@
result v54|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v69 
values: i740 i248 i248 i745 
=== Succesors ===
=== Usages ===
i195 i192 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v69 values: i740 i248 i248 i745  <|@  <|@
f <@~|@floating>@ <|@
tid i250 <|@
result v55|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v69 
values: i123 i252 i252 i269 
=== Succesors ===
=== Usages ===
v423 i212 v118 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v69 values: i123 i252 i252 i269  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v69 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:646) [bci: 72]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v68 v70 v101 v270 
=== Succesors ===
next: a753 
=== Usages ===
i102 i103 a226 i246 i250 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v68 v70 v101 v270 #next: a753  <|@  <|@
f <@~|@floating>@ <|@
tid v779 <|@
result [v53|QWORD[.] + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a226 
index: - 
=== Succesors ===
=== Usages ===
a753 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a226 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a753 <|@
result v56|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.entries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setKey(EconomicMapImpl.java:777) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:646) [bci: 75]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
nullCheck: false
stamp: n [Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v779 
=== Succesors ===
next: i754 
=== Usages ===
a398 v780 
=== Predecessor ===
v69 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v779 #next: i754  <|@  <|@
tid ?104 <|@
d <@d|@=== Debug Properties ===
bci: 72
code: ResolvedJavaMethodBytecode<EconomicMapImpl.remove(int)>
duringCall: false
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 646
stackSize: 0
=== Inputs ===
outerFrameState: ?163 
values: a226 - i102 - i103 
=== Succesors ===
=== Usages ===
v682 i754 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?163 values: a226 - i102 - i103  <|@  <|@
f <@~|@floating>@ <|@
tid v780 <|@
result [v56|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a753 
=== Succesors ===
=== Usages ===
i754 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a753  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i754 <|@
result v57|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setKey(EconomicMapImpl.java:777) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:646) [bci: 75]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?104 
guard: - 
address: v780 
=== Succesors ===
next: v630 
=== Usages ===
v404 v414 v514 v188 
=== Predecessor ===
a753 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?104 guard: - address: v780 #next: v630  <|@  <|@
f <@~|@floating>@ <|@
tid i107 <|@
result v58|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setKey(EconomicMapImpl.java:777) [bci: 6]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:646) [bci: 75]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i102 
y: i16 
=== Succesors ===
=== Usages ===
v781 i112 v404 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i102 y: i16  <|@  <|@
f <@~|@floating>@ <|@
tid v404 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setKey(EconomicMapImpl.java:777) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:646) [bci: 75]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i107 
y: i754 
=== Succesors ===
=== Usages ===
v630 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i107 y: i754  <|@  <|@
f <@*|@fixed>@ <|@
tid v630 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setKey(EconomicMapImpl.java:777) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:646) [bci: 75]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v404 
=== Succesors ===
trueSuccessor: v627 
falseSuccessor: v629 
=== Usages ===
=== Predecessor ===
i754 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v404 #trueSuccessor: v627 #falseSuccessor: v629  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v51|DWORD, v52|DWORD, v53|QWORD[.], v54|DWORD, v55|DWORD] = LABEL numbPhis: 5 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v56|DWORD[.] = MOV [v53|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:646) [bci: 72]
locals: v53|QWORD[.] - v51|DWORD - v52|DWORD 
org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
locals: - - 
org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] 
>@ <|@ instruction v57|DWORD = MOV [v56|DWORD[.] * 8 + 12] size: DWORD state [bci:72, 2, 42] <|@ <|@
      nr   -1  <|@ instruction v58|DWORD = SHL v51|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v57|DWORD, y: v58|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B25 -> B26 falseDestination: B25 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" "B46" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v627 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setKey(EconomicMapImpl.java:777) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:646) [bci: 75]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v634 
=== Usages ===
v412 
=== Predecessor ===
v630 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v634  <|@  <|@
f <@~|@floating>@ <|@
tid i112 <|@
result v59|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:647) [bci: 81]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
stamp: i32 [-2147483647 - 2147483647] ⇊0000000000000001
=== Inputs ===
x: i107 
y: i16 
=== Succesors ===
=== Usages ===
v782 v414 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i107 y: i16  <|@  <|@
f <@~|@floating>@ <|@
tid v414 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:647) [bci: 81]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i112 
y: i754 
=== Succesors ===
=== Usages ===
v634 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i112 y: i754  <|@  <|@
f <@*|@fixed>@ <|@
tid v634 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:647) [bci: 81]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v414 
=== Succesors ===
trueSuccessor: v631 
falseSuccessor: v633 
=== Usages ===
=== Predecessor ===
v627 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v414 #trueSuccessor: v631 #falseSuccessor: v633  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v59|DWORD = INC v58|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v57|DWORD, y: v59|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B26 -> B27 falseDestination: B26 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B39" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v631 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:647) [bci: 81]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v412 
=== Usages ===
v421 
=== Predecessor ===
v634 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v412  <|@  <|@
f <@~|@floating>@ <|@
tid a398 <|@
result v60|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setKey(EconomicMapImpl.java:777) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:646) [bci: 75]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
op: Uncompress
stamp: a [Ljava/lang/Object;
=== Inputs ===
value: a753 
=== Succesors ===
=== Usages ===
v784 v782 v781 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a753  <|@  <|@
f <@~|@floating>@ <|@
tid v781 <|@
result [v60|QWORD[.] + v58|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a398 
index: i107 
=== Succesors ===
=== Usages ===
v412 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a398 index: i107  <|@  <|@
f <@~|@floating>@ <|@
tid a453 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setKey(EconomicMapImpl.java:777) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:646) [bci: 75]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
rawvalue: null
stableDimension: 0
stamp: n - NULL
stampKind: n -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v412 v421 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v412 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
location: Array: Object
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setKey(EconomicMapImpl.java:777) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:646) [bci: 75]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v627 
address: v781 
value: a453 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v421 
=== Usages ===
=== Predecessor ===
v631 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v627 address: v781 value: a453 stateAfter: - lastLocationAccess: - #next: v421  <|@  <|@
f <@~|@floating>@ <|@
tid v782 <|@
result [v60|QWORD[.] + v59|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a398 
index: i112 
=== Succesors ===
=== Usages ===
v421 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a398 index: i112  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v421 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
location: Array: Object
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:647) [bci: 81]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v631 
address: v782 
value: a453 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v121 
=== Usages ===
=== Predecessor ===
v412 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v631 address: v782 value: a453 stateAfter: - lastLocationAccess: - #next: v121  <|@  <|@
f <@~|@floating>@ <|@
tid v785 <|@
result [v53|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a226 
index: - 
=== Succesors ===
=== Usages ===
i755 v437 i757 v439 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a226 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v118 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:648) [bci: 91]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i102 
y: i250 
=== Succesors ===
=== Usages ===
v121 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i102 y: i250  <|@  <|@
f <@*|@fixed>@ <|@
tid v121 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:648) [bci: 91]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
stamp: void
trueSuccessorProbability: 0.640014121444422
=== Inputs ===
condition: v118 
=== Succesors ===
trueSuccessor: v119 
falseSuccessor: v120 
=== Usages ===
=== Predecessor ===
v421 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v118 #trueSuccessor: v119 #falseSuccessor: v120  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v60|QWORD[.] = UNCOMPRESSPOINTER (input: v56|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@40538b65 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v60|QWORD[.] + v58|DWORD * 4 + 16], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v60|QWORD[.] + v59|DWORD * 4 + 16], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v55|DWORD, y: v51|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.640014121444422 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4603939954262974325
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v119 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:650) [bci: 94]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v728 
=== Usages ===
=== Predecessor ===
v121 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v728  <|@  <|@
f <@~|@floating>@ <|@
tid v517 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i102 
y: i16 
=== Succesors ===
=== Usages ===
v728 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i102 y: i16  <|@  <|@
f <@*|@fixed>@ <|@
tid v728 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:651) [bci: 112]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v517 
=== Succesors ===
trueSuccessor: v724 
falseSuccessor: v727 
=== Usages ===
=== Predecessor ===
v119 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v517 #trueSuccessor: v724 #falseSuccessor: v727  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v51|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B28 -> B29 falseDestination: B28 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B32" 
    xhandlers
    flags 
    probability 4599436354635603829
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v724 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:651) [bci: 112]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v722 
=== Usages ===
=== Predecessor ===
v728 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v722  <|@  <|@
f <@*|@fixed>@ <|@
tid v722 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:651) [bci: 112]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v721 
=== Predecessor ===
v724 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B29 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" "B38" 
    xhandlers
    flags 
    probability 4599436354635603829
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v727 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:651) [bci: 112]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v734 
=== Usages ===
=== Predecessor ===
v728 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v734  <|@  <|@
f <@~|@floating>@ <|@
tid i501 <|@
result v61|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i32
=== Inputs ===
x: i102 
y: i17 
=== Succesors ===
=== Usages ===
i512 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i102 y: i17  <|@  <|@
f <@~|@floating>@ <|@
tid i512 <|@
result v62|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i501 
y: i16 
=== Succesors ===
=== Usages ===
v514 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i501 y: i16  <|@  <|@
f <@~|@floating>@ <|@
tid v514 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i512 
y: i754 
=== Succesors ===
=== Usages ===
v734 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i512 y: i754  <|@  <|@
f <@*|@fixed>@ <|@
tid v734 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:651) [bci: 112]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v514 
=== Succesors ===
trueSuccessor: v725 
falseSuccessor: v733 
=== Usages ===
=== Predecessor ===
v727 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v514 #trueSuccessor: v725 #falseSuccessor: v733  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v61|DWORD = DEC v51|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v62|DWORD = SHL v61|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v57|DWORD, y: v62|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B30 -> B31 falseDestination: B30 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B32" 
    xhandlers
    flags 
    probability 4599436354635603829
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v725 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:651) [bci: 112]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v723 
=== Usages ===
=== Predecessor ===
v734 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v723  <|@  <|@
f <@*|@fixed>@ <|@
tid v723 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:651) [bci: 112]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v721 
=== Predecessor ===
v725 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B29" "B31" 
    successors "B33" 
    xhandlers
    flags 
    probability 4603939954262974325
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v721 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:651) [bci: 112]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v722 v723 
=== Succesors ===
next: v423 
=== Usages ===
v519 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v722 v723 #next: v423  <|@  <|@
f <@~|@floating>@ <|@
tid v783 <|@
result [v53|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a226 
index: - 
=== Succesors ===
=== Usages ===
v423 v434 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a226 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v423 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: EconomicMapImpl.totalEntries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:650) [bci: 101]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v783 
value: i250 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: i755 
=== Usages ===
=== Predecessor ===
v721 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v783 value: i250 stateAfter: - lastLocationAccess: - #next: i755  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i755 <|@
result v63|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.deletedEntries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:653) [bci: 130]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v785 
=== Succesors ===
next: v126 
=== Usages ===
i720 
=== Predecessor ===
v423 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v785 #next: v126  <|@  <|@
f <@*|@fixed>@ <|@
tid v126 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:651) [bci: 104]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v127 
=== Predecessor ===
i755 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v53|QWORD[.] + 12], y: v55|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v63|DWORD = MOV [v53|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v51|DWORD, v55|DWORD, v63|DWORD] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" "B36" 
    successors "B34" "B35" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4604463905423979885
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i128 <|@
result v64|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v127 
values: i102 i135 
=== Succesors ===
=== Usages ===
i135 v130 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v127 values: i102 i135  <|@  <|@
f <@~|@floating>@ <|@
tid i212 <|@
result v65|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v127 
values: i250 i145 
=== Succesors ===
=== Usages ===
i145 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v127 values: i250 i145  <|@  <|@
f <@~|@floating>@ <|@
tid i720 <|@
result v66|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v127 
values: i755 i149 
=== Succesors ===
=== Usages ===
i149 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v127 values: i755 i149  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v127 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 1.0908890324817575
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:651) [bci: 104]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v126 
=== Succesors ===
next: v134 
=== Usages ===
i128 v131 v141 v152 i212 i720 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v126 #next: v134  <|@  <|@
f <@~|@floating>@ <|@
tid v130 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:651) [bci: 105]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i128 
y: i16 
=== Succesors ===
=== Usages ===
v134 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i128 y: i16  <|@  <|@
f <@*|@fixed>@ <|@
tid v134 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:651) [bci: 105]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
stamp: void
trueSuccessorProbability: 0.1273946083388714
=== Inputs ===
condition: v130 
=== Succesors ===
trueSuccessor: v131 
falseSuccessor: v133 
=== Usages ===
=== Predecessor ===
v127 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v130 #trueSuccessor: v131 #falseSuccessor: v133  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v64|DWORD, v65|DWORD, v66|DWORD] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v64|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.1273946083388714 condition: < trueDestination: B33 -> B34 falseDestination: B33 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B45" 
    xhandlers
    flags 
    probability 4591073578059033886
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v131 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:661) [bci: 162]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v127 
=== Succesors ===
next: v165 
=== Usages ===
=== Predecessor ===
v134 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v127 #next: v165  <|@  <|@
f <@*|@fixed>@ <|@
tid v165 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v164 
=== Predecessor ===
v131 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v52|DWORD] destination: B34 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" "B37" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4603662760749496265
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v133 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:651) [bci: 108]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: a756 
=== Usages ===
v519 
=== Predecessor ===
v134 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a756  <|@  <|@
f <@~|@floating>@ <|@
tid v519 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
kf: v721 v133 
=== Succesors ===
=== Usages ===
a756 
=== Predecessor ===
- >@ <|@
instruction <@c|@com.oracle.graal.enterprise.k.c>@ kf: v721 v133  <|@  <|@
f <@~|@floating>@ <|@
tid i135 <|@
result v67|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:651) [bci: 111]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
stamp: i32
=== Inputs ===
x: i128 
y: i17 
=== Succesors ===
=== Usages ===
i128 i137 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i128 y: i17  <|@  <|@
f <@~|@floating>@ <|@
tid i137 <|@
result v68|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 6]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:651) [bci: 112]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i135 
y: i16 
=== Succesors ===
=== Usages ===
v784 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i135 y: i16  <|@  <|@
f <@~|@floating>@ <|@
tid v784 <|@
result [v60|QWORD[.] + v68|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a398 
index: i137 
=== Succesors ===
=== Usages ===
a756 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a398 index: i137  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a756 <|@
result v69|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:651) [bci: 112]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: v519 
address: v784 
=== Succesors ===
next: v143 
=== Usages ===
v456 
=== Predecessor ===
v133 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v519 address: v784 #next: v143  <|@  <|@
f <@~|@floating>@ <|@
tid v456 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:651) [bci: 115]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
stamp: void
=== Inputs ===
value: a756 
=== Succesors ===
=== Usages ===
v143 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a756  <|@  <|@
f <@*|@fixed>@ <|@
tid v143 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:651) [bci: 115]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
stamp: void
trueSuccessorProbability: 0.09548013245033116
=== Inputs ===
condition: v456 
=== Succesors ===
trueSuccessor: v140 
falseSuccessor: v141 
=== Usages ===
=== Predecessor ===
a756 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v456 #trueSuccessor: v140 #falseSuccessor: v141  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v67|DWORD = DEC v64|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v68|DWORD = SHL v67|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v69|DWORD[.] = MOV [v60|QWORD[.] + v68|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v69|DWORD[.], y: v69|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09548013245033116 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B33" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4588544039611883407
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v140 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:652) [bci: 118]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v434 
=== Usages ===
=== Predecessor ===
v143 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v434  <|@  <|@
f <@~|@floating>@ <|@
tid i145 <|@
result v70|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:652) [bci: 124]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
stamp: i32
=== Inputs ===
x: i212 
y: i17 
=== Succesors ===
=== Usages ===
v434 i212 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i212 y: i17  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v434 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: EconomicMapImpl.totalEntries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:652) [bci: 125]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v783 
value: i145 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v437 
=== Usages ===
=== Predecessor ===
v140 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v783 value: i145 stateAfter: - lastLocationAccess: - #next: v437  <|@  <|@
f <@~|@floating>@ <|@
tid i149 <|@
result v71|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:653) [bci: 134]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
stamp: i32
=== Inputs ===
x: i720 
y: i17 
=== Succesors ===
=== Usages ===
v437 i720 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i720 y: i17  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v437 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: EconomicMapImpl.deletedEntries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:653) [bci: 135]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v785 
value: i149 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v152 
=== Usages ===
=== Predecessor ===
v434 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v785 value: i149 stateAfter: - lastLocationAccess: - #next: v152  <|@  <|@
f <@*|@fixed>@ <|@
tid v152 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:651) [bci: 104]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
stamp: void
=== Inputs ===
loopBegin: v127 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v437 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v127  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v70|DWORD = DEC v65|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v53|QWORD[.] + 12], y: v70|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v71|DWORD = DEC v66|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v53|QWORD[.] + 16], y: v71|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v67|DWORD, v70|DWORD, v71|DWORD] destination: B36 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B45" 
    xhandlers
    flags 
    probability 4603138809588490704
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v141 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:661) [bci: 162]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v127 
=== Succesors ===
next: v166 
=== Usages ===
=== Predecessor ===
v143 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v127 #next: v166  <|@  <|@
f <@*|@fixed>@ <|@
tid v166 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v164 
=== Predecessor ===
v141 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v52|DWORD] destination: B37 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v733 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:651) [bci: 112]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v688 
=== Usages ===
=== Predecessor ===
v734 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v688  <|@  <|@
f <@~|@floating>@ <|@
tid a690 <|@
result v72|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: d.a@480163006
stableDimension: 0
stamp: a!# Lcom/oracle/graal/enterprise/k/d$a;
stampKind: a -
value: Object[d.a@480163006]
=== Inputs ===
=== Succesors ===
=== Usages ===
a692 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i689 <|@
result int[-109083|0xfffffffffffe55e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -109083
stableDimension: 0
stamp: i32 [-109083] ⇊00000000fffe55e5 ⇈00000000fffe55e5
stampKind: i32
value: int[-109083|0xfffffffffffe55e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i691 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v688 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v687 
=== Predecessor ===
v733 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v72|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@480163006] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-109083|0xfffffffffffe55e5], v72|QWORD[.]] destination: B38 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B40" "B42" 
    xhandlers
    flags 
    probability 4600156548991992086
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v120 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:657) [bci: 144]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v643 
=== Usages ===
=== Predecessor ===
v121 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v643  <|@  <|@
f <@~|@floating>@ <|@
tid i187 <|@
result int[8|0x8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.maybeCompress(EconomicMapImpl.java:475) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:658) [bci: 157]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
rawvalue: 8
stableDimension: 0
stamp: i32 [8] ⇊0000000000000008 ⇈0000000000000008
stampKind: i32
value: int[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
v188 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v188 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.maybeCompress(EconomicMapImpl.java:475) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:658) [bci: 157]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i754 
y: i187 
=== Succesors ===
=== Usages ===
v643 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i754 y: i187  <|@  <|@
f <@*|@fixed>@ <|@
tid v643 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.maybeCompress(EconomicMapImpl.java:475) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:658) [bci: 157]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v188 
=== Succesors ===
trueSuccessor: v642 
falseSuccessor: v640 
=== Usages ===
=== Predecessor ===
v120 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v188 #trueSuccessor: v642 #falseSuccessor: v640  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v57|DWORD y: 8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v642 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.maybeCompress(EconomicMapImpl.java:475) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:658) [bci: 157]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v694 
=== Usages ===
=== Predecessor ===
v643 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v694  <|@  <|@
f <@~|@floating>@ <|@
tid i695 <|@
result int[-112915|0xfffffffffffe46ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -112915
stableDimension: 0
stamp: i32 [-112915] ⇊00000000fffe46ed ⇈00000000fffe46ed
stampKind: i32
value: int[-112915|0xfffffffffffe46ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i691 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v694 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v687 
=== Predecessor ===
v642 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-112915|0xfffffffffffe46ed], Object[null]] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B38" "B40" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i691 <|@
result v73|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-112915 - -109083] ⇊00000000fffe44e5 ⇈00000000fffe57ed
valueDescription: i32
=== Inputs ===
merge: v687 
values: i689 i695 
=== Succesors ===
=== Usages ===
v693 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v687 values: i689 i695  <|@  <|@
f <@~|@floating>@ <|@
tid a692 <|@
result v74|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a# Lcom/oracle/graal/enterprise/k/d$a;
valueDescription: a -
=== Inputs ===
merge: v687 
values: a690 a105 
=== Succesors ===
=== Usages ===
v693 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v687 values: a690 a105  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v687 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v688 v694 
=== Succesors ===
next: v693 
=== Usages ===
i691 a692 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v688 v694 #next: v693  <|@  <|@
tid ?114 <|@
d <@d|@=== Debug Properties ===
bci: 81
code: ResolvedJavaMethodBytecode<EconomicMapImpl.remove(int)>
duringCall: true
localsSize: 5
locksSize: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:647) [bci: 81]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 647
stackSize: 0
=== Inputs ===
outerFrameState: ?163 
values: a226 - i102 - i103 
=== Succesors ===
=== Usages ===
?115 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?163 values: a226 - i102 - i103  <|@  <|@
tid ?115 <|@
d <@d|@=== Debug Properties ===
bci: 11
code: ResolvedJavaMethodBytecode<EconomicMapImpl.setRawValue(int, Object)>
duringCall: false
localsSize: 3
locksSize: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:647) [bci: 81]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 792
stackSize: 0
=== Inputs ===
outerFrameState: ?114 
values: a226 i102 a105 
=== Succesors ===
=== Usages ===
v693 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?114 values: a226 i102 a105  <|@  <|@
f <@*|@fixed>@ <|@
tid v693 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?115 
actionAndReason: i691 
speculation: a692 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v687 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?115 actionAndReason: i691 speculation: a692  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v73|DWORD, v74|QWORD[.]] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v73|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: v74|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:792) [bci: 11]
locals: v53|QWORD[.] v51|DWORD Object[null] 
org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:647) [bci: 81]
locals: v53|QWORD[.] - v51|DWORD - v52|DWORD 
org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
locals: - - 
org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:11, 81, 2, 42] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4600156548991992086
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v640 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.maybeCompress(EconomicMapImpl.java:475) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:658) [bci: 157]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: i757 
=== Usages ===
=== Predecessor ===
v643 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i757  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i757 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.deletedEntries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:657) [bci: 146]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v785 
=== Succesors ===
next: v439 
=== Usages ===
i154 
=== Predecessor ===
v640 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v785 #next: v439  <|@  <|@
f <@~|@floating>@ <|@
tid i154 <|@
result v76|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:657) [bci: 150]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
stamp: i32
=== Inputs ===
x: i757 
y: i16 
=== Succesors ===
=== Usages ===
v439 v197 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i757 y: i16  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v439 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: EconomicMapImpl.deletedEntries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:657) [bci: 151]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v785 
value: i154 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v200 
=== Usages ===
=== Predecessor ===
i757 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v785 value: i154 stateAfter: - lastLocationAccess: - #next: v200  <|@  <|@
f <@~|@floating>@ <|@
tid i192 <|@
result v77|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.RightShiftNode$$Lambda$143/1909420937@4b2846e5
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.maybeCompress(EconomicMapImpl.java:475) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:658) [bci: 157]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
stamp: i32 [-1073741824 - 1073741823]
=== Inputs ===
x: i246 
y: i16 
=== Succesors ===
=== Usages ===
i196 
=== Predecessor ===
- >@ <|@
instruction <@>>|@org.graalvm.compiler.nodes.calc.RightShiftNode>@ x: i246 y: i16  <|@  <|@
f <@~|@floating>@ <|@
tid i194 <|@
result int[2|0x2] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.maybeCompress(EconomicMapImpl.java:475) [bci: 24]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:658) [bci: 157]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
rawvalue: 2
stableDimension: 0
stamp: i32 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
i195 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i195 <|@
result v78|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.RightShiftNode$$Lambda$143/1909420937@4b2846e5
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.maybeCompress(EconomicMapImpl.java:475) [bci: 25]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:658) [bci: 157]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
stamp: i32 [-536870912 - 536870911]
=== Inputs ===
x: i246 
y: i194 
=== Succesors ===
=== Usages ===
i196 
=== Predecessor ===
- >@ <|@
instruction <@>>|@org.graalvm.compiler.nodes.calc.RightShiftNode>@ x: i246 y: i194  <|@  <|@
f <@~|@floating>@ <|@
tid i196 <|@
result v79|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.maybeCompress(EconomicMapImpl.java:475) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:658) [bci: 157]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
stamp: i32 [-1610612736 - 1610612734]
=== Inputs ===
x: i192 
y: i195 
=== Succesors ===
=== Usages ===
v197 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i192 y: i195  <|@  <|@
f <@~|@floating>@ <|@
tid v197 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.maybeCompress(EconomicMapImpl.java:475) [bci: 27]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:658) [bci: 157]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i154 
y: i196 
=== Succesors ===
=== Usages ===
v200 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i154 y: i196  <|@  <|@
f <@*|@fixed>@ <|@
tid v200 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.maybeCompress(EconomicMapImpl.java:475) [bci: 27]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:658) [bci: 157]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
stamp: void
trueSuccessorProbability: 0.9807503712628541
=== Inputs ===
condition: v197 
=== Succesors ===
trueSuccessor: v198 
falseSuccessor: v199 
=== Usages ===
=== Predecessor ===
v439 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v197 #trueSuccessor: v198 #falseSuccessor: v199  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v75|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction v76|DWORD = ADD (x: v75|DWORD, ~y: [v53|QWORD[.] + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v53|QWORD[.] + 16], y: v76|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v77|DWORD = SAR v54|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v78|DWORD = SAR v54|DWORD y: 2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v79|DWORD = ADD (x: v77|DWORD, y: v78|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v79|DWORD, y: v76|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9807503712628541 condition: > trueDestination: B42 -> B43 falseDestination: B42 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4600031716514929204
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v198 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.maybeCompress(EconomicMapImpl.java:478) [bci: 36]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:658) [bci: 157]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v211 
=== Usages ===
=== Predecessor ===
v200 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v211  <|@  <|@
f <@*|@fixed>@ <|@
tid v211 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v164 
=== Predecessor ===
v198 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v52|DWORD] destination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4574639300685707378
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v199 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.maybeCompress(EconomicMapImpl.java:476) [bci: 30]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:658) [bci: 157]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: i202 
=== Usages ===
=== Predecessor ===
v200 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i202  <|@  <|@
tid v442 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.maybeCompress(EconomicMapImpl.java:476) [bci: 32]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:658) [bci: 157]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
returnStamp: i32
signature: [Ljdk.vm.ci.meta.JavaType;@31d3fe7
stamp: void
targetMethod: HotSpotMethod<EconomicMapImpl.compressLarge(int)>
=== Inputs ===
arguments: a226 i103 
=== Succesors ===
=== Usages ===
i202 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a226 i103  <|@  <|@
tid ?206 <|@
d <@d|@=== Debug Properties ===
bci: 157
code: ResolvedJavaMethodBytecode<EconomicMapImpl.remove(int)>
duringCall: true
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 658
stackSize: 0
=== Inputs ===
outerFrameState: ?163 
values: - - - - - 
=== Succesors ===
=== Usages ===
?646 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?163 values: - - - - -  <|@  <|@
tid ?646 <|@
d <@d|@=== Debug Properties ===
bci: 32
code: ResolvedJavaMethodBytecode<EconomicMapImpl.maybeCompress(int)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 476
stackSize: 0
=== Inputs ===
outerFrameState: ?206 
values: - - 
=== Succesors ===
=== Usages ===
i202 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?206 values: - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i202 <|@
result v80|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 32
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.maybeCompress(EconomicMapImpl.java:476) [bci: 32]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:658) [bci: 157]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
polymorphic: false
stamp: i32
targetMethod: Direct#EconomicMapImpl.compressLarge
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v442 
stateDuring: ?646 
=== Succesors ===
next: v168 
=== Usages ===
i167 
=== Predecessor ===
v199 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v442 stateDuring: ?646 #next: v168  <|@  <|@
f <@*|@fixed>@ <|@
tid v168 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v164 
=== Predecessor ===
i202 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v53|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v52|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.maybeCompress(EconomicMapImpl.java:476) [bci: 32]
locals: - - 
org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:658) [bci: 157]
locals: - - - - - 
org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
locals: - - 
org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<EconomicMapImpl.compressLarge(int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:32, 157, 2, 42] <|@ <|@
      nr   -1  <|@ instruction v80|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v80|DWORD] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B34" "B37" "B44" "B43" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i167 <|@
result v81|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v164 
values: i103 i103 i202 i103 
=== Succesors ===
=== Usages ===
v443 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v164 values: i103 i103 i202 i103  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v164 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v165 v166 v168 v211 
=== Succesors ===
next: v443 
=== Usages ===
i167 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v165 v166 v168 v211 #next: v443  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v443 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: EconomicMapImpl$SparseMapIterator.current
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 45]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v766 
value: i167 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v42 
=== Usages ===
=== Predecessor ===
v164 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v766 value: i167 stateAfter: - lastLocationAccess: - #next: v42  <|@  <|@
f <@*|@fixed>@ <|@
tid v42 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:679) [bci: 48]
stamp: void
=== Inputs ===
result: - 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v443 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: - memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v81|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v81|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B48" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v633 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:647) [bci: 81]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v685 
=== Usages ===
=== Predecessor ===
v634 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v685  <|@  <|@
f <@~|@floating>@ <|@
tid i686 <|@
result int[-106267|0xfffffffffffe60e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -106267
stableDimension: 0
stamp: i32 [-106267] ⇊00000000fffe60e5 ⇈00000000fffe60e5
stampKind: i32
value: int[-106267|0xfffffffffffe60e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i680 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v685 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v677 
=== Predecessor ===
v633 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-106267|0xfffffffffffe60e5]] destination: B46 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B48" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v629 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setKey(EconomicMapImpl.java:777) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:646) [bci: 75]
at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
stamp: void
=== Inputs ===
=== Succesors ===
next: v683 
=== Usages ===
=== Predecessor ===
v630 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v683  <|@  <|@
f <@~|@floating>@ <|@
tid i684 <|@
result int[-103707|0xfffffffffffe6ae5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -103707
stableDimension: 0
stamp: i32 [-103707] ⇊00000000fffe6ae5 ⇈00000000fffe6ae5
stampKind: i32
value: int[-103707|0xfffffffffffe6ae5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i680 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v683 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v677 
=== Predecessor ===
v629 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-103707|0xfffffffffffe6ae5]] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" "B46" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i680 <|@
result v82|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-106267 - -102411] ⇊00000000fffe60e5 ⇈00000000fffe6ff5
valueDescription: i32
=== Inputs ===
merge: v677 
values: i684 i686 
=== Succesors ===
=== Usages ===
v682 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v677 values: i684 i686  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v677 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v683 v685 
=== Succesors ===
next: v682 
=== Usages ===
i680 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v683 v685 #next: v682  <|@  <|@
f <@*|@fixed>@ <|@
tid v682 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?104 
actionAndReason: i680 
speculation: a105 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v677 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?104 actionAndReason: i680 speculation: a105  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v82|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v82|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:646) [bci: 72]
locals: v53|QWORD[.] - v51|DWORD - v52|DWORD 
org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
locals: - - 
org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:72, 2, 42] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v586 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.access$200(EconomicMapImpl.java:56) [bci: 2]
at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:676) [bci: 24]
stamp: void
=== Inputs ===
=== Succesors ===
next: v655 
=== Usages ===
=== Predecessor ===
v587 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v655  <|@  <|@
f <@~|@floating>@ <|@
tid i659 <|@
result int[-82715|0xfffffffffffebce5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -82715
stableDimension: 0
stamp: i32 [-82715] ⇊00000000fffebce5 ⇈00000000fffebce5
stampKind: i32
value: int[-82715|0xfffffffffffebce5]
=== Inputs ===
=== Succesors ===
=== Usages ===
v655 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v655 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?2 
actionAndReason: i659 
speculation: a105 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v586 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?2 actionAndReason: i659 speculation: a105  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -82715 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:675) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@2981e1af slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD[.] = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:675) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction v2|DWORD[.] = MOV [v1|DWORD[.] * 8 + 28] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOV [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = DEC v3|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|QWORD[.] = UNCOMPRESSPOINTER (input: v1|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@40538b65 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TEST (x: v2|DWORD[.], y: v2|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.23442118598057549 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" "B49" 
    xhandlers
    flags 
    probability 4605070940468357669
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v10|DWORD[.] = MOV [v1|DWORD[.] * 8 + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = SHL v4|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:675) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction CMP (x: v11|DWORD, y: [v10|DWORD[.] * 8 + 12]) size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B4 -> B5 falseDestination: B4 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B24" 
    xhandlers
    flags 
    probability 4605070940468357669
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v12|QWORD[.] = UNCOMPRESSPOINTER (input: v10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@40538b65 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v13|DWORD[.] = MOV [v12|QWORD[.] + v11|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|QWORD[.] = UNCOMPRESSPOINTER (input: v13|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@40538b65 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v5|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v14|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.access$300(EconomicMapImpl.java:56) [bci: 2]
locals: - - 
org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:676) [bci: 27]
locals: v0|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<EconomicMapImpl.findAndRemoveHash(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:2, 27] <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v16|DWORD[.] = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.access$300(EconomicMapImpl.java:56) [bci: 5]
stack: v15|DWORD 
locals: - - 
org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:676) [bci: 27]
locals: v0|QWORD[.] 
>@ <|@ instruction v17|DWORD = MOV [v16|DWORD[.] * 8 + 12] size: DWORD state [bci:5, 27] <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = MOV [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v19|DWORD = DEC v18|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = SUB (x: v17|DWORD, ~y: v19|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = DEC v20|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v22|DWORD = DEC v17|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v23|QWORD[.] = UNCOMPRESSPOINTER (input: v16|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@40538b65 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMP v21|DWORD y: 9 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.8554295858465635 condition: < trueDestination: B5 -> B6 falseDestination: B5 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4604074023238621295
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v18|DWORD, v19|DWORD, v23|QWORD[.], v17|DWORD, v22|DWORD] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B2" "B6" 
    successors "B8" "B23" 
    xhandlers
    flags 
    probability 4605880244273396978
    begin_IR
      LIR
      nr   -1  <|@ instruction [v24|DWORD, v25|DWORD, v26|QWORD[.], v27|DWORD, v28|DWORD] = LABEL numbPhis: 5 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v29|DWORD[.] = MOV [v26|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v29|DWORD[.], y: v29|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.6758796339967927 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" 
    xhandlers
    flags 
    probability 4603382888838454779
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v25|DWORD] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B20" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4603225620296671221
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v31|DWORD[.] = MOV [v26|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:638) [bci: 29]
locals: v26|QWORD[.] - v30|DWORD - v24|DWORD 
org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
locals: - - 
org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] 
>@ <|@ instruction CMP [v31|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} state [bci:29, 2, 42] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B19" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4603225620296671221
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v32|DWORD = MOV [v31|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v33|DWORD = INC v30|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v34|DWORD = SHL v33|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v32|DWORD, y: v34|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B11 -> B12 falseDestination: B11 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" "B18" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4603225620296671221
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v35|DWORD = SHL v30|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v32|DWORD, y: v35|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B12 -> B13 falseDestination: B12 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B17" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4603225620296671221
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v36|DWORD = INC v34|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v32|DWORD, y: v36|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B16" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4603225620296671221
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v37|DWORD = INC v35|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v32|DWORD, y: v37|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B9" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4603225620296671221
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v38|QWORD[.] = UNCOMPRESSPOINTER (input: v31|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@40538b65 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v39|DWORD[.] = MOV [v38|QWORD[.] + v34|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v38|QWORD[.] + v35|DWORD * 4 + 16], y: v39|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v41|QWORD[.] = LEA [v38|QWORD[.] + v35|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v40|QWORD[*] = SHR v41|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v42|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v40|QWORD[*] + v42|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v43|QWORD = MOVSXD v34|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v44|DWORD[.] = MOV [v38|QWORD[.] + v43|QWORD * 4 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v45|QWORD = MOVSXD v35|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v38|QWORD[.] + v45|QWORD * 4 + 20], y: v44|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v47|QWORD[.] = LEA [v38|QWORD[.] + v45|QWORD * 4 + 20] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v46|QWORD[*] = SHR v47|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v46|QWORD[*] + v42|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v33|DWORD] destination: B15 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B15" 
    successors "B10" "B22" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4607807854194933496
    begin_IR
      LIR
      nr   -1  <|@ instruction [v30|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v28|DWORD, y: v30|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.49233439910722987 condition: > trueDestination: B9 -> B10 falseDestination: B9 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B25" 
    xhandlers
    flags 
    probability 4603382888838454779
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v30|DWORD, v25|DWORD, v26|QWORD[.], v27|DWORD, v28|DWORD] destination: B22 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B3" "B23" "B22" "B24" 
    successors "B26" "B47" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v51|DWORD, v52|DWORD, v53|QWORD[.], v54|DWORD, v55|DWORD] = LABEL numbPhis: 5 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v56|DWORD[.] = MOV [v53|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:646) [bci: 72]
locals: v53|QWORD[.] - v51|DWORD - v52|DWORD 
org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
locals: - - 
org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] 
>@ <|@ instruction v57|DWORD = MOV [v56|DWORD[.] * 8 + 12] size: DWORD state [bci:72, 2, 42] <|@ <|@
      nr   -1  <|@ instruction v58|DWORD = SHL v51|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v57|DWORD, y: v58|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B25 -> B26 falseDestination: B25 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" "B46" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v59|DWORD = INC v58|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v57|DWORD, y: v59|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B26 -> B27 falseDestination: B26 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B39" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v60|QWORD[.] = UNCOMPRESSPOINTER (input: v56|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@40538b65 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v60|QWORD[.] + v58|DWORD * 4 + 16], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v60|QWORD[.] + v59|DWORD * 4 + 16], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v55|DWORD, y: v51|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.640014121444422 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4603939954262974325
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v51|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B28 -> B29 falseDestination: B28 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" "B38" 
    xhandlers
    flags 
    probability 4599436354635603829
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v61|DWORD = DEC v51|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v62|DWORD = SHL v61|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v57|DWORD, y: v62|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B30 -> B31 falseDestination: B30 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B32" 
    xhandlers
    flags 
    probability 4599436354635603829
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B29" "B31" 
    successors "B33" 
    xhandlers
    flags 
    probability 4603939954262974325
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v53|QWORD[.] + 12], y: v55|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v63|DWORD = MOV [v53|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v51|DWORD, v55|DWORD, v63|DWORD] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" "B37" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4603662760749496265
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v67|DWORD = DEC v64|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v68|DWORD = SHL v67|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v69|DWORD[.] = MOV [v60|QWORD[.] + v68|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v69|DWORD[.], y: v69|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09548013245033116 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B33" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4588544039611883407
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v70|DWORD = DEC v65|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v53|QWORD[.] + 12], y: v70|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v71|DWORD = DEC v66|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v53|QWORD[.] + 16], y: v71|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v67|DWORD, v70|DWORD, v71|DWORD] destination: B36 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" "B36" 
    successors "B34" "B35" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4604463905423979885
    begin_IR
      LIR
      nr   -1  <|@ instruction [v64|DWORD, v65|DWORD, v66|DWORD] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v64|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.1273946083388714 condition: < trueDestination: B33 -> B34 falseDestination: B33 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B45" 
    xhandlers
    flags 
    probability 4603138809588490704
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v52|DWORD] destination: B37 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B34" "B37" "B44" "B43" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr   -1  <|@ instruction [v81|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v81|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B40" "B42" 
    xhandlers
    flags 
    probability 4600156548991992086
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v57|DWORD y: 8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4600156548991992086
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v75|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction v76|DWORD = ADD (x: v75|DWORD, ~y: [v53|QWORD[.] + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v53|QWORD[.] + 16], y: v76|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v77|DWORD = SAR v54|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v78|DWORD = SAR v54|DWORD y: 2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v79|DWORD = ADD (x: v77|DWORD, y: v78|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v79|DWORD, y: v76|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9807503712628541 condition: > trueDestination: B42 -> B43 falseDestination: B42 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4600031716514929204
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v52|DWORD] destination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B32" 
    xhandlers
    flags 
    probability 4599436354635603829
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B29 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B25" 
    xhandlers
    flags 
    probability 4598666330787790318
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v25|DWORD, v24|DWORD, v26|QWORD[.], v27|DWORD, v28|DWORD] destination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4597613933617174380
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = MOV [v1|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = DEC v6|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = SUB (x: v6|DWORD, ~y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = DEC v8|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v9|DWORD y: 9 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.8554295858465635 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B7" 
    xhandlers
    flags 
    probability 4596392904429638157
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v3|DWORD, v4|DWORD, v5|QWORD[.], v6|DWORD, v7|DWORD] destination: B2 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B25" 
    xhandlers
    flags 
    probability 4592639758501055923
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v19|DWORD, v18|DWORD, v23|QWORD[.], v17|DWORD, v22|DWORD] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B45" 
    xhandlers
    flags 
    probability 4591073578059033886
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v52|DWORD] destination: B34 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B25" 
    xhandlers
    flags 
    probability 4585044937785939323
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v4|DWORD, v3|DWORD, v5|QWORD[.], v6|DWORD, v7|DWORD] destination: B3 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4574639300685707378
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v53|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v52|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.maybeCompress(EconomicMapImpl.java:476) [bci: 32]
locals: - - 
org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:658) [bci: 157]
locals: - - - - - 
org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
locals: - - 
org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<EconomicMapImpl.compressLarge(int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:32, 157, 2, 42] <|@ <|@
      nr   -1  <|@ instruction v80|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v80|DWORD] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v72|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@480163006] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-109083|0xfffffffffffe55e5], v72|QWORD[.]] destination: B38 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B38" "B40" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v73|DWORD, v74|QWORD[.]] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v73|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: v74|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:792) [bci: 11]
locals: v53|QWORD[.] v51|DWORD Object[null] 
org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:647) [bci: 81]
locals: v53|QWORD[.] - v51|DWORD - v52|DWORD 
org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
locals: - - 
org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:11, 81, 2, 42] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -82715 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:675) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v48|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@789277403] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-92732|0xfffffffffffe95c4], v48|QWORD[.]] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B19" "B18" "B17" "B16" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr   -1  <|@ instruction [v49|DWORD, v50|QWORD[.]] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v49|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: v50|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:638) [bci: 29]
locals: v26|QWORD[.] - v30|DWORD - v24|DWORD 
org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
locals: - - 
org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:29, 2, 42] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B48" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-103707|0xfffffffffffe6ae5]] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" "B46" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v82|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v82|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:646) [bci: 72]
locals: v53|QWORD[.] - v51|DWORD - v52|DWORD 
org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
locals: - - 
org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:72, 2, 42] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-112915|0xfffffffffffe46ed], Object[null]] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-90395|0xfffffffffffe9ee5], Object[null]] destination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-96283|0xfffffffffffe87e5], Object[null]] destination: B17 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B48" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-106267|0xfffffffffffe60e5]] destination: B46 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-99355|0xfffffffffffe7be5], Object[null]] destination: B16 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-93723|0xfffffffffffe91e5], Object[null]] destination: B18 -> B21 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #1          // this$0:org.graalvm.collections.EconomicMapImpl
     4: invokestatic  #5          // org.graalvm.collections.EconomicMapImpl.access$100:(org.graalvm.collections.EconomicMapImpl)boolean
     7: ifeq          31
    10: aload_0       
    11: getfield      #1          // this$0:org.graalvm.collections.EconomicMapImpl
    14: aload_0       
    15: getfield      #1          // this$0:org.graalvm.collections.EconomicMapImpl
    18: aload_0       
    19: getfield      #3          // current:int
    22: iconst_1      
    23: isub          
    24: invokestatic  #6          // org.graalvm.collections.EconomicMapImpl.access$200:(org.graalvm.collections.EconomicMapImpl, int)java.lang.Object
    27: invokestatic  #7          // org.graalvm.collections.EconomicMapImpl.access$300:(org.graalvm.collections.EconomicMapImpl, java.lang.Object)int
    30: pop           
    31: aload_0       
    32: aload_0       
    33: getfield      #1          // this$0:org.graalvm.collections.EconomicMapImpl
    36: aload_0       
    37: getfield      #3          // current:int
    40: iconst_1      
    41: isub          
    42: invokestatic  #8          // org.graalvm.collections.EconomicMapImpl.access$400:(org.graalvm.collections.EconomicMapImpl, int)int
    45: putfield      #3          // current:int
    48: return        
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@2981e1af slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction stack:32|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction r10|DWORD[.] = MOV [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   10  <|@ st <@st|@reference-map: [rsi:0, r10:0, stack:16]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:675) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction rdx|DWORD[.] = MOV [r10|DWORD[.] * 8 + 28] size: DWORD state [bci:0] <|@ <|@
      nr   12  <|@ instruction r11|DWORD = MOV [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   14  <|@ instruction r8|DWORD = DEC r11|DWORD size: DWORD <|@ <|@
      nr   16  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@40538b65 encoding: base: 0 shift: 3 <|@ <|@
      nr   18  <|@ instruction TEST (x: rdx|DWORD[.], y: rdx|DWORD[.]) size: DWORD <|@ <|@
      nr   20  <|@ instruction BRANCH trueDestinationProbability: 0.23442118598057549 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" "B49" 
    xhandlers
    flags 
    probability 4605070940468357669
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   58  <|@ instruction rdx|DWORD[.] = MOV [r10|DWORD[.] * 8 + 24] size: DWORD <|@ <|@
      nr   60  <|@ instruction r8|DWORD = SHL r8|DWORD size: DWORD <|@ <|@
      nr   62  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r9:0, stack:16]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:675) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction CMP (x: r8|DWORD, y: [rdx|DWORD[.] * 8 + 12]) size: DWORD state [bci:0] <|@ <|@
      nr   64  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B4 -> B5 falseDestination: B4 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B24" 
    xhandlers
    flags 
    probability 4605070940468357669
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   68  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@40538b65 encoding: base: 0 shift: 3 <|@ <|@
      nr   70  <|@ instruction rdx|DWORD[.] = MOV [rdx|QWORD[.] + r8|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   72  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@40538b65 encoding: base: 0 shift: 3 <|@ <|@
      nr   74  <|@ instruction rsi|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr   76  <|@ st <@st|@reference-map: [stack:16]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.access$300(EconomicMapImpl.java:56) [bci: 2]
locals: - - 
org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:676) [bci: 27]
locals: stack:32|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<EconomicMapImpl.findAndRemoveHash(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:2, 27] <|@ <|@
      nr   78  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr   80  <|@ instruction rdx|DWORD[.] = MOV [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   82  <|@ st <@st|@reference-map: [rdx:0, rsi:0, stack:16]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.access$300(EconomicMapImpl.java:56) [bci: 5]
stack: rax|DWORD 
locals: - - 
org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:676) [bci: 27]
locals: rsi|QWORD[.] 
>@ <|@ instruction r10|DWORD = MOV [rdx|DWORD[.] * 8 + 12] size: DWORD state [bci:5, 27] <|@ <|@
      nr   84  <|@ instruction r11|DWORD = MOV [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   86  <|@ instruction r8|DWORD = DEC r11|DWORD size: DWORD <|@ <|@
      nr   88  <|@ instruction r9|DWORD = SUB (x: r10|DWORD, ~y: r8|DWORD) size: DWORD <|@ <|@
      nr   90  <|@ instruction r9|DWORD = DEC r9|DWORD size: DWORD <|@ <|@
      nr   92  <|@ instruction rcx|DWORD = DEC r10|DWORD size: DWORD <|@ <|@
      nr   94  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@40538b65 encoding: base: 0 shift: 3 <|@ <|@
      nr   96  <|@ instruction CMP r9|DWORD y: 9 size: DWORD <|@ <|@
      nr   98  <|@ instruction BRANCH trueDestinationProbability: 0.8554295858465635 condition: < trueDestination: B5 -> B6 falseDestination: B5 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4604074023238621295
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  102  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B2" "B6" 
    successors "B8" "B23" 
    xhandlers
    flags 
    probability 4605880244273396978
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL numbPhis: 5 align: false label: ? <|@ <|@
      nr  106  <|@ instruction r9|DWORD[.] = MOV [rdx|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  108  <|@ instruction TEST (x: r9|DWORD[.], y: r9|DWORD[.]) size: DWORD <|@ <|@
      nr  110  <|@ instruction BRANCH trueDestinationProbability: 0.6758796339967927 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" 
    xhandlers
    flags 
    probability 4603382888838454779
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  114  <|@ instruction r9|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  116  <|@ instruction JUMP ~[] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B20" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4603225620296671221
    begin_IR
      LIR
      nr  124  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  126  <|@ instruction rbx|DWORD[.] = MOV [rdx|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  128  <|@ st <@st|@reference-map: [rdx:0, rbx:0, rsi:0, stack:16]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:638) [bci: 29]
locals: rdx|QWORD[.] - r9|DWORD - r11|DWORD 
org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
locals: - - 
org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
stack: rsi|QWORD[.] 
locals: rsi|QWORD[.] 
>@ <|@ instruction CMP [rbx|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} state [bci:29, 2, 42] <|@ <|@
      nr  130  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B19" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4603225620296671221
    begin_IR
      LIR
      nr  132  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  134  <|@ instruction rdi|DWORD = MOV [rbx|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  136  <|@ instruction rax|DWORD = INC r9|DWORD size: DWORD <|@ <|@
      nr  138  <|@ instruction rbp|DWORD = SHL rax|DWORD size: DWORD <|@ <|@
      nr  140  <|@ instruction CMP (x: rdi|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  142  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B11 -> B12 falseDestination: B11 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" "B18" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4603225620296671221
    begin_IR
      LIR
      nr  144  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  146  <|@ instruction r13|DWORD = SHL r9|DWORD size: DWORD <|@ <|@
      nr  148  <|@ instruction CMP (x: rdi|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  150  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B12 -> B13 falseDestination: B12 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B17" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4603225620296671221
    begin_IR
      LIR
      nr  152  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  154  <|@ instruction r14|DWORD = INC rbp|DWORD size: DWORD <|@ <|@
      nr  156  <|@ instruction CMP (x: rdi|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr  158  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B16" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4603225620296671221
    begin_IR
      LIR
      nr  160  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  162  <|@ instruction r14|DWORD = INC r13|DWORD size: DWORD <|@ <|@
      nr  164  <|@ instruction CMP (x: rdi|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr  166  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B9" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4603225620296671221
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  170  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@40538b65 encoding: base: 0 shift: 3 <|@ <|@
      nr  172  <|@ instruction r9|DWORD[.] = MOV [rbx|QWORD[.] + rbp|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  174  <|@ instruction MOV (x: [rbx|QWORD[.] + r13|DWORD * 4 + 16], y: r9|DWORD[.]) size: DWORD <|@ <|@
      nr  176  <|@ instruction r9|QWORD[.] = LEA [rbx|QWORD[.] + r13|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  178  <|@ instruction r9|QWORD[*] = SHR r9|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  180  <|@ instruction rdi|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr  182  <|@ instruction MOVB (x: [r9|QWORD[*] + rdi|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  184  <|@ instruction r9|QWORD = MOVSXD rbp|DWORD size: QWORD <|@ <|@
      nr  186  <|@ instruction r9|DWORD[.] = MOV [rbx|QWORD[.] + r9|QWORD * 4 + 20] size: DWORD <|@ <|@
      nr  188  <|@ instruction rbp|QWORD = MOVSXD r13|DWORD size: QWORD <|@ <|@
      nr  190  <|@ instruction MOV (x: [rbx|QWORD[.] + rbp|QWORD * 4 + 20], y: r9|DWORD[.]) size: DWORD <|@ <|@
      nr  192  <|@ instruction r9|QWORD[.] = LEA [rbx|QWORD[.] + rbp|QWORD * 4 + 20] size: QWORD <|@ <|@
      nr  194  <|@ instruction r9|QWORD[*] = SHR r9|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  196  <|@ instruction MOVB (x: [r9|QWORD[*] + rdi|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  198  <|@ instruction r9|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  200  <|@ instruction JUMP ~[] destination: B15 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B15" 
    successors "B10" "B22" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4607807854194933496
    begin_IR
      LIR
      nr  118  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  120  <|@ instruction CMP (x: rcx|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  122  <|@ instruction BRANCH trueDestinationProbability: 0.49233439910722987 condition: > trueDestination: B9 -> B10 falseDestination: B9 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B25" 
    xhandlers
    flags 
    probability 4603382888838454779
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  256  <|@ instruction r11|DWORD = MOVE r8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  258  <|@ instruction r8|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  260  <|@ instruction JUMP ~[] destination: B22 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B3" "B23" "B22" "B24" 
    successors "B26" "B47" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  270  <|@ instruction [] = LABEL numbPhis: 5 align: false label: ? <|@ <|@
      nr  272  <|@ instruction r9|DWORD[.] = MOV [rdx|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  274  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r9:0, stack:16]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:646) [bci: 72]
locals: rdx|QWORD[.] - r8|DWORD - r11|DWORD 
org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
locals: - - 
org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
stack: rsi|QWORD[.] 
locals: rsi|QWORD[.] 
>@ <|@ instruction rbx|DWORD = MOV [r9|DWORD[.] * 8 + 12] size: DWORD state [bci:72, 2, 42] <|@ <|@
      nr  276  <|@ instruction rdi|DWORD = SHL r8|DWORD size: DWORD <|@ <|@
      nr  278  <|@ instruction CMP (x: rbx|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  280  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B25 -> B26 falseDestination: B25 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" "B46" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  282  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  284  <|@ instruction rax|DWORD = INC rdi|DWORD size: DWORD <|@ <|@
      nr  286  <|@ instruction CMP (x: rbx|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  288  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B26 -> B27 falseDestination: B26 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B39" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  292  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@40538b65 encoding: base: 0 shift: 3 <|@ <|@
      nr  294  <|@ instruction MOV (x: [r9|QWORD[.] + rdi|DWORD * 4 + 16], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr  296  <|@ instruction MOV (x: [r9|QWORD[.] + rax|DWORD * 4 + 16], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr  298  <|@ instruction CMP (x: rcx|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  300  <|@ instruction BRANCH trueDestinationProbability: 0.640014121444422 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4603939954262974325
    begin_IR
      LIR
      nr  302  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  304  <|@ instruction CMP r8|DWORD y: 1 size: DWORD <|@ <|@
      nr  306  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B28 -> B29 falseDestination: B28 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" "B38" 
    xhandlers
    flags 
    probability 4599436354635603829
    begin_IR
      LIR
      nr  312  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  314  <|@ instruction r10|DWORD = DEC r8|DWORD size: DWORD <|@ <|@
      nr  316  <|@ instruction r10|DWORD = SHL r10|DWORD size: DWORD <|@ <|@
      nr  318  <|@ instruction CMP (x: rbx|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  320  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B30 -> B31 falseDestination: B30 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B32" 
    xhandlers
    flags 
    probability 4599436354635603829
    begin_IR
      LIR
      nr  322  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  324  <|@ instruction JUMP ~[] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B29" "B31" 
    successors "B33" 
    xhandlers
    flags 
    probability 4603939954262974325
    begin_IR
      LIR
      nr  326  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  328  <|@ instruction MOV (x: [rdx|QWORD[.] + 12], y: rcx|DWORD) size: DWORD <|@ <|@
      nr  330  <|@ instruction r10|DWORD = MOV [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  332  <|@ instruction stack:36|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  334  <|@ instruction r8|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  336  <|@ instruction rcx|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  338  <|@ instruction r10|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  340  <|@ instruction JUMP ~[] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" "B37" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4603662760749496265
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  354  <|@ instruction r10|DWORD = DEC r10|DWORD size: DWORD <|@ <|@
      nr  356  <|@ instruction rbx|DWORD = SHL r10|DWORD size: DWORD <|@ <|@
      nr  358  <|@ instruction rbx|DWORD[.] = MOV [r9|QWORD[.] + rbx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  360  <|@ instruction TEST (x: rbx|DWORD[.], y: rbx|DWORD[.]) size: DWORD <|@ <|@
      nr  362  <|@ instruction BRANCH trueDestinationProbability: 0.09548013245033116 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B33" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4588544039611883407
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  366  <|@ instruction r8|DWORD = DEC r8|DWORD size: DWORD <|@ <|@
      nr  368  <|@ instruction MOV (x: [rdx|QWORD[.] + 12], y: r8|DWORD) size: DWORD <|@ <|@
      nr  370  <|@ instruction rcx|DWORD = DEC rcx|DWORD size: DWORD <|@ <|@
      nr  372  <|@ instruction MOV (x: [rdx|QWORD[.] + 16], y: rcx|DWORD) size: DWORD <|@ <|@
      nr  374  <|@ instruction JUMP ~[] destination: B36 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" "B36" 
    successors "B34" "B35" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4604463905423979885
    begin_IR
      LIR
      nr  342  <|@ instruction [] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr  344  <|@ instruction CMP r10|DWORD y: 1 size: DWORD <|@ <|@
      nr  346  <|@ instruction BRANCH trueDestinationProbability: 0.1273946083388714 condition: < trueDestination: B33 -> B34 falseDestination: B33 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B45" 
    xhandlers
    flags 
    probability 4603138809588490704
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  378  <|@ instruction JUMP ~[] destination: B37 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B34" "B37" "B44" "B43" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  448  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  450  <|@ instruction MOV (x: [rsi|QWORD[.] + 12], y: r11|DWORD) size: DWORD <|@ <|@
      nr  452  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B40" "B42" 
    xhandlers
    flags 
    probability 4600156548991992086
    begin_IR
      LIR
      nr  390  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  392  <|@ instruction CMP rbx|DWORD y: 8 size: DWORD <|@ <|@
      nr  394  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4600156548991992086
    begin_IR
      LIR
      nr  412  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  414  <|@ instruction r8|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  416  <|@ instruction r8|DWORD = ADD (x: r8|DWORD, ~y: [rdx|QWORD[.] + 16]) size: DWORD <|@ <|@
      nr  418  <|@ instruction MOV (x: [rdx|QWORD[.] + 16], y: r8|DWORD) size: DWORD <|@ <|@
      nr  420  <|@ instruction r9|DWORD = SAR r10|DWORD size: DWORD <|@ <|@
      nr  422  <|@ instruction r10|DWORD = SAR r10|DWORD y: 2 size: DWORD <|@ <|@
      nr  424  <|@ instruction r9|DWORD = ADD (x: r9|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  426  <|@ instruction CMP (x: r9|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  428  <|@ instruction BRANCH trueDestinationProbability: 0.9807503712628541 condition: > trueDestination: B42 -> B43 falseDestination: B42 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4600031716514929204
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  432  <|@ instruction JUMP ~[] destination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B32" 
    xhandlers
    flags 
    probability 4599436354635603829
    begin_IR
      LIR
      nr  308  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  310  <|@ instruction JUMP ~[] destination: B29 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B25" 
    xhandlers
    flags 
    probability 4598666330787790318
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  264  <|@ instruction JUMP ~[] destination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4597613933617174380
    begin_IR
      LIR
      nr   22  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   24  <|@ instruction rdx|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   26  <|@ instruction r10|DWORD = DEC rdx|DWORD size: DWORD <|@ <|@
      nr   28  <|@ instruction rcx|DWORD = SUB (x: rdx|DWORD, ~y: r8|DWORD) size: DWORD <|@ <|@
      nr   30  <|@ instruction rcx|DWORD = DEC rcx|DWORD size: DWORD <|@ <|@
      nr   32  <|@ instruction CMP rcx|DWORD y: 9 size: DWORD <|@ <|@
      nr   34  <|@ instruction BRANCH trueDestinationProbability: 0.8554295858465635 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B7" 
    xhandlers
    flags 
    probability 4596392904429638157
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   38  <|@ instruction rcx|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr   40  <|@ instruction r10|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   42  <|@ instruction rdx|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr   44  <|@ instruction JUMP ~[] destination: B2 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B25" 
    xhandlers
    flags 
    probability 4592639758501055923
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  268  <|@ instruction JUMP ~[] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B45" 
    xhandlers
    flags 
    probability 4591073578059033886
    begin_IR
      LIR
      nr  348  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  350  <|@ instruction JUMP ~[] destination: B34 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B25" 
    xhandlers
    flags 
    probability 4585044937785939323
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   48  <|@ instruction rcx|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr   50  <|@ instruction r10|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   52  <|@ instruction rdx|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr   54  <|@ instruction JUMP ~[] destination: B3 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4574639300685707378
    begin_IR
      LIR
      nr  434  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  436  <|@ instruction rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  438  <|@ instruction rdx|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  440  <|@ st <@st|@reference-map: [stack:16]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.maybeCompress(EconomicMapImpl.java:476) [bci: 32]
locals: - - 
org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:658) [bci: 157]
locals: - - - - - 
org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
locals: - - 
org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
stack: stack:32|QWORD[.] 
locals: stack:32|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<EconomicMapImpl.compressLarge(int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:32, 157, 2, 42] <|@ <|@
      nr  442  <|@ instruction r11|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  444  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  446  <|@ instruction JUMP ~[] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  380  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  382  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@480163006] <|@ <|@
      nr  384  <|@ instruction r9|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  386  <|@ instruction r10|DWORD = MOVE input: int[-109083|0xfffffffffffe55e5] <|@ <|@
      nr  388  <|@ instruction JUMP ~[] destination: B38 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B38" "B40" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  404  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  406  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  408  <|@ instruction MOV (x: [r15|QWORD + 680], y: r9|QWORD[.]) size: QWORD <|@ <|@
      nr  410  <|@ st <@st|@reference-map: [rdx:0, stack:16]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:792) [bci: 11]
locals: rdx|QWORD[.] r8|DWORD Object[null] 
org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:647) [bci: 81]
locals: rdx|QWORD[.] - r8|DWORD - r11|DWORD 
org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
locals: - - 
org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
stack: stack:32|QWORD[.] 
locals: stack:32|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:11, 81, 2, 42] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  474  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  476  <|@ instruction MOV [r15|QWORD + 668] y: -82715 size: DWORD <|@ <|@
      nr  478  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  480  <|@ st <@st|@reference-map: [stack:16]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:675) [bci: 0]
locals: stack:32|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  234  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  236  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@789277403] <|@ <|@
      nr  238  <|@ instruction r8|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  240  <|@ instruction r10|DWORD = MOVE input: int[-92732|0xfffffffffffe95c4] <|@ <|@
      nr  242  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  244  <|@ instruction JUMP ~[] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B19" "B18" "B17" "B16" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  248  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  250  <|@ instruction MOV (x: [r15|QWORD + 680], y: r8|QWORD[.]) size: QWORD <|@ <|@
      nr  252  <|@ st <@st|@reference-map: [rdx:0, rsi:0]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:638) [bci: 29]
locals: rdx|QWORD[.] - r9|DWORD - r11|DWORD 
org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
locals: - - 
org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
stack: rsi|QWORD[.] 
locals: rsi|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:29, 2, 42] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B48" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  460  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  462  <|@ instruction r10|DWORD = MOVE input: int[-103707|0xfffffffffffe6ae5] <|@ <|@
      nr  464  <|@ instruction JUMP ~[] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" "B46" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  466  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  468  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  470  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  472  <|@ st <@st|@reference-map: [rdx:0, stack:16]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:646) [bci: 72]
locals: rdx|QWORD[.] - r8|DWORD - r11|DWORD 
org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
locals: - - 
org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
stack: stack:32|QWORD[.] 
locals: stack:32|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:72, 2, 42] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  396  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  398  <|@ instruction r9|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  400  <|@ instruction r10|DWORD = MOVE input: int[-112915|0xfffffffffffe46ed] <|@ <|@
      nr  402  <|@ instruction JUMP ~[] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  226  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  228  <|@ instruction r8|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  230  <|@ instruction r10|DWORD = MOVE input: int[-90395|0xfffffffffffe9ee5] <|@ <|@
      nr  232  <|@ instruction JUMP ~[] destination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  210  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  212  <|@ instruction r8|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  214  <|@ instruction r10|DWORD = MOVE input: int[-96283|0xfffffffffffe87e5] <|@ <|@
      nr  216  <|@ instruction JUMP ~[] destination: B17 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B48" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  454  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  456  <|@ instruction r10|DWORD = MOVE input: int[-106267|0xfffffffffffe60e5] <|@ <|@
      nr  458  <|@ instruction JUMP ~[] destination: B46 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  202  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  204  <|@ instruction r8|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  206  <|@ instruction r10|DWORD = MOVE input: int[-99355|0xfffffffffffe7be5] <|@ <|@
      nr  208  <|@ instruction JUMP ~[] destination: B16 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  218  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  220  <|@ instruction r8|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  222  <|@ instruction r10|DWORD = MOVE input: int[-93723|0xfffffffffffe91e5] <|@ <|@
      nr  224  <|@ instruction JUMP ~[] destination: B18 -> B21 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #1          // this$0:org.graalvm.collections.EconomicMapImpl
     4: invokestatic  #5          // org.graalvm.collections.EconomicMapImpl.access$100:(org.graalvm.collections.EconomicMapImpl)boolean
     7: ifeq          31
    10: aload_0       
    11: getfield      #1          // this$0:org.graalvm.collections.EconomicMapImpl
    14: aload_0       
    15: getfield      #1          // this$0:org.graalvm.collections.EconomicMapImpl
    18: aload_0       
    19: getfield      #3          // current:int
    22: iconst_1      
    23: isub          
    24: invokestatic  #6          // org.graalvm.collections.EconomicMapImpl.access$200:(org.graalvm.collections.EconomicMapImpl, int)java.lang.Object
    27: invokestatic  #7          // org.graalvm.collections.EconomicMapImpl.access$300:(org.graalvm.collections.EconomicMapImpl, java.lang.Object)int
    30: pop           
    31: aload_0       
    32: aload_0       
    33: getfield      #1          // this$0:org.graalvm.collections.EconomicMapImpl
    36: aload_0       
    37: getfield      #3          // current:int
    40: iconst_1      
    41: isub          
    42: invokestatic  #8          // org.graalvm.collections.EconomicMapImpl.access$400:(org.graalvm.collections.EconomicMapImpl, int)int
    45: putfield      #3          // current:int
    48: return        
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@2981e1af slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction stack:32|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction r10|DWORD[.] = MOV [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   10  <|@ st <@st|@reference-map: [rsi:0, r10:0, stack:16]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:675) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction rdx|DWORD[.] = MOV [r10|DWORD[.] * 8 + 28] size: DWORD state [bci:0] <|@ <|@
      nr   12  <|@ instruction r11|DWORD = MOV [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   14  <|@ instruction r8|DWORD = DEC r11|DWORD size: DWORD <|@ <|@
      nr   16  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@40538b65 encoding: base: 0 shift: 3 <|@ <|@
      nr   18  <|@ instruction TEST (x: rdx|DWORD[.], y: rdx|DWORD[.]) size: DWORD <|@ <|@
      nr   20  <|@ instruction BRANCH trueDestinationProbability: 0.23442118598057549 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" "B49" 
    xhandlers
    flags 
    probability 4605070940468357669
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   58  <|@ instruction rdx|DWORD[.] = MOV [r10|DWORD[.] * 8 + 24] size: DWORD <|@ <|@
      nr   60  <|@ instruction r8|DWORD = SHL r8|DWORD size: DWORD <|@ <|@
      nr   62  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r9:0, stack:16]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:675) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction CMP (x: r8|DWORD, y: [rdx|DWORD[.] * 8 + 12]) size: DWORD state [bci:0] <|@ <|@
      nr   64  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B4 -> B5 falseDestination: B4 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B25" 
    xhandlers
    flags 
    probability 4605070940468357669
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   68  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@40538b65 encoding: base: 0 shift: 3 <|@ <|@
      nr   70  <|@ instruction rdx|DWORD[.] = MOV [rdx|QWORD[.] + r8|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   72  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@40538b65 encoding: base: 0 shift: 3 <|@ <|@
      nr   74  <|@ instruction rsi|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr   76  <|@ st <@st|@reference-map: [stack:16]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.access$300(EconomicMapImpl.java:56) [bci: 2]
locals: - - 
org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:676) [bci: 27]
locals: stack:32|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<EconomicMapImpl.findAndRemoveHash(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:2, 27] <|@ <|@
      nr   78  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr   80  <|@ instruction rdx|DWORD[.] = MOV [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   82  <|@ st <@st|@reference-map: [rdx:0, rsi:0, stack:16]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.access$300(EconomicMapImpl.java:56) [bci: 5]
stack: rax|DWORD 
locals: - - 
org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:676) [bci: 27]
locals: rsi|QWORD[.] 
>@ <|@ instruction r10|DWORD = MOV [rdx|DWORD[.] * 8 + 12] size: DWORD state [bci:5, 27] <|@ <|@
      nr   84  <|@ instruction r11|DWORD = MOV [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   86  <|@ instruction r8|DWORD = DEC r11|DWORD size: DWORD <|@ <|@
      nr   88  <|@ instruction r9|DWORD = SUB (x: r10|DWORD, ~y: r8|DWORD) size: DWORD <|@ <|@
      nr   90  <|@ instruction r9|DWORD = DEC r9|DWORD size: DWORD <|@ <|@
      nr   92  <|@ instruction rcx|DWORD = DEC r10|DWORD size: DWORD <|@ <|@
      nr   94  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@40538b65 encoding: base: 0 shift: 3 <|@ <|@
      nr   96  <|@ instruction CMP r9|DWORD y: 9 size: DWORD <|@ <|@
      nr   98  <|@ instruction BRANCH trueDestinationProbability: 0.8554295858465635 condition: < trueDestination: B5 -> B7 falseDestination: B5 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B1" "B5" 
    successors "B8" "B25" 
    xhandlers
    flags 
    probability 4605880244273396978
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL numbPhis: 5 align: false label: ? <|@ <|@
      nr  106  <|@ instruction r9|DWORD[.] = MOV [rdx|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  108  <|@ instruction TEST (x: r9|DWORD[.], y: r9|DWORD[.]) size: DWORD <|@ <|@
      nr  110  <|@ instruction BRANCH trueDestinationProbability: 0.6758796339967927 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" 
    xhandlers
    flags 
    probability 4603382888838454779
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  114  <|@ instruction r9|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  116  <|@ instruction JUMP ~[] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B20" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4603225620296671221
    begin_IR
      LIR
      nr  124  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  126  <|@ instruction rbx|DWORD[.] = MOV [rdx|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  128  <|@ st <@st|@reference-map: [rdx:0, rbx:0, rsi:0, stack:16]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:638) [bci: 29]
locals: rdx|QWORD[.] - r9|DWORD - r11|DWORD 
org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
locals: - - 
org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
stack: rsi|QWORD[.] 
locals: rsi|QWORD[.] 
>@ <|@ instruction CMP [rbx|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} state [bci:29, 2, 42] <|@ <|@
      nr  130  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B19" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4603225620296671221
    begin_IR
      LIR
      nr  132  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  134  <|@ instruction rdi|DWORD = MOV [rbx|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  136  <|@ instruction rax|DWORD = INC r9|DWORD size: DWORD <|@ <|@
      nr  138  <|@ instruction rbp|DWORD = SHL rax|DWORD size: DWORD <|@ <|@
      nr  140  <|@ instruction CMP (x: rdi|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  142  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B11 -> B12 falseDestination: B11 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" "B18" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4603225620296671221
    begin_IR
      LIR
      nr  144  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  146  <|@ instruction r13|DWORD = SHL r9|DWORD size: DWORD <|@ <|@
      nr  148  <|@ instruction CMP (x: rdi|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  150  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B12 -> B13 falseDestination: B12 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B17" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4603225620296671221
    begin_IR
      LIR
      nr  152  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  154  <|@ instruction r14|DWORD = INC rbp|DWORD size: DWORD <|@ <|@
      nr  156  <|@ instruction CMP (x: rdi|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr  158  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B16" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4603225620296671221
    begin_IR
      LIR
      nr  160  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  162  <|@ instruction r14|DWORD = INC r13|DWORD size: DWORD <|@ <|@
      nr  164  <|@ instruction CMP (x: rdi|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr  166  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B9" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4603225620296671221
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  170  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@40538b65 encoding: base: 0 shift: 3 <|@ <|@
      nr  172  <|@ instruction r9|DWORD[.] = MOV [rbx|QWORD[.] + rbp|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  174  <|@ instruction MOV (x: [rbx|QWORD[.] + r13|DWORD * 4 + 16], y: r9|DWORD[.]) size: DWORD <|@ <|@
      nr  176  <|@ instruction r9|QWORD[.] = LEA [rbx|QWORD[.] + r13|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  178  <|@ instruction r9|QWORD[*] = SHR r9|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  180  <|@ instruction rdi|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr  182  <|@ instruction MOVB (x: [r9|QWORD[*] + rdi|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  184  <|@ instruction r9|QWORD = MOVSXD rbp|DWORD size: QWORD <|@ <|@
      nr  186  <|@ instruction r9|DWORD[.] = MOV [rbx|QWORD[.] + r9|QWORD * 4 + 20] size: DWORD <|@ <|@
      nr  188  <|@ instruction rbp|QWORD = MOVSXD r13|DWORD size: QWORD <|@ <|@
      nr  190  <|@ instruction MOV (x: [rbx|QWORD[.] + rbp|QWORD * 4 + 20], y: r9|DWORD[.]) size: DWORD <|@ <|@
      nr  192  <|@ instruction r9|QWORD[.] = LEA [rbx|QWORD[.] + rbp|QWORD * 4 + 20] size: QWORD <|@ <|@
      nr  194  <|@ instruction r9|QWORD[*] = SHR r9|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  196  <|@ instruction MOVB (x: [r9|QWORD[*] + rdi|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  198  <|@ instruction r9|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  200  <|@ instruction JUMP ~[] destination: B15 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B15" 
    successors "B10" "B22" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4607807854194933496
    begin_IR
      LIR
      nr  118  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  120  <|@ instruction CMP (x: rcx|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  122  <|@ instruction BRANCH trueDestinationProbability: 0.49233439910722987 condition: > trueDestination: B9 -> B10 falseDestination: B9 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B25" 
    xhandlers
    flags 
    probability 4603382888838454779
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  256  <|@ instruction r11|DWORD = MOVE r8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  258  <|@ instruction r8|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  260  <|@ instruction JUMP ~[] destination: B22 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B1" "B7" "B22" "B5" 
    successors "B26" "B47" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  270  <|@ instruction [] = LABEL numbPhis: 5 align: false label: ? <|@ <|@
      nr  272  <|@ instruction r9|DWORD[.] = MOV [rdx|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  274  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r9:0, stack:16]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:646) [bci: 72]
locals: rdx|QWORD[.] - r8|DWORD - r11|DWORD 
org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
locals: - - 
org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
stack: rsi|QWORD[.] 
locals: rsi|QWORD[.] 
>@ <|@ instruction rbx|DWORD = MOV [r9|DWORD[.] * 8 + 12] size: DWORD state [bci:72, 2, 42] <|@ <|@
      nr  276  <|@ instruction rdi|DWORD = SHL r8|DWORD size: DWORD <|@ <|@
      nr  278  <|@ instruction CMP (x: rbx|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  280  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B25 -> B26 falseDestination: B25 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" "B46" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  282  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  284  <|@ instruction rax|DWORD = INC rdi|DWORD size: DWORD <|@ <|@
      nr  286  <|@ instruction CMP (x: rbx|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  288  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B26 -> B27 falseDestination: B26 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B39" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  292  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@40538b65 encoding: base: 0 shift: 3 <|@ <|@
      nr  294  <|@ instruction MOV (x: [r9|QWORD[.] + rdi|DWORD * 4 + 16], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr  296  <|@ instruction MOV (x: [r9|QWORD[.] + rax|DWORD * 4 + 16], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr  298  <|@ instruction CMP (x: rcx|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  300  <|@ instruction BRANCH trueDestinationProbability: 0.640014121444422 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B32" "B30" 
    xhandlers
    flags 
    probability 4603939954262974325
    begin_IR
      LIR
      nr  302  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  304  <|@ instruction CMP r8|DWORD y: 1 size: DWORD <|@ <|@
      nr  306  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B28 -> B32 falseDestination: B28 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B32" "B38" 
    xhandlers
    flags 
    probability 4599436354635603829
    begin_IR
      LIR
      nr  312  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  314  <|@ instruction r10|DWORD = DEC r8|DWORD size: DWORD <|@ <|@
      nr  316  <|@ instruction r10|DWORD = SHL r10|DWORD size: DWORD <|@ <|@
      nr  318  <|@ instruction CMP (x: rbx|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  320  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B30 -> B32 falseDestination: B30 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" 
    successors "B33" 
    xhandlers
    flags 
    probability 4603939954262974325
    begin_IR
      LIR
      nr  326  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  328  <|@ instruction MOV (x: [rdx|QWORD[.] + 12], y: rcx|DWORD) size: DWORD <|@ <|@
      nr  330  <|@ instruction r10|DWORD = MOV [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  332  <|@ instruction stack:36|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  334  <|@ instruction r8|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  336  <|@ instruction rcx|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  338  <|@ instruction r10|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  340  <|@ instruction JUMP ~[] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" "B45" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4603662760749496265
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  354  <|@ instruction r10|DWORD = DEC r10|DWORD size: DWORD <|@ <|@
      nr  356  <|@ instruction rbx|DWORD = SHL r10|DWORD size: DWORD <|@ <|@
      nr  358  <|@ instruction rbx|DWORD[.] = MOV [r9|QWORD[.] + rbx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  360  <|@ instruction TEST (x: rbx|DWORD[.], y: rbx|DWORD[.]) size: DWORD <|@ <|@
      nr  362  <|@ instruction BRANCH trueDestinationProbability: 0.09548013245033116 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B33" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4588544039611883407
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  366  <|@ instruction r8|DWORD = DEC r8|DWORD size: DWORD <|@ <|@
      nr  368  <|@ instruction MOV (x: [rdx|QWORD[.] + 12], y: r8|DWORD) size: DWORD <|@ <|@
      nr  370  <|@ instruction rcx|DWORD = DEC rcx|DWORD size: DWORD <|@ <|@
      nr  372  <|@ instruction MOV (x: [rdx|QWORD[.] + 16], y: rcx|DWORD) size: DWORD <|@ <|@
      nr  374  <|@ instruction JUMP ~[] destination: B36 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" "B36" 
    successors "B45" "B35" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4604463905423979885
    begin_IR
      LIR
      nr  342  <|@ instruction [] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr  344  <|@ instruction CMP r10|DWORD y: 1 size: DWORD <|@ <|@
      nr  346  <|@ instruction BRANCH trueDestinationProbability: 0.1273946083388714 condition: < trueDestination: B33 -> B45 falseDestination: B33 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B33" "B35" "B44" "B42" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  448  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  450  <|@ instruction MOV (x: [rsi|QWORD[.] + 12], y: r11|DWORD) size: DWORD <|@ <|@
      nr  452  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B40" "B42" 
    xhandlers
    flags 
    probability 4600156548991992086
    begin_IR
      LIR
      nr  390  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  392  <|@ instruction CMP rbx|DWORD y: 8 size: DWORD <|@ <|@
      nr  394  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B45" "B44" 
    xhandlers
    flags 
    probability 4600156548991992086
    begin_IR
      LIR
      nr  412  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  414  <|@ instruction r8|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  416  <|@ instruction r8|DWORD = ADD (x: r8|DWORD, ~y: [rdx|QWORD[.] + 16]) size: DWORD <|@ <|@
      nr  418  <|@ instruction MOV (x: [rdx|QWORD[.] + 16], y: r8|DWORD) size: DWORD <|@ <|@
      nr  420  <|@ instruction r9|DWORD = SAR r10|DWORD size: DWORD <|@ <|@
      nr  422  <|@ instruction r10|DWORD = SAR r10|DWORD y: 2 size: DWORD <|@ <|@
      nr  424  <|@ instruction r9|DWORD = ADD (x: r9|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  426  <|@ instruction CMP (x: r9|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  428  <|@ instruction BRANCH trueDestinationProbability: 0.9807503712628541 condition: > trueDestination: B42 -> B45 falseDestination: B42 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" "B25" 
    xhandlers
    flags 
    probability 4597613933617174380
    begin_IR
      LIR
      nr   22  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   24  <|@ instruction rdx|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   26  <|@ instruction r10|DWORD = DEC rdx|DWORD size: DWORD <|@ <|@
      nr   28  <|@ instruction rcx|DWORD = SUB (x: rdx|DWORD, ~y: r8|DWORD) size: DWORD <|@ <|@
      nr   30  <|@ instruction rcx|DWORD = DEC rcx|DWORD size: DWORD <|@ <|@
      nr   32  <|@ instruction CMP rcx|DWORD y: 9 size: DWORD <|@ <|@
      nr   38  <|@ instruction rcx|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr   40  <|@ instruction r10|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   42  <|@ instruction rdx|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr   34  <|@ instruction BRANCH trueDestinationProbability: 0.8554295858465635 condition: < trueDestination: B1 -> B7 falseDestination: B1 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4574639300685707378
    begin_IR
      LIR
      nr  434  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  436  <|@ instruction rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  438  <|@ instruction rdx|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  440  <|@ st <@st|@reference-map: [stack:16]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.maybeCompress(EconomicMapImpl.java:476) [bci: 32]
locals: - - 
org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:658) [bci: 157]
locals: - - - - - 
org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
locals: - - 
org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
stack: stack:32|QWORD[.] 
locals: stack:32|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<EconomicMapImpl.compressLarge(int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:32, 157, 2, 42] <|@ <|@
      nr  442  <|@ instruction r11|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  444  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  446  <|@ instruction JUMP ~[] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  380  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  382  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@480163006] <|@ <|@
      nr  384  <|@ instruction r9|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  386  <|@ instruction r10|DWORD = MOVE input: int[-109083|0xfffffffffffe55e5] <|@ <|@
      nr  388  <|@ instruction JUMP ~[] destination: B38 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B38" "B40" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  404  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  406  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  408  <|@ instruction MOV (x: [r15|QWORD + 680], y: r9|QWORD[.]) size: QWORD <|@ <|@
      nr  410  <|@ st <@st|@reference-map: [rdx:0, stack:16]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:792) [bci: 11]
locals: rdx|QWORD[.] r8|DWORD Object[null] 
org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:647) [bci: 81]
locals: rdx|QWORD[.] - r8|DWORD - r11|DWORD 
org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
locals: - - 
org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
stack: stack:32|QWORD[.] 
locals: stack:32|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:11, 81, 2, 42] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  474  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  476  <|@ instruction MOV [r15|QWORD + 668] y: -82715 size: DWORD <|@ <|@
      nr  478  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  480  <|@ st <@st|@reference-map: [stack:16]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:675) [bci: 0]
locals: stack:32|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  234  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  236  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@789277403] <|@ <|@
      nr  238  <|@ instruction r8|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  240  <|@ instruction r10|DWORD = MOVE input: int[-92732|0xfffffffffffe95c4] <|@ <|@
      nr  242  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  244  <|@ instruction JUMP ~[] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B19" "B18" "B17" "B16" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  248  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  250  <|@ instruction MOV (x: [r15|QWORD + 680], y: r8|QWORD[.]) size: QWORD <|@ <|@
      nr  252  <|@ st <@st|@reference-map: [rdx:0, rsi:0]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:638) [bci: 29]
locals: rdx|QWORD[.] - r9|DWORD - r11|DWORD 
org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
locals: - - 
org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
stack: rsi|QWORD[.] 
locals: rsi|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:29, 2, 42] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B48" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  460  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  462  <|@ instruction r10|DWORD = MOVE input: int[-103707|0xfffffffffffe6ae5] <|@ <|@
      nr  464  <|@ instruction JUMP ~[] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" "B46" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  466  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  468  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  470  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  472  <|@ st <@st|@reference-map: [rdx:0, stack:16]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:646) [bci: 72]
locals: rdx|QWORD[.] - r8|DWORD - r11|DWORD 
org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2]
locals: - - 
org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42]
stack: stack:32|QWORD[.] 
locals: stack:32|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:72, 2, 42] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  396  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  398  <|@ instruction r9|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  400  <|@ instruction r10|DWORD = MOVE input: int[-112915|0xfffffffffffe46ed] <|@ <|@
      nr  402  <|@ instruction JUMP ~[] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  226  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  228  <|@ instruction r8|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  230  <|@ instruction r10|DWORD = MOVE input: int[-90395|0xfffffffffffe9ee5] <|@ <|@
      nr  232  <|@ instruction JUMP ~[] destination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  210  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  212  <|@ instruction r8|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  214  <|@ instruction r10|DWORD = MOVE input: int[-96283|0xfffffffffffe87e5] <|@ <|@
      nr  216  <|@ instruction JUMP ~[] destination: B17 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B48" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  454  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  456  <|@ instruction r10|DWORD = MOVE input: int[-106267|0xfffffffffffe60e5] <|@ <|@
      nr  458  <|@ instruction JUMP ~[] destination: B46 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  202  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  204  <|@ instruction r8|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  206  <|@ instruction r10|DWORD = MOVE input: int[-99355|0xfffffffffffe7be5] <|@ <|@
      nr  208  <|@ instruction JUMP ~[] destination: B16 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B21" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  218  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  220  <|@ instruction r8|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  222  <|@ instruction r10|DWORD = MOVE input: int[-93723|0xfffffffffffe91e5] <|@ <|@
      nr  224  <|@ instruction JUMP ~[] destination: B18 -> B21 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #1          // this$0:org.graalvm.collections.EconomicMapImpl
     4: invokestatic  #5          // org.graalvm.collections.EconomicMapImpl.access$100:(org.graalvm.collections.EconomicMapImpl)boolean
     7: ifeq          31
    10: aload_0       
    11: getfield      #1          // this$0:org.graalvm.collections.EconomicMapImpl
    14: aload_0       
    15: getfield      #1          // this$0:org.graalvm.collections.EconomicMapImpl
    18: aload_0       
    19: getfield      #3          // current:int
    22: iconst_1      
    23: isub          
    24: invokestatic  #6          // org.graalvm.collections.EconomicMapImpl.access$200:(org.graalvm.collections.EconomicMapImpl, int)java.lang.Object
    27: invokestatic  #7          // org.graalvm.collections.EconomicMapImpl.access$300:(org.graalvm.collections.EconomicMapImpl, java.lang.Object)int
    30: pop           
    31: aload_0       
    32: aload_0       
    33: getfield      #1          // this$0:org.graalvm.collections.EconomicMapImpl
    36: aload_0       
    37: getfield      #3          // current:int
    40: iconst_1      
    41: isub          
    42: invokestatic  #8          // org.graalvm.collections.EconomicMapImpl.access$400:(org.graalvm.collections.EconomicMapImpl, int)int
    45: putfield      #3          // current:int
    48: return        
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849c1e203493bc20f85efffffff900f1f80000000000f1f800000000089842400c0feff4883ec2848896c24204889742410448b5610428b14d51c000000448b5e0c458bc341ffc8458bca49c1e10385d20f8422020000428b14d51800000041d1e0443b04d50c0000000f837602000048c1e203428b54821048c1e203498bf10f1f4000e80000000090488b7424108b5610448b14d50c000000448b5e0c458bc341ffc8458bca452bc841ffc9418bcaffc948c1e2034183f9090f8dca000000448b4a1c4585c90f85bd000000458bc8e9a60000000f1f8400000000008b5a18813cdd08000000addeadde0f850d0200008b3cdd0c000000418bc1ffc08be8d1e53bfd0f8650020000458be941d1e5413bfd0f8682020000448bf541ffc6413bfe0f8644020000458bf541ffc6413bfe0f864f02000048c1e303448b4cab1046894cab104e8d4cab1049c1e90948bf00e01b1701000000458824394c63cd468b4c8b144963ed44894cab144c8d4cab1449c1e90945882439448bc8413bc90f8f59ffffff458bd8458bc1448b4a18428b1ccd0c000000418bf8d1e73bdf0f86870100008bc7ffc03bd80f86ce01000049c1e103458964b9104589648110413bc80f85850000004183f8010f8c12000000458bd041ffca41d1e2413bda0f86dd000000894a0c448b5210448944240c448bc1418bca448b54240ce9300000000f1f8400000000000f1f800000000041ffca418bdad1e3418b5c991085db0f851200000041ffc84489420cffc9894a104183fa017dd944895e0c488b6c24204883c428850500000000c5f877c383fb080f84f000000041b8010000004403421044894210458bca41d1f941c1fa024503ca453bc87fc0e92c000000428b14d50c000000448bd241ffca8bca412bc8ffc983f909418bca448bd2498bd10f8c20feffffe9e5feffff488bf2418bd390e80000000090448bd8488b742410e975ffffff49baaddeaddeaddeadde4d8bca41bae555feff4589979c0200004d898fa8020000e8000000009041c7879c020000e5bcfeff4d89a7a8020000e8000000009049baaddeaddeaddeadde4d8bc241bac495feff488b7424104589979c0200004d8987a8020000e8000000009041bae56afeff4589979c0200004d89a7a8020000e8000000009049b9000000000000000041baed46feffe979ffffff49b8000000000000000041bae59efeffebab49b8000000000000000041bae587feffeb9941bae560feffebab49b8000000000000000041bae57bfeffe97cffffff49b8000000000000000041bae591feffe967ffffffe80000000090e80000000090  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@2981e1af slotKind: QWORD  <||@
  Comment 48 6 stack:32|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 53 8 r10|DWORD[.] = MOV [rsi|QWORD[.] + 16] size: DWORD  <||@
  Comment 57 10 rdx|DWORD[.] = MOV [r10|DWORD[.] * 8 + 28] size: DWORD state [bci:0]  <||@
  Comment 57 [rsi:0, r10:0, stack:16]at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:675) [bci: 0, duringCall: false, rethrow: false]
              |0            
     locals:  |rsi|QWORD[.]   <||@
  Comment 57 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 65 12 r11|DWORD = MOV [rsi|QWORD[.] + 12] size: DWORD  <||@
  Comment 69 14 r8|DWORD = DEC r11|DWORD size: DWORD  <||@
  Comment 75 16 r9|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@40538b65 encoding: base: 0 shift: 3  <||@
  Comment 82 18 TEST (x: rdx|DWORD[.], y: rdx|DWORD[.]) size: DWORD  <||@
  Comment 84 20 BRANCH trueDestinationProbability: 0.23442118598057549 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B4  <||@
  Comment 90 block B4 null  <||@
  Comment 90 56 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 90 58 rdx|DWORD[.] = MOV [r10|DWORD[.] * 8 + 24] size: DWORD  <||@
  Comment 98 60 r8|DWORD = SHL r8|DWORD size: DWORD  <||@
  Comment 101 62 CMP (x: r8|DWORD, y: [rdx|DWORD[.] * 8 + 12]) size: DWORD state [bci:0]  <||@
  Comment 101 [rdx:0, rsi:0, r9:0, stack:16]at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:675) [bci: 0, duringCall: false, rethrow: false]
              |0            
     locals:  |rsi|QWORD[.]   <||@
  Comment 101 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 109 64 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B4 -> B5 falseDestination: B4 -> B49  <||@
  Comment 115 block B5 null  <||@
  Comment 115 66 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 115 68 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@40538b65 encoding: base: 0 shift: 3  <||@
  Comment 119 70 rdx|DWORD[.] = MOV [rdx|QWORD[.] + r8|DWORD * 4 + 16] size: DWORD  <||@
  Comment 124 72 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@40538b65 encoding: base: 0 shift: 3  <||@
  Comment 128 74 rsi|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD  <||@
  Comment 131 76 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<EconomicMapImpl.findAndRemoveHash(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:2, 27]  <||@
  Comment 131 9  <||@
  Comment 135 {HotSpotMethod<EconomicMapImpl.findAndRemoveHash(Object)>}  <||@
  Comment 140 [stack:16]at org.graalvm.collections.EconomicMapImpl.access$300(EconomicMapImpl.java:56) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:676) [bci: 27, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:32|QWORD[.]   <||@
  Comment 141 78 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 146 80 rdx|DWORD[.] = MOV [rsi|QWORD[.] + 16] size: DWORD  <||@
  Comment 149 82 r10|DWORD = MOV [rdx|DWORD[.] * 8 + 12] size: DWORD state [bci:5, 27]  <||@
  Comment 149 [rdx:0, rsi:0, stack:16]at org.graalvm.collections.EconomicMapImpl.access$300(EconomicMapImpl.java:56) [bci: 5, duringCall: false, rethrow: false]
              |0          |1 
     locals:  |-          |- 
     stack:   |rax|DWORD  |  
  at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:676) [bci: 27, duringCall: true, rethrow: false]
              |0            
     locals:  |rsi|QWORD[.]   <||@
  Comment 149 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 157 84 r11|DWORD = MOV [rsi|QWORD[.] + 12] size: DWORD  <||@
  Comment 161 86 r8|DWORD = DEC r11|DWORD size: DWORD  <||@
  Comment 167 88 r9|DWORD = SUB (x: r10|DWORD, ~y: r8|DWORD) size: DWORD  <||@
  Comment 173 90 r9|DWORD = DEC r9|DWORD size: DWORD  <||@
  Comment 176 92 rcx|DWORD = DEC r10|DWORD size: DWORD  <||@
  Comment 181 94 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@40538b65 encoding: base: 0 shift: 3  <||@
  Comment 185 96 CMP r9|DWORD y: 9 size: DWORD  <||@
  Comment 189 98 BRANCH trueDestinationProbability: 0.8554295858465635 condition: < trueDestination: B5 -> B7 falseDestination: B5 -> B25  <||@
  Comment 195 block B7 null  <||@
  Comment 195 104 [] = LABEL numbPhis: 5 align: false label: ?  <||@
  Comment 195 106 r9|DWORD[.] = MOV [rdx|QWORD[.] + 28] size: DWORD  <||@
  Comment 199 108 TEST (x: r9|DWORD[.], y: r9|DWORD[.]) size: DWORD  <||@
  Comment 202 110 BRANCH trueDestinationProbability: 0.6758796339967927 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B25  <||@
  Comment 208 block B8 null  <||@
  Comment 208 112 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 208 114 r9|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 211 116 JUMP ~[] destination: B8 -> B9  <||@
  Comment 216 block B10 loop 0 depth 1 header:74|LoopBegin  <||@
  Comment 216 124 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 224 126 rbx|DWORD[.] = MOV [rdx|QWORD[.] + 24] size: DWORD  <||@
  Comment 227 128 CMP [rbx|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} state [bci:29, 2, 42]  <||@
  Comment 227 [rdx:0, rbx:0, rsi:0, stack:16]at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:638) [bci: 29, duringCall: false, rethrow: false]
              |0             |1  |2         |3  |4         
     locals:  |rdx|QWORD[.]  |-  |r9|DWORD  |-  |r11|DWORD 
  at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42, duringCall: true, rethrow: false]
              |0            
     locals:  |rsi|QWORD[.] 
     stack:   |rsi|QWORD[.]   <||@
  Comment 227 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 227 {meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}}  <||@
  Comment 238 130 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B20  <||@
  Comment 244 block B11 loop 0 depth 1 header:74|LoopBegin  <||@
  Comment 244 132 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 244 134 rdi|DWORD = MOV [rbx|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 251 136 rax|DWORD = INC r9|DWORD size: DWORD  <||@
  Comment 256 138 rbp|DWORD = SHL rax|DWORD size: DWORD  <||@
  Comment 260 140 CMP (x: rdi|DWORD, y: rbp|DWORD) size: DWORD  <||@
  Comment 262 142 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B11 -> B12 falseDestination: B11 -> B19  <||@
  Comment 268 block B12 loop 0 depth 1 header:74|LoopBegin  <||@
  Comment 268 144 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 268 146 r13|DWORD = SHL r9|DWORD size: DWORD  <||@
  Comment 274 148 CMP (x: rdi|DWORD, y: r13|DWORD) size: DWORD  <||@
  Comment 277 150 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B12 -> B13 falseDestination: B12 -> B18  <||@
  Comment 283 block B13 loop 0 depth 1 header:74|LoopBegin  <||@
  Comment 283 152 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 283 154 r14|DWORD = INC rbp|DWORD size: DWORD  <||@
  Comment 289 156 CMP (x: rdi|DWORD, y: r14|DWORD) size: DWORD  <||@
  Comment 292 158 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B17  <||@
  Comment 298 block B14 loop 0 depth 1 header:74|LoopBegin  <||@
  Comment 298 160 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 298 162 r14|DWORD = INC r13|DWORD size: DWORD  <||@
  Comment 304 164 CMP (x: rdi|DWORD, y: r14|DWORD) size: DWORD  <||@
  Comment 307 166 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B16  <||@
  Comment 313 block B15 loop 0 depth 1 header:74|LoopBegin  <||@
  Comment 313 168 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 313 170 rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@40538b65 encoding: base: 0 shift: 3  <||@
  Comment 317 172 r9|DWORD[.] = MOV [rbx|QWORD[.] + rbp|DWORD * 4 + 16] size: DWORD  <||@
  Comment 322 174 MOV (x: [rbx|QWORD[.] + r13|DWORD * 4 + 16], y: r9|DWORD[.]) size: DWORD  <||@
  Comment 327 176 r9|QWORD[.] = LEA [rbx|QWORD[.] + r13|DWORD * 4 + 16] size: QWORD  <||@
  Comment 332 178 r9|QWORD[*] = SHR r9|QWORD[.] y: 9 size: QWORD  <||@
  Comment 336 180 rdi|QWORD = MOVE input: long[4682670080|0x1171be000]  <||@
  Comment 346 182 MOVB (x: [r9|QWORD[*] + rdi|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 350 184 r9|QWORD = MOVSXD rbp|DWORD size: QWORD  <||@
  Comment 353 186 r9|DWORD[.] = MOV [rbx|QWORD[.] + r9|QWORD * 4 + 20] size: DWORD  <||@
  Comment 358 188 rbp|QWORD = MOVSXD r13|DWORD size: QWORD  <||@
  Comment 361 190 MOV (x: [rbx|QWORD[.] + rbp|QWORD * 4 + 20], y: r9|DWORD[.]) size: DWORD  <||@
  Comment 366 192 r9|QWORD[.] = LEA [rbx|QWORD[.] + rbp|QWORD * 4 + 20] size: QWORD  <||@
  Comment 371 194 r9|QWORD[*] = SHR r9|QWORD[.] y: 9 size: QWORD  <||@
  Comment 375 196 MOVB (x: [r9|QWORD[*] + rdi|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 379 198 r9|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 382 200 JUMP ~[] destination: B15 -> B9  <||@
  Comment 382 block B9 loop 0 depth 1 header:74|LoopBegin  <||@
  Comment 382 118 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 382 120 CMP (x: rcx|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 385 122 BRANCH trueDestinationProbability: 0.49233439910722987 condition: > trueDestination: B9 -> B10 falseDestination: B9 -> B22  <||@
  Comment 391 block B22 null  <||@
  Comment 391 254 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 391 256 r11|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 394 258 r8|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 397 260 JUMP ~[] destination: B22 -> B25  <||@
  Comment 397 block B25 null  <||@
  Comment 397 270 [] = LABEL numbPhis: 5 align: false label: ?  <||@
  Comment 397 272 r9|DWORD[.] = MOV [rdx|QWORD[.] + 24] size: DWORD  <||@
  Comment 401 274 rbx|DWORD = MOV [r9|DWORD[.] * 8 + 12] size: DWORD state [bci:72, 2, 42]  <||@
  Comment 401 [rdx:0, rsi:0, r9:0, stack:16]at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:646) [bci: 72, duringCall: false, rethrow: false]
              |0             |1  |2         |3  |4         
     locals:  |rdx|QWORD[.]  |-  |r8|DWORD  |-  |r11|DWORD 
  at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42, duringCall: true, rethrow: false]
              |0            
     locals:  |rsi|QWORD[.] 
     stack:   |rsi|QWORD[.]   <||@
  Comment 401 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 409 276 rdi|DWORD = SHL r8|DWORD size: DWORD  <||@
  Comment 414 278 CMP (x: rbx|DWORD, y: rdi|DWORD) size: DWORD  <||@
  Comment 416 280 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B25 -> B26 falseDestination: B25 -> B47  <||@
  Comment 422 block B26 null  <||@
  Comment 422 282 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 422 284 rax|DWORD = INC rdi|DWORD size: DWORD  <||@
  Comment 426 286 CMP (x: rbx|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 428 288 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B26 -> B27 falseDestination: B26 -> B46  <||@
  Comment 434 block B27 null  <||@
  Comment 434 290 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 434 292 r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@40538b65 encoding: base: 0 shift: 3  <||@
  Comment 438 294 MOV (x: [r9|QWORD[.] + rdi|DWORD * 4 + 16], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 443 296 MOV (x: [r9|QWORD[.] + rax|DWORD * 4 + 16], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 448 298 CMP (x: rcx|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 451 300 BRANCH trueDestinationProbability: 0.640014121444422 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B39  <||@
  Comment 457 block B28 null  <||@
  Comment 457 302 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 457 304 CMP r8|DWORD y: 1 size: DWORD  <||@
  Comment 461 306 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B28 -> B32 falseDestination: B28 -> B30  <||@
  Comment 467 block B30 null  <||@
  Comment 467 312 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 467 314 r10|DWORD = DEC r8|DWORD size: DWORD  <||@
  Comment 473 316 r10|DWORD = SHL r10|DWORD size: DWORD  <||@
  Comment 476 318 CMP (x: rbx|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 479 320 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B30 -> B32 falseDestination: B30 -> B38  <||@
  Comment 485 block B32 null  <||@
  Comment 485 326 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 485 328 MOV (x: [rdx|QWORD[.] + 12], y: rcx|DWORD) size: DWORD  <||@
  Comment 488 330 r10|DWORD = MOV [rdx|QWORD[.] + 16] size: DWORD  <||@
  Comment 492 332 stack:36|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 497 334 r8|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 500 336 rcx|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 503 338 r10|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 508 340 JUMP ~[] destination: B32 -> B33  <||@
  Comment 513 block B35 loop 1 depth 1 header:127|LoopBegin  <||@
  Comment 513 352 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 528 354 r10|DWORD = DEC r10|DWORD size: DWORD  <||@
  Comment 531 356 rbx|DWORD = SHL r10|DWORD size: DWORD  <||@
  Comment 536 358 rbx|DWORD[.] = MOV [r9|QWORD[.] + rbx|DWORD * 4 + 16] size: DWORD  <||@
  Comment 541 360 TEST (x: rbx|DWORD[.], y: rbx|DWORD[.]) size: DWORD  <||@
  Comment 543 362 BRANCH trueDestinationProbability: 0.09548013245033116 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B45  <||@
  Comment 549 block B36 loop 1 depth 1 header:127|LoopBegin  <||@
  Comment 549 364 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 549 366 r8|DWORD = DEC r8|DWORD size: DWORD  <||@
  Comment 552 368 MOV (x: [rdx|QWORD[.] + 12], y: r8|DWORD) size: DWORD  <||@
  Comment 556 370 rcx|DWORD = DEC rcx|DWORD size: DWORD  <||@
  Comment 558 372 MOV (x: [rdx|QWORD[.] + 16], y: rcx|DWORD) size: DWORD  <||@
  Comment 561 374 JUMP ~[] destination: B36 -> B33  <||@
  Comment 561 block B33 loop 1 depth 1 header:127|LoopBegin  <||@
  Comment 561 342 [] = LABEL numbPhis: 3 align: false label: ?  <||@
  Comment 561 344 CMP r10|DWORD y: 1 size: DWORD  <||@
  Comment 565 346 BRANCH trueDestinationProbability: 0.1273946083388714 condition: < trueDestination: B33 -> B45 falseDestination: B33 -> B35  <||@
  Comment 567 block B45 null  <||@
  Comment 567 448 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 567 450 MOV (x: [rsi|QWORD[.] + 12], y: r11|DWORD) size: DWORD  <||@
  Comment 571 452 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 580 12  <||@
  Comment 590 block B39 null  <||@
  Comment 590 390 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 590 392 CMP rbx|DWORD y: 8 size: DWORD  <||@
  Comment 593 394 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B42  <||@
  Comment 599 block B42 null  <||@
  Comment 599 412 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 599 414 r8|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 605 416 r8|DWORD = ADD (x: r8|DWORD, ~y: [rdx|QWORD[.] + 16]) size: DWORD  <||@
  Comment 609 418 MOV (x: [rdx|QWORD[.] + 16], y: r8|DWORD) size: DWORD  <||@
  Comment 613 420 r9|DWORD = SAR r10|DWORD size: DWORD  <||@
  Comment 619 422 r10|DWORD = SAR r10|DWORD y: 2 size: DWORD  <||@
  Comment 623 424 r9|DWORD = ADD (x: r9|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 626 426 CMP (x: r9|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 629 428 BRANCH trueDestinationProbability: 0.9807503712628541 condition: > trueDestination: B42 -> B45 falseDestination: B42 -> B44  <||@
  Comment 636 block B1 null  <||@
  Comment 636 22 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 636 24 rdx|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 644 26 r10|DWORD = DEC rdx|DWORD size: DWORD  <||@
  Comment 650 28 rcx|DWORD = SUB (x: rdx|DWORD, ~y: r8|DWORD) size: DWORD  <||@
  Comment 655 30 rcx|DWORD = DEC rcx|DWORD size: DWORD  <||@
  Comment 657 32 CMP rcx|DWORD y: 9 size: DWORD  <||@
  Comment 660 38 rcx|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 663 40 r10|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 666 42 rdx|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD  <||@
  Comment 669 34 BRANCH trueDestinationProbability: 0.8554295858465635 condition: < trueDestination: B1 -> B7 falseDestination: B1 -> B25  <||@
  Comment 680 block B44 null  <||@
  Comment 680 434 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 680 436 rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 683 438 rdx|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 686 440 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<EconomicMapImpl.compressLarge(int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:32, 157, 2, 42]  <||@
  Comment 686 9  <||@
  Comment 687 {HotSpotMethod<EconomicMapImpl.compressLarge(int)>}  <||@
  Comment 692 [stack:16]at org.graalvm.collections.EconomicMapImpl.maybeCompress(EconomicMapImpl.java:476) [bci: 32, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:658) [bci: 157, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:32|QWORD[.] 
     stack:   |stack:32|QWORD[.]   <||@
  Comment 693 442 r11|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 696 444 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 701 446 JUMP ~[] destination: B44 -> B45  <||@
  Comment 706 block B38 null  <||@
  Comment 706 380 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 706 382 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@480163006]  <||@
  Comment 706 {Object[d.a@480163006]}  <||@
  Comment 716 384 r9|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 719 386 r10|DWORD = MOVE input: int[-109083|0xfffffffffffe55e5]  <||@
  Comment 725 388 JUMP ~[] destination: B38 -> B41  <||@
  Comment 725 block B41 null  <||@
  Comment 725 404 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 725 406 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 732 408 MOV (x: [r15|QWORD + 680], y: r9|QWORD[.]) size: QWORD  <||@
  Comment 739 410 DEOPT info [bci:11, 81, 2, 42]  <||@
  Comment 739 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 744 [rdx:0, stack:16]at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:792) [bci: 11, duringCall: false, rethrow: false]
              |0             |1         |2            
     locals:  |rdx|QWORD[.]  |r8|DWORD  |Object[null] 
  at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:647) [bci: 81, duringCall: true, rethrow: false]
              |0             |1  |2         |3  |4         
     locals:  |rdx|QWORD[.]  |-  |r8|DWORD  |-  |r11|DWORD 
  at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:32|QWORD[.] 
     stack:   |stack:32|QWORD[.]   <||@
  Comment 745 block B49 null  <||@
  Comment 745 474 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 745 476 MOV [r15|QWORD + 668] y: -82715 size: DWORD  <||@
  Comment 756 478 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 763 480 DEOPT info [bci:0]  <||@
  Comment 763 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 768 [stack:16]at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:675) [bci: 0, duringCall: false, rethrow: false]
              |0                 
     locals:  |stack:32|QWORD[.]   <||@
  Comment 769 block B20 null  <||@
  Comment 769 234 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 769 236 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@789277403]  <||@
  Comment 769 {Object[d.a@789277403]}  <||@
  Comment 779 238 r8|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 782 240 r10|DWORD = MOVE input: int[-92732|0xfffffffffffe95c4]  <||@
  Comment 788 242 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 793 244 JUMP ~[] destination: B20 -> B21  <||@
  Comment 793 block B21 null  <||@
  Comment 793 246 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 793 248 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 800 250 MOV (x: [r15|QWORD + 680], y: r8|QWORD[.]) size: QWORD  <||@
  Comment 807 252 DEOPT info [bci:29, 2, 42]  <||@
  Comment 807 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 812 [rdx:0, rsi:0]at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:638) [bci: 29, duringCall: false, rethrow: false]
              |0             |1  |2         |3  |4         
     locals:  |rdx|QWORD[.]  |-  |r9|DWORD  |-  |r11|DWORD 
  at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42, duringCall: true, rethrow: false]
              |0            
     locals:  |rsi|QWORD[.] 
     stack:   |rsi|QWORD[.]   <||@
  Comment 813 block B47 null  <||@
  Comment 813 460 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 813 462 r10|DWORD = MOVE input: int[-103707|0xfffffffffffe6ae5]  <||@
  Comment 819 464 JUMP ~[] destination: B47 -> B48  <||@
  Comment 819 block B48 null  <||@
  Comment 819 466 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 819 468 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 826 470 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 833 472 DEOPT info [bci:72, 2, 42]  <||@
  Comment 833 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 838 [rdx:0, stack:16]at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:646) [bci: 72, duringCall: false, rethrow: false]
              |0             |1  |2         |3  |4         
     locals:  |rdx|QWORD[.]  |-  |r8|DWORD  |-  |r11|DWORD 
  at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:32|QWORD[.] 
     stack:   |stack:32|QWORD[.]   <||@
  Comment 839 block B40 null  <||@
  Comment 839 396 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 839 398 r9|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 849 400 r10|DWORD = MOVE input: int[-112915|0xfffffffffffe46ed]  <||@
  Comment 855 402 JUMP ~[] destination: B40 -> B41  <||@
  Comment 860 block B19 null  <||@
  Comment 860 226 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 860 228 r8|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 870 230 r10|DWORD = MOVE input: int[-90395|0xfffffffffffe9ee5]  <||@
  Comment 876 232 JUMP ~[] destination: B19 -> B21  <||@
  Comment 878 block B17 null  <||@
  Comment 878 210 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 878 212 r8|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 888 214 r10|DWORD = MOVE input: int[-96283|0xfffffffffffe87e5]  <||@
  Comment 894 216 JUMP ~[] destination: B17 -> B21  <||@
  Comment 896 block B46 null  <||@
  Comment 896 454 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 896 456 r10|DWORD = MOVE input: int[-106267|0xfffffffffffe60e5]  <||@
  Comment 902 458 JUMP ~[] destination: B46 -> B48  <||@
  Comment 904 block B16 null  <||@
  Comment 904 202 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 904 204 r8|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 914 206 r10|DWORD = MOVE input: int[-99355|0xfffffffffffe7be5]  <||@
  Comment 920 208 JUMP ~[] destination: B16 -> B21  <||@
  Comment 925 block B18 null  <||@
  Comment 925 218 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 925 220 r8|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 935 222 r10|DWORD = MOVE input: int[-93723|0xfffffffffffe91e5]  <||@
  Comment 941 224 JUMP ~[] destination: B18 -> B21  <||@
  Comment 946 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 946 4  <||@
  Comment 952 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 952 5  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-10113[org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove()]"
  method "HotSpotCompilation-10113[org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove()]"
  date 1527005238509
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 1068ca4c0 448b560849c1e203493bc20f858fb9f3ff900f1f80000000000f1f800000000089842400c0feff4883ec2848896c24204889742410448b5610428b14d51c000000448b5e0c458bc341ffc8458bca49c1e10385d20f8422020000428b14d51800000041d1e0443b04d50c0000000f837602000048c1e203428b54821048c1e203498bf10f1f4000e854bbf3ff90488b7424108b5610448b14d50c000000448b5e0c458bc341ffc8458bca452bc841ffc9418bcaffc948c1e2034183f9090f8dca000000448b4a1c4585c90f85bd000000458bc8e9a60000000f1f8400000000008b5a18813cdd08000000f52200f80f850d0200008b3cdd0c000000418bc1ffc08be8d1e53bfd0f8650020000458be941d1e5413bfd0f8682020000448bf541ffc6413bfe0f8644020000458bf541ffc6413bfe0f864f02000048c1e303448b4cab1046894cab104e8d4cab1049c1e90948bf00e01b1701000000458824394c63cd468b4c8b144963ed44894cab144c8d4cab1449c1e90945882439448bc8413bc90f8f59ffffff458bd8458bc1448b4a18428b1ccd0c000000418bf8d1e73bdf0f86870100008bc7ffc03bd80f86ce01000049c1e103458964b9104589648110413bc80f85850000004183f8010f8c12000000458bd041ffca41d1e2413bda0f86dd000000894a0c448b5210448944240c448bc1418bca448b54240ce9300000000f1f8400000000000f1f800000000041ffca418bdad1e3418b5c991085db0f851200000041ffc84489420cffc9894a104183fa017dd944895e0c488b6c24204883c4288505fc48fcfdc5f877c383fb080f84f000000041b8010000004403421044894210458bca41d1f941c1fa024503ca453bc87fc0e92c000000428b14d50c000000448bd241ffca8bca412bc8ffc983f909418bca448bd2498bd10f8c20feffffe9e5feffff488bf2418bd390e82cb9f3ff90448bd8488b742410e975ffffff49baf8c8d173070000004d8bca41bae555feff4589979c0200004d898fa8020000e856cef3ff9041c7879c020000e5bcfeff4d89a7a8020000e83ecef3ff9049ba20aeaf73070000004d8bc241bac495feff488b7424104589979c0200004d8987a8020000e812cef3ff9041bae56afeff4589979c0200004d89a7a8020000e8f8cdf3ff9049b9000000000000000041baed46feffe979ffffff49b8000000000000000041bae59efeffebab49b8000000000000000041bae587feffeb9941bae560feffebab49b8000000000000000041bae57bfeffe97cffffff49b8000000000000000041bae591feffe967ffffffe8a9fd370090e883ccf3ff90f4f448bb0000000000000000e9fbffffff48bb0000000000000000e9fbfffffff4f4  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@2981e1af slotKind: QWORD  <||@
  Comment 48 6 stack:32|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 53 8 r10|DWORD[.] = MOV [rsi|QWORD[.] + 16] size: DWORD  <||@
  Comment 57 10 rdx|DWORD[.] = MOV [r10|DWORD[.] * 8 + 28] size: DWORD state [bci:0]  <||@
  Comment 57 [rsi:0, r10:0, stack:16]at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:675) [bci: 0, duringCall: false, rethrow: false]
              |0            
     locals:  |rsi|QWORD[.]   <||@
  Comment 57 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 65 12 r11|DWORD = MOV [rsi|QWORD[.] + 12] size: DWORD  <||@
  Comment 69 14 r8|DWORD = DEC r11|DWORD size: DWORD  <||@
  Comment 75 16 r9|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@40538b65 encoding: base: 0 shift: 3  <||@
  Comment 82 18 TEST (x: rdx|DWORD[.], y: rdx|DWORD[.]) size: DWORD  <||@
  Comment 84 20 BRANCH trueDestinationProbability: 0.23442118598057549 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B4  <||@
  Comment 90 block B4 null  <||@
  Comment 90 56 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 90 58 rdx|DWORD[.] = MOV [r10|DWORD[.] * 8 + 24] size: DWORD  <||@
  Comment 98 60 r8|DWORD = SHL r8|DWORD size: DWORD  <||@
  Comment 101 62 CMP (x: r8|DWORD, y: [rdx|DWORD[.] * 8 + 12]) size: DWORD state [bci:0]  <||@
  Comment 101 [rdx:0, rsi:0, r9:0, stack:16]at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:675) [bci: 0, duringCall: false, rethrow: false]
              |0            
     locals:  |rsi|QWORD[.]   <||@
  Comment 101 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 109 64 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B4 -> B5 falseDestination: B4 -> B49  <||@
  Comment 115 block B5 null  <||@
  Comment 115 66 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 115 68 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@40538b65 encoding: base: 0 shift: 3  <||@
  Comment 119 70 rdx|DWORD[.] = MOV [rdx|QWORD[.] + r8|DWORD * 4 + 16] size: DWORD  <||@
  Comment 124 72 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@40538b65 encoding: base: 0 shift: 3  <||@
  Comment 128 74 rsi|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD  <||@
  Comment 131 76 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<EconomicMapImpl.findAndRemoveHash(Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:2, 27]  <||@
  Comment 131 9  <||@
  Comment 135 {HotSpotMethod<EconomicMapImpl.findAndRemoveHash(Object)>}  <||@
  Comment 140 [stack:16]at org.graalvm.collections.EconomicMapImpl.access$300(EconomicMapImpl.java:56) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:676) [bci: 27, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:32|QWORD[.]   <||@
  Comment 141 78 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 146 80 rdx|DWORD[.] = MOV [rsi|QWORD[.] + 16] size: DWORD  <||@
  Comment 149 82 r10|DWORD = MOV [rdx|DWORD[.] * 8 + 12] size: DWORD state [bci:5, 27]  <||@
  Comment 149 [rdx:0, rsi:0, stack:16]at org.graalvm.collections.EconomicMapImpl.access$300(EconomicMapImpl.java:56) [bci: 5, duringCall: false, rethrow: false]
              |0          |1 
     locals:  |-          |- 
     stack:   |rax|DWORD  |  
  at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:676) [bci: 27, duringCall: true, rethrow: false]
              |0            
     locals:  |rsi|QWORD[.]   <||@
  Comment 149 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 157 84 r11|DWORD = MOV [rsi|QWORD[.] + 12] size: DWORD  <||@
  Comment 161 86 r8|DWORD = DEC r11|DWORD size: DWORD  <||@
  Comment 167 88 r9|DWORD = SUB (x: r10|DWORD, ~y: r8|DWORD) size: DWORD  <||@
  Comment 173 90 r9|DWORD = DEC r9|DWORD size: DWORD  <||@
  Comment 176 92 rcx|DWORD = DEC r10|DWORD size: DWORD  <||@
  Comment 181 94 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@40538b65 encoding: base: 0 shift: 3  <||@
  Comment 185 96 CMP r9|DWORD y: 9 size: DWORD  <||@
  Comment 189 98 BRANCH trueDestinationProbability: 0.8554295858465635 condition: < trueDestination: B5 -> B7 falseDestination: B5 -> B25  <||@
  Comment 195 block B7 null  <||@
  Comment 195 104 [] = LABEL numbPhis: 5 align: false label: ?  <||@
  Comment 195 106 r9|DWORD[.] = MOV [rdx|QWORD[.] + 28] size: DWORD  <||@
  Comment 199 108 TEST (x: r9|DWORD[.], y: r9|DWORD[.]) size: DWORD  <||@
  Comment 202 110 BRANCH trueDestinationProbability: 0.6758796339967927 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B25  <||@
  Comment 208 block B8 null  <||@
  Comment 208 112 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 208 114 r9|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 211 116 JUMP ~[] destination: B8 -> B9  <||@
  Comment 216 block B10 loop 0 depth 1 header:74|LoopBegin  <||@
  Comment 216 124 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 224 126 rbx|DWORD[.] = MOV [rdx|QWORD[.] + 24] size: DWORD  <||@
  Comment 227 128 CMP [rbx|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} state [bci:29, 2, 42]  <||@
  Comment 227 [rdx:0, rbx:0, rsi:0, stack:16]at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:638) [bci: 29, duringCall: false, rethrow: false]
              |0             |1  |2         |3  |4         
     locals:  |rdx|QWORD[.]  |-  |r9|DWORD  |-  |r11|DWORD 
  at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42, duringCall: true, rethrow: false]
              |0            
     locals:  |rsi|QWORD[.] 
     stack:   |rsi|QWORD[.]   <||@
  Comment 227 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 227 {meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}}  <||@
  Comment 238 130 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B20  <||@
  Comment 244 block B11 loop 0 depth 1 header:74|LoopBegin  <||@
  Comment 244 132 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 244 134 rdi|DWORD = MOV [rbx|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 251 136 rax|DWORD = INC r9|DWORD size: DWORD  <||@
  Comment 256 138 rbp|DWORD = SHL rax|DWORD size: DWORD  <||@
  Comment 260 140 CMP (x: rdi|DWORD, y: rbp|DWORD) size: DWORD  <||@
  Comment 262 142 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B11 -> B12 falseDestination: B11 -> B19  <||@
  Comment 268 block B12 loop 0 depth 1 header:74|LoopBegin  <||@
  Comment 268 144 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 268 146 r13|DWORD = SHL r9|DWORD size: DWORD  <||@
  Comment 274 148 CMP (x: rdi|DWORD, y: r13|DWORD) size: DWORD  <||@
  Comment 277 150 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B12 -> B13 falseDestination: B12 -> B18  <||@
  Comment 283 block B13 loop 0 depth 1 header:74|LoopBegin  <||@
  Comment 283 152 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 283 154 r14|DWORD = INC rbp|DWORD size: DWORD  <||@
  Comment 289 156 CMP (x: rdi|DWORD, y: r14|DWORD) size: DWORD  <||@
  Comment 292 158 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B17  <||@
  Comment 298 block B14 loop 0 depth 1 header:74|LoopBegin  <||@
  Comment 298 160 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 298 162 r14|DWORD = INC r13|DWORD size: DWORD  <||@
  Comment 304 164 CMP (x: rdi|DWORD, y: r14|DWORD) size: DWORD  <||@
  Comment 307 166 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B16  <||@
  Comment 313 block B15 loop 0 depth 1 header:74|LoopBegin  <||@
  Comment 313 168 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 313 170 rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@40538b65 encoding: base: 0 shift: 3  <||@
  Comment 317 172 r9|DWORD[.] = MOV [rbx|QWORD[.] + rbp|DWORD * 4 + 16] size: DWORD  <||@
  Comment 322 174 MOV (x: [rbx|QWORD[.] + r13|DWORD * 4 + 16], y: r9|DWORD[.]) size: DWORD  <||@
  Comment 327 176 r9|QWORD[.] = LEA [rbx|QWORD[.] + r13|DWORD * 4 + 16] size: QWORD  <||@
  Comment 332 178 r9|QWORD[*] = SHR r9|QWORD[.] y: 9 size: QWORD  <||@
  Comment 336 180 rdi|QWORD = MOVE input: long[4682670080|0x1171be000]  <||@
  Comment 346 182 MOVB (x: [r9|QWORD[*] + rdi|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 350 184 r9|QWORD = MOVSXD rbp|DWORD size: QWORD  <||@
  Comment 353 186 r9|DWORD[.] = MOV [rbx|QWORD[.] + r9|QWORD * 4 + 20] size: DWORD  <||@
  Comment 358 188 rbp|QWORD = MOVSXD r13|DWORD size: QWORD  <||@
  Comment 361 190 MOV (x: [rbx|QWORD[.] + rbp|QWORD * 4 + 20], y: r9|DWORD[.]) size: DWORD  <||@
  Comment 366 192 r9|QWORD[.] = LEA [rbx|QWORD[.] + rbp|QWORD * 4 + 20] size: QWORD  <||@
  Comment 371 194 r9|QWORD[*] = SHR r9|QWORD[.] y: 9 size: QWORD  <||@
  Comment 375 196 MOVB (x: [r9|QWORD[*] + rdi|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 379 198 r9|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 382 200 JUMP ~[] destination: B15 -> B9  <||@
  Comment 382 block B9 loop 0 depth 1 header:74|LoopBegin  <||@
  Comment 382 118 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 382 120 CMP (x: rcx|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 385 122 BRANCH trueDestinationProbability: 0.49233439910722987 condition: > trueDestination: B9 -> B10 falseDestination: B9 -> B22  <||@
  Comment 391 block B22 null  <||@
  Comment 391 254 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 391 256 r11|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 394 258 r8|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 397 260 JUMP ~[] destination: B22 -> B25  <||@
  Comment 397 block B25 null  <||@
  Comment 397 270 [] = LABEL numbPhis: 5 align: false label: ?  <||@
  Comment 397 272 r9|DWORD[.] = MOV [rdx|QWORD[.] + 24] size: DWORD  <||@
  Comment 401 274 rbx|DWORD = MOV [r9|DWORD[.] * 8 + 12] size: DWORD state [bci:72, 2, 42]  <||@
  Comment 401 [rdx:0, rsi:0, r9:0, stack:16]at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:646) [bci: 72, duringCall: false, rethrow: false]
              |0             |1  |2         |3  |4         
     locals:  |rdx|QWORD[.]  |-  |r8|DWORD  |-  |r11|DWORD 
  at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42, duringCall: true, rethrow: false]
              |0            
     locals:  |rsi|QWORD[.] 
     stack:   |rsi|QWORD[.]   <||@
  Comment 401 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 409 276 rdi|DWORD = SHL r8|DWORD size: DWORD  <||@
  Comment 414 278 CMP (x: rbx|DWORD, y: rdi|DWORD) size: DWORD  <||@
  Comment 416 280 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B25 -> B26 falseDestination: B25 -> B47  <||@
  Comment 422 block B26 null  <||@
  Comment 422 282 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 422 284 rax|DWORD = INC rdi|DWORD size: DWORD  <||@
  Comment 426 286 CMP (x: rbx|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 428 288 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B26 -> B27 falseDestination: B26 -> B46  <||@
  Comment 434 block B27 null  <||@
  Comment 434 290 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 434 292 r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@40538b65 encoding: base: 0 shift: 3  <||@
  Comment 438 294 MOV (x: [r9|QWORD[.] + rdi|DWORD * 4 + 16], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 443 296 MOV (x: [r9|QWORD[.] + rax|DWORD * 4 + 16], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 448 298 CMP (x: rcx|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 451 300 BRANCH trueDestinationProbability: 0.640014121444422 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B39  <||@
  Comment 457 block B28 null  <||@
  Comment 457 302 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 457 304 CMP r8|DWORD y: 1 size: DWORD  <||@
  Comment 461 306 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B28 -> B32 falseDestination: B28 -> B30  <||@
  Comment 467 block B30 null  <||@
  Comment 467 312 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 467 314 r10|DWORD = DEC r8|DWORD size: DWORD  <||@
  Comment 473 316 r10|DWORD = SHL r10|DWORD size: DWORD  <||@
  Comment 476 318 CMP (x: rbx|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 479 320 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B30 -> B32 falseDestination: B30 -> B38  <||@
  Comment 485 block B32 null  <||@
  Comment 485 326 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 485 328 MOV (x: [rdx|QWORD[.] + 12], y: rcx|DWORD) size: DWORD  <||@
  Comment 488 330 r10|DWORD = MOV [rdx|QWORD[.] + 16] size: DWORD  <||@
  Comment 492 332 stack:36|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 497 334 r8|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 500 336 rcx|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 503 338 r10|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 508 340 JUMP ~[] destination: B32 -> B33  <||@
  Comment 513 block B35 loop 1 depth 1 header:127|LoopBegin  <||@
  Comment 513 352 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 528 354 r10|DWORD = DEC r10|DWORD size: DWORD  <||@
  Comment 531 356 rbx|DWORD = SHL r10|DWORD size: DWORD  <||@
  Comment 536 358 rbx|DWORD[.] = MOV [r9|QWORD[.] + rbx|DWORD * 4 + 16] size: DWORD  <||@
  Comment 541 360 TEST (x: rbx|DWORD[.], y: rbx|DWORD[.]) size: DWORD  <||@
  Comment 543 362 BRANCH trueDestinationProbability: 0.09548013245033116 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B45  <||@
  Comment 549 block B36 loop 1 depth 1 header:127|LoopBegin  <||@
  Comment 549 364 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 549 366 r8|DWORD = DEC r8|DWORD size: DWORD  <||@
  Comment 552 368 MOV (x: [rdx|QWORD[.] + 12], y: r8|DWORD) size: DWORD  <||@
  Comment 556 370 rcx|DWORD = DEC rcx|DWORD size: DWORD  <||@
  Comment 558 372 MOV (x: [rdx|QWORD[.] + 16], y: rcx|DWORD) size: DWORD  <||@
  Comment 561 374 JUMP ~[] destination: B36 -> B33  <||@
  Comment 561 block B33 loop 1 depth 1 header:127|LoopBegin  <||@
  Comment 561 342 [] = LABEL numbPhis: 3 align: false label: ?  <||@
  Comment 561 344 CMP r10|DWORD y: 1 size: DWORD  <||@
  Comment 565 346 BRANCH trueDestinationProbability: 0.1273946083388714 condition: < trueDestination: B33 -> B45 falseDestination: B33 -> B35  <||@
  Comment 567 block B45 null  <||@
  Comment 567 448 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 567 450 MOV (x: [rsi|QWORD[.] + 12], y: r11|DWORD) size: DWORD  <||@
  Comment 571 452 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 580 12  <||@
  Comment 590 block B39 null  <||@
  Comment 590 390 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 590 392 CMP rbx|DWORD y: 8 size: DWORD  <||@
  Comment 593 394 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B42  <||@
  Comment 599 block B42 null  <||@
  Comment 599 412 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 599 414 r8|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 605 416 r8|DWORD = ADD (x: r8|DWORD, ~y: [rdx|QWORD[.] + 16]) size: DWORD  <||@
  Comment 609 418 MOV (x: [rdx|QWORD[.] + 16], y: r8|DWORD) size: DWORD  <||@
  Comment 613 420 r9|DWORD = SAR r10|DWORD size: DWORD  <||@
  Comment 619 422 r10|DWORD = SAR r10|DWORD y: 2 size: DWORD  <||@
  Comment 623 424 r9|DWORD = ADD (x: r9|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 626 426 CMP (x: r9|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 629 428 BRANCH trueDestinationProbability: 0.9807503712628541 condition: > trueDestination: B42 -> B45 falseDestination: B42 -> B44  <||@
  Comment 636 block B1 null  <||@
  Comment 636 22 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 636 24 rdx|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 644 26 r10|DWORD = DEC rdx|DWORD size: DWORD  <||@
  Comment 650 28 rcx|DWORD = SUB (x: rdx|DWORD, ~y: r8|DWORD) size: DWORD  <||@
  Comment 655 30 rcx|DWORD = DEC rcx|DWORD size: DWORD  <||@
  Comment 657 32 CMP rcx|DWORD y: 9 size: DWORD  <||@
  Comment 660 38 rcx|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 663 40 r10|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 666 42 rdx|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD  <||@
  Comment 669 34 BRANCH trueDestinationProbability: 0.8554295858465635 condition: < trueDestination: B1 -> B7 falseDestination: B1 -> B25  <||@
  Comment 680 block B44 null  <||@
  Comment 680 434 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 680 436 rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 683 438 rdx|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 686 440 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<EconomicMapImpl.compressLarge(int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:32, 157, 2, 42]  <||@
  Comment 686 9  <||@
  Comment 687 {HotSpotMethod<EconomicMapImpl.compressLarge(int)>}  <||@
  Comment 692 [stack:16]at org.graalvm.collections.EconomicMapImpl.maybeCompress(EconomicMapImpl.java:476) [bci: 32, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:658) [bci: 157, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:32|QWORD[.] 
     stack:   |stack:32|QWORD[.]   <||@
  Comment 693 442 r11|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 696 444 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 701 446 JUMP ~[] destination: B44 -> B45  <||@
  Comment 706 block B38 null  <||@
  Comment 706 380 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 706 382 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@480163006]  <||@
  Comment 706 {Object[d.a@480163006]}  <||@
  Comment 716 384 r9|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 719 386 r10|DWORD = MOVE input: int[-109083|0xfffffffffffe55e5]  <||@
  Comment 725 388 JUMP ~[] destination: B38 -> B41  <||@
  Comment 725 block B41 null  <||@
  Comment 725 404 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 725 406 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 732 408 MOV (x: [r15|QWORD + 680], y: r9|QWORD[.]) size: QWORD  <||@
  Comment 739 410 DEOPT info [bci:11, 81, 2, 42]  <||@
  Comment 739 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 744 [rdx:0, stack:16]at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:792) [bci: 11, duringCall: false, rethrow: false]
              |0             |1         |2            
     locals:  |rdx|QWORD[.]  |r8|DWORD  |Object[null] 
  at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:647) [bci: 81, duringCall: true, rethrow: false]
              |0             |1  |2         |3  |4         
     locals:  |rdx|QWORD[.]  |-  |r8|DWORD  |-  |r11|DWORD 
  at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:32|QWORD[.] 
     stack:   |stack:32|QWORD[.]   <||@
  Comment 745 block B49 null  <||@
  Comment 745 474 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 745 476 MOV [r15|QWORD + 668] y: -82715 size: DWORD  <||@
  Comment 756 478 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 763 480 DEOPT info [bci:0]  <||@
  Comment 763 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 768 [stack:16]at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:675) [bci: 0, duringCall: false, rethrow: false]
              |0                 
     locals:  |stack:32|QWORD[.]   <||@
  Comment 769 block B20 null  <||@
  Comment 769 234 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 769 236 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@789277403]  <||@
  Comment 769 {Object[d.a@789277403]}  <||@
  Comment 779 238 r8|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 782 240 r10|DWORD = MOVE input: int[-92732|0xfffffffffffe95c4]  <||@
  Comment 788 242 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 793 244 JUMP ~[] destination: B20 -> B21  <||@
  Comment 793 block B21 null  <||@
  Comment 793 246 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 793 248 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 800 250 MOV (x: [r15|QWORD + 680], y: r8|QWORD[.]) size: QWORD  <||@
  Comment 807 252 DEOPT info [bci:29, 2, 42]  <||@
  Comment 807 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 812 [rdx:0, rsi:0]at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:638) [bci: 29, duringCall: false, rethrow: false]
              |0             |1  |2         |3  |4         
     locals:  |rdx|QWORD[.]  |-  |r9|DWORD  |-  |r11|DWORD 
  at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42, duringCall: true, rethrow: false]
              |0            
     locals:  |rsi|QWORD[.] 
     stack:   |rsi|QWORD[.]   <||@
  Comment 813 block B47 null  <||@
  Comment 813 460 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 813 462 r10|DWORD = MOVE input: int[-103707|0xfffffffffffe6ae5]  <||@
  Comment 819 464 JUMP ~[] destination: B47 -> B48  <||@
  Comment 819 block B48 null  <||@
  Comment 819 466 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 819 468 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 826 470 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 833 472 DEOPT info [bci:72, 2, 42]  <||@
  Comment 833 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 838 [rdx:0, stack:16]at org.graalvm.collections.EconomicMapImpl.remove(EconomicMapImpl.java:646) [bci: 72, duringCall: false, rethrow: false]
              |0             |1  |2         |3  |4         
     locals:  |rdx|QWORD[.]  |-  |r8|DWORD  |-  |r11|DWORD 
  at org.graalvm.collections.EconomicMapImpl.access$400(EconomicMapImpl.java:56) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicMapImpl$SparseMapIterator.remove(EconomicMapImpl.java:678) [bci: 42, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:32|QWORD[.] 
     stack:   |stack:32|QWORD[.]   <||@
  Comment 839 block B40 null  <||@
  Comment 839 396 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 839 398 r9|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 849 400 r10|DWORD = MOVE input: int[-112915|0xfffffffffffe46ed]  <||@
  Comment 855 402 JUMP ~[] destination: B40 -> B41  <||@
  Comment 860 block B19 null  <||@
  Comment 860 226 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 860 228 r8|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 870 230 r10|DWORD = MOVE input: int[-90395|0xfffffffffffe9ee5]  <||@
  Comment 876 232 JUMP ~[] destination: B19 -> B21  <||@
  Comment 878 block B17 null  <||@
  Comment 878 210 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 878 212 r8|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 888 214 r10|DWORD = MOVE input: int[-96283|0xfffffffffffe87e5]  <||@
  Comment 894 216 JUMP ~[] destination: B17 -> B21  <||@
  Comment 896 block B46 null  <||@
  Comment 896 454 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 896 456 r10|DWORD = MOVE input: int[-106267|0xfffffffffffe60e5]  <||@
  Comment 902 458 JUMP ~[] destination: B46 -> B48  <||@
  Comment 904 block B16 null  <||@
  Comment 904 202 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 904 204 r8|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 914 206 r10|DWORD = MOVE input: int[-99355|0xfffffffffffe7be5]  <||@
  Comment 920 208 JUMP ~[] destination: B16 -> B21  <||@
  Comment 925 block B18 null  <||@
  Comment 925 218 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 925 220 r8|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 935 222 r10|DWORD = MOVE input: int[-93723|0xfffffffffffe91e5]  <||@
  Comment 941 224 JUMP ~[] destination: B18 -> B21  <||@
  Comment 946 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 946 4  <||@
  Comment 952 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 952 5  <||@
  HexCodeFile>>> <|@
end_nmethod
