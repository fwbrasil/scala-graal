begin_compilation
  name " HotSpotCompilation-8063[java.lang.Class.getName()]"
  method "HotSpotCompilation-8063[java.lang.Class.getName()]"
  date 1527005173788
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a43 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: a43  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Ljava/lang/Class;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?31 v44 v26 j33 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v44 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a43 v28 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a43 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Class.name
nodeSourcePosition: at java.lang.Class.getName(Class.java:640) [bci: 1]
nullCheck: false
stamp: n# Ljava/lang/String;
=== Inputs ===
stateBefore: - 
guard: - 
address: v44 
=== Succesors ===
next: v8 
=== Usages ===
a25 v29 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v44 #next: v8  <|@  <|@
f <@~|@floating>@ <|@
tid v29 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Class.getName(Class.java:641) [bci: 6]
stamp: void
=== Inputs ===
value: a43 
=== Succesors ===
=== Usages ===
v8 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a43  <|@  <|@
f <@*|@fixed>@ <|@
tid v8 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Class.getName(Class.java:641) [bci: 6]
stamp: void
trueSuccessorProbability: 0.0031670409620228046
=== Inputs ===
condition: v29 
=== Succesors ===
trueSuccessor: v6 
falseSuccessor: v7 
=== Usages ===
=== Predecessor ===
a43 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v29 #trueSuccessor: v6 #falseSuccessor: v7  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4569449121788486144
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v6 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Class.getName(Class.java:642) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
next: a10 
=== Usages ===
=== Predecessor ===
v8 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a10  <|@  <|@
tid v26 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.lang.Class.getName(Class.java:642) [bci: 11]
returnStamp: a# Ljava/lang/String;
signature: [Ljdk.vm.ci.meta.JavaType;@888f01f
stamp: void
targetMethod: HotSpotMethod<Class.getName0()>
=== Inputs ===
arguments: a1 
=== Succesors ===
=== Usages ===
a10 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1  <|@  <|@
tid ?31 <|@
d <@d|@=== Debug Properties ===
bci: 11
code: ResolvedJavaMethodBytecode<Class.getName()>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: Class.java
sourceLine: 642
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: - - a1 
=== Succesors ===
=== Usages ===
a10 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - a1  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a10 <|@
d <@d|@=== Debug Properties ===
bci: 11
nodeSourcePosition: at java.lang.Class.getName(Class.java:642) [bci: 11]
polymorphic: false
stamp: a# Ljava/lang/String;
targetMethod: Direct#Class.getName0
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v26 
stateDuring: ?31 
=== Succesors ===
next: v28 
=== Usages ===
v21 a27 
=== Predecessor ===
v6 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v26 stateDuring: ?31 #next: v28  <|@  <|@
f <@~|@floating>@ <|@
tid a27 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.Class.getName(Class.java:642) [bci: 16]
op: Compress
stamp: n# Ljava/lang/String;
=== Inputs ===
value: a10 
=== Succesors ===
=== Usages ===
v28 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a10  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v28 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: Class.name
nodeSourcePosition: at java.lang.Class.getName(Class.java:642) [bci: 16]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v44 
value: a27 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j33 
=== Usages ===
=== Predecessor ===
a10 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v44 value: a27 stateAfter: - lastLocationAccess: - #next: j33  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j33 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 1]
at java.lang.Class.getName(Class.java:642) [bci: 16]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1 
=== Succesors ===
next: v39 
=== Usages ===
j35 
=== Predecessor ===
v28 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a1 #next: v39  <|@  <|@
f <@~|@floating>@ <|@
tid i34 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.cardTableShift(GraalHotSpotVMConfig) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.Class.getName(Class.java:642) [bci: 16]
rawvalue: 9
stableDimension: 0
stamp: i32 [9] ⇊0000000000000009 ⇈0000000000000009
stampKind: i32
value: int[9|0x9]
=== Inputs ===
=== Succesors ===
=== Usages ===
j35 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j35 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.Class.getName(Class.java:642) [bci: 16]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j33 
y: i34 
=== Succesors ===
=== Usages ===
v45 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j33 y: i34  <|@  <|@
f <@~|@floating>@ <|@
tid j38 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.loadLongConfigValue(int) [bci: -1]
at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.cardTableAddress(GraalHotSpotVMConfigNode.java:114) [bci: 6]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:133) [bci: 7]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.Class.getName(Class.java:642) [bci: 16]
rawvalue: 4682670080
stableDimension: 0
stamp: i64 [4682670080] ⇊00000001171be000 ⇈00000001171be000
stampKind: i64
value: long[4682670080|0x1171be000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v45 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v45 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j35 
index: j38 
=== Succesors ===
=== Usages ===
v39 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j35 index: j38  <|@  <|@
f <@~|@floating>@ <|@
tid i40 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.Class.getName(Class.java:642) [bci: 16]
rawvalue: 0
stableDimension: 0
stamp: i8 [0] ⇈0000000000000000
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v39 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v39 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.Class.getName(Class.java:642) [bci: 16]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v45 
value: i40 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v21 
=== Usages ===
=== Predecessor ===
j33 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v45 value: i40 stateAfter: - lastLocationAccess: - #next: v21  <|@  <|@
f <@*|@fixed>@ <|@
tid v21 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Class.getName(Class.java:643) [bci: 19]
stamp: void
=== Inputs ===
result: a10 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v39 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a10 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607153892631024542
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v7 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Class.getName(Class.java:643) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
next: v20 
=== Usages ===
=== Predecessor ===
v8 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v20  <|@  <|@
f <@~|@floating>@ <|@
tid a25 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.Class.getName(Class.java:640) [bci: 1]
op: Uncompress
stamp: a# Ljava/lang/String;
=== Inputs ===
value: a43 
=== Succesors ===
=== Usages ===
v20 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a43  <|@  <|@
f <@*|@fixed>@ <|@
tid v20 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Class.getName(Class.java:643) [bci: 19]
stamp: void
=== Inputs ===
result: a25 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v7 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a25 memoryMap: -  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a43 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: a43  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Ljava/lang/Class;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?31 v44 v26 j33 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v44 <|@
result [v0|QWORD[.] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a43 v28 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a43 <|@
result v1|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Class.name
nodeSourcePosition: at java.lang.Class.getName(Class.java:640) [bci: 1]
nullCheck: false
stamp: n# Ljava/lang/String;
=== Inputs ===
stateBefore: - 
guard: - 
address: v44 
=== Succesors ===
next: v8 
=== Usages ===
a25 v29 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v44 #next: v8  <|@  <|@
f <@~|@floating>@ <|@
tid v29 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Class.getName(Class.java:641) [bci: 6]
stamp: void
=== Inputs ===
value: a43 
=== Succesors ===
=== Usages ===
v8 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a43  <|@  <|@
f <@*|@fixed>@ <|@
tid v8 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Class.getName(Class.java:641) [bci: 6]
stamp: void
trueSuccessorProbability: 0.0031670409620228046
=== Inputs ===
condition: v29 
=== Succesors ===
trueSuccessor: v6 
falseSuccessor: v7 
=== Usages ===
=== Predecessor ===
a43 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v29 #trueSuccessor: v6 #falseSuccessor: v7  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@63dd5a39 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD[.] = MOV [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v1|DWORD[.], y: v1|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0031670409620228046 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4569449121788486144
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v6 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Class.getName(Class.java:642) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
next: a10 
=== Usages ===
=== Predecessor ===
v8 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a10  <|@  <|@
tid v26 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.lang.Class.getName(Class.java:642) [bci: 11]
returnStamp: a# Ljava/lang/String;
signature: [Ljdk.vm.ci.meta.JavaType;@888f01f
stamp: void
targetMethod: HotSpotMethod<Class.getName0()>
=== Inputs ===
arguments: a1 
=== Succesors ===
=== Usages ===
a10 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1  <|@  <|@
tid ?31 <|@
d <@d|@=== Debug Properties ===
bci: 11
code: ResolvedJavaMethodBytecode<Class.getName()>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: Class.java
sourceLine: 642
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: - - a1 
=== Succesors ===
=== Usages ===
a10 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - a1  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a10 <|@
result v2|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 11
nodeSourcePosition: at java.lang.Class.getName(Class.java:642) [bci: 11]
polymorphic: false
stamp: a# Ljava/lang/String;
targetMethod: Direct#Class.getName0
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v26 
stateDuring: ?31 
=== Succesors ===
next: v28 
=== Usages ===
v21 a27 
=== Predecessor ===
v6 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v26 stateDuring: ?31 #next: v28  <|@  <|@
f <@~|@floating>@ <|@
tid a27 <|@
result v3|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.Class.getName(Class.java:642) [bci: 16]
op: Compress
stamp: n# Ljava/lang/String;
=== Inputs ===
value: a10 
=== Succesors ===
=== Usages ===
v28 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a10  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v28 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: Class.name
nodeSourcePosition: at java.lang.Class.getName(Class.java:642) [bci: 16]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v44 
value: a27 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j33 
=== Usages ===
=== Predecessor ===
a10 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v44 value: a27 stateAfter: - lastLocationAccess: - #next: j33  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j33 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 1]
at java.lang.Class.getName(Class.java:642) [bci: 16]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1 
=== Succesors ===
next: v39 
=== Usages ===
j35 
=== Predecessor ===
v28 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a1 #next: v39  <|@  <|@
f <@~|@floating>@ <|@
tid i34 <|@
result int[9|0x9] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.cardTableShift(GraalHotSpotVMConfig) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.Class.getName(Class.java:642) [bci: 16]
rawvalue: 9
stableDimension: 0
stamp: i32 [9] ⇊0000000000000009 ⇈0000000000000009
stampKind: i32
value: int[9|0x9]
=== Inputs ===
=== Succesors ===
=== Usages ===
j35 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j35 <|@
result v4|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.Class.getName(Class.java:642) [bci: 16]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j33 
y: i34 
=== Succesors ===
=== Usages ===
v45 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j33 y: i34  <|@  <|@
f <@~|@floating>@ <|@
tid j38 <|@
result v5|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.loadLongConfigValue(int) [bci: -1]
at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.cardTableAddress(GraalHotSpotVMConfigNode.java:114) [bci: 6]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:133) [bci: 7]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.Class.getName(Class.java:642) [bci: 16]
rawvalue: 4682670080
stableDimension: 0
stamp: i64 [4682670080] ⇊00000001171be000 ⇈00000001171be000
stampKind: i64
value: long[4682670080|0x1171be000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v45 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v45 <|@
result [v4|QWORD[*] + v5|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j35 
index: j38 
=== Succesors ===
=== Usages ===
v39 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j35 index: j38  <|@  <|@
f <@~|@floating>@ <|@
tid i40 <|@
result byte[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.Class.getName(Class.java:642) [bci: 16]
rawvalue: 0
stableDimension: 0
stamp: i8 [0] ⇈0000000000000000
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v39 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v39 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.Class.getName(Class.java:642) [bci: 16]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v45 
value: i40 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v21 
=== Usages ===
=== Predecessor ===
j33 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v45 value: i40 stateAfter: - lastLocationAccess: - #next: v21  <|@  <|@
f <@*|@fixed>@ <|@
tid v21 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Class.getName(Class.java:643) [bci: 19]
stamp: void
=== Inputs ===
result: a10 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v39 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a10 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Class.getName(Class.java:642) [bci: 11]
stack: v0|QWORD[.] 
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Class.getName0()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:11] <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD[.] = COMPRESSPOINTER (input: v2|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@778e6be7 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v3|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v4|QWORD[*] + v5|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607153892631024542
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v7 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Class.getName(Class.java:643) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
next: v20 
=== Usages ===
=== Predecessor ===
v8 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v20  <|@  <|@
f <@~|@floating>@ <|@
tid a25 <|@
result v6|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.Class.getName(Class.java:640) [bci: 1]
op: Uncompress
stamp: a# Ljava/lang/String;
=== Inputs ===
value: a43 
=== Succesors ===
=== Usages ===
v20 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a43  <|@  <|@
f <@*|@fixed>@ <|@
tid v20 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Class.getName(Class.java:643) [bci: 19]
stamp: void
=== Inputs ===
result: a25 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v7 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a25 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v6|QWORD[.] = UNCOMPRESSPOINTER (input: v1|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@778e6be7 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v6|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@63dd5a39 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD[.] = MOV [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v1|DWORD[.], y: v1|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0031670409620228046 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607153892631024542
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v6|QWORD[.] = UNCOMPRESSPOINTER (input: v1|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@778e6be7 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v6|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4569449121788486144
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Class.getName(Class.java:642) [bci: 11]
stack: v0|QWORD[.] 
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Class.getName0()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:11] <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD[.] = COMPRESSPOINTER (input: v2|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@778e6be7 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v3|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v4|QWORD[*] + v5|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #48         // name:java.lang.String
     4: astore_1      
     5: aload_1       
     6: ifnonnull     19
     9: aload_0       
    10: aload_0       
    11: invokespecial #49         // getName0:()java.lang.String
    14: dup           
    15: astore_1      
    16: putfield      #48         // name:java.lang.String
    19: aload_1       
    20: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@63dd5a39 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction rax|DWORD[.] = MOV [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr    8  <|@ instruction TEST (x: rax|DWORD[.], y: rax|DWORD[.]) size: DWORD <|@ <|@
      nr   10  <|@ instruction BRANCH trueDestinationProbability: 0.0031670409620228046 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607153892631024542
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   38  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@778e6be7 encoding: base: 0 shift: 3 <|@ <|@
      nr   40  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4569449121788486144
    begin_IR
      LIR
      nr   12  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   14  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   16  <|@ instruction rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   18  <|@ instruction stack:32|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   20  <|@ st <@st|@reference-map: [stack:0]
live-base-pointers: []
java.lang.Class.getName(Class.java:642) [bci: 11]
stack: stack:32|QWORD[.] 
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Class.getName0()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:11] <|@ <|@
      nr   22  <|@ instruction r10|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@778e6be7 encoding: base: 0 shift: 3 <|@ <|@
      nr   24  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   26  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: r10|DWORD[.]) size: DWORD <|@ <|@
      nr   28  <|@ instruction rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   30  <|@ instruction r10|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr   32  <|@ instruction MOVB (x: [rsi|QWORD[*] + r10|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   34  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #48         // name:java.lang.String
     4: astore_1      
     5: aload_1       
     6: ifnonnull     19
     9: aload_0       
    10: aload_0       
    11: invokespecial #49         // getName0:()java.lang.String
    14: dup           
    15: astore_1      
    16: putfield      #48         // name:java.lang.String
    19: aload_1       
    20: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@63dd5a39 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction rax|DWORD[.] = MOV [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr    8  <|@ instruction TEST (x: rax|DWORD[.], y: rax|DWORD[.]) size: DWORD <|@ <|@
      nr   10  <|@ instruction BRANCH trueDestinationProbability: 0.0031670409620228046 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607153892631024542
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   38  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@778e6be7 encoding: base: 0 shift: 3 <|@ <|@
      nr   40  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4569449121788486144
    begin_IR
      LIR
      nr   12  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   14  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   18  <|@ instruction stack:32|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   20  <|@ st <@st|@reference-map: [stack:0]
live-base-pointers: []
java.lang.Class.getName(Class.java:642) [bci: 11]
stack: stack:32|QWORD[.] 
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Class.getName0()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:11] <|@ <|@
      nr   22  <|@ instruction r10|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@778e6be7 encoding: base: 0 shift: 3 <|@ <|@
      nr   24  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   26  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: r10|DWORD[.]) size: DWORD <|@ <|@
      nr   28  <|@ instruction rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   30  <|@ instruction r10|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr   32  <|@ instruction MOVB (x: [rsi|QWORD[*] + r10|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   34  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #48         // name:java.lang.String
     4: astore_1      
     5: aload_1       
     6: ifnonnull     19
     9: aload_0       
    10: aload_0       
    11: invokespecial #49         // getName0:()java.lang.String
    14: dup           
    15: astore_1      
    16: putfield      #48         // name:java.lang.String
    19: aload_1       
    20: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849c1e203493bc20f85efffffff900f1f80000000000f1f800000000089842400c0feff4883ec1848896c24108b461485c00f841700000048c1e003488b6c24104883c418850500000000c5f877c34c8bd64c891424660f1f440000e800000000904c8bd049c1ea03488b34244489561448c1ee0949ba00e01b170100000046882416488b6c24104883c418850500000000c5f877c3e80000000090e80000000090  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@63dd5a39 slotKind: QWORD  <||@
  Comment 48 6 rax|DWORD[.] = MOV [rsi|QWORD[.] + 20] size: DWORD  <||@
  Comment 51 8 TEST (x: rax|DWORD[.], y: rax|DWORD[.]) size: DWORD  <||@
  Comment 53 10 BRANCH trueDestinationProbability: 0.0031670409620228046 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2  <||@
  Comment 59 block B2 null  <||@
  Comment 59 36 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 59 38 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@778e6be7 encoding: base: 0 shift: 3  <||@
  Comment 63 40 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 72 12  <||@
  Comment 82 block B1 null  <||@
  Comment 82 12 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 82 14 r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 85 18 stack:32|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 89 20 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Class.getName0()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:11]  <||@
  Comment 89 9  <||@
  Comment 95 {HotSpotMethod<Class.getName0()>}  <||@
  Comment 100 [stack:0]at java.lang.Class.getName(Class.java:642) [bci: 11, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |-                  |- 
     stack:   |stack:32|QWORD[.]  |    <||@
  Comment 101 22 r10|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@778e6be7 encoding: base: 0 shift: 3  <||@
  Comment 108 24 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 112 26 MOV (x: [rsi|QWORD[.] + 20], y: r10|DWORD[.]) size: DWORD  <||@
  Comment 116 28 rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD  <||@
  Comment 120 30 r10|QWORD = MOVE input: long[4682670080|0x1171be000]  <||@
  Comment 130 32 MOVB (x: [rsi|QWORD[*] + r10|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 134 34 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 143 12  <||@
  Comment 153 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 153 4  <||@
  Comment 159 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 159 5  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-8063[java.lang.Class.getName()]"
  method "HotSpotCompilation-8063[java.lang.Class.getName()]"
  date 1527005173807
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 107a2f5e0 448b560849c1e203493bc20f856f68ddfe900f1f80000000000f1f800000000089842400c0feff4883ec1848896c24108b461485c00f841700000048c1e003488b6c24104883c4188505d8f9e5fcc5f877c34c8bd64c891424660f1f440000e85c6addfe904c8bd049c1ea03488b34244489561448c1ee0949ba00e01b170100000046882416488b6c24104883c418850591f9e5fcc5f877c3e8a2af21ff90e87c7eddfe90f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f448bb0000000000000000e9fbfffffff4  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@63dd5a39 slotKind: QWORD  <||@
  Comment 48 6 rax|DWORD[.] = MOV [rsi|QWORD[.] + 20] size: DWORD  <||@
  Comment 51 8 TEST (x: rax|DWORD[.], y: rax|DWORD[.]) size: DWORD  <||@
  Comment 53 10 BRANCH trueDestinationProbability: 0.0031670409620228046 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2  <||@
  Comment 59 block B2 null  <||@
  Comment 59 36 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 59 38 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@778e6be7 encoding: base: 0 shift: 3  <||@
  Comment 63 40 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 72 12  <||@
  Comment 82 block B1 null  <||@
  Comment 82 12 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 82 14 r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 85 18 stack:32|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 89 20 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Class.getName0()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:11]  <||@
  Comment 89 9  <||@
  Comment 95 {HotSpotMethod<Class.getName0()>}  <||@
  Comment 100 [stack:0]at java.lang.Class.getName(Class.java:642) [bci: 11, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |-                  |- 
     stack:   |stack:32|QWORD[.]  |    <||@
  Comment 101 22 r10|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@778e6be7 encoding: base: 0 shift: 3  <||@
  Comment 108 24 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 112 26 MOV (x: [rsi|QWORD[.] + 20], y: r10|DWORD[.]) size: DWORD  <||@
  Comment 116 28 rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD  <||@
  Comment 120 30 r10|QWORD = MOVE input: long[4682670080|0x1171be000]  <||@
  Comment 130 32 MOVB (x: [rsi|QWORD[*] + r10|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 134 34 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 143 12  <||@
  Comment 153 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 153 4  <||@
  Comment 159 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 159 5  <||@
  HexCodeFile>>> <|@
end_nmethod
