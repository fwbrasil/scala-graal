begin_compilation
  name " HotSpotCompilation-8851[java.util.AbstractList.listIterator()]"
  method "HotSpotCompilation-8851[java.util.AbstractList.listIterator()]"
  date 1527005193457
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B14" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v933 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: v933  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a! Ljava/util/AbstractList;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?2 v413 ?159 v962 ?312 v960 v955 v954 v952 v953 a517 a636 a603 v1004 v1005 v1006 v1007 v1008 v1009 v1010 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v962 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v933 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v933 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v962 
=== Succesors ===
next: v19 
=== Usages ===
v877 v873 v875 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v962 #next: v19  <|@  <|@
f <@~|@floating>@ <|@
tid v872 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
rawvalue: meta{HotSpotType<Ljava/util/LinkedList;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/LinkedList;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v873 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v873 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v933 
y: v872 
=== Succesors ===
=== Usages ===
v19 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v933 y: v872  <|@  <|@
tid ?2 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<AbstractList.listIterator()>
duringCall: false
localsSize: 1
locksSize: 0
rethrowException: false
sourceFile: AbstractList.java
sourceLine: 299
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 
=== Succesors ===
=== Usages ===
v658 a833 i939 i948 i945 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1  <|@  <|@
f <@~|@floating>@ <|@
tid v692 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<[I, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[I, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a707 a765 a833 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a91 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 29]
at java.util.LinkedList.listIterator(LinkedList.java:868) [bci: 11]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
a98 v658 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i136 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.ArrayList$SubList$1.<init>(ArrayList.java:1105) [bci: 28]
at java.util.ArrayList$SubList.listIterator(ArrayList.java:1103) [bci: 21]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1] ⇊00000000ffffffff
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v814 i181 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i172 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:569) [bci: 5]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 35]
at java.util.LinkedList.listIterator(LinkedList.java:868) [bci: 11]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i173 v184 v185 v342 a707 a765 a833 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i3 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 1]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v413 i327 v794 v740 v87 v148 v744 v237 v114 ?99 v124 v867 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v19 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/LinkedList; target_method=listIterator target_method_class=Ljava/util/LinkedList; position=at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
stamp: void
trueSuccessorProbability: 0.6602222840867722
=== Inputs ===
condition: v873 
=== Succesors ===
trueSuccessor: v15 
falseSuccessor: v18 
=== Usages ===
=== Predecessor ===
v933 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v873 #trueSuccessor: v15 #falseSuccessor: v18  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4604121973210466186
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v15 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/LinkedList; target_method=listIterator target_method_class=Ljava/util/LinkedList; position=at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: i934 
=== Usages ===
=== Predecessor ===
v19 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i934  <|@  <|@
f <@~|@floating>@ <|@
tid v952 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i934 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i934 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: LinkedList.size
nodeSourcePosition: at java.util.LinkedList.isPositionIndex(LinkedList.java:541) [bci: 6]
at java.util.LinkedList.checkPositionIndex(LinkedList.java:559) [bci: 2]
at java.util.LinkedList.listIterator(LinkedList.java:867) [bci: 2]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v952 
=== Succesors ===
next: v90 
=== Usages ===
v148 v87 i173 i181 
=== Predecessor ===
v15 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v952 #next: v90  <|@  <|@
f <@~|@floating>@ <|@
tid v87 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 26]
at java.util.LinkedList.listIterator(LinkedList.java:868) [bci: 11]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i934 
y: i3 
=== Succesors ===
=== Usages ===
v90 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i934 y: i3  <|@  <|@
f <@*|@fixed>@ <|@
tid v90 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 26]
at java.util.LinkedList.listIterator(LinkedList.java:868) [bci: 11]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
stamp: void
trueSuccessorProbability: 0.44133716863953554
=== Inputs ===
condition: v87 
=== Succesors ===
trueSuccessor: v88 
falseSuccessor: v431 
=== Usages ===
=== Predecessor ===
i934 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v87 #trueSuccessor: v88 #falseSuccessor: v431  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B10" 
    xhandlers
    flags 
    probability 4598920666768289187
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v88 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 29]
at java.util.LinkedList.listIterator(LinkedList.java:868) [bci: 11]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v95 
=== Usages ===
=== Predecessor ===
v90 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v95  <|@  <|@
f <@~|@floating>@ <|@
tid a643 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: n - NULL
stampKind: n -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
a652 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v95 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 38]
at java.util.LinkedList.listIterator(LinkedList.java:868) [bci: 11]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v96 
=== Predecessor ===
v88 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4600316080397902193
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v431 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.isPositionIndex(LinkedList.java:541) [bci: 9]
at java.util.LinkedList.checkPositionIndex(LinkedList.java:559) [bci: 2]
at java.util.LinkedList.listIterator(LinkedList.java:867) [bci: 2]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v434 
=== Usages ===
=== Predecessor ===
v90 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v434  <|@  <|@
f <@~|@floating>@ <|@
tid v148 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.LinkedList.isPositionIndex(LinkedList.java:541) [bci: 9]
at java.util.LinkedList.checkPositionIndex(LinkedList.java:559) [bci: 2]
at java.util.LinkedList.listIterator(LinkedList.java:867) [bci: 2]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i934 
y: i3 
=== Succesors ===
=== Usages ===
v434 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i934 y: i3  <|@  <|@
f <@*|@fixed>@ <|@
tid v434 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.isPositionIndex(LinkedList.java:541) [bci: 9]
at java.util.LinkedList.checkPositionIndex(LinkedList.java:559) [bci: 2]
at java.util.LinkedList.listIterator(LinkedList.java:867) [bci: 2]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v148 
=== Succesors ===
trueSuccessor: v433 
falseSuccessor: v89 
=== Usages ===
=== Predecessor ===
v431 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v148 #trueSuccessor: v433 #falseSuccessor: v89  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B49" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v433 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.isPositionIndex(LinkedList.java:541) [bci: 9]
at java.util.LinkedList.checkPositionIndex(LinkedList.java:559) [bci: 2]
at java.util.LinkedList.listIterator(LinkedList.java:867) [bci: 2]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v654 
=== Usages ===
=== Predecessor ===
v434 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v654  <|@  <|@
f <@~|@floating>@ <|@
tid i655 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -88851
stableDimension: 0
stamp: i32 [-88851] ⇊00000000fffea4ed ⇈00000000fffea4ed
stampKind: i32
value: int[-88851|0xfffffffffffea4ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i656 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v654 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v653 
=== Predecessor ===
v433 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B9" 
    xhandlers
    flags 
    probability 4600316080397902193
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v89 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 33]
at java.util.LinkedList.listIterator(LinkedList.java:868) [bci: 11]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v176 
=== Usages ===
=== Predecessor ===
v434 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v176  <|@  <|@
f <@~|@floating>@ <|@
tid i173 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.RightShiftNode$$Lambda$143/1909420937@4b2846e5
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:569) [bci: 6]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 35]
at java.util.LinkedList.listIterator(LinkedList.java:868) [bci: 11]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
stamp: i32 [-1073741824 - 1073741823]
=== Inputs ===
x: i934 
y: i172 
=== Succesors ===
=== Usages ===
v184 
=== Predecessor ===
- >@ <|@
instruction <@>>|@org.graalvm.compiler.nodes.calc.RightShiftNode>@ x: i934 y: i172  <|@  <|@
f <@~|@floating>@ <|@
tid v184 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:569) [bci: 7]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 35]
at java.util.LinkedList.listIterator(LinkedList.java:868) [bci: 11]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i173 
y: i172 
=== Succesors ===
=== Usages ===
v176 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i173 y: i172  <|@  <|@
f <@*|@fixed>@ <|@
tid v176 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:569) [bci: 7]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 35]
at java.util.LinkedList.listIterator(LinkedList.java:868) [bci: 11]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
stamp: void
trueSuccessorProbability: 0.27721570921026206
=== Inputs ===
condition: v184 
=== Succesors ===
trueSuccessor: v175 
falseSuccessor: v174 
=== Usages ===
=== Predecessor ===
v89 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v184 #trueSuccessor: v175 #falseSuccessor: v174  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4592032215960291828
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v175 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:575) [bci: 35]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 35]
at java.util.LinkedList.listIterator(LinkedList.java:868) [bci: 11]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v438 
=== Usages ===
=== Predecessor ===
v176 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v438  <|@  <|@
f <@~|@floating>@ <|@
tid i181 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:576) [bci: 45]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 35]
at java.util.LinkedList.listIterator(LinkedList.java:868) [bci: 11]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
stamp: i32
=== Inputs ===
x: i934 
y: i136 
=== Succesors ===
=== Usages ===
v185 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i934 y: i136  <|@  <|@
f <@~|@floating>@ <|@
tid v185 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:576) [bci: 49]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 35]
at java.util.LinkedList.listIterator(LinkedList.java:868) [bci: 11]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i181 
y: i172 
=== Succesors ===
=== Usages ===
v438 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i181 y: i172  <|@  <|@
f <@*|@fixed>@ <|@
tid v438 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:576) [bci: 49]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 35]
at java.util.LinkedList.listIterator(LinkedList.java:868) [bci: 11]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v185 
=== Succesors ===
trueSuccessor: v435 
falseSuccessor: v437 
=== Usages ===
=== Predecessor ===
v175 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v185 #trueSuccessor: v435 #falseSuccessor: v437  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4592032215960291828
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v435 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:576) [bci: 49]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 35]
at java.util.LinkedList.listIterator(LinkedList.java:868) [bci: 11]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: a935 
=== Usages ===
=== Predecessor ===
v438 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a935  <|@  <|@
f <@~|@floating>@ <|@
tid v954 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a935 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a935 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: LinkedList.last
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:575) [bci: 36]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 35]
at java.util.LinkedList.listIterator(LinkedList.java:868) [bci: 11]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
nullCheck: false
stamp: n# Ljava/util/LinkedList$Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v954 
=== Succesors ===
next: v190 
=== Usages ===
a354 a652 
=== Predecessor ===
v435 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v954 #next: v190  <|@  <|@
f <@~|@floating>@ <|@
tid a354 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:575) [bci: 36]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 35]
at java.util.LinkedList.listIterator(LinkedList.java:868) [bci: 11]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
op: Uncompress
stamp: a# Ljava/util/LinkedList$Node;
=== Inputs ===
value: a935 
=== Succesors ===
=== Usages ===
a98 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a935  <|@  <|@
f <@*|@fixed>@ <|@
tid v190 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v96 
=== Predecessor ===
a935 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B49" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v437 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:576) [bci: 49]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 35]
at java.util.LinkedList.listIterator(LinkedList.java:868) [bci: 11]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v671 
=== Usages ===
=== Predecessor ===
v438 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v671  <|@  <|@
f <@~|@floating>@ <|@
tid i672 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -90899
stableDimension: 0
stamp: i32 [-90899] ⇊00000000fffe9ced ⇈00000000fffe9ced
stampKind: i32
value: int[-90899|0xfffffffffffe9ced]
=== Inputs ===
=== Succesors ===
=== Usages ===
i656 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v671 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v653 
=== Predecessor ===
v437 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B10" 
    xhandlers
    flags 
    probability 4598474131573620468
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v174 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:570) [bci: 10]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 35]
at java.util.LinkedList.listIterator(LinkedList.java:868) [bci: 11]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: a936 
=== Usages ===
=== Predecessor ===
v176 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a936  <|@  <|@
f <@~|@floating>@ <|@
tid v955 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a936 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a936 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: LinkedList.first
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:570) [bci: 11]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 35]
at java.util.LinkedList.listIterator(LinkedList.java:868) [bci: 11]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
nullCheck: false
stamp: n# Ljava/util/LinkedList$Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v955 
=== Succesors ===
next: v97 
=== Usages ===
a359 a652 
=== Predecessor ===
v174 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v955 #next: v97  <|@  <|@
f <@~|@floating>@ <|@
tid a359 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:570) [bci: 11]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 35]
at java.util.LinkedList.listIterator(LinkedList.java:868) [bci: 11]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
op: Uncompress
stamp: a# Ljava/util/LinkedList$Node;
=== Inputs ===
value: a936 
=== Succesors ===
=== Usages ===
a98 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a936  <|@  <|@
f <@*|@fixed>@ <|@
tid v97 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 38]
at java.util.LinkedList.listIterator(LinkedList.java:868) [bci: 11]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v96 
=== Predecessor ===
a936 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B2" "B9" "B7" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4604121973210466186
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a98 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 38]
at java.util.LinkedList.listIterator(LinkedList.java:868) [bci: 11]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
stamp: a# Ljava/util/LinkedList$Node;
valueDescription: a -
=== Inputs ===
merge: v96 
values: a91 a359 a354 
=== Succesors ===
=== Usages ===
?99 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v96 values: a91 a359 a354  <|@  <|@
f <@~|@floating>@ <|@
tid a652 <|@
d <@d|@=== Debug Properties ===
stamp: n# Ljava/util/LinkedList$Node;
valueDescription: n -
=== Inputs ===
merge: v96 
values: a643 a936 a935 
=== Succesors ===
=== Usages ===
v746 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v96 values: a643 a936 a935  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v96 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 38]
at java.util.LinkedList.listIterator(LinkedList.java:868) [bci: 11]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v95 v97 v190 
=== Succesors ===
next: j694 
=== Usages ===
a98 a652 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v95 v97 v190 #next: j694  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j694 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j714 
=== Usages ===
v963 v964 
=== Predecessor ===
v96 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j714  <|@  <|@
f <@~|@floating>@ <|@
tid v963 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j694 
index: - 
=== Succesors ===
=== Usages ===
j714 v716 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j694 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j714 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v963 
=== Succesors ===
next: j715 
=== Usages ===
j878 j720 v980 
=== Predecessor ===
j694 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v963 #next: j715  <|@  <|@
f <@~|@floating>@ <|@
tid v964 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j694 
index: - 
=== Succesors ===
=== Usages ===
j715 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j694 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j715 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v964 
=== Succesors ===
next: i937 
=== Usages ===
v699 
=== Predecessor ===
j714 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v964 #next: i937  <|@  <|@
f <@~|@floating>@ <|@
tid v953 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i937 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i937 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractList.modCount
nodeSourcePosition: at java.util.LinkedList$ListItr.<init>(LinkedList.java:875) [bci: 14]
at java.util.LinkedList.listIterator(LinkedList.java:868) [bci: 11]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v953 
=== Succesors ===
next: v702 
=== Usages ===
v742 ?159 
=== Predecessor ===
j715 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v953 #next: v702  <|@  <|@
f <@~|@floating>@ <|@
tid j396 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.ArrayList$SubList.checkForComodification(ArrayList.java:1238) [bci: 1]
at java.util.ArrayList$SubList.listIterator(ArrayList.java:1099) [bci: 1]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
rawvalue: 32
stableDimension: 0
stamp: i64 [32] ⇊0000000000000020 ⇈0000000000000020
stampKind: i64
value: long[32|0x20]
=== Inputs ===
=== Succesors ===
=== Usages ===
j878 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j878 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j714 
y: j396 
=== Succesors ===
=== Usages ===
v699 v716 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j714 y: j396  <|@  <|@
f <@~|@floating>@ <|@
tid v699 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j715 
y: j878 
=== Succesors ===
=== Usages ===
v702 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j715 y: j878  <|@  <|@
f <@*|@fixed>@ <|@
tid v702 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v699 
=== Succesors ===
trueSuccessor: v700 
falseSuccessor: v701 
=== Usages ===
=== Predecessor ===
i937 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v699 #trueSuccessor: v700 #falseSuccessor: v701  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4574261866845125856
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v700 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a707 
=== Usages ===
=== Predecessor ===
v702 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a707  <|@  <|@
tid ?47 <|@
d <@d|@=== Debug Properties ===
bci: 2
code: ResolvedJavaMethodBytecode<AbstractList.listIterator()>
duringCall: true
localsSize: 1
locksSize: 0
rethrowException: false
sourceFile: AbstractList.java
sourceLine: 299
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - 
=== Succesors ===
=== Usages ===
?106 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: -  <|@  <|@
tid a157 <|@
d <@d|@=== Debug Properties ===
fields: [Ljdk.vm.ci.hotspot.HotSpotResolvedJavaField;@7e6d202f
hasIdentity: true
objectId: 0
stamp: a!# Ljava/util/LinkedList$ListItr;
type: HotSpotType<Ljava/util/LinkedList$ListItr;, resolved>
=== Inputs ===
=== Succesors ===
=== Usages ===
?99 ?99 ?106 ?159 
=== Predecessor ===
- >@ <|@
instruction <@VirtualInstance|@org.graalvm.compiler.nodes.virtual.VirtualInstanceNode>@  <|@  <|@
tid ?106 <|@
d <@d|@=== Debug Properties ===
bci: 11
code: ResolvedJavaMethodBytecode<LinkedList.listIterator(int)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: LinkedList.java
sourceLine: 868
stackSize: 1
=== Inputs ===
outerFrameState: ?47 
values: - - a157 
=== Succesors ===
=== Usages ===
?99 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?47 values: - - a157  <|@  <|@
tid ?159 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a157 
values: - i937 - - a1 
=== Succesors ===
=== Usages ===
?99 
=== Predecessor ===
- >@ <|@
instruction <@VirtualObjectState|@org.graalvm.compiler.virtual.nodes.VirtualObjectState>@ object: a157 values: - i937 - - a1  <|@  <|@
tid ?99 <|@
d <@d|@=== Debug Properties ===
bci: 38
code: ResolvedJavaMethodBytecode<LinkedList$ListItr.<init>(LinkedList, int)>
duringCall: false
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: LinkedList.java
sourceLine: 879
stackSize: 2
=== Inputs ===
outerFrameState: ?106 
values: a157 - i3 a157 a98 
virtualObjectMappings: ?159 
=== Succesors ===
=== Usages ===
a707 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?106 values: a157 - i3 a157 a98 virtualObjectMappings: ?159  <|@  <|@
f <@~|@floating>@ <|@
tid i880 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 4
stableDimension: 0
stamp: i32 [4] ⇊0000000000000004 ⇈0000000000000004
stampKind: i32
value: int[4|0x4]
=== Inputs ===
=== Succesors ===
=== Usages ===
a707 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a707 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?99 
arguments: v692 i880 i172 
=== Succesors ===
next: j708 
=== Usages ===
j708 
=== Predecessor ===
v700 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?99 arguments: v692 i880 i172 #next: j708  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j708 <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a707 
=== Succesors ===
next: v721 
=== Usages ===
j720 
=== Predecessor ===
a707 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a707 #next: v721  <|@  <|@
f <@*|@fixed>@ <|@
tid v721 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v718 
=== Predecessor ===
j708 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4604062505673814288
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v701 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v716 
=== Usages ===
=== Predecessor ===
v702 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v716  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v716 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v963 
value: j878 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v712 
=== Usages ===
=== Predecessor ===
v701 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v963 value: j878 stateAfter: - lastLocationAccess: - #next: v712  <|@  <|@
f <@~|@floating>@ <|@
tid v980 <|@
d <@d|@=== Debug Properties ===
displacement: 224
scale: Times1
stamp: void*
=== Inputs ===
base: j714 
index: - 
=== Succesors ===
=== Usages ===
v712 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j714 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v712 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v980 
=== Succesors ===
next: v719 
=== Usages ===
=== Predecessor ===
v716 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v980 #next: v719  <|@  <|@
f <@*|@fixed>@ <|@
tid v719 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v718 
=== Predecessor ===
v712 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B11" 
    successors 
    xhandlers
    flags 
    probability 4604121973210466186
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j720 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v718 
values: j714 j708 
=== Succesors ===
=== Usages ===
v967 v966 a512 v981 v982 v983 v984 v985 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v718 values: j714 j708  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v718 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v719 v721 
=== Succesors ===
next: a512 
=== Usages ===
j720 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v719 v721 #next: a512  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a512 <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j720 
=== Succesors ===
next: j732 
=== Usages ===
a520 
=== Predecessor ===
v718 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j720 #next: j732  <|@  <|@
f <@~|@floating>@ <|@
tid v726 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/util/LinkedList$ListItr;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Ljava/util/LinkedList$ListItr;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
j727 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j727 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
input: v726 
=== Succesors ===
=== Usages ===
v965 
=== Predecessor ===
- >@ <|@
instruction <@PointerCast|@org.graalvm.compiler.hotspot.word.PointerCastNode>@ input: v726  <|@  <|@
f <@~|@floating>@ <|@
tid v965 <|@
d <@d|@=== Debug Properties ===
displacement: 168
scale: Times1
stamp: void*
=== Inputs ===
base: j727 
index: - 
=== Succesors ===
=== Usages ===
j732 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j727 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j732 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v965 
=== Succesors ===
next: v733 
=== Usages ===
v733 
=== Predecessor ===
a512 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v965 #next: v733  <|@  <|@
f <@~|@floating>@ <|@
tid v966 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j720 
index: - 
=== Succesors ===
=== Usages ===
v733 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j720 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v733 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v966 
value: j732 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v736 
=== Usages ===
=== Predecessor ===
j732 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v966 value: j732 stateAfter: - lastLocationAccess: - #next: v736  <|@  <|@
f <@~|@floating>@ <|@
tid v967 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j720 
index: - 
=== Succesors ===
=== Usages ===
v736 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j720 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v883 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/util/LinkedList$ListItr;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/LinkedList$ListItr;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v736 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v736 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v967 
value: v883 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v740 
=== Usages ===
=== Predecessor ===
v733 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v967 value: v883 stateAfter: - lastLocationAccess: - #next: v740  <|@  <|@
f <@~|@floating>@ <|@
tid v981 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j720 
index: - 
=== Succesors ===
=== Usages ===
v740 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j720 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v740 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v981 
value: i3 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v742 
=== Usages ===
=== Predecessor ===
v736 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v981 value: i3 stateAfter: - lastLocationAccess: - #next: v742  <|@  <|@
f <@~|@floating>@ <|@
tid v982 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j720 
index: - 
=== Succesors ===
=== Usages ===
v742 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j720 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v742 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v982 
value: i937 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v744 
=== Usages ===
=== Predecessor ===
v740 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v982 value: i937 stateAfter: - lastLocationAccess: - #next: v744  <|@  <|@
f <@~|@floating>@ <|@
tid v983 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: j720 
index: - 
=== Succesors ===
=== Usages ===
v744 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j720 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v744 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v983 
value: i3 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v746 
=== Usages ===
=== Predecessor ===
v742 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v983 value: i3 stateAfter: - lastLocationAccess: - #next: v746  <|@  <|@
f <@~|@floating>@ <|@
tid v984 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: j720 
index: - 
=== Succesors ===
=== Usages ===
v746 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j720 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v746 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v984 
value: a652 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v749 
=== Usages ===
=== Predecessor ===
v744 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v984 value: a652 stateAfter: - lastLocationAccess: - #next: v749  <|@  <|@
f <@~|@floating>@ <|@
tid v985 <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: j720 
index: - 
=== Succesors ===
=== Usages ===
v749 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j720 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a517 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Compress
stamp: n! Ljava/util/AbstractList;
=== Inputs ===
value: a1 
=== Succesors ===
=== Usages ===
v749 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v749 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v985 
value: a517 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a520 
=== Usages ===
=== Predecessor ===
v746 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v985 value: a517 stateAfter: - lastLocationAccess: - #next: a520  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a520 <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a512 
=== Succesors ===
next: v521 
=== Usages ===
v153 
=== Predecessor ===
v749 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a512 #next: v521  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v521 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v153 
=== Usages ===
=== Predecessor ===
a520 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v153  <|@  <|@
f <@*|@fixed>@ <|@
tid v153 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
stamp: void
=== Inputs ===
result: a520 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v521 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a520 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B15" "B40" 
    xhandlers
    flags 
    probability 4599792511097008364
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v18 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v28 
=== Usages ===
=== Predecessor ===
v19 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v28  <|@  <|@
f <@~|@floating>@ <|@
tid v874 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
rawvalue: meta{HotSpotType<Ljava/util/RandomAccessSubList;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/RandomAccessSubList;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v875 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v875 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v933 
y: v874 
=== Succesors ===
=== Usages ===
v28 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v933 y: v874  <|@  <|@
f <@*|@fixed>@ <|@
tid v28 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/RandomAccessSubList; target_method=listIterator target_method_class=Ljava/util/SubList; position=at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
stamp: void
trueSuccessorProbability: 0.5123719007222719
=== Inputs ===
condition: v875 
=== Succesors ===
trueSuccessor: v24 
falseSuccessor: v27 
=== Usages ===
=== Predecessor ===
v18 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v875 #trueSuccessor: v24 #falseSuccessor: v27  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B39" 
    xhandlers
    flags 
    probability 4595440365585637238
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v24 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/RandomAccessSubList; target_method=listIterator target_method_class=Ljava/util/SubList; position=at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: a938 
=== Usages ===
=== Predecessor ===
v28 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a938  <|@  <|@
f <@~|@floating>@ <|@
tid v1008 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a938 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a938 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: SubList.l
nodeSourcePosition: at java.util.SubList.checkForComodification(AbstractList.java:768) [bci: 5]
at java.util.SubList.listIterator(AbstractList.java:695) [bci: 1]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
nullCheck: false
stamp: n Ljava/util/AbstractList;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1008 
=== Succesors ===
next: i939 
=== Usages ===
?245 v818 v956 v958 v968 v820 ?324 v1003 
=== Predecessor ===
v24 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1008 #next: i939  <|@  <|@
f <@~|@floating>@ <|@
tid v956 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a938 
=== Succesors ===
=== Usages ===
i939 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a938  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i939 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractList.modCount
nodeSourcePosition: at java.util.SubList.checkForComodification(AbstractList.java:768) [bci: 8]
at java.util.SubList.listIterator(AbstractList.java:695) [bci: 1]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
nullCheck: true
stamp: i32
=== Inputs ===
stateBefore: ?2 
guard: - 
address: v956 
=== Succesors ===
next: i940 
=== Usages ===
v110 v816 
=== Predecessor ===
a938 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?2 guard: - address: v956 #next: i940  <|@  <|@
f <@~|@floating>@ <|@
tid v1004 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i940 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i940 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractList.modCount
nodeSourcePosition: at java.util.SubList.checkForComodification(AbstractList.java:768) [bci: 1]
at java.util.SubList.listIterator(AbstractList.java:695) [bci: 1]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1004 
=== Succesors ===
next: v446 
=== Usages ===
v110 
=== Predecessor ===
i939 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1004 #next: v446  <|@  <|@
f <@~|@floating>@ <|@
tid v110 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.SubList.checkForComodification(AbstractList.java:768) [bci: 11]
at java.util.SubList.listIterator(AbstractList.java:695) [bci: 1]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i939 
y: i940 
=== Succesors ===
=== Usages ===
v446 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i939 y: i940  <|@  <|@
f <@*|@fixed>@ <|@
tid v446 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.SubList.checkForComodification(AbstractList.java:768) [bci: 11]
at java.util.SubList.listIterator(AbstractList.java:695) [bci: 1]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v110 
=== Succesors ===
trueSuccessor: v443 
falseSuccessor: v445 
=== Usages ===
=== Predecessor ===
i940 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v110 #trueSuccessor: v443 #falseSuccessor: v445  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4595440365585637238
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v443 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.SubList.checkForComodification(AbstractList.java:768) [bci: 11]
at java.util.SubList.listIterator(AbstractList.java:695) [bci: 1]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: i941 
=== Usages ===
=== Predecessor ===
v446 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i941  <|@  <|@
f <@~|@floating>@ <|@
tid v1006 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i941 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i941 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: SubList.size
nodeSourcePosition: at java.util.SubList.rangeCheckForAdd(AbstractList.java:759) [bci: 6]
at java.util.SubList.listIterator(AbstractList.java:696) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1006 
=== Succesors ===
next: v450 
=== Usages ===
v114 
=== Predecessor ===
v443 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1006 #next: v450  <|@  <|@
f <@~|@floating>@ <|@
tid v114 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.SubList.rangeCheckForAdd(AbstractList.java:759) [bci: 9]
at java.util.SubList.listIterator(AbstractList.java:696) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i941 
y: i3 
=== Succesors ===
=== Usages ===
v450 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i941 y: i3  <|@  <|@
f <@*|@fixed>@ <|@
tid v450 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.SubList.rangeCheckForAdd(AbstractList.java:759) [bci: 9]
at java.util.SubList.listIterator(AbstractList.java:696) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v114 
=== Succesors ===
trueSuccessor: v449 
falseSuccessor: v447 
=== Usages ===
=== Predecessor ===
i941 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v114 #trueSuccessor: v449 #falseSuccessor: v447  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B49" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v449 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.SubList.rangeCheckForAdd(AbstractList.java:759) [bci: 9]
at java.util.SubList.listIterator(AbstractList.java:696) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v663 
=== Usages ===
=== Predecessor ===
v450 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v663  <|@  <|@
f <@~|@floating>@ <|@
tid i664 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -95507
stableDimension: 0
stamp: i32 [-95507] ⇊00000000fffe8aed ⇈00000000fffe8aed
stampKind: i32
value: int[-95507|0xfffffffffffe8aed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i656 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v663 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v653 
=== Predecessor ===
v449 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4595440365585637238
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v447 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.SubList.rangeCheckForAdd(AbstractList.java:759) [bci: 9]
at java.util.SubList.listIterator(AbstractList.java:696) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: i942 
=== Usages ===
=== Predecessor ===
v450 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i942  <|@  <|@
f <@~|@floating>@ <|@
tid v1010 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i942 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i942 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: SubList.offset
nodeSourcePosition: at java.util.SubList.access$000(AbstractList.java:613) [bci: 1]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 30]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1010 
=== Succesors ===
next: v454 
=== Usages ===
v812 v342 v242 ?245 v237 v329 ?324 ?324 
=== Predecessor ===
v447 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1010 #next: v454  <|@  <|@
f <@~|@floating>@ <|@
tid v237 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 1]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i942 
y: i3 
=== Succesors ===
=== Usages ===
v454 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i942 y: i3  <|@  <|@
f <@*|@fixed>@ <|@
tid v454 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 1]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v237 
=== Succesors ===
trueSuccessor: v453 
falseSuccessor: v451 
=== Usages ===
=== Predecessor ===
i942 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v237 #trueSuccessor: v453 #falseSuccessor: v451  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B49" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v453 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 1]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v669 
=== Usages ===
=== Predecessor ===
v454 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v669  <|@  <|@
f <@~|@floating>@ <|@
tid i670 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -97555
stableDimension: 0
stamp: i32 [-97555] ⇊00000000fffe82ed ⇈00000000fffe82ed
stampKind: i32
value: int[-97555|0xfffffffffffe82ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i656 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v669 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v653 
=== Predecessor ===
v453 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B38" 
    xhandlers
    flags 
    probability 4595440365585637238
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v451 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 1]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v943 
=== Usages ===
=== Predecessor ===
v454 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v943  <|@  <|@
f <@~|@floating>@ <|@
tid v968 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a938 
=== Succesors ===
=== Usages ===
v943 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a938  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v943 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v968 
=== Succesors ===
next: v379 
=== Usages ===
v957 v890 v892 v894 
=== Predecessor ===
v451 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v968 #next: v379  <|@  <|@
f <@~|@floating>@ <|@
tid v957 <|@
d <@d|@=== Debug Properties ===
displacement: 696
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: v943 
=== Succesors ===
=== Usages ===
v379 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: v943  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v379 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ANY_LOCATION
nodeSourcePosition: at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
nullCheck: false
stamp: Method*!
=== Inputs ===
stateBefore: - 
guard: - 
address: v957 
=== Succesors ===
next: v458 
=== Usages ===
v224 
=== Predecessor ===
v943 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v957 #next: v458  <|@  <|@
f <@~|@floating>@ <|@
tid v222 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
rawvalue: meta{HotSpotMethod<AbstractList.listIterator(int)>}
stableDimension: 0
stamp: Method*!
stampKind: Method*
value: meta{HotSpotMethod<AbstractList.listIterator(int)>}
=== Inputs ===
=== Succesors ===
=== Usages ===
v224 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v224 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v379 
y: v222 
=== Succesors ===
=== Usages ===
v458 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v379 y: v222  <|@  <|@
f <@*|@fixed>@ <|@
tid v458 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=null target_method=listIterator target_method_class=Ljava/util/AbstractList; position=at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v224 
=== Succesors ===
trueSuccessor: v455 
falseSuccessor: v457 
=== Usages ===
=== Predecessor ===
v379 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v224 #trueSuccessor: v455 #falseSuccessor: v457  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" "B25" 
    xhandlers
    flags 
    probability 4595440365585637238
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v455 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=null target_method=listIterator target_method_class=Ljava/util/AbstractList; position=at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v268 
=== Usages ===
=== Predecessor ===
v458 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v268  <|@  <|@
f <@~|@floating>@ <|@
tid v889 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
rawvalue: meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v890 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v890 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v943 
y: v889 
=== Succesors ===
=== Usages ===
v268 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v943 y: v889  <|@  <|@
f <@*|@fixed>@ <|@
tid v268 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/Arrays$ArrayList; target_method=size target_method_class=Ljava/util/Arrays$ArrayList; position=at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
stamp: void
trueSuccessorProbability: 0.5455294668972093
=== Inputs ===
condition: v890 
=== Succesors ===
trueSuccessor: v264 
falseSuccessor: v267 
=== Usages ===
=== Predecessor ===
v455 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v890 #trueSuccessor: v264 #falseSuccessor: v267  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4591507919033229151
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v264 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/Arrays$ArrayList; target_method=size target_method_class=Ljava/util/Arrays$ArrayList; position=at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: a944 
=== Usages ===
=== Predecessor ===
v268 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a944  <|@  <|@
f <@~|@floating>@ <|@
tid v958 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a938 
=== Succesors ===
=== Usages ===
a944 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a938  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a944 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Arrays$ArrayList.a
nodeSourcePosition: at java.util.Arrays$ArrayList.size(Arrays.java:3818) [bci: 1]
at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
nullCheck: false
stamp: n [Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v958 
=== Succesors ===
next: i945 
=== Usages ===
v959 
=== Predecessor ===
v264 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v958 #next: i945  <|@  <|@
f <@~|@floating>@ <|@
tid v959 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a944 
=== Succesors ===
=== Usages ===
i945 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a944  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i945 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.Arrays$ArrayList.size(Arrays.java:3818) [bci: 4]
at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?2 
guard: - 
address: v959 
=== Succesors ===
next: v466 
=== Usages ===
i327 v329 
=== Predecessor ===
a944 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?2 guard: - address: v959 #next: v466  <|@  <|@
f <@~|@floating>@ <|@
tid v329 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 9]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i945 
y: i942 
=== Succesors ===
=== Usages ===
v466 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i945 y: i942  <|@  <|@
f <@*|@fixed>@ <|@
tid v466 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 9]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v329 
=== Succesors ===
trueSuccessor: v465 
falseSuccessor: v463 
=== Usages ===
=== Predecessor ===
i945 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v329 #trueSuccessor: v465 #falseSuccessor: v463  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B49" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v465 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 9]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v679 
=== Usages ===
=== Predecessor ===
v466 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v679  <|@  <|@
f <@~|@floating>@ <|@
tid i680 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -99859
stableDimension: 0
stamp: i32 [-99859] ⇊00000000fffe79ed ⇈00000000fffe79ed
stampKind: i32
value: int[-99859|0xfffffffffffe79ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i656 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v679 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v653 
=== Predecessor ===
v465 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B33" 
    xhandlers
    flags 
    probability 4591507919033229151
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v463 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 9]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v325 
=== Usages ===
=== Predecessor ===
v466 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v325  <|@  <|@
f <@*|@fixed>@ <|@
tid v325 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v323 
=== Predecessor ===
v463 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B26" "B29" 
    xhandlers
    flags 
    probability 4590365612883304333
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v267 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v277 
=== Usages ===
=== Predecessor ===
v268 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v277  <|@  <|@
f <@~|@floating>@ <|@
tid v891 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
rawvalue: meta{HotSpotType<Ljava/util/Collections$EmptyList;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/Collections$EmptyList;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v892 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v892 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v943 
y: v891 
=== Succesors ===
=== Usages ===
v277 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v943 y: v891  <|@  <|@
f <@*|@fixed>@ <|@
tid v277 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/Collections$EmptyList; target_method=size target_method_class=Ljava/util/Collections$EmptyList; position=at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
stamp: void
trueSuccessorProbability: 0.5021334091878823
=== Inputs ===
condition: v892 
=== Succesors ===
trueSuccessor: v273 
falseSuccessor: v276 
=== Usages ===
=== Predecessor ===
v267 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v892 #trueSuccessor: v273 #falseSuccessor: v276  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4585886339207662494
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v273 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/Collections$EmptyList; target_method=size target_method_class=Ljava/util/Collections$EmptyList; position=at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v470 
=== Usages ===
=== Predecessor ===
v277 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v470  <|@  <|@
f <@~|@floating>@ <|@
tid v342 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 9]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i942 
y: i172 
=== Succesors ===
=== Usages ===
v470 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i942 y: i172  <|@  <|@
f <@*|@fixed>@ <|@
tid v470 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 9]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v342 
=== Succesors ===
trueSuccessor: v467 
falseSuccessor: v469 
=== Usages ===
=== Predecessor ===
v273 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v342 #trueSuccessor: v467 #falseSuccessor: v469  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B33" 
    xhandlers
    flags 
    probability 4585886339207662494
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v467 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 9]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v341 
=== Usages ===
=== Predecessor ===
v470 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v341  <|@  <|@
f <@*|@fixed>@ <|@
tid v341 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v323 
=== Predecessor ===
v467 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B49" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v469 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 9]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v683 
=== Usages ===
=== Predecessor ===
v470 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v683  <|@  <|@
f <@~|@floating>@ <|@
tid i684 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -100115
stableDimension: 0
stamp: i32 [-100115] ⇊00000000fffe78ed ⇈00000000fffe78ed
stampKind: i32
value: int[-100115|0xfffffffffffe78ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i656 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v683 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v653 
=== Predecessor ===
v469 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B30" "B37" 
    xhandlers
    flags 
    probability 4585837687304205180
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v276 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v474 
=== Usages ===
=== Predecessor ===
v277 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v474  <|@  <|@
f <@~|@floating>@ <|@
tid v893 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
rawvalue: meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeInputList;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeInputList;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v894 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v894 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v943 
y: v893 
=== Succesors ===
=== Usages ===
v474 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v943 y: v893  <|@  <|@
f <@*|@fixed>@ <|@
tid v474 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Lorg/graalvm/compiler/graph/NodeInputList; target_method=size target_method_class=Lorg/graalvm/compiler/graph/NodeList; position=at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v894 
=== Succesors ===
trueSuccessor: v471 
falseSuccessor: v473 
=== Usages ===
=== Predecessor ===
v276 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v894 #trueSuccessor: v471 #falseSuccessor: v473  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4585837687304205180
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v471 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Lorg/graalvm/compiler/graph/NodeInputList; target_method=size target_method_class=Lorg/graalvm/compiler/graph/NodeList; position=at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: i946 
=== Usages ===
=== Predecessor ===
v474 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i946  <|@  <|@
f <@~|@floating>@ <|@
tid v1003 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a938 
=== Succesors ===
=== Usages ===
i946 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a938  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i946 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: NodeList.size
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList.size(NodeList.java:119) [bci: 1]
at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1003 
=== Succesors ===
next: v478 
=== Usages ===
v242 i327 
=== Predecessor ===
v471 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1003 #next: v478  <|@  <|@
f <@~|@floating>@ <|@
tid v242 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 9]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i946 
y: i942 
=== Succesors ===
=== Usages ===
v478 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i946 y: i942  <|@  <|@
f <@*|@fixed>@ <|@
tid v478 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 9]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v242 
=== Succesors ===
trueSuccessor: v477 
falseSuccessor: v475 
=== Usages ===
=== Predecessor ===
i946 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v242 #trueSuccessor: v477 #falseSuccessor: v475  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B49" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v477 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 9]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v681 
=== Usages ===
=== Predecessor ===
v478 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v681  <|@  <|@
f <@~|@floating>@ <|@
tid i682 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -101139
stableDimension: 0
stamp: i32 [-101139] ⇊00000000fffe74ed ⇈00000000fffe74ed
stampKind: i32
value: int[-101139|0xfffffffffffe74ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i656 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v681 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v653 
=== Predecessor ===
v477 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" 
    xhandlers
    flags 
    probability 4585837687304205180
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v475 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 9]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v322 
=== Usages ===
=== Predecessor ===
v478 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v322  <|@  <|@
f <@*|@fixed>@ <|@
tid v322 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v323 
=== Predecessor ===
v475 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" "B24" "B27" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4595440365585637238
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i327 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v323 
values: i946 i945 i3 
=== Succesors ===
=== Usages ===
?324 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v323 values: i946 i945 i3  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v323 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v322 v325 v341 
=== Succesors ===
next: j754 
=== Usages ===
i327 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v322 v325 v341 #next: j754  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j754 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j769 
=== Usages ===
v969 v970 
=== Predecessor ===
v323 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j769  <|@  <|@
f <@~|@floating>@ <|@
tid v969 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j754 
index: - 
=== Succesors ===
=== Usages ===
j769 v771 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j754 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j769 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v969 
=== Succesors ===
next: j770 
=== Usages ===
j896 j775 v986 
=== Predecessor ===
j754 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v969 #next: j770  <|@  <|@
f <@~|@floating>@ <|@
tid v970 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j754 
index: - 
=== Succesors ===
=== Usages ===
j770 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j754 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j770 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v970 
=== Succesors ===
next: v762 
=== Usages ===
v759 
=== Predecessor ===
j769 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v970 #next: v762  <|@  <|@
f <@~|@floating>@ <|@
tid j895 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 56
stableDimension: 0
stamp: i64 [56] ⇊0000000000000038 ⇈0000000000000038
stampKind: i64
value: long[56|0x38]
=== Inputs ===
=== Succesors ===
=== Usages ===
j896 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j896 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j769 
y: j895 
=== Succesors ===
=== Usages ===
v759 v771 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j769 y: j895  <|@  <|@
f <@~|@floating>@ <|@
tid v759 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j770 
y: j896 
=== Succesors ===
=== Usages ===
v762 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j770 y: j896  <|@  <|@
f <@*|@fixed>@ <|@
tid v762 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v759 
=== Succesors ===
trueSuccessor: v760 
falseSuccessor: v761 
=== Usages ===
=== Predecessor ===
j770 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v759 #trueSuccessor: v760 #falseSuccessor: v761  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" 
    xhandlers
    flags 
    probability 4565671424876672281
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v760 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a765 
=== Usages ===
=== Predecessor ===
v762 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a765  <|@  <|@
tid ?59 <|@
d <@d|@=== Debug Properties ===
bci: 2
code: ResolvedJavaMethodBytecode<AbstractList.listIterator()>
duringCall: true
localsSize: 1
locksSize: 0
rethrowException: false
sourceFile: AbstractList.java
sourceLine: 299
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - 
=== Succesors ===
=== Usages ===
?208 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: -  <|@  <|@
tid a162 <|@
d <@d|@=== Debug Properties ===
fields: [Ljdk.vm.ci.hotspot.HotSpotResolvedJavaField;@396e90a6
hasIdentity: true
objectId: 1
stamp: a!# Ljava/util/SubList$1;
type: HotSpotType<Ljava/util/SubList$1;, resolved>
=== Inputs ===
=== Succesors ===
=== Usages ===
?165 ?312 ?208 ?165 ?236 
=== Predecessor ===
- >@ <|@
instruction <@VirtualInstance|@org.graalvm.compiler.nodes.virtual.VirtualInstanceNode>@  <|@  <|@
tid ?165 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a162 
materializedValue: a162 
=== Succesors ===
=== Usages ===
?208 
=== Predecessor ===
- >@ <|@
instruction <@MaterializedObjectState|@org.graalvm.compiler.virtual.nodes.MaterializedObjectState>@ object: a162 materializedValue: a162  <|@  <|@
tid ?208 <|@
d <@d|@=== Debug Properties ===
bci: 15
code: ResolvedJavaMethodBytecode<SubList.listIterator(int)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: AbstractList.java
sourceLine: 698
stackSize: 1
=== Inputs ===
outerFrameState: ?59 
values: - - a162 
virtualObjectMappings: ?165 
=== Succesors ===
=== Usages ===
?236 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?59 values: - - a162 virtualObjectMappings: ?165  <|@  <|@
tid ?236 <|@
d <@d|@=== Debug Properties ===
bci: 34
code: ResolvedJavaMethodBytecode<SubList$1.<init>(SubList, int)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: AbstractList.java
sourceLine: 699
stackSize: 1
=== Inputs ===
outerFrameState: ?208 
values: - - - a162 
=== Succesors ===
=== Usages ===
?245 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?208 values: - - - a162  <|@  <|@
tid ?245 <|@
d <@d|@=== Debug Properties ===
bci: 2
code: ResolvedJavaMethodBytecode<AbstractList.listIterator(int)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: AbstractList.java
sourceLine: 325
stackSize: 0
=== Inputs ===
outerFrameState: ?236 
values: a938 i942 
=== Succesors ===
=== Usages ===
?324 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?236 values: a938 i942  <|@  <|@
tid ?312 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a162 
values: - - a1 
=== Succesors ===
=== Usages ===
?324 
=== Predecessor ===
- >@ <|@
instruction <@VirtualObjectState|@org.graalvm.compiler.virtual.nodes.VirtualObjectState>@ object: a162 values: - - a1  <|@  <|@
tid ?324 <|@
d <@d|@=== Debug Properties ===
bci: 9
code: ResolvedJavaMethodBytecode<AbstractList.rangeCheckForAdd(int)>
duringCall: false
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
rethrowException: false
sourceFile: AbstractList.java
sourceLine: 604
stackSize: 2
=== Inputs ===
outerFrameState: ?245 
values: a938 i942 i942 i327 
virtualObjectMappings: ?312 
=== Succesors ===
=== Usages ===
a765 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?245 values: a938 i942 i942 i327 virtualObjectMappings: ?312  <|@  <|@
f <@~|@floating>@ <|@
tid i897 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 10
stableDimension: 0
stamp: i32 [10] ⇊000000000000000a ⇈000000000000000a
stampKind: i32
value: int[10|0xa]
=== Inputs ===
=== Succesors ===
=== Usages ===
a765 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a765 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?324 
arguments: v692 i897 i172 
=== Succesors ===
next: j766 
=== Usages ===
j766 
=== Predecessor ===
v760 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?324 arguments: v692 i897 i172 #next: j766  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j766 <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a765 
=== Succesors ===
next: v776 
=== Usages ===
j775 
=== Predecessor ===
a765 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a765 #next: v776  <|@  <|@
f <@*|@fixed>@ <|@
tid v776 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v773 
=== Predecessor ===
j766 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" 
    xhandlers
    flags 
    probability 4595377642132686220
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v761 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v771 
=== Usages ===
=== Predecessor ===
v762 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v771  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v771 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v969 
value: j896 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v768 
=== Usages ===
=== Predecessor ===
v761 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v969 value: j896 stateAfter: - lastLocationAccess: - #next: v768  <|@  <|@
f <@~|@floating>@ <|@
tid v986 <|@
d <@d|@=== Debug Properties ===
displacement: 248
scale: Times1
stamp: void*
=== Inputs ===
base: j769 
index: - 
=== Succesors ===
=== Usages ===
v768 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j769 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v768 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v986 
=== Succesors ===
next: v774 
=== Usages ===
=== Predecessor ===
v771 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v986 #next: v774  <|@  <|@
f <@*|@fixed>@ <|@
tid v774 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v773 
=== Predecessor ===
v768 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" "B34" 
    successors 
    xhandlers
    flags 
    probability 4595440365585637238
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j775 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v773 
values: j769 j766 
=== Succesors ===
=== Usages ===
v996 v972 j598 a596 v973 v987 v988 v989 v990 v991 v992 v993 v994 v995 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v773 values: j769 j766  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v773 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v774 v776 
=== Succesors ===
next: a596 
=== Usages ===
j775 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v774 v776 #next: a596  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a596 <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j775 
=== Succesors ===
next: a599 
=== Usages ===
a610 
=== Predecessor ===
v773 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j775 #next: a599  <|@  <|@
f <@~|@floating>@ <|@
tid j351 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:575) [bci: 36]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 35]
at java.util.LinkedList.listIterator(LinkedList.java:868) [bci: 11]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
rawvalue: 24
stableDimension: 0
stamp: i64 [24] ⇊0000000000000018 ⇈0000000000000018
stampKind: i64
value: long[24|0x18]
=== Inputs ===
=== Succesors ===
=== Usages ===
j598 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j598 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j775 
y: j351 
=== Succesors ===
=== Usages ===
a599 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j775 y: j351  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a599 <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j598 
=== Succesors ===
next: j786 
=== Usages ===
a611 a602 
=== Predecessor ===
a596 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j598 #next: j786  <|@  <|@
f <@~|@floating>@ <|@
tid v781 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/util/SubList$1;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Ljava/util/SubList$1;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
j782 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j782 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
input: v781 
=== Succesors ===
=== Usages ===
v971 
=== Predecessor ===
- >@ <|@
instruction <@PointerCast|@org.graalvm.compiler.hotspot.word.PointerCastNode>@ input: v781  <|@  <|@
f <@~|@floating>@ <|@
tid v971 <|@
d <@d|@=== Debug Properties ===
displacement: 168
scale: Times1
stamp: void*
=== Inputs ===
base: j782 
index: - 
=== Succesors ===
=== Usages ===
j786 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j782 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j786 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v971 
=== Succesors ===
next: v787 
=== Usages ===
v787 
=== Predecessor ===
a599 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v971 #next: v787  <|@  <|@
f <@~|@floating>@ <|@
tid v972 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j775 
index: - 
=== Succesors ===
=== Usages ===
v787 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j775 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v787 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v972 
value: j786 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v790 
=== Usages ===
=== Predecessor ===
j786 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v972 value: j786 stateAfter: - lastLocationAccess: - #next: v790  <|@  <|@
f <@~|@floating>@ <|@
tid v973 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j775 
index: - 
=== Succesors ===
=== Usages ===
v790 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j775 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v900 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/util/SubList$1;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/SubList$1;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v790 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v790 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v973 
value: v900 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v794 
=== Usages ===
=== Predecessor ===
v787 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v973 value: v900 stateAfter: - lastLocationAccess: - #next: v794  <|@  <|@
f <@~|@floating>@ <|@
tid v987 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j775 
index: - 
=== Succesors ===
=== Usages ===
v794 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j775 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v794 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v987 
value: i3 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v796 
=== Usages ===
=== Predecessor ===
v790 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v987 value: i3 stateAfter: - lastLocationAccess: - #next: v796  <|@  <|@
f <@~|@floating>@ <|@
tid v988 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j775 
index: - 
=== Succesors ===
=== Usages ===
v796 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j775 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a602 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Compress
stamp: n -
=== Inputs ===
value: a599 
=== Succesors ===
=== Usages ===
v796 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a599  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v796 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v988 
value: a602 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v798 
=== Usages ===
=== Predecessor ===
v794 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v988 value: a602 stateAfter: - lastLocationAccess: - #next: v798  <|@  <|@
f <@~|@floating>@ <|@
tid v989 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: j775 
index: - 
=== Succesors ===
=== Usages ===
v798 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j775 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a603 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Compress
stamp: n! Ljava/util/AbstractList;
=== Inputs ===
value: a1 
=== Succesors ===
=== Usages ===
v798 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v798 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v989 
value: a603 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j804 
=== Usages ===
=== Predecessor ===
v796 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v989 value: a603 stateAfter: - lastLocationAccess: - #next: j804  <|@  <|@
f <@~|@floating>@ <|@
tid v799 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
j800 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j800 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
input: v799 
=== Succesors ===
=== Usages ===
v974 
=== Predecessor ===
- >@ <|@
instruction <@PointerCast|@org.graalvm.compiler.hotspot.word.PointerCastNode>@ input: v799  <|@  <|@
f <@~|@floating>@ <|@
tid v974 <|@
d <@d|@=== Debug Properties ===
displacement: 168
scale: Times1
stamp: void*
=== Inputs ===
base: j800 
index: - 
=== Succesors ===
=== Usages ===
j804 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j800 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j804 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v974 
=== Succesors ===
next: v805 
=== Usages ===
v805 
=== Predecessor ===
v798 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v974 #next: v805  <|@  <|@
f <@~|@floating>@ <|@
tid v990 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: j775 
index: - 
=== Succesors ===
=== Usages ===
v805 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j775 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v805 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v990 
value: j804 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v808 
=== Usages ===
=== Predecessor ===
j804 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v990 value: j804 stateAfter: - lastLocationAccess: - #next: v808  <|@  <|@
f <@~|@floating>@ <|@
tid v991 <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times1
stamp: void*
=== Inputs ===
base: j775 
index: - 
=== Succesors ===
=== Usages ===
v808 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j775 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v906 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v808 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v808 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v991 
value: v906 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v812 
=== Usages ===
=== Predecessor ===
v805 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v991 value: v906 stateAfter: - lastLocationAccess: - #next: v812  <|@  <|@
f <@~|@floating>@ <|@
tid v992 <|@
d <@d|@=== Debug Properties ===
displacement: 36
scale: Times1
stamp: void*
=== Inputs ===
base: j775 
index: - 
=== Succesors ===
=== Usages ===
v812 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j775 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v812 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v992 
value: i942 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v814 
=== Usages ===
=== Predecessor ===
v808 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v992 value: i942 stateAfter: - lastLocationAccess: - #next: v814  <|@  <|@
f <@~|@floating>@ <|@
tid v993 <|@
d <@d|@=== Debug Properties ===
displacement: 40
scale: Times1
stamp: void*
=== Inputs ===
base: j775 
index: - 
=== Succesors ===
=== Usages ===
v814 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j775 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v814 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v993 
value: i136 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v816 
=== Usages ===
=== Predecessor ===
v812 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v993 value: i136 stateAfter: - lastLocationAccess: - #next: v816  <|@  <|@
f <@~|@floating>@ <|@
tid v994 <|@
d <@d|@=== Debug Properties ===
displacement: 44
scale: Times1
stamp: void*
=== Inputs ===
base: j775 
index: - 
=== Succesors ===
=== Usages ===
v816 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j775 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v816 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v994 
value: i939 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v818 
=== Usages ===
=== Predecessor ===
v814 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v994 value: i939 stateAfter: - lastLocationAccess: - #next: v818  <|@  <|@
f <@~|@floating>@ <|@
tid v995 <|@
d <@d|@=== Debug Properties ===
displacement: 48
scale: Times1
stamp: void*
=== Inputs ===
base: j775 
index: - 
=== Succesors ===
=== Usages ===
v818 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j775 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v818 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v995 
value: a938 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v820 
=== Usages ===
=== Predecessor ===
v816 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v995 value: a938 stateAfter: - lastLocationAccess: - #next: v820  <|@  <|@
f <@~|@floating>@ <|@
tid v996 <|@
d <@d|@=== Debug Properties ===
displacement: 52
scale: Times1
stamp: void*
=== Inputs ===
base: j775 
index: - 
=== Succesors ===
=== Usages ===
v820 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j775 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v820 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v996 
value: a938 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a610 
=== Usages ===
=== Predecessor ===
v818 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v996 value: a938 stateAfter: - lastLocationAccess: - #next: a610  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a610 <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a596 
=== Succesors ===
next: a611 
=== Usages ===
v154 
=== Predecessor ===
v820 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a596 #next: a611  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a611 <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a599 
=== Succesors ===
next: v612 
=== Usages ===
=== Predecessor ===
a610 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a599 #next: v612  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v612 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v154 
=== Usages ===
=== Predecessor ===
a611 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v154  <|@  <|@
f <@*|@fixed>@ <|@
tid v154 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
stamp: void
=== Inputs ===
result: a610 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v612 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a610 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B49" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v473 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Lorg/graalvm/compiler/graph/NodeInputList; target_method=size target_method_class=Lorg/graalvm/compiler/graph/NodeList; position=at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v685 
=== Usages ===
=== Predecessor ===
v474 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v685  <|@  <|@
f <@~|@floating>@ <|@
tid i686 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -100403
stableDimension: 0
stamp: i32 [-100403] ⇊00000000fffe77cd ⇈00000000fffe77cd
stampKind: i32
value: int[-100403|0xfffffffffffe77cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i656 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v685 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v653 
=== Predecessor ===
v473 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B49" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v457 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=null target_method=listIterator target_method_class=Ljava/util/AbstractList; position=at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v677 
=== Usages ===
=== Predecessor ===
v458 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v677  <|@  <|@
f <@~|@floating>@ <|@
tid i678 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -97331
stableDimension: 0
stamp: i32 [-97331] ⇊00000000fffe83cd ⇈00000000fffe83cd
stampKind: i32
value: int[-97331|0xfffffffffffe83cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i656 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v677 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v653 
=== Predecessor ===
v457 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B49" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v445 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.SubList.checkForComodification(AbstractList.java:768) [bci: 11]
at java.util.SubList.listIterator(AbstractList.java:695) [bci: 1]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v667 
=== Usages ===
=== Predecessor ===
v446 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v667  <|@  <|@
f <@~|@floating>@ <|@
tid i668 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -94739
stableDimension: 0
stamp: i32 [-94739] ⇊00000000fffe8ded ⇈00000000fffe8ded
stampKind: i32
value: int[-94739|0xfffffffffffe8ded]
=== Inputs ===
=== Succesors ===
=== Usages ===
i656 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v667 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v653 
=== Predecessor ===
v445 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B41" "B50" 
    xhandlers
    flags 
    probability 4595137457353638498
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v27 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v37 
=== Usages ===
=== Predecessor ===
v28 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v37  <|@  <|@
f <@~|@floating>@ <|@
tid v876 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
rawvalue: meta{HotSpotType<Ljava/util/ArrayList$SubList;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/ArrayList$SubList;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v877 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v877 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v933 
y: v876 
=== Succesors ===
=== Usages ===
v37 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v933 y: v876  <|@  <|@
f <@*|@fixed>@ <|@
tid v37 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/ArrayList$SubList; target_method=listIterator target_method_class=Ljava/util/ArrayList$SubList; position=at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
stamp: void
trueSuccessorProbability: 0.8100038774718884
=== Inputs ===
condition: v877 
=== Succesors ===
trueSuccessor: v33 
falseSuccessor: v36 
=== Usages ===
=== Predecessor ===
v27 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v877 #trueSuccessor: v33 #falseSuccessor: v36  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B42" "B48" 
    xhandlers
    flags 
    probability 4594003287457973316
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v33 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/ArrayList$SubList; target_method=listIterator target_method_class=Ljava/util/ArrayList$SubList; position=at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: a947 
=== Usages ===
=== Predecessor ===
v37 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a947  <|@  <|@
f <@~|@floating>@ <|@
tid v960 <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a947 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a947 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList$SubList.this$0
nodeSourcePosition: at java.util.ArrayList$SubList.checkForComodification(ArrayList.java:1238) [bci: 1]
at java.util.ArrayList$SubList.listIterator(ArrayList.java:1099) [bci: 1]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
nullCheck: false
stamp: n# Ljava/util/ArrayList;
=== Inputs ===
stateBefore: - 
guard: - 
address: v960 
=== Succesors ===
next: i948 
=== Usages ===
v961 
=== Predecessor ===
v33 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v960 #next: i948  <|@  <|@
f <@~|@floating>@ <|@
tid v961 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a947 
=== Succesors ===
=== Usages ===
i948 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a947  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i948 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractList.modCount
nodeSourcePosition: at java.util.ArrayList$SubList.checkForComodification(ArrayList.java:1238) [bci: 4]
at java.util.ArrayList$SubList.listIterator(ArrayList.java:1099) [bci: 1]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
nullCheck: true
stamp: i32
=== Inputs ===
stateBefore: ?2 
guard: - 
address: v961 
=== Succesors ===
next: i949 
=== Usages ===
v120 v865 
=== Predecessor ===
a947 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?2 guard: - address: v961 #next: i949  <|@  <|@
f <@~|@floating>@ <|@
tid v1005 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i949 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i949 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractList.modCount
nodeSourcePosition: at java.util.ArrayList$SubList.checkForComodification(ArrayList.java:1238) [bci: 8]
at java.util.ArrayList$SubList.listIterator(ArrayList.java:1099) [bci: 1]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1005 
=== Succesors ===
next: v486 
=== Usages ===
v120 
=== Predecessor ===
i948 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1005 #next: v486  <|@  <|@
f <@~|@floating>@ <|@
tid v120 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.ArrayList$SubList.checkForComodification(ArrayList.java:1238) [bci: 11]
at java.util.ArrayList$SubList.listIterator(ArrayList.java:1099) [bci: 1]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i948 
y: i949 
=== Succesors ===
=== Usages ===
v486 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i948 y: i949  <|@  <|@
f <@*|@fixed>@ <|@
tid v486 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$SubList.checkForComodification(ArrayList.java:1238) [bci: 11]
at java.util.ArrayList$SubList.listIterator(ArrayList.java:1099) [bci: 1]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v120 
=== Succesors ===
trueSuccessor: v483 
falseSuccessor: v485 
=== Usages ===
=== Predecessor ===
i949 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v120 #trueSuccessor: v483 #falseSuccessor: v485  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4594003287457973316
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v483 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$SubList.checkForComodification(ArrayList.java:1238) [bci: 11]
at java.util.ArrayList$SubList.listIterator(ArrayList.java:1099) [bci: 1]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: i950 
=== Usages ===
=== Predecessor ===
v486 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i950  <|@  <|@
f <@~|@floating>@ <|@
tid v1009 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i950 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i950 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList$SubList.size
nodeSourcePosition: at java.util.ArrayList$SubList.rangeCheckForAdd(ArrayList.java:1229) [bci: 6]
at java.util.ArrayList$SubList.listIterator(ArrayList.java:1100) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1009 
=== Succesors ===
next: v490 
=== Usages ===
v124 
=== Predecessor ===
v483 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1009 #next: v490  <|@  <|@
f <@~|@floating>@ <|@
tid v124 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.ArrayList$SubList.rangeCheckForAdd(ArrayList.java:1229) [bci: 9]
at java.util.ArrayList$SubList.listIterator(ArrayList.java:1100) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i950 
y: i3 
=== Succesors ===
=== Usages ===
v490 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i950 y: i3  <|@  <|@
f <@*|@fixed>@ <|@
tid v490 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$SubList.rangeCheckForAdd(ArrayList.java:1229) [bci: 9]
at java.util.ArrayList$SubList.listIterator(ArrayList.java:1100) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v124 
=== Succesors ===
trueSuccessor: v489 
falseSuccessor: v487 
=== Usages ===
=== Predecessor ===
i950 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v124 #trueSuccessor: v489 #falseSuccessor: v487  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B49" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v489 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$SubList.rangeCheckForAdd(ArrayList.java:1229) [bci: 9]
at java.util.ArrayList$SubList.listIterator(ArrayList.java:1100) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v665 
=== Usages ===
=== Predecessor ===
v490 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v665  <|@  <|@
f <@~|@floating>@ <|@
tid i666 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -104979
stableDimension: 0
stamp: i32 [-104979] ⇊00000000fffe65ed ⇈00000000fffe65ed
stampKind: i32
value: int[-104979|0xfffffffffffe65ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i656 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v665 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v653 
=== Predecessor ===
v489 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4594003287457973316
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v487 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$SubList.rangeCheckForAdd(ArrayList.java:1229) [bci: 9]
at java.util.ArrayList$SubList.listIterator(ArrayList.java:1100) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: j822 
=== Usages ===
=== Predecessor ===
v490 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j822  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j822 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j837 
=== Usages ===
v975 v976 
=== Predecessor ===
v487 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j837  <|@  <|@
f <@~|@floating>@ <|@
tid v975 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j822 
index: - 
=== Succesors ===
=== Usages ===
j837 v839 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j822 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j837 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v975 
=== Succesors ===
next: j838 
=== Usages ===
j919 j843 v997 
=== Predecessor ===
j822 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v975 #next: j838  <|@  <|@
f <@~|@floating>@ <|@
tid v976 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j822 
index: - 
=== Succesors ===
=== Usages ===
j838 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j822 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j838 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v976 
=== Succesors ===
next: v830 
=== Usages ===
v827 
=== Predecessor ===
j837 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v976 #next: v830  <|@  <|@
f <@~|@floating>@ <|@
tid j911 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 40
stableDimension: 0
stamp: i64 [40] ⇊0000000000000028 ⇈0000000000000028
stampKind: i64
value: long[40|0x28]
=== Inputs ===
=== Succesors ===
=== Usages ===
j919 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j919 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j837 
y: j911 
=== Succesors ===
=== Usages ===
v827 v839 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j837 y: j911  <|@  <|@
f <@~|@floating>@ <|@
tid v827 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j838 
y: j919 
=== Succesors ===
=== Usages ===
v830 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j838 y: j919  <|@  <|@
f <@*|@fixed>@ <|@
tid v830 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v827 
=== Succesors ===
trueSuccessor: v828 
falseSuccessor: v829 
=== Usages ===
=== Predecessor ===
j838 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v827 #trueSuccessor: v828 #falseSuccessor: v829  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4563831964873262459
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v828 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a833 
=== Usages ===
=== Predecessor ===
v830 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a833  <|@  <|@
f <@~|@floating>@ <|@
tid i921 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 6
stableDimension: 0
stamp: i32 [6] ⇊0000000000000006 ⇈0000000000000006
stampKind: i32
value: int[6|0x6]
=== Inputs ===
=== Succesors ===
=== Usages ===
a833 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a833 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?2 
arguments: v692 i921 i172 
=== Succesors ===
next: j834 
=== Usages ===
j834 
=== Predecessor ===
v828 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?2 arguments: v692 i921 i172 #next: j834  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j834 <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a833 
=== Succesors ===
next: v844 
=== Usages ===
j843 
=== Predecessor ===
a833 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a833 #next: v844  <|@  <|@
f <@*|@fixed>@ <|@
tid v844 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v841 
=== Predecessor ===
j834 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4593954934786298937
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v829 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v839 
=== Usages ===
=== Predecessor ===
v830 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v839  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v839 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v975 
value: j919 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v836 
=== Usages ===
=== Predecessor ===
v829 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v975 value: j919 stateAfter: - lastLocationAccess: - #next: v836  <|@  <|@
f <@~|@floating>@ <|@
tid v997 <|@
d <@d|@=== Debug Properties ===
displacement: 232
scale: Times1
stamp: void*
=== Inputs ===
base: j837 
index: - 
=== Succesors ===
=== Usages ===
v836 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j837 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v836 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v997 
=== Succesors ===
next: v842 
=== Usages ===
=== Predecessor ===
v839 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v997 #next: v842  <|@  <|@
f <@*|@fixed>@ <|@
tid v842 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v841 
=== Predecessor ===
v836 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" "B45" 
    successors 
    xhandlers
    flags 
    probability 4594003287457973316
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j843 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v841 
values: j837 j834 
=== Succesors ===
=== Usages ===
v979 v978 a633 v998 v999 v1000 v1001 v1002 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v841 values: j837 j834  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v841 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v842 v844 
=== Succesors ===
next: a633 
=== Usages ===
j843 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v842 v844 #next: a633  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a633 <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j843 
=== Succesors ===
next: j854 
=== Usages ===
a639 
=== Predecessor ===
v841 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j843 #next: j854  <|@  <|@
f <@~|@floating>@ <|@
tid v849 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/util/ArrayList$SubList$1;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Ljava/util/ArrayList$SubList$1;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
j850 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j850 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
input: v849 
=== Succesors ===
=== Usages ===
v977 
=== Predecessor ===
- >@ <|@
instruction <@PointerCast|@org.graalvm.compiler.hotspot.word.PointerCastNode>@ input: v849  <|@  <|@
f <@~|@floating>@ <|@
tid v977 <|@
d <@d|@=== Debug Properties ===
displacement: 168
scale: Times1
stamp: void*
=== Inputs ===
base: j850 
index: - 
=== Succesors ===
=== Usages ===
j854 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j850 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j854 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v977 
=== Succesors ===
next: v855 
=== Usages ===
v855 
=== Predecessor ===
a633 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v977 #next: v855  <|@  <|@
f <@~|@floating>@ <|@
tid v978 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j843 
index: - 
=== Succesors ===
=== Usages ===
v855 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j843 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v855 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v978 
value: j854 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v858 
=== Usages ===
=== Predecessor ===
j854 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v978 value: j854 stateAfter: - lastLocationAccess: - #next: v858  <|@  <|@
f <@~|@floating>@ <|@
tid v979 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j843 
index: - 
=== Succesors ===
=== Usages ===
v858 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j843 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v924 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/util/ArrayList$SubList$1;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/ArrayList$SubList$1;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v858 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v858 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v979 
value: v924 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v863 
=== Usages ===
=== Predecessor ===
v855 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v979 value: v924 stateAfter: - lastLocationAccess: - #next: v863  <|@  <|@
f <@~|@floating>@ <|@
tid v998 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j843 
index: - 
=== Succesors ===
=== Usages ===
v863 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j843 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j861 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -4294967296
stableDimension: 0
stamp: i64 [-4294967296] ⇊ffffffff00000000 ⇈ffffffff00000000
stampKind: i64
value: long[-4294967296|0xffffffff00000000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v863 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v863 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v998 
value: j861 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v865 
=== Usages ===
=== Predecessor ===
v858 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v998 value: j861 stateAfter: - lastLocationAccess: - #next: v865  <|@  <|@
f <@~|@floating>@ <|@
tid v999 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: j843 
index: - 
=== Succesors ===
=== Usages ===
v865 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j843 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v865 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v999 
value: i948 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v867 
=== Usages ===
=== Predecessor ===
v863 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v999 value: i948 stateAfter: - lastLocationAccess: - #next: v867  <|@  <|@
f <@~|@floating>@ <|@
tid v1000 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: j843 
index: - 
=== Succesors ===
=== Usages ===
v867 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j843 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v867 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1000 
value: i3 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: i951 
=== Usages ===
=== Predecessor ===
v865 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1000 value: i3 stateAfter: - lastLocationAccess: - #next: i951  <|@  <|@
f <@~|@floating>@ <|@
tid v1007 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i951 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i951 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList$SubList.offset
nodeSourcePosition: at java.util.ArrayList$SubList.listIterator(ArrayList.java:1101) [bci: 10]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1007 
=== Succesors ===
next: v869 
=== Usages ===
v869 
=== Predecessor ===
v867 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1007 #next: v869  <|@  <|@
f <@~|@floating>@ <|@
tid v1001 <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: j843 
index: - 
=== Succesors ===
=== Usages ===
v869 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j843 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v869 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1001 
value: i951 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v871 
=== Usages ===
=== Predecessor ===
i951 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1001 value: i951 stateAfter: - lastLocationAccess: - #next: v871  <|@  <|@
f <@~|@floating>@ <|@
tid v1002 <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times1
stamp: void*
=== Inputs ===
base: j843 
index: - 
=== Succesors ===
=== Usages ===
v871 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j843 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a636 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Compress
stamp: n! Ljava/util/AbstractList;
=== Inputs ===
value: a1 
=== Succesors ===
=== Usages ===
v871 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v871 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1002 
value: a636 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a639 
=== Usages ===
=== Predecessor ===
v869 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1002 value: a636 stateAfter: - lastLocationAccess: - #next: a639  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a639 <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a633 
=== Succesors ===
next: v640 
=== Usages ===
v155 
=== Predecessor ===
v871 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a633 #next: v640  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v640 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v155 
=== Usages ===
=== Predecessor ===
a639 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v155  <|@  <|@
f <@*|@fixed>@ <|@
tid v155 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
stamp: void
=== Inputs ===
result: a639 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v640 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a639 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B49" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v485 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$SubList.checkForComodification(ArrayList.java:1238) [bci: 11]
at java.util.ArrayList$SubList.listIterator(ArrayList.java:1099) [bci: 1]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v673 
=== Usages ===
=== Predecessor ===
v486 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v673  <|@  <|@
f <@~|@floating>@ <|@
tid i674 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -104211
stableDimension: 0
stamp: i32 [-104211] ⇊00000000fffe68ed ⇈00000000fffe68ed
stampKind: i32
value: int[-104211|0xfffffffffffe68ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i656 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v673 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v653 
=== Predecessor ===
v485 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B4" "B17" "B43" "B39" "B19" "B8" "B48" "B38" "B23" "B31" "B28" "B37" 
    successors 
    xhandlers
    flags 
    probability 2371145203810566144
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i656 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-104979 - -88851] ⇊00000000fffe00c5 ⇈00000000fffefffd
valueDescription: i32
=== Inputs ===
merge: v653 
values: i655 i664 i666 i668 i670 i672 i674 i678 i680 i682 i684 i686 
=== Succesors ===
=== Usages ===
v658 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v653 values: i655 i664 i666 i668 i670 i672 i674 i678 i680 i682 i684 i686  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v653 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v654 v663 v665 v667 v669 v671 v673 v677 v679 v681 v683 v685 
=== Succesors ===
next: v658 
=== Usages ===
i656 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v654 v663 v665 v667 v669 v671 v673 v677 v679 v681 v683 v685 #next: v658  <|@  <|@
f <@*|@fixed>@ <|@
tid v658 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?2 
actionAndReason: i656 
speculation: a91 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v653 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?2 actionAndReason: i656 speculation: a91  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors 
    xhandlers
    flags 
    probability 4584697500618455161
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v36 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: a5 
=== Usages ===
=== Predecessor ===
v37 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a5  <|@  <|@
tid v413 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
returnStamp: a - (unchecked=a Ljava/util/ListIterator;)
signature: [Ljdk.vm.ci.meta.JavaType;@183bc070
stamp: void
targetMethod: HotSpotMethod<AbstractList.listIterator(int)>
=== Inputs ===
arguments: a1 i3 
=== Succesors ===
=== Usages ===
a5 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1 i3  <|@  <|@
tid ?651 <|@
d <@d|@=== Debug Properties ===
bci: 2
code: ResolvedJavaMethodBytecode<AbstractList.listIterator()>
duringCall: true
localsSize: 1
locksSize: 0
rethrowException: false
sourceFile: AbstractList.java
sourceLine: 299
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - 
=== Succesors ===
=== Usages ===
a5 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a5 <|@
d <@d|@=== Debug Properties ===
bci: 2
nodeSourcePosition: at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
polymorphic: false
stamp: a -
targetMethod: Direct#AbstractList.listIterator
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v413 
stateDuring: ?651 
=== Succesors ===
next: v152 
=== Usages ===
v152 
=== Predecessor ===
v36 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v413 stateDuring: ?651 #next: v152  <|@  <|@
f <@*|@fixed>@ <|@
tid v152 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
stamp: void
=== Inputs ===
result: a5 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
a5 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a5 memoryMap: -  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B14" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v933 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: v933  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a! Ljava/util/AbstractList;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?2 v413 ?159 v962 ?312 v960 v955 v954 v952 v953 a517 a636 a603 v1004 v1005 v1006 v1007 v1008 v1009 v1010 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v962 <|@
result [v0|QWORD[.] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v933 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v933 <|@
result v1|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v962 
=== Succesors ===
next: v19 
=== Usages ===
v877 v873 v875 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v962 #next: v19  <|@  <|@
f <@~|@floating>@ <|@
tid v872 <|@
result meta{HotSpotType<Ljava/util/LinkedList;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
rawvalue: meta{HotSpotType<Ljava/util/LinkedList;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/LinkedList;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v873 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v873 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v933 
y: v872 
=== Succesors ===
=== Usages ===
v19 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v933 y: v872  <|@  <|@
tid ?2 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<AbstractList.listIterator()>
duringCall: false
localsSize: 1
locksSize: 0
rethrowException: false
sourceFile: AbstractList.java
sourceLine: 299
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 
=== Succesors ===
=== Usages ===
v658 a833 i939 i948 i945 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1  <|@  <|@
f <@~|@floating>@ <|@
tid v692 <|@
result v2|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<[I, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[I, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a707 a765 a833 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a91 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 29]
at java.util.LinkedList.listIterator(LinkedList.java:868) [bci: 11]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
a98 v658 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i136 <|@
result int[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.ArrayList$SubList$1.<init>(ArrayList.java:1105) [bci: 28]
at java.util.ArrayList$SubList.listIterator(ArrayList.java:1103) [bci: 21]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1] ⇊00000000ffffffff
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v814 i181 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i172 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:569) [bci: 5]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 35]
at java.util.LinkedList.listIterator(LinkedList.java:868) [bci: 11]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i173 v184 v185 v342 a707 a765 a833 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i3 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 1]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v413 i327 v794 v740 v87 v148 v744 v237 v114 ?99 v124 v867 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v19 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/LinkedList; target_method=listIterator target_method_class=Ljava/util/LinkedList; position=at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
stamp: void
trueSuccessorProbability: 0.6602222840867722
=== Inputs ===
condition: v873 
=== Succesors ===
trueSuccessor: v15 
falseSuccessor: v18 
=== Usages ===
=== Predecessor ===
v933 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v873 #trueSuccessor: v15 #falseSuccessor: v18  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@55b7b248 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOV [v0|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction CMP v1|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/LinkedList;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.6602222840867722 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4604121973210466186
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v15 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/LinkedList; target_method=listIterator target_method_class=Ljava/util/LinkedList; position=at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: i934 
=== Usages ===
=== Predecessor ===
v19 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i934  <|@  <|@
f <@~|@floating>@ <|@
tid v952 <|@
result [v0|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i934 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i934 <|@
result v3|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: LinkedList.size
nodeSourcePosition: at java.util.LinkedList.isPositionIndex(LinkedList.java:541) [bci: 6]
at java.util.LinkedList.checkPositionIndex(LinkedList.java:559) [bci: 2]
at java.util.LinkedList.listIterator(LinkedList.java:867) [bci: 2]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v952 
=== Succesors ===
next: v90 
=== Usages ===
v148 v87 i173 i181 
=== Predecessor ===
v15 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v952 #next: v90  <|@  <|@
f <@~|@floating>@ <|@
tid v87 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 26]
at java.util.LinkedList.listIterator(LinkedList.java:868) [bci: 11]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i934 
y: i3 
=== Succesors ===
=== Usages ===
v90 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i934 y: i3  <|@  <|@
f <@*|@fixed>@ <|@
tid v90 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 26]
at java.util.LinkedList.listIterator(LinkedList.java:868) [bci: 11]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
stamp: void
trueSuccessorProbability: 0.44133716863953554
=== Inputs ===
condition: v87 
=== Succesors ===
trueSuccessor: v88 
falseSuccessor: v431 
=== Usages ===
=== Predecessor ===
i934 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v87 #trueSuccessor: v88 #falseSuccessor: v431  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v3|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.44133716863953554 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B10" 
    xhandlers
    flags 
    probability 4598920666768289187
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v88 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 29]
at java.util.LinkedList.listIterator(LinkedList.java:868) [bci: 11]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v95 
=== Usages ===
=== Predecessor ===
v90 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v95  <|@  <|@
f <@~|@floating>@ <|@
tid a643 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: n - NULL
stampKind: n -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
a652 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v95 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 38]
at java.util.LinkedList.listIterator(LinkedList.java:868) [bci: 11]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v96 
=== Predecessor ===
v88 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[Object[null], Object[null]] destination: B2 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4600316080397902193
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v431 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.isPositionIndex(LinkedList.java:541) [bci: 9]
at java.util.LinkedList.checkPositionIndex(LinkedList.java:559) [bci: 2]
at java.util.LinkedList.listIterator(LinkedList.java:867) [bci: 2]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v434 
=== Usages ===
=== Predecessor ===
v90 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v434  <|@  <|@
f <@~|@floating>@ <|@
tid v148 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.LinkedList.isPositionIndex(LinkedList.java:541) [bci: 9]
at java.util.LinkedList.checkPositionIndex(LinkedList.java:559) [bci: 2]
at java.util.LinkedList.listIterator(LinkedList.java:867) [bci: 2]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i934 
y: i3 
=== Succesors ===
=== Usages ===
v434 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i934 y: i3  <|@  <|@
f <@*|@fixed>@ <|@
tid v434 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.isPositionIndex(LinkedList.java:541) [bci: 9]
at java.util.LinkedList.checkPositionIndex(LinkedList.java:559) [bci: 2]
at java.util.LinkedList.listIterator(LinkedList.java:867) [bci: 2]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v148 
=== Succesors ===
trueSuccessor: v433 
falseSuccessor: v89 
=== Usages ===
=== Predecessor ===
v431 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v148 #trueSuccessor: v433 #falseSuccessor: v89  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v3|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B49" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v433 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.isPositionIndex(LinkedList.java:541) [bci: 9]
at java.util.LinkedList.checkPositionIndex(LinkedList.java:559) [bci: 2]
at java.util.LinkedList.listIterator(LinkedList.java:867) [bci: 2]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v654 
=== Usages ===
=== Predecessor ===
v434 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v654  <|@  <|@
f <@~|@floating>@ <|@
tid i655 <|@
result int[-88851|0xfffffffffffea4ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -88851
stableDimension: 0
stamp: i32 [-88851] ⇊00000000fffea4ed ⇈00000000fffea4ed
stampKind: i32
value: int[-88851|0xfffffffffffea4ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i656 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v654 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v653 
=== Predecessor ===
v433 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-88851|0xfffffffffffea4ed]] destination: B4 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B9" 
    xhandlers
    flags 
    probability 4600316080397902193
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v89 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 33]
at java.util.LinkedList.listIterator(LinkedList.java:868) [bci: 11]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v176 
=== Usages ===
=== Predecessor ===
v434 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v176  <|@  <|@
f <@~|@floating>@ <|@
tid i173 <|@
result v4|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.RightShiftNode$$Lambda$143/1909420937@4b2846e5
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:569) [bci: 6]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 35]
at java.util.LinkedList.listIterator(LinkedList.java:868) [bci: 11]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
stamp: i32 [-1073741824 - 1073741823]
=== Inputs ===
x: i934 
y: i172 
=== Succesors ===
=== Usages ===
v184 
=== Predecessor ===
- >@ <|@
instruction <@>>|@org.graalvm.compiler.nodes.calc.RightShiftNode>@ x: i934 y: i172  <|@  <|@
f <@~|@floating>@ <|@
tid v184 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:569) [bci: 7]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 35]
at java.util.LinkedList.listIterator(LinkedList.java:868) [bci: 11]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i173 
y: i172 
=== Succesors ===
=== Usages ===
v176 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i173 y: i172  <|@  <|@
f <@*|@fixed>@ <|@
tid v176 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:569) [bci: 7]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 35]
at java.util.LinkedList.listIterator(LinkedList.java:868) [bci: 11]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
stamp: void
trueSuccessorProbability: 0.27721570921026206
=== Inputs ===
condition: v184 
=== Succesors ===
trueSuccessor: v175 
falseSuccessor: v174 
=== Usages ===
=== Predecessor ===
v89 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v184 #trueSuccessor: v175 #falseSuccessor: v174  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = SAR v3|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v4|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.27721570921026206 condition: < trueDestination: B5 -> B6 falseDestination: B5 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4592032215960291828
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v175 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:575) [bci: 35]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 35]
at java.util.LinkedList.listIterator(LinkedList.java:868) [bci: 11]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v438 
=== Usages ===
=== Predecessor ===
v176 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v438  <|@  <|@
f <@~|@floating>@ <|@
tid i181 <|@
result v5|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:576) [bci: 45]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 35]
at java.util.LinkedList.listIterator(LinkedList.java:868) [bci: 11]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
stamp: i32
=== Inputs ===
x: i934 
y: i136 
=== Succesors ===
=== Usages ===
v185 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i934 y: i136  <|@  <|@
f <@~|@floating>@ <|@
tid v185 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:576) [bci: 49]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 35]
at java.util.LinkedList.listIterator(LinkedList.java:868) [bci: 11]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i181 
y: i172 
=== Succesors ===
=== Usages ===
v438 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i181 y: i172  <|@  <|@
f <@*|@fixed>@ <|@
tid v438 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:576) [bci: 49]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 35]
at java.util.LinkedList.listIterator(LinkedList.java:868) [bci: 11]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v185 
=== Succesors ===
trueSuccessor: v435 
falseSuccessor: v437 
=== Usages ===
=== Predecessor ===
v175 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v185 #trueSuccessor: v435 #falseSuccessor: v437  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = DEC v3|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v5|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4592032215960291828
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v435 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:576) [bci: 49]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 35]
at java.util.LinkedList.listIterator(LinkedList.java:868) [bci: 11]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: a935 
=== Usages ===
=== Predecessor ===
v438 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a935  <|@  <|@
f <@~|@floating>@ <|@
tid v954 <|@
result [v0|QWORD[.] + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a935 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a935 <|@
result v6|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: LinkedList.last
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:575) [bci: 36]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 35]
at java.util.LinkedList.listIterator(LinkedList.java:868) [bci: 11]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
nullCheck: false
stamp: n# Ljava/util/LinkedList$Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v954 
=== Succesors ===
next: v190 
=== Usages ===
a354 a652 
=== Predecessor ===
v435 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v954 #next: v190  <|@  <|@
f <@~|@floating>@ <|@
tid a354 <|@
result v7|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:575) [bci: 36]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 35]
at java.util.LinkedList.listIterator(LinkedList.java:868) [bci: 11]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
op: Uncompress
stamp: a# Ljava/util/LinkedList$Node;
=== Inputs ===
value: a935 
=== Succesors ===
=== Usages ===
a98 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a935  <|@  <|@
f <@*|@fixed>@ <|@
tid v190 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v96 
=== Predecessor ===
a935 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v6|DWORD[.] = MOV [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[.] = UNCOMPRESSPOINTER (input: v6|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@67149636 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v7|QWORD[.], v6|DWORD[.]] destination: B7 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B49" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v437 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:576) [bci: 49]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 35]
at java.util.LinkedList.listIterator(LinkedList.java:868) [bci: 11]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v671 
=== Usages ===
=== Predecessor ===
v438 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v671  <|@  <|@
f <@~|@floating>@ <|@
tid i672 <|@
result int[-90899|0xfffffffffffe9ced] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -90899
stableDimension: 0
stamp: i32 [-90899] ⇊00000000fffe9ced ⇈00000000fffe9ced
stampKind: i32
value: int[-90899|0xfffffffffffe9ced]
=== Inputs ===
=== Succesors ===
=== Usages ===
i656 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v671 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v653 
=== Predecessor ===
v437 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-90899|0xfffffffffffe9ced]] destination: B8 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B10" 
    xhandlers
    flags 
    probability 4598474131573620468
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v174 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:570) [bci: 10]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 35]
at java.util.LinkedList.listIterator(LinkedList.java:868) [bci: 11]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: a936 
=== Usages ===
=== Predecessor ===
v176 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a936  <|@  <|@
f <@~|@floating>@ <|@
tid v955 <|@
result [v0|QWORD[.] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a936 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a936 <|@
result v8|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: LinkedList.first
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:570) [bci: 11]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 35]
at java.util.LinkedList.listIterator(LinkedList.java:868) [bci: 11]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
nullCheck: false
stamp: n# Ljava/util/LinkedList$Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v955 
=== Succesors ===
next: v97 
=== Usages ===
a359 a652 
=== Predecessor ===
v174 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v955 #next: v97  <|@  <|@
f <@~|@floating>@ <|@
tid a359 <|@
result v9|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:570) [bci: 11]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 35]
at java.util.LinkedList.listIterator(LinkedList.java:868) [bci: 11]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
op: Uncompress
stamp: a# Ljava/util/LinkedList$Node;
=== Inputs ===
value: a936 
=== Succesors ===
=== Usages ===
a98 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a936  <|@  <|@
f <@*|@fixed>@ <|@
tid v97 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 38]
at java.util.LinkedList.listIterator(LinkedList.java:868) [bci: 11]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v96 
=== Predecessor ===
a936 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v8|DWORD[.] = MOV [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|QWORD[.] = UNCOMPRESSPOINTER (input: v8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@67149636 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v9|QWORD[.], v8|DWORD[.]] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B2" "B9" "B7" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4604121973210466186
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a98 <|@
result v10|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 38]
at java.util.LinkedList.listIterator(LinkedList.java:868) [bci: 11]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
stamp: a# Ljava/util/LinkedList$Node;
valueDescription: a -
=== Inputs ===
merge: v96 
values: a91 a359 a354 
=== Succesors ===
=== Usages ===
?99 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v96 values: a91 a359 a354  <|@  <|@
f <@~|@floating>@ <|@
tid a652 <|@
result v11|DWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: n# Ljava/util/LinkedList$Node;
valueDescription: n -
=== Inputs ===
merge: v96 
values: a643 a936 a935 
=== Succesors ===
=== Usages ===
v746 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v96 values: a643 a936 a935  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v96 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 38]
at java.util.LinkedList.listIterator(LinkedList.java:868) [bci: 11]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v95 v97 v190 
=== Succesors ===
next: j694 
=== Usages ===
a98 a652 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v95 v97 v190 #next: j694  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j694 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j714 
=== Usages ===
v963 v964 
=== Predecessor ===
v96 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j714  <|@  <|@
f <@~|@floating>@ <|@
tid v963 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j694 
index: - 
=== Succesors ===
=== Usages ===
j714 v716 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j694 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j714 <|@
result v12|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v963 
=== Succesors ===
next: j715 
=== Usages ===
j878 j720 v980 
=== Predecessor ===
j694 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v963 #next: j715  <|@  <|@
f <@~|@floating>@ <|@
tid v964 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j694 
index: - 
=== Succesors ===
=== Usages ===
j715 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j694 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j715 <|@
result v13|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v964 
=== Succesors ===
next: i937 
=== Usages ===
v699 
=== Predecessor ===
j714 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v964 #next: i937  <|@  <|@
f <@~|@floating>@ <|@
tid v953 <|@
result [v0|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i937 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i937 <|@
result v14|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractList.modCount
nodeSourcePosition: at java.util.LinkedList$ListItr.<init>(LinkedList.java:875) [bci: 14]
at java.util.LinkedList.listIterator(LinkedList.java:868) [bci: 11]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v953 
=== Succesors ===
next: v702 
=== Usages ===
v742 ?159 
=== Predecessor ===
j715 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v953 #next: v702  <|@  <|@
f <@~|@floating>@ <|@
tid j396 <|@
result long[32|0x20] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.ArrayList$SubList.checkForComodification(ArrayList.java:1238) [bci: 1]
at java.util.ArrayList$SubList.listIterator(ArrayList.java:1099) [bci: 1]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
rawvalue: 32
stableDimension: 0
stamp: i64 [32] ⇊0000000000000020 ⇈0000000000000020
stampKind: i64
value: long[32|0x20]
=== Inputs ===
=== Succesors ===
=== Usages ===
j878 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j878 <|@
result v15|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j714 
y: j396 
=== Succesors ===
=== Usages ===
v699 v716 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j714 y: j396  <|@  <|@
f <@~|@floating>@ <|@
tid v699 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j715 
y: j878 
=== Succesors ===
=== Usages ===
v702 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j715 y: j878  <|@  <|@
f <@*|@fixed>@ <|@
tid v702 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v699 
=== Succesors ===
trueSuccessor: v700 
falseSuccessor: v701 
=== Usages ===
=== Predecessor ===
i937 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v699 #trueSuccessor: v700 #falseSuccessor: v701  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v10|QWORD[.], v11|DWORD[.]] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = MOV [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = LEA [v12|QWORD + 32] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v15|QWORD, y: v13|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B10 -> B11 falseDestination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4574261866845125856
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v700 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a707 
=== Usages ===
=== Predecessor ===
v702 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a707  <|@  <|@
tid ?47 <|@
d <@d|@=== Debug Properties ===
bci: 2
code: ResolvedJavaMethodBytecode<AbstractList.listIterator()>
duringCall: true
localsSize: 1
locksSize: 0
rethrowException: false
sourceFile: AbstractList.java
sourceLine: 299
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - 
=== Succesors ===
=== Usages ===
?106 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: -  <|@  <|@
tid a157 <|@
d <@d|@=== Debug Properties ===
fields: [Ljdk.vm.ci.hotspot.HotSpotResolvedJavaField;@7e6d202f
hasIdentity: true
objectId: 0
stamp: a!# Ljava/util/LinkedList$ListItr;
type: HotSpotType<Ljava/util/LinkedList$ListItr;, resolved>
=== Inputs ===
=== Succesors ===
=== Usages ===
?99 ?99 ?106 ?159 
=== Predecessor ===
- >@ <|@
instruction <@VirtualInstance|@org.graalvm.compiler.nodes.virtual.VirtualInstanceNode>@  <|@  <|@
tid ?106 <|@
d <@d|@=== Debug Properties ===
bci: 11
code: ResolvedJavaMethodBytecode<LinkedList.listIterator(int)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: LinkedList.java
sourceLine: 868
stackSize: 1
=== Inputs ===
outerFrameState: ?47 
values: - - a157 
=== Succesors ===
=== Usages ===
?99 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?47 values: - - a157  <|@  <|@
tid ?159 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a157 
values: - i937 - - a1 
=== Succesors ===
=== Usages ===
?99 
=== Predecessor ===
- >@ <|@
instruction <@VirtualObjectState|@org.graalvm.compiler.virtual.nodes.VirtualObjectState>@ object: a157 values: - i937 - - a1  <|@  <|@
tid ?99 <|@
d <@d|@=== Debug Properties ===
bci: 38
code: ResolvedJavaMethodBytecode<LinkedList$ListItr.<init>(LinkedList, int)>
duringCall: false
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: LinkedList.java
sourceLine: 879
stackSize: 2
=== Inputs ===
outerFrameState: ?106 
values: a157 - i3 a157 a98 
virtualObjectMappings: ?159 
=== Succesors ===
=== Usages ===
a707 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?106 values: a157 - i3 a157 a98 virtualObjectMappings: ?159  <|@  <|@
f <@~|@floating>@ <|@
tid i880 <|@
result int[4|0x4] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 4
stableDimension: 0
stamp: i32 [4] ⇊0000000000000004 ⇈0000000000000004
stampKind: i32
value: int[4|0x4]
=== Inputs ===
=== Succesors ===
=== Usages ===
a707 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a707 <|@
result v16|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?99 
arguments: v692 i880 i172 
=== Succesors ===
next: j708 
=== Usages ===
j708 
=== Predecessor ===
v700 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?99 arguments: v692 i880 i172 #next: j708  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j708 <|@
result v16|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a707 
=== Succesors ===
next: v721 
=== Usages ===
j720 
=== Predecessor ===
a707 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a707 #next: v721  <|@  <|@
f <@*|@fixed>@ <|@
tid v721 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v718 
=== Predecessor ===
j708 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v2|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[4|0x4] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 38]
stack: vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=v14|DWORD,lastReturned=Object[null],next=Object[null],this$0=v0|QWORD[.]} v10|QWORD[.] 
locals: vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=v14|DWORD,lastReturned=Object[null],next=Object[null],this$0=v0|QWORD[.]} - int[0|0x0] 
java.util.LinkedList.listIterator(LinkedList.java:868) [bci: 11]
stack: vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=v14|DWORD,lastReturned=Object[null],next=Object[null],this$0=v0|QWORD[.]} 
locals: - - 
java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
locals: - 
vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=v14|DWORD,lastReturned=Object[null],next=Object[null],this$0=v0|QWORD[.]} Ljava/util/LinkedList$ListItr; int[0|0x0] v14|DWORD Object[null] Object[null] v0|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:38, 11, 2] <|@ <|@
      nr   -1  <|@ instruction v16|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v16|QWORD[.]] destination: B11 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4604062505673814288
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v701 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v716 
=== Usages ===
=== Predecessor ===
v702 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v716  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v716 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v963 
value: j878 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v712 
=== Usages ===
=== Predecessor ===
v701 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v963 value: j878 stateAfter: - lastLocationAccess: - #next: v712  <|@  <|@
f <@~|@floating>@ <|@
tid v980 <|@
result [v12|QWORD + 224] <|@
d <@d|@=== Debug Properties ===
displacement: 224
scale: Times1
stamp: void*
=== Inputs ===
base: j714 
index: - 
=== Succesors ===
=== Usages ===
v712 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j714 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v712 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v980 
=== Succesors ===
next: v719 
=== Usages ===
=== Predecessor ===
v716 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v980 #next: v719  <|@  <|@
f <@*|@fixed>@ <|@
tid v719 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v718 
=== Predecessor ===
v712 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v15|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v12|QWORD + 224] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v12|QWORD] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B11" 
    successors 
    xhandlers
    flags 
    probability 4604121973210466186
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j720 <|@
result v17|QWORD[*] <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v718 
values: j714 j708 
=== Succesors ===
=== Usages ===
v967 v966 a512 v981 v982 v983 v984 v985 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v718 values: j714 j708  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v718 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v719 v721 
=== Succesors ===
next: a512 
=== Usages ===
j720 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v719 v721 #next: a512  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a512 <|@
result v18|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j720 
=== Succesors ===
next: j732 
=== Usages ===
a520 
=== Predecessor ===
v718 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j720 #next: j732  <|@  <|@
f <@~|@floating>@ <|@
tid v726 <|@
result v19|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/util/LinkedList$ListItr;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Ljava/util/LinkedList$ListItr;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
j727 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j727 <|@
result v19|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
input: v726 
=== Succesors ===
=== Usages ===
v965 
=== Predecessor ===
- >@ <|@
instruction <@PointerCast|@org.graalvm.compiler.hotspot.word.PointerCastNode>@ input: v726  <|@  <|@
f <@~|@floating>@ <|@
tid v965 <|@
result [v19|QWORD + 168] <|@
d <@d|@=== Debug Properties ===
displacement: 168
scale: Times1
stamp: void*
=== Inputs ===
base: j727 
index: - 
=== Succesors ===
=== Usages ===
j732 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j727 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j732 <|@
result v20|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v965 
=== Succesors ===
next: v733 
=== Usages ===
v733 
=== Predecessor ===
a512 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v965 #next: v733  <|@  <|@
f <@~|@floating>@ <|@
tid v966 <|@
result [v17|QWORD[*]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j720 
index: - 
=== Succesors ===
=== Usages ===
v733 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j720 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v733 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v966 
value: j732 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v736 
=== Usages ===
=== Predecessor ===
j732 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v966 value: j732 stateAfter: - lastLocationAccess: - #next: v736  <|@  <|@
f <@~|@floating>@ <|@
tid v967 <|@
result [v17|QWORD[*] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j720 
index: - 
=== Succesors ===
=== Usages ===
v736 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j720 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v883 <|@
result meta{HotSpotType<Ljava/util/LinkedList$ListItr;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/util/LinkedList$ListItr;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/LinkedList$ListItr;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v736 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v736 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v967 
value: v883 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v740 
=== Usages ===
=== Predecessor ===
v733 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v967 value: v883 stateAfter: - lastLocationAccess: - #next: v740  <|@  <|@
f <@~|@floating>@ <|@
tid v981 <|@
result [v17|QWORD[*] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j720 
index: - 
=== Succesors ===
=== Usages ===
v740 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j720 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v740 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v981 
value: i3 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v742 
=== Usages ===
=== Predecessor ===
v736 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v981 value: i3 stateAfter: - lastLocationAccess: - #next: v742  <|@  <|@
f <@~|@floating>@ <|@
tid v982 <|@
result [v17|QWORD[*] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j720 
index: - 
=== Succesors ===
=== Usages ===
v742 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j720 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v742 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v982 
value: i937 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v744 
=== Usages ===
=== Predecessor ===
v740 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v982 value: i937 stateAfter: - lastLocationAccess: - #next: v744  <|@  <|@
f <@~|@floating>@ <|@
tid v983 <|@
result [v17|QWORD[*] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: j720 
index: - 
=== Succesors ===
=== Usages ===
v744 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j720 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v744 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v983 
value: i3 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v746 
=== Usages ===
=== Predecessor ===
v742 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v983 value: i3 stateAfter: - lastLocationAccess: - #next: v746  <|@  <|@
f <@~|@floating>@ <|@
tid v984 <|@
result [v17|QWORD[*] + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: j720 
index: - 
=== Succesors ===
=== Usages ===
v746 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j720 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v746 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v984 
value: a652 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v749 
=== Usages ===
=== Predecessor ===
v744 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v984 value: a652 stateAfter: - lastLocationAccess: - #next: v749  <|@  <|@
f <@~|@floating>@ <|@
tid v985 <|@
result [v17|QWORD[*] + 28] <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: j720 
index: - 
=== Succesors ===
=== Usages ===
v749 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j720 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a517 <|@
result v21|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Compress
stamp: n! Ljava/util/AbstractList;
=== Inputs ===
value: a1 
=== Succesors ===
=== Usages ===
v749 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v749 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v985 
value: a517 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a520 
=== Usages ===
=== Predecessor ===
v746 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v985 value: a517 stateAfter: - lastLocationAccess: - #next: a520  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a520 <|@
result v18|QWORD[.] <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a512 
=== Succesors ===
next: v521 
=== Usages ===
v153 
=== Predecessor ===
v749 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a512 #next: v521  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v521 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v153 
=== Usages ===
=== Predecessor ===
a520 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v153  <|@  <|@
f <@*|@fixed>@ <|@
tid v153 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
stamp: void
=== Inputs ===
result: a520 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v521 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a520 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v17|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v18|QWORD[.] = MOVE v17|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/LinkedList$ListItr;, resolved>} <|@ <|@
      nr   -1  <|@ instruction v20|QWORD = MOV [v19|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v17|QWORD[*]], y: v20|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v17|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/LinkedList$ListItr;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v17|QWORD[*] + 12], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v17|QWORD[*] + 16], y: v14|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v17|QWORD[*] + 20], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v17|QWORD[*] + 24], y: v11|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v21|DWORD[.] = COMPRESSPOINTER (input: v0|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@67149636 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v17|QWORD[*] + 28], y: v21|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v18|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B15" "B40" 
    xhandlers
    flags 
    probability 4599792511097008364
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v18 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v28 
=== Usages ===
=== Predecessor ===
v19 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v28  <|@  <|@
f <@~|@floating>@ <|@
tid v874 <|@
result meta{HotSpotType<Ljava/util/RandomAccessSubList;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
rawvalue: meta{HotSpotType<Ljava/util/RandomAccessSubList;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/RandomAccessSubList;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v875 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v875 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v933 
y: v874 
=== Succesors ===
=== Usages ===
v28 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v933 y: v874  <|@  <|@
f <@*|@fixed>@ <|@
tid v28 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/RandomAccessSubList; target_method=listIterator target_method_class=Ljava/util/SubList; position=at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
stamp: void
trueSuccessorProbability: 0.5123719007222719
=== Inputs ===
condition: v875 
=== Succesors ===
trueSuccessor: v24 
falseSuccessor: v27 
=== Usages ===
=== Predecessor ===
v18 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v875 #trueSuccessor: v24 #falseSuccessor: v27  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v1|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/RandomAccessSubList;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5123719007222719 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B39" 
    xhandlers
    flags 
    probability 4595440365585637238
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v24 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/RandomAccessSubList; target_method=listIterator target_method_class=Ljava/util/SubList; position=at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: a938 
=== Usages ===
=== Predecessor ===
v28 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a938  <|@  <|@
f <@~|@floating>@ <|@
tid v1008 <|@
result [v0|QWORD[.] + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a938 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a938 <|@
result v22|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: SubList.l
nodeSourcePosition: at java.util.SubList.checkForComodification(AbstractList.java:768) [bci: 5]
at java.util.SubList.listIterator(AbstractList.java:695) [bci: 1]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
nullCheck: false
stamp: n Ljava/util/AbstractList;
=== Inputs ===
stateBefore: - 
guard: - 
address: v1008 
=== Succesors ===
next: i939 
=== Usages ===
?245 v818 v956 v958 v968 v820 ?324 v1003 
=== Predecessor ===
v24 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1008 #next: i939  <|@  <|@
f <@~|@floating>@ <|@
tid v956 <|@
result [v22|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a938 
=== Succesors ===
=== Usages ===
i939 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a938  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i939 <|@
result v23|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractList.modCount
nodeSourcePosition: at java.util.SubList.checkForComodification(AbstractList.java:768) [bci: 8]
at java.util.SubList.listIterator(AbstractList.java:695) [bci: 1]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
nullCheck: true
stamp: i32
=== Inputs ===
stateBefore: ?2 
guard: - 
address: v956 
=== Succesors ===
next: i940 
=== Usages ===
v110 v816 
=== Predecessor ===
a938 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?2 guard: - address: v956 #next: i940  <|@  <|@
f <@~|@floating>@ <|@
tid v1004 <|@
result [v0|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i940 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i940 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractList.modCount
nodeSourcePosition: at java.util.SubList.checkForComodification(AbstractList.java:768) [bci: 1]
at java.util.SubList.listIterator(AbstractList.java:695) [bci: 1]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1004 
=== Succesors ===
next: v446 
=== Usages ===
v110 
=== Predecessor ===
i939 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1004 #next: v446  <|@  <|@
f <@~|@floating>@ <|@
tid v110 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.SubList.checkForComodification(AbstractList.java:768) [bci: 11]
at java.util.SubList.listIterator(AbstractList.java:695) [bci: 1]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i939 
y: i940 
=== Succesors ===
=== Usages ===
v446 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i939 y: i940  <|@  <|@
f <@*|@fixed>@ <|@
tid v446 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.SubList.checkForComodification(AbstractList.java:768) [bci: 11]
at java.util.SubList.listIterator(AbstractList.java:695) [bci: 1]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v110 
=== Succesors ===
trueSuccessor: v443 
falseSuccessor: v445 
=== Usages ===
=== Predecessor ===
i940 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v110 #trueSuccessor: v443 #falseSuccessor: v445  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v22|DWORD[.] = MOV [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction v23|DWORD = MOV [v22|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v23|DWORD, y: [v0|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4595440365585637238
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v443 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.SubList.checkForComodification(AbstractList.java:768) [bci: 11]
at java.util.SubList.listIterator(AbstractList.java:695) [bci: 1]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: i941 
=== Usages ===
=== Predecessor ===
v446 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i941  <|@  <|@
f <@~|@floating>@ <|@
tid v1006 <|@
result [v0|QWORD[.] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i941 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i941 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: SubList.size
nodeSourcePosition: at java.util.SubList.rangeCheckForAdd(AbstractList.java:759) [bci: 6]
at java.util.SubList.listIterator(AbstractList.java:696) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1006 
=== Succesors ===
next: v450 
=== Usages ===
v114 
=== Predecessor ===
v443 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1006 #next: v450  <|@  <|@
f <@~|@floating>@ <|@
tid v114 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.SubList.rangeCheckForAdd(AbstractList.java:759) [bci: 9]
at java.util.SubList.listIterator(AbstractList.java:696) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i941 
y: i3 
=== Succesors ===
=== Usages ===
v450 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i941 y: i3  <|@  <|@
f <@*|@fixed>@ <|@
tid v450 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.SubList.rangeCheckForAdd(AbstractList.java:759) [bci: 9]
at java.util.SubList.listIterator(AbstractList.java:696) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v114 
=== Succesors ===
trueSuccessor: v449 
falseSuccessor: v447 
=== Usages ===
=== Predecessor ===
i941 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v114 #trueSuccessor: v449 #falseSuccessor: v447  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v0|QWORD[.] + 20] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B16 -> B17 falseDestination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B49" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v449 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.SubList.rangeCheckForAdd(AbstractList.java:759) [bci: 9]
at java.util.SubList.listIterator(AbstractList.java:696) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v663 
=== Usages ===
=== Predecessor ===
v450 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v663  <|@  <|@
f <@~|@floating>@ <|@
tid i664 <|@
result int[-95507|0xfffffffffffe8aed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -95507
stableDimension: 0
stamp: i32 [-95507] ⇊00000000fffe8aed ⇈00000000fffe8aed
stampKind: i32
value: int[-95507|0xfffffffffffe8aed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i656 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v663 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v653 
=== Predecessor ===
v449 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-95507|0xfffffffffffe8aed]] destination: B17 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4595440365585637238
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v447 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.SubList.rangeCheckForAdd(AbstractList.java:759) [bci: 9]
at java.util.SubList.listIterator(AbstractList.java:696) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: i942 
=== Usages ===
=== Predecessor ===
v450 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i942  <|@  <|@
f <@~|@floating>@ <|@
tid v1010 <|@
result [v0|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i942 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i942 <|@
result v24|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: SubList.offset
nodeSourcePosition: at java.util.SubList.access$000(AbstractList.java:613) [bci: 1]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 30]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1010 
=== Succesors ===
next: v454 
=== Usages ===
v812 v342 v242 ?245 v237 v329 ?324 ?324 
=== Predecessor ===
v447 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1010 #next: v454  <|@  <|@
f <@~|@floating>@ <|@
tid v237 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 1]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i942 
y: i3 
=== Succesors ===
=== Usages ===
v454 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i942 y: i3  <|@  <|@
f <@*|@fixed>@ <|@
tid v454 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 1]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v237 
=== Succesors ===
trueSuccessor: v453 
falseSuccessor: v451 
=== Usages ===
=== Predecessor ===
i942 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v237 #trueSuccessor: v453 #falseSuccessor: v451  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v24|DWORD = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v24|DWORD, y: v24|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B18 -> B19 falseDestination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B49" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v453 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 1]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v669 
=== Usages ===
=== Predecessor ===
v454 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v669  <|@  <|@
f <@~|@floating>@ <|@
tid i670 <|@
result int[-97555|0xfffffffffffe82ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -97555
stableDimension: 0
stamp: i32 [-97555] ⇊00000000fffe82ed ⇈00000000fffe82ed
stampKind: i32
value: int[-97555|0xfffffffffffe82ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i656 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v669 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v653 
=== Predecessor ===
v453 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-97555|0xfffffffffffe82ed]] destination: B19 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B38" 
    xhandlers
    flags 
    probability 4595440365585637238
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v451 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 1]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v943 
=== Usages ===
=== Predecessor ===
v454 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v943  <|@  <|@
f <@~|@floating>@ <|@
tid v968 <|@
result [v22|DWORD[.] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a938 
=== Succesors ===
=== Usages ===
v943 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a938  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v943 <|@
result v25|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v968 
=== Succesors ===
next: v379 
=== Usages ===
v957 v890 v892 v894 
=== Predecessor ===
v451 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v968 #next: v379  <|@  <|@
f <@~|@floating>@ <|@
tid v957 <|@
result [v25|DWORD * 8 + 696] <|@
d <@d|@=== Debug Properties ===
displacement: 696
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: v943 
=== Succesors ===
=== Usages ===
v379 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: v943  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v379 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ANY_LOCATION
nodeSourcePosition: at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
nullCheck: false
stamp: Method*!
=== Inputs ===
stateBefore: - 
guard: - 
address: v957 
=== Succesors ===
next: v458 
=== Usages ===
v224 
=== Predecessor ===
v943 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v957 #next: v458  <|@  <|@
f <@~|@floating>@ <|@
tid v222 <|@
result v26|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
rawvalue: meta{HotSpotMethod<AbstractList.listIterator(int)>}
stableDimension: 0
stamp: Method*!
stampKind: Method*
value: meta{HotSpotMethod<AbstractList.listIterator(int)>}
=== Inputs ===
=== Succesors ===
=== Usages ===
v224 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v224 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v379 
y: v222 
=== Succesors ===
=== Usages ===
v458 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v379 y: v222  <|@  <|@
f <@*|@fixed>@ <|@
tid v458 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=null target_method=listIterator target_method_class=Ljava/util/AbstractList; position=at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v224 
=== Succesors ===
trueSuccessor: v455 
falseSuccessor: v457 
=== Usages ===
=== Predecessor ===
v379 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v224 #trueSuccessor: v455 #falseSuccessor: v457  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = MOV [v22|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotMethod<AbstractList.listIterator(int)>} <|@ <|@
      nr   -1  <|@ instruction CMP (x: v26|QWORD, y: [v25|DWORD * 8 + 696]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" "B25" 
    xhandlers
    flags 
    probability 4595440365585637238
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v455 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=null target_method=listIterator target_method_class=Ljava/util/AbstractList; position=at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v268 
=== Usages ===
=== Predecessor ===
v458 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v268  <|@  <|@
f <@~|@floating>@ <|@
tid v889 <|@
result meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
rawvalue: meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v890 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v890 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v943 
y: v889 
=== Succesors ===
=== Usages ===
v268 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v943 y: v889  <|@  <|@
f <@*|@fixed>@ <|@
tid v268 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/Arrays$ArrayList; target_method=size target_method_class=Ljava/util/Arrays$ArrayList; position=at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
stamp: void
trueSuccessorProbability: 0.5455294668972093
=== Inputs ===
condition: v890 
=== Succesors ===
trueSuccessor: v264 
falseSuccessor: v267 
=== Usages ===
=== Predecessor ===
v455 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v890 #trueSuccessor: v264 #falseSuccessor: v267  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v25|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5455294668972093 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4591507919033229151
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v264 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/Arrays$ArrayList; target_method=size target_method_class=Ljava/util/Arrays$ArrayList; position=at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: a944 
=== Usages ===
=== Predecessor ===
v268 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a944  <|@  <|@
f <@~|@floating>@ <|@
tid v958 <|@
result [v22|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a938 
=== Succesors ===
=== Usages ===
a944 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a938  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a944 <|@
result v27|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Arrays$ArrayList.a
nodeSourcePosition: at java.util.Arrays$ArrayList.size(Arrays.java:3818) [bci: 1]
at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
nullCheck: false
stamp: n [Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v958 
=== Succesors ===
next: i945 
=== Usages ===
v959 
=== Predecessor ===
v264 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v958 #next: i945  <|@  <|@
f <@~|@floating>@ <|@
tid v959 <|@
result [v27|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a944 
=== Succesors ===
=== Usages ===
i945 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a944  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i945 <|@
result v28|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.Arrays$ArrayList.size(Arrays.java:3818) [bci: 4]
at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?2 
guard: - 
address: v959 
=== Succesors ===
next: v466 
=== Usages ===
i327 v329 
=== Predecessor ===
a944 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?2 guard: - address: v959 #next: v466  <|@  <|@
f <@~|@floating>@ <|@
tid v329 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 9]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i945 
y: i942 
=== Succesors ===
=== Usages ===
v466 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i945 y: i942  <|@  <|@
f <@*|@fixed>@ <|@
tid v466 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 9]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v329 
=== Succesors ===
trueSuccessor: v465 
falseSuccessor: v463 
=== Usages ===
=== Predecessor ===
i945 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v329 #trueSuccessor: v465 #falseSuccessor: v463  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v27|DWORD[.] = MOV [v22|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction v28|DWORD = MOV [v27|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v24|DWORD, y: v28|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B22 -> B23 falseDestination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B49" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v465 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 9]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v679 
=== Usages ===
=== Predecessor ===
v466 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v679  <|@  <|@
f <@~|@floating>@ <|@
tid i680 <|@
result int[-99859|0xfffffffffffe79ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -99859
stableDimension: 0
stamp: i32 [-99859] ⇊00000000fffe79ed ⇈00000000fffe79ed
stampKind: i32
value: int[-99859|0xfffffffffffe79ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i656 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v679 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v653 
=== Predecessor ===
v465 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-99859|0xfffffffffffe79ed]] destination: B23 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B33" 
    xhandlers
    flags 
    probability 4591507919033229151
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v463 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 9]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v325 
=== Usages ===
=== Predecessor ===
v466 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v325  <|@  <|@
f <@*|@fixed>@ <|@
tid v325 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v323 
=== Predecessor ===
v463 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v28|DWORD] destination: B24 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B26" "B29" 
    xhandlers
    flags 
    probability 4590365612883304333
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v267 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v277 
=== Usages ===
=== Predecessor ===
v268 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v277  <|@  <|@
f <@~|@floating>@ <|@
tid v891 <|@
result meta{HotSpotType<Ljava/util/Collections$EmptyList;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
rawvalue: meta{HotSpotType<Ljava/util/Collections$EmptyList;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/Collections$EmptyList;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v892 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v892 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v943 
y: v891 
=== Succesors ===
=== Usages ===
v277 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v943 y: v891  <|@  <|@
f <@*|@fixed>@ <|@
tid v277 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/Collections$EmptyList; target_method=size target_method_class=Ljava/util/Collections$EmptyList; position=at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
stamp: void
trueSuccessorProbability: 0.5021334091878823
=== Inputs ===
condition: v892 
=== Succesors ===
trueSuccessor: v273 
falseSuccessor: v276 
=== Usages ===
=== Predecessor ===
v267 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v892 #trueSuccessor: v273 #falseSuccessor: v276  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v25|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Collections$EmptyList;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5021334091878823 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4585886339207662494
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v273 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/Collections$EmptyList; target_method=size target_method_class=Ljava/util/Collections$EmptyList; position=at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v470 
=== Usages ===
=== Predecessor ===
v277 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v470  <|@  <|@
f <@~|@floating>@ <|@
tid v342 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 9]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i942 
y: i172 
=== Succesors ===
=== Usages ===
v470 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i942 y: i172  <|@  <|@
f <@*|@fixed>@ <|@
tid v470 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 9]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v342 
=== Succesors ===
trueSuccessor: v467 
falseSuccessor: v469 
=== Usages ===
=== Predecessor ===
v273 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v342 #trueSuccessor: v467 #falseSuccessor: v469  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v24|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B26 -> B27 falseDestination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B33" 
    xhandlers
    flags 
    probability 4585886339207662494
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v467 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 9]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v341 
=== Usages ===
=== Predecessor ===
v470 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v341  <|@  <|@
f <@*|@fixed>@ <|@
tid v341 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v323 
=== Predecessor ===
v467 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0]] destination: B27 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B49" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v469 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 9]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v683 
=== Usages ===
=== Predecessor ===
v470 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v683  <|@  <|@
f <@~|@floating>@ <|@
tid i684 <|@
result int[-100115|0xfffffffffffe78ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -100115
stableDimension: 0
stamp: i32 [-100115] ⇊00000000fffe78ed ⇈00000000fffe78ed
stampKind: i32
value: int[-100115|0xfffffffffffe78ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i656 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v683 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v653 
=== Predecessor ===
v469 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-100115|0xfffffffffffe78ed]] destination: B28 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B30" "B37" 
    xhandlers
    flags 
    probability 4585837687304205180
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v276 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v474 
=== Usages ===
=== Predecessor ===
v277 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v474  <|@  <|@
f <@~|@floating>@ <|@
tid v893 <|@
result meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeInputList;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
rawvalue: meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeInputList;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeInputList;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v894 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v894 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v943 
y: v893 
=== Succesors ===
=== Usages ===
v474 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v943 y: v893  <|@  <|@
f <@*|@fixed>@ <|@
tid v474 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Lorg/graalvm/compiler/graph/NodeInputList; target_method=size target_method_class=Lorg/graalvm/compiler/graph/NodeList; position=at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v894 
=== Succesors ===
trueSuccessor: v471 
falseSuccessor: v473 
=== Usages ===
=== Predecessor ===
v276 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v894 #trueSuccessor: v471 #falseSuccessor: v473  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v25|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeInputList;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4585837687304205180
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v471 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Lorg/graalvm/compiler/graph/NodeInputList; target_method=size target_method_class=Lorg/graalvm/compiler/graph/NodeList; position=at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: i946 
=== Usages ===
=== Predecessor ===
v474 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i946  <|@  <|@
f <@~|@floating>@ <|@
tid v1003 <|@
result [v22|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a938 
=== Succesors ===
=== Usages ===
i946 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a938  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i946 <|@
result v29|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: NodeList.size
nodeSourcePosition: at org.graalvm.compiler.graph.NodeList.size(NodeList.java:119) [bci: 1]
at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1003 
=== Succesors ===
next: v478 
=== Usages ===
v242 i327 
=== Predecessor ===
v471 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1003 #next: v478  <|@  <|@
f <@~|@floating>@ <|@
tid v242 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 9]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i946 
y: i942 
=== Succesors ===
=== Usages ===
v478 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i946 y: i942  <|@  <|@
f <@*|@fixed>@ <|@
tid v478 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 9]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v242 
=== Succesors ===
trueSuccessor: v477 
falseSuccessor: v475 
=== Usages ===
=== Predecessor ===
i946 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v242 #trueSuccessor: v477 #falseSuccessor: v475  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v29|DWORD = MOV [v22|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v24|DWORD, y: v29|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B30 -> B31 falseDestination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B49" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v477 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 9]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v681 
=== Usages ===
=== Predecessor ===
v478 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v681  <|@  <|@
f <@~|@floating>@ <|@
tid i682 <|@
result int[-101139|0xfffffffffffe74ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -101139
stableDimension: 0
stamp: i32 [-101139] ⇊00000000fffe74ed ⇈00000000fffe74ed
stampKind: i32
value: int[-101139|0xfffffffffffe74ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i656 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v681 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v653 
=== Predecessor ===
v477 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-101139|0xfffffffffffe74ed]] destination: B31 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" 
    xhandlers
    flags 
    probability 4585837687304205180
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v475 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 9]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v322 
=== Usages ===
=== Predecessor ===
v478 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v322  <|@  <|@
f <@*|@fixed>@ <|@
tid v322 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v323 
=== Predecessor ===
v475 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v29|DWORD] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" "B24" "B27" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4595440365585637238
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i327 <|@
result v30|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v323 
values: i946 i945 i3 
=== Succesors ===
=== Usages ===
?324 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v323 values: i946 i945 i3  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v323 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v322 v325 v341 
=== Succesors ===
next: j754 
=== Usages ===
i327 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v322 v325 v341 #next: j754  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j754 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j769 
=== Usages ===
v969 v970 
=== Predecessor ===
v323 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j769  <|@  <|@
f <@~|@floating>@ <|@
tid v969 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j754 
index: - 
=== Succesors ===
=== Usages ===
j769 v771 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j754 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j769 <|@
result v31|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v969 
=== Succesors ===
next: j770 
=== Usages ===
j896 j775 v986 
=== Predecessor ===
j754 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v969 #next: j770  <|@  <|@
f <@~|@floating>@ <|@
tid v970 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j754 
index: - 
=== Succesors ===
=== Usages ===
j770 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j754 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j770 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v970 
=== Succesors ===
next: v762 
=== Usages ===
v759 
=== Predecessor ===
j769 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v970 #next: v762  <|@  <|@
f <@~|@floating>@ <|@
tid j895 <|@
result long[56|0x38] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 56
stableDimension: 0
stamp: i64 [56] ⇊0000000000000038 ⇈0000000000000038
stampKind: i64
value: long[56|0x38]
=== Inputs ===
=== Succesors ===
=== Usages ===
j896 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j896 <|@
result v32|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j769 
y: j895 
=== Succesors ===
=== Usages ===
v759 v771 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j769 y: j895  <|@  <|@
f <@~|@floating>@ <|@
tid v759 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j770 
y: j896 
=== Succesors ===
=== Usages ===
v762 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j770 y: j896  <|@  <|@
f <@*|@fixed>@ <|@
tid v762 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v759 
=== Succesors ===
trueSuccessor: v760 
falseSuccessor: v761 
=== Usages ===
=== Predecessor ===
j770 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v759 #trueSuccessor: v760 #falseSuccessor: v761  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v30|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v31|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v32|QWORD = LEA [v31|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v32|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B33 -> B34 falseDestination: B33 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" 
    xhandlers
    flags 
    probability 4565671424876672281
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v760 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a765 
=== Usages ===
=== Predecessor ===
v762 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a765  <|@  <|@
tid ?59 <|@
d <@d|@=== Debug Properties ===
bci: 2
code: ResolvedJavaMethodBytecode<AbstractList.listIterator()>
duringCall: true
localsSize: 1
locksSize: 0
rethrowException: false
sourceFile: AbstractList.java
sourceLine: 299
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - 
=== Succesors ===
=== Usages ===
?208 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: -  <|@  <|@
tid a162 <|@
d <@d|@=== Debug Properties ===
fields: [Ljdk.vm.ci.hotspot.HotSpotResolvedJavaField;@396e90a6
hasIdentity: true
objectId: 1
stamp: a!# Ljava/util/SubList$1;
type: HotSpotType<Ljava/util/SubList$1;, resolved>
=== Inputs ===
=== Succesors ===
=== Usages ===
?165 ?312 ?208 ?165 ?236 
=== Predecessor ===
- >@ <|@
instruction <@VirtualInstance|@org.graalvm.compiler.nodes.virtual.VirtualInstanceNode>@  <|@  <|@
tid ?165 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a162 
materializedValue: a162 
=== Succesors ===
=== Usages ===
?208 
=== Predecessor ===
- >@ <|@
instruction <@MaterializedObjectState|@org.graalvm.compiler.virtual.nodes.MaterializedObjectState>@ object: a162 materializedValue: a162  <|@  <|@
tid ?208 <|@
d <@d|@=== Debug Properties ===
bci: 15
code: ResolvedJavaMethodBytecode<SubList.listIterator(int)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: AbstractList.java
sourceLine: 698
stackSize: 1
=== Inputs ===
outerFrameState: ?59 
values: - - a162 
virtualObjectMappings: ?165 
=== Succesors ===
=== Usages ===
?236 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?59 values: - - a162 virtualObjectMappings: ?165  <|@  <|@
tid ?236 <|@
d <@d|@=== Debug Properties ===
bci: 34
code: ResolvedJavaMethodBytecode<SubList$1.<init>(SubList, int)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: AbstractList.java
sourceLine: 699
stackSize: 1
=== Inputs ===
outerFrameState: ?208 
values: - - - a162 
=== Succesors ===
=== Usages ===
?245 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?208 values: - - - a162  <|@  <|@
tid ?245 <|@
d <@d|@=== Debug Properties ===
bci: 2
code: ResolvedJavaMethodBytecode<AbstractList.listIterator(int)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: AbstractList.java
sourceLine: 325
stackSize: 0
=== Inputs ===
outerFrameState: ?236 
values: a938 i942 
=== Succesors ===
=== Usages ===
?324 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?236 values: a938 i942  <|@  <|@
tid ?312 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a162 
values: - - a1 
=== Succesors ===
=== Usages ===
?324 
=== Predecessor ===
- >@ <|@
instruction <@VirtualObjectState|@org.graalvm.compiler.virtual.nodes.VirtualObjectState>@ object: a162 values: - - a1  <|@  <|@
tid ?324 <|@
d <@d|@=== Debug Properties ===
bci: 9
code: ResolvedJavaMethodBytecode<AbstractList.rangeCheckForAdd(int)>
duringCall: false
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
rethrowException: false
sourceFile: AbstractList.java
sourceLine: 604
stackSize: 2
=== Inputs ===
outerFrameState: ?245 
values: a938 i942 i942 i327 
virtualObjectMappings: ?312 
=== Succesors ===
=== Usages ===
a765 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?245 values: a938 i942 i942 i327 virtualObjectMappings: ?312  <|@  <|@
f <@~|@floating>@ <|@
tid i897 <|@
result int[10|0xa] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 10
stableDimension: 0
stamp: i32 [10] ⇊000000000000000a ⇈000000000000000a
stampKind: i32
value: int[10|0xa]
=== Inputs ===
=== Succesors ===
=== Usages ===
a765 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a765 <|@
result v33|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?324 
arguments: v692 i897 i172 
=== Succesors ===
next: j766 
=== Usages ===
j766 
=== Predecessor ===
v760 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?324 arguments: v692 i897 i172 #next: j766  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j766 <|@
result v33|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a765 
=== Succesors ===
next: v776 
=== Usages ===
j775 
=== Predecessor ===
a765 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a765 #next: v776  <|@  <|@
f <@*|@fixed>@ <|@
tid v776 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v773 
=== Predecessor ===
j766 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v2|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[10|0xa] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 9]
stack: v24|DWORD v30|DWORD 
locals: v22|DWORD[.] v24|DWORD 
java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
locals: v22|DWORD[.] v24|DWORD 
java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
stack: vobject:SubList$1:0{val$index=int[0|0x0],i=Object[null],this$0=v0|QWORD[.]} 
locals: - - - 
java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
stack: vobject:SubList$1:0{val$index=int[0|0x0],i=Object[null],this$0=v0|QWORD[.]} 
locals: - - 
java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
locals: - 
vobject:SubList$1:0{val$index=int[0|0x0],i=Object[null],this$0=v0|QWORD[.]} Ljava/util/SubList$1; int[0|0x0] Object[null] v0|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:9, 2, 34, 15, 2] <|@ <|@
      nr   -1  <|@ instruction v33|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v33|QWORD[.]] destination: B34 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" 
    xhandlers
    flags 
    probability 4595377642132686220
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v761 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v771 
=== Usages ===
=== Predecessor ===
v762 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v771  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v771 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v969 
value: j896 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v768 
=== Usages ===
=== Predecessor ===
v761 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v969 value: j896 stateAfter: - lastLocationAccess: - #next: v768  <|@  <|@
f <@~|@floating>@ <|@
tid v986 <|@
result [v31|QWORD + 248] <|@
d <@d|@=== Debug Properties ===
displacement: 248
scale: Times1
stamp: void*
=== Inputs ===
base: j769 
index: - 
=== Succesors ===
=== Usages ===
v768 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j769 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v768 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v986 
=== Succesors ===
next: v774 
=== Usages ===
=== Predecessor ===
v771 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v986 #next: v774  <|@  <|@
f <@*|@fixed>@ <|@
tid v774 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v773 
=== Predecessor ===
v768 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v32|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v31|QWORD + 248] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v31|QWORD] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" "B34" 
    successors 
    xhandlers
    flags 
    probability 4595440365585637238
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j775 <|@
result v34|QWORD[*] <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v773 
values: j769 j766 
=== Succesors ===
=== Usages ===
v996 v972 j598 a596 v973 v987 v988 v989 v990 v991 v992 v993 v994 v995 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v773 values: j769 j766  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v773 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v774 v776 
=== Succesors ===
next: a596 
=== Usages ===
j775 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v774 v776 #next: a596  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a596 <|@
result v35|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j775 
=== Succesors ===
next: a599 
=== Usages ===
a610 
=== Predecessor ===
v773 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j775 #next: a599  <|@  <|@
f <@~|@floating>@ <|@
tid j351 <|@
result long[24|0x18] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:575) [bci: 36]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 35]
at java.util.LinkedList.listIterator(LinkedList.java:868) [bci: 11]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
rawvalue: 24
stableDimension: 0
stamp: i64 [24] ⇊0000000000000018 ⇈0000000000000018
stampKind: i64
value: long[24|0x18]
=== Inputs ===
=== Succesors ===
=== Usages ===
j598 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j598 <|@
result v36|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j775 
y: j351 
=== Succesors ===
=== Usages ===
a599 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j775 y: j351  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a599 <|@
result v37|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j598 
=== Succesors ===
next: j786 
=== Usages ===
a611 a602 
=== Predecessor ===
a596 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j598 #next: j786  <|@  <|@
f <@~|@floating>@ <|@
tid v781 <|@
result v38|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/util/SubList$1;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Ljava/util/SubList$1;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
j782 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j782 <|@
result v38|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
input: v781 
=== Succesors ===
=== Usages ===
v971 
=== Predecessor ===
- >@ <|@
instruction <@PointerCast|@org.graalvm.compiler.hotspot.word.PointerCastNode>@ input: v781  <|@  <|@
f <@~|@floating>@ <|@
tid v971 <|@
result [v38|QWORD + 168] <|@
d <@d|@=== Debug Properties ===
displacement: 168
scale: Times1
stamp: void*
=== Inputs ===
base: j782 
index: - 
=== Succesors ===
=== Usages ===
j786 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j782 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j786 <|@
result v39|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v971 
=== Succesors ===
next: v787 
=== Usages ===
v787 
=== Predecessor ===
a599 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v971 #next: v787  <|@  <|@
f <@~|@floating>@ <|@
tid v972 <|@
result [v34|QWORD[*]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j775 
index: - 
=== Succesors ===
=== Usages ===
v787 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j775 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v787 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v972 
value: j786 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v790 
=== Usages ===
=== Predecessor ===
j786 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v972 value: j786 stateAfter: - lastLocationAccess: - #next: v790  <|@  <|@
f <@~|@floating>@ <|@
tid v973 <|@
result [v34|QWORD[*] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j775 
index: - 
=== Succesors ===
=== Usages ===
v790 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j775 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v900 <|@
result meta{HotSpotType<Ljava/util/SubList$1;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/util/SubList$1;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/SubList$1;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v790 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v790 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v973 
value: v900 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v794 
=== Usages ===
=== Predecessor ===
v787 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v973 value: v900 stateAfter: - lastLocationAccess: - #next: v794  <|@  <|@
f <@~|@floating>@ <|@
tid v987 <|@
result [v34|QWORD[*] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j775 
index: - 
=== Succesors ===
=== Usages ===
v794 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j775 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v794 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v987 
value: i3 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v796 
=== Usages ===
=== Predecessor ===
v790 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v987 value: i3 stateAfter: - lastLocationAccess: - #next: v796  <|@  <|@
f <@~|@floating>@ <|@
tid v988 <|@
result [v34|QWORD[*] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j775 
index: - 
=== Succesors ===
=== Usages ===
v796 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j775 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a602 <|@
result v40|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Compress
stamp: n -
=== Inputs ===
value: a599 
=== Succesors ===
=== Usages ===
v796 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a599  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v796 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v988 
value: a602 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v798 
=== Usages ===
=== Predecessor ===
v794 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v988 value: a602 stateAfter: - lastLocationAccess: - #next: v798  <|@  <|@
f <@~|@floating>@ <|@
tid v989 <|@
result [v34|QWORD[*] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: j775 
index: - 
=== Succesors ===
=== Usages ===
v798 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j775 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a603 <|@
result v41|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Compress
stamp: n! Ljava/util/AbstractList;
=== Inputs ===
value: a1 
=== Succesors ===
=== Usages ===
v798 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v798 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v989 
value: a603 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j804 
=== Usages ===
=== Predecessor ===
v796 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v989 value: a603 stateAfter: - lastLocationAccess: - #next: j804  <|@  <|@
f <@~|@floating>@ <|@
tid v799 <|@
result v42|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
j800 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j800 <|@
result v42|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
input: v799 
=== Succesors ===
=== Usages ===
v974 
=== Predecessor ===
- >@ <|@
instruction <@PointerCast|@org.graalvm.compiler.hotspot.word.PointerCastNode>@ input: v799  <|@  <|@
f <@~|@floating>@ <|@
tid v974 <|@
result [v42|QWORD + 168] <|@
d <@d|@=== Debug Properties ===
displacement: 168
scale: Times1
stamp: void*
=== Inputs ===
base: j800 
index: - 
=== Succesors ===
=== Usages ===
j804 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j800 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j804 <|@
result v43|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v974 
=== Succesors ===
next: v805 
=== Usages ===
v805 
=== Predecessor ===
v798 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v974 #next: v805  <|@  <|@
f <@~|@floating>@ <|@
tid v990 <|@
result [v34|QWORD[*] + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: j775 
index: - 
=== Succesors ===
=== Usages ===
v805 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j775 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v805 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v990 
value: j804 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v808 
=== Usages ===
=== Predecessor ===
j804 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v990 value: j804 stateAfter: - lastLocationAccess: - #next: v808  <|@  <|@
f <@~|@floating>@ <|@
tid v991 <|@
result [v34|QWORD[*] + 32] <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times1
stamp: void*
=== Inputs ===
base: j775 
index: - 
=== Succesors ===
=== Usages ===
v808 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j775 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v906 <|@
result meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v808 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v808 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v991 
value: v906 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v812 
=== Usages ===
=== Predecessor ===
v805 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v991 value: v906 stateAfter: - lastLocationAccess: - #next: v812  <|@  <|@
f <@~|@floating>@ <|@
tid v992 <|@
result [v34|QWORD[*] + 36] <|@
d <@d|@=== Debug Properties ===
displacement: 36
scale: Times1
stamp: void*
=== Inputs ===
base: j775 
index: - 
=== Succesors ===
=== Usages ===
v812 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j775 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v812 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v992 
value: i942 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v814 
=== Usages ===
=== Predecessor ===
v808 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v992 value: i942 stateAfter: - lastLocationAccess: - #next: v814  <|@  <|@
f <@~|@floating>@ <|@
tid v993 <|@
result [v34|QWORD[*] + 40] <|@
d <@d|@=== Debug Properties ===
displacement: 40
scale: Times1
stamp: void*
=== Inputs ===
base: j775 
index: - 
=== Succesors ===
=== Usages ===
v814 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j775 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v814 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v993 
value: i136 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v816 
=== Usages ===
=== Predecessor ===
v812 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v993 value: i136 stateAfter: - lastLocationAccess: - #next: v816  <|@  <|@
f <@~|@floating>@ <|@
tid v994 <|@
result [v34|QWORD[*] + 44] <|@
d <@d|@=== Debug Properties ===
displacement: 44
scale: Times1
stamp: void*
=== Inputs ===
base: j775 
index: - 
=== Succesors ===
=== Usages ===
v816 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j775 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v816 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v994 
value: i939 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v818 
=== Usages ===
=== Predecessor ===
v814 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v994 value: i939 stateAfter: - lastLocationAccess: - #next: v818  <|@  <|@
f <@~|@floating>@ <|@
tid v995 <|@
result [v34|QWORD[*] + 48] <|@
d <@d|@=== Debug Properties ===
displacement: 48
scale: Times1
stamp: void*
=== Inputs ===
base: j775 
index: - 
=== Succesors ===
=== Usages ===
v818 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j775 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v818 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v995 
value: a938 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v820 
=== Usages ===
=== Predecessor ===
v816 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v995 value: a938 stateAfter: - lastLocationAccess: - #next: v820  <|@  <|@
f <@~|@floating>@ <|@
tid v996 <|@
result [v34|QWORD[*] + 52] <|@
d <@d|@=== Debug Properties ===
displacement: 52
scale: Times1
stamp: void*
=== Inputs ===
base: j775 
index: - 
=== Succesors ===
=== Usages ===
v820 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j775 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v820 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v996 
value: a938 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a610 
=== Usages ===
=== Predecessor ===
v818 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v996 value: a938 stateAfter: - lastLocationAccess: - #next: a610  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a610 <|@
result v35|QWORD[.] <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a596 
=== Succesors ===
next: a611 
=== Usages ===
v154 
=== Predecessor ===
v820 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a596 #next: a611  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a611 <|@
result v37|QWORD[.] <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a599 
=== Succesors ===
next: v612 
=== Usages ===
=== Predecessor ===
a610 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a599 #next: v612  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v612 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v154 
=== Usages ===
=== Predecessor ===
a611 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v154  <|@  <|@
f <@*|@fixed>@ <|@
tid v154 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
stamp: void
=== Inputs ===
result: a610 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v612 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a610 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v34|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v35|QWORD[.] = MOVE v34|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v36|QWORD[*] = LEA [v34|QWORD[*] + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v37|QWORD[.] = MOVE v36|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/SubList$1;, resolved>} <|@ <|@
      nr   -1  <|@ instruction v39|QWORD = MOV [v38|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v34|QWORD[*]], y: v39|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v34|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/SubList$1;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v34|QWORD[*] + 12], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v40|DWORD[.] = COMPRESSPOINTER (input: v37|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@67149636 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v34|QWORD[*] + 16], y: v40|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v41|DWORD[.] = COMPRESSPOINTER (input: v0|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@67149636 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v34|QWORD[*] + 20], y: v41|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v42|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>} <|@ <|@
      nr   -1  <|@ instruction v43|QWORD = MOV [v42|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v34|QWORD[*] + 24], y: v43|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v34|QWORD[*] + 32] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v34|QWORD[*] + 36], y: v24|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v34|QWORD[*] + 40] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v34|QWORD[*] + 44], y: v23|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v34|QWORD[*] + 48], y: v22|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v34|QWORD[*] + 52], y: v22|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v35|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B49" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v473 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Lorg/graalvm/compiler/graph/NodeInputList; target_method=size target_method_class=Lorg/graalvm/compiler/graph/NodeList; position=at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v685 
=== Usages ===
=== Predecessor ===
v474 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v685  <|@  <|@
f <@~|@floating>@ <|@
tid i686 <|@
result int[-100403|0xfffffffffffe77cd] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -100403
stableDimension: 0
stamp: i32 [-100403] ⇊00000000fffe77cd ⇈00000000fffe77cd
stampKind: i32
value: int[-100403|0xfffffffffffe77cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i656 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v685 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v653 
=== Predecessor ===
v473 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-100403|0xfffffffffffe77cd]] destination: B37 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B49" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v457 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=null target_method=listIterator target_method_class=Ljava/util/AbstractList; position=at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v677 
=== Usages ===
=== Predecessor ===
v458 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v677  <|@  <|@
f <@~|@floating>@ <|@
tid i678 <|@
result int[-97331|0xfffffffffffe83cd] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -97331
stableDimension: 0
stamp: i32 [-97331] ⇊00000000fffe83cd ⇈00000000fffe83cd
stampKind: i32
value: int[-97331|0xfffffffffffe83cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i656 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v677 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v653 
=== Predecessor ===
v457 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-97331|0xfffffffffffe83cd]] destination: B38 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B49" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v445 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.SubList.checkForComodification(AbstractList.java:768) [bci: 11]
at java.util.SubList.listIterator(AbstractList.java:695) [bci: 1]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v667 
=== Usages ===
=== Predecessor ===
v446 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v667  <|@  <|@
f <@~|@floating>@ <|@
tid i668 <|@
result int[-94739|0xfffffffffffe8ded] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -94739
stableDimension: 0
stamp: i32 [-94739] ⇊00000000fffe8ded ⇈00000000fffe8ded
stampKind: i32
value: int[-94739|0xfffffffffffe8ded]
=== Inputs ===
=== Succesors ===
=== Usages ===
i656 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v667 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v653 
=== Predecessor ===
v445 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-94739|0xfffffffffffe8ded]] destination: B39 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B41" "B50" 
    xhandlers
    flags 
    probability 4595137457353638498
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v27 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v37 
=== Usages ===
=== Predecessor ===
v28 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v37  <|@  <|@
f <@~|@floating>@ <|@
tid v876 <|@
result meta{HotSpotType<Ljava/util/ArrayList$SubList;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
rawvalue: meta{HotSpotType<Ljava/util/ArrayList$SubList;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/ArrayList$SubList;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v877 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v877 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v933 
y: v876 
=== Succesors ===
=== Usages ===
v37 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v933 y: v876  <|@  <|@
f <@*|@fixed>@ <|@
tid v37 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/ArrayList$SubList; target_method=listIterator target_method_class=Ljava/util/ArrayList$SubList; position=at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
stamp: void
trueSuccessorProbability: 0.8100038774718884
=== Inputs ===
condition: v877 
=== Succesors ===
trueSuccessor: v33 
falseSuccessor: v36 
=== Usages ===
=== Predecessor ===
v27 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v877 #trueSuccessor: v33 #falseSuccessor: v36  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v1|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList$SubList;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.8100038774718884 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B42" "B48" 
    xhandlers
    flags 
    probability 4594003287457973316
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v33 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/ArrayList$SubList; target_method=listIterator target_method_class=Ljava/util/ArrayList$SubList; position=at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: a947 
=== Usages ===
=== Predecessor ===
v37 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a947  <|@  <|@
f <@~|@floating>@ <|@
tid v960 <|@
result [v0|QWORD[.] + 32] <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a947 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a947 <|@
result v44|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList$SubList.this$0
nodeSourcePosition: at java.util.ArrayList$SubList.checkForComodification(ArrayList.java:1238) [bci: 1]
at java.util.ArrayList$SubList.listIterator(ArrayList.java:1099) [bci: 1]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
nullCheck: false
stamp: n# Ljava/util/ArrayList;
=== Inputs ===
stateBefore: - 
guard: - 
address: v960 
=== Succesors ===
next: i948 
=== Usages ===
v961 
=== Predecessor ===
v33 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v960 #next: i948  <|@  <|@
f <@~|@floating>@ <|@
tid v961 <|@
result [v44|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a947 
=== Succesors ===
=== Usages ===
i948 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a947  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i948 <|@
result v45|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractList.modCount
nodeSourcePosition: at java.util.ArrayList$SubList.checkForComodification(ArrayList.java:1238) [bci: 4]
at java.util.ArrayList$SubList.listIterator(ArrayList.java:1099) [bci: 1]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
nullCheck: true
stamp: i32
=== Inputs ===
stateBefore: ?2 
guard: - 
address: v961 
=== Succesors ===
next: i949 
=== Usages ===
v120 v865 
=== Predecessor ===
a947 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?2 guard: - address: v961 #next: i949  <|@  <|@
f <@~|@floating>@ <|@
tid v1005 <|@
result [v0|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i949 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i949 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractList.modCount
nodeSourcePosition: at java.util.ArrayList$SubList.checkForComodification(ArrayList.java:1238) [bci: 8]
at java.util.ArrayList$SubList.listIterator(ArrayList.java:1099) [bci: 1]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1005 
=== Succesors ===
next: v486 
=== Usages ===
v120 
=== Predecessor ===
i948 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1005 #next: v486  <|@  <|@
f <@~|@floating>@ <|@
tid v120 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.ArrayList$SubList.checkForComodification(ArrayList.java:1238) [bci: 11]
at java.util.ArrayList$SubList.listIterator(ArrayList.java:1099) [bci: 1]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i948 
y: i949 
=== Succesors ===
=== Usages ===
v486 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i948 y: i949  <|@  <|@
f <@*|@fixed>@ <|@
tid v486 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$SubList.checkForComodification(ArrayList.java:1238) [bci: 11]
at java.util.ArrayList$SubList.listIterator(ArrayList.java:1099) [bci: 1]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v120 
=== Succesors ===
trueSuccessor: v483 
falseSuccessor: v485 
=== Usages ===
=== Predecessor ===
i949 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v120 #trueSuccessor: v483 #falseSuccessor: v485  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v44|DWORD[.] = MOV [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction v45|DWORD = MOV [v44|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v45|DWORD, y: [v0|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B41 -> B42 falseDestination: B41 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4594003287457973316
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v483 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$SubList.checkForComodification(ArrayList.java:1238) [bci: 11]
at java.util.ArrayList$SubList.listIterator(ArrayList.java:1099) [bci: 1]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: i950 
=== Usages ===
=== Predecessor ===
v486 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i950  <|@  <|@
f <@~|@floating>@ <|@
tid v1009 <|@
result [v0|QWORD[.] + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i950 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i950 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList$SubList.size
nodeSourcePosition: at java.util.ArrayList$SubList.rangeCheckForAdd(ArrayList.java:1229) [bci: 6]
at java.util.ArrayList$SubList.listIterator(ArrayList.java:1100) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1009 
=== Succesors ===
next: v490 
=== Usages ===
v124 
=== Predecessor ===
v483 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1009 #next: v490  <|@  <|@
f <@~|@floating>@ <|@
tid v124 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.ArrayList$SubList.rangeCheckForAdd(ArrayList.java:1229) [bci: 9]
at java.util.ArrayList$SubList.listIterator(ArrayList.java:1100) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i950 
y: i3 
=== Succesors ===
=== Usages ===
v490 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i950 y: i3  <|@  <|@
f <@*|@fixed>@ <|@
tid v490 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$SubList.rangeCheckForAdd(ArrayList.java:1229) [bci: 9]
at java.util.ArrayList$SubList.listIterator(ArrayList.java:1100) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v124 
=== Succesors ===
trueSuccessor: v489 
falseSuccessor: v487 
=== Usages ===
=== Predecessor ===
i950 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v124 #trueSuccessor: v489 #falseSuccessor: v487  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v0|QWORD[.] + 24] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B42 -> B43 falseDestination: B42 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B49" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v489 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$SubList.rangeCheckForAdd(ArrayList.java:1229) [bci: 9]
at java.util.ArrayList$SubList.listIterator(ArrayList.java:1100) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v665 
=== Usages ===
=== Predecessor ===
v490 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v665  <|@  <|@
f <@~|@floating>@ <|@
tid i666 <|@
result int[-104979|0xfffffffffffe65ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -104979
stableDimension: 0
stamp: i32 [-104979] ⇊00000000fffe65ed ⇈00000000fffe65ed
stampKind: i32
value: int[-104979|0xfffffffffffe65ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i656 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v665 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v653 
=== Predecessor ===
v489 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-104979|0xfffffffffffe65ed]] destination: B43 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4594003287457973316
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v487 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$SubList.rangeCheckForAdd(ArrayList.java:1229) [bci: 9]
at java.util.ArrayList$SubList.listIterator(ArrayList.java:1100) [bci: 6]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: j822 
=== Usages ===
=== Predecessor ===
v490 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j822  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j822 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j837 
=== Usages ===
v975 v976 
=== Predecessor ===
v487 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j837  <|@  <|@
f <@~|@floating>@ <|@
tid v975 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j822 
index: - 
=== Succesors ===
=== Usages ===
j837 v839 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j822 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j837 <|@
result v46|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v975 
=== Succesors ===
next: j838 
=== Usages ===
j919 j843 v997 
=== Predecessor ===
j822 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v975 #next: j838  <|@  <|@
f <@~|@floating>@ <|@
tid v976 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j822 
index: - 
=== Succesors ===
=== Usages ===
j838 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j822 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j838 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v976 
=== Succesors ===
next: v830 
=== Usages ===
v827 
=== Predecessor ===
j837 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v976 #next: v830  <|@  <|@
f <@~|@floating>@ <|@
tid j911 <|@
result long[40|0x28] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 40
stableDimension: 0
stamp: i64 [40] ⇊0000000000000028 ⇈0000000000000028
stampKind: i64
value: long[40|0x28]
=== Inputs ===
=== Succesors ===
=== Usages ===
j919 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j919 <|@
result v47|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j837 
y: j911 
=== Succesors ===
=== Usages ===
v827 v839 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j837 y: j911  <|@  <|@
f <@~|@floating>@ <|@
tid v827 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j838 
y: j919 
=== Succesors ===
=== Usages ===
v830 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j838 y: j919  <|@  <|@
f <@*|@fixed>@ <|@
tid v830 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v827 
=== Succesors ===
trueSuccessor: v828 
falseSuccessor: v829 
=== Usages ===
=== Predecessor ===
j838 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v827 #trueSuccessor: v828 #falseSuccessor: v829  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v46|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v47|QWORD = LEA [v46|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v47|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B44 -> B45 falseDestination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4563831964873262459
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v828 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a833 
=== Usages ===
=== Predecessor ===
v830 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a833  <|@  <|@
f <@~|@floating>@ <|@
tid i921 <|@
result int[6|0x6] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 6
stableDimension: 0
stamp: i32 [6] ⇊0000000000000006 ⇈0000000000000006
stampKind: i32
value: int[6|0x6]
=== Inputs ===
=== Succesors ===
=== Usages ===
a833 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a833 <|@
result v48|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?2 
arguments: v692 i921 i172 
=== Succesors ===
next: j834 
=== Usages ===
j834 
=== Predecessor ===
v828 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?2 arguments: v692 i921 i172 #next: j834  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j834 <|@
result v48|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a833 
=== Succesors ===
next: v844 
=== Usages ===
j843 
=== Predecessor ===
a833 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a833 #next: v844  <|@  <|@
f <@*|@fixed>@ <|@
tid v844 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v841 
=== Predecessor ===
j834 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v2|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[6|0x6] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v48|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v48|QWORD[.]] destination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4593954934786298937
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v829 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v839 
=== Usages ===
=== Predecessor ===
v830 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v839  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v839 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v975 
value: j919 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v836 
=== Usages ===
=== Predecessor ===
v829 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v975 value: j919 stateAfter: - lastLocationAccess: - #next: v836  <|@  <|@
f <@~|@floating>@ <|@
tid v997 <|@
result [v46|QWORD + 232] <|@
d <@d|@=== Debug Properties ===
displacement: 232
scale: Times1
stamp: void*
=== Inputs ===
base: j837 
index: - 
=== Succesors ===
=== Usages ===
v836 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j837 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v836 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v997 
=== Succesors ===
next: v842 
=== Usages ===
=== Predecessor ===
v839 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v997 #next: v842  <|@  <|@
f <@*|@fixed>@ <|@
tid v842 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v841 
=== Predecessor ===
v836 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v47|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v46|QWORD + 232] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v46|QWORD] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" "B45" 
    successors 
    xhandlers
    flags 
    probability 4594003287457973316
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j843 <|@
result v49|QWORD[*] <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v841 
values: j837 j834 
=== Succesors ===
=== Usages ===
v979 v978 a633 v998 v999 v1000 v1001 v1002 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v841 values: j837 j834  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v841 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v842 v844 
=== Succesors ===
next: a633 
=== Usages ===
j843 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v842 v844 #next: a633  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a633 <|@
result v50|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j843 
=== Succesors ===
next: j854 
=== Usages ===
a639 
=== Predecessor ===
v841 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j843 #next: j854  <|@  <|@
f <@~|@floating>@ <|@
tid v849 <|@
result v51|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/util/ArrayList$SubList$1;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Ljava/util/ArrayList$SubList$1;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
j850 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j850 <|@
result v51|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
input: v849 
=== Succesors ===
=== Usages ===
v977 
=== Predecessor ===
- >@ <|@
instruction <@PointerCast|@org.graalvm.compiler.hotspot.word.PointerCastNode>@ input: v849  <|@  <|@
f <@~|@floating>@ <|@
tid v977 <|@
result [v51|QWORD + 168] <|@
d <@d|@=== Debug Properties ===
displacement: 168
scale: Times1
stamp: void*
=== Inputs ===
base: j850 
index: - 
=== Succesors ===
=== Usages ===
j854 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j850 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j854 <|@
result v52|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v977 
=== Succesors ===
next: v855 
=== Usages ===
v855 
=== Predecessor ===
a633 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v977 #next: v855  <|@  <|@
f <@~|@floating>@ <|@
tid v978 <|@
result [v49|QWORD[*]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j843 
index: - 
=== Succesors ===
=== Usages ===
v855 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j843 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v855 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v978 
value: j854 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v858 
=== Usages ===
=== Predecessor ===
j854 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v978 value: j854 stateAfter: - lastLocationAccess: - #next: v858  <|@  <|@
f <@~|@floating>@ <|@
tid v979 <|@
result [v49|QWORD[*] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j843 
index: - 
=== Succesors ===
=== Usages ===
v858 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j843 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v924 <|@
result meta{HotSpotType<Ljava/util/ArrayList$SubList$1;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/util/ArrayList$SubList$1;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/ArrayList$SubList$1;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v858 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v858 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v979 
value: v924 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v863 
=== Usages ===
=== Predecessor ===
v855 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v979 value: v924 stateAfter: - lastLocationAccess: - #next: v863  <|@  <|@
f <@~|@floating>@ <|@
tid v998 <|@
result [v49|QWORD[*] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j843 
index: - 
=== Succesors ===
=== Usages ===
v863 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j843 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j861 <|@
result v53|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -4294967296
stableDimension: 0
stamp: i64 [-4294967296] ⇊ffffffff00000000 ⇈ffffffff00000000
stampKind: i64
value: long[-4294967296|0xffffffff00000000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v863 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v863 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v998 
value: j861 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v865 
=== Usages ===
=== Predecessor ===
v858 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v998 value: j861 stateAfter: - lastLocationAccess: - #next: v865  <|@  <|@
f <@~|@floating>@ <|@
tid v999 <|@
result [v49|QWORD[*] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: j843 
index: - 
=== Succesors ===
=== Usages ===
v865 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j843 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v865 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v999 
value: i948 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v867 
=== Usages ===
=== Predecessor ===
v863 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v999 value: i948 stateAfter: - lastLocationAccess: - #next: v867  <|@  <|@
f <@~|@floating>@ <|@
tid v1000 <|@
result [v49|QWORD[*] + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: j843 
index: - 
=== Succesors ===
=== Usages ===
v867 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j843 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v867 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1000 
value: i3 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: i951 
=== Usages ===
=== Predecessor ===
v865 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1000 value: i3 stateAfter: - lastLocationAccess: - #next: i951  <|@  <|@
f <@~|@floating>@ <|@
tid v1007 <|@
result [v0|QWORD[.] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i951 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i951 <|@
result v54|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList$SubList.offset
nodeSourcePosition: at java.util.ArrayList$SubList.listIterator(ArrayList.java:1101) [bci: 10]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v1007 
=== Succesors ===
next: v869 
=== Usages ===
v869 
=== Predecessor ===
v867 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1007 #next: v869  <|@  <|@
f <@~|@floating>@ <|@
tid v1001 <|@
result [v49|QWORD[*] + 28] <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: j843 
index: - 
=== Succesors ===
=== Usages ===
v869 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j843 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v869 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1001 
value: i951 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v871 
=== Usages ===
=== Predecessor ===
i951 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1001 value: i951 stateAfter: - lastLocationAccess: - #next: v871  <|@  <|@
f <@~|@floating>@ <|@
tid v1002 <|@
result [v49|QWORD[*] + 32] <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times1
stamp: void*
=== Inputs ===
base: j843 
index: - 
=== Succesors ===
=== Usages ===
v871 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j843 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a636 <|@
result v55|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Compress
stamp: n! Ljava/util/AbstractList;
=== Inputs ===
value: a1 
=== Succesors ===
=== Usages ===
v871 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v871 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1002 
value: a636 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a639 
=== Usages ===
=== Predecessor ===
v869 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1002 value: a636 stateAfter: - lastLocationAccess: - #next: a639  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a639 <|@
result v50|QWORD[.] <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a633 
=== Succesors ===
next: v640 
=== Usages ===
v155 
=== Predecessor ===
v871 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a633 #next: v640  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v640 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v155 
=== Usages ===
=== Predecessor ===
a639 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v155  <|@  <|@
f <@*|@fixed>@ <|@
tid v155 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
stamp: void
=== Inputs ===
result: a639 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v640 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a639 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v49|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v50|QWORD[.] = MOVE v49|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v51|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/ArrayList$SubList$1;, resolved>} <|@ <|@
      nr   -1  <|@ instruction v52|QWORD = MOV [v51|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v49|QWORD[*]], y: v52|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v49|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList$SubList$1;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v53|QWORD = MOVE input: long[-4294967296|0xffffffff00000000] <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v49|QWORD[*] + 12], y: v53|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v49|QWORD[*] + 20], y: v45|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v49|QWORD[*] + 24], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v54|DWORD = MOV [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v49|QWORD[*] + 28], y: v54|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v55|DWORD[.] = COMPRESSPOINTER (input: v0|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@67149636 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v49|QWORD[*] + 32], y: v55|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v50|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B49" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v485 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$SubList.checkForComodification(ArrayList.java:1238) [bci: 11]
at java.util.ArrayList$SubList.listIterator(ArrayList.java:1099) [bci: 1]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v673 
=== Usages ===
=== Predecessor ===
v486 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v673  <|@  <|@
f <@~|@floating>@ <|@
tid i674 <|@
result int[-104211|0xfffffffffffe68ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -104211
stableDimension: 0
stamp: i32 [-104211] ⇊00000000fffe68ed ⇈00000000fffe68ed
stampKind: i32
value: int[-104211|0xfffffffffffe68ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i656 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v673 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v653 
=== Predecessor ===
v485 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-104211|0xfffffffffffe68ed]] destination: B48 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B4" "B17" "B43" "B39" "B19" "B8" "B48" "B38" "B23" "B31" "B28" "B37" 
    successors 
    xhandlers
    flags 
    probability 2371145203810566144
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i656 <|@
result v56|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-104979 - -88851] ⇊00000000fffe00c5 ⇈00000000fffefffd
valueDescription: i32
=== Inputs ===
merge: v653 
values: i655 i664 i666 i668 i670 i672 i674 i678 i680 i682 i684 i686 
=== Succesors ===
=== Usages ===
v658 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v653 values: i655 i664 i666 i668 i670 i672 i674 i678 i680 i682 i684 i686  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v653 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v654 v663 v665 v667 v669 v671 v673 v677 v679 v681 v683 v685 
=== Succesors ===
next: v658 
=== Usages ===
i656 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v654 v663 v665 v667 v669 v671 v673 v677 v679 v681 v683 v685 #next: v658  <|@  <|@
f <@*|@fixed>@ <|@
tid v658 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?2 
actionAndReason: i656 
speculation: a91 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v653 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?2 actionAndReason: i656 speculation: a91  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v56|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v56|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors 
    xhandlers
    flags 
    probability 4584697500618455161
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v36 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: a5 
=== Usages ===
=== Predecessor ===
v37 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a5  <|@  <|@
tid v413 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
returnStamp: a - (unchecked=a Ljava/util/ListIterator;)
signature: [Ljdk.vm.ci.meta.JavaType;@183bc070
stamp: void
targetMethod: HotSpotMethod<AbstractList.listIterator(int)>
=== Inputs ===
arguments: a1 i3 
=== Succesors ===
=== Usages ===
a5 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1 i3  <|@  <|@
tid ?651 <|@
d <@d|@=== Debug Properties ===
bci: 2
code: ResolvedJavaMethodBytecode<AbstractList.listIterator()>
duringCall: true
localsSize: 1
locksSize: 0
rethrowException: false
sourceFile: AbstractList.java
sourceLine: 299
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - 
=== Succesors ===
=== Usages ===
a5 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a5 <|@
result v57|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 2
nodeSourcePosition: at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
polymorphic: false
stamp: a -
targetMethod: Direct#AbstractList.listIterator
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v413 
stateDuring: ?651 
=== Succesors ===
next: v152 
=== Usages ===
v152 
=== Predecessor ===
v36 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v413 stateDuring: ?651 #next: v152  <|@  <|@
f <@*|@fixed>@ <|@
tid v152 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
stamp: void
=== Inputs ===
result: a5 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
a5 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a5 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
locals: - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractList.listIterator(int)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:2] <|@ <|@
      nr   -1  <|@ instruction v57|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v57|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B14" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@55b7b248 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOV [v0|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v1|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/LinkedList;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.6602222840867722 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4604121973210466186
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v3|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.44133716863953554 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4600316080397902193
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v3|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B9" 
    xhandlers
    flags 
    probability 4600316080397902193
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = SAR v3|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v4|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.27721570921026206 condition: < trueDestination: B5 -> B6 falseDestination: B5 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B10" 
    xhandlers
    flags 
    probability 4598474131573620468
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v8|DWORD[.] = MOV [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|QWORD[.] = UNCOMPRESSPOINTER (input: v8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@67149636 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v9|QWORD[.], v8|DWORD[.]] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B2" "B9" "B7" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4604121973210466186
    begin_IR
      LIR
      nr   -1  <|@ instruction [v10|QWORD[.], v11|DWORD[.]] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = MOV [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = LEA [v12|QWORD + 32] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v15|QWORD, y: v13|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B10 -> B11 falseDestination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4604062505673814288
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v15|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v12|QWORD + 224] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v12|QWORD] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B11" 
    successors 
    xhandlers
    flags 
    probability 4604121973210466186
    begin_IR
      LIR
      nr   -1  <|@ instruction [v17|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v18|QWORD[.] = MOVE v17|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/LinkedList$ListItr;, resolved>} <|@ <|@
      nr   -1  <|@ instruction v20|QWORD = MOV [v19|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v17|QWORD[*]], y: v20|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v17|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/LinkedList$ListItr;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v17|QWORD[*] + 12], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v17|QWORD[*] + 16], y: v14|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v17|QWORD[*] + 20], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v17|QWORD[*] + 24], y: v11|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v21|DWORD[.] = COMPRESSPOINTER (input: v0|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@67149636 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v17|QWORD[*] + 28], y: v21|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v18|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B15" "B40" 
    xhandlers
    flags 
    probability 4599792511097008364
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v1|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/RandomAccessSubList;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5123719007222719 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B39" 
    xhandlers
    flags 
    probability 4595440365585637238
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v22|DWORD[.] = MOV [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction v23|DWORD = MOV [v22|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v23|DWORD, y: [v0|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4595440365585637238
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v0|QWORD[.] + 20] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B16 -> B17 falseDestination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4595440365585637238
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v24|DWORD = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v24|DWORD, y: v24|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B18 -> B19 falseDestination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B38" 
    xhandlers
    flags 
    probability 4595440365585637238
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = MOV [v22|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotMethod<AbstractList.listIterator(int)>} <|@ <|@
      nr   -1  <|@ instruction CMP (x: v26|QWORD, y: [v25|DWORD * 8 + 696]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" "B25" 
    xhandlers
    flags 
    probability 4595440365585637238
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v25|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5455294668972093 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4591507919033229151
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v27|DWORD[.] = MOV [v22|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction v28|DWORD = MOV [v27|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v24|DWORD, y: v28|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B22 -> B23 falseDestination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B33" 
    xhandlers
    flags 
    probability 4591507919033229151
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v28|DWORD] destination: B24 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" "B24" "B27" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4595440365585637238
    begin_IR
      LIR
      nr   -1  <|@ instruction [v30|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v31|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v32|QWORD = LEA [v31|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v32|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B33 -> B34 falseDestination: B33 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" 
    xhandlers
    flags 
    probability 4595377642132686220
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v32|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v31|QWORD + 248] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v31|QWORD] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" "B34" 
    successors 
    xhandlers
    flags 
    probability 4595440365585637238
    begin_IR
      LIR
      nr   -1  <|@ instruction [v34|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v35|QWORD[.] = MOVE v34|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v36|QWORD[*] = LEA [v34|QWORD[*] + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v37|QWORD[.] = MOVE v36|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/SubList$1;, resolved>} <|@ <|@
      nr   -1  <|@ instruction v39|QWORD = MOV [v38|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v34|QWORD[*]], y: v39|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v34|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/SubList$1;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v34|QWORD[*] + 12], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v40|DWORD[.] = COMPRESSPOINTER (input: v37|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@67149636 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v34|QWORD[*] + 16], y: v40|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v41|DWORD[.] = COMPRESSPOINTER (input: v0|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@67149636 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v34|QWORD[*] + 20], y: v41|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v42|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>} <|@ <|@
      nr   -1  <|@ instruction v43|QWORD = MOV [v42|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v34|QWORD[*] + 24], y: v43|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v34|QWORD[*] + 32] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v34|QWORD[*] + 36], y: v24|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v34|QWORD[*] + 40] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v34|QWORD[*] + 44], y: v23|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v34|QWORD[*] + 48], y: v22|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v34|QWORD[*] + 52], y: v22|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v35|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B10" 
    xhandlers
    flags 
    probability 4598920666768289187
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[Object[null], Object[null]] destination: B2 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B41" "B50" 
    xhandlers
    flags 
    probability 4595137457353638498
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v1|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList$SubList;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.8100038774718884 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B42" "B48" 
    xhandlers
    flags 
    probability 4594003287457973316
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v44|DWORD[.] = MOV [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction v45|DWORD = MOV [v44|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v45|DWORD, y: [v0|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B41 -> B42 falseDestination: B41 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4594003287457973316
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v0|QWORD[.] + 24] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B42 -> B43 falseDestination: B42 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4594003287457973316
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v46|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v47|QWORD = LEA [v46|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v47|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B44 -> B45 falseDestination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4593954934786298937
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v47|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v46|QWORD + 232] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v46|QWORD] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" "B45" 
    successors 
    xhandlers
    flags 
    probability 4594003287457973316
    begin_IR
      LIR
      nr   -1  <|@ instruction [v49|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v50|QWORD[.] = MOVE v49|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v51|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/ArrayList$SubList$1;, resolved>} <|@ <|@
      nr   -1  <|@ instruction v52|QWORD = MOV [v51|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v49|QWORD[*]], y: v52|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v49|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList$SubList$1;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v53|QWORD = MOVE input: long[-4294967296|0xffffffff00000000] <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v49|QWORD[*] + 12], y: v53|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v49|QWORD[*] + 20], y: v45|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v49|QWORD[*] + 24], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v54|DWORD = MOV [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v49|QWORD[*] + 28], y: v54|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v55|DWORD[.] = COMPRESSPOINTER (input: v0|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@67149636 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v49|QWORD[*] + 32], y: v55|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v50|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4592032215960291828
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = DEC v3|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v5|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4592032215960291828
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v6|DWORD[.] = MOV [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[.] = UNCOMPRESSPOINTER (input: v6|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@67149636 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v7|QWORD[.], v6|DWORD[.]] destination: B7 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B26" "B29" 
    xhandlers
    flags 
    probability 4590365612883304333
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v25|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Collections$EmptyList;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5021334091878823 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4585886339207662494
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v24|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B26 -> B27 falseDestination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B33" 
    xhandlers
    flags 
    probability 4585886339207662494
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0]] destination: B27 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B30" "B37" 
    xhandlers
    flags 
    probability 4585837687304205180
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v25|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeInputList;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4585837687304205180
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v29|DWORD = MOV [v22|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v24|DWORD, y: v29|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B30 -> B31 falseDestination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" 
    xhandlers
    flags 
    probability 4585837687304205180
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v29|DWORD] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors 
    xhandlers
    flags 
    probability 4584697500618455161
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
locals: - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractList.listIterator(int)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:2] <|@ <|@
      nr   -1  <|@ instruction v57|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v57|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4574261866845125856
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v60|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v60|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[4|0x4] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 38]
stack: vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=v14|DWORD,lastReturned=Object[null],next=Object[null],this$0=v0|QWORD[.]} v10|QWORD[.] 
locals: vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=v14|DWORD,lastReturned=Object[null],next=Object[null],this$0=v0|QWORD[.]} - int[0|0x0] 
java.util.LinkedList.listIterator(LinkedList.java:868) [bci: 11]
stack: vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=v14|DWORD,lastReturned=Object[null],next=Object[null],this$0=v0|QWORD[.]} 
locals: - - 
java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
locals: - 
vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=v14|DWORD,lastReturned=Object[null],next=Object[null],this$0=v0|QWORD[.]} Ljava/util/LinkedList$ListItr; int[0|0x0] v14|DWORD Object[null] Object[null] v0|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:38, 11, 2] <|@ <|@
      nr   -1  <|@ instruction v16|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v16|QWORD[.]] destination: B11 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" 
    xhandlers
    flags 
    probability 4565671424876672281
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v59|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v59|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[10|0xa] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 9]
stack: v24|DWORD v30|DWORD 
locals: v22|DWORD[.] v24|DWORD 
java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
locals: v22|DWORD[.] v24|DWORD 
java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
stack: vobject:SubList$1:0{val$index=int[0|0x0],i=Object[null],this$0=v0|QWORD[.]} 
locals: - - - 
java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
stack: vobject:SubList$1:0{val$index=int[0|0x0],i=Object[null],this$0=v0|QWORD[.]} 
locals: - - 
java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
locals: - 
vobject:SubList$1:0{val$index=int[0|0x0],i=Object[null],this$0=v0|QWORD[.]} Ljava/util/SubList$1; int[0|0x0] Object[null] v0|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:9, 2, 34, 15, 2] <|@ <|@
      nr   -1  <|@ instruction v33|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v33|QWORD[.]] destination: B34 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4563831964873262459
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v58|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v58|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[6|0x6] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v48|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v48|QWORD[.]] destination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B49" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-100115|0xfffffffffffe78ed]] destination: B28 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B4" "B17" "B43" "B39" "B19" "B8" "B48" "B38" "B23" "B31" "B28" "B37" 
    successors 
    xhandlers
    flags 
    probability 2371145203810566144
    begin_IR
      LIR
      nr   -1  <|@ instruction [v56|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v56|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B49" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-100403|0xfffffffffffe77cd]] destination: B37 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B49" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-104979|0xfffffffffffe65ed]] destination: B43 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B49" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-104211|0xfffffffffffe68ed]] destination: B48 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B49" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-101139|0xfffffffffffe74ed]] destination: B31 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B49" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-99859|0xfffffffffffe79ed]] destination: B23 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B49" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-90899|0xfffffffffffe9ced]] destination: B8 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B49" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-88851|0xfffffffffffea4ed]] destination: B4 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B49" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-97555|0xfffffffffffe82ed]] destination: B19 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B49" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-95507|0xfffffffffffe8aed]] destination: B17 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B49" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-94739|0xfffffffffffe8ded]] destination: B39 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B49" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-97331|0xfffffffffffe83cd]] destination: B38 -> B49 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iconst_0      
     2: invokevirtual #10         // listIterator:(int)java.util.ListIterator
     5: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B14" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@55b7b248 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction rax|DWORD = MOV [r13|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   10  <|@ instruction CMP rax|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/LinkedList;, resolved>;compressed} <|@ <|@
      nr   12  <|@ instruction BRANCH trueDestinationProbability: 0.6602222840867722 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4604121973210466186
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   16  <|@ instruction rsi|DWORD = MOV [r13|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   18  <|@ instruction TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr   20  <|@ instruction BRANCH trueDestinationProbability: 0.44133716863953554 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4600316080397902193
    begin_IR
      LIR
      nr   30  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   32  <|@ instruction TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr   34  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B9" 
    xhandlers
    flags 
    probability 4600316080397902193
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   44  <|@ instruction rax|DWORD = SAR rsi|DWORD size: DWORD <|@ <|@
      nr   46  <|@ instruction CMP rax|DWORD y: 1 size: DWORD <|@ <|@
      nr   48  <|@ instruction BRANCH trueDestinationProbability: 0.27721570921026206 condition: < trueDestination: B5 -> B6 falseDestination: B5 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B10" 
    xhandlers
    flags 
    probability 4598474131573620468
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   76  <|@ instruction rax|DWORD[.] = MOV [r13|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   78  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@67149636 encoding: base: 0 shift: 3 <|@ <|@
      nr   80  <|@ instruction r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   82  <|@ instruction JUMP ~[] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B2" "B9" "B7" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4604121973210466186
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   86  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   88  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   90  <|@ instruction r10|DWORD = MOV [r13|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   92  <|@ instruction r11|QWORD = LEA [rsi|QWORD + 32] size: QWORD <|@ <|@
      nr   94  <|@ instruction CMP (x: r11|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr   96  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B10 -> B11 falseDestination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4604062505673814288
    begin_IR
      LIR
      nr  120  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  122  <|@ instruction MOV (x: [r15|QWORD + 96], y: r11|QWORD) size: QWORD <|@ <|@
      nr  124  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 224] instr: 0 <|@ <|@
      nr  126  <|@ instruction rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  128  <|@ instruction JUMP ~[] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B11" 
    successors 
    xhandlers
    flags 
    probability 4604121973210466186
    begin_IR
      LIR
      nr  130  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  132  <|@ instruction rdx|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  134  <|@ instruction r11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/LinkedList$ListItr;, resolved>} <|@ <|@
      nr  136  <|@ instruction r11|QWORD = MOV [r11|QWORD + 168] size: QWORD <|@ <|@
      nr  138  <|@ instruction MOV (x: [rsi|QWORD[*]], y: r11|QWORD) size: QWORD <|@ <|@
      nr  140  <|@ instruction MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/LinkedList$ListItr;, resolved>;compressed} <|@ <|@
      nr  142  <|@ instruction MOV (x: [rsi|QWORD[*] + 12], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr  144  <|@ instruction MOV (x: [rsi|QWORD[*] + 16], y: r10|DWORD) size: DWORD <|@ <|@
      nr  146  <|@ instruction MOV (x: [rsi|QWORD[*] + 20], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr  148  <|@ instruction MOV (x: [rsi|QWORD[*] + 24], y: rax|DWORD[.]) size: DWORD <|@ <|@
      nr  150  <|@ instruction r13|DWORD[.] = COMPRESSPOINTER (input: r13|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@67149636 encoding: base: 0 shift: 3 <|@ <|@
      nr  152  <|@ instruction MOV (x: [rsi|QWORD[*] + 28], y: r13|DWORD[.]) size: DWORD <|@ <|@
      nr  154  <|@ instruction rax|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  156  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B15" "B40" 
    xhandlers
    flags 
    probability 4599792511097008364
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  160  <|@ instruction CMP rax|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/RandomAccessSubList;, resolved>;compressed} <|@ <|@
      nr  162  <|@ instruction BRANCH trueDestinationProbability: 0.5123719007222719 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B39" 
    xhandlers
    flags 
    probability 4595440365585637238
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  166  <|@ instruction r14|DWORD[.] = MOV [r13|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  168  <|@ st <@st|@reference-map: [r13:0, r14:0]
live-base-pointers: []
java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 0]
locals: r13|QWORD[.] 
>@ <|@ instruction r10|DWORD = MOV [r14|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr  170  <|@ instruction CMP (x: r10|DWORD, y: [r13|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr  172  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4595440365585637238
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  176  <|@ instruction CMP [r13|QWORD[.] + 20] y: 0 size: DWORD <|@ <|@
      nr  178  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B16 -> B17 falseDestination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4595440365585637238
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  188  <|@ instruction r11|DWORD = MOV [r13|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  190  <|@ instruction TEST (x: r11|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  192  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B18 -> B19 falseDestination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B38" 
    xhandlers
    flags 
    probability 4595440365585637238
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  202  <|@ instruction rsi|DWORD = MOV [r14|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr  204  <|@ instruction rax|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotMethod<AbstractList.listIterator(int)>} <|@ <|@
      nr  206  <|@ instruction CMP (x: rax|QWORD, y: [rsi|DWORD * 8 + 696]) size: QWORD <|@ <|@
      nr  208  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" "B25" 
    xhandlers
    flags 
    probability 4595440365585637238
    begin_IR
      LIR
      nr  210  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  212  <|@ instruction CMP rsi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed} <|@ <|@
      nr  214  <|@ instruction BRANCH trueDestinationProbability: 0.5455294668972093 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4591507919033229151
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  218  <|@ instruction rax|DWORD[.] = MOV [r14|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr  220  <|@ st <@st|@reference-map: [r13:0, r14:0]
live-base-pointers: []
java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 0]
locals: r13|QWORD[.] 
>@ <|@ instruction rax|DWORD = MOV [rax|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr  222  <|@ instruction CMP (x: r11|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  224  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B22 -> B23 falseDestination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B33" 
    xhandlers
    flags 
    probability 4591507919033229151
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  234  <|@ instruction stack:32|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  236  <|@ instruction JUMP ~[] destination: B24 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" "B24" "B27" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4595440365585637238
    begin_IR
      LIR
      nr  288  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  290  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  292  <|@ instruction rdx|QWORD = LEA [rsi|QWORD + 56] size: QWORD <|@ <|@
      nr  294  <|@ instruction CMP (x: rdx|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr  296  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B33 -> B34 falseDestination: B33 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" 
    xhandlers
    flags 
    probability 4595377642132686220
    begin_IR
      LIR
      nr  320  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  322  <|@ instruction MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  324  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 248] instr: 0 <|@ <|@
      nr  326  <|@ instruction rax|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  328  <|@ instruction JUMP ~[] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" "B34" 
    successors 
    xhandlers
    flags 
    probability 4595440365585637238
    begin_IR
      LIR
      nr  330  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  332  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[*] moveKind: QWORD <|@ <|@
      nr  334  <|@ instruction rdx|QWORD[*] = LEA [rax|QWORD[*] + 24] size: QWORD <|@ <|@
      nr  336  <|@ instruction rdx|QWORD[.] = MOVE rdx|QWORD[*] moveKind: QWORD <|@ <|@
      nr  338  <|@ instruction r8|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/SubList$1;, resolved>} <|@ <|@
      nr  340  <|@ instruction r8|QWORD = MOV [r8|QWORD + 168] size: QWORD <|@ <|@
      nr  342  <|@ instruction MOV (x: [rax|QWORD[*]], y: r8|QWORD) size: QWORD <|@ <|@
      nr  344  <|@ instruction MOV [rax|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/SubList$1;, resolved>;compressed} <|@ <|@
      nr  346  <|@ instruction MOV (x: [rax|QWORD[*] + 12], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr  348  <|@ instruction rdx|DWORD[.] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@67149636 encoding: base: 0 shift: 3 <|@ <|@
      nr  350  <|@ instruction MOV (x: [rax|QWORD[*] + 16], y: rdx|DWORD[.]) size: DWORD <|@ <|@
      nr  352  <|@ instruction r13|DWORD[.] = COMPRESSPOINTER (input: r13|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@67149636 encoding: base: 0 shift: 3 <|@ <|@
      nr  354  <|@ instruction MOV (x: [rax|QWORD[*] + 20], y: r13|DWORD[.]) size: DWORD <|@ <|@
      nr  356  <|@ instruction rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>} <|@ <|@
      nr  358  <|@ instruction rdx|QWORD = MOV [rdx|QWORD + 168] size: QWORD <|@ <|@
      nr  360  <|@ instruction MOV (x: [rax|QWORD[*] + 24], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  362  <|@ instruction MOV [rax|QWORD[*] + 32] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed} <|@ <|@
      nr  364  <|@ instruction MOV (x: [rax|QWORD[*] + 36], y: r11|DWORD) size: DWORD <|@ <|@
      nr  366  <|@ instruction MOV [rax|QWORD[*] + 40] y: -1 size: DWORD <|@ <|@
      nr  368  <|@ instruction MOV (x: [rax|QWORD[*] + 44], y: r10|DWORD) size: DWORD <|@ <|@
      nr  370  <|@ instruction MOV (x: [rax|QWORD[*] + 48], y: r14|DWORD[.]) size: DWORD <|@ <|@
      nr  372  <|@ instruction MOV (x: [rax|QWORD[*] + 52], y: r14|DWORD[.]) size: DWORD <|@ <|@
      nr  374  <|@ instruction rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  376  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B10" 
    xhandlers
    flags 
    probability 4598920666768289187
    begin_IR
      LIR
      nr   22  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   24  <|@ instruction rax|DWORD[.] = MOVE input: int[0|0x0] <|@ <|@
      nr   26  <|@ instruction r14|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   28  <|@ instruction JUMP ~[] destination: B2 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B41" "B50" 
    xhandlers
    flags 
    probability 4595137457353638498
    begin_IR
      LIR
      nr  396  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  398  <|@ instruction CMP rax|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList$SubList;, resolved>;compressed} <|@ <|@
      nr  400  <|@ instruction BRANCH trueDestinationProbability: 0.8100038774718884 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B42" "B48" 
    xhandlers
    flags 
    probability 4594003287457973316
    begin_IR
      LIR
      nr  402  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  404  <|@ instruction rax|DWORD[.] = MOV [r13|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  406  <|@ st <@st|@reference-map: [r13:0]
live-base-pointers: []
java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 0]
locals: r13|QWORD[.] 
>@ <|@ instruction r14|DWORD = MOV [rax|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr  408  <|@ instruction CMP (x: r14|DWORD, y: [r13|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr  410  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B41 -> B42 falseDestination: B41 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4594003287457973316
    begin_IR
      LIR
      nr  412  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  414  <|@ instruction CMP [r13|QWORD[.] + 24] y: 0 size: DWORD <|@ <|@
      nr  416  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B42 -> B43 falseDestination: B42 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4594003287457973316
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  426  <|@ instruction rax|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  428  <|@ instruction rsi|QWORD = LEA [rax|QWORD + 40] size: QWORD <|@ <|@
      nr  430  <|@ instruction CMP (x: rsi|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr  432  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B44 -> B45 falseDestination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4593954934786298937
    begin_IR
      LIR
      nr  448  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  450  <|@ instruction MOV (x: [r15|QWORD + 96], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  452  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 232] instr: 0 <|@ <|@
      nr  454  <|@ instruction rax|QWORD[*] = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr  456  <|@ instruction JUMP ~[] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" "B45" 
    successors 
    xhandlers
    flags 
    probability 4594003287457973316
    begin_IR
      LIR
      nr  458  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  460  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[*] moveKind: QWORD <|@ <|@
      nr  462  <|@ instruction rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/ArrayList$SubList$1;, resolved>} <|@ <|@
      nr  464  <|@ instruction rdx|QWORD = MOV [rdx|QWORD + 168] size: QWORD <|@ <|@
      nr  466  <|@ instruction MOV (x: [rax|QWORD[*]], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  468  <|@ instruction MOV [rax|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList$SubList$1;, resolved>;compressed} <|@ <|@
      nr  470  <|@ instruction rdx|QWORD = MOVE input: long[-4294967296|0xffffffff00000000] <|@ <|@
      nr  472  <|@ instruction MOV (x: [rax|QWORD[*] + 12], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  474  <|@ instruction MOV (x: [rax|QWORD[*] + 20], y: r14|DWORD) size: DWORD <|@ <|@
      nr  476  <|@ instruction MOV (x: [rax|QWORD[*] + 24], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr  478  <|@ instruction rdx|DWORD = MOV [r13|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  480  <|@ instruction MOV (x: [rax|QWORD[*] + 28], y: rdx|DWORD) size: DWORD <|@ <|@
      nr  482  <|@ instruction r13|DWORD[.] = COMPRESSPOINTER (input: r13|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@67149636 encoding: base: 0 shift: 3 <|@ <|@
      nr  484  <|@ instruction MOV (x: [rax|QWORD[*] + 32], y: r13|DWORD[.]) size: DWORD <|@ <|@
      nr  486  <|@ instruction rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  488  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4592032215960291828
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   52  <|@ instruction rsi|DWORD = DEC rsi|DWORD size: DWORD <|@ <|@
      nr   54  <|@ instruction CMP rsi|DWORD y: 1 size: DWORD <|@ <|@
      nr   56  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4592032215960291828
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   60  <|@ instruction rax|DWORD[.] = MOV [r13|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   62  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@67149636 encoding: base: 0 shift: 3 <|@ <|@
      nr   64  <|@ instruction r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   66  <|@ instruction JUMP ~[] destination: B7 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B26" "B29" 
    xhandlers
    flags 
    probability 4590365612883304333
    begin_IR
      LIR
      nr  238  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  240  <|@ instruction CMP rsi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Collections$EmptyList;, resolved>;compressed} <|@ <|@
      nr  242  <|@ instruction BRANCH trueDestinationProbability: 0.5021334091878823 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4585886339207662494
    begin_IR
      LIR
      nr  244  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  246  <|@ instruction CMP r11|DWORD y: 1 size: DWORD <|@ <|@
      nr  248  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B26 -> B27 falseDestination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B33" 
    xhandlers
    flags 
    probability 4585886339207662494
    begin_IR
      LIR
      nr  250  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  252  <|@ instruction stack:32|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  254  <|@ instruction JUMP ~[] destination: B27 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B30" "B37" 
    xhandlers
    flags 
    probability 4585837687304205180
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  264  <|@ instruction CMP rsi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeInputList;, resolved>;compressed} <|@ <|@
      nr  266  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4585837687304205180
    begin_IR
      LIR
      nr  268  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  270  <|@ instruction rax|DWORD = MOV [r14|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr  272  <|@ instruction CMP (x: r11|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  274  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B30 -> B31 falseDestination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" 
    xhandlers
    flags 
    probability 4585837687304205180
    begin_IR
      LIR
      nr  282  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  284  <|@ instruction stack:32|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  286  <|@ instruction JUMP ~[] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors 
    xhandlers
    flags 
    probability 4584697500618455161
    begin_IR
      LIR
      nr  504  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  506  <|@ instruction rsi|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  508  <|@ instruction rdx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  510  <|@ st <@st|@reference-map: []
live-base-pointers: []
java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
locals: - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractList.listIterator(int)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:2] <|@ <|@
      nr  512  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4574261866845125856
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  100  <|@ instruction stack:28|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  102  <|@ instruction stack:32|DWORD[.] = MOVE rax|DWORD[.] moveKind: DWORD <|@ <|@
      nr  104  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  106  <|@ instruction rdx|DWORD = MOVE input: int[4|0x4] <|@ <|@
      nr  108  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  110  <|@ st <@st|@reference-map: [r13:0, r14:0, stack:16]
live-base-pointers: []
java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 38]
stack: vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=stack:28|DWORD,lastReturned=Object[null],next=Object[null],this$0=r13|QWORD[.]} r14|QWORD[.] 
locals: vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=stack:28|DWORD,lastReturned=Object[null],next=Object[null],this$0=r13|QWORD[.]} - int[0|0x0] 
java.util.LinkedList.listIterator(LinkedList.java:868) [bci: 11]
stack: vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=stack:28|DWORD,lastReturned=Object[null],next=Object[null],this$0=r13|QWORD[.]} 
locals: - - 
java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
locals: - 
vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=stack:28|DWORD,lastReturned=Object[null],next=Object[null],this$0=r13|QWORD[.]} Ljava/util/LinkedList$ListItr; int[0|0x0] stack:28|DWORD Object[null] Object[null] r13|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:38, 11, 2] <|@ <|@
      nr  112  <|@ instruction rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  114  <|@ instruction r10|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  116  <|@ instruction rax|DWORD[.] = MOVE stack:32|DWORD[.] moveKind: DWORD <|@ <|@
      nr  118  <|@ instruction JUMP ~[] destination: B11 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" 
    xhandlers
    flags 
    probability 4565671424876672281
    begin_IR
      LIR
      nr  298  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  300  <|@ instruction stack:28|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  302  <|@ instruction stack:36|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  304  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  306  <|@ instruction rdx|DWORD = MOVE input: int[10|0xa] <|@ <|@
      nr  308  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  310  <|@ st <@st|@reference-map: [r13:0, r14:0]
live-base-pointers: []
java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 9]
stack: stack:28|DWORD stack:32|DWORD 
locals: r14|DWORD[.] stack:28|DWORD 
java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
locals: r14|DWORD[.] stack:28|DWORD 
java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
stack: vobject:SubList$1:0{val$index=int[0|0x0],i=Object[null],this$0=r13|QWORD[.]} 
locals: - - - 
java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
stack: vobject:SubList$1:0{val$index=int[0|0x0],i=Object[null],this$0=r13|QWORD[.]} 
locals: - - 
java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
locals: - 
vobject:SubList$1:0{val$index=int[0|0x0],i=Object[null],this$0=r13|QWORD[.]} Ljava/util/SubList$1; int[0|0x0] Object[null] r13|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:9, 2, 34, 15, 2] <|@ <|@
      nr  312  <|@ instruction rax|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  314  <|@ instruction r11|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  316  <|@ instruction r10|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  318  <|@ instruction JUMP ~[] destination: B34 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4563831964873262459
    begin_IR
      LIR
      nr  434  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  436  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  438  <|@ instruction rdx|DWORD = MOVE input: int[6|0x6] <|@ <|@
      nr  440  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  442  <|@ st <@st|@reference-map: [r13:0]
live-base-pointers: []
java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 0]
locals: r13|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr  444  <|@ instruction rax|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  446  <|@ instruction JUMP ~[] destination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B49" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  256  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  258  <|@ instruction r10|DWORD = MOVE input: int[-100115|0xfffffffffffe78ed] <|@ <|@
      nr  260  <|@ instruction JUMP ~[] destination: B28 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B4" "B17" "B43" "B39" "B19" "B8" "B48" "B38" "B23" "B31" "B28" "B37" 
    successors 
    xhandlers
    flags 
    probability 2371145203810566144
    begin_IR
      LIR
      nr  496  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  498  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  500  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  502  <|@ st <@st|@reference-map: [r13:0]
live-base-pointers: []
java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 0]
locals: r13|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B49" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  378  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  380  <|@ instruction r10|DWORD = MOVE input: int[-100403|0xfffffffffffe77cd] <|@ <|@
      nr  382  <|@ instruction JUMP ~[] destination: B37 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B49" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  418  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  420  <|@ instruction r10|DWORD = MOVE input: int[-104979|0xfffffffffffe65ed] <|@ <|@
      nr  422  <|@ instruction JUMP ~[] destination: B43 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B49" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  490  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  492  <|@ instruction r10|DWORD = MOVE input: int[-104211|0xfffffffffffe68ed] <|@ <|@
      nr  494  <|@ instruction JUMP ~[] destination: B48 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B49" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  276  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  278  <|@ instruction r10|DWORD = MOVE input: int[-101139|0xfffffffffffe74ed] <|@ <|@
      nr  280  <|@ instruction JUMP ~[] destination: B31 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B49" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  226  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  228  <|@ instruction r10|DWORD = MOVE input: int[-99859|0xfffffffffffe79ed] <|@ <|@
      nr  230  <|@ instruction JUMP ~[] destination: B23 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B49" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   70  <|@ instruction r10|DWORD = MOVE input: int[-90899|0xfffffffffffe9ced] <|@ <|@
      nr   72  <|@ instruction JUMP ~[] destination: B8 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B49" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   38  <|@ instruction r10|DWORD = MOVE input: int[-88851|0xfffffffffffea4ed] <|@ <|@
      nr   40  <|@ instruction JUMP ~[] destination: B4 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B49" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  196  <|@ instruction r10|DWORD = MOVE input: int[-97555|0xfffffffffffe82ed] <|@ <|@
      nr  198  <|@ instruction JUMP ~[] destination: B19 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B49" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  180  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  182  <|@ instruction r10|DWORD = MOVE input: int[-95507|0xfffffffffffe8aed] <|@ <|@
      nr  184  <|@ instruction JUMP ~[] destination: B17 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B49" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  390  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  392  <|@ instruction r10|DWORD = MOVE input: int[-94739|0xfffffffffffe8ded] <|@ <|@
      nr  394  <|@ instruction JUMP ~[] destination: B39 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B49" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  384  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  386  <|@ instruction r10|DWORD = MOVE input: int[-97331|0xfffffffffffe83cd] <|@ <|@
      nr  388  <|@ instruction JUMP ~[] destination: B38 -> B49 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iconst_0      
     2: invokevirtual #10         // listIterator:(int)java.util.ListIterator
     5: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B14" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@55b7b248 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction rax|DWORD = MOV [r13|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   10  <|@ instruction CMP rax|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/LinkedList;, resolved>;compressed} <|@ <|@
      nr   12  <|@ instruction BRANCH trueDestinationProbability: 0.6602222840867722 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4604121973210466186
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   16  <|@ instruction rsi|DWORD = MOV [r13|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   18  <|@ instruction TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr   20  <|@ instruction BRANCH trueDestinationProbability: 0.44133716863953554 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4600316080397902193
    begin_IR
      LIR
      nr   30  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   32  <|@ instruction TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr   34  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B9" 
    xhandlers
    flags 
    probability 4600316080397902193
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   44  <|@ instruction rax|DWORD = SAR rsi|DWORD size: DWORD <|@ <|@
      nr   46  <|@ instruction CMP rax|DWORD y: 1 size: DWORD <|@ <|@
      nr   48  <|@ instruction BRANCH trueDestinationProbability: 0.27721570921026206 condition: < trueDestination: B5 -> B6 falseDestination: B5 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B10" 
    xhandlers
    flags 
    probability 4598474131573620468
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   76  <|@ instruction rax|DWORD[.] = MOV [r13|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   78  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@67149636 encoding: base: 0 shift: 3 <|@ <|@
      nr   80  <|@ instruction r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   82  <|@ instruction JUMP ~[] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B2" "B9" "B7" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4604121973210466186
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   86  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   88  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   90  <|@ instruction r10|DWORD = MOV [r13|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   92  <|@ instruction r11|QWORD = LEA [rsi|QWORD + 32] size: QWORD <|@ <|@
      nr   94  <|@ instruction CMP (x: r11|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr   96  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B10 -> B11 falseDestination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4604062505673814288
    begin_IR
      LIR
      nr  120  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  122  <|@ instruction MOV (x: [r15|QWORD + 96], y: r11|QWORD) size: QWORD <|@ <|@
      nr  124  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 224] instr: 0 <|@ <|@
      nr  126  <|@ instruction rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  128  <|@ instruction JUMP ~[] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B11" 
    successors 
    xhandlers
    flags 
    probability 4604121973210466186
    begin_IR
      LIR
      nr  130  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  132  <|@ instruction rdx|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  134  <|@ instruction r11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/LinkedList$ListItr;, resolved>} <|@ <|@
      nr  136  <|@ instruction r11|QWORD = MOV [r11|QWORD + 168] size: QWORD <|@ <|@
      nr  138  <|@ instruction MOV (x: [rsi|QWORD[*]], y: r11|QWORD) size: QWORD <|@ <|@
      nr  140  <|@ instruction MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/LinkedList$ListItr;, resolved>;compressed} <|@ <|@
      nr  142  <|@ instruction MOV (x: [rsi|QWORD[*] + 12], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr  144  <|@ instruction MOV (x: [rsi|QWORD[*] + 16], y: r10|DWORD) size: DWORD <|@ <|@
      nr  146  <|@ instruction MOV (x: [rsi|QWORD[*] + 20], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr  148  <|@ instruction MOV (x: [rsi|QWORD[*] + 24], y: rax|DWORD[.]) size: DWORD <|@ <|@
      nr  150  <|@ instruction r13|DWORD[.] = COMPRESSPOINTER (input: r13|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@67149636 encoding: base: 0 shift: 3 <|@ <|@
      nr  152  <|@ instruction MOV (x: [rsi|QWORD[*] + 28], y: r13|DWORD[.]) size: DWORD <|@ <|@
      nr  154  <|@ instruction rax|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  156  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B15" "B40" 
    xhandlers
    flags 
    probability 4599792511097008364
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  160  <|@ instruction CMP rax|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/RandomAccessSubList;, resolved>;compressed} <|@ <|@
      nr  162  <|@ instruction BRANCH trueDestinationProbability: 0.5123719007222719 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B39" 
    xhandlers
    flags 
    probability 4595440365585637238
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  166  <|@ instruction r14|DWORD[.] = MOV [r13|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  168  <|@ st <@st|@reference-map: [r13:0, r14:0]
live-base-pointers: []
java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 0]
locals: r13|QWORD[.] 
>@ <|@ instruction r10|DWORD = MOV [r14|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr  170  <|@ instruction CMP (x: r10|DWORD, y: [r13|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr  172  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4595440365585637238
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  176  <|@ instruction CMP [r13|QWORD[.] + 20] y: 0 size: DWORD <|@ <|@
      nr  178  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B16 -> B17 falseDestination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4595440365585637238
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  188  <|@ instruction r11|DWORD = MOV [r13|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  190  <|@ instruction TEST (x: r11|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  192  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B18 -> B19 falseDestination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B38" 
    xhandlers
    flags 
    probability 4595440365585637238
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  202  <|@ instruction rsi|DWORD = MOV [r14|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr  204  <|@ instruction rax|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotMethod<AbstractList.listIterator(int)>} <|@ <|@
      nr  206  <|@ instruction CMP (x: rax|QWORD, y: [rsi|DWORD * 8 + 696]) size: QWORD <|@ <|@
      nr  208  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" "B25" 
    xhandlers
    flags 
    probability 4595440365585637238
    begin_IR
      LIR
      nr  210  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  212  <|@ instruction CMP rsi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed} <|@ <|@
      nr  214  <|@ instruction BRANCH trueDestinationProbability: 0.5455294668972093 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4591507919033229151
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  218  <|@ instruction rax|DWORD[.] = MOV [r14|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr  220  <|@ st <@st|@reference-map: [r13:0, r14:0]
live-base-pointers: []
java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 0]
locals: r13|QWORD[.] 
>@ <|@ instruction rax|DWORD = MOV [rax|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr  222  <|@ instruction CMP (x: r11|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  224  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B22 -> B23 falseDestination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B33" 
    xhandlers
    flags 
    probability 4591507919033229151
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  234  <|@ instruction stack:32|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  236  <|@ instruction JUMP ~[] destination: B24 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" "B24" "B27" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4595440365585637238
    begin_IR
      LIR
      nr  288  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  290  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  292  <|@ instruction rdx|QWORD = LEA [rsi|QWORD + 56] size: QWORD <|@ <|@
      nr  294  <|@ instruction CMP (x: rdx|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr  296  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B33 -> B34 falseDestination: B33 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" 
    xhandlers
    flags 
    probability 4595377642132686220
    begin_IR
      LIR
      nr  320  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  322  <|@ instruction MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  324  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 248] instr: 0 <|@ <|@
      nr  326  <|@ instruction rax|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  328  <|@ instruction JUMP ~[] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" "B34" 
    successors 
    xhandlers
    flags 
    probability 4595440365585637238
    begin_IR
      LIR
      nr  330  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  332  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[*] moveKind: QWORD <|@ <|@
      nr  334  <|@ instruction rdx|QWORD[*] = LEA [rax|QWORD[*] + 24] size: QWORD <|@ <|@
      nr  336  <|@ instruction rdx|QWORD[.] = MOVE rdx|QWORD[*] moveKind: QWORD <|@ <|@
      nr  338  <|@ instruction r8|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/SubList$1;, resolved>} <|@ <|@
      nr  340  <|@ instruction r8|QWORD = MOV [r8|QWORD + 168] size: QWORD <|@ <|@
      nr  342  <|@ instruction MOV (x: [rax|QWORD[*]], y: r8|QWORD) size: QWORD <|@ <|@
      nr  344  <|@ instruction MOV [rax|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/SubList$1;, resolved>;compressed} <|@ <|@
      nr  346  <|@ instruction MOV (x: [rax|QWORD[*] + 12], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr  348  <|@ instruction rdx|DWORD[.] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@67149636 encoding: base: 0 shift: 3 <|@ <|@
      nr  350  <|@ instruction MOV (x: [rax|QWORD[*] + 16], y: rdx|DWORD[.]) size: DWORD <|@ <|@
      nr  352  <|@ instruction r13|DWORD[.] = COMPRESSPOINTER (input: r13|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@67149636 encoding: base: 0 shift: 3 <|@ <|@
      nr  354  <|@ instruction MOV (x: [rax|QWORD[*] + 20], y: r13|DWORD[.]) size: DWORD <|@ <|@
      nr  356  <|@ instruction rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>} <|@ <|@
      nr  358  <|@ instruction rdx|QWORD = MOV [rdx|QWORD + 168] size: QWORD <|@ <|@
      nr  360  <|@ instruction MOV (x: [rax|QWORD[*] + 24], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  362  <|@ instruction MOV [rax|QWORD[*] + 32] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed} <|@ <|@
      nr  364  <|@ instruction MOV (x: [rax|QWORD[*] + 36], y: r11|DWORD) size: DWORD <|@ <|@
      nr  366  <|@ instruction MOV [rax|QWORD[*] + 40] y: -1 size: DWORD <|@ <|@
      nr  368  <|@ instruction MOV (x: [rax|QWORD[*] + 44], y: r10|DWORD) size: DWORD <|@ <|@
      nr  370  <|@ instruction MOV (x: [rax|QWORD[*] + 48], y: r14|DWORD[.]) size: DWORD <|@ <|@
      nr  372  <|@ instruction MOV (x: [rax|QWORD[*] + 52], y: r14|DWORD[.]) size: DWORD <|@ <|@
      nr  374  <|@ instruction rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  376  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B10" 
    xhandlers
    flags 
    probability 4598920666768289187
    begin_IR
      LIR
      nr   22  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   24  <|@ instruction rax|DWORD[.] = MOVE input: int[0|0x0] <|@ <|@
      nr   26  <|@ instruction r14|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   28  <|@ instruction JUMP ~[] destination: B2 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B41" "B50" 
    xhandlers
    flags 
    probability 4595137457353638498
    begin_IR
      LIR
      nr  396  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  398  <|@ instruction CMP rax|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList$SubList;, resolved>;compressed} <|@ <|@
      nr  400  <|@ instruction BRANCH trueDestinationProbability: 0.8100038774718884 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B42" "B48" 
    xhandlers
    flags 
    probability 4594003287457973316
    begin_IR
      LIR
      nr  402  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  404  <|@ instruction rax|DWORD[.] = MOV [r13|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  406  <|@ st <@st|@reference-map: [r13:0]
live-base-pointers: []
java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 0]
locals: r13|QWORD[.] 
>@ <|@ instruction r14|DWORD = MOV [rax|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr  408  <|@ instruction CMP (x: r14|DWORD, y: [r13|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr  410  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B41 -> B42 falseDestination: B41 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4594003287457973316
    begin_IR
      LIR
      nr  412  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  414  <|@ instruction CMP [r13|QWORD[.] + 24] y: 0 size: DWORD <|@ <|@
      nr  416  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B42 -> B43 falseDestination: B42 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4594003287457973316
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  426  <|@ instruction rax|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  428  <|@ instruction rsi|QWORD = LEA [rax|QWORD + 40] size: QWORD <|@ <|@
      nr  430  <|@ instruction CMP (x: rsi|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr  432  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B44 -> B45 falseDestination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4593954934786298937
    begin_IR
      LIR
      nr  448  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  450  <|@ instruction MOV (x: [r15|QWORD + 96], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  452  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 232] instr: 0 <|@ <|@
      nr  454  <|@ instruction rax|QWORD[*] = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr  456  <|@ instruction JUMP ~[] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" "B45" 
    successors 
    xhandlers
    flags 
    probability 4594003287457973316
    begin_IR
      LIR
      nr  458  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  460  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[*] moveKind: QWORD <|@ <|@
      nr  462  <|@ instruction rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/ArrayList$SubList$1;, resolved>} <|@ <|@
      nr  464  <|@ instruction rdx|QWORD = MOV [rdx|QWORD + 168] size: QWORD <|@ <|@
      nr  466  <|@ instruction MOV (x: [rax|QWORD[*]], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  468  <|@ instruction MOV [rax|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList$SubList$1;, resolved>;compressed} <|@ <|@
      nr  470  <|@ instruction rdx|QWORD = MOVE input: long[-4294967296|0xffffffff00000000] <|@ <|@
      nr  472  <|@ instruction MOV (x: [rax|QWORD[*] + 12], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  474  <|@ instruction MOV (x: [rax|QWORD[*] + 20], y: r14|DWORD) size: DWORD <|@ <|@
      nr  476  <|@ instruction MOV (x: [rax|QWORD[*] + 24], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr  478  <|@ instruction rdx|DWORD = MOV [r13|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  480  <|@ instruction MOV (x: [rax|QWORD[*] + 28], y: rdx|DWORD) size: DWORD <|@ <|@
      nr  482  <|@ instruction r13|DWORD[.] = COMPRESSPOINTER (input: r13|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@67149636 encoding: base: 0 shift: 3 <|@ <|@
      nr  484  <|@ instruction MOV (x: [rax|QWORD[*] + 32], y: r13|DWORD[.]) size: DWORD <|@ <|@
      nr  486  <|@ instruction rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  488  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4592032215960291828
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   52  <|@ instruction rsi|DWORD = DEC rsi|DWORD size: DWORD <|@ <|@
      nr   54  <|@ instruction CMP rsi|DWORD y: 1 size: DWORD <|@ <|@
      nr   56  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4592032215960291828
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   60  <|@ instruction rax|DWORD[.] = MOV [r13|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   62  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@67149636 encoding: base: 0 shift: 3 <|@ <|@
      nr   64  <|@ instruction r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   66  <|@ instruction JUMP ~[] destination: B7 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B26" "B29" 
    xhandlers
    flags 
    probability 4590365612883304333
    begin_IR
      LIR
      nr  238  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  240  <|@ instruction CMP rsi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Collections$EmptyList;, resolved>;compressed} <|@ <|@
      nr  242  <|@ instruction BRANCH trueDestinationProbability: 0.5021334091878823 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4585886339207662494
    begin_IR
      LIR
      nr  244  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  246  <|@ instruction CMP r11|DWORD y: 1 size: DWORD <|@ <|@
      nr  248  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B26 -> B27 falseDestination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B33" 
    xhandlers
    flags 
    probability 4585886339207662494
    begin_IR
      LIR
      nr  250  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  252  <|@ instruction stack:32|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  254  <|@ instruction JUMP ~[] destination: B27 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B30" "B37" 
    xhandlers
    flags 
    probability 4585837687304205180
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  264  <|@ instruction CMP rsi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeInputList;, resolved>;compressed} <|@ <|@
      nr  266  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4585837687304205180
    begin_IR
      LIR
      nr  268  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  270  <|@ instruction rax|DWORD = MOV [r14|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr  272  <|@ instruction CMP (x: r11|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  274  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B30 -> B31 falseDestination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" 
    xhandlers
    flags 
    probability 4585837687304205180
    begin_IR
      LIR
      nr  282  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  284  <|@ instruction stack:32|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  286  <|@ instruction JUMP ~[] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors 
    xhandlers
    flags 
    probability 4584697500618455161
    begin_IR
      LIR
      nr  504  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  508  <|@ instruction rdx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  510  <|@ st <@st|@reference-map: []
live-base-pointers: []
java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
locals: - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractList.listIterator(int)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:2] <|@ <|@
      nr  512  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4574261866845125856
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  100  <|@ instruction stack:28|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  102  <|@ instruction stack:32|DWORD[.] = MOVE rax|DWORD[.] moveKind: DWORD <|@ <|@
      nr  104  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  106  <|@ instruction rdx|DWORD = MOVE input: int[4|0x4] <|@ <|@
      nr  108  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  110  <|@ st <@st|@reference-map: [r13:0, r14:0, stack:16]
live-base-pointers: []
java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 38]
stack: vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=stack:28|DWORD,lastReturned=Object[null],next=Object[null],this$0=r13|QWORD[.]} r14|QWORD[.] 
locals: vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=stack:28|DWORD,lastReturned=Object[null],next=Object[null],this$0=r13|QWORD[.]} - int[0|0x0] 
java.util.LinkedList.listIterator(LinkedList.java:868) [bci: 11]
stack: vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=stack:28|DWORD,lastReturned=Object[null],next=Object[null],this$0=r13|QWORD[.]} 
locals: - - 
java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
locals: - 
vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=stack:28|DWORD,lastReturned=Object[null],next=Object[null],this$0=r13|QWORD[.]} Ljava/util/LinkedList$ListItr; int[0|0x0] stack:28|DWORD Object[null] Object[null] r13|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:38, 11, 2] <|@ <|@
      nr  112  <|@ instruction rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  114  <|@ instruction r10|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  116  <|@ instruction rax|DWORD[.] = MOVE stack:32|DWORD[.] moveKind: DWORD <|@ <|@
      nr  118  <|@ instruction JUMP ~[] destination: B11 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" 
    xhandlers
    flags 
    probability 4565671424876672281
    begin_IR
      LIR
      nr  298  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  300  <|@ instruction stack:28|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  302  <|@ instruction stack:36|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  304  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  306  <|@ instruction rdx|DWORD = MOVE input: int[10|0xa] <|@ <|@
      nr  308  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  310  <|@ st <@st|@reference-map: [r13:0, r14:0]
live-base-pointers: []
java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 9]
stack: stack:28|DWORD stack:32|DWORD 
locals: r14|DWORD[.] stack:28|DWORD 
java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2]
locals: r14|DWORD[.] stack:28|DWORD 
java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34]
stack: vobject:SubList$1:0{val$index=int[0|0x0],i=Object[null],this$0=r13|QWORD[.]} 
locals: - - - 
java.util.SubList.listIterator(AbstractList.java:698) [bci: 15]
stack: vobject:SubList$1:0{val$index=int[0|0x0],i=Object[null],this$0=r13|QWORD[.]} 
locals: - - 
java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
locals: - 
vobject:SubList$1:0{val$index=int[0|0x0],i=Object[null],this$0=r13|QWORD[.]} Ljava/util/SubList$1; int[0|0x0] Object[null] r13|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:9, 2, 34, 15, 2] <|@ <|@
      nr  312  <|@ instruction rax|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  314  <|@ instruction r11|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  316  <|@ instruction r10|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  318  <|@ instruction JUMP ~[] destination: B34 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4563831964873262459
    begin_IR
      LIR
      nr  434  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  436  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  438  <|@ instruction rdx|DWORD = MOVE input: int[6|0x6] <|@ <|@
      nr  440  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  442  <|@ st <@st|@reference-map: [r13:0]
live-base-pointers: []
java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 0]
locals: r13|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr  444  <|@ instruction rax|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  446  <|@ instruction JUMP ~[] destination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B49" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  256  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  258  <|@ instruction r10|DWORD = MOVE input: int[-100115|0xfffffffffffe78ed] <|@ <|@
      nr  260  <|@ instruction JUMP ~[] destination: B28 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B4" "B17" "B43" "B39" "B19" "B8" "B48" "B38" "B23" "B31" "B28" "B37" 
    successors 
    xhandlers
    flags 
    probability 2371145203810566144
    begin_IR
      LIR
      nr  496  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  498  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  500  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  502  <|@ st <@st|@reference-map: [r13:0]
live-base-pointers: []
java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 0]
locals: r13|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B49" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  378  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  380  <|@ instruction r10|DWORD = MOVE input: int[-100403|0xfffffffffffe77cd] <|@ <|@
      nr  382  <|@ instruction JUMP ~[] destination: B37 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B49" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  418  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  420  <|@ instruction r10|DWORD = MOVE input: int[-104979|0xfffffffffffe65ed] <|@ <|@
      nr  422  <|@ instruction JUMP ~[] destination: B43 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B49" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  490  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  492  <|@ instruction r10|DWORD = MOVE input: int[-104211|0xfffffffffffe68ed] <|@ <|@
      nr  494  <|@ instruction JUMP ~[] destination: B48 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B49" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  276  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  278  <|@ instruction r10|DWORD = MOVE input: int[-101139|0xfffffffffffe74ed] <|@ <|@
      nr  280  <|@ instruction JUMP ~[] destination: B31 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B49" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  226  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  228  <|@ instruction r10|DWORD = MOVE input: int[-99859|0xfffffffffffe79ed] <|@ <|@
      nr  230  <|@ instruction JUMP ~[] destination: B23 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B49" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   70  <|@ instruction r10|DWORD = MOVE input: int[-90899|0xfffffffffffe9ced] <|@ <|@
      nr   72  <|@ instruction JUMP ~[] destination: B8 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B49" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   38  <|@ instruction r10|DWORD = MOVE input: int[-88851|0xfffffffffffea4ed] <|@ <|@
      nr   40  <|@ instruction JUMP ~[] destination: B4 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B49" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  196  <|@ instruction r10|DWORD = MOVE input: int[-97555|0xfffffffffffe82ed] <|@ <|@
      nr  198  <|@ instruction JUMP ~[] destination: B19 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B49" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  180  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  182  <|@ instruction r10|DWORD = MOVE input: int[-95507|0xfffffffffffe8aed] <|@ <|@
      nr  184  <|@ instruction JUMP ~[] destination: B17 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B49" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  390  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  392  <|@ instruction r10|DWORD = MOVE input: int[-94739|0xfffffffffffe8ded] <|@ <|@
      nr  394  <|@ instruction JUMP ~[] destination: B39 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B49" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  384  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  386  <|@ instruction r10|DWORD = MOVE input: int[-97331|0xfffffffffffe83cd] <|@ <|@
      nr  388  <|@ instruction JUMP ~[] destination: B38 -> B49 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iconst_0      
     2: invokevirtual #10         // listIterator:(int)java.util.ListIterator
     5: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849c1e203493bc20f85efffffff900f1f80000000000f1f800000000089842400c0feff4883ec2848896c24204c8bee418b450881f8addeadde0f859d000000418b751085f60f84b101000085f60f8cc10300008bc6d1f883f8010f8c53020000418b45148bf048c1e6034c8bf6498b7760498b5770458b550c4c8d5e204c3bda0f87be0200004d895f600f1886e0000000488bd649bbaddeaddeaddeadde4d8b9ba80000004c891ec74608addeadde4489660c448956104489661489461849c1ed0344896e1c488bc2488b6c24204883c428850500000000c5f877c381f8addeadde0f8528010000458b7518468b14f50c000000453b550c0f852e03000041837d14000f8c1b030000458b5d104585db0f8c06030000428b34f50800000048b8addeaddeaddeadde483b04f5b80200000f85fe02000081feaddeadde0f858e010000428b04f5100000008b04c50c000000443bd80f8faa02000089442410498b7760488d5638493b57700f8708020000498957600f1886f8000000488bc6488bf0488d501849b8addeaddeaddeadde4d8b80a80000004c8900c74008addeadde4489600c48c1ea0389501049c1ed034489681448baaddeaddeaddeadde488b92a800000048895018c74020addeadde44895824c74028ffffffff4489502c4489703044897034488bc6488b6c24204883c428850500000000c5f877c3b80000000049be0000000000000000e95dfeffff81f8addeadde0f85fd000000418b4520448b34c50c000000453b750c0f85c201000041837d18000f8caf010000498b4760488d7028493b77700f875c010000498977600f1880e8000000488bf048baaddeaddeaddeadde488b92a8000000488910c74008addeadde48ba00000000ffffffff4889500c4489701444896018418b551489501c49c1ed0344896820488bc6488b6c24204883c428850500000000c5f877c3ffce83fe010f8d4e010000418b45188bf048c1e6034c8bf6e99dfdffff81feaddeadde0f85170000004183fb010f8de4000000c744241000000000e96bfeffff81feaddeadde0f85e5000000428b04f510000000443bd80f8fec00000089442410e945feffffba0000000048b8ffffffffffffffff666690e80000000090488b6c24204883c428850500000000c5f877c344895424148944241048beaddeaddeaddeaddeba04000000b901000000e80000000090488bf0448b5424148b442410e919fdffff44895c2414448954240c48beaddeaddeaddeaddeba0a000000b901000000e80000000090448b5c2414448b54240ce9d3fdffff48beaddeaddeaddeaddeba06000000b901000000e80000000090e990feffff41baed78feff4589979c0200004d89a7a8020000e8000000009041bacd77feffebe441baed65feffebdc41baed68feffebd441baed74feffebcc41baed79feffebc441baed9cfeffebbc41baeda4feffebb441baed82feffebac41baed8afeffeba441baed8dfeffeb9c41bacd83feffeb94e80000000090e80000000090  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@55b7b248 slotKind: QWORD  <||@
  Comment 48 6 r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 51 8 rax|DWORD = MOV [r13|QWORD[.] + 8] size: DWORD  <||@
  Comment 55 10 CMP rax|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/LinkedList;, resolved>;compressed}  <||@
  Comment 55 {meta{HotSpotType<Ljava/util/LinkedList;, resolved>;compressed}}  <||@
  Comment 61 12 BRANCH trueDestinationProbability: 0.6602222840867722 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B14  <||@
  Comment 67 block B1 null  <||@
  Comment 67 14 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 67 16 rsi|DWORD = MOV [r13|QWORD[.] + 16] size: DWORD  <||@
  Comment 71 18 TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 73 20 BRANCH trueDestinationProbability: 0.44133716863953554 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3  <||@
  Comment 79 block B3 null  <||@
  Comment 79 30 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 79 32 TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 81 34 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B5  <||@
  Comment 87 block B5 null  <||@
  Comment 87 42 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 87 44 rax|DWORD = SAR rsi|DWORD size: DWORD  <||@
  Comment 91 46 CMP rax|DWORD y: 1 size: DWORD  <||@
  Comment 94 48 BRANCH trueDestinationProbability: 0.27721570921026206 condition: < trueDestination: B5 -> B6 falseDestination: B5 -> B9  <||@
  Comment 100 block B9 null  <||@
  Comment 100 74 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 100 76 rax|DWORD[.] = MOV [r13|QWORD[.] + 20] size: DWORD  <||@
  Comment 104 78 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@67149636 encoding: base: 0 shift: 3  <||@
  Comment 110 80 r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 113 82 JUMP ~[] destination: B9 -> B10  <||@
  Comment 113 block B10 null  <||@
  Comment 113 84 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 113 86 rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 117 88 rdx|QWORD = MOV [r15|QWORD + 112] size: QWORD  <||@
  Comment 121 90 r10|DWORD = MOV [r13|QWORD[.] + 12] size: DWORD  <||@
  Comment 125 92 r11|QWORD = LEA [rsi|QWORD + 32] size: QWORD  <||@
  Comment 129 94 CMP (x: r11|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 132 96 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B10 -> B11 falseDestination: B10 -> B12  <||@
  Comment 138 block B12 null  <||@
  Comment 138 120 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 138 122 MOV (x: [r15|QWORD + 96], y: r11|QWORD) size: QWORD  <||@
  Comment 142 124 AMD64PREFETCH ~[rsi|QWORD + 224] instr: 0  <||@
  Comment 149 126 rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 149 128 JUMP ~[] destination: B12 -> B13  <||@
  Comment 149 block B13 null  <||@
  Comment 149 130 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 149 132 rdx|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD  <||@
  Comment 152 134 r11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/LinkedList$ListItr;, resolved>}  <||@
  Comment 152 {meta{HotSpotType<Ljava/util/LinkedList$ListItr;, resolved>}}  <||@
  Comment 162 136 r11|QWORD = MOV [r11|QWORD + 168] size: QWORD  <||@
  Comment 169 138 MOV (x: [rsi|QWORD[*]], y: r11|QWORD) size: QWORD  <||@
  Comment 172 140 MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/LinkedList$ListItr;, resolved>;compressed}  <||@
  Comment 172 {meta{HotSpotType<Ljava/util/LinkedList$ListItr;, resolved>;compressed}}  <||@
  Comment 179 142 MOV (x: [rsi|QWORD[*] + 12], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 183 144 MOV (x: [rsi|QWORD[*] + 16], y: r10|DWORD) size: DWORD  <||@
  Comment 187 146 MOV (x: [rsi|QWORD[*] + 20], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 191 148 MOV (x: [rsi|QWORD[*] + 24], y: rax|DWORD[.]) size: DWORD  <||@
  Comment 194 150 r13|DWORD[.] = COMPRESSPOINTER (input: r13|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@67149636 encoding: base: 0 shift: 3  <||@
  Comment 198 152 MOV (x: [rsi|QWORD[*] + 28], y: r13|DWORD[.]) size: DWORD  <||@
  Comment 202 154 rax|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 205 156 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 214 12  <||@
  Comment 224 block B14 null  <||@
  Comment 224 158 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 224 160 CMP rax|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/RandomAccessSubList;, resolved>;compressed}  <||@
  Comment 224 {meta{HotSpotType<Ljava/util/RandomAccessSubList;, resolved>;compressed}}  <||@
  Comment 230 162 BRANCH trueDestinationProbability: 0.5123719007222719 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B40  <||@
  Comment 236 block B15 null  <||@
  Comment 236 164 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 236 166 r14|DWORD[.] = MOV [r13|QWORD[.] + 24] size: DWORD  <||@
  Comment 240 168 r10|DWORD = MOV [r14|DWORD[.] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 240 [r13:0, r14:0]at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 0, duringCall: false, rethrow: false]
              |0            
     locals:  |r13|QWORD[.]   <||@
  Comment 240 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 248 170 CMP (x: r10|DWORD, y: [r13|QWORD[.] + 12]) size: DWORD  <||@
  Comment 252 172 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B39  <||@
  Comment 258 block B16 null  <||@
  Comment 258 174 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 258 176 CMP [r13|QWORD[.] + 20] y: 0 size: DWORD  <||@
  Comment 263 178 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B16 -> B17 falseDestination: B16 -> B18  <||@
  Comment 269 block B18 null  <||@
  Comment 269 186 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 269 188 r11|DWORD = MOV [r13|QWORD[.] + 16] size: DWORD  <||@
  Comment 273 190 TEST (x: r11|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 276 192 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B18 -> B19 falseDestination: B18 -> B20  <||@
  Comment 282 block B20 null  <||@
  Comment 282 200 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 282 202 rsi|DWORD = MOV [r14|DWORD[.] * 8 + 8] size: DWORD  <||@
  Comment 290 204 rax|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotMethod<AbstractList.listIterator(int)>}  <||@
  Comment 290 {meta{HotSpotMethod<AbstractList.listIterator(int)>}}  <||@
  Comment 300 206 CMP (x: rax|QWORD, y: [rsi|DWORD * 8 + 696]) size: QWORD  <||@
  Comment 308 208 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B38  <||@
  Comment 314 block B21 null  <||@
  Comment 314 210 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 314 212 CMP rsi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed}  <||@
  Comment 314 {meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed}}  <||@
  Comment 320 214 BRANCH trueDestinationProbability: 0.5455294668972093 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B25  <||@
  Comment 326 block B22 null  <||@
  Comment 326 216 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 326 218 rax|DWORD[.] = MOV [r14|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 334 220 rax|DWORD = MOV [rax|DWORD[.] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 334 [r13:0, r14:0]at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 0, duringCall: false, rethrow: false]
              |0            
     locals:  |r13|QWORD[.]   <||@
  Comment 334 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 341 222 CMP (x: r11|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 344 224 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B22 -> B23 falseDestination: B22 -> B24  <||@
  Comment 350 block B24 null  <||@
  Comment 350 232 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 350 234 stack:32|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 354 236 JUMP ~[] destination: B24 -> B33  <||@
  Comment 354 block B33 null  <||@
  Comment 354 288 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 354 290 rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 358 292 rdx|QWORD = LEA [rsi|QWORD + 56] size: QWORD  <||@
  Comment 362 294 CMP (x: rdx|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 366 296 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B33 -> B34 falseDestination: B33 -> B35  <||@
  Comment 372 block B35 null  <||@
  Comment 372 320 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 372 322 MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD  <||@
  Comment 376 324 AMD64PREFETCH ~[rsi|QWORD + 248] instr: 0  <||@
  Comment 383 326 rax|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 386 328 JUMP ~[] destination: B35 -> B36  <||@
  Comment 386 block B36 null  <||@
  Comment 386 330 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 386 332 rsi|QWORD[.] = MOVE rax|QWORD[*] moveKind: QWORD  <||@
  Comment 389 334 rdx|QWORD[*] = LEA [rax|QWORD[*] + 24] size: QWORD  <||@
  Comment 393 336 rdx|QWORD[.] = MOVE rdx|QWORD[*] moveKind: QWORD  <||@
  Comment 393 338 r8|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/SubList$1;, resolved>}  <||@
  Comment 393 {meta{HotSpotType<Ljava/util/SubList$1;, resolved>}}  <||@
  Comment 403 340 r8|QWORD = MOV [r8|QWORD + 168] size: QWORD  <||@
  Comment 410 342 MOV (x: [rax|QWORD[*]], y: r8|QWORD) size: QWORD  <||@
  Comment 413 344 MOV [rax|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/SubList$1;, resolved>;compressed}  <||@
  Comment 413 {meta{HotSpotType<Ljava/util/SubList$1;, resolved>;compressed}}  <||@
  Comment 420 346 MOV (x: [rax|QWORD[*] + 12], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 424 348 rdx|DWORD[.] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@67149636 encoding: base: 0 shift: 3  <||@
  Comment 428 350 MOV (x: [rax|QWORD[*] + 16], y: rdx|DWORD[.]) size: DWORD  <||@
  Comment 431 352 r13|DWORD[.] = COMPRESSPOINTER (input: r13|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@67149636 encoding: base: 0 shift: 3  <||@
  Comment 435 354 MOV (x: [rax|QWORD[*] + 20], y: r13|DWORD[.]) size: DWORD  <||@
  Comment 439 356 rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>}  <||@
  Comment 439 {meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>}}  <||@
  Comment 449 358 rdx|QWORD = MOV [rdx|QWORD + 168] size: QWORD  <||@
  Comment 456 360 MOV (x: [rax|QWORD[*] + 24], y: rdx|QWORD) size: QWORD  <||@
  Comment 460 362 MOV [rax|QWORD[*] + 32] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed}  <||@
  Comment 460 {meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed}}  <||@
  Comment 467 364 MOV (x: [rax|QWORD[*] + 36], y: r11|DWORD) size: DWORD  <||@
  Comment 471 366 MOV [rax|QWORD[*] + 40] y: -1 size: DWORD  <||@
  Comment 478 368 MOV (x: [rax|QWORD[*] + 44], y: r10|DWORD) size: DWORD  <||@
  Comment 482 370 MOV (x: [rax|QWORD[*] + 48], y: r14|DWORD[.]) size: DWORD  <||@
  Comment 486 372 MOV (x: [rax|QWORD[*] + 52], y: r14|DWORD[.]) size: DWORD  <||@
  Comment 490 374 rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 493 376 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 502 12  <||@
  Comment 512 block B2 null  <||@
  Comment 512 22 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 512 24 rax|DWORD[.] = MOVE input: int[0|0x0]  <||@
  Comment 517 26 r14|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 527 28 JUMP ~[] destination: B2 -> B10  <||@
  Comment 532 block B40 null  <||@
  Comment 532 396 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 532 398 CMP rax|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList$SubList;, resolved>;compressed}  <||@
  Comment 532 {meta{HotSpotType<Ljava/util/ArrayList$SubList;, resolved>;compressed}}  <||@
  Comment 538 400 BRANCH trueDestinationProbability: 0.8100038774718884 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B50  <||@
  Comment 544 block B41 null  <||@
  Comment 544 402 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 544 404 rax|DWORD[.] = MOV [r13|QWORD[.] + 32] size: DWORD  <||@
  Comment 548 406 r14|DWORD = MOV [rax|DWORD[.] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 548 [r13:0]at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 0, duringCall: false, rethrow: false]
              |0            
     locals:  |r13|QWORD[.]   <||@
  Comment 548 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 556 408 CMP (x: r14|DWORD, y: [r13|QWORD[.] + 12]) size: DWORD  <||@
  Comment 560 410 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B41 -> B42 falseDestination: B41 -> B48  <||@
  Comment 566 block B42 null  <||@
  Comment 566 412 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 566 414 CMP [r13|QWORD[.] + 24] y: 0 size: DWORD  <||@
  Comment 571 416 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B42 -> B43 falseDestination: B42 -> B44  <||@
  Comment 577 block B44 null  <||@
  Comment 577 424 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 577 426 rax|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 581 428 rsi|QWORD = LEA [rax|QWORD + 40] size: QWORD  <||@
  Comment 585 430 CMP (x: rsi|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 589 432 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B44 -> B45 falseDestination: B44 -> B46  <||@
  Comment 595 block B46 null  <||@
  Comment 595 448 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 595 450 MOV (x: [r15|QWORD + 96], y: rsi|QWORD) size: QWORD  <||@
  Comment 599 452 AMD64PREFETCH ~[rax|QWORD + 232] instr: 0  <||@
  Comment 606 454 rax|QWORD[*] = MOVE rax|QWORD moveKind: QWORD  <||@
  Comment 606 456 JUMP ~[] destination: B46 -> B47  <||@
  Comment 606 block B47 null  <||@
  Comment 606 458 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 606 460 rsi|QWORD[.] = MOVE rax|QWORD[*] moveKind: QWORD  <||@
  Comment 609 462 rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/ArrayList$SubList$1;, resolved>}  <||@
  Comment 609 {meta{HotSpotType<Ljava/util/ArrayList$SubList$1;, resolved>}}  <||@
  Comment 619 464 rdx|QWORD = MOV [rdx|QWORD + 168] size: QWORD  <||@
  Comment 626 466 MOV (x: [rax|QWORD[*]], y: rdx|QWORD) size: QWORD  <||@
  Comment 629 468 MOV [rax|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList$SubList$1;, resolved>;compressed}  <||@
  Comment 629 {meta{HotSpotType<Ljava/util/ArrayList$SubList$1;, resolved>;compressed}}  <||@
  Comment 636 470 rdx|QWORD = MOVE input: long[-4294967296|0xffffffff00000000]  <||@
  Comment 646 472 MOV (x: [rax|QWORD[*] + 12], y: rdx|QWORD) size: QWORD  <||@
  Comment 650 474 MOV (x: [rax|QWORD[*] + 20], y: r14|DWORD) size: DWORD  <||@
  Comment 654 476 MOV (x: [rax|QWORD[*] + 24], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 658 478 rdx|DWORD = MOV [r13|QWORD[.] + 20] size: DWORD  <||@
  Comment 662 480 MOV (x: [rax|QWORD[*] + 28], y: rdx|DWORD) size: DWORD  <||@
  Comment 665 482 r13|DWORD[.] = COMPRESSPOINTER (input: r13|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@67149636 encoding: base: 0 shift: 3  <||@
  Comment 669 484 MOV (x: [rax|QWORD[*] + 32], y: r13|DWORD[.]) size: DWORD  <||@
  Comment 673 486 rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 676 488 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 685 12  <||@
  Comment 695 block B6 null  <||@
  Comment 695 50 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 695 52 rsi|DWORD = DEC rsi|DWORD size: DWORD  <||@
  Comment 697 54 CMP rsi|DWORD y: 1 size: DWORD  <||@
  Comment 700 56 BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B8  <||@
  Comment 706 block B7 null  <||@
  Comment 706 58 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 706 60 rax|DWORD[.] = MOV [r13|QWORD[.] + 24] size: DWORD  <||@
  Comment 710 62 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@67149636 encoding: base: 0 shift: 3  <||@
  Comment 716 64 r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 719 66 JUMP ~[] destination: B7 -> B10  <||@
  Comment 724 block B25 null  <||@
  Comment 724 238 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 724 240 CMP rsi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Collections$EmptyList;, resolved>;compressed}  <||@
  Comment 724 {meta{HotSpotType<Ljava/util/Collections$EmptyList;, resolved>;compressed}}  <||@
  Comment 730 242 BRANCH trueDestinationProbability: 0.5021334091878823 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B29  <||@
  Comment 736 block B26 null  <||@
  Comment 736 244 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 736 246 CMP r11|DWORD y: 1 size: DWORD  <||@
  Comment 740 248 BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B26 -> B27 falseDestination: B26 -> B28  <||@
  Comment 746 block B27 null  <||@
  Comment 746 250 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 746 252 stack:32|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 754 254 JUMP ~[] destination: B27 -> B33  <||@
  Comment 759 block B29 null  <||@
  Comment 759 262 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 759 264 CMP rsi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeInputList;, resolved>;compressed}  <||@
  Comment 759 {meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeInputList;, resolved>;compressed}}  <||@
  Comment 765 266 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B37  <||@
  Comment 771 block B30 null  <||@
  Comment 771 268 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 771 270 rax|DWORD = MOV [r14|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 779 272 CMP (x: r11|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 782 274 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B30 -> B31 falseDestination: B30 -> B32  <||@
  Comment 788 block B32 null  <||@
  Comment 788 282 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 788 284 stack:32|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 792 286 JUMP ~[] destination: B32 -> B33  <||@
  Comment 797 block B50 null  <||@
  Comment 797 504 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 797 508 rdx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 802 510 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractList.listIterator(int)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:2]  <||@
  Comment 802 7  <||@
  Comment 815 {HotSpotMethod<AbstractList.listIterator(int)>}  <||@
  Comment 820 []at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2, duringCall: true, rethrow: false]
              |0 
     locals:  |-   <||@
  Comment 821 512 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 830 12  <||@
  Comment 840 block B11 null  <||@
  Comment 840 98 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 840 100 stack:28|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 845 102 stack:32|DWORD[.] = MOVE rax|DWORD[.] moveKind: DWORD  <||@
  Comment 849 104 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 849 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 859 106 rdx|DWORD = MOVE input: int[4|0x4]  <||@
  Comment 864 108 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 869 110 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:38, 11, 2]  <||@
  Comment 869 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 874 [r13:0, r14:0, stack:16]at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 38, duringCall: false, rethrow: false]
              |0                                                                                                                                                   |1             |2          
     locals:  |vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=stack:28|DWORD,lastReturned=Object[null],next=Object[null],this$0=r13|QWORD[.]}  |-             |int[0|0x0] 
     stack:   |vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=stack:28|DWORD,lastReturned=Object[null],next=Object[null],this$0=r13|QWORD[.]}  |r14|QWORD[.]  |           
  at java.util.LinkedList.listIterator(LinkedList.java:868) [bci: 11, duringCall: true, rethrow: false]
              |0                                                                                                                                                   |1 
     locals:  |-                                                                                                                                                   |- 
     stack:   |vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=stack:28|DWORD,lastReturned=Object[null],next=Object[null],this$0=r13|QWORD[.]}  |  
  at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2, duringCall: true, rethrow: false]
              |0 
     locals:  |-   <||@
  Comment 875 112 rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 878 114 r10|DWORD = MOVE stack:28|DWORD moveKind: DWORD  <||@
  Comment 883 116 rax|DWORD[.] = MOVE stack:32|DWORD[.] moveKind: DWORD  <||@
  Comment 887 118 JUMP ~[] destination: B11 -> B13  <||@
  Comment 892 block B34 null  <||@
  Comment 892 298 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 892 300 stack:28|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 897 302 stack:36|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 902 304 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 902 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 912 306 rdx|DWORD = MOVE input: int[10|0xa]  <||@
  Comment 917 308 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 922 310 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:9, 2, 34, 15, 2]  <||@
  Comment 922 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 927 [r13:0, r14:0]at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 9, duringCall: false, rethrow: false]
              |0               |1              
     locals:  |r14|DWORD[.]    |stack:28|DWORD 
     stack:   |stack:28|DWORD  |stack:32|DWORD 
  at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2, duringCall: true, rethrow: false]
              |0             |1              
     locals:  |r14|DWORD[.]  |stack:28|DWORD 
  at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34, duringCall: true, rethrow: false]
              |0                                                                             |1  |2 
     locals:  |-                                                                             |-  |- 
     stack:   |vobject:SubList$1:0{val$index=int[0|0x0],i=Object[null],this$0=r13|QWORD[.]}  |   |  
  at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15, duringCall: true, rethrow: false]
              |0                                                                             |1 
     locals:  |-                                                                             |- 
     stack:   |vobject:SubList$1:0{val$index=int[0|0x0],i=Object[null],this$0=r13|QWORD[.]}  |  
  at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2, duringCall: true, rethrow: false]
              |0 
     locals:  |-   <||@
  Comment 928 312 rax|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 928 314 r11|DWORD = MOVE stack:28|DWORD moveKind: DWORD  <||@
  Comment 933 316 r10|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 938 318 JUMP ~[] destination: B34 -> B36  <||@
  Comment 943 block B45 null  <||@
  Comment 943 434 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 943 436 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 943 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 953 438 rdx|DWORD = MOVE input: int[6|0x6]  <||@
  Comment 958 440 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 963 442 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0]  <||@
  Comment 963 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 968 [r13:0]at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 0, duringCall: false, rethrow: false]
              |0            
     locals:  |r13|QWORD[.]   <||@
  Comment 969 444 rax|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 969 446 JUMP ~[] destination: B45 -> B47  <||@
  Comment 974 block B28 null  <||@
  Comment 974 256 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 974 258 r10|DWORD = MOVE input: int[-100115|0xfffffffffffe78ed]  <||@
  Comment 980 260 JUMP ~[] destination: B28 -> B49  <||@
  Comment 980 block B49 null  <||@
  Comment 980 496 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 980 498 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 987 500 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 994 502 DEOPT info [bci:0]  <||@
  Comment 994 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 999 [r13:0]at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 0, duringCall: false, rethrow: false]
              |0            
     locals:  |r13|QWORD[.]   <||@
  Comment 1000 block B37 null  <||@
  Comment 1000 378 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1000 380 r10|DWORD = MOVE input: int[-100403|0xfffffffffffe77cd]  <||@
  Comment 1006 382 JUMP ~[] destination: B37 -> B49  <||@
  Comment 1008 block B43 null  <||@
  Comment 1008 418 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1008 420 r10|DWORD = MOVE input: int[-104979|0xfffffffffffe65ed]  <||@
  Comment 1014 422 JUMP ~[] destination: B43 -> B49  <||@
  Comment 1016 block B48 null  <||@
  Comment 1016 490 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1016 492 r10|DWORD = MOVE input: int[-104211|0xfffffffffffe68ed]  <||@
  Comment 1022 494 JUMP ~[] destination: B48 -> B49  <||@
  Comment 1024 block B31 null  <||@
  Comment 1024 276 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1024 278 r10|DWORD = MOVE input: int[-101139|0xfffffffffffe74ed]  <||@
  Comment 1030 280 JUMP ~[] destination: B31 -> B49  <||@
  Comment 1032 block B23 null  <||@
  Comment 1032 226 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1032 228 r10|DWORD = MOVE input: int[-99859|0xfffffffffffe79ed]  <||@
  Comment 1038 230 JUMP ~[] destination: B23 -> B49  <||@
  Comment 1040 block B8 null  <||@
  Comment 1040 68 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1040 70 r10|DWORD = MOVE input: int[-90899|0xfffffffffffe9ced]  <||@
  Comment 1046 72 JUMP ~[] destination: B8 -> B49  <||@
  Comment 1048 block B4 null  <||@
  Comment 1048 36 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1048 38 r10|DWORD = MOVE input: int[-88851|0xfffffffffffea4ed]  <||@
  Comment 1054 40 JUMP ~[] destination: B4 -> B49  <||@
  Comment 1056 block B19 null  <||@
  Comment 1056 194 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1056 196 r10|DWORD = MOVE input: int[-97555|0xfffffffffffe82ed]  <||@
  Comment 1062 198 JUMP ~[] destination: B19 -> B49  <||@
  Comment 1064 block B17 null  <||@
  Comment 1064 180 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1064 182 r10|DWORD = MOVE input: int[-95507|0xfffffffffffe8aed]  <||@
  Comment 1070 184 JUMP ~[] destination: B17 -> B49  <||@
  Comment 1072 block B39 null  <||@
  Comment 1072 390 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1072 392 r10|DWORD = MOVE input: int[-94739|0xfffffffffffe8ded]  <||@
  Comment 1078 394 JUMP ~[] destination: B39 -> B49  <||@
  Comment 1080 block B38 null  <||@
  Comment 1080 384 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1080 386 r10|DWORD = MOVE input: int[-97331|0xfffffffffffe83cd]  <||@
  Comment 1086 388 JUMP ~[] destination: B38 -> B49  <||@
  Comment 1088 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 1088 4  <||@
  Comment 1094 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 1094 5  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-8851[java.util.AbstractList.listIterator()]"
  method "HotSpotCompilation-8851[java.util.AbstractList.listIterator()]"
  date 1527005193759
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 10783a680 448b560849c1e203493bc20f85cfb7fcfe900f1f80000000000f1f800000000089842400c0feff4883ec2848896c24204c8bee418b450881f83c8600f80f859d000000418b751085f60f84b101000085f60f8cc10300008bc6d1f883f8010f8c53020000418b45148bf048c1e6034c8bf6498b7760498b5770458b550c4c8d5e204c3bda0f87be0200004d895f600f1886e0000000488bd649bb203222c0070000004d8b9ba80000004c891ec74608444604f84489660c448956104489661489461849c1ed0344896e1c488bc2488b6c24204883c4288505aa4805fdc5f877c381f87dee01f80f8528010000458b7518468b14f50c000000453b550c0f852e03000041837d14000f8c1b030000458b5d104585db0f8c06030000428b34f50800000048b800e8dd2301000000483b04f5b80200000f85fe02000081fe8faf00f80f858e010000428b04f5100000008b04c50c000000443bd80f8faa02000089442410498b7760488d5638493b57700f8708020000498957600f1886f8000000488bc6488bf0488d501849b8c8780fc0070000004d8b80a80000004c8900c7400819ef01f84489600c48c1ea0389501049c1ed034489681448ba987b0fc007000000488b92a800000048895018c7402073ef01f844895824c74028ffffffff4489502c4489703044897034488bc6488b6c24204883c42885058a4705fdc5f877c3b80000000049be0000000000000000e95dfeffff81f80fad00f80f85fd000000418b4520448b34c50c000000453b750c0f85c201000041837d18000f8caf010000498b4760488d7028493b77700f875c010000498977600f1880e8000000488bf048ba406f05c007000000488b92a8000000488910c74008e8ad00f848ba00000000ffffffff4889500c4489701444896018418b551489501c49c1ed0344896820488bc6488b6c24204883c4288505d34605fdc5f877c3ffce83fe010f8d4e010000418b45188bf048c1e6034c8bf6e99dfdffff81fe3b3100f80f85170000004183fb010f8de4000000c744241000000000e96bfeffff81fec8b101f80f85e5000000428b04f510000000443bd80f8fec00000089442410e945feffffba0000000048b8ffffffffffffffff666690e82cb9fcfe90488b6c24204883c4288505424605fdc5f877c344895424148944241048be680b00c007000000ba04000000b901000000e8f6c375ff90488bf0448b5424148b442410e919fdffff44895c2414448954240c48be680b00c007000000ba0a000000b901000000e8c1c375ff90448b5c2414448b54240ce9d3fdffff48be680b00c007000000ba06000000b901000000e898c375ff90e990feffff41baed78feff4589979c0200004d89a7a8020000e897cbfcfe9041bacd77feffebe441baed65feffebdc41baed68feffebd441baed74feffebcc41baed79feffebc441baed9cfeffebbc41baeda4feffebb441baed82feffebac41baed8afeffeba441baed8dfeffeb9c41bacd83feffeb94e85bfb40ff90e835cafcfe90f4f4f4f4  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@55b7b248 slotKind: QWORD  <||@
  Comment 48 6 r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 51 8 rax|DWORD = MOV [r13|QWORD[.] + 8] size: DWORD  <||@
  Comment 55 10 CMP rax|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/LinkedList;, resolved>;compressed}  <||@
  Comment 55 {meta{HotSpotType<Ljava/util/LinkedList;, resolved>;compressed}}  <||@
  Comment 61 12 BRANCH trueDestinationProbability: 0.6602222840867722 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B14  <||@
  Comment 67 block B1 null  <||@
  Comment 67 14 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 67 16 rsi|DWORD = MOV [r13|QWORD[.] + 16] size: DWORD  <||@
  Comment 71 18 TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 73 20 BRANCH trueDestinationProbability: 0.44133716863953554 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3  <||@
  Comment 79 block B3 null  <||@
  Comment 79 30 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 79 32 TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 81 34 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B5  <||@
  Comment 87 block B5 null  <||@
  Comment 87 42 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 87 44 rax|DWORD = SAR rsi|DWORD size: DWORD  <||@
  Comment 91 46 CMP rax|DWORD y: 1 size: DWORD  <||@
  Comment 94 48 BRANCH trueDestinationProbability: 0.27721570921026206 condition: < trueDestination: B5 -> B6 falseDestination: B5 -> B9  <||@
  Comment 100 block B9 null  <||@
  Comment 100 74 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 100 76 rax|DWORD[.] = MOV [r13|QWORD[.] + 20] size: DWORD  <||@
  Comment 104 78 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@67149636 encoding: base: 0 shift: 3  <||@
  Comment 110 80 r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 113 82 JUMP ~[] destination: B9 -> B10  <||@
  Comment 113 block B10 null  <||@
  Comment 113 84 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 113 86 rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 117 88 rdx|QWORD = MOV [r15|QWORD + 112] size: QWORD  <||@
  Comment 121 90 r10|DWORD = MOV [r13|QWORD[.] + 12] size: DWORD  <||@
  Comment 125 92 r11|QWORD = LEA [rsi|QWORD + 32] size: QWORD  <||@
  Comment 129 94 CMP (x: r11|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 132 96 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B10 -> B11 falseDestination: B10 -> B12  <||@
  Comment 138 block B12 null  <||@
  Comment 138 120 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 138 122 MOV (x: [r15|QWORD + 96], y: r11|QWORD) size: QWORD  <||@
  Comment 142 124 AMD64PREFETCH ~[rsi|QWORD + 224] instr: 0  <||@
  Comment 149 126 rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 149 128 JUMP ~[] destination: B12 -> B13  <||@
  Comment 149 block B13 null  <||@
  Comment 149 130 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 149 132 rdx|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD  <||@
  Comment 152 134 r11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/LinkedList$ListItr;, resolved>}  <||@
  Comment 152 {meta{HotSpotType<Ljava/util/LinkedList$ListItr;, resolved>}}  <||@
  Comment 162 136 r11|QWORD = MOV [r11|QWORD + 168] size: QWORD  <||@
  Comment 169 138 MOV (x: [rsi|QWORD[*]], y: r11|QWORD) size: QWORD  <||@
  Comment 172 140 MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/LinkedList$ListItr;, resolved>;compressed}  <||@
  Comment 172 {meta{HotSpotType<Ljava/util/LinkedList$ListItr;, resolved>;compressed}}  <||@
  Comment 179 142 MOV (x: [rsi|QWORD[*] + 12], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 183 144 MOV (x: [rsi|QWORD[*] + 16], y: r10|DWORD) size: DWORD  <||@
  Comment 187 146 MOV (x: [rsi|QWORD[*] + 20], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 191 148 MOV (x: [rsi|QWORD[*] + 24], y: rax|DWORD[.]) size: DWORD  <||@
  Comment 194 150 r13|DWORD[.] = COMPRESSPOINTER (input: r13|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@67149636 encoding: base: 0 shift: 3  <||@
  Comment 198 152 MOV (x: [rsi|QWORD[*] + 28], y: r13|DWORD[.]) size: DWORD  <||@
  Comment 202 154 rax|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 205 156 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 214 12  <||@
  Comment 224 block B14 null  <||@
  Comment 224 158 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 224 160 CMP rax|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/RandomAccessSubList;, resolved>;compressed}  <||@
  Comment 224 {meta{HotSpotType<Ljava/util/RandomAccessSubList;, resolved>;compressed}}  <||@
  Comment 230 162 BRANCH trueDestinationProbability: 0.5123719007222719 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B40  <||@
  Comment 236 block B15 null  <||@
  Comment 236 164 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 236 166 r14|DWORD[.] = MOV [r13|QWORD[.] + 24] size: DWORD  <||@
  Comment 240 168 r10|DWORD = MOV [r14|DWORD[.] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 240 [r13:0, r14:0]at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 0, duringCall: false, rethrow: false]
              |0            
     locals:  |r13|QWORD[.]   <||@
  Comment 240 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 248 170 CMP (x: r10|DWORD, y: [r13|QWORD[.] + 12]) size: DWORD  <||@
  Comment 252 172 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B39  <||@
  Comment 258 block B16 null  <||@
  Comment 258 174 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 258 176 CMP [r13|QWORD[.] + 20] y: 0 size: DWORD  <||@
  Comment 263 178 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B16 -> B17 falseDestination: B16 -> B18  <||@
  Comment 269 block B18 null  <||@
  Comment 269 186 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 269 188 r11|DWORD = MOV [r13|QWORD[.] + 16] size: DWORD  <||@
  Comment 273 190 TEST (x: r11|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 276 192 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B18 -> B19 falseDestination: B18 -> B20  <||@
  Comment 282 block B20 null  <||@
  Comment 282 200 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 282 202 rsi|DWORD = MOV [r14|DWORD[.] * 8 + 8] size: DWORD  <||@
  Comment 290 204 rax|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotMethod<AbstractList.listIterator(int)>}  <||@
  Comment 290 {meta{HotSpotMethod<AbstractList.listIterator(int)>}}  <||@
  Comment 300 206 CMP (x: rax|QWORD, y: [rsi|DWORD * 8 + 696]) size: QWORD  <||@
  Comment 308 208 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B38  <||@
  Comment 314 block B21 null  <||@
  Comment 314 210 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 314 212 CMP rsi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed}  <||@
  Comment 314 {meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>;compressed}}  <||@
  Comment 320 214 BRANCH trueDestinationProbability: 0.5455294668972093 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B25  <||@
  Comment 326 block B22 null  <||@
  Comment 326 216 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 326 218 rax|DWORD[.] = MOV [r14|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 334 220 rax|DWORD = MOV [rax|DWORD[.] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 334 [r13:0, r14:0]at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 0, duringCall: false, rethrow: false]
              |0            
     locals:  |r13|QWORD[.]   <||@
  Comment 334 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 341 222 CMP (x: r11|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 344 224 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B22 -> B23 falseDestination: B22 -> B24  <||@
  Comment 350 block B24 null  <||@
  Comment 350 232 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 350 234 stack:32|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 354 236 JUMP ~[] destination: B24 -> B33  <||@
  Comment 354 block B33 null  <||@
  Comment 354 288 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 354 290 rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 358 292 rdx|QWORD = LEA [rsi|QWORD + 56] size: QWORD  <||@
  Comment 362 294 CMP (x: rdx|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 366 296 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B33 -> B34 falseDestination: B33 -> B35  <||@
  Comment 372 block B35 null  <||@
  Comment 372 320 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 372 322 MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD  <||@
  Comment 376 324 AMD64PREFETCH ~[rsi|QWORD + 248] instr: 0  <||@
  Comment 383 326 rax|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 386 328 JUMP ~[] destination: B35 -> B36  <||@
  Comment 386 block B36 null  <||@
  Comment 386 330 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 386 332 rsi|QWORD[.] = MOVE rax|QWORD[*] moveKind: QWORD  <||@
  Comment 389 334 rdx|QWORD[*] = LEA [rax|QWORD[*] + 24] size: QWORD  <||@
  Comment 393 336 rdx|QWORD[.] = MOVE rdx|QWORD[*] moveKind: QWORD  <||@
  Comment 393 338 r8|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/SubList$1;, resolved>}  <||@
  Comment 393 {meta{HotSpotType<Ljava/util/SubList$1;, resolved>}}  <||@
  Comment 403 340 r8|QWORD = MOV [r8|QWORD + 168] size: QWORD  <||@
  Comment 410 342 MOV (x: [rax|QWORD[*]], y: r8|QWORD) size: QWORD  <||@
  Comment 413 344 MOV [rax|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/SubList$1;, resolved>;compressed}  <||@
  Comment 413 {meta{HotSpotType<Ljava/util/SubList$1;, resolved>;compressed}}  <||@
  Comment 420 346 MOV (x: [rax|QWORD[*] + 12], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 424 348 rdx|DWORD[.] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@67149636 encoding: base: 0 shift: 3  <||@
  Comment 428 350 MOV (x: [rax|QWORD[*] + 16], y: rdx|DWORD[.]) size: DWORD  <||@
  Comment 431 352 r13|DWORD[.] = COMPRESSPOINTER (input: r13|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@67149636 encoding: base: 0 shift: 3  <||@
  Comment 435 354 MOV (x: [rax|QWORD[*] + 20], y: r13|DWORD[.]) size: DWORD  <||@
  Comment 439 356 rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>}  <||@
  Comment 439 {meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>}}  <||@
  Comment 449 358 rdx|QWORD = MOV [rdx|QWORD + 168] size: QWORD  <||@
  Comment 456 360 MOV (x: [rax|QWORD[*] + 24], y: rdx|QWORD) size: QWORD  <||@
  Comment 460 362 MOV [rax|QWORD[*] + 32] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed}  <||@
  Comment 460 {meta{HotSpotType<Ljava/util/AbstractList$ListItr;, resolved>;compressed}}  <||@
  Comment 467 364 MOV (x: [rax|QWORD[*] + 36], y: r11|DWORD) size: DWORD  <||@
  Comment 471 366 MOV [rax|QWORD[*] + 40] y: -1 size: DWORD  <||@
  Comment 478 368 MOV (x: [rax|QWORD[*] + 44], y: r10|DWORD) size: DWORD  <||@
  Comment 482 370 MOV (x: [rax|QWORD[*] + 48], y: r14|DWORD[.]) size: DWORD  <||@
  Comment 486 372 MOV (x: [rax|QWORD[*] + 52], y: r14|DWORD[.]) size: DWORD  <||@
  Comment 490 374 rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 493 376 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 502 12  <||@
  Comment 512 block B2 null  <||@
  Comment 512 22 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 512 24 rax|DWORD[.] = MOVE input: int[0|0x0]  <||@
  Comment 517 26 r14|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 527 28 JUMP ~[] destination: B2 -> B10  <||@
  Comment 532 block B40 null  <||@
  Comment 532 396 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 532 398 CMP rax|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList$SubList;, resolved>;compressed}  <||@
  Comment 532 {meta{HotSpotType<Ljava/util/ArrayList$SubList;, resolved>;compressed}}  <||@
  Comment 538 400 BRANCH trueDestinationProbability: 0.8100038774718884 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B50  <||@
  Comment 544 block B41 null  <||@
  Comment 544 402 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 544 404 rax|DWORD[.] = MOV [r13|QWORD[.] + 32] size: DWORD  <||@
  Comment 548 406 r14|DWORD = MOV [rax|DWORD[.] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 548 [r13:0]at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 0, duringCall: false, rethrow: false]
              |0            
     locals:  |r13|QWORD[.]   <||@
  Comment 548 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 556 408 CMP (x: r14|DWORD, y: [r13|QWORD[.] + 12]) size: DWORD  <||@
  Comment 560 410 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B41 -> B42 falseDestination: B41 -> B48  <||@
  Comment 566 block B42 null  <||@
  Comment 566 412 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 566 414 CMP [r13|QWORD[.] + 24] y: 0 size: DWORD  <||@
  Comment 571 416 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B42 -> B43 falseDestination: B42 -> B44  <||@
  Comment 577 block B44 null  <||@
  Comment 577 424 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 577 426 rax|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 581 428 rsi|QWORD = LEA [rax|QWORD + 40] size: QWORD  <||@
  Comment 585 430 CMP (x: rsi|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 589 432 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B44 -> B45 falseDestination: B44 -> B46  <||@
  Comment 595 block B46 null  <||@
  Comment 595 448 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 595 450 MOV (x: [r15|QWORD + 96], y: rsi|QWORD) size: QWORD  <||@
  Comment 599 452 AMD64PREFETCH ~[rax|QWORD + 232] instr: 0  <||@
  Comment 606 454 rax|QWORD[*] = MOVE rax|QWORD moveKind: QWORD  <||@
  Comment 606 456 JUMP ~[] destination: B46 -> B47  <||@
  Comment 606 block B47 null  <||@
  Comment 606 458 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 606 460 rsi|QWORD[.] = MOVE rax|QWORD[*] moveKind: QWORD  <||@
  Comment 609 462 rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/ArrayList$SubList$1;, resolved>}  <||@
  Comment 609 {meta{HotSpotType<Ljava/util/ArrayList$SubList$1;, resolved>}}  <||@
  Comment 619 464 rdx|QWORD = MOV [rdx|QWORD + 168] size: QWORD  <||@
  Comment 626 466 MOV (x: [rax|QWORD[*]], y: rdx|QWORD) size: QWORD  <||@
  Comment 629 468 MOV [rax|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/ArrayList$SubList$1;, resolved>;compressed}  <||@
  Comment 629 {meta{HotSpotType<Ljava/util/ArrayList$SubList$1;, resolved>;compressed}}  <||@
  Comment 636 470 rdx|QWORD = MOVE input: long[-4294967296|0xffffffff00000000]  <||@
  Comment 646 472 MOV (x: [rax|QWORD[*] + 12], y: rdx|QWORD) size: QWORD  <||@
  Comment 650 474 MOV (x: [rax|QWORD[*] + 20], y: r14|DWORD) size: DWORD  <||@
  Comment 654 476 MOV (x: [rax|QWORD[*] + 24], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 658 478 rdx|DWORD = MOV [r13|QWORD[.] + 20] size: DWORD  <||@
  Comment 662 480 MOV (x: [rax|QWORD[*] + 28], y: rdx|DWORD) size: DWORD  <||@
  Comment 665 482 r13|DWORD[.] = COMPRESSPOINTER (input: r13|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@67149636 encoding: base: 0 shift: 3  <||@
  Comment 669 484 MOV (x: [rax|QWORD[*] + 32], y: r13|DWORD[.]) size: DWORD  <||@
  Comment 673 486 rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 676 488 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 685 12  <||@
  Comment 695 block B6 null  <||@
  Comment 695 50 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 695 52 rsi|DWORD = DEC rsi|DWORD size: DWORD  <||@
  Comment 697 54 CMP rsi|DWORD y: 1 size: DWORD  <||@
  Comment 700 56 BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B8  <||@
  Comment 706 block B7 null  <||@
  Comment 706 58 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 706 60 rax|DWORD[.] = MOV [r13|QWORD[.] + 24] size: DWORD  <||@
  Comment 710 62 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@67149636 encoding: base: 0 shift: 3  <||@
  Comment 716 64 r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 719 66 JUMP ~[] destination: B7 -> B10  <||@
  Comment 724 block B25 null  <||@
  Comment 724 238 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 724 240 CMP rsi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/Collections$EmptyList;, resolved>;compressed}  <||@
  Comment 724 {meta{HotSpotType<Ljava/util/Collections$EmptyList;, resolved>;compressed}}  <||@
  Comment 730 242 BRANCH trueDestinationProbability: 0.5021334091878823 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B29  <||@
  Comment 736 block B26 null  <||@
  Comment 736 244 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 736 246 CMP r11|DWORD y: 1 size: DWORD  <||@
  Comment 740 248 BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B26 -> B27 falseDestination: B26 -> B28  <||@
  Comment 746 block B27 null  <||@
  Comment 746 250 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 746 252 stack:32|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 754 254 JUMP ~[] destination: B27 -> B33  <||@
  Comment 759 block B29 null  <||@
  Comment 759 262 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 759 264 CMP rsi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeInputList;, resolved>;compressed}  <||@
  Comment 759 {meta{HotSpotType<Lorg/graalvm/compiler/graph/NodeInputList;, resolved>;compressed}}  <||@
  Comment 765 266 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B37  <||@
  Comment 771 block B30 null  <||@
  Comment 771 268 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 771 270 rax|DWORD = MOV [r14|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 779 272 CMP (x: r11|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 782 274 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B30 -> B31 falseDestination: B30 -> B32  <||@
  Comment 788 block B32 null  <||@
  Comment 788 282 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 788 284 stack:32|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 792 286 JUMP ~[] destination: B32 -> B33  <||@
  Comment 797 block B50 null  <||@
  Comment 797 504 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 797 508 rdx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 802 510 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractList.listIterator(int)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:2]  <||@
  Comment 802 7  <||@
  Comment 815 {HotSpotMethod<AbstractList.listIterator(int)>}  <||@
  Comment 820 []at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2, duringCall: true, rethrow: false]
              |0 
     locals:  |-   <||@
  Comment 821 512 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 830 12  <||@
  Comment 840 block B11 null  <||@
  Comment 840 98 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 840 100 stack:28|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 845 102 stack:32|DWORD[.] = MOVE rax|DWORD[.] moveKind: DWORD  <||@
  Comment 849 104 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 849 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 859 106 rdx|DWORD = MOVE input: int[4|0x4]  <||@
  Comment 864 108 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 869 110 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:38, 11, 2]  <||@
  Comment 869 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 874 [r13:0, r14:0, stack:16]at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 38, duringCall: false, rethrow: false]
              |0                                                                                                                                                   |1             |2          
     locals:  |vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=stack:28|DWORD,lastReturned=Object[null],next=Object[null],this$0=r13|QWORD[.]}  |-             |int[0|0x0] 
     stack:   |vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=stack:28|DWORD,lastReturned=Object[null],next=Object[null],this$0=r13|QWORD[.]}  |r14|QWORD[.]  |           
  at java.util.LinkedList.listIterator(LinkedList.java:868) [bci: 11, duringCall: true, rethrow: false]
              |0                                                                                                                                                   |1 
     locals:  |-                                                                                                                                                   |- 
     stack:   |vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=stack:28|DWORD,lastReturned=Object[null],next=Object[null],this$0=r13|QWORD[.]}  |  
  at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2, duringCall: true, rethrow: false]
              |0 
     locals:  |-   <||@
  Comment 875 112 rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 878 114 r10|DWORD = MOVE stack:28|DWORD moveKind: DWORD  <||@
  Comment 883 116 rax|DWORD[.] = MOVE stack:32|DWORD[.] moveKind: DWORD  <||@
  Comment 887 118 JUMP ~[] destination: B11 -> B13  <||@
  Comment 892 block B34 null  <||@
  Comment 892 298 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 892 300 stack:28|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 897 302 stack:36|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 902 304 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 902 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 912 306 rdx|DWORD = MOVE input: int[10|0xa]  <||@
  Comment 917 308 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 922 310 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:9, 2, 34, 15, 2]  <||@
  Comment 922 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 927 [r13:0, r14:0]at java.util.AbstractList.rangeCheckForAdd(AbstractList.java:604) [bci: 9, duringCall: false, rethrow: false]
              |0               |1              
     locals:  |r14|DWORD[.]    |stack:28|DWORD 
     stack:   |stack:28|DWORD  |stack:32|DWORD 
  at java.util.AbstractList.listIterator(AbstractList.java:325) [bci: 2, duringCall: true, rethrow: false]
              |0             |1              
     locals:  |r14|DWORD[.]  |stack:28|DWORD 
  at java.util.SubList$1.<init>(AbstractList.java:699) [bci: 34, duringCall: true, rethrow: false]
              |0                                                                             |1  |2 
     locals:  |-                                                                             |-  |- 
     stack:   |vobject:SubList$1:0{val$index=int[0|0x0],i=Object[null],this$0=r13|QWORD[.]}  |   |  
  at java.util.SubList.listIterator(AbstractList.java:698) [bci: 15, duringCall: true, rethrow: false]
              |0                                                                             |1 
     locals:  |-                                                                             |- 
     stack:   |vobject:SubList$1:0{val$index=int[0|0x0],i=Object[null],this$0=r13|QWORD[.]}  |  
  at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2, duringCall: true, rethrow: false]
              |0 
     locals:  |-   <||@
  Comment 928 312 rax|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 928 314 r11|DWORD = MOVE stack:28|DWORD moveKind: DWORD  <||@
  Comment 933 316 r10|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 938 318 JUMP ~[] destination: B34 -> B36  <||@
  Comment 943 block B45 null  <||@
  Comment 943 434 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 943 436 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 943 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 953 438 rdx|DWORD = MOVE input: int[6|0x6]  <||@
  Comment 958 440 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 963 442 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0]  <||@
  Comment 963 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 968 [r13:0]at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 0, duringCall: false, rethrow: false]
              |0            
     locals:  |r13|QWORD[.]   <||@
  Comment 969 444 rax|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 969 446 JUMP ~[] destination: B45 -> B47  <||@
  Comment 974 block B28 null  <||@
  Comment 974 256 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 974 258 r10|DWORD = MOVE input: int[-100115|0xfffffffffffe78ed]  <||@
  Comment 980 260 JUMP ~[] destination: B28 -> B49  <||@
  Comment 980 block B49 null  <||@
  Comment 980 496 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 980 498 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 987 500 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 994 502 DEOPT info [bci:0]  <||@
  Comment 994 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 999 [r13:0]at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 0, duringCall: false, rethrow: false]
              |0            
     locals:  |r13|QWORD[.]   <||@
  Comment 1000 block B37 null  <||@
  Comment 1000 378 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1000 380 r10|DWORD = MOVE input: int[-100403|0xfffffffffffe77cd]  <||@
  Comment 1006 382 JUMP ~[] destination: B37 -> B49  <||@
  Comment 1008 block B43 null  <||@
  Comment 1008 418 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1008 420 r10|DWORD = MOVE input: int[-104979|0xfffffffffffe65ed]  <||@
  Comment 1014 422 JUMP ~[] destination: B43 -> B49  <||@
  Comment 1016 block B48 null  <||@
  Comment 1016 490 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1016 492 r10|DWORD = MOVE input: int[-104211|0xfffffffffffe68ed]  <||@
  Comment 1022 494 JUMP ~[] destination: B48 -> B49  <||@
  Comment 1024 block B31 null  <||@
  Comment 1024 276 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1024 278 r10|DWORD = MOVE input: int[-101139|0xfffffffffffe74ed]  <||@
  Comment 1030 280 JUMP ~[] destination: B31 -> B49  <||@
  Comment 1032 block B23 null  <||@
  Comment 1032 226 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1032 228 r10|DWORD = MOVE input: int[-99859|0xfffffffffffe79ed]  <||@
  Comment 1038 230 JUMP ~[] destination: B23 -> B49  <||@
  Comment 1040 block B8 null  <||@
  Comment 1040 68 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1040 70 r10|DWORD = MOVE input: int[-90899|0xfffffffffffe9ced]  <||@
  Comment 1046 72 JUMP ~[] destination: B8 -> B49  <||@
  Comment 1048 block B4 null  <||@
  Comment 1048 36 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1048 38 r10|DWORD = MOVE input: int[-88851|0xfffffffffffea4ed]  <||@
  Comment 1054 40 JUMP ~[] destination: B4 -> B49  <||@
  Comment 1056 block B19 null  <||@
  Comment 1056 194 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1056 196 r10|DWORD = MOVE input: int[-97555|0xfffffffffffe82ed]  <||@
  Comment 1062 198 JUMP ~[] destination: B19 -> B49  <||@
  Comment 1064 block B17 null  <||@
  Comment 1064 180 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1064 182 r10|DWORD = MOVE input: int[-95507|0xfffffffffffe8aed]  <||@
  Comment 1070 184 JUMP ~[] destination: B17 -> B49  <||@
  Comment 1072 block B39 null  <||@
  Comment 1072 390 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1072 392 r10|DWORD = MOVE input: int[-94739|0xfffffffffffe8ded]  <||@
  Comment 1078 394 JUMP ~[] destination: B39 -> B49  <||@
  Comment 1080 block B38 null  <||@
  Comment 1080 384 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1080 386 r10|DWORD = MOVE input: int[-97331|0xfffffffffffe83cd]  <||@
  Comment 1086 388 JUMP ~[] destination: B38 -> B49  <||@
  Comment 1088 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 1088 4  <||@
  Comment 1094 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 1094 5  <||@
  HexCodeFile>>> <|@
end_nmethod
