begin_compilation
  name " HotSpotCompilation-8659[java.util.AbstractSequentialList.iterator()]"
  method "HotSpotCompilation-8659[java.util.AbstractSequentialList.iterator()]"
  date 1527005197728
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: i204 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: i204  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Ljava/util/LinkedList;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?2 v210 ?6 ?7 v208 v211 v209 a116 ?56 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v208 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i204 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i204 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: LinkedList.size
nodeSourcePosition: at java.util.LinkedList.isPositionIndex(LinkedList.java:541) [bci: 6]
at java.util.LinkedList.checkPositionIndex(LinkedList.java:559) [bci: 2]
at java.util.LinkedList.listIterator(LinkedList.java:867) [bci: 2]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:239) [bci: 1]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v208 
=== Succesors ===
next: v31 
=== Usages ===
v49 v28 i61 i70 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v208 #next: v31  <|@  <|@
f <@~|@floating>@ <|@
tid i3 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 1]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:239) [bci: 1]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
?40 v49 v28 v185 v181 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v28 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 26]
at java.util.LinkedList.listIterator(LinkedList.java:868) [bci: 11]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:239) [bci: 1]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i204 
y: i3 
=== Succesors ===
=== Usages ===
v31 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i204 y: i3  <|@  <|@
f <@~|@floating>@ <|@
tid a32 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 29]
at java.util.LinkedList.listIterator(LinkedList.java:868) [bci: 11]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:239) [bci: 1]
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
a39 v128 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i60 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:569) [bci: 5]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 35]
at java.util.LinkedList.listIterator(LinkedList.java:868) [bci: 11]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:239) [bci: 1]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i61 v73 v74 a147 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v31 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 26]
at java.util.LinkedList.listIterator(LinkedList.java:868) [bci: 11]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:239) [bci: 1]
stamp: void
trueSuccessorProbability: 0.4381880536401267
=== Inputs ===
condition: v28 
=== Succesors ===
trueSuccessor: v29 
falseSuccessor: v100 
=== Usages ===
=== Predecessor ===
i204 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v28 #trueSuccessor: v29 #falseSuccessor: v100  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B10" 
    xhandlers
    flags 
    probability 4601565314138273430
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v29 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 29]
at java.util.LinkedList.listIterator(LinkedList.java:868) [bci: 11]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:239) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v36 
=== Usages ===
=== Predecessor ===
v31 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v36  <|@  <|@
f <@~|@floating>@ <|@
tid a121 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: n - NULL
stampKind: n -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
a122 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v36 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 38]
at java.util.LinkedList.listIterator(LinkedList.java:868) [bci: 11]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:239) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v37 
=== Predecessor ===
v29 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4603235571689833653
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v100 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.isPositionIndex(LinkedList.java:541) [bci: 9]
at java.util.LinkedList.checkPositionIndex(LinkedList.java:559) [bci: 2]
at java.util.LinkedList.listIterator(LinkedList.java:867) [bci: 2]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:239) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v103 
=== Usages ===
=== Predecessor ===
v31 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v103  <|@  <|@
f <@~|@floating>@ <|@
tid v49 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.LinkedList.isPositionIndex(LinkedList.java:541) [bci: 9]
at java.util.LinkedList.checkPositionIndex(LinkedList.java:559) [bci: 2]
at java.util.LinkedList.listIterator(LinkedList.java:867) [bci: 2]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:239) [bci: 1]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i204 
y: i3 
=== Succesors ===
=== Usages ===
v103 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i204 y: i3  <|@  <|@
f <@*|@fixed>@ <|@
tid v103 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.isPositionIndex(LinkedList.java:541) [bci: 9]
at java.util.LinkedList.checkPositionIndex(LinkedList.java:559) [bci: 2]
at java.util.LinkedList.listIterator(LinkedList.java:867) [bci: 2]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:239) [bci: 1]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v49 
=== Succesors ===
trueSuccessor: v102 
falseSuccessor: v30 
=== Usages ===
=== Predecessor ===
v100 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v49 #trueSuccessor: v102 #falseSuccessor: v30  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B8" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v102 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.isPositionIndex(LinkedList.java:541) [bci: 9]
at java.util.LinkedList.checkPositionIndex(LinkedList.java:559) [bci: 2]
at java.util.LinkedList.listIterator(LinkedList.java:867) [bci: 2]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:239) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v124 
=== Usages ===
=== Predecessor ===
v103 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v124  <|@  <|@
f <@~|@floating>@ <|@
tid i125 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -21267
stableDimension: 0
stamp: i32 [-21267] ⇊00000000ffffaced ⇈00000000ffffaced
stampKind: i32
value: int[-21267|0xffffffffffffaced]
=== Inputs ===
=== Succesors ===
=== Usages ===
i126 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v124 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v123 
=== Predecessor ===
v102 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B9" 
    xhandlers
    flags 
    probability 4603235571689833653
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v30 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 33]
at java.util.LinkedList.listIterator(LinkedList.java:868) [bci: 11]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:239) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v64 
=== Usages ===
=== Predecessor ===
v103 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v64  <|@  <|@
f <@~|@floating>@ <|@
tid i61 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.RightShiftNode$$Lambda$143/1909420937@4b2846e5
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:569) [bci: 6]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 35]
at java.util.LinkedList.listIterator(LinkedList.java:868) [bci: 11]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:239) [bci: 1]
stamp: i32 [-1073741824 - 1073741823]
=== Inputs ===
x: i204 
y: i60 
=== Succesors ===
=== Usages ===
v73 
=== Predecessor ===
- >@ <|@
instruction <@>>|@org.graalvm.compiler.nodes.calc.RightShiftNode>@ x: i204 y: i60  <|@  <|@
f <@~|@floating>@ <|@
tid v73 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:569) [bci: 7]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 35]
at java.util.LinkedList.listIterator(LinkedList.java:868) [bci: 11]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:239) [bci: 1]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i61 
y: i60 
=== Succesors ===
=== Usages ===
v64 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i61 y: i60  <|@  <|@
f <@*|@fixed>@ <|@
tid v64 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:569) [bci: 7]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 35]
at java.util.LinkedList.listIterator(LinkedList.java:868) [bci: 11]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:239) [bci: 1]
stamp: void
trueSuccessorProbability: 0.2752428105646316
=== Inputs ===
condition: v73 
=== Succesors ===
trueSuccessor: v63 
falseSuccessor: v62 
=== Usages ===
=== Predecessor ===
v30 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v73 #trueSuccessor: v63 #falseSuccessor: v62  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4594739322477394204
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v63 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:575) [bci: 35]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 35]
at java.util.LinkedList.listIterator(LinkedList.java:868) [bci: 11]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:239) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v107 
=== Usages ===
=== Predecessor ===
v64 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v107  <|@  <|@
f <@~|@floating>@ <|@
tid i69 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:576) [bci: 45]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 35]
at java.util.LinkedList.listIterator(LinkedList.java:868) [bci: 11]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:239) [bci: 1]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1] ⇊00000000ffffffff
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i70 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i70 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:576) [bci: 45]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 35]
at java.util.LinkedList.listIterator(LinkedList.java:868) [bci: 11]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:239) [bci: 1]
stamp: i32
=== Inputs ===
x: i204 
y: i69 
=== Succesors ===
=== Usages ===
v74 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i204 y: i69  <|@  <|@
f <@~|@floating>@ <|@
tid v74 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:576) [bci: 49]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 35]
at java.util.LinkedList.listIterator(LinkedList.java:868) [bci: 11]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:239) [bci: 1]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i70 
y: i60 
=== Succesors ===
=== Usages ===
v107 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i70 y: i60  <|@  <|@
f <@*|@fixed>@ <|@
tid v107 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:576) [bci: 49]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 35]
at java.util.LinkedList.listIterator(LinkedList.java:868) [bci: 11]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:239) [bci: 1]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v74 
=== Succesors ===
trueSuccessor: v104 
falseSuccessor: v106 
=== Usages ===
=== Predecessor ===
v63 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v74 #trueSuccessor: v104 #falseSuccessor: v106  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B10" 
    xhandlers
    flags 
    probability 4594739322477394204
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v104 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:576) [bci: 49]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 35]
at java.util.LinkedList.listIterator(LinkedList.java:868) [bci: 11]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:239) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: a205 
=== Usages ===
=== Predecessor ===
v107 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a205  <|@  <|@
f <@~|@floating>@ <|@
tid v210 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a205 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a205 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: LinkedList.last
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:575) [bci: 36]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 35]
at java.util.LinkedList.listIterator(LinkedList.java:868) [bci: 11]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:239) [bci: 1]
nullCheck: false
stamp: n# Ljava/util/LinkedList$Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v210 
=== Succesors ===
next: v79 
=== Usages ===
a90 a122 
=== Predecessor ===
v104 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v210 #next: v79  <|@  <|@
f <@~|@floating>@ <|@
tid a90 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:575) [bci: 36]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 35]
at java.util.LinkedList.listIterator(LinkedList.java:868) [bci: 11]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:239) [bci: 1]
op: Uncompress
stamp: a# Ljava/util/LinkedList$Node;
=== Inputs ===
value: a205 
=== Succesors ===
=== Usages ===
a39 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a205  <|@  <|@
f <@*|@fixed>@ <|@
tid v79 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v37 
=== Predecessor ===
a205 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v106 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:576) [bci: 49]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 35]
at java.util.LinkedList.listIterator(LinkedList.java:868) [bci: 11]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:239) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v129 
=== Usages ===
=== Predecessor ===
v107 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v129  <|@  <|@
f <@~|@floating>@ <|@
tid i130 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -23315
stableDimension: 0
stamp: i32 [-23315] ⇊00000000ffffa4ed ⇈00000000ffffa4ed
stampKind: i32
value: int[-23315|0xffffffffffffa4ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i126 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v129 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v123 
=== Predecessor ===
v106 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B3" "B7" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i126 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-23315 - -21267] ⇊00000000ffffa4ed ⇈00000000ffffaced
valueDescription: i32
=== Inputs ===
merge: v123 
values: i125 i130 
=== Succesors ===
=== Usages ===
v128 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v123 values: i125 i130  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v123 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v124 v129 
=== Succesors ===
next: v128 
=== Usages ===
i126 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v124 v129 #next: v128  <|@  <|@
tid ?2 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<AbstractSequentialList.iterator()>
duringCall: false
localsSize: 1
locksSize: 0
rethrowException: false
sourceFile: AbstractSequentialList.java
sourceLine: 239
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 
=== Succesors ===
=== Usages ===
v128 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1  <|@  <|@
f <@*|@fixed>@ <|@
tid v128 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?2 
actionAndReason: i126 
speculation: a32 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v123 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?2 actionAndReason: i126 speculation: a32  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B10" 
    xhandlers
    flags 
    probability 4601006673113591004
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v62 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:570) [bci: 10]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 35]
at java.util.LinkedList.listIterator(LinkedList.java:868) [bci: 11]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:239) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: a206 
=== Usages ===
=== Predecessor ===
v64 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a206  <|@  <|@
f <@~|@floating>@ <|@
tid v211 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a206 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a206 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: LinkedList.first
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:570) [bci: 11]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 35]
at java.util.LinkedList.listIterator(LinkedList.java:868) [bci: 11]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:239) [bci: 1]
nullCheck: false
stamp: n# Ljava/util/LinkedList$Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v211 
=== Succesors ===
next: v38 
=== Usages ===
a95 a122 
=== Predecessor ===
v62 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v211 #next: v38  <|@  <|@
f <@~|@floating>@ <|@
tid a95 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:570) [bci: 11]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 35]
at java.util.LinkedList.listIterator(LinkedList.java:868) [bci: 11]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:239) [bci: 1]
op: Uncompress
stamp: a# Ljava/util/LinkedList$Node;
=== Inputs ===
value: a206 
=== Succesors ===
=== Usages ===
a39 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a206  <|@  <|@
f <@*|@fixed>@ <|@
tid v38 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 38]
at java.util.LinkedList.listIterator(LinkedList.java:868) [bci: 11]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:239) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v37 
=== Predecessor ===
a206 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B1" "B9" "B6" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a39 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 38]
at java.util.LinkedList.listIterator(LinkedList.java:868) [bci: 11]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:239) [bci: 1]
stamp: a# Ljava/util/LinkedList$Node;
valueDescription: a -
=== Inputs ===
merge: v37 
values: a32 a95 a90 
=== Succesors ===
=== Usages ===
?40 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v37 values: a32 a95 a90  <|@  <|@
f <@~|@floating>@ <|@
tid a122 <|@
d <@d|@=== Debug Properties ===
stamp: n# Ljava/util/LinkedList$Node;
valueDescription: n -
=== Inputs ===
merge: v37 
values: a121 a206 a205 
=== Succesors ===
=== Usages ===
v187 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v37 values: a121 a206 a205  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v37 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 38]
at java.util.LinkedList.listIterator(LinkedList.java:868) [bci: 11]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:239) [bci: 1]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v36 v38 v79 
=== Succesors ===
next: j134 
=== Usages ===
a39 a122 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v36 v38 v79 #next: j134  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j134 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j154 
=== Usages ===
v212 v213 
=== Predecessor ===
v37 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j154  <|@  <|@
f <@~|@floating>@ <|@
tid v212 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j134 
index: - 
=== Succesors ===
=== Usages ===
j154 v156 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j134 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j154 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v212 
=== Succesors ===
next: j155 
=== Usages ===
j192 j160 v217 
=== Predecessor ===
j134 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v212 #next: j155  <|@  <|@
f <@~|@floating>@ <|@
tid v213 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j134 
index: - 
=== Succesors ===
=== Usages ===
j155 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j134 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j155 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v213 
=== Succesors ===
next: i207 
=== Usages ===
v139 
=== Predecessor ===
j154 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v213 #next: i207  <|@  <|@
f <@~|@floating>@ <|@
tid v209 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i207 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i207 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractList.modCount
nodeSourcePosition: at java.util.LinkedList$ListItr.<init>(LinkedList.java:875) [bci: 14]
at java.util.LinkedList.listIterator(LinkedList.java:868) [bci: 11]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:239) [bci: 1]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v209 
=== Succesors ===
next: v142 
=== Usages ===
v183 ?56 
=== Predecessor ===
j155 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v209 #next: v142  <|@  <|@
f <@~|@floating>@ <|@
tid j191 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 32
stableDimension: 0
stamp: i64 [32] ⇊0000000000000020 ⇈0000000000000020
stampKind: i64
value: long[32|0x20]
=== Inputs ===
=== Succesors ===
=== Usages ===
j192 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j192 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j154 
y: j191 
=== Succesors ===
=== Usages ===
v139 v156 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j154 y: j191  <|@  <|@
f <@~|@floating>@ <|@
tid v139 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j155 
y: j192 
=== Succesors ===
=== Usages ===
v142 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j155 y: j192  <|@  <|@
f <@*|@fixed>@ <|@
tid v142 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v139 
=== Succesors ===
trueSuccessor: v140 
falseSuccessor: v141 
=== Usages ===
=== Predecessor ===
i207 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v139 #trueSuccessor: v140 #falseSuccessor: v141  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v140 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a147 
=== Usages ===
=== Predecessor ===
v142 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a147  <|@  <|@
tid ?6 <|@
d <@d|@=== Debug Properties ===
bci: 1
code: ResolvedJavaMethodBytecode<AbstractSequentialList.iterator()>
duringCall: true
localsSize: 1
locksSize: 0
nodeSourcePosition: at java.util.LinkedList.listIterator(LinkedList.java:867) [bci: 2]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:239) [bci: 1]
rethrowException: false
sourceFile: AbstractSequentialList.java
sourceLine: 239
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 
=== Succesors ===
=== Usages ===
?7 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1  <|@  <|@
tid ?7 <|@
d <@d|@=== Debug Properties ===
bci: 2
code: ResolvedJavaMethodBytecode<AbstractList.listIterator()>
duringCall: true
localsSize: 1
locksSize: 0
nodeSourcePosition: at java.util.LinkedList.listIterator(LinkedList.java:867) [bci: 2]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:239) [bci: 1]
rethrowException: false
sourceFile: AbstractList.java
sourceLine: 299
stackSize: 0
=== Inputs ===
outerFrameState: ?6 
values: a1 
=== Succesors ===
=== Usages ===
?47 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?6 values: a1  <|@  <|@
tid a54 <|@
d <@d|@=== Debug Properties ===
fields: [Ljdk.vm.ci.hotspot.HotSpotResolvedJavaField;@7d58952e
hasIdentity: true
objectId: 0
stamp: a!# Ljava/util/LinkedList$ListItr;
type: HotSpotType<Ljava/util/LinkedList$ListItr;, resolved>
=== Inputs ===
=== Succesors ===
=== Usages ===
?40 ?40 ?47 ?56 
=== Predecessor ===
- >@ <|@
instruction <@VirtualInstance|@org.graalvm.compiler.nodes.virtual.VirtualInstanceNode>@  <|@  <|@
tid ?47 <|@
d <@d|@=== Debug Properties ===
bci: 11
code: ResolvedJavaMethodBytecode<LinkedList.listIterator(int)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: LinkedList.java
sourceLine: 868
stackSize: 1
=== Inputs ===
outerFrameState: ?7 
values: - - a54 
=== Succesors ===
=== Usages ===
?40 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?7 values: - - a54  <|@  <|@
tid ?56 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a54 
values: - i207 - - a1 
=== Succesors ===
=== Usages ===
?40 
=== Predecessor ===
- >@ <|@
instruction <@VirtualObjectState|@org.graalvm.compiler.virtual.nodes.VirtualObjectState>@ object: a54 values: - i207 - - a1  <|@  <|@
tid ?40 <|@
d <@d|@=== Debug Properties ===
bci: 38
code: ResolvedJavaMethodBytecode<LinkedList$ListItr.<init>(LinkedList, int)>
duringCall: false
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: LinkedList.java
sourceLine: 879
stackSize: 2
=== Inputs ===
outerFrameState: ?47 
values: a54 - i3 a54 a39 
virtualObjectMappings: ?56 
=== Succesors ===
=== Usages ===
a147 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?47 values: a54 - i3 a54 a39 virtualObjectMappings: ?56  <|@  <|@
f <@~|@floating>@ <|@
tid v132 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<[I, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[I, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a147 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i194 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 4
stableDimension: 0
stamp: i32 [4] ⇊0000000000000004 ⇈0000000000000004
stampKind: i32
value: int[4|0x4]
=== Inputs ===
=== Succesors ===
=== Usages ===
a147 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a147 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?40 
arguments: v132 i194 i60 
=== Succesors ===
next: j148 
=== Usages ===
j148 
=== Predecessor ===
v140 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?40 arguments: v132 i194 i60 #next: j148  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j148 <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a147 
=== Succesors ===
next: v161 
=== Usages ===
j160 
=== Predecessor ===
a147 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a147 #next: v161  <|@  <|@
f <@*|@fixed>@ <|@
tid v161 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v158 
=== Predecessor ===
j148 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v141 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v156 
=== Usages ===
=== Predecessor ===
v142 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v156  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v156 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v212 
value: j192 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v152 
=== Usages ===
=== Predecessor ===
v141 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v212 value: j192 stateAfter: - lastLocationAccess: - #next: v152  <|@  <|@
f <@~|@floating>@ <|@
tid v217 <|@
d <@d|@=== Debug Properties ===
displacement: 224
scale: Times1
stamp: void*
=== Inputs ===
base: j154 
index: - 
=== Succesors ===
=== Usages ===
v152 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j154 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v152 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v217 
=== Succesors ===
next: v159 
=== Usages ===
=== Predecessor ===
v156 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v217 #next: v159  <|@  <|@
f <@*|@fixed>@ <|@
tid v159 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v158 
=== Predecessor ===
v152 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B11" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j160 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v158 
values: j154 j148 
=== Succesors ===
=== Usages ===
v216 v215 a111 v218 v219 v220 v221 v222 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v158 values: j154 j148  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v158 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v159 v161 
=== Succesors ===
next: a111 
=== Usages ===
j160 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v159 v161 #next: a111  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a111 <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j160 
=== Succesors ===
next: j172 
=== Usages ===
a119 
=== Predecessor ===
v158 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j160 #next: j172  <|@  <|@
f <@~|@floating>@ <|@
tid v166 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/util/LinkedList$ListItr;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Ljava/util/LinkedList$ListItr;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
j167 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j167 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
input: v166 
=== Succesors ===
=== Usages ===
v214 
=== Predecessor ===
- >@ <|@
instruction <@PointerCast|@org.graalvm.compiler.hotspot.word.PointerCastNode>@ input: v166  <|@  <|@
f <@~|@floating>@ <|@
tid v214 <|@
d <@d|@=== Debug Properties ===
displacement: 168
scale: Times1
stamp: void*
=== Inputs ===
base: j167 
index: - 
=== Succesors ===
=== Usages ===
j172 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j167 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j172 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v214 
=== Succesors ===
next: v173 
=== Usages ===
v173 
=== Predecessor ===
a111 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v214 #next: v173  <|@  <|@
f <@~|@floating>@ <|@
tid v215 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j160 
index: - 
=== Succesors ===
=== Usages ===
v173 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j160 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v173 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v215 
value: j172 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v177 
=== Usages ===
=== Predecessor ===
j172 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v215 value: j172 stateAfter: - lastLocationAccess: - #next: v177  <|@  <|@
f <@~|@floating>@ <|@
tid v216 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j160 
index: - 
=== Succesors ===
=== Usages ===
v177 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j160 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v197 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/util/LinkedList$ListItr;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/LinkedList$ListItr;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v177 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v177 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v216 
value: v197 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v181 
=== Usages ===
=== Predecessor ===
v173 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v216 value: v197 stateAfter: - lastLocationAccess: - #next: v181  <|@  <|@
f <@~|@floating>@ <|@
tid v218 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j160 
index: - 
=== Succesors ===
=== Usages ===
v181 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j160 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v181 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v218 
value: i3 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v183 
=== Usages ===
=== Predecessor ===
v177 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v218 value: i3 stateAfter: - lastLocationAccess: - #next: v183  <|@  <|@
f <@~|@floating>@ <|@
tid v219 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j160 
index: - 
=== Succesors ===
=== Usages ===
v183 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j160 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v183 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v219 
value: i207 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v185 
=== Usages ===
=== Predecessor ===
v181 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v219 value: i207 stateAfter: - lastLocationAccess: - #next: v185  <|@  <|@
f <@~|@floating>@ <|@
tid v220 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: j160 
index: - 
=== Succesors ===
=== Usages ===
v185 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j160 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v185 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v220 
value: i3 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v187 
=== Usages ===
=== Predecessor ===
v183 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v220 value: i3 stateAfter: - lastLocationAccess: - #next: v187  <|@  <|@
f <@~|@floating>@ <|@
tid v221 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: j160 
index: - 
=== Succesors ===
=== Usages ===
v187 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j160 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v187 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v221 
value: a122 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v190 
=== Usages ===
=== Predecessor ===
v185 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v221 value: a122 stateAfter: - lastLocationAccess: - #next: v190  <|@  <|@
f <@~|@floating>@ <|@
tid v222 <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: j160 
index: - 
=== Succesors ===
=== Usages ===
v190 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j160 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a116 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Compress
stamp: n!# Ljava/util/LinkedList;
=== Inputs ===
value: a1 
=== Succesors ===
=== Usages ===
v190 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v190 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v222 
value: a116 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a119 
=== Usages ===
=== Predecessor ===
v187 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v222 value: a116 stateAfter: - lastLocationAccess: - #next: a119  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a119 <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a111 
=== Succesors ===
next: v120 
=== Usages ===
v13 
=== Predecessor ===
v190 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a111 #next: v120  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v120 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v13 
=== Usages ===
=== Predecessor ===
a119 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v13  <|@  <|@
f <@*|@fixed>@ <|@
tid v13 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:239) [bci: 4]
stamp: void
=== Inputs ===
result: a119 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v120 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a119 memoryMap: -  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: i204 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: i204  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Ljava/util/LinkedList;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?2 v210 ?6 ?7 v208 v211 v209 a116 ?56 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v208 <|@
result [v0|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i204 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i204 <|@
result v1|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: LinkedList.size
nodeSourcePosition: at java.util.LinkedList.isPositionIndex(LinkedList.java:541) [bci: 6]
at java.util.LinkedList.checkPositionIndex(LinkedList.java:559) [bci: 2]
at java.util.LinkedList.listIterator(LinkedList.java:867) [bci: 2]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:239) [bci: 1]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v208 
=== Succesors ===
next: v31 
=== Usages ===
v49 v28 i61 i70 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v208 #next: v31  <|@  <|@
f <@~|@floating>@ <|@
tid i3 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 1]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:239) [bci: 1]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
?40 v49 v28 v185 v181 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v28 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 26]
at java.util.LinkedList.listIterator(LinkedList.java:868) [bci: 11]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:239) [bci: 1]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i204 
y: i3 
=== Succesors ===
=== Usages ===
v31 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i204 y: i3  <|@  <|@
f <@~|@floating>@ <|@
tid a32 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 29]
at java.util.LinkedList.listIterator(LinkedList.java:868) [bci: 11]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:239) [bci: 1]
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
a39 v128 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i60 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:569) [bci: 5]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 35]
at java.util.LinkedList.listIterator(LinkedList.java:868) [bci: 11]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:239) [bci: 1]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i61 v73 v74 a147 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v31 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 26]
at java.util.LinkedList.listIterator(LinkedList.java:868) [bci: 11]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:239) [bci: 1]
stamp: void
trueSuccessorProbability: 0.4381880536401267
=== Inputs ===
condition: v28 
=== Succesors ===
trueSuccessor: v29 
falseSuccessor: v100 
=== Usages ===
=== Predecessor ===
i204 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v28 #trueSuccessor: v29 #falseSuccessor: v100  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@59564f77 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v1|DWORD, y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.4381880536401267 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B10" 
    xhandlers
    flags 
    probability 4601565314138273430
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v29 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 29]
at java.util.LinkedList.listIterator(LinkedList.java:868) [bci: 11]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:239) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v36 
=== Usages ===
=== Predecessor ===
v31 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v36  <|@  <|@
f <@~|@floating>@ <|@
tid a121 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: n - NULL
stampKind: n -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
a122 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v36 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 38]
at java.util.LinkedList.listIterator(LinkedList.java:868) [bci: 11]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:239) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v37 
=== Predecessor ===
v29 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[Object[null], Object[null]] destination: B1 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4603235571689833653
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v100 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.isPositionIndex(LinkedList.java:541) [bci: 9]
at java.util.LinkedList.checkPositionIndex(LinkedList.java:559) [bci: 2]
at java.util.LinkedList.listIterator(LinkedList.java:867) [bci: 2]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:239) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v103 
=== Usages ===
=== Predecessor ===
v31 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v103  <|@  <|@
f <@~|@floating>@ <|@
tid v49 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.LinkedList.isPositionIndex(LinkedList.java:541) [bci: 9]
at java.util.LinkedList.checkPositionIndex(LinkedList.java:559) [bci: 2]
at java.util.LinkedList.listIterator(LinkedList.java:867) [bci: 2]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:239) [bci: 1]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i204 
y: i3 
=== Succesors ===
=== Usages ===
v103 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i204 y: i3  <|@  <|@
f <@*|@fixed>@ <|@
tid v103 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.isPositionIndex(LinkedList.java:541) [bci: 9]
at java.util.LinkedList.checkPositionIndex(LinkedList.java:559) [bci: 2]
at java.util.LinkedList.listIterator(LinkedList.java:867) [bci: 2]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:239) [bci: 1]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v49 
=== Succesors ===
trueSuccessor: v102 
falseSuccessor: v30 
=== Usages ===
=== Predecessor ===
v100 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v49 #trueSuccessor: v102 #falseSuccessor: v30  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v1|DWORD, y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B8" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v102 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.isPositionIndex(LinkedList.java:541) [bci: 9]
at java.util.LinkedList.checkPositionIndex(LinkedList.java:559) [bci: 2]
at java.util.LinkedList.listIterator(LinkedList.java:867) [bci: 2]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:239) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v124 
=== Usages ===
=== Predecessor ===
v103 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v124  <|@  <|@
f <@~|@floating>@ <|@
tid i125 <|@
result int[-21267|0xffffffffffffaced] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -21267
stableDimension: 0
stamp: i32 [-21267] ⇊00000000ffffaced ⇈00000000ffffaced
stampKind: i32
value: int[-21267|0xffffffffffffaced]
=== Inputs ===
=== Succesors ===
=== Usages ===
i126 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v124 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v123 
=== Predecessor ===
v102 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-21267|0xffffffffffffaced]] destination: B3 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B9" 
    xhandlers
    flags 
    probability 4603235571689833653
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v30 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 33]
at java.util.LinkedList.listIterator(LinkedList.java:868) [bci: 11]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:239) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v64 
=== Usages ===
=== Predecessor ===
v103 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v64  <|@  <|@
f <@~|@floating>@ <|@
tid i61 <|@
result v2|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.RightShiftNode$$Lambda$143/1909420937@4b2846e5
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:569) [bci: 6]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 35]
at java.util.LinkedList.listIterator(LinkedList.java:868) [bci: 11]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:239) [bci: 1]
stamp: i32 [-1073741824 - 1073741823]
=== Inputs ===
x: i204 
y: i60 
=== Succesors ===
=== Usages ===
v73 
=== Predecessor ===
- >@ <|@
instruction <@>>|@org.graalvm.compiler.nodes.calc.RightShiftNode>@ x: i204 y: i60  <|@  <|@
f <@~|@floating>@ <|@
tid v73 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:569) [bci: 7]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 35]
at java.util.LinkedList.listIterator(LinkedList.java:868) [bci: 11]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:239) [bci: 1]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i61 
y: i60 
=== Succesors ===
=== Usages ===
v64 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i61 y: i60  <|@  <|@
f <@*|@fixed>@ <|@
tid v64 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:569) [bci: 7]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 35]
at java.util.LinkedList.listIterator(LinkedList.java:868) [bci: 11]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:239) [bci: 1]
stamp: void
trueSuccessorProbability: 0.2752428105646316
=== Inputs ===
condition: v73 
=== Succesors ===
trueSuccessor: v63 
falseSuccessor: v62 
=== Usages ===
=== Predecessor ===
v30 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v73 #trueSuccessor: v63 #falseSuccessor: v62  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = SAR v1|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v2|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.2752428105646316 condition: < trueDestination: B4 -> B5 falseDestination: B4 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4594739322477394204
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v63 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:575) [bci: 35]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 35]
at java.util.LinkedList.listIterator(LinkedList.java:868) [bci: 11]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:239) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v107 
=== Usages ===
=== Predecessor ===
v64 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v107  <|@  <|@
f <@~|@floating>@ <|@
tid i69 <|@
result int[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:576) [bci: 45]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 35]
at java.util.LinkedList.listIterator(LinkedList.java:868) [bci: 11]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:239) [bci: 1]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1] ⇊00000000ffffffff
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i70 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i70 <|@
result v3|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:576) [bci: 45]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 35]
at java.util.LinkedList.listIterator(LinkedList.java:868) [bci: 11]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:239) [bci: 1]
stamp: i32
=== Inputs ===
x: i204 
y: i69 
=== Succesors ===
=== Usages ===
v74 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i204 y: i69  <|@  <|@
f <@~|@floating>@ <|@
tid v74 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:576) [bci: 49]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 35]
at java.util.LinkedList.listIterator(LinkedList.java:868) [bci: 11]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:239) [bci: 1]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i70 
y: i60 
=== Succesors ===
=== Usages ===
v107 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i70 y: i60  <|@  <|@
f <@*|@fixed>@ <|@
tid v107 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:576) [bci: 49]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 35]
at java.util.LinkedList.listIterator(LinkedList.java:868) [bci: 11]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:239) [bci: 1]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v74 
=== Succesors ===
trueSuccessor: v104 
falseSuccessor: v106 
=== Usages ===
=== Predecessor ===
v63 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v74 #trueSuccessor: v104 #falseSuccessor: v106  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = DEC v1|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v3|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B5 -> B6 falseDestination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B10" 
    xhandlers
    flags 
    probability 4594739322477394204
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v104 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:576) [bci: 49]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 35]
at java.util.LinkedList.listIterator(LinkedList.java:868) [bci: 11]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:239) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: a205 
=== Usages ===
=== Predecessor ===
v107 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a205  <|@  <|@
f <@~|@floating>@ <|@
tid v210 <|@
result [v0|QWORD[.] + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a205 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a205 <|@
result v4|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: LinkedList.last
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:575) [bci: 36]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 35]
at java.util.LinkedList.listIterator(LinkedList.java:868) [bci: 11]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:239) [bci: 1]
nullCheck: false
stamp: n# Ljava/util/LinkedList$Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v210 
=== Succesors ===
next: v79 
=== Usages ===
a90 a122 
=== Predecessor ===
v104 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v210 #next: v79  <|@  <|@
f <@~|@floating>@ <|@
tid a90 <|@
result v5|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:575) [bci: 36]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 35]
at java.util.LinkedList.listIterator(LinkedList.java:868) [bci: 11]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:239) [bci: 1]
op: Uncompress
stamp: a# Ljava/util/LinkedList$Node;
=== Inputs ===
value: a205 
=== Succesors ===
=== Usages ===
a39 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a205  <|@  <|@
f <@*|@fixed>@ <|@
tid v79 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v37 
=== Predecessor ===
a205 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v4|DWORD[.] = MOV [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@3739be59 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v5|QWORD[.], v4|DWORD[.]] destination: B6 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v106 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:576) [bci: 49]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 35]
at java.util.LinkedList.listIterator(LinkedList.java:868) [bci: 11]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:239) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v129 
=== Usages ===
=== Predecessor ===
v107 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v129  <|@  <|@
f <@~|@floating>@ <|@
tid i130 <|@
result int[-23315|0xffffffffffffa4ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -23315
stableDimension: 0
stamp: i32 [-23315] ⇊00000000ffffa4ed ⇈00000000ffffa4ed
stampKind: i32
value: int[-23315|0xffffffffffffa4ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i126 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v129 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v123 
=== Predecessor ===
v106 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-23315|0xffffffffffffa4ed]] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B3" "B7" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i126 <|@
result v6|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-23315 - -21267] ⇊00000000ffffa4ed ⇈00000000ffffaced
valueDescription: i32
=== Inputs ===
merge: v123 
values: i125 i130 
=== Succesors ===
=== Usages ===
v128 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v123 values: i125 i130  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v123 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v124 v129 
=== Succesors ===
next: v128 
=== Usages ===
i126 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v124 v129 #next: v128  <|@  <|@
tid ?2 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<AbstractSequentialList.iterator()>
duringCall: false
localsSize: 1
locksSize: 0
rethrowException: false
sourceFile: AbstractSequentialList.java
sourceLine: 239
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 
=== Succesors ===
=== Usages ===
v128 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1  <|@  <|@
f <@*|@fixed>@ <|@
tid v128 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?2 
actionAndReason: i126 
speculation: a32 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v123 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?2 actionAndReason: i126 speculation: a32  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v6|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:239) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B10" 
    xhandlers
    flags 
    probability 4601006673113591004
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v62 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:570) [bci: 10]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 35]
at java.util.LinkedList.listIterator(LinkedList.java:868) [bci: 11]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:239) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: a206 
=== Usages ===
=== Predecessor ===
v64 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a206  <|@  <|@
f <@~|@floating>@ <|@
tid v211 <|@
result [v0|QWORD[.] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a206 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a206 <|@
result v7|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: LinkedList.first
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:570) [bci: 11]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 35]
at java.util.LinkedList.listIterator(LinkedList.java:868) [bci: 11]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:239) [bci: 1]
nullCheck: false
stamp: n# Ljava/util/LinkedList$Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v211 
=== Succesors ===
next: v38 
=== Usages ===
a95 a122 
=== Predecessor ===
v62 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v211 #next: v38  <|@  <|@
f <@~|@floating>@ <|@
tid a95 <|@
result v8|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:570) [bci: 11]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 35]
at java.util.LinkedList.listIterator(LinkedList.java:868) [bci: 11]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:239) [bci: 1]
op: Uncompress
stamp: a# Ljava/util/LinkedList$Node;
=== Inputs ===
value: a206 
=== Succesors ===
=== Usages ===
a39 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a206  <|@  <|@
f <@*|@fixed>@ <|@
tid v38 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 38]
at java.util.LinkedList.listIterator(LinkedList.java:868) [bci: 11]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:239) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v37 
=== Predecessor ===
a206 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v7|DWORD[.] = MOV [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|QWORD[.] = UNCOMPRESSPOINTER (input: v7|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@3739be59 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v8|QWORD[.], v7|DWORD[.]] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B1" "B9" "B6" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a39 <|@
result v9|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 38]
at java.util.LinkedList.listIterator(LinkedList.java:868) [bci: 11]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:239) [bci: 1]
stamp: a# Ljava/util/LinkedList$Node;
valueDescription: a -
=== Inputs ===
merge: v37 
values: a32 a95 a90 
=== Succesors ===
=== Usages ===
?40 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v37 values: a32 a95 a90  <|@  <|@
f <@~|@floating>@ <|@
tid a122 <|@
result v10|DWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: n# Ljava/util/LinkedList$Node;
valueDescription: n -
=== Inputs ===
merge: v37 
values: a121 a206 a205 
=== Succesors ===
=== Usages ===
v187 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v37 values: a121 a206 a205  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v37 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 38]
at java.util.LinkedList.listIterator(LinkedList.java:868) [bci: 11]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:239) [bci: 1]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v36 v38 v79 
=== Succesors ===
next: j134 
=== Usages ===
a39 a122 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v36 v38 v79 #next: j134  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j134 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j154 
=== Usages ===
v212 v213 
=== Predecessor ===
v37 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j154  <|@  <|@
f <@~|@floating>@ <|@
tid v212 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j134 
index: - 
=== Succesors ===
=== Usages ===
j154 v156 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j134 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j154 <|@
result v11|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v212 
=== Succesors ===
next: j155 
=== Usages ===
j192 j160 v217 
=== Predecessor ===
j134 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v212 #next: j155  <|@  <|@
f <@~|@floating>@ <|@
tid v213 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j134 
index: - 
=== Succesors ===
=== Usages ===
j155 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j134 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j155 <|@
result v12|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v213 
=== Succesors ===
next: i207 
=== Usages ===
v139 
=== Predecessor ===
j154 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v213 #next: i207  <|@  <|@
f <@~|@floating>@ <|@
tid v209 <|@
result [v0|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i207 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i207 <|@
result v13|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractList.modCount
nodeSourcePosition: at java.util.LinkedList$ListItr.<init>(LinkedList.java:875) [bci: 14]
at java.util.LinkedList.listIterator(LinkedList.java:868) [bci: 11]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:239) [bci: 1]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v209 
=== Succesors ===
next: v142 
=== Usages ===
v183 ?56 
=== Predecessor ===
j155 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v209 #next: v142  <|@  <|@
f <@~|@floating>@ <|@
tid j191 <|@
result long[32|0x20] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 32
stableDimension: 0
stamp: i64 [32] ⇊0000000000000020 ⇈0000000000000020
stampKind: i64
value: long[32|0x20]
=== Inputs ===
=== Succesors ===
=== Usages ===
j192 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j192 <|@
result v14|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j154 
y: j191 
=== Succesors ===
=== Usages ===
v139 v156 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j154 y: j191  <|@  <|@
f <@~|@floating>@ <|@
tid v139 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j155 
y: j192 
=== Succesors ===
=== Usages ===
v142 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j155 y: j192  <|@  <|@
f <@*|@fixed>@ <|@
tid v142 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v139 
=== Succesors ===
trueSuccessor: v140 
falseSuccessor: v141 
=== Usages ===
=== Predecessor ===
i207 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v139 #trueSuccessor: v140 #falseSuccessor: v141  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v9|QWORD[.], v10|DWORD[.]] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = MOV [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = LEA [v11|QWORD + 32] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v14|QWORD, y: v12|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B10 -> B11 falseDestination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v140 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a147 
=== Usages ===
=== Predecessor ===
v142 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a147  <|@  <|@
tid ?6 <|@
d <@d|@=== Debug Properties ===
bci: 1
code: ResolvedJavaMethodBytecode<AbstractSequentialList.iterator()>
duringCall: true
localsSize: 1
locksSize: 0
nodeSourcePosition: at java.util.LinkedList.listIterator(LinkedList.java:867) [bci: 2]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:239) [bci: 1]
rethrowException: false
sourceFile: AbstractSequentialList.java
sourceLine: 239
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 
=== Succesors ===
=== Usages ===
?7 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1  <|@  <|@
tid ?7 <|@
d <@d|@=== Debug Properties ===
bci: 2
code: ResolvedJavaMethodBytecode<AbstractList.listIterator()>
duringCall: true
localsSize: 1
locksSize: 0
nodeSourcePosition: at java.util.LinkedList.listIterator(LinkedList.java:867) [bci: 2]
at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:239) [bci: 1]
rethrowException: false
sourceFile: AbstractList.java
sourceLine: 299
stackSize: 0
=== Inputs ===
outerFrameState: ?6 
values: a1 
=== Succesors ===
=== Usages ===
?47 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?6 values: a1  <|@  <|@
tid a54 <|@
d <@d|@=== Debug Properties ===
fields: [Ljdk.vm.ci.hotspot.HotSpotResolvedJavaField;@7d58952e
hasIdentity: true
objectId: 0
stamp: a!# Ljava/util/LinkedList$ListItr;
type: HotSpotType<Ljava/util/LinkedList$ListItr;, resolved>
=== Inputs ===
=== Succesors ===
=== Usages ===
?40 ?40 ?47 ?56 
=== Predecessor ===
- >@ <|@
instruction <@VirtualInstance|@org.graalvm.compiler.nodes.virtual.VirtualInstanceNode>@  <|@  <|@
tid ?47 <|@
d <@d|@=== Debug Properties ===
bci: 11
code: ResolvedJavaMethodBytecode<LinkedList.listIterator(int)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: LinkedList.java
sourceLine: 868
stackSize: 1
=== Inputs ===
outerFrameState: ?7 
values: - - a54 
=== Succesors ===
=== Usages ===
?40 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?7 values: - - a54  <|@  <|@
tid ?56 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a54 
values: - i207 - - a1 
=== Succesors ===
=== Usages ===
?40 
=== Predecessor ===
- >@ <|@
instruction <@VirtualObjectState|@org.graalvm.compiler.virtual.nodes.VirtualObjectState>@ object: a54 values: - i207 - - a1  <|@  <|@
tid ?40 <|@
d <@d|@=== Debug Properties ===
bci: 38
code: ResolvedJavaMethodBytecode<LinkedList$ListItr.<init>(LinkedList, int)>
duringCall: false
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: LinkedList.java
sourceLine: 879
stackSize: 2
=== Inputs ===
outerFrameState: ?47 
values: a54 - i3 a54 a39 
virtualObjectMappings: ?56 
=== Succesors ===
=== Usages ===
a147 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?47 values: a54 - i3 a54 a39 virtualObjectMappings: ?56  <|@  <|@
f <@~|@floating>@ <|@
tid v132 <|@
result v15|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<[I, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[I, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a147 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i194 <|@
result int[4|0x4] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 4
stableDimension: 0
stamp: i32 [4] ⇊0000000000000004 ⇈0000000000000004
stampKind: i32
value: int[4|0x4]
=== Inputs ===
=== Succesors ===
=== Usages ===
a147 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a147 <|@
result v16|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?40 
arguments: v132 i194 i60 
=== Succesors ===
next: j148 
=== Usages ===
j148 
=== Predecessor ===
v140 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?40 arguments: v132 i194 i60 #next: j148  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j148 <|@
result v16|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a147 
=== Succesors ===
next: v161 
=== Usages ===
j160 
=== Predecessor ===
a147 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a147 #next: v161  <|@  <|@
f <@*|@fixed>@ <|@
tid v161 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v158 
=== Predecessor ===
j148 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v15|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[4|0x4] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 38]
stack: vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=v13|DWORD,lastReturned=Object[null],next=Object[null],this$0=v0|QWORD[.]} v9|QWORD[.] 
locals: vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=v13|DWORD,lastReturned=Object[null],next=Object[null],this$0=v0|QWORD[.]} - int[0|0x0] 
java.util.LinkedList.listIterator(LinkedList.java:868) [bci: 11]
stack: vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=v13|DWORD,lastReturned=Object[null],next=Object[null],this$0=v0|QWORD[.]} 
locals: - - 
java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
locals: v0|QWORD[.] 
java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:239) [bci: 1]
locals: v0|QWORD[.] 
vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=v13|DWORD,lastReturned=Object[null],next=Object[null],this$0=v0|QWORD[.]} Ljava/util/LinkedList$ListItr; int[0|0x0] v13|DWORD Object[null] Object[null] v0|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:38, 11, 2, 1] <|@ <|@
      nr   -1  <|@ instruction v16|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v16|QWORD[.]] destination: B11 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v141 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v156 
=== Usages ===
=== Predecessor ===
v142 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v156  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v156 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v212 
value: j192 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v152 
=== Usages ===
=== Predecessor ===
v141 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v212 value: j192 stateAfter: - lastLocationAccess: - #next: v152  <|@  <|@
f <@~|@floating>@ <|@
tid v217 <|@
result [v11|QWORD + 224] <|@
d <@d|@=== Debug Properties ===
displacement: 224
scale: Times1
stamp: void*
=== Inputs ===
base: j154 
index: - 
=== Succesors ===
=== Usages ===
v152 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j154 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v152 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v217 
=== Succesors ===
next: v159 
=== Usages ===
=== Predecessor ===
v156 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v217 #next: v159  <|@  <|@
f <@*|@fixed>@ <|@
tid v159 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v158 
=== Predecessor ===
v152 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v14|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v11|QWORD + 224] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v11|QWORD] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B11" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j160 <|@
result v17|QWORD[*] <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v158 
values: j154 j148 
=== Succesors ===
=== Usages ===
v216 v215 a111 v218 v219 v220 v221 v222 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v158 values: j154 j148  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v158 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v159 v161 
=== Succesors ===
next: a111 
=== Usages ===
j160 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v159 v161 #next: a111  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a111 <|@
result v18|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j160 
=== Succesors ===
next: j172 
=== Usages ===
a119 
=== Predecessor ===
v158 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j160 #next: j172  <|@  <|@
f <@~|@floating>@ <|@
tid v166 <|@
result v19|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/util/LinkedList$ListItr;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Ljava/util/LinkedList$ListItr;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
j167 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j167 <|@
result v19|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
input: v166 
=== Succesors ===
=== Usages ===
v214 
=== Predecessor ===
- >@ <|@
instruction <@PointerCast|@org.graalvm.compiler.hotspot.word.PointerCastNode>@ input: v166  <|@  <|@
f <@~|@floating>@ <|@
tid v214 <|@
result [v19|QWORD + 168] <|@
d <@d|@=== Debug Properties ===
displacement: 168
scale: Times1
stamp: void*
=== Inputs ===
base: j167 
index: - 
=== Succesors ===
=== Usages ===
j172 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j167 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j172 <|@
result v20|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v214 
=== Succesors ===
next: v173 
=== Usages ===
v173 
=== Predecessor ===
a111 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v214 #next: v173  <|@  <|@
f <@~|@floating>@ <|@
tid v215 <|@
result [v17|QWORD[*]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j160 
index: - 
=== Succesors ===
=== Usages ===
v173 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j160 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v173 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v215 
value: j172 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v177 
=== Usages ===
=== Predecessor ===
j172 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v215 value: j172 stateAfter: - lastLocationAccess: - #next: v177  <|@  <|@
f <@~|@floating>@ <|@
tid v216 <|@
result [v17|QWORD[*] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j160 
index: - 
=== Succesors ===
=== Usages ===
v177 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j160 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v197 <|@
result meta{HotSpotType<Ljava/util/LinkedList$ListItr;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/util/LinkedList$ListItr;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/LinkedList$ListItr;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v177 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v177 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v216 
value: v197 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v181 
=== Usages ===
=== Predecessor ===
v173 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v216 value: v197 stateAfter: - lastLocationAccess: - #next: v181  <|@  <|@
f <@~|@floating>@ <|@
tid v218 <|@
result [v17|QWORD[*] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j160 
index: - 
=== Succesors ===
=== Usages ===
v181 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j160 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v181 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v218 
value: i3 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v183 
=== Usages ===
=== Predecessor ===
v177 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v218 value: i3 stateAfter: - lastLocationAccess: - #next: v183  <|@  <|@
f <@~|@floating>@ <|@
tid v219 <|@
result [v17|QWORD[*] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j160 
index: - 
=== Succesors ===
=== Usages ===
v183 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j160 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v183 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v219 
value: i207 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v185 
=== Usages ===
=== Predecessor ===
v181 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v219 value: i207 stateAfter: - lastLocationAccess: - #next: v185  <|@  <|@
f <@~|@floating>@ <|@
tid v220 <|@
result [v17|QWORD[*] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: j160 
index: - 
=== Succesors ===
=== Usages ===
v185 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j160 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v185 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v220 
value: i3 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v187 
=== Usages ===
=== Predecessor ===
v183 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v220 value: i3 stateAfter: - lastLocationAccess: - #next: v187  <|@  <|@
f <@~|@floating>@ <|@
tid v221 <|@
result [v17|QWORD[*] + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: j160 
index: - 
=== Succesors ===
=== Usages ===
v187 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j160 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v187 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v221 
value: a122 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v190 
=== Usages ===
=== Predecessor ===
v185 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v221 value: a122 stateAfter: - lastLocationAccess: - #next: v190  <|@  <|@
f <@~|@floating>@ <|@
tid v222 <|@
result [v17|QWORD[*] + 28] <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: j160 
index: - 
=== Succesors ===
=== Usages ===
v190 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j160 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a116 <|@
result v21|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Compress
stamp: n!# Ljava/util/LinkedList;
=== Inputs ===
value: a1 
=== Succesors ===
=== Usages ===
v190 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v190 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v222 
value: a116 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a119 
=== Usages ===
=== Predecessor ===
v187 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v222 value: a116 stateAfter: - lastLocationAccess: - #next: a119  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a119 <|@
result v18|QWORD[.] <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a111 
=== Succesors ===
next: v120 
=== Usages ===
v13 
=== Predecessor ===
v190 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a111 #next: v120  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v120 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v13 
=== Usages ===
=== Predecessor ===
a119 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v13  <|@  <|@
f <@*|@fixed>@ <|@
tid v13 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:239) [bci: 4]
stamp: void
=== Inputs ===
result: a119 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v120 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a119 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v17|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v18|QWORD[.] = MOVE v17|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/LinkedList$ListItr;, resolved>} <|@ <|@
      nr   -1  <|@ instruction v20|QWORD = MOV [v19|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v17|QWORD[*]], y: v20|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v17|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/LinkedList$ListItr;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v17|QWORD[*] + 12], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v17|QWORD[*] + 16], y: v13|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v17|QWORD[*] + 20], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v17|QWORD[*] + 24], y: v10|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v21|DWORD[.] = COMPRESSPOINTER (input: v0|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@3739be59 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v17|QWORD[*] + 28], y: v21|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v18|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@59564f77 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v1|DWORD, y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.4381880536401267 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4603235571689833653
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v1|DWORD, y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B9" 
    xhandlers
    flags 
    probability 4603235571689833653
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = SAR v1|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v2|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.2752428105646316 condition: < trueDestination: B4 -> B5 falseDestination: B4 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B10" 
    xhandlers
    flags 
    probability 4601006673113591004
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v7|DWORD[.] = MOV [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|QWORD[.] = UNCOMPRESSPOINTER (input: v7|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@3739be59 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v8|QWORD[.], v7|DWORD[.]] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B1" "B9" "B6" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v9|QWORD[.], v10|DWORD[.]] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = MOV [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = LEA [v11|QWORD + 32] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v14|QWORD, y: v12|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B10 -> B11 falseDestination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v14|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v11|QWORD + 224] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v11|QWORD] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B11" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v17|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v18|QWORD[.] = MOVE v17|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/LinkedList$ListItr;, resolved>} <|@ <|@
      nr   -1  <|@ instruction v20|QWORD = MOV [v19|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v17|QWORD[*]], y: v20|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v17|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/LinkedList$ListItr;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v17|QWORD[*] + 12], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v17|QWORD[*] + 16], y: v13|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v17|QWORD[*] + 20], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v17|QWORD[*] + 24], y: v10|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v21|DWORD[.] = COMPRESSPOINTER (input: v0|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@3739be59 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v17|QWORD[*] + 28], y: v21|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v18|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B10" 
    xhandlers
    flags 
    probability 4601565314138273430
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[Object[null], Object[null]] destination: B1 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4594739322477394204
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = DEC v1|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v3|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B5 -> B6 falseDestination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B10" 
    xhandlers
    flags 
    probability 4594739322477394204
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v4|DWORD[.] = MOV [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@3739be59 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v5|QWORD[.], v4|DWORD[.]] destination: B6 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v15|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[4|0x4] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 38]
stack: vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=v13|DWORD,lastReturned=Object[null],next=Object[null],this$0=v0|QWORD[.]} v9|QWORD[.] 
locals: vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=v13|DWORD,lastReturned=Object[null],next=Object[null],this$0=v0|QWORD[.]} - int[0|0x0] 
java.util.LinkedList.listIterator(LinkedList.java:868) [bci: 11]
stack: vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=v13|DWORD,lastReturned=Object[null],next=Object[null],this$0=v0|QWORD[.]} 
locals: - - 
java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
locals: v0|QWORD[.] 
java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:239) [bci: 1]
locals: v0|QWORD[.] 
vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=v13|DWORD,lastReturned=Object[null],next=Object[null],this$0=v0|QWORD[.]} Ljava/util/LinkedList$ListItr; int[0|0x0] v13|DWORD Object[null] Object[null] v0|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:38, 11, 2, 1] <|@ <|@
      nr   -1  <|@ instruction v16|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v16|QWORD[.]] destination: B11 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B8" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-21267|0xffffffffffffaced]] destination: B3 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B3" "B7" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v6|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:239) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-23315|0xffffffffffffa4ed]] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokevirtual #14         // java.util.AbstractList.listIterator:()java.util.ListIterator
     4: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@59564f77 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction rax|DWORD = MOV [r13|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   10  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr   12  <|@ instruction BRANCH trueDestinationProbability: 0.4381880536401267 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4603235571689833653
    begin_IR
      LIR
      nr   22  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   24  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr   26  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B9" 
    xhandlers
    flags 
    probability 4603235571689833653
    begin_IR
      LIR
      nr   34  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   36  <|@ instruction rsi|DWORD = SAR rax|DWORD size: DWORD <|@ <|@
      nr   38  <|@ instruction CMP rsi|DWORD y: 1 size: DWORD <|@ <|@
      nr   40  <|@ instruction BRANCH trueDestinationProbability: 0.2752428105646316 condition: < trueDestination: B4 -> B5 falseDestination: B4 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B10" 
    xhandlers
    flags 
    probability 4601006673113591004
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   76  <|@ instruction rax|DWORD[.] = MOV [r13|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   78  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@3739be59 encoding: base: 0 shift: 3 <|@ <|@
      nr   80  <|@ instruction r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   82  <|@ instruction JUMP ~[] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B1" "B9" "B6" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   86  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   88  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   90  <|@ instruction r10|DWORD = MOV [r13|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   92  <|@ instruction rcx|QWORD = LEA [rsi|QWORD + 32] size: QWORD <|@ <|@
      nr   94  <|@ instruction CMP (x: rcx|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr   96  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B10 -> B11 falseDestination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  120  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  122  <|@ instruction MOV (x: [r15|QWORD + 96], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  124  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 224] instr: 0 <|@ <|@
      nr  126  <|@ instruction rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  128  <|@ instruction JUMP ~[] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B11" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  130  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  132  <|@ instruction rdx|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  134  <|@ instruction rcx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/LinkedList$ListItr;, resolved>} <|@ <|@
      nr  136  <|@ instruction rcx|QWORD = MOV [rcx|QWORD + 168] size: QWORD <|@ <|@
      nr  138  <|@ instruction MOV (x: [rsi|QWORD[*]], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  140  <|@ instruction MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/LinkedList$ListItr;, resolved>;compressed} <|@ <|@
      nr  142  <|@ instruction MOV (x: [rsi|QWORD[*] + 12], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr  144  <|@ instruction MOV (x: [rsi|QWORD[*] + 16], y: r10|DWORD) size: DWORD <|@ <|@
      nr  146  <|@ instruction MOV (x: [rsi|QWORD[*] + 20], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr  148  <|@ instruction MOV (x: [rsi|QWORD[*] + 24], y: rax|DWORD[.]) size: DWORD <|@ <|@
      nr  150  <|@ instruction r13|DWORD[.] = COMPRESSPOINTER (input: r13|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@3739be59 encoding: base: 0 shift: 3 <|@ <|@
      nr  152  <|@ instruction MOV (x: [rsi|QWORD[*] + 28], y: r13|DWORD[.]) size: DWORD <|@ <|@
      nr  154  <|@ instruction rax|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  156  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B10" 
    xhandlers
    flags 
    probability 4601565314138273430
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   16  <|@ instruction rax|DWORD[.] = MOVE input: int[0|0x0] <|@ <|@
      nr   18  <|@ instruction r14|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   20  <|@ instruction JUMP ~[] destination: B1 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4594739322477394204
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   44  <|@ instruction rax|DWORD = DEC rax|DWORD size: DWORD <|@ <|@
      nr   46  <|@ instruction CMP rax|DWORD y: 1 size: DWORD <|@ <|@
      nr   48  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B5 -> B6 falseDestination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B10" 
    xhandlers
    flags 
    probability 4594739322477394204
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   52  <|@ instruction rax|DWORD[.] = MOV [r13|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   54  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@3739be59 encoding: base: 0 shift: 3 <|@ <|@
      nr   56  <|@ instruction r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   58  <|@ instruction JUMP ~[] destination: B6 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  100  <|@ instruction stack:28|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  102  <|@ instruction stack:32|DWORD[.] = MOVE rax|DWORD[.] moveKind: DWORD <|@ <|@
      nr  104  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  106  <|@ instruction rdx|DWORD = MOVE input: int[4|0x4] <|@ <|@
      nr  108  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  110  <|@ st <@st|@reference-map: [r13:0, r14:0, stack:0]
live-base-pointers: []
java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 38]
stack: vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=stack:28|DWORD,lastReturned=Object[null],next=Object[null],this$0=r13|QWORD[.]} r14|QWORD[.] 
locals: vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=stack:28|DWORD,lastReturned=Object[null],next=Object[null],this$0=r13|QWORD[.]} - int[0|0x0] 
java.util.LinkedList.listIterator(LinkedList.java:868) [bci: 11]
stack: vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=stack:28|DWORD,lastReturned=Object[null],next=Object[null],this$0=r13|QWORD[.]} 
locals: - - 
java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
locals: r13|QWORD[.] 
java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:239) [bci: 1]
locals: r13|QWORD[.] 
vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=stack:28|DWORD,lastReturned=Object[null],next=Object[null],this$0=r13|QWORD[.]} Ljava/util/LinkedList$ListItr; int[0|0x0] stack:28|DWORD Object[null] Object[null] r13|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:38, 11, 2, 1] <|@ <|@
      nr  112  <|@ instruction rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  114  <|@ instruction r10|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  116  <|@ instruction rax|DWORD[.] = MOVE stack:32|DWORD[.] moveKind: DWORD <|@ <|@
      nr  118  <|@ instruction JUMP ~[] destination: B11 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B8" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   30  <|@ instruction r10|DWORD = MOVE input: int[-21267|0xffffffffffffaced] <|@ <|@
      nr   32  <|@ instruction JUMP ~[] destination: B3 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B3" "B7" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   68  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr   70  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   72  <|@ st <@st|@reference-map: [r13:0]
live-base-pointers: []
java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:239) [bci: 0]
locals: r13|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   62  <|@ instruction r10|DWORD = MOVE input: int[-23315|0xffffffffffffa4ed] <|@ <|@
      nr   64  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokevirtual #14         // java.util.AbstractList.listIterator:()java.util.ListIterator
     4: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@59564f77 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction rax|DWORD = MOV [r13|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   10  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr   12  <|@ instruction BRANCH trueDestinationProbability: 0.4381880536401267 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4603235571689833653
    begin_IR
      LIR
      nr   22  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   24  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr   26  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B9" 
    xhandlers
    flags 
    probability 4603235571689833653
    begin_IR
      LIR
      nr   34  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   36  <|@ instruction rsi|DWORD = SAR rax|DWORD size: DWORD <|@ <|@
      nr   38  <|@ instruction CMP rsi|DWORD y: 1 size: DWORD <|@ <|@
      nr   40  <|@ instruction BRANCH trueDestinationProbability: 0.2752428105646316 condition: < trueDestination: B4 -> B5 falseDestination: B4 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B10" 
    xhandlers
    flags 
    probability 4601006673113591004
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   76  <|@ instruction rax|DWORD[.] = MOV [r13|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   78  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@3739be59 encoding: base: 0 shift: 3 <|@ <|@
      nr   80  <|@ instruction r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   82  <|@ instruction JUMP ~[] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B1" "B9" "B6" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   86  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   88  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   90  <|@ instruction r10|DWORD = MOV [r13|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   92  <|@ instruction rcx|QWORD = LEA [rsi|QWORD + 32] size: QWORD <|@ <|@
      nr   94  <|@ instruction CMP (x: rcx|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr   96  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B10 -> B11 falseDestination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  120  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  122  <|@ instruction MOV (x: [r15|QWORD + 96], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  124  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 224] instr: 0 <|@ <|@
      nr  126  <|@ instruction rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  128  <|@ instruction JUMP ~[] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B11" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  130  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  132  <|@ instruction rdx|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  134  <|@ instruction rcx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/LinkedList$ListItr;, resolved>} <|@ <|@
      nr  136  <|@ instruction rcx|QWORD = MOV [rcx|QWORD + 168] size: QWORD <|@ <|@
      nr  138  <|@ instruction MOV (x: [rsi|QWORD[*]], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  140  <|@ instruction MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/LinkedList$ListItr;, resolved>;compressed} <|@ <|@
      nr  142  <|@ instruction MOV (x: [rsi|QWORD[*] + 12], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr  144  <|@ instruction MOV (x: [rsi|QWORD[*] + 16], y: r10|DWORD) size: DWORD <|@ <|@
      nr  146  <|@ instruction MOV (x: [rsi|QWORD[*] + 20], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr  148  <|@ instruction MOV (x: [rsi|QWORD[*] + 24], y: rax|DWORD[.]) size: DWORD <|@ <|@
      nr  150  <|@ instruction r13|DWORD[.] = COMPRESSPOINTER (input: r13|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@3739be59 encoding: base: 0 shift: 3 <|@ <|@
      nr  152  <|@ instruction MOV (x: [rsi|QWORD[*] + 28], y: r13|DWORD[.]) size: DWORD <|@ <|@
      nr  154  <|@ instruction rax|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  156  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B10" 
    xhandlers
    flags 
    probability 4601565314138273430
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   16  <|@ instruction rax|DWORD[.] = MOVE input: int[0|0x0] <|@ <|@
      nr   18  <|@ instruction r14|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   20  <|@ instruction JUMP ~[] destination: B1 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4594739322477394204
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   44  <|@ instruction rax|DWORD = DEC rax|DWORD size: DWORD <|@ <|@
      nr   46  <|@ instruction CMP rax|DWORD y: 1 size: DWORD <|@ <|@
      nr   48  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B5 -> B6 falseDestination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B10" 
    xhandlers
    flags 
    probability 4594739322477394204
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   52  <|@ instruction rax|DWORD[.] = MOV [r13|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   54  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@3739be59 encoding: base: 0 shift: 3 <|@ <|@
      nr   56  <|@ instruction r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   58  <|@ instruction JUMP ~[] destination: B6 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  100  <|@ instruction stack:28|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  102  <|@ instruction stack:32|DWORD[.] = MOVE rax|DWORD[.] moveKind: DWORD <|@ <|@
      nr  104  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  106  <|@ instruction rdx|DWORD = MOVE input: int[4|0x4] <|@ <|@
      nr  108  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  110  <|@ st <@st|@reference-map: [r13:0, r14:0, stack:0]
live-base-pointers: []
java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 38]
stack: vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=stack:28|DWORD,lastReturned=Object[null],next=Object[null],this$0=r13|QWORD[.]} r14|QWORD[.] 
locals: vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=stack:28|DWORD,lastReturned=Object[null],next=Object[null],this$0=r13|QWORD[.]} - int[0|0x0] 
java.util.LinkedList.listIterator(LinkedList.java:868) [bci: 11]
stack: vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=stack:28|DWORD,lastReturned=Object[null],next=Object[null],this$0=r13|QWORD[.]} 
locals: - - 
java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2]
locals: r13|QWORD[.] 
java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:239) [bci: 1]
locals: r13|QWORD[.] 
vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=stack:28|DWORD,lastReturned=Object[null],next=Object[null],this$0=r13|QWORD[.]} Ljava/util/LinkedList$ListItr; int[0|0x0] stack:28|DWORD Object[null] Object[null] r13|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:38, 11, 2, 1] <|@ <|@
      nr  112  <|@ instruction rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  114  <|@ instruction r10|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  116  <|@ instruction rax|DWORD[.] = MOVE stack:32|DWORD[.] moveKind: DWORD <|@ <|@
      nr  118  <|@ instruction JUMP ~[] destination: B11 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B8" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   30  <|@ instruction r10|DWORD = MOVE input: int[-21267|0xffffffffffffaced] <|@ <|@
      nr   32  <|@ instruction JUMP ~[] destination: B3 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B3" "B7" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   68  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr   70  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   72  <|@ st <@st|@reference-map: [r13:0]
live-base-pointers: []
java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:239) [bci: 0]
locals: r13|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   62  <|@ instruction r10|DWORD = MOVE input: int[-23315|0xffffffffffffa4ed] <|@ <|@
      nr   64  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokevirtual #14         // java.util.AbstractList.listIterator:()java.util.ListIterator
     4: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849c1e203493bc20f85efffffff900f1f80000000000f1f800000000089842400c0feff4883ec1848896c24104c8bee418b451085c00f849100000085c00f8ce90000008bf0d1fe83fe010f8c8d000000418b45148bf048c1e6034c8bf6498b7760498b5770458b550c488d4e20483bca0f878400000049894f600f1886e0000000488bd648b9addeaddeaddeadde488b89a800000048890ec74608addeadde4489660c448956104489661489461849c1ed0344896e1c488bc2488b6c24104883c418850500000000c5f877c3b80000000049be0000000000000000eb80ffc883f8010f8d5e000000418b45188bf048c1e6034c8bf6e963ffffff448954240489042448beaddeaddeaddeaddeba04000000b901000000e80000000090488bf0448b5424048b0424e955ffffff41baedacffff4589979c0200004d89a7a8020000e8000000009041baeda4ffffebe4e80000000090e80000000090  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@59564f77 slotKind: QWORD  <||@
  Comment 48 6 r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 51 8 rax|DWORD = MOV [r13|QWORD[.] + 16] size: DWORD  <||@
  Comment 55 10 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 57 12 BRANCH trueDestinationProbability: 0.4381880536401267 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2  <||@
  Comment 63 block B2 null  <||@
  Comment 63 22 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 63 24 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 65 26 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4  <||@
  Comment 71 block B4 null  <||@
  Comment 71 34 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 71 36 rsi|DWORD = SAR rax|DWORD size: DWORD  <||@
  Comment 75 38 CMP rsi|DWORD y: 1 size: DWORD  <||@
  Comment 78 40 BRANCH trueDestinationProbability: 0.2752428105646316 condition: < trueDestination: B4 -> B5 falseDestination: B4 -> B9  <||@
  Comment 84 block B9 null  <||@
  Comment 84 74 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 84 76 rax|DWORD[.] = MOV [r13|QWORD[.] + 20] size: DWORD  <||@
  Comment 88 78 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@3739be59 encoding: base: 0 shift: 3  <||@
  Comment 94 80 r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 97 82 JUMP ~[] destination: B9 -> B10  <||@
  Comment 97 block B10 null  <||@
  Comment 97 84 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 97 86 rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 101 88 rdx|QWORD = MOV [r15|QWORD + 112] size: QWORD  <||@
  Comment 105 90 r10|DWORD = MOV [r13|QWORD[.] + 12] size: DWORD  <||@
  Comment 109 92 rcx|QWORD = LEA [rsi|QWORD + 32] size: QWORD  <||@
  Comment 113 94 CMP (x: rcx|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 116 96 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B10 -> B11 falseDestination: B10 -> B12  <||@
  Comment 122 block B12 null  <||@
  Comment 122 120 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 122 122 MOV (x: [r15|QWORD + 96], y: rcx|QWORD) size: QWORD  <||@
  Comment 126 124 AMD64PREFETCH ~[rsi|QWORD + 224] instr: 0  <||@
  Comment 133 126 rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 133 128 JUMP ~[] destination: B12 -> B13  <||@
  Comment 133 block B13 null  <||@
  Comment 133 130 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 133 132 rdx|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD  <||@
  Comment 136 134 rcx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/LinkedList$ListItr;, resolved>}  <||@
  Comment 136 {meta{HotSpotType<Ljava/util/LinkedList$ListItr;, resolved>}}  <||@
  Comment 146 136 rcx|QWORD = MOV [rcx|QWORD + 168] size: QWORD  <||@
  Comment 153 138 MOV (x: [rsi|QWORD[*]], y: rcx|QWORD) size: QWORD  <||@
  Comment 156 140 MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/LinkedList$ListItr;, resolved>;compressed}  <||@
  Comment 156 {meta{HotSpotType<Ljava/util/LinkedList$ListItr;, resolved>;compressed}}  <||@
  Comment 163 142 MOV (x: [rsi|QWORD[*] + 12], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 167 144 MOV (x: [rsi|QWORD[*] + 16], y: r10|DWORD) size: DWORD  <||@
  Comment 171 146 MOV (x: [rsi|QWORD[*] + 20], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 175 148 MOV (x: [rsi|QWORD[*] + 24], y: rax|DWORD[.]) size: DWORD  <||@
  Comment 178 150 r13|DWORD[.] = COMPRESSPOINTER (input: r13|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@3739be59 encoding: base: 0 shift: 3  <||@
  Comment 182 152 MOV (x: [rsi|QWORD[*] + 28], y: r13|DWORD[.]) size: DWORD  <||@
  Comment 186 154 rax|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 189 156 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 198 12  <||@
  Comment 208 block B1 null  <||@
  Comment 208 14 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 208 16 rax|DWORD[.] = MOVE input: int[0|0x0]  <||@
  Comment 213 18 r14|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 223 20 JUMP ~[] destination: B1 -> B10  <||@
  Comment 225 block B5 null  <||@
  Comment 225 42 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 225 44 rax|DWORD = DEC rax|DWORD size: DWORD  <||@
  Comment 227 46 CMP rax|DWORD y: 1 size: DWORD  <||@
  Comment 230 48 BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B5 -> B6 falseDestination: B5 -> B7  <||@
  Comment 236 block B6 null  <||@
  Comment 236 50 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 236 52 rax|DWORD[.] = MOV [r13|QWORD[.] + 24] size: DWORD  <||@
  Comment 240 54 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@3739be59 encoding: base: 0 shift: 3  <||@
  Comment 246 56 r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 249 58 JUMP ~[] destination: B6 -> B10  <||@
  Comment 254 block B11 null  <||@
  Comment 254 98 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 254 100 stack:28|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 259 102 stack:32|DWORD[.] = MOVE rax|DWORD[.] moveKind: DWORD  <||@
  Comment 262 104 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 262 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 272 106 rdx|DWORD = MOVE input: int[4|0x4]  <||@
  Comment 277 108 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 282 110 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:38, 11, 2, 1]  <||@
  Comment 282 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 287 [r13:0, r14:0, stack:0]at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 38, duringCall: false, rethrow: false]
              |0                                                                                                                                                   |1             |2          
     locals:  |vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=stack:28|DWORD,lastReturned=Object[null],next=Object[null],this$0=r13|QWORD[.]}  |-             |int[0|0x0] 
     stack:   |vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=stack:28|DWORD,lastReturned=Object[null],next=Object[null],this$0=r13|QWORD[.]}  |r14|QWORD[.]  |           
  at java.util.LinkedList.listIterator(LinkedList.java:868) [bci: 11, duringCall: true, rethrow: false]
              |0                                                                                                                                                   |1 
     locals:  |-                                                                                                                                                   |- 
     stack:   |vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=stack:28|DWORD,lastReturned=Object[null],next=Object[null],this$0=r13|QWORD[.]}  |  
  at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2, duringCall: true, rethrow: false]
              |0            
     locals:  |r13|QWORD[.] 
  at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:239) [bci: 1, duringCall: true, rethrow: false]
              |0            
     locals:  |r13|QWORD[.]   <||@
  Comment 288 112 rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 291 114 r10|DWORD = MOVE stack:28|DWORD moveKind: DWORD  <||@
  Comment 296 116 rax|DWORD[.] = MOVE stack:32|DWORD[.] moveKind: DWORD  <||@
  Comment 299 118 JUMP ~[] destination: B11 -> B13  <||@
  Comment 304 block B3 null  <||@
  Comment 304 28 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 304 30 r10|DWORD = MOVE input: int[-21267|0xffffffffffffaced]  <||@
  Comment 310 32 JUMP ~[] destination: B3 -> B8  <||@
  Comment 310 block B8 null  <||@
  Comment 310 66 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 310 68 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 317 70 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 324 72 DEOPT info [bci:0]  <||@
  Comment 324 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 329 [r13:0]at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:239) [bci: 0, duringCall: false, rethrow: false]
              |0            
     locals:  |r13|QWORD[.]   <||@
  Comment 330 block B7 null  <||@
  Comment 330 60 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 330 62 r10|DWORD = MOVE input: int[-23315|0xffffffffffffa4ed]  <||@
  Comment 336 64 JUMP ~[] destination: B7 -> B8  <||@
  Comment 338 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 338 4  <||@
  Comment 344 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 344 5  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-8659[java.util.AbstractSequentialList.iterator()]"
  method "HotSpotCompilation-8659[java.util.AbstractSequentialList.iterator()]"
  date 1527005197804
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 10795a0a0 448b560849c1e203493bc20f85afbdeafe900f1f80000000000f1f800000000089842400c0feff4883ec1848896c24104c8bee418b451085c00f849100000085c00f8ce90000008bf0d1fe83fe010f8c8d000000418b45148bf048c1e6034c8bf6498b7760498b5770458b550c488d4e20483bca0f878400000049894f600f1886e0000000488bd648b9203222c007000000488b89a800000048890ec74608444604f84489660c448956104489661489461849c1ed0344896e1c488bc2488b6c24104883c41885059a4ef3fcc5f877c3b80000000049be0000000000000000eb80ffc883f8010f8d5e000000418b45188bf048c1e6034c8bf6e963ffffff448954240489042448be680b00c007000000ba04000000b901000000e821cc63ff90488bf0448b5424048b0424e955ffffff41baedacffff4589979c0200004d89a7a8020000e815d4eafe9041baeda4ffffebe4e829042fff90e803d3eafe90f4f4  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@59564f77 slotKind: QWORD  <||@
  Comment 48 6 r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 51 8 rax|DWORD = MOV [r13|QWORD[.] + 16] size: DWORD  <||@
  Comment 55 10 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 57 12 BRANCH trueDestinationProbability: 0.4381880536401267 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2  <||@
  Comment 63 block B2 null  <||@
  Comment 63 22 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 63 24 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 65 26 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4  <||@
  Comment 71 block B4 null  <||@
  Comment 71 34 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 71 36 rsi|DWORD = SAR rax|DWORD size: DWORD  <||@
  Comment 75 38 CMP rsi|DWORD y: 1 size: DWORD  <||@
  Comment 78 40 BRANCH trueDestinationProbability: 0.2752428105646316 condition: < trueDestination: B4 -> B5 falseDestination: B4 -> B9  <||@
  Comment 84 block B9 null  <||@
  Comment 84 74 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 84 76 rax|DWORD[.] = MOV [r13|QWORD[.] + 20] size: DWORD  <||@
  Comment 88 78 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@3739be59 encoding: base: 0 shift: 3  <||@
  Comment 94 80 r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 97 82 JUMP ~[] destination: B9 -> B10  <||@
  Comment 97 block B10 null  <||@
  Comment 97 84 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 97 86 rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 101 88 rdx|QWORD = MOV [r15|QWORD + 112] size: QWORD  <||@
  Comment 105 90 r10|DWORD = MOV [r13|QWORD[.] + 12] size: DWORD  <||@
  Comment 109 92 rcx|QWORD = LEA [rsi|QWORD + 32] size: QWORD  <||@
  Comment 113 94 CMP (x: rcx|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 116 96 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B10 -> B11 falseDestination: B10 -> B12  <||@
  Comment 122 block B12 null  <||@
  Comment 122 120 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 122 122 MOV (x: [r15|QWORD + 96], y: rcx|QWORD) size: QWORD  <||@
  Comment 126 124 AMD64PREFETCH ~[rsi|QWORD + 224] instr: 0  <||@
  Comment 133 126 rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 133 128 JUMP ~[] destination: B12 -> B13  <||@
  Comment 133 block B13 null  <||@
  Comment 133 130 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 133 132 rdx|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD  <||@
  Comment 136 134 rcx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/LinkedList$ListItr;, resolved>}  <||@
  Comment 136 {meta{HotSpotType<Ljava/util/LinkedList$ListItr;, resolved>}}  <||@
  Comment 146 136 rcx|QWORD = MOV [rcx|QWORD + 168] size: QWORD  <||@
  Comment 153 138 MOV (x: [rsi|QWORD[*]], y: rcx|QWORD) size: QWORD  <||@
  Comment 156 140 MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/LinkedList$ListItr;, resolved>;compressed}  <||@
  Comment 156 {meta{HotSpotType<Ljava/util/LinkedList$ListItr;, resolved>;compressed}}  <||@
  Comment 163 142 MOV (x: [rsi|QWORD[*] + 12], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 167 144 MOV (x: [rsi|QWORD[*] + 16], y: r10|DWORD) size: DWORD  <||@
  Comment 171 146 MOV (x: [rsi|QWORD[*] + 20], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 175 148 MOV (x: [rsi|QWORD[*] + 24], y: rax|DWORD[.]) size: DWORD  <||@
  Comment 178 150 r13|DWORD[.] = COMPRESSPOINTER (input: r13|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@3739be59 encoding: base: 0 shift: 3  <||@
  Comment 182 152 MOV (x: [rsi|QWORD[*] + 28], y: r13|DWORD[.]) size: DWORD  <||@
  Comment 186 154 rax|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 189 156 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 198 12  <||@
  Comment 208 block B1 null  <||@
  Comment 208 14 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 208 16 rax|DWORD[.] = MOVE input: int[0|0x0]  <||@
  Comment 213 18 r14|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 223 20 JUMP ~[] destination: B1 -> B10  <||@
  Comment 225 block B5 null  <||@
  Comment 225 42 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 225 44 rax|DWORD = DEC rax|DWORD size: DWORD  <||@
  Comment 227 46 CMP rax|DWORD y: 1 size: DWORD  <||@
  Comment 230 48 BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B5 -> B6 falseDestination: B5 -> B7  <||@
  Comment 236 block B6 null  <||@
  Comment 236 50 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 236 52 rax|DWORD[.] = MOV [r13|QWORD[.] + 24] size: DWORD  <||@
  Comment 240 54 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@3739be59 encoding: base: 0 shift: 3  <||@
  Comment 246 56 r14|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 249 58 JUMP ~[] destination: B6 -> B10  <||@
  Comment 254 block B11 null  <||@
  Comment 254 98 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 254 100 stack:28|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 259 102 stack:32|DWORD[.] = MOVE rax|DWORD[.] moveKind: DWORD  <||@
  Comment 262 104 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 262 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 272 106 rdx|DWORD = MOVE input: int[4|0x4]  <||@
  Comment 277 108 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 282 110 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:38, 11, 2, 1]  <||@
  Comment 282 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 287 [r13:0, r14:0, stack:0]at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 38, duringCall: false, rethrow: false]
              |0                                                                                                                                                   |1             |2          
     locals:  |vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=stack:28|DWORD,lastReturned=Object[null],next=Object[null],this$0=r13|QWORD[.]}  |-             |int[0|0x0] 
     stack:   |vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=stack:28|DWORD,lastReturned=Object[null],next=Object[null],this$0=r13|QWORD[.]}  |r14|QWORD[.]  |           
  at java.util.LinkedList.listIterator(LinkedList.java:868) [bci: 11, duringCall: true, rethrow: false]
              |0                                                                                                                                                   |1 
     locals:  |-                                                                                                                                                   |- 
     stack:   |vobject:LinkedList$ListItr:0{nextIndex=int[0|0x0],expectedModCount=stack:28|DWORD,lastReturned=Object[null],next=Object[null],this$0=r13|QWORD[.]}  |  
  at java.util.AbstractList.listIterator(AbstractList.java:299) [bci: 2, duringCall: true, rethrow: false]
              |0            
     locals:  |r13|QWORD[.] 
  at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:239) [bci: 1, duringCall: true, rethrow: false]
              |0            
     locals:  |r13|QWORD[.]   <||@
  Comment 288 112 rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 291 114 r10|DWORD = MOVE stack:28|DWORD moveKind: DWORD  <||@
  Comment 296 116 rax|DWORD[.] = MOVE stack:32|DWORD[.] moveKind: DWORD  <||@
  Comment 299 118 JUMP ~[] destination: B11 -> B13  <||@
  Comment 304 block B3 null  <||@
  Comment 304 28 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 304 30 r10|DWORD = MOVE input: int[-21267|0xffffffffffffaced]  <||@
  Comment 310 32 JUMP ~[] destination: B3 -> B8  <||@
  Comment 310 block B8 null  <||@
  Comment 310 66 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 310 68 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 317 70 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 324 72 DEOPT info [bci:0]  <||@
  Comment 324 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 329 [r13:0]at java.util.AbstractSequentialList.iterator(AbstractSequentialList.java:239) [bci: 0, duringCall: false, rethrow: false]
              |0            
     locals:  |r13|QWORD[.]   <||@
  Comment 330 block B7 null  <||@
  Comment 330 60 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 330 62 r10|DWORD = MOVE input: int[-23315|0xffffffffffffa4ed]  <||@
  Comment 336 64 JUMP ~[] destination: B7 -> B8  <||@
  Comment 338 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 338 4  <||@
  Comment 344 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 344 5  <||@
  HexCodeFile>>> <|@
end_nmethod
