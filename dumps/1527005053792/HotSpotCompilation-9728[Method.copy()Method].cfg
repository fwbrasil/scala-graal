begin_compilation
  name " HotSpotCompilation-9728[java.lang.reflect.Method.copy()]"
  method "HotSpotCompilation-9728[java.lang.reflect.Method.copy()]"
  date 1527005216530
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a293 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: a293  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Ljava/lang/reflect/Method;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?2 v306 v307 v308 v309 v310 v311 v312 v313 v314 v315 v316 v317 a149 ?57 ?26 v318 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v306 <|@
d <@d|@=== Debug Properties ===
displacement: 84
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a293 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a293 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Method.root
nodeSourcePosition: at java.lang.reflect.Method.copy(Method.java:150) [bci: 1]
nullCheck: false
stamp: n# Ljava/lang/reflect/Method;
=== Inputs ===
stateBefore: - 
guard: - 
address: v306 
=== Succesors ===
next: v130 
=== Usages ===
v113 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v306 #next: v130  <|@  <|@
f <@~|@floating>@ <|@
tid v113 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.reflect.Method.copy(Method.java:150) [bci: 4]
stamp: void
=== Inputs ===
value: a293 
=== Succesors ===
=== Usages ===
v130 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a293  <|@  <|@
f <@*|@fixed>@ <|@
tid v130 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.reflect.Method.copy(Method.java:150) [bci: 4]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v113 
=== Succesors ===
trueSuccessor: v127 
falseSuccessor: v129 
=== Usages ===
=== Predecessor ===
a293 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v113 #trueSuccessor: v127 #falseSuccessor: v129  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v127 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.reflect.Method.copy(Method.java:150) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: i294 
=== Usages ===
=== Predecessor ===
v130 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i294  <|@  <|@
f <@~|@floating>@ <|@
tid v313 <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i294 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i294 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Method.slot
nodeSourcePosition: at java.lang.reflect.Method.copy(Method.java:153) [bci: 46]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v313 
=== Succesors ===
next: i295 
=== Usages ===
?57 v230 
=== Predecessor ===
v127 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v313 #next: i295  <|@  <|@
f <@~|@floating>@ <|@
tid v312 <|@
d <@d|@=== Debug Properties ===
displacement: 36
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i295 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i295 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Method.modifiers
nodeSourcePosition: at java.lang.reflect.Method.copy(Method.java:153) [bci: 42]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v312 
=== Succesors ===
next: a296 
=== Usages ===
?57 v232 
=== Predecessor ===
i294 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v312 #next: a296  <|@  <|@
f <@~|@floating>@ <|@
tid v307 <|@
d <@d|@=== Debug Properties ===
displacement: 40
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a296 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a296 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Method.clazz
nodeSourcePosition: at java.lang.reflect.Method.copy(Method.java:153) [bci: 22]
nullCheck: false
stamp: n# Ljava/lang/Class;
=== Inputs ===
stateBefore: - 
guard: - 
address: v307 
=== Succesors ===
next: a297 
=== Usages ===
?57 v234 
=== Predecessor ===
i295 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v307 #next: a297  <|@  <|@
f <@~|@floating>@ <|@
tid v308 <|@
d <@d|@=== Debug Properties ===
displacement: 44
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a297 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a297 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Method.name
nodeSourcePosition: at java.lang.reflect.Method.copy(Method.java:153) [bci: 26]
nullCheck: false
stamp: n# Ljava/lang/String;
=== Inputs ===
stateBefore: - 
guard: - 
address: v308 
=== Succesors ===
next: a298 
=== Usages ===
?57 v236 
=== Predecessor ===
a296 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v308 #next: a298  <|@  <|@
f <@~|@floating>@ <|@
tid v310 <|@
d <@d|@=== Debug Properties ===
displacement: 48
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a298 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a298 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Method.returnType
nodeSourcePosition: at java.lang.reflect.Method.copy(Method.java:153) [bci: 34]
nullCheck: false
stamp: n# Ljava/lang/Class;
=== Inputs ===
stateBefore: - 
guard: - 
address: v310 
=== Succesors ===
next: a299 
=== Usages ===
?57 v238 
=== Predecessor ===
a297 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v310 #next: a299  <|@  <|@
f <@~|@floating>@ <|@
tid v309 <|@
d <@d|@=== Debug Properties ===
displacement: 52
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a299 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a299 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Method.parameterTypes
nodeSourcePosition: at java.lang.reflect.Method.copy(Method.java:153) [bci: 30]
nullCheck: false
stamp: n# [Ljava/lang/Class;
=== Inputs ===
stateBefore: - 
guard: - 
address: v309 
=== Succesors ===
next: a300 
=== Usages ===
?57 v240 
=== Predecessor ===
a298 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v309 #next: a300  <|@  <|@
f <@~|@floating>@ <|@
tid v311 <|@
d <@d|@=== Debug Properties ===
displacement: 56
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a300 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a300 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Method.exceptionTypes
nodeSourcePosition: at java.lang.reflect.Method.copy(Method.java:153) [bci: 38]
nullCheck: false
stamp: n# [Ljava/lang/Class;
=== Inputs ===
stateBefore: - 
guard: - 
address: v311 
=== Succesors ===
next: a301 
=== Usages ===
?57 v242 
=== Predecessor ===
a299 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v311 #next: a301  <|@  <|@
f <@~|@floating>@ <|@
tid v314 <|@
d <@d|@=== Debug Properties ===
displacement: 60
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a301 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a301 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Method.signature
nodeSourcePosition: at java.lang.reflect.Method.copy(Method.java:153) [bci: 50]
nullCheck: false
stamp: n# Ljava/lang/String;
=== Inputs ===
stateBefore: - 
guard: - 
address: v314 
=== Succesors ===
next: a302 
=== Usages ===
?57 v244 
=== Predecessor ===
a300 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v314 #next: a302  <|@  <|@
f <@~|@floating>@ <|@
tid v315 <|@
d <@d|@=== Debug Properties ===
displacement: 68
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a302 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a302 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Method.annotations
nodeSourcePosition: at java.lang.reflect.Method.copy(Method.java:153) [bci: 54]
nullCheck: false
stamp: n# [B
=== Inputs ===
stateBefore: - 
guard: - 
address: v315 
=== Succesors ===
next: a303 
=== Usages ===
?57 v249 
=== Predecessor ===
a301 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v315 #next: a303  <|@  <|@
f <@~|@floating>@ <|@
tid v316 <|@
d <@d|@=== Debug Properties ===
displacement: 72
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a303 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a303 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Method.parameterAnnotations
nodeSourcePosition: at java.lang.reflect.Method.copy(Method.java:153) [bci: 58]
nullCheck: false
stamp: n# [B
=== Inputs ===
stateBefore: - 
guard: - 
address: v316 
=== Succesors ===
next: a304 
=== Usages ===
?57 v251 
=== Predecessor ===
a302 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v316 #next: a304  <|@  <|@
f <@~|@floating>@ <|@
tid v317 <|@
d <@d|@=== Debug Properties ===
displacement: 76
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a304 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a304 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Method.annotationDefault
nodeSourcePosition: at java.lang.reflect.Method.copy(Method.java:153) [bci: 62]
nullCheck: false
stamp: n# [B
=== Inputs ===
stateBefore: - 
guard: - 
address: v317 
=== Succesors ===
next: v111 
=== Usages ===
?57 v253 
=== Predecessor ===
a303 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v317 #next: v111  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v111 <|@
d <@d|@=== Debug Properties ===
barriers: 0
location: ANY_LOCATION
nodeSourcePosition: at java.lang.reflect.Method.copy(Method.java:158) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
next: a305 
=== Usages ===
=== Predecessor ===
a304 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a305  <|@  <|@
f <@~|@floating>@ <|@
tid v318 <|@
d <@d|@=== Debug Properties ===
displacement: 80
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a305 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a305 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Method.methodAccessor
nodeSourcePosition: at java.lang.reflect.Method.copy(Method.java:158) [bci: 76]
nullCheck: false
stamp: n -
=== Inputs ===
stateBefore: - 
guard: - 
address: v318 
=== Succesors ===
next: v112 
=== Usages ===
?26 v255 
=== Predecessor ===
v111 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v318 #next: v112  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v112 <|@
d <@d|@=== Debug Properties ===
barriers: 3
location: ANY_LOCATION
nodeSourcePosition: at java.lang.reflect.Method.copy(Method.java:158) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
next: j160 
=== Usages ===
=== Predecessor ===
a305 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: j160  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j160 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j189 
=== Usages ===
v319 v320 
=== Predecessor ===
v112 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j189  <|@  <|@
f <@~|@floating>@ <|@
tid v319 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j160 
index: - 
=== Succesors ===
=== Usages ===
j189 v191 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j160 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j189 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v319 
=== Succesors ===
next: j190 
=== Usages ===
j259 j195 v324 v325 v326 v327 
=== Predecessor ===
j160 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v319 #next: j190  <|@  <|@
f <@~|@floating>@ <|@
tid v320 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j160 
index: - 
=== Succesors ===
=== Usages ===
j190 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j160 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j190 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v320 
=== Succesors ===
next: v168 
=== Usages ===
v165 
=== Predecessor ===
j189 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v320 #next: v168  <|@  <|@
f <@~|@floating>@ <|@
tid j258 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 88
stableDimension: 0
stamp: i64 [88] ⇊0000000000000058 ⇈0000000000000058
stampKind: i64
value: long[88|0x58]
=== Inputs ===
=== Succesors ===
=== Usages ===
j259 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j259 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j189 
y: j258 
=== Succesors ===
=== Usages ===
v165 v191 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j189 y: j258  <|@  <|@
f <@~|@floating>@ <|@
tid v165 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j190 
y: j259 
=== Succesors ===
=== Usages ===
v168 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j190 y: j259  <|@  <|@
f <@*|@fixed>@ <|@
tid v168 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v165 
=== Succesors ===
trueSuccessor: v166 
falseSuccessor: v167 
=== Usages ===
=== Predecessor ===
j190 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v165 #trueSuccessor: v166 #falseSuccessor: v167  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v166 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a173 
=== Usages ===
=== Predecessor ===
v168 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a173  <|@  <|@
tid a56 <|@
d <@d|@=== Debug Properties ===
fields: [Ljdk.vm.ci.hotspot.HotSpotResolvedJavaField;@152e4cd7
hasIdentity: true
objectId: 0
stamp: a!# Ljava/lang/reflect/Method;
type: HotSpotType<Ljava/lang/reflect/Method;, resolved>
=== Inputs ===
=== Succesors ===
=== Usages ===
?26 ?26 ?57 
=== Predecessor ===
- >@ <|@
instruction <@VirtualInstance|@org.graalvm.compiler.nodes.virtual.VirtualInstanceNode>@  <|@  <|@
tid ?57 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a56 
values: - - - - - i294 i295 a296 a297 a298 a299 a300 a301 - a302 a303 a304 - a1 
=== Succesors ===
=== Usages ===
?26 
=== Predecessor ===
- >@ <|@
instruction <@VirtualObjectState|@org.graalvm.compiler.virtual.nodes.VirtualObjectState>@ object: a56 values: - - - - - i294 i295 a296 a297 a298 a299 a300 a301 - a302 a303 a304 - a1  <|@  <|@
tid ?26 <|@
d <@d|@=== Debug Properties ===
bci: 79
code: ResolvedJavaMethodBytecode<Method.copy()>
duringCall: false
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.lang.reflect.Method.copy(Method.java:158) [bci: 76]
rethrowException: false
sourceFile: Method.java
sourceLine: 158
stackSize: 2
=== Inputs ===
outerFrameState: - 
values: a1 a56 a56 a305 
virtualObjectMappings: ?57 
=== Succesors ===
=== Usages ===
a173 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a56 a56 a305 virtualObjectMappings: ?57  <|@  <|@
f <@~|@floating>@ <|@
tid v157 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<[I, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[I, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a173 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i261 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 18
stableDimension: 0
stamp: i32 [18] ⇊0000000000000012 ⇈0000000000000012
stampKind: i32
value: int[18|0x12]
=== Inputs ===
=== Succesors ===
=== Usages ===
a173 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i159 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
a173 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a173 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?26 
arguments: v157 i261 i159 
=== Succesors ===
next: j174 
=== Usages ===
j174 
=== Predecessor ===
v166 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?26 arguments: v157 i261 i159 #next: j174  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j174 <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a173 
=== Succesors ===
next: v196 
=== Usages ===
j195 
=== Predecessor ===
a173 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a173 #next: v196  <|@  <|@
f <@*|@fixed>@ <|@
tid v196 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v193 
=== Predecessor ===
j174 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v167 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v191 
=== Usages ===
=== Predecessor ===
v168 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v191  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v191 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v319 
value: j259 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v178 
=== Usages ===
=== Predecessor ===
v167 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v319 value: j259 stateAfter: - lastLocationAccess: - #next: v178  <|@  <|@
f <@~|@floating>@ <|@
tid v324 <|@
d <@d|@=== Debug Properties ===
displacement: 280
scale: Times1
stamp: void*
=== Inputs ===
base: j189 
index: - 
=== Succesors ===
=== Usages ===
v178 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j189 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v178 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v324 
=== Succesors ===
next: v181 
=== Usages ===
=== Predecessor ===
v191 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v324 #next: v181  <|@  <|@
f <@~|@floating>@ <|@
tid v325 <|@
d <@d|@=== Debug Properties ===
displacement: 344
scale: Times1
stamp: void*
=== Inputs ===
base: j189 
index: - 
=== Succesors ===
=== Usages ===
v181 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j189 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v181 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v325 
=== Succesors ===
next: v184 
=== Usages ===
=== Predecessor ===
v178 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v325 #next: v184  <|@  <|@
f <@~|@floating>@ <|@
tid v326 <|@
d <@d|@=== Debug Properties ===
displacement: 408
scale: Times1
stamp: void*
=== Inputs ===
base: j189 
index: - 
=== Succesors ===
=== Usages ===
v184 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j189 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v184 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v326 
=== Succesors ===
next: v187 
=== Usages ===
=== Predecessor ===
v181 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v326 #next: v187  <|@  <|@
f <@~|@floating>@ <|@
tid v327 <|@
d <@d|@=== Debug Properties ===
displacement: 472
scale: Times1
stamp: void*
=== Inputs ===
base: j189 
index: - 
=== Succesors ===
=== Usages ===
v187 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j189 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v187 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v327 
=== Succesors ===
next: v194 
=== Usages ===
=== Predecessor ===
v184 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v327 #next: v194  <|@  <|@
f <@*|@fixed>@ <|@
tid v194 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v193 
=== Predecessor ===
v187 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" "B2" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j195 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v193 
values: j189 j174 
=== Succesors ===
=== Usages ===
v323 v322 a134 v328 v329 v330 v331 v332 v333 v334 v335 v336 v337 v338 v339 v340 v341 v342 v343 v344 v345 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v193 values: j189 j174  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v193 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v194 v196 
=== Succesors ===
next: a134 
=== Usages ===
j195 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v194 v196 #next: a134  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a134 <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j195 
=== Succesors ===
next: j207 
=== Usages ===
a152 
=== Predecessor ===
v193 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j195 #next: j207  <|@  <|@
f <@~|@floating>@ <|@
tid v201 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/lang/reflect/Method;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Ljava/lang/reflect/Method;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
j202 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j202 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
input: v201 
=== Succesors ===
=== Usages ===
v321 
=== Predecessor ===
- >@ <|@
instruction <@PointerCast|@org.graalvm.compiler.hotspot.word.PointerCastNode>@ input: v201  <|@  <|@
f <@~|@floating>@ <|@
tid v321 <|@
d <@d|@=== Debug Properties ===
displacement: 168
scale: Times1
stamp: void*
=== Inputs ===
base: j202 
index: - 
=== Succesors ===
=== Usages ===
j207 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j202 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j207 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v321 
=== Succesors ===
next: v208 
=== Usages ===
v208 
=== Predecessor ===
a134 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v321 #next: v208  <|@  <|@
f <@~|@floating>@ <|@
tid v322 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j195 
index: - 
=== Succesors ===
=== Usages ===
v208 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j195 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v208 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v322 
value: j207 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v212 
=== Usages ===
=== Predecessor ===
j207 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v322 value: j207 stateAfter: - lastLocationAccess: - #next: v212  <|@  <|@
f <@~|@floating>@ <|@
tid v323 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j195 
index: - 
=== Succesors ===
=== Usages ===
v212 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j195 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v270 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/lang/reflect/Method;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/lang/reflect/Method;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v212 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v212 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v323 
value: v270 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v218 
=== Usages ===
=== Predecessor ===
v208 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v323 value: v270 stateAfter: - lastLocationAccess: - #next: v218  <|@  <|@
f <@~|@floating>@ <|@
tid v328 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j195 
index: - 
=== Succesors ===
=== Usages ===
v218 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j195 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid i215 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 0
stableDimension: 0
stamp: i8
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v218 v225 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v218 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v328 
value: i215 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v222 
=== Usages ===
=== Predecessor ===
v212 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v328 value: i215 stateAfter: - lastLocationAccess: - #next: v222  <|@  <|@
f <@~|@floating>@ <|@
tid v329 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j195 
index: - 
=== Succesors ===
=== Usages ===
v222 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j195 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid i219 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v222 v247 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v222 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v329 
value: i219 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v225 
=== Usages ===
=== Predecessor ===
v218 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v329 value: i219 stateAfter: - lastLocationAccess: - #next: v225  <|@  <|@
f <@~|@floating>@ <|@
tid v330 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: j195 
index: - 
=== Succesors ===
=== Usages ===
v225 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j195 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v225 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v330 
value: i215 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v228 
=== Usages ===
=== Predecessor ===
v222 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v330 value: i215 stateAfter: - lastLocationAccess: - #next: v228  <|@  <|@
f <@~|@floating>@ <|@
tid v331 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: j195 
index: - 
=== Succesors ===
=== Usages ===
v228 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j195 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j132 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 0
stableDimension: 0
stamp: i64 [0] ⇈0000000000000000
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v228 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v228 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v331 
value: j132 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v230 
=== Usages ===
=== Predecessor ===
v225 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v331 value: j132 stateAfter: - lastLocationAccess: - #next: v230  <|@  <|@
f <@~|@floating>@ <|@
tid v332 <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times1
stamp: void*
=== Inputs ===
base: j195 
index: - 
=== Succesors ===
=== Usages ===
v230 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j195 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v230 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v332 
value: i294 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v232 
=== Usages ===
=== Predecessor ===
v228 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v332 value: i294 stateAfter: - lastLocationAccess: - #next: v232  <|@  <|@
f <@~|@floating>@ <|@
tid v333 <|@
d <@d|@=== Debug Properties ===
displacement: 36
scale: Times1
stamp: void*
=== Inputs ===
base: j195 
index: - 
=== Succesors ===
=== Usages ===
v232 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j195 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v232 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v333 
value: i295 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v234 
=== Usages ===
=== Predecessor ===
v230 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v333 value: i295 stateAfter: - lastLocationAccess: - #next: v234  <|@  <|@
f <@~|@floating>@ <|@
tid v334 <|@
d <@d|@=== Debug Properties ===
displacement: 40
scale: Times1
stamp: void*
=== Inputs ===
base: j195 
index: - 
=== Succesors ===
=== Usages ===
v234 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j195 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v234 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v334 
value: a296 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v236 
=== Usages ===
=== Predecessor ===
v232 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v334 value: a296 stateAfter: - lastLocationAccess: - #next: v236  <|@  <|@
f <@~|@floating>@ <|@
tid v335 <|@
d <@d|@=== Debug Properties ===
displacement: 44
scale: Times1
stamp: void*
=== Inputs ===
base: j195 
index: - 
=== Succesors ===
=== Usages ===
v236 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j195 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v236 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v335 
value: a297 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v238 
=== Usages ===
=== Predecessor ===
v234 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v335 value: a297 stateAfter: - lastLocationAccess: - #next: v238  <|@  <|@
f <@~|@floating>@ <|@
tid v336 <|@
d <@d|@=== Debug Properties ===
displacement: 48
scale: Times1
stamp: void*
=== Inputs ===
base: j195 
index: - 
=== Succesors ===
=== Usages ===
v238 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j195 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v238 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v336 
value: a298 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v240 
=== Usages ===
=== Predecessor ===
v236 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v336 value: a298 stateAfter: - lastLocationAccess: - #next: v240  <|@  <|@
f <@~|@floating>@ <|@
tid v337 <|@
d <@d|@=== Debug Properties ===
displacement: 52
scale: Times1
stamp: void*
=== Inputs ===
base: j195 
index: - 
=== Succesors ===
=== Usages ===
v240 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j195 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v240 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v337 
value: a299 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v242 
=== Usages ===
=== Predecessor ===
v238 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v337 value: a299 stateAfter: - lastLocationAccess: - #next: v242  <|@  <|@
f <@~|@floating>@ <|@
tid v338 <|@
d <@d|@=== Debug Properties ===
displacement: 56
scale: Times1
stamp: void*
=== Inputs ===
base: j195 
index: - 
=== Succesors ===
=== Usages ===
v242 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j195 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v242 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v338 
value: a300 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v244 
=== Usages ===
=== Predecessor ===
v240 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v338 value: a300 stateAfter: - lastLocationAccess: - #next: v244  <|@  <|@
f <@~|@floating>@ <|@
tid v339 <|@
d <@d|@=== Debug Properties ===
displacement: 60
scale: Times1
stamp: void*
=== Inputs ===
base: j195 
index: - 
=== Succesors ===
=== Usages ===
v244 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j195 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v244 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v339 
value: a301 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v247 
=== Usages ===
=== Predecessor ===
v242 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v339 value: a301 stateAfter: - lastLocationAccess: - #next: v247  <|@  <|@
f <@~|@floating>@ <|@
tid v340 <|@
d <@d|@=== Debug Properties ===
displacement: 64
scale: Times1
stamp: void*
=== Inputs ===
base: j195 
index: - 
=== Succesors ===
=== Usages ===
v247 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j195 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v247 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v340 
value: i219 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v249 
=== Usages ===
=== Predecessor ===
v244 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v340 value: i219 stateAfter: - lastLocationAccess: - #next: v249  <|@  <|@
f <@~|@floating>@ <|@
tid v341 <|@
d <@d|@=== Debug Properties ===
displacement: 68
scale: Times1
stamp: void*
=== Inputs ===
base: j195 
index: - 
=== Succesors ===
=== Usages ===
v249 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j195 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v249 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v341 
value: a302 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v251 
=== Usages ===
=== Predecessor ===
v247 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v341 value: a302 stateAfter: - lastLocationAccess: - #next: v251  <|@  <|@
f <@~|@floating>@ <|@
tid v342 <|@
d <@d|@=== Debug Properties ===
displacement: 72
scale: Times1
stamp: void*
=== Inputs ===
base: j195 
index: - 
=== Succesors ===
=== Usages ===
v251 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j195 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v251 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v342 
value: a303 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v253 
=== Usages ===
=== Predecessor ===
v249 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v342 value: a303 stateAfter: - lastLocationAccess: - #next: v253  <|@  <|@
f <@~|@floating>@ <|@
tid v343 <|@
d <@d|@=== Debug Properties ===
displacement: 76
scale: Times1
stamp: void*
=== Inputs ===
base: j195 
index: - 
=== Succesors ===
=== Usages ===
v253 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j195 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v253 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v343 
value: a304 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v255 
=== Usages ===
=== Predecessor ===
v251 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v343 value: a304 stateAfter: - lastLocationAccess: - #next: v255  <|@  <|@
f <@~|@floating>@ <|@
tid v344 <|@
d <@d|@=== Debug Properties ===
displacement: 80
scale: Times1
stamp: void*
=== Inputs ===
base: j195 
index: - 
=== Succesors ===
=== Usages ===
v255 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j195 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v255 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v344 
value: a305 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v257 
=== Usages ===
=== Predecessor ===
v253 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v344 value: a305 stateAfter: - lastLocationAccess: - #next: v257  <|@  <|@
f <@~|@floating>@ <|@
tid v345 <|@
d <@d|@=== Debug Properties ===
displacement: 84
scale: Times1
stamp: void*
=== Inputs ===
base: j195 
index: - 
=== Succesors ===
=== Usages ===
v257 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j195 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a149 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Compress
stamp: n!# Ljava/lang/reflect/Method;
=== Inputs ===
value: a1 
=== Succesors ===
=== Usages ===
v257 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v257 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v345 
value: a149 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a152 
=== Usages ===
=== Predecessor ===
v255 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v345 value: a149 stateAfter: - lastLocationAccess: - #next: a152  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a152 <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a134 
=== Succesors ===
next: v153 
=== Usages ===
v29 
=== Predecessor ===
v257 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a134 #next: v153  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v153 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v29 
=== Usages ===
=== Predecessor ===
a152 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v29  <|@  <|@
f <@*|@fixed>@ <|@
tid v29 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.reflect.Method.copy(Method.java:159) [bci: 83]
stamp: void
=== Inputs ===
result: a152 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v153 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a152 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v129 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.reflect.Method.copy(Method.java:150) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v128 
=== Usages ===
=== Predecessor ===
v130 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v128  <|@  <|@
tid ?2 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<Method.copy()>
duringCall: false
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: Method.java
sourceLine: 150
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - 
=== Succesors ===
=== Usages ===
v128 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 -  <|@  <|@
f <@*|@fixed>@ <|@
tid v128 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 64
nodeSourcePosition: at java.lang.reflect.Method.copy(Method.java:150) [bci: 4]
reason: UnreachedCode
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?2 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v129 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?2  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a293 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: a293  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Ljava/lang/reflect/Method;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?2 v306 v307 v308 v309 v310 v311 v312 v313 v314 v315 v316 v317 a149 ?57 ?26 v318 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v306 <|@
result [v0|QWORD[.] + 84] <|@
d <@d|@=== Debug Properties ===
displacement: 84
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a293 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a293 <|@
result v1|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Method.root
nodeSourcePosition: at java.lang.reflect.Method.copy(Method.java:150) [bci: 1]
nullCheck: false
stamp: n# Ljava/lang/reflect/Method;
=== Inputs ===
stateBefore: - 
guard: - 
address: v306 
=== Succesors ===
next: v130 
=== Usages ===
v113 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v306 #next: v130  <|@  <|@
f <@~|@floating>@ <|@
tid v113 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.reflect.Method.copy(Method.java:150) [bci: 4]
stamp: void
=== Inputs ===
value: a293 
=== Succesors ===
=== Usages ===
v130 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a293  <|@  <|@
f <@*|@fixed>@ <|@
tid v130 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.reflect.Method.copy(Method.java:150) [bci: 4]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v113 
=== Succesors ===
trueSuccessor: v127 
falseSuccessor: v129 
=== Usages ===
=== Predecessor ===
a293 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v113 #trueSuccessor: v127 #falseSuccessor: v129  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@10a0a9be slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD[.] = MOV [v0|QWORD[.] + 84] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v1|DWORD[.], y: v1|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v127 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.reflect.Method.copy(Method.java:150) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: i294 
=== Usages ===
=== Predecessor ===
v130 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i294  <|@  <|@
f <@~|@floating>@ <|@
tid v313 <|@
result [v0|QWORD[.] + 32] <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i294 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i294 <|@
result v2|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Method.slot
nodeSourcePosition: at java.lang.reflect.Method.copy(Method.java:153) [bci: 46]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v313 
=== Succesors ===
next: i295 
=== Usages ===
?57 v230 
=== Predecessor ===
v127 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v313 #next: i295  <|@  <|@
f <@~|@floating>@ <|@
tid v312 <|@
result [v0|QWORD[.] + 36] <|@
d <@d|@=== Debug Properties ===
displacement: 36
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i295 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i295 <|@
result v3|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Method.modifiers
nodeSourcePosition: at java.lang.reflect.Method.copy(Method.java:153) [bci: 42]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v312 
=== Succesors ===
next: a296 
=== Usages ===
?57 v232 
=== Predecessor ===
i294 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v312 #next: a296  <|@  <|@
f <@~|@floating>@ <|@
tid v307 <|@
result [v0|QWORD[.] + 40] <|@
d <@d|@=== Debug Properties ===
displacement: 40
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a296 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a296 <|@
result v4|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Method.clazz
nodeSourcePosition: at java.lang.reflect.Method.copy(Method.java:153) [bci: 22]
nullCheck: false
stamp: n# Ljava/lang/Class;
=== Inputs ===
stateBefore: - 
guard: - 
address: v307 
=== Succesors ===
next: a297 
=== Usages ===
?57 v234 
=== Predecessor ===
i295 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v307 #next: a297  <|@  <|@
f <@~|@floating>@ <|@
tid v308 <|@
result [v0|QWORD[.] + 44] <|@
d <@d|@=== Debug Properties ===
displacement: 44
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a297 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a297 <|@
result v5|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Method.name
nodeSourcePosition: at java.lang.reflect.Method.copy(Method.java:153) [bci: 26]
nullCheck: false
stamp: n# Ljava/lang/String;
=== Inputs ===
stateBefore: - 
guard: - 
address: v308 
=== Succesors ===
next: a298 
=== Usages ===
?57 v236 
=== Predecessor ===
a296 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v308 #next: a298  <|@  <|@
f <@~|@floating>@ <|@
tid v310 <|@
result [v0|QWORD[.] + 48] <|@
d <@d|@=== Debug Properties ===
displacement: 48
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a298 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a298 <|@
result v6|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Method.returnType
nodeSourcePosition: at java.lang.reflect.Method.copy(Method.java:153) [bci: 34]
nullCheck: false
stamp: n# Ljava/lang/Class;
=== Inputs ===
stateBefore: - 
guard: - 
address: v310 
=== Succesors ===
next: a299 
=== Usages ===
?57 v238 
=== Predecessor ===
a297 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v310 #next: a299  <|@  <|@
f <@~|@floating>@ <|@
tid v309 <|@
result [v0|QWORD[.] + 52] <|@
d <@d|@=== Debug Properties ===
displacement: 52
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a299 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a299 <|@
result v7|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Method.parameterTypes
nodeSourcePosition: at java.lang.reflect.Method.copy(Method.java:153) [bci: 30]
nullCheck: false
stamp: n# [Ljava/lang/Class;
=== Inputs ===
stateBefore: - 
guard: - 
address: v309 
=== Succesors ===
next: a300 
=== Usages ===
?57 v240 
=== Predecessor ===
a298 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v309 #next: a300  <|@  <|@
f <@~|@floating>@ <|@
tid v311 <|@
result [v0|QWORD[.] + 56] <|@
d <@d|@=== Debug Properties ===
displacement: 56
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a300 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a300 <|@
result v8|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Method.exceptionTypes
nodeSourcePosition: at java.lang.reflect.Method.copy(Method.java:153) [bci: 38]
nullCheck: false
stamp: n# [Ljava/lang/Class;
=== Inputs ===
stateBefore: - 
guard: - 
address: v311 
=== Succesors ===
next: a301 
=== Usages ===
?57 v242 
=== Predecessor ===
a299 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v311 #next: a301  <|@  <|@
f <@~|@floating>@ <|@
tid v314 <|@
result [v0|QWORD[.] + 60] <|@
d <@d|@=== Debug Properties ===
displacement: 60
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a301 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a301 <|@
result v9|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Method.signature
nodeSourcePosition: at java.lang.reflect.Method.copy(Method.java:153) [bci: 50]
nullCheck: false
stamp: n# Ljava/lang/String;
=== Inputs ===
stateBefore: - 
guard: - 
address: v314 
=== Succesors ===
next: a302 
=== Usages ===
?57 v244 
=== Predecessor ===
a300 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v314 #next: a302  <|@  <|@
f <@~|@floating>@ <|@
tid v315 <|@
result [v0|QWORD[.] + 68] <|@
d <@d|@=== Debug Properties ===
displacement: 68
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a302 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a302 <|@
result v10|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Method.annotations
nodeSourcePosition: at java.lang.reflect.Method.copy(Method.java:153) [bci: 54]
nullCheck: false
stamp: n# [B
=== Inputs ===
stateBefore: - 
guard: - 
address: v315 
=== Succesors ===
next: a303 
=== Usages ===
?57 v249 
=== Predecessor ===
a301 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v315 #next: a303  <|@  <|@
f <@~|@floating>@ <|@
tid v316 <|@
result [v0|QWORD[.] + 72] <|@
d <@d|@=== Debug Properties ===
displacement: 72
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a303 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a303 <|@
result v11|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Method.parameterAnnotations
nodeSourcePosition: at java.lang.reflect.Method.copy(Method.java:153) [bci: 58]
nullCheck: false
stamp: n# [B
=== Inputs ===
stateBefore: - 
guard: - 
address: v316 
=== Succesors ===
next: a304 
=== Usages ===
?57 v251 
=== Predecessor ===
a302 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v316 #next: a304  <|@  <|@
f <@~|@floating>@ <|@
tid v317 <|@
result [v0|QWORD[.] + 76] <|@
d <@d|@=== Debug Properties ===
displacement: 76
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a304 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a304 <|@
result v12|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Method.annotationDefault
nodeSourcePosition: at java.lang.reflect.Method.copy(Method.java:153) [bci: 62]
nullCheck: false
stamp: n# [B
=== Inputs ===
stateBefore: - 
guard: - 
address: v317 
=== Succesors ===
next: v111 
=== Usages ===
?57 v253 
=== Predecessor ===
a303 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v317 #next: v111  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v111 <|@
d <@d|@=== Debug Properties ===
barriers: 0
location: ANY_LOCATION
nodeSourcePosition: at java.lang.reflect.Method.copy(Method.java:158) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
next: a305 
=== Usages ===
=== Predecessor ===
a304 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a305  <|@  <|@
f <@~|@floating>@ <|@
tid v318 <|@
result [v0|QWORD[.] + 80] <|@
d <@d|@=== Debug Properties ===
displacement: 80
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a305 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a305 <|@
result v13|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Method.methodAccessor
nodeSourcePosition: at java.lang.reflect.Method.copy(Method.java:158) [bci: 76]
nullCheck: false
stamp: n -
=== Inputs ===
stateBefore: - 
guard: - 
address: v318 
=== Succesors ===
next: v112 
=== Usages ===
?26 v255 
=== Predecessor ===
v111 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v318 #next: v112  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v112 <|@
d <@d|@=== Debug Properties ===
barriers: 3
location: ANY_LOCATION
nodeSourcePosition: at java.lang.reflect.Method.copy(Method.java:158) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
next: j160 
=== Usages ===
=== Predecessor ===
a305 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: j160  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j160 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j189 
=== Usages ===
v319 v320 
=== Predecessor ===
v112 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j189  <|@  <|@
f <@~|@floating>@ <|@
tid v319 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j160 
index: - 
=== Succesors ===
=== Usages ===
j189 v191 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j160 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j189 <|@
result v14|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v319 
=== Succesors ===
next: j190 
=== Usages ===
j259 j195 v324 v325 v326 v327 
=== Predecessor ===
j160 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v319 #next: j190  <|@  <|@
f <@~|@floating>@ <|@
tid v320 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j160 
index: - 
=== Succesors ===
=== Usages ===
j190 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j160 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j190 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v320 
=== Succesors ===
next: v168 
=== Usages ===
v165 
=== Predecessor ===
j189 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v320 #next: v168  <|@  <|@
f <@~|@floating>@ <|@
tid j258 <|@
result long[88|0x58] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 88
stableDimension: 0
stamp: i64 [88] ⇊0000000000000058 ⇈0000000000000058
stampKind: i64
value: long[88|0x58]
=== Inputs ===
=== Succesors ===
=== Usages ===
j259 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j259 <|@
result v15|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j189 
y: j258 
=== Succesors ===
=== Usages ===
v165 v191 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j189 y: j258  <|@  <|@
f <@~|@floating>@ <|@
tid v165 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j190 
y: j259 
=== Succesors ===
=== Usages ===
v168 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j190 y: j259  <|@  <|@
f <@*|@fixed>@ <|@
tid v168 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v165 
=== Succesors ===
trueSuccessor: v166 
falseSuccessor: v167 
=== Usages ===
=== Predecessor ===
j190 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v165 #trueSuccessor: v166 #falseSuccessor: v167  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOV [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOV [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD[.] = MOV [v0|QWORD[.] + 40] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD[.] = MOV [v0|QWORD[.] + 44] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|DWORD[.] = MOV [v0|QWORD[.] + 48] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|DWORD[.] = MOV [v0|QWORD[.] + 52] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|DWORD[.] = MOV [v0|QWORD[.] + 56] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD[.] = MOV [v0|QWORD[.] + 60] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|DWORD[.] = MOV [v0|QWORD[.] + 68] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|DWORD[.] = MOV [v0|QWORD[.] + 72] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD[.] = MOV [v0|QWORD[.] + 76] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|DWORD[.] = MOV [v0|QWORD[.] + 80] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = LEA [v14|QWORD + 88] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v15|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v166 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a173 
=== Usages ===
=== Predecessor ===
v168 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a173  <|@  <|@
tid a56 <|@
d <@d|@=== Debug Properties ===
fields: [Ljdk.vm.ci.hotspot.HotSpotResolvedJavaField;@152e4cd7
hasIdentity: true
objectId: 0
stamp: a!# Ljava/lang/reflect/Method;
type: HotSpotType<Ljava/lang/reflect/Method;, resolved>
=== Inputs ===
=== Succesors ===
=== Usages ===
?26 ?26 ?57 
=== Predecessor ===
- >@ <|@
instruction <@VirtualInstance|@org.graalvm.compiler.nodes.virtual.VirtualInstanceNode>@  <|@  <|@
tid ?57 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a56 
values: - - - - - i294 i295 a296 a297 a298 a299 a300 a301 - a302 a303 a304 - a1 
=== Succesors ===
=== Usages ===
?26 
=== Predecessor ===
- >@ <|@
instruction <@VirtualObjectState|@org.graalvm.compiler.virtual.nodes.VirtualObjectState>@ object: a56 values: - - - - - i294 i295 a296 a297 a298 a299 a300 a301 - a302 a303 a304 - a1  <|@  <|@
tid ?26 <|@
d <@d|@=== Debug Properties ===
bci: 79
code: ResolvedJavaMethodBytecode<Method.copy()>
duringCall: false
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.lang.reflect.Method.copy(Method.java:158) [bci: 76]
rethrowException: false
sourceFile: Method.java
sourceLine: 158
stackSize: 2
=== Inputs ===
outerFrameState: - 
values: a1 a56 a56 a305 
virtualObjectMappings: ?57 
=== Succesors ===
=== Usages ===
a173 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a56 a56 a305 virtualObjectMappings: ?57  <|@  <|@
f <@~|@floating>@ <|@
tid v157 <|@
result v16|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<[I, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[I, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a173 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i261 <|@
result int[18|0x12] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 18
stableDimension: 0
stamp: i32 [18] ⇊0000000000000012 ⇈0000000000000012
stampKind: i32
value: int[18|0x12]
=== Inputs ===
=== Succesors ===
=== Usages ===
a173 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i159 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
a173 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a173 <|@
result v17|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?26 
arguments: v157 i261 i159 
=== Succesors ===
next: j174 
=== Usages ===
j174 
=== Predecessor ===
v166 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?26 arguments: v157 i261 i159 #next: j174  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j174 <|@
result v17|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a173 
=== Succesors ===
next: v196 
=== Usages ===
j195 
=== Predecessor ===
a173 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a173 #next: v196  <|@  <|@
f <@*|@fixed>@ <|@
tid v196 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v193 
=== Predecessor ===
j174 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v16|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v16|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[18|0x12] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.reflect.Method.copy(Method.java:158) [bci: 79]
stack: vobject:Method:0{override=int[0|0x0],securityCheckCache=Object[null],hasRealParameterData=int[0|0x0],parameters=Object[null],declaredAnnotations=Object[null],slot=v2|DWORD,modifiers=v3|DWORD,clazz=v4|DWORD[.],name=v5|DWORD[.],returnType=v6|DWORD[.],parameterTypes=v7|DWORD[.],exceptionTypes=v8|DWORD[.],signature=v9|DWORD[.],genericInfo=Object[null],annotations=v10|DWORD[.],parameterAnnotations=v11|DWORD[.],annotationDefault=v12|DWORD[.],methodAccessor=Object[null],root=v0|QWORD[.]} v13|DWORD[.] 
locals: v0|QWORD[.] vobject:Method:0{override=int[0|0x0],securityCheckCache=Object[null],hasRealParameterData=int[0|0x0],parameters=Object[null],declaredAnnotations=Object[null],slot=v2|DWORD,modifiers=v3|DWORD,clazz=v4|DWORD[.],name=v5|DWORD[.],returnType=v6|DWORD[.],parameterTypes=v7|DWORD[.],exceptionTypes=v8|DWORD[.],signature=v9|DWORD[.],genericInfo=Object[null],annotations=v10|DWORD[.],parameterAnnotations=v11|DWORD[.],annotationDefault=v12|DWORD[.],methodAccessor=Object[null],root=v0|QWORD[.]} 
vobject:Method:0{override=int[0|0x0],securityCheckCache=Object[null],hasRealParameterData=int[0|0x0],parameters=Object[null],declaredAnnotations=Object[null],slot=v2|DWORD,modifiers=v3|DWORD,clazz=v4|DWORD[.],name=v5|DWORD[.],returnType=v6|DWORD[.],parameterTypes=v7|DWORD[.],exceptionTypes=v8|DWORD[.],signature=v9|DWORD[.],genericInfo=Object[null],annotations=v10|DWORD[.],parameterAnnotations=v11|DWORD[.],annotationDefault=v12|DWORD[.],methodAccessor=Object[null],root=v0|QWORD[.]} Ljava/lang/reflect/Method; int[0|0x0] Object[null] int[0|0x0] Object[null] Object[null] v2|DWORD v3|DWORD v4|DWORD[.] v5|DWORD[.] v6|DWORD[.] v7|DWORD[.] v8|DWORD[.] v9|DWORD[.] Object[null] v10|DWORD[.] v11|DWORD[.] v12|DWORD[.] Object[null] v0|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:79] <|@ <|@
      nr   -1  <|@ instruction v17|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v17|QWORD[.]] destination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v167 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v191 
=== Usages ===
=== Predecessor ===
v168 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v191  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v191 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v319 
value: j259 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v178 
=== Usages ===
=== Predecessor ===
v167 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v319 value: j259 stateAfter: - lastLocationAccess: - #next: v178  <|@  <|@
f <@~|@floating>@ <|@
tid v324 <|@
result [v14|QWORD + 280] <|@
d <@d|@=== Debug Properties ===
displacement: 280
scale: Times1
stamp: void*
=== Inputs ===
base: j189 
index: - 
=== Succesors ===
=== Usages ===
v178 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j189 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v178 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v324 
=== Succesors ===
next: v181 
=== Usages ===
=== Predecessor ===
v191 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v324 #next: v181  <|@  <|@
f <@~|@floating>@ <|@
tid v325 <|@
result [v14|QWORD + 344] <|@
d <@d|@=== Debug Properties ===
displacement: 344
scale: Times1
stamp: void*
=== Inputs ===
base: j189 
index: - 
=== Succesors ===
=== Usages ===
v181 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j189 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v181 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v325 
=== Succesors ===
next: v184 
=== Usages ===
=== Predecessor ===
v178 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v325 #next: v184  <|@  <|@
f <@~|@floating>@ <|@
tid v326 <|@
result [v14|QWORD + 408] <|@
d <@d|@=== Debug Properties ===
displacement: 408
scale: Times1
stamp: void*
=== Inputs ===
base: j189 
index: - 
=== Succesors ===
=== Usages ===
v184 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j189 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v184 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v326 
=== Succesors ===
next: v187 
=== Usages ===
=== Predecessor ===
v181 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v326 #next: v187  <|@  <|@
f <@~|@floating>@ <|@
tid v327 <|@
result [v14|QWORD + 472] <|@
d <@d|@=== Debug Properties ===
displacement: 472
scale: Times1
stamp: void*
=== Inputs ===
base: j189 
index: - 
=== Succesors ===
=== Usages ===
v187 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j189 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v187 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v327 
=== Succesors ===
next: v194 
=== Usages ===
=== Predecessor ===
v184 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v327 #next: v194  <|@  <|@
f <@*|@fixed>@ <|@
tid v194 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v193 
=== Predecessor ===
v187 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v15|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v14|QWORD + 280] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v14|QWORD + 344] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v14|QWORD + 408] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v14|QWORD + 472] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v14|QWORD] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" "B2" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j195 <|@
result v18|QWORD[*] <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v193 
values: j189 j174 
=== Succesors ===
=== Usages ===
v323 v322 a134 v328 v329 v330 v331 v332 v333 v334 v335 v336 v337 v338 v339 v340 v341 v342 v343 v344 v345 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v193 values: j189 j174  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v193 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v194 v196 
=== Succesors ===
next: a134 
=== Usages ===
j195 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v194 v196 #next: a134  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a134 <|@
result v19|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j195 
=== Succesors ===
next: j207 
=== Usages ===
a152 
=== Predecessor ===
v193 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j195 #next: j207  <|@  <|@
f <@~|@floating>@ <|@
tid v201 <|@
result v20|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/lang/reflect/Method;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Ljava/lang/reflect/Method;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
j202 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j202 <|@
result v20|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
input: v201 
=== Succesors ===
=== Usages ===
v321 
=== Predecessor ===
- >@ <|@
instruction <@PointerCast|@org.graalvm.compiler.hotspot.word.PointerCastNode>@ input: v201  <|@  <|@
f <@~|@floating>@ <|@
tid v321 <|@
result [v20|QWORD + 168] <|@
d <@d|@=== Debug Properties ===
displacement: 168
scale: Times1
stamp: void*
=== Inputs ===
base: j202 
index: - 
=== Succesors ===
=== Usages ===
j207 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j202 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j207 <|@
result v21|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v321 
=== Succesors ===
next: v208 
=== Usages ===
v208 
=== Predecessor ===
a134 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v321 #next: v208  <|@  <|@
f <@~|@floating>@ <|@
tid v322 <|@
result [v18|QWORD[*]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j195 
index: - 
=== Succesors ===
=== Usages ===
v208 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j195 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v208 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v322 
value: j207 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v212 
=== Usages ===
=== Predecessor ===
j207 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v322 value: j207 stateAfter: - lastLocationAccess: - #next: v212  <|@  <|@
f <@~|@floating>@ <|@
tid v323 <|@
result [v18|QWORD[*] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j195 
index: - 
=== Succesors ===
=== Usages ===
v212 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j195 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v270 <|@
result meta{HotSpotType<Ljava/lang/reflect/Method;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/lang/reflect/Method;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/lang/reflect/Method;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v212 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v212 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v323 
value: v270 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v218 
=== Usages ===
=== Predecessor ===
v208 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v323 value: v270 stateAfter: - lastLocationAccess: - #next: v218  <|@  <|@
f <@~|@floating>@ <|@
tid v328 <|@
result [v18|QWORD[*] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j195 
index: - 
=== Succesors ===
=== Usages ===
v218 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j195 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid i215 <|@
result byte[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 0
stableDimension: 0
stamp: i8
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v218 v225 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v218 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v328 
value: i215 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v222 
=== Usages ===
=== Predecessor ===
v212 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v328 value: i215 stateAfter: - lastLocationAccess: - #next: v222  <|@  <|@
f <@~|@floating>@ <|@
tid v329 <|@
result [v18|QWORD[*] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j195 
index: - 
=== Succesors ===
=== Usages ===
v222 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j195 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid i219 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v222 v247 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v222 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v329 
value: i219 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v225 
=== Usages ===
=== Predecessor ===
v218 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v329 value: i219 stateAfter: - lastLocationAccess: - #next: v225  <|@  <|@
f <@~|@floating>@ <|@
tid v330 <|@
result [v18|QWORD[*] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: j195 
index: - 
=== Succesors ===
=== Usages ===
v225 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j195 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v225 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v330 
value: i215 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v228 
=== Usages ===
=== Predecessor ===
v222 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v330 value: i215 stateAfter: - lastLocationAccess: - #next: v228  <|@  <|@
f <@~|@floating>@ <|@
tid v331 <|@
result [v18|QWORD[*] + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: j195 
index: - 
=== Succesors ===
=== Usages ===
v228 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j195 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j132 <|@
result long[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 0
stableDimension: 0
stamp: i64 [0] ⇈0000000000000000
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v228 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v228 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v331 
value: j132 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v230 
=== Usages ===
=== Predecessor ===
v225 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v331 value: j132 stateAfter: - lastLocationAccess: - #next: v230  <|@  <|@
f <@~|@floating>@ <|@
tid v332 <|@
result [v18|QWORD[*] + 32] <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times1
stamp: void*
=== Inputs ===
base: j195 
index: - 
=== Succesors ===
=== Usages ===
v230 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j195 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v230 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v332 
value: i294 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v232 
=== Usages ===
=== Predecessor ===
v228 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v332 value: i294 stateAfter: - lastLocationAccess: - #next: v232  <|@  <|@
f <@~|@floating>@ <|@
tid v333 <|@
result [v18|QWORD[*] + 36] <|@
d <@d|@=== Debug Properties ===
displacement: 36
scale: Times1
stamp: void*
=== Inputs ===
base: j195 
index: - 
=== Succesors ===
=== Usages ===
v232 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j195 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v232 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v333 
value: i295 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v234 
=== Usages ===
=== Predecessor ===
v230 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v333 value: i295 stateAfter: - lastLocationAccess: - #next: v234  <|@  <|@
f <@~|@floating>@ <|@
tid v334 <|@
result [v18|QWORD[*] + 40] <|@
d <@d|@=== Debug Properties ===
displacement: 40
scale: Times1
stamp: void*
=== Inputs ===
base: j195 
index: - 
=== Succesors ===
=== Usages ===
v234 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j195 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v234 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v334 
value: a296 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v236 
=== Usages ===
=== Predecessor ===
v232 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v334 value: a296 stateAfter: - lastLocationAccess: - #next: v236  <|@  <|@
f <@~|@floating>@ <|@
tid v335 <|@
result [v18|QWORD[*] + 44] <|@
d <@d|@=== Debug Properties ===
displacement: 44
scale: Times1
stamp: void*
=== Inputs ===
base: j195 
index: - 
=== Succesors ===
=== Usages ===
v236 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j195 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v236 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v335 
value: a297 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v238 
=== Usages ===
=== Predecessor ===
v234 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v335 value: a297 stateAfter: - lastLocationAccess: - #next: v238  <|@  <|@
f <@~|@floating>@ <|@
tid v336 <|@
result [v18|QWORD[*] + 48] <|@
d <@d|@=== Debug Properties ===
displacement: 48
scale: Times1
stamp: void*
=== Inputs ===
base: j195 
index: - 
=== Succesors ===
=== Usages ===
v238 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j195 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v238 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v336 
value: a298 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v240 
=== Usages ===
=== Predecessor ===
v236 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v336 value: a298 stateAfter: - lastLocationAccess: - #next: v240  <|@  <|@
f <@~|@floating>@ <|@
tid v337 <|@
result [v18|QWORD[*] + 52] <|@
d <@d|@=== Debug Properties ===
displacement: 52
scale: Times1
stamp: void*
=== Inputs ===
base: j195 
index: - 
=== Succesors ===
=== Usages ===
v240 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j195 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v240 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v337 
value: a299 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v242 
=== Usages ===
=== Predecessor ===
v238 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v337 value: a299 stateAfter: - lastLocationAccess: - #next: v242  <|@  <|@
f <@~|@floating>@ <|@
tid v338 <|@
result [v18|QWORD[*] + 56] <|@
d <@d|@=== Debug Properties ===
displacement: 56
scale: Times1
stamp: void*
=== Inputs ===
base: j195 
index: - 
=== Succesors ===
=== Usages ===
v242 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j195 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v242 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v338 
value: a300 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v244 
=== Usages ===
=== Predecessor ===
v240 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v338 value: a300 stateAfter: - lastLocationAccess: - #next: v244  <|@  <|@
f <@~|@floating>@ <|@
tid v339 <|@
result [v18|QWORD[*] + 60] <|@
d <@d|@=== Debug Properties ===
displacement: 60
scale: Times1
stamp: void*
=== Inputs ===
base: j195 
index: - 
=== Succesors ===
=== Usages ===
v244 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j195 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v244 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v339 
value: a301 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v247 
=== Usages ===
=== Predecessor ===
v242 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v339 value: a301 stateAfter: - lastLocationAccess: - #next: v247  <|@  <|@
f <@~|@floating>@ <|@
tid v340 <|@
result [v18|QWORD[*] + 64] <|@
d <@d|@=== Debug Properties ===
displacement: 64
scale: Times1
stamp: void*
=== Inputs ===
base: j195 
index: - 
=== Succesors ===
=== Usages ===
v247 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j195 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v247 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v340 
value: i219 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v249 
=== Usages ===
=== Predecessor ===
v244 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v340 value: i219 stateAfter: - lastLocationAccess: - #next: v249  <|@  <|@
f <@~|@floating>@ <|@
tid v341 <|@
result [v18|QWORD[*] + 68] <|@
d <@d|@=== Debug Properties ===
displacement: 68
scale: Times1
stamp: void*
=== Inputs ===
base: j195 
index: - 
=== Succesors ===
=== Usages ===
v249 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j195 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v249 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v341 
value: a302 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v251 
=== Usages ===
=== Predecessor ===
v247 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v341 value: a302 stateAfter: - lastLocationAccess: - #next: v251  <|@  <|@
f <@~|@floating>@ <|@
tid v342 <|@
result [v18|QWORD[*] + 72] <|@
d <@d|@=== Debug Properties ===
displacement: 72
scale: Times1
stamp: void*
=== Inputs ===
base: j195 
index: - 
=== Succesors ===
=== Usages ===
v251 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j195 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v251 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v342 
value: a303 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v253 
=== Usages ===
=== Predecessor ===
v249 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v342 value: a303 stateAfter: - lastLocationAccess: - #next: v253  <|@  <|@
f <@~|@floating>@ <|@
tid v343 <|@
result [v18|QWORD[*] + 76] <|@
d <@d|@=== Debug Properties ===
displacement: 76
scale: Times1
stamp: void*
=== Inputs ===
base: j195 
index: - 
=== Succesors ===
=== Usages ===
v253 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j195 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v253 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v343 
value: a304 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v255 
=== Usages ===
=== Predecessor ===
v251 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v343 value: a304 stateAfter: - lastLocationAccess: - #next: v255  <|@  <|@
f <@~|@floating>@ <|@
tid v344 <|@
result [v18|QWORD[*] + 80] <|@
d <@d|@=== Debug Properties ===
displacement: 80
scale: Times1
stamp: void*
=== Inputs ===
base: j195 
index: - 
=== Succesors ===
=== Usages ===
v255 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j195 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v255 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v344 
value: a305 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v257 
=== Usages ===
=== Predecessor ===
v253 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v344 value: a305 stateAfter: - lastLocationAccess: - #next: v257  <|@  <|@
f <@~|@floating>@ <|@
tid v345 <|@
result [v18|QWORD[*] + 84] <|@
d <@d|@=== Debug Properties ===
displacement: 84
scale: Times1
stamp: void*
=== Inputs ===
base: j195 
index: - 
=== Succesors ===
=== Usages ===
v257 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j195 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a149 <|@
result v22|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Compress
stamp: n!# Ljava/lang/reflect/Method;
=== Inputs ===
value: a1 
=== Succesors ===
=== Usages ===
v257 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v257 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v345 
value: a149 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a152 
=== Usages ===
=== Predecessor ===
v255 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v345 value: a149 stateAfter: - lastLocationAccess: - #next: a152  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a152 <|@
result v19|QWORD[.] <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a134 
=== Succesors ===
next: v153 
=== Usages ===
v29 
=== Predecessor ===
v257 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a134 #next: v153  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v153 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v29 
=== Usages ===
=== Predecessor ===
a152 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v29  <|@  <|@
f <@*|@fixed>@ <|@
tid v29 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.reflect.Method.copy(Method.java:159) [bci: 83]
stamp: void
=== Inputs ===
result: a152 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v153 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a152 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v18|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v19|QWORD[.] = MOVE v18|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/reflect/Method;, resolved>} <|@ <|@
      nr   -1  <|@ instruction v21|QWORD = MOV [v20|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v18|QWORD[*]], y: v21|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v18|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/reflect/Method;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v18|QWORD[*] + 12], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v18|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v18|QWORD[*] + 20], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v18|QWORD[*] + 24], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v18|QWORD[*] + 32], y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v18|QWORD[*] + 36], y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v18|QWORD[*] + 40], y: v4|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v18|QWORD[*] + 44], y: v5|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v18|QWORD[*] + 48], y: v6|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v18|QWORD[*] + 52], y: v7|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v18|QWORD[*] + 56], y: v8|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v18|QWORD[*] + 60], y: v9|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v18|QWORD[*] + 64], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v18|QWORD[*] + 68], y: v10|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v18|QWORD[*] + 72], y: v11|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v18|QWORD[*] + 76], y: v12|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v18|QWORD[*] + 80], y: v13|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v22|DWORD[.] = COMPRESSPOINTER (input: v0|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@20f01014 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v18|QWORD[*] + 84], y: v22|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v19|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v129 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.reflect.Method.copy(Method.java:150) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v128 
=== Usages ===
=== Predecessor ===
v130 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v128  <|@  <|@
tid ?2 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<Method.copy()>
duringCall: false
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: Method.java
sourceLine: 150
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - 
=== Succesors ===
=== Usages ===
v128 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 -  <|@  <|@
f <@*|@fixed>@ <|@
tid v128 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 64
nodeSourcePosition: at java.lang.reflect.Method.copy(Method.java:150) [bci: 4]
reason: UnreachedCode
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?2 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v129 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?2  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -16403 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.reflect.Method.copy(Method.java:150) [bci: 0]
locals: v0|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@10a0a9be slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD[.] = MOV [v0|QWORD[.] + 84] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v1|DWORD[.], y: v1|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOV [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOV [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD[.] = MOV [v0|QWORD[.] + 40] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD[.] = MOV [v0|QWORD[.] + 44] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|DWORD[.] = MOV [v0|QWORD[.] + 48] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|DWORD[.] = MOV [v0|QWORD[.] + 52] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|DWORD[.] = MOV [v0|QWORD[.] + 56] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD[.] = MOV [v0|QWORD[.] + 60] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|DWORD[.] = MOV [v0|QWORD[.] + 68] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|DWORD[.] = MOV [v0|QWORD[.] + 72] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD[.] = MOV [v0|QWORD[.] + 76] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|DWORD[.] = MOV [v0|QWORD[.] + 80] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = LEA [v14|QWORD + 88] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v15|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v15|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v14|QWORD + 280] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v14|QWORD + 344] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v14|QWORD + 408] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v14|QWORD + 472] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v14|QWORD] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" "B2" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v18|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v19|QWORD[.] = MOVE v18|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/reflect/Method;, resolved>} <|@ <|@
      nr   -1  <|@ instruction v21|QWORD = MOV [v20|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v18|QWORD[*]], y: v21|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v18|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/reflect/Method;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v18|QWORD[*] + 12], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v18|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v18|QWORD[*] + 20], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v18|QWORD[*] + 24], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v18|QWORD[*] + 32], y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v18|QWORD[*] + 36], y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v18|QWORD[*] + 40], y: v4|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v18|QWORD[*] + 44], y: v5|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v18|QWORD[*] + 48], y: v6|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v18|QWORD[*] + 52], y: v7|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v18|QWORD[*] + 56], y: v8|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v18|QWORD[*] + 60], y: v9|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v18|QWORD[*] + 64], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v18|QWORD[*] + 68], y: v10|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v18|QWORD[*] + 72], y: v11|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v18|QWORD[*] + 76], y: v12|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v18|QWORD[*] + 80], y: v13|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v22|DWORD[.] = COMPRESSPOINTER (input: v0|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@20f01014 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v18|QWORD[*] + 84], y: v22|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v19|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v16|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v16|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[18|0x12] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.reflect.Method.copy(Method.java:158) [bci: 79]
stack: vobject:Method:0{override=int[0|0x0],securityCheckCache=Object[null],hasRealParameterData=int[0|0x0],parameters=Object[null],declaredAnnotations=Object[null],slot=v2|DWORD,modifiers=v3|DWORD,clazz=v4|DWORD[.],name=v5|DWORD[.],returnType=v6|DWORD[.],parameterTypes=v7|DWORD[.],exceptionTypes=v8|DWORD[.],signature=v9|DWORD[.],genericInfo=Object[null],annotations=v10|DWORD[.],parameterAnnotations=v11|DWORD[.],annotationDefault=v12|DWORD[.],methodAccessor=Object[null],root=v0|QWORD[.]} v13|DWORD[.] 
locals: v0|QWORD[.] vobject:Method:0{override=int[0|0x0],securityCheckCache=Object[null],hasRealParameterData=int[0|0x0],parameters=Object[null],declaredAnnotations=Object[null],slot=v2|DWORD,modifiers=v3|DWORD,clazz=v4|DWORD[.],name=v5|DWORD[.],returnType=v6|DWORD[.],parameterTypes=v7|DWORD[.],exceptionTypes=v8|DWORD[.],signature=v9|DWORD[.],genericInfo=Object[null],annotations=v10|DWORD[.],parameterAnnotations=v11|DWORD[.],annotationDefault=v12|DWORD[.],methodAccessor=Object[null],root=v0|QWORD[.]} 
vobject:Method:0{override=int[0|0x0],securityCheckCache=Object[null],hasRealParameterData=int[0|0x0],parameters=Object[null],declaredAnnotations=Object[null],slot=v2|DWORD,modifiers=v3|DWORD,clazz=v4|DWORD[.],name=v5|DWORD[.],returnType=v6|DWORD[.],parameterTypes=v7|DWORD[.],exceptionTypes=v8|DWORD[.],signature=v9|DWORD[.],genericInfo=Object[null],annotations=v10|DWORD[.],parameterAnnotations=v11|DWORD[.],annotationDefault=v12|DWORD[.],methodAccessor=Object[null],root=v0|QWORD[.]} Ljava/lang/reflect/Method; int[0|0x0] Object[null] int[0|0x0] Object[null] Object[null] v2|DWORD v3|DWORD v4|DWORD[.] v5|DWORD[.] v6|DWORD[.] v7|DWORD[.] v8|DWORD[.] v9|DWORD[.] Object[null] v10|DWORD[.] v11|DWORD[.] v12|DWORD[.] Object[null] v0|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:79] <|@ <|@
      nr   -1  <|@ instruction v17|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v17|QWORD[.]] destination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -16403 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.reflect.Method.copy(Method.java:150) [bci: 0]
locals: v0|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #18         // root:java.lang.reflect.Method
     4: ifnull        17
     7: new           #20         // java.lang.IllegalArgumentException
    10: dup           
    11: ldc           #21         // "Can not copy a non-root Method"
    13: invokespecial #19         // java.lang.IllegalArgumentException.<init>:(java.lang.String)void
    16: athrow        
    17: new           #23         // java.lang.reflect.Method
    20: dup           
    21: aload_0       
    22: getfield      #8          // clazz:java.lang.Class
    25: aload_0       
    26: getfield      #9          // name:java.lang.String
    29: aload_0       
    30: getfield      #10         // parameterTypes:java.lang.Class[]
    33: aload_0       
    34: getfield      #11         // returnType:java.lang.Class
    37: aload_0       
    38: getfield      #12         // exceptionTypes:java.lang.Class[]
    41: aload_0       
    42: getfield      #13         // modifiers:int
    45: aload_0       
    46: getfield      #14         // slot:int
    49: aload_0       
    50: getfield      #0          // signature:java.lang.String
    53: aload_0       
    54: getfield      #15         // annotations:byte[]
    57: aload_0       
    58: getfield      #16         // parameterAnnotations:byte[]
    61: aload_0       
    62: getfield      #17         // annotationDefault:byte[]
    65: invokespecial #20         // <init>:(java.lang.Class, java.lang.String, java.lang.Class[], java.lang.Class, java.lang.Class[], int, int, java.lang.String, byte[], byte[], byte[])void
    68: astore_1      
    69: aload_1       
    70: aload_0       
    71: putfield      #18         // root:java.lang.reflect.Method
    74: aload_1       
    75: aload_0       
    76: getfield      #21         // methodAccessor:sun.reflect.MethodAccessor
    79: putfield      #21         // methodAccessor:sun.reflect.MethodAccessor
    82: aload_1       
    83: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@10a0a9be slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction stack:32|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ instruction rax|DWORD[.] = MOV [r13|QWORD[.] + 84] size: DWORD <|@ <|@
      nr   12  <|@ instruction TEST (x: rax|DWORD[.], y: rax|DWORD[.]) size: DWORD <|@ <|@
      nr   14  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   16  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   18  <|@ instruction r14|DWORD = MOV [r13|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   20  <|@ instruction r10|DWORD = MOV [r13|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   22  <|@ instruction r11|DWORD[.] = MOV [r13|QWORD[.] + 40] size: DWORD <|@ <|@
      nr   24  <|@ instruction r8|DWORD[.] = MOV [r13|QWORD[.] + 44] size: DWORD <|@ <|@
      nr   26  <|@ instruction r9|DWORD[.] = MOV [r13|QWORD[.] + 48] size: DWORD <|@ <|@
      nr   28  <|@ instruction rbx|DWORD[.] = MOV [r13|QWORD[.] + 52] size: DWORD <|@ <|@
      nr   30  <|@ instruction rdi|DWORD[.] = MOV [r13|QWORD[.] + 56] size: DWORD <|@ <|@
      nr   32  <|@ instruction rax|DWORD[.] = MOV [r13|QWORD[.] + 60] size: DWORD <|@ <|@
      nr   34  <|@ instruction rbp|DWORD[.] = MOV [r13|QWORD[.] + 68] size: DWORD <|@ <|@
      nr   36  <|@ instruction rcx|DWORD[.] = MOV [r13|QWORD[.] + 72] size: DWORD <|@ <|@
      nr   38  <|@ instruction rdx|DWORD[.] = MOV [r13|QWORD[.] + 76] size: DWORD <|@ <|@
      nr   40  <|@ instruction rsi|DWORD[.] = MOV [r13|QWORD[.] + 80] size: DWORD <|@ <|@
      nr   42  <|@ instruction stack:36|DWORD[.] = MOVE rsi|DWORD[.] moveKind: DWORD <|@ <|@
      nr   44  <|@ instruction r13|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   46  <|@ instruction rsi|QWORD = LEA [r13|QWORD + 88] size: QWORD <|@ <|@
      nr   48  <|@ instruction CMP (x: rsi|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   50  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  110  <|@ instruction MOV (x: [r15|QWORD + 96], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  112  <|@ instruction AMD64PREFETCH ~[r13|QWORD + 280] instr: 0 <|@ <|@
      nr  114  <|@ instruction AMD64PREFETCH ~[r13|QWORD + 344] instr: 0 <|@ <|@
      nr  116  <|@ instruction AMD64PREFETCH ~[r13|QWORD + 408] instr: 0 <|@ <|@
      nr  118  <|@ instruction AMD64PREFETCH ~[r13|QWORD + 472] instr: 0 <|@ <|@
      nr  120  <|@ instruction rsi|QWORD[*] = MOVE r13|QWORD moveKind: QWORD <|@ <|@
      nr  122  <|@ instruction JUMP ~[] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" "B2" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  124  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  126  <|@ instruction r13|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  128  <|@ instruction stack:80|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  130  <|@ instruction r13|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/reflect/Method;, resolved>} <|@ <|@
      nr  132  <|@ instruction r13|QWORD = MOV [r13|QWORD + 168] size: QWORD <|@ <|@
      nr  134  <|@ instruction MOV (x: [rsi|QWORD[*]], y: r13|QWORD) size: QWORD <|@ <|@
      nr  136  <|@ instruction MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/reflect/Method;, resolved>;compressed} <|@ <|@
      nr  138  <|@ instruction MOVB (x: [rsi|QWORD[*] + 12], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  140  <|@ instruction MOV (x: [rsi|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr  142  <|@ instruction MOVB (x: [rsi|QWORD[*] + 20], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  144  <|@ instruction MOV (x: [rsi|QWORD[*] + 24], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  146  <|@ instruction MOV (x: [rsi|QWORD[*] + 32], y: r14|DWORD) size: DWORD <|@ <|@
      nr  148  <|@ instruction MOV (x: [rsi|QWORD[*] + 36], y: r10|DWORD) size: DWORD <|@ <|@
      nr  150  <|@ instruction MOV (x: [rsi|QWORD[*] + 40], y: r11|DWORD[.]) size: DWORD <|@ <|@
      nr  152  <|@ instruction MOV (x: [rsi|QWORD[*] + 44], y: r8|DWORD[.]) size: DWORD <|@ <|@
      nr  154  <|@ instruction MOV (x: [rsi|QWORD[*] + 48], y: r9|DWORD[.]) size: DWORD <|@ <|@
      nr  156  <|@ instruction MOV (x: [rsi|QWORD[*] + 52], y: rbx|DWORD[.]) size: DWORD <|@ <|@
      nr  158  <|@ instruction MOV (x: [rsi|QWORD[*] + 56], y: rdi|DWORD[.]) size: DWORD <|@ <|@
      nr  160  <|@ instruction MOV (x: [rsi|QWORD[*] + 60], y: rax|DWORD[.]) size: DWORD <|@ <|@
      nr  162  <|@ instruction MOV (x: [rsi|QWORD[*] + 64], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr  164  <|@ instruction MOV (x: [rsi|QWORD[*] + 68], y: rbp|DWORD[.]) size: DWORD <|@ <|@
      nr  166  <|@ instruction MOV (x: [rsi|QWORD[*] + 72], y: rcx|DWORD[.]) size: DWORD <|@ <|@
      nr  168  <|@ instruction MOV (x: [rsi|QWORD[*] + 76], y: rdx|DWORD[.]) size: DWORD <|@ <|@
      nr  170  <|@ instruction rax|DWORD[.] = MOVE stack:36|DWORD[.] moveKind: DWORD <|@ <|@
      nr  172  <|@ instruction MOV (x: [rsi|QWORD[*] + 80], y: rax|DWORD[.]) size: DWORD <|@ <|@
      nr  174  <|@ instruction r13|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  176  <|@ instruction r13|DWORD[.] = COMPRESSPOINTER (input: r13|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@20f01014 encoding: base: 0 shift: 3 <|@ <|@
      nr  178  <|@ instruction MOV (x: [rsi|QWORD[*] + 84], y: r13|DWORD[.]) size: DWORD <|@ <|@
      nr  180  <|@ instruction rax|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  182  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   54  <|@ instruction stack:40|DWORD[.] = MOVE rcx|DWORD[.] moveKind: DWORD <|@ <|@
      nr   56  <|@ instruction stack:44|DWORD[.] = MOVE rbp|DWORD[.] moveKind: DWORD <|@ <|@
      nr   58  <|@ instruction stack:48|DWORD[.] = MOVE rax|DWORD[.] moveKind: DWORD <|@ <|@
      nr   60  <|@ instruction stack:52|DWORD[.] = MOVE rdi|DWORD[.] moveKind: DWORD <|@ <|@
      nr   62  <|@ instruction stack:56|DWORD[.] = MOVE rbx|DWORD[.] moveKind: DWORD <|@ <|@
      nr   64  <|@ instruction stack:60|DWORD[.] = MOVE r9|DWORD[.] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   66  <|@ instruction stack:64|DWORD[.] = MOVE r8|DWORD[.] moveKind: DWORD <|@ <|@
      nr   68  <|@ instruction stack:68|DWORD[.] = MOVE r11|DWORD[.] moveKind: DWORD <|@ <|@
      nr   70  <|@ instruction stack:72|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr   72  <|@ instruction r13|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   74  <|@ instruction rsi|QWORD = MOVE r13|QWORD moveKind: QWORD <|@ <|@
      nr   76  <|@ instruction r13|DWORD[.] = MOVE rdx|DWORD[.] moveKind: DWORD <|@ <|@
      nr   78  <|@ instruction rdx|DWORD = MOVE input: int[18|0x12] <|@ <|@
      nr   80  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   82  <|@ st <@st|@reference-map: [r13:0, stack:12, stack:16, stack:20, stack:24, stack:28, stack:32, stack:36, stack:40, stack:44, stack:48]
live-base-pointers: []
java.lang.reflect.Method.copy(Method.java:158) [bci: 79]
stack: vobject:Method:0{override=int[0|0x0],securityCheckCache=Object[null],hasRealParameterData=int[0|0x0],parameters=Object[null],declaredAnnotations=Object[null],slot=r14|DWORD,modifiers=stack:72|DWORD,clazz=stack:68|DWORD[.],name=stack:64|DWORD[.],returnType=stack:60|DWORD[.],parameterTypes=stack:56|DWORD[.],exceptionTypes=stack:52|DWORD[.],signature=stack:48|DWORD[.],genericInfo=Object[null],annotations=stack:44|DWORD[.],parameterAnnotations=stack:40|DWORD[.],annotationDefault=r13|DWORD[.],methodAccessor=Object[null],root=stack:32|QWORD[.]} stack:36|DWORD[.] 
locals: stack:32|QWORD[.] vobject:Method:0{override=int[0|0x0],securityCheckCache=Object[null],hasRealParameterData=int[0|0x0],parameters=Object[null],declaredAnnotations=Object[null],slot=r14|DWORD,modifiers=stack:72|DWORD,clazz=stack:68|DWORD[.],name=stack:64|DWORD[.],returnType=stack:60|DWORD[.],parameterTypes=stack:56|DWORD[.],exceptionTypes=stack:52|DWORD[.],signature=stack:48|DWORD[.],genericInfo=Object[null],annotations=stack:44|DWORD[.],parameterAnnotations=stack:40|DWORD[.],annotationDefault=r13|DWORD[.],methodAccessor=Object[null],root=stack:32|QWORD[.]} 
vobject:Method:0{override=int[0|0x0],securityCheckCache=Object[null],hasRealParameterData=int[0|0x0],parameters=Object[null],declaredAnnotations=Object[null],slot=r14|DWORD,modifiers=stack:72|DWORD,clazz=stack:68|DWORD[.],name=stack:64|DWORD[.],returnType=stack:60|DWORD[.],parameterTypes=stack:56|DWORD[.],exceptionTypes=stack:52|DWORD[.],signature=stack:48|DWORD[.],genericInfo=Object[null],annotations=stack:44|DWORD[.],parameterAnnotations=stack:40|DWORD[.],annotationDefault=r13|DWORD[.],methodAccessor=Object[null],root=stack:32|QWORD[.]} Ljava/lang/reflect/Method; int[0|0x0] Object[null] int[0|0x0] Object[null] Object[null] r14|DWORD stack:72|DWORD stack:68|DWORD[.] stack:64|DWORD[.] stack:60|DWORD[.] stack:56|DWORD[.] stack:52|DWORD[.] stack:48|DWORD[.] Object[null] stack:44|DWORD[.] stack:40|DWORD[.] r13|DWORD[.] Object[null] stack:32|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:79] <|@ <|@
      nr   84  <|@ instruction rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   86  <|@ instruction rdx|DWORD[.] = MOVE r13|DWORD[.] moveKind: DWORD <|@ <|@
      nr   88  <|@ instruction rcx|DWORD[.] = MOVE stack:40|DWORD[.] moveKind: DWORD <|@ <|@
      nr   90  <|@ instruction rbp|DWORD[.] = MOVE stack:44|DWORD[.] moveKind: DWORD <|@ <|@
      nr   92  <|@ instruction rax|DWORD[.] = MOVE stack:48|DWORD[.] moveKind: DWORD <|@ <|@
      nr   94  <|@ instruction rdi|DWORD[.] = MOVE stack:52|DWORD[.] moveKind: DWORD <|@ <|@
      nr   96  <|@ instruction rbx|DWORD[.] = MOVE stack:56|DWORD[.] moveKind: DWORD <|@ <|@
      nr   98  <|@ instruction r9|DWORD[.] = MOVE stack:60|DWORD[.] moveKind: DWORD <|@ <|@
      nr  100  <|@ instruction r8|DWORD[.] = MOVE stack:64|DWORD[.] moveKind: DWORD <|@ <|@
      nr  102  <|@ instruction r11|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD <|@ <|@
      nr  104  <|@ instruction r10|DWORD = MOVE stack:72|DWORD moveKind: DWORD <|@ <|@
      nr  106  <|@ instruction JUMP ~[] destination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  184  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  186  <|@ instruction MOV [r15|QWORD + 668] y: -16403 size: DWORD <|@ <|@
      nr  188  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  190  <|@ st <@st|@reference-map: [r13:0]
live-base-pointers: []
java.lang.reflect.Method.copy(Method.java:150) [bci: 0]
locals: r13|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #18         // root:java.lang.reflect.Method
     4: ifnull        17
     7: new           #20         // java.lang.IllegalArgumentException
    10: dup           
    11: ldc           #21         // "Can not copy a non-root Method"
    13: invokespecial #19         // java.lang.IllegalArgumentException.<init>:(java.lang.String)void
    16: athrow        
    17: new           #23         // java.lang.reflect.Method
    20: dup           
    21: aload_0       
    22: getfield      #8          // clazz:java.lang.Class
    25: aload_0       
    26: getfield      #9          // name:java.lang.String
    29: aload_0       
    30: getfield      #10         // parameterTypes:java.lang.Class[]
    33: aload_0       
    34: getfield      #11         // returnType:java.lang.Class
    37: aload_0       
    38: getfield      #12         // exceptionTypes:java.lang.Class[]
    41: aload_0       
    42: getfield      #13         // modifiers:int
    45: aload_0       
    46: getfield      #14         // slot:int
    49: aload_0       
    50: getfield      #0          // signature:java.lang.String
    53: aload_0       
    54: getfield      #15         // annotations:byte[]
    57: aload_0       
    58: getfield      #16         // parameterAnnotations:byte[]
    61: aload_0       
    62: getfield      #17         // annotationDefault:byte[]
    65: invokespecial #20         // <init>:(java.lang.Class, java.lang.String, java.lang.Class[], java.lang.Class, java.lang.Class[], int, int, java.lang.String, byte[], byte[], byte[])void
    68: astore_1      
    69: aload_1       
    70: aload_0       
    71: putfield      #18         // root:java.lang.reflect.Method
    74: aload_1       
    75: aload_0       
    76: getfield      #21         // methodAccessor:sun.reflect.MethodAccessor
    79: putfield      #21         // methodAccessor:sun.reflect.MethodAccessor
    82: aload_1       
    83: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@10a0a9be slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction stack:32|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ instruction rax|DWORD[.] = MOV [r13|QWORD[.] + 84] size: DWORD <|@ <|@
      nr   12  <|@ instruction TEST (x: rax|DWORD[.], y: rax|DWORD[.]) size: DWORD <|@ <|@
      nr   14  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   16  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   18  <|@ instruction r14|DWORD = MOV [r13|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   20  <|@ instruction r10|DWORD = MOV [r13|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   22  <|@ instruction r11|DWORD[.] = MOV [r13|QWORD[.] + 40] size: DWORD <|@ <|@
      nr   24  <|@ instruction r8|DWORD[.] = MOV [r13|QWORD[.] + 44] size: DWORD <|@ <|@
      nr   26  <|@ instruction r9|DWORD[.] = MOV [r13|QWORD[.] + 48] size: DWORD <|@ <|@
      nr   28  <|@ instruction rbx|DWORD[.] = MOV [r13|QWORD[.] + 52] size: DWORD <|@ <|@
      nr   30  <|@ instruction rdi|DWORD[.] = MOV [r13|QWORD[.] + 56] size: DWORD <|@ <|@
      nr   32  <|@ instruction rax|DWORD[.] = MOV [r13|QWORD[.] + 60] size: DWORD <|@ <|@
      nr   34  <|@ instruction rbp|DWORD[.] = MOV [r13|QWORD[.] + 68] size: DWORD <|@ <|@
      nr   36  <|@ instruction rcx|DWORD[.] = MOV [r13|QWORD[.] + 72] size: DWORD <|@ <|@
      nr   38  <|@ instruction rdx|DWORD[.] = MOV [r13|QWORD[.] + 76] size: DWORD <|@ <|@
      nr   40  <|@ instruction rsi|DWORD[.] = MOV [r13|QWORD[.] + 80] size: DWORD <|@ <|@
      nr   42  <|@ instruction stack:36|DWORD[.] = MOVE rsi|DWORD[.] moveKind: DWORD <|@ <|@
      nr   44  <|@ instruction r13|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   46  <|@ instruction rsi|QWORD = LEA [r13|QWORD + 88] size: QWORD <|@ <|@
      nr   48  <|@ instruction CMP (x: rsi|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   50  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  110  <|@ instruction MOV (x: [r15|QWORD + 96], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  112  <|@ instruction AMD64PREFETCH ~[r13|QWORD + 280] instr: 0 <|@ <|@
      nr  114  <|@ instruction AMD64PREFETCH ~[r13|QWORD + 344] instr: 0 <|@ <|@
      nr  116  <|@ instruction AMD64PREFETCH ~[r13|QWORD + 408] instr: 0 <|@ <|@
      nr  118  <|@ instruction AMD64PREFETCH ~[r13|QWORD + 472] instr: 0 <|@ <|@
      nr  120  <|@ instruction rsi|QWORD[*] = MOVE r13|QWORD moveKind: QWORD <|@ <|@
      nr  122  <|@ instruction JUMP ~[] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" "B2" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  124  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  126  <|@ instruction r13|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  128  <|@ instruction stack:80|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  130  <|@ instruction r13|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/reflect/Method;, resolved>} <|@ <|@
      nr  132  <|@ instruction r13|QWORD = MOV [r13|QWORD + 168] size: QWORD <|@ <|@
      nr  134  <|@ instruction MOV (x: [rsi|QWORD[*]], y: r13|QWORD) size: QWORD <|@ <|@
      nr  136  <|@ instruction MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/reflect/Method;, resolved>;compressed} <|@ <|@
      nr  138  <|@ instruction MOVB (x: [rsi|QWORD[*] + 12], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  140  <|@ instruction MOV (x: [rsi|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr  142  <|@ instruction MOVB (x: [rsi|QWORD[*] + 20], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  144  <|@ instruction MOV (x: [rsi|QWORD[*] + 24], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  146  <|@ instruction MOV (x: [rsi|QWORD[*] + 32], y: r14|DWORD) size: DWORD <|@ <|@
      nr  148  <|@ instruction MOV (x: [rsi|QWORD[*] + 36], y: r10|DWORD) size: DWORD <|@ <|@
      nr  150  <|@ instruction MOV (x: [rsi|QWORD[*] + 40], y: r11|DWORD[.]) size: DWORD <|@ <|@
      nr  152  <|@ instruction MOV (x: [rsi|QWORD[*] + 44], y: r8|DWORD[.]) size: DWORD <|@ <|@
      nr  154  <|@ instruction MOV (x: [rsi|QWORD[*] + 48], y: r9|DWORD[.]) size: DWORD <|@ <|@
      nr  156  <|@ instruction MOV (x: [rsi|QWORD[*] + 52], y: rbx|DWORD[.]) size: DWORD <|@ <|@
      nr  158  <|@ instruction MOV (x: [rsi|QWORD[*] + 56], y: rdi|DWORD[.]) size: DWORD <|@ <|@
      nr  160  <|@ instruction MOV (x: [rsi|QWORD[*] + 60], y: rax|DWORD[.]) size: DWORD <|@ <|@
      nr  162  <|@ instruction MOV (x: [rsi|QWORD[*] + 64], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr  164  <|@ instruction MOV (x: [rsi|QWORD[*] + 68], y: rbp|DWORD[.]) size: DWORD <|@ <|@
      nr  166  <|@ instruction MOV (x: [rsi|QWORD[*] + 72], y: rcx|DWORD[.]) size: DWORD <|@ <|@
      nr  168  <|@ instruction MOV (x: [rsi|QWORD[*] + 76], y: rdx|DWORD[.]) size: DWORD <|@ <|@
      nr  170  <|@ instruction rax|DWORD[.] = MOVE stack:36|DWORD[.] moveKind: DWORD <|@ <|@
      nr  172  <|@ instruction MOV (x: [rsi|QWORD[*] + 80], y: rax|DWORD[.]) size: DWORD <|@ <|@
      nr  174  <|@ instruction r13|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  176  <|@ instruction r13|DWORD[.] = COMPRESSPOINTER (input: r13|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@20f01014 encoding: base: 0 shift: 3 <|@ <|@
      nr  178  <|@ instruction MOV (x: [rsi|QWORD[*] + 84], y: r13|DWORD[.]) size: DWORD <|@ <|@
      nr  180  <|@ instruction rax|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  182  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   54  <|@ instruction stack:40|DWORD[.] = MOVE rcx|DWORD[.] moveKind: DWORD <|@ <|@
      nr   56  <|@ instruction stack:44|DWORD[.] = MOVE rbp|DWORD[.] moveKind: DWORD <|@ <|@
      nr   58  <|@ instruction stack:48|DWORD[.] = MOVE rax|DWORD[.] moveKind: DWORD <|@ <|@
      nr   60  <|@ instruction stack:52|DWORD[.] = MOVE rdi|DWORD[.] moveKind: DWORD <|@ <|@
      nr   62  <|@ instruction stack:56|DWORD[.] = MOVE rbx|DWORD[.] moveKind: DWORD <|@ <|@
      nr   64  <|@ instruction stack:60|DWORD[.] = MOVE r9|DWORD[.] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   66  <|@ instruction stack:64|DWORD[.] = MOVE r8|DWORD[.] moveKind: DWORD <|@ <|@
      nr   68  <|@ instruction stack:68|DWORD[.] = MOVE r11|DWORD[.] moveKind: DWORD <|@ <|@
      nr   70  <|@ instruction stack:72|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr   72  <|@ instruction r13|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   74  <|@ instruction rsi|QWORD = MOVE r13|QWORD moveKind: QWORD <|@ <|@
      nr   76  <|@ instruction r13|DWORD[.] = MOVE rdx|DWORD[.] moveKind: DWORD <|@ <|@
      nr   78  <|@ instruction rdx|DWORD = MOVE input: int[18|0x12] <|@ <|@
      nr   80  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   82  <|@ st <@st|@reference-map: [r13:0, stack:12, stack:16, stack:20, stack:24, stack:28, stack:32, stack:36, stack:40, stack:44, stack:48]
live-base-pointers: []
java.lang.reflect.Method.copy(Method.java:158) [bci: 79]
stack: vobject:Method:0{override=int[0|0x0],securityCheckCache=Object[null],hasRealParameterData=int[0|0x0],parameters=Object[null],declaredAnnotations=Object[null],slot=r14|DWORD,modifiers=stack:72|DWORD,clazz=stack:68|DWORD[.],name=stack:64|DWORD[.],returnType=stack:60|DWORD[.],parameterTypes=stack:56|DWORD[.],exceptionTypes=stack:52|DWORD[.],signature=stack:48|DWORD[.],genericInfo=Object[null],annotations=stack:44|DWORD[.],parameterAnnotations=stack:40|DWORD[.],annotationDefault=r13|DWORD[.],methodAccessor=Object[null],root=stack:32|QWORD[.]} stack:36|DWORD[.] 
locals: stack:32|QWORD[.] vobject:Method:0{override=int[0|0x0],securityCheckCache=Object[null],hasRealParameterData=int[0|0x0],parameters=Object[null],declaredAnnotations=Object[null],slot=r14|DWORD,modifiers=stack:72|DWORD,clazz=stack:68|DWORD[.],name=stack:64|DWORD[.],returnType=stack:60|DWORD[.],parameterTypes=stack:56|DWORD[.],exceptionTypes=stack:52|DWORD[.],signature=stack:48|DWORD[.],genericInfo=Object[null],annotations=stack:44|DWORD[.],parameterAnnotations=stack:40|DWORD[.],annotationDefault=r13|DWORD[.],methodAccessor=Object[null],root=stack:32|QWORD[.]} 
vobject:Method:0{override=int[0|0x0],securityCheckCache=Object[null],hasRealParameterData=int[0|0x0],parameters=Object[null],declaredAnnotations=Object[null],slot=r14|DWORD,modifiers=stack:72|DWORD,clazz=stack:68|DWORD[.],name=stack:64|DWORD[.],returnType=stack:60|DWORD[.],parameterTypes=stack:56|DWORD[.],exceptionTypes=stack:52|DWORD[.],signature=stack:48|DWORD[.],genericInfo=Object[null],annotations=stack:44|DWORD[.],parameterAnnotations=stack:40|DWORD[.],annotationDefault=r13|DWORD[.],methodAccessor=Object[null],root=stack:32|QWORD[.]} Ljava/lang/reflect/Method; int[0|0x0] Object[null] int[0|0x0] Object[null] Object[null] r14|DWORD stack:72|DWORD stack:68|DWORD[.] stack:64|DWORD[.] stack:60|DWORD[.] stack:56|DWORD[.] stack:52|DWORD[.] stack:48|DWORD[.] Object[null] stack:44|DWORD[.] stack:40|DWORD[.] r13|DWORD[.] Object[null] stack:32|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:79] <|@ <|@
      nr   84  <|@ instruction rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   86  <|@ instruction rdx|DWORD[.] = MOVE r13|DWORD[.] moveKind: DWORD <|@ <|@
      nr   88  <|@ instruction rcx|DWORD[.] = MOVE stack:40|DWORD[.] moveKind: DWORD <|@ <|@
      nr   90  <|@ instruction rbp|DWORD[.] = MOVE stack:44|DWORD[.] moveKind: DWORD <|@ <|@
      nr   92  <|@ instruction rax|DWORD[.] = MOVE stack:48|DWORD[.] moveKind: DWORD <|@ <|@
      nr   94  <|@ instruction rdi|DWORD[.] = MOVE stack:52|DWORD[.] moveKind: DWORD <|@ <|@
      nr   96  <|@ instruction rbx|DWORD[.] = MOVE stack:56|DWORD[.] moveKind: DWORD <|@ <|@
      nr   98  <|@ instruction r9|DWORD[.] = MOVE stack:60|DWORD[.] moveKind: DWORD <|@ <|@
      nr  100  <|@ instruction r8|DWORD[.] = MOVE stack:64|DWORD[.] moveKind: DWORD <|@ <|@
      nr  102  <|@ instruction r11|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD <|@ <|@
      nr  104  <|@ instruction r10|DWORD = MOVE stack:72|DWORD moveKind: DWORD <|@ <|@
      nr  106  <|@ instruction JUMP ~[] destination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  184  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  186  <|@ instruction MOV [r15|QWORD + 668] y: -16403 size: DWORD <|@ <|@
      nr  188  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  190  <|@ st <@st|@reference-map: [r13:0]
live-base-pointers: []
java.lang.reflect.Method.copy(Method.java:150) [bci: 0]
locals: r13|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #18         // root:java.lang.reflect.Method
     4: ifnull        17
     7: new           #20         // java.lang.IllegalArgumentException
    10: dup           
    11: ldc           #21         // "Can not copy a non-root Method"
    13: invokespecial #19         // java.lang.IllegalArgumentException.<init>:(java.lang.String)void
    16: athrow        
    17: new           #23         // java.lang.reflect.Method
    20: dup           
    21: aload_0       
    22: getfield      #8          // clazz:java.lang.Class
    25: aload_0       
    26: getfield      #9          // name:java.lang.String
    29: aload_0       
    30: getfield      #10         // parameterTypes:java.lang.Class[]
    33: aload_0       
    34: getfield      #11         // returnType:java.lang.Class
    37: aload_0       
    38: getfield      #12         // exceptionTypes:java.lang.Class[]
    41: aload_0       
    42: getfield      #13         // modifiers:int
    45: aload_0       
    46: getfield      #14         // slot:int
    49: aload_0       
    50: getfield      #0          // signature:java.lang.String
    53: aload_0       
    54: getfield      #15         // annotations:byte[]
    57: aload_0       
    58: getfield      #16         // parameterAnnotations:byte[]
    61: aload_0       
    62: getfield      #17         // annotationDefault:byte[]
    65: invokespecial #20         // <init>:(java.lang.Class, java.lang.String, java.lang.Class[], java.lang.Class, java.lang.Class[], int, int, java.lang.String, byte[], byte[], byte[])void
    68: astore_1      
    69: aload_1       
    70: aload_0       
    71: putfield      #18         // root:java.lang.reflect.Method
    74: aload_1       
    75: aload_0       
    76: getfield      #21         // methodAccessor:sun.reflect.MethodAccessor
    79: putfield      #21         // methodAccessor:sun.reflect.MethodAccessor
    82: aload_1       
    83: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849c1e203493bc20f85efffffff900f1f80000000000f1f800000000089842400c0feff4883ec4848896c24404c8bee4c896c2430418b455485c00f856f010000458b7520458b5524458b5d28458b452c458b4d30418b5d34418b7d38418b453c418b6d44418b4d48418b554c418b75508974242c4d8b6f60498d7558493b77700f87ae00000049897760410f188518010000410f188558010000410f188598010000410f1885d8010000498bf54c8bee4c892c2449bdaddeaddeaddeadde4d8bada80000004c892ec74608addeadde4488660c44896610448866144c896618448976204489562444895e284489462c44894e30895e34897e3889463c44896640896e44894e4889564c8b44242c8946504c8b6c243049c1ed0344896e54488b0424488b6c24404883c448850500000000c5f877c3894c2428896c242489442420897c241c895c241844894c2414448944241044895c240c448954240849bdaddeaddeaddeadde498bf5448beaba12000000b901000000e80000000090488bf0418bd58b4c24288b6c24248b4424208b7c241c8b5c2418448b4c2414448b442410448b5c240c448b542408e9fefeffff41c7879c020000edbfffff4d89a7a8020000e80000000090e80000000090e80000000090  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@10a0a9be slotKind: QWORD  <||@
  Comment 48 6 r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 51 8 stack:32|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 56 10 rax|DWORD[.] = MOV [r13|QWORD[.] + 84] size: DWORD  <||@
  Comment 60 12 TEST (x: rax|DWORD[.], y: rax|DWORD[.]) size: DWORD  <||@
  Comment 62 14 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B5  <||@
  Comment 68 block B1 null  <||@
  Comment 68 16 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 68 18 r14|DWORD = MOV [r13|QWORD[.] + 32] size: DWORD  <||@
  Comment 72 20 r10|DWORD = MOV [r13|QWORD[.] + 36] size: DWORD  <||@
  Comment 76 22 r11|DWORD[.] = MOV [r13|QWORD[.] + 40] size: DWORD  <||@
  Comment 80 24 r8|DWORD[.] = MOV [r13|QWORD[.] + 44] size: DWORD  <||@
  Comment 84 26 r9|DWORD[.] = MOV [r13|QWORD[.] + 48] size: DWORD  <||@
  Comment 88 28 rbx|DWORD[.] = MOV [r13|QWORD[.] + 52] size: DWORD  <||@
  Comment 92 30 rdi|DWORD[.] = MOV [r13|QWORD[.] + 56] size: DWORD  <||@
  Comment 96 32 rax|DWORD[.] = MOV [r13|QWORD[.] + 60] size: DWORD  <||@
  Comment 100 34 rbp|DWORD[.] = MOV [r13|QWORD[.] + 68] size: DWORD  <||@
  Comment 104 36 rcx|DWORD[.] = MOV [r13|QWORD[.] + 72] size: DWORD  <||@
  Comment 108 38 rdx|DWORD[.] = MOV [r13|QWORD[.] + 76] size: DWORD  <||@
  Comment 112 40 rsi|DWORD[.] = MOV [r13|QWORD[.] + 80] size: DWORD  <||@
  Comment 116 42 stack:36|DWORD[.] = MOVE rsi|DWORD[.] moveKind: DWORD  <||@
  Comment 120 44 r13|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 124 46 rsi|QWORD = LEA [r13|QWORD + 88] size: QWORD  <||@
  Comment 128 48 CMP (x: rsi|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 132 50 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B3  <||@
  Comment 138 block B3 null  <||@
  Comment 138 108 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 138 110 MOV (x: [r15|QWORD + 96], y: rsi|QWORD) size: QWORD  <||@
  Comment 142 112 AMD64PREFETCH ~[r13|QWORD + 280] instr: 0  <||@
  Comment 150 114 AMD64PREFETCH ~[r13|QWORD + 344] instr: 0  <||@
  Comment 158 116 AMD64PREFETCH ~[r13|QWORD + 408] instr: 0  <||@
  Comment 166 118 AMD64PREFETCH ~[r13|QWORD + 472] instr: 0  <||@
  Comment 174 120 rsi|QWORD[*] = MOVE r13|QWORD moveKind: QWORD  <||@
  Comment 177 122 JUMP ~[] destination: B3 -> B4  <||@
  Comment 177 block B4 null  <||@
  Comment 177 124 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 177 126 r13|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD  <||@
  Comment 180 128 stack:80|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 184 130 r13|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/reflect/Method;, resolved>}  <||@
  Comment 184 {meta{HotSpotType<Ljava/lang/reflect/Method;, resolved>}}  <||@
  Comment 194 132 r13|QWORD = MOV [r13|QWORD + 168] size: QWORD  <||@
  Comment 201 134 MOV (x: [rsi|QWORD[*]], y: r13|QWORD) size: QWORD  <||@
  Comment 204 136 MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/reflect/Method;, resolved>;compressed}  <||@
  Comment 204 {meta{HotSpotType<Ljava/lang/reflect/Method;, resolved>;compressed}}  <||@
  Comment 211 138 MOVB (x: [rsi|QWORD[*] + 12], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 215 140 MOV (x: [rsi|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 219 142 MOVB (x: [rsi|QWORD[*] + 20], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 223 144 MOV (x: [rsi|QWORD[*] + 24], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 227 146 MOV (x: [rsi|QWORD[*] + 32], y: r14|DWORD) size: DWORD  <||@
  Comment 231 148 MOV (x: [rsi|QWORD[*] + 36], y: r10|DWORD) size: DWORD  <||@
  Comment 235 150 MOV (x: [rsi|QWORD[*] + 40], y: r11|DWORD[.]) size: DWORD  <||@
  Comment 239 152 MOV (x: [rsi|QWORD[*] + 44], y: r8|DWORD[.]) size: DWORD  <||@
  Comment 243 154 MOV (x: [rsi|QWORD[*] + 48], y: r9|DWORD[.]) size: DWORD  <||@
  Comment 247 156 MOV (x: [rsi|QWORD[*] + 52], y: rbx|DWORD[.]) size: DWORD  <||@
  Comment 250 158 MOV (x: [rsi|QWORD[*] + 56], y: rdi|DWORD[.]) size: DWORD  <||@
  Comment 253 160 MOV (x: [rsi|QWORD[*] + 60], y: rax|DWORD[.]) size: DWORD  <||@
  Comment 256 162 MOV (x: [rsi|QWORD[*] + 64], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 260 164 MOV (x: [rsi|QWORD[*] + 68], y: rbp|DWORD[.]) size: DWORD  <||@
  Comment 263 166 MOV (x: [rsi|QWORD[*] + 72], y: rcx|DWORD[.]) size: DWORD  <||@
  Comment 266 168 MOV (x: [rsi|QWORD[*] + 76], y: rdx|DWORD[.]) size: DWORD  <||@
  Comment 269 170 rax|DWORD[.] = MOVE stack:36|DWORD[.] moveKind: DWORD  <||@
  Comment 273 172 MOV (x: [rsi|QWORD[*] + 80], y: rax|DWORD[.]) size: DWORD  <||@
  Comment 276 174 r13|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 281 176 r13|DWORD[.] = COMPRESSPOINTER (input: r13|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@20f01014 encoding: base: 0 shift: 3  <||@
  Comment 285 178 MOV (x: [rsi|QWORD[*] + 84], y: r13|DWORD[.]) size: DWORD  <||@
  Comment 289 180 rax|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 293 182 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 302 12  <||@
  Comment 312 block B2 null  <||@
  Comment 312 52 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 312 54 stack:40|DWORD[.] = MOVE rcx|DWORD[.] moveKind: DWORD  <||@
  Comment 316 56 stack:44|DWORD[.] = MOVE rbp|DWORD[.] moveKind: DWORD  <||@
  Comment 320 58 stack:48|DWORD[.] = MOVE rax|DWORD[.] moveKind: DWORD  <||@
  Comment 324 60 stack:52|DWORD[.] = MOVE rdi|DWORD[.] moveKind: DWORD  <||@
  Comment 328 62 stack:56|DWORD[.] = MOVE rbx|DWORD[.] moveKind: DWORD  <||@
  Comment 332 64 stack:60|DWORD[.] = MOVE r9|DWORD[.] moveKind: DWORD  <||@
  Comment 337 66 stack:64|DWORD[.] = MOVE r8|DWORD[.] moveKind: DWORD  <||@
  Comment 342 68 stack:68|DWORD[.] = MOVE r11|DWORD[.] moveKind: DWORD  <||@
  Comment 347 70 stack:72|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 352 72 r13|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 352 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 362 74 rsi|QWORD = MOVE r13|QWORD moveKind: QWORD  <||@
  Comment 365 76 r13|DWORD[.] = MOVE rdx|DWORD[.] moveKind: DWORD  <||@
  Comment 368 78 rdx|DWORD = MOVE input: int[18|0x12]  <||@
  Comment 373 80 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 378 82 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:79]  <||@
  Comment 378 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 383 [r13:0, stack:12, stack:16, stack:20, stack:24, stack:28, stack:32, stack:36, stack:40, stack:44, stack:48]at java.lang.reflect.Method.copy(Method.java:158) [bci: 79, duringCall: false, rethrow: false]
              ||
     locals:  |stack:32||vobject:Method:0{override=int[0|0x0],securityCheckCache=Object[null],hasRealParameterData=int[0|0x0],parameters=Object[null],declaredAnnotations=Object[null],slot=r14|DWORD,modifiers=stack:72|DWORD,clazz=stack:68|DWORD[.],name=stack:64|DWORD[.],returnType=stack:60|DWORD[.],parameterTypes=stack:56|DWORD[.],exceptionTypes=stack:52|DWORD[.],signature=stack:48|DWORD[.],genericInfo=Object[null],annotations=stack:44|DWORD[.],parameterAnnotations=stack:40|DWORD[.],annotationDefault=r13|DWORD[.],methodAccessor=Object[null],root=stack:32|QWORD[.]} 
     stack:   |vobject:Method:0{override=int[0|0x0],securityCheckCache=Object[null],hasRealParameterData=int[0|0x0],parameters=Object[null],declaredAnnotations=Object[null],slot=r14|DWORD,modifiers=stack:72|DWORD,clazz=stack:68|DWORD[.],name=stack:64|DWORD[.],returnType=stack:60|DWORD[.],parameterTypes=stack:56|DWORD[.],exceptionTypes=stack:52|DWORD[.],signature=stack:48|DWORD[.],genericInfo=Object[null],annotations=stack:44|DWORD[.],parameterAnnotations=stack:40|DWORD[.],annotationDefault=r13|DWORD[.],methodAccessor=Object[null],root=stack:32|QWORD[.]}  |stack:36|||@
  Comment 384 84 rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 387 86 rdx|DWORD[.] = MOVE r13|DWORD[.] moveKind: DWORD  <||@
  Comment 390 88 rcx|DWORD[.] = MOVE stack:40|DWORD[.] moveKind: DWORD  <||@
  Comment 394 90 rbp|DWORD[.] = MOVE stack:44|DWORD[.] moveKind: DWORD  <||@
  Comment 398 92 rax|DWORD[.] = MOVE stack:48|DWORD[.] moveKind: DWORD  <||@
  Comment 402 94 rdi|DWORD[.] = MOVE stack:52|DWORD[.] moveKind: DWORD  <||@
  Comment 406 96 rbx|DWORD[.] = MOVE stack:56|DWORD[.] moveKind: DWORD  <||@
  Comment 410 98 r9|DWORD[.] = MOVE stack:60|DWORD[.] moveKind: DWORD  <||@
  Comment 415 100 r8|DWORD[.] = MOVE stack:64|DWORD[.] moveKind: DWORD  <||@
  Comment 420 102 r11|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD  <||@
  Comment 425 104 r10|DWORD = MOVE stack:72|DWORD moveKind: DWORD  <||@
  Comment 430 106 JUMP ~[] destination: B2 -> B4  <||@
  Comment 435 block B5 null  <||@
  Comment 435 184 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 435 186 MOV [r15|QWORD + 668] y: -16403 size: DWORD  <||@
  Comment 446 188 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 453 190 DEOPT info [bci:0]  <||@
  Comment 453 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 458 [r13:0]at java.lang.reflect.Method.copy(Method.java:150) [bci: 0, duringCall: false, rethrow: false]
              |0             |1 
     locals:  |r13|QWORD[.]  |-   <||@
  Comment 459 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 459 4  <||@
  Comment 465 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 465 5  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-9728[java.lang.reflect.Method.copy()]"
  method "HotSpotCompilation-9728[java.lang.reflect.Method.copy()]"
  date 1527005216610
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 107bf6260 448b560849c1e203493bc20f85effbc0fe900f1f80000000000f1f800000000089842400c0feff4883ec4848896c24404c8bee4c896c2430418b455485c00f856f010000458b7520458b5524458b5d28458b452c458b4d30418b5d34418b7d38418b453c418b6d44418b4d48418b554c418b75508974242c4d8b6f60498d7558493b77700f87ae00000049897760410f188518010000410f188558010000410f188598010000410f1885d8010000498bf54c8bee4c892c2449bd688b00c0070000004d8bada80000004c892ec746086d1100f84488660c44896610448866144c896618448976204489562444895e284489462c44894e30895e34897e3889463c44896640896e44894e4889564c8b44242c8946504c8b6c243049c1ed0344896e54488b0424488b6c24404883c4488505728cc9fcc5f877c3894c2428896c242489442420897c241c895c241844894c2414448944241044895c240c448954240849bd680b00c007000000498bf5448beaba12000000b901000000e8010a3aff90488bf0418bd58b4c24288b6c24248b4424208b7c241c8b5c2418448b4c2414448b442410448b5c240c448b542408e9fefeffff41c7879c020000edbfffff4d89a7a8020000e8d411c1fe90e8f04105ff90e8ca10c1fe90f4  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@10a0a9be slotKind: QWORD  <||@
  Comment 48 6 r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 51 8 stack:32|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 56 10 rax|DWORD[.] = MOV [r13|QWORD[.] + 84] size: DWORD  <||@
  Comment 60 12 TEST (x: rax|DWORD[.], y: rax|DWORD[.]) size: DWORD  <||@
  Comment 62 14 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B5  <||@
  Comment 68 block B1 null  <||@
  Comment 68 16 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 68 18 r14|DWORD = MOV [r13|QWORD[.] + 32] size: DWORD  <||@
  Comment 72 20 r10|DWORD = MOV [r13|QWORD[.] + 36] size: DWORD  <||@
  Comment 76 22 r11|DWORD[.] = MOV [r13|QWORD[.] + 40] size: DWORD  <||@
  Comment 80 24 r8|DWORD[.] = MOV [r13|QWORD[.] + 44] size: DWORD  <||@
  Comment 84 26 r9|DWORD[.] = MOV [r13|QWORD[.] + 48] size: DWORD  <||@
  Comment 88 28 rbx|DWORD[.] = MOV [r13|QWORD[.] + 52] size: DWORD  <||@
  Comment 92 30 rdi|DWORD[.] = MOV [r13|QWORD[.] + 56] size: DWORD  <||@
  Comment 96 32 rax|DWORD[.] = MOV [r13|QWORD[.] + 60] size: DWORD  <||@
  Comment 100 34 rbp|DWORD[.] = MOV [r13|QWORD[.] + 68] size: DWORD  <||@
  Comment 104 36 rcx|DWORD[.] = MOV [r13|QWORD[.] + 72] size: DWORD  <||@
  Comment 108 38 rdx|DWORD[.] = MOV [r13|QWORD[.] + 76] size: DWORD  <||@
  Comment 112 40 rsi|DWORD[.] = MOV [r13|QWORD[.] + 80] size: DWORD  <||@
  Comment 116 42 stack:36|DWORD[.] = MOVE rsi|DWORD[.] moveKind: DWORD  <||@
  Comment 120 44 r13|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 124 46 rsi|QWORD = LEA [r13|QWORD + 88] size: QWORD  <||@
  Comment 128 48 CMP (x: rsi|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 132 50 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B3  <||@
  Comment 138 block B3 null  <||@
  Comment 138 108 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 138 110 MOV (x: [r15|QWORD + 96], y: rsi|QWORD) size: QWORD  <||@
  Comment 142 112 AMD64PREFETCH ~[r13|QWORD + 280] instr: 0  <||@
  Comment 150 114 AMD64PREFETCH ~[r13|QWORD + 344] instr: 0  <||@
  Comment 158 116 AMD64PREFETCH ~[r13|QWORD + 408] instr: 0  <||@
  Comment 166 118 AMD64PREFETCH ~[r13|QWORD + 472] instr: 0  <||@
  Comment 174 120 rsi|QWORD[*] = MOVE r13|QWORD moveKind: QWORD  <||@
  Comment 177 122 JUMP ~[] destination: B3 -> B4  <||@
  Comment 177 block B4 null  <||@
  Comment 177 124 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 177 126 r13|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD  <||@
  Comment 180 128 stack:80|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 184 130 r13|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/reflect/Method;, resolved>}  <||@
  Comment 184 {meta{HotSpotType<Ljava/lang/reflect/Method;, resolved>}}  <||@
  Comment 194 132 r13|QWORD = MOV [r13|QWORD + 168] size: QWORD  <||@
  Comment 201 134 MOV (x: [rsi|QWORD[*]], y: r13|QWORD) size: QWORD  <||@
  Comment 204 136 MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/reflect/Method;, resolved>;compressed}  <||@
  Comment 204 {meta{HotSpotType<Ljava/lang/reflect/Method;, resolved>;compressed}}  <||@
  Comment 211 138 MOVB (x: [rsi|QWORD[*] + 12], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 215 140 MOV (x: [rsi|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 219 142 MOVB (x: [rsi|QWORD[*] + 20], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 223 144 MOV (x: [rsi|QWORD[*] + 24], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 227 146 MOV (x: [rsi|QWORD[*] + 32], y: r14|DWORD) size: DWORD  <||@
  Comment 231 148 MOV (x: [rsi|QWORD[*] + 36], y: r10|DWORD) size: DWORD  <||@
  Comment 235 150 MOV (x: [rsi|QWORD[*] + 40], y: r11|DWORD[.]) size: DWORD  <||@
  Comment 239 152 MOV (x: [rsi|QWORD[*] + 44], y: r8|DWORD[.]) size: DWORD  <||@
  Comment 243 154 MOV (x: [rsi|QWORD[*] + 48], y: r9|DWORD[.]) size: DWORD  <||@
  Comment 247 156 MOV (x: [rsi|QWORD[*] + 52], y: rbx|DWORD[.]) size: DWORD  <||@
  Comment 250 158 MOV (x: [rsi|QWORD[*] + 56], y: rdi|DWORD[.]) size: DWORD  <||@
  Comment 253 160 MOV (x: [rsi|QWORD[*] + 60], y: rax|DWORD[.]) size: DWORD  <||@
  Comment 256 162 MOV (x: [rsi|QWORD[*] + 64], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 260 164 MOV (x: [rsi|QWORD[*] + 68], y: rbp|DWORD[.]) size: DWORD  <||@
  Comment 263 166 MOV (x: [rsi|QWORD[*] + 72], y: rcx|DWORD[.]) size: DWORD  <||@
  Comment 266 168 MOV (x: [rsi|QWORD[*] + 76], y: rdx|DWORD[.]) size: DWORD  <||@
  Comment 269 170 rax|DWORD[.] = MOVE stack:36|DWORD[.] moveKind: DWORD  <||@
  Comment 273 172 MOV (x: [rsi|QWORD[*] + 80], y: rax|DWORD[.]) size: DWORD  <||@
  Comment 276 174 r13|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 281 176 r13|DWORD[.] = COMPRESSPOINTER (input: r13|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@20f01014 encoding: base: 0 shift: 3  <||@
  Comment 285 178 MOV (x: [rsi|QWORD[*] + 84], y: r13|DWORD[.]) size: DWORD  <||@
  Comment 289 180 rax|QWORD[.] = MOVE stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 293 182 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 302 12  <||@
  Comment 312 block B2 null  <||@
  Comment 312 52 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 312 54 stack:40|DWORD[.] = MOVE rcx|DWORD[.] moveKind: DWORD  <||@
  Comment 316 56 stack:44|DWORD[.] = MOVE rbp|DWORD[.] moveKind: DWORD  <||@
  Comment 320 58 stack:48|DWORD[.] = MOVE rax|DWORD[.] moveKind: DWORD  <||@
  Comment 324 60 stack:52|DWORD[.] = MOVE rdi|DWORD[.] moveKind: DWORD  <||@
  Comment 328 62 stack:56|DWORD[.] = MOVE rbx|DWORD[.] moveKind: DWORD  <||@
  Comment 332 64 stack:60|DWORD[.] = MOVE r9|DWORD[.] moveKind: DWORD  <||@
  Comment 337 66 stack:64|DWORD[.] = MOVE r8|DWORD[.] moveKind: DWORD  <||@
  Comment 342 68 stack:68|DWORD[.] = MOVE r11|DWORD[.] moveKind: DWORD  <||@
  Comment 347 70 stack:72|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 352 72 r13|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 352 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 362 74 rsi|QWORD = MOVE r13|QWORD moveKind: QWORD  <||@
  Comment 365 76 r13|DWORD[.] = MOVE rdx|DWORD[.] moveKind: DWORD  <||@
  Comment 368 78 rdx|DWORD = MOVE input: int[18|0x12]  <||@
  Comment 373 80 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 378 82 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:79]  <||@
  Comment 378 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 383 [r13:0, stack:12, stack:16, stack:20, stack:24, stack:28, stack:32, stack:36, stack:40, stack:44, stack:48]at java.lang.reflect.Method.copy(Method.java:158) [bci: 79, duringCall: false, rethrow: false]
              ||
     locals:  |stack:32||vobject:Method:0{override=int[0|0x0],securityCheckCache=Object[null],hasRealParameterData=int[0|0x0],parameters=Object[null],declaredAnnotations=Object[null],slot=r14|DWORD,modifiers=stack:72|DWORD,clazz=stack:68|DWORD[.],name=stack:64|DWORD[.],returnType=stack:60|DWORD[.],parameterTypes=stack:56|DWORD[.],exceptionTypes=stack:52|DWORD[.],signature=stack:48|DWORD[.],genericInfo=Object[null],annotations=stack:44|DWORD[.],parameterAnnotations=stack:40|DWORD[.],annotationDefault=r13|DWORD[.],methodAccessor=Object[null],root=stack:32|QWORD[.]} 
     stack:   |vobject:Method:0{override=int[0|0x0],securityCheckCache=Object[null],hasRealParameterData=int[0|0x0],parameters=Object[null],declaredAnnotations=Object[null],slot=r14|DWORD,modifiers=stack:72|DWORD,clazz=stack:68|DWORD[.],name=stack:64|DWORD[.],returnType=stack:60|DWORD[.],parameterTypes=stack:56|DWORD[.],exceptionTypes=stack:52|DWORD[.],signature=stack:48|DWORD[.],genericInfo=Object[null],annotations=stack:44|DWORD[.],parameterAnnotations=stack:40|DWORD[.],annotationDefault=r13|DWORD[.],methodAccessor=Object[null],root=stack:32|QWORD[.]}  |stack:36|DWORD[.]                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  <||@
  Comment 384 84 rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 387 86 rdx|DWORD[.] = MOVE r13|DWORD[.] moveKind: DWORD  <||@
  Comment 390 88 rcx|DWORD[.] = MOVE stack:40|DWORD[.] moveKind: DWORD  <||@
  Comment 394 90 rbp|DWORD[.] = MOVE stack:44|DWORD[.] moveKind: DWORD  <||@
  Comment 398 92 rax|DWORD[.] = MOVE stack:48|DWORD[.] moveKind: DWORD  <||@
  Comment 402 94 rdi|DWORD[.] = MOVE stack:52|DWORD[.] moveKind: DWORD  <||@
  Comment 406 96 rbx|DWORD[.] = MOVE stack:56|DWORD[.] moveKind: DWORD  <||@
  Comment 410 98 r9|DWORD[.] = MOVE stack:60|DWORD[.] moveKind: DWORD  <||@
  Comment 415 100 r8|DWORD[.] = MOVE stack:64|DWORD[.] moveKind: DWORD  <||@
  Comment 420 102 r11|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD  <||@
  Comment 425 104 r10|DWORD = MOVE stack:72|DWORD moveKind: DWORD  <||@
  Comment 430 106 JUMP ~[] destination: B2 -> B4  <||@
  Comment 435 block B5 null  <||@
  Comment 435 184 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 435 186 MOV [r15|QWORD + 668] y: -16403 size: DWORD  <||@
  Comment 446 188 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 453 190 DEOPT info [bci:0]  <||@
  Comment 453 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 458 [r13:0]at java.lang.reflect.Method.copy(Method.java:150) [bci: 0, duringCall: false, rethrow: false]
              |0             |1 
     locals:  |r13|QWORD[.]  |-   <||@
  Comment 459 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 459 4  <||@
  Comment 465 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 465 5  <||@
  HexCodeFile>>> <|@
end_nmethod
