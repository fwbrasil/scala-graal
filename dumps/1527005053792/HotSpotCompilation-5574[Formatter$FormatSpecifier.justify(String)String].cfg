begin_compilation
  name " HotSpotCompilation-5574[java.util.Formatter$FormatSpecifier.justify(String)]"
  method "HotSpotCompilation-5574[java.util.Formatter$FormatSpecifier.justify(String)]"
  date 1527005112118
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: i3040 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: i3040  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Ljava/util/Formatter$FormatSpecifier;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v3073 v3074 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v3073 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i3040 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i3040 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Formatter$FormatSpecifier.width
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2917) [bci: 1]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v3073 
=== Succesors ===
next: v9 
=== Usages ===
v6 i25 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3073 #next: v9  <|@  <|@
f <@~|@floating>@ <|@
tid i5 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2917) [bci: 4]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1] ⇊00000000ffffffff
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v6 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v6 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2917) [bci: 5]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3040 
y: i5 
=== Succesors ===
=== Usages ===
v9 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i3040 y: i5  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a# Ljava/lang/String;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v10 ?527 ?351 ?35 v3077 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v9 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2917) [bci: 5]
stamp: void
trueSuccessorProbability: 0.6259652107203015
=== Inputs ===
condition: v6 
=== Succesors ===
trueSuccessor: v7 
falseSuccessor: v8 
=== Usages ===
=== Predecessor ===
i3040 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v6 #trueSuccessor: v7 #falseSuccessor: v8  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4603813412924770104
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v7 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2918) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v10 
=== Usages ===
=== Predecessor ===
v9 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v10  <|@  <|@
f <@*|@fixed>@ <|@
tid v10 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2918) [bci: 9]
stamp: void
=== Inputs ===
result: a2 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v7 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a2 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4600409631668400528
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v8 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2919) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: a3041 
=== Usages ===
=== Predecessor ===
v9 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a3041  <|@  <|@
f <@~|@floating>@ <|@
tid v3074 <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a3041 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a3041 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Formatter$FormatSpecifier.f
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2920) [bci: 19]
nullCheck: false
stamp: n# Ljava/util/Formatter$Flags;
=== Inputs ===
stateBefore: - 
guard: - 
address: v3074 
=== Succesors ===
next: v3247 
=== Usages ===
v3075 v3247 
=== Predecessor ===
v8 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3074 #next: v3247  <|@  <|@
tid ?3 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<Formatter$FormatSpecifier.justify(String)>
duringCall: false
localsSize: 6
locksSize: 0
rethrowException: false
sourceFile: Formatter.java
sourceLine: 2917
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 - - - - 
=== Succesors ===
=== Usages ===
v1335 a1405 a1451 v3247 a3042 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3247 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?3 
object: a3041 
=== Succesors ===
next: a3042 
=== Usages ===
=== Predecessor ===
a3041 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?3 object: a3041 #next: a3042  <|@  <|@
f <@~|@floating>@ <|@
tid v3077 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
a3042 a3053 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a3042 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: String.value
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2921) [bci: 34]
nullCheck: true
stamp: n# [C
=== Inputs ===
stateBefore: ?3 
guard: - 
address: v3077 
=== Succesors ===
next: v976 
=== Usages ===
a755 v756 v3078 
=== Predecessor ===
v3247 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?3 guard: - address: v3077 #next: v976  <|@  <|@
f <@~|@floating>@ <|@
tid v756 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 4]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2921) [bci: 34]
stamp: void
=== Inputs ===
value: a3042 
=== Succesors ===
=== Usages ===
v976 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a3042  <|@  <|@
f <@~|@floating>@ <|@
tid a1332 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1335 v1383 v1373 v1345 v1359 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v976 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 4]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2921) [bci: 34]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v756 
=== Succesors ===
trueSuccessor: v975 
falseSuccessor: v973 
=== Usages ===
=== Predecessor ===
a3042 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v756 #trueSuccessor: v975 #falseSuccessor: v973  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v975 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 4]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2921) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1335 
=== Usages ===
=== Predecessor ===
v976 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1335  <|@  <|@
f <@~|@floating>@ <|@
tid i1339 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -193803
stableDimension: 0
stamp: i32 [-193803] ⇊00000000fffd0af5 ⇈00000000fffd0af5
stampKind: i32
value: int[-193803|0xfffffffffffd0af5]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1335 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1335 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?3 
actionAndReason: i1339 
speculation: a1332 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v975 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?3 actionAndReason: i1339 speculation: a1332  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B9" 
    xhandlers
    flags 
    probability 4600409631668400528
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v973 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 4]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2921) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: i3043 
=== Usages ===
=== Predecessor ===
v976 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i3043  <|@  <|@
f <@~|@floating>@ <|@
tid v3078 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a3042 
=== Succesors ===
=== Usages ===
i3043 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a3042  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i3043 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 4]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2921) [bci: 34]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v3078 
=== Succesors ===
next: j1393 
=== Usages ===
i25 v930 ?351 i869 i329 i319 j1549 i810 ?365 
=== Predecessor ===
v973 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3078 #next: j1393  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1393 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j1412 
=== Usages ===
v3104 v3103 
=== Predecessor ===
i3043 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j1412  <|@  <|@
f <@~|@floating>@ <|@
tid v3103 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j1393 
index: - 
=== Succesors ===
=== Usages ===
v1414 v1457 j1412 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1393 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1412 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v3103 
=== Succesors ===
next: j1413 
=== Usages ===
v3169 j1418 j1461 j1915 
=== Predecessor ===
j1393 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3103 #next: j1413  <|@  <|@
f <@~|@floating>@ <|@
tid v3104 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j1393 
index: - 
=== Succesors ===
=== Usages ===
j1413 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1393 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1413 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v3104 
=== Succesors ===
next: i3044 
=== Usages ===
v1445 
=== Predecessor ===
j1412 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3104 #next: i3044  <|@  <|@
f <@~|@floating>@ <|@
tid v3075 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a3041 
=== Succesors ===
=== Usages ===
i3044 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a3041  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i3044 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Formatter$Flags.flags
nodeSourcePosition: at java.util.Formatter$Flags.contains(Formatter.java:4420) [bci: 1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2920) [bci: 25]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v3075 
=== Succesors ===
next: i3045 
=== Usages ===
i82 
=== Predecessor ===
j1413 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3075 #next: i3045  <|@  <|@
f <@~|@floating>@ <|@
tid a15 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2920) [bci: 22]
rawvalue: Formatter.Flags@122446495
stableDimension: 0
stamp: a!# Ljava/util/Formatter$Flags;
stampKind: a -
value: Object[Formatter.Flags@122446495]
=== Inputs ===
=== Succesors ===
=== Usages ===
v3076 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v3076 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a15 
index: - 
=== Succesors ===
=== Usages ===
i3045 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a15 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i3045 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Formatter$Flags.flags
nodeSourcePosition: at java.util.Formatter$Flags.valueOf(Formatter.java:4416) [bci: 1]
at java.util.Formatter$Flags.contains(Formatter.java:4420) [bci: 5]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2920) [bci: 25]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v3076 
=== Succesors ===
next: v30 
=== Usages ===
i82 v84 
=== Predecessor ===
i3044 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3076 #next: v30  <|@  <|@
f <@~|@floating>@ <|@
tid i82 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at java.util.Formatter$Flags.contains(Formatter.java:4420) [bci: 8]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2920) [bci: 25]
stamp: i32
=== Inputs ===
x: i3044 
y: i3045 
=== Succesors ===
=== Usages ===
v84 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i3044 y: i3045  <|@  <|@
f <@~|@floating>@ <|@
tid v84 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.Formatter$Flags.contains(Formatter.java:4420) [bci: 13]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2920) [bci: 25]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i82 
y: i3045 
=== Succesors ===
=== Usages ===
i85 v55 v30 v732 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i82 y: i3045  <|@  <|@
f <@~|@floating>@ <|@
tid i47 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2923) [bci: 61]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i48 i71 i85 v490 i132 v337 v305 v177 v195 v224 i270 v283 i293 i457 i1812 a1780 i1709 a1607 a1405 a1451 i1481 a1876 i1638 a1563 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i26 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2922) [bci: 41]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
i85 i532 i59 v1811 v1906 a1834 a1505 a1660 v199 v209 v1228 a1731 i532 v274 v287 v296 v851 v308 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i85 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$Flags.contains(Formatter.java:4420) [bci: 13]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2920) [bci: 25]
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
condition: v84 
trueValue: i47 
falseValue: i26 
=== Succesors ===
=== Usages ===
?35 ?527 ?267 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v84 trueValue: i47 falseValue: i26  <|@  <|@
f <@~|@floating>@ <|@
tid j1907 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 48
stableDimension: 0
stamp: i64 [48] ⇊0000000000000030 ⇈0000000000000030
stampKind: i64
value: long[48|0x30]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1915 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1915 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1412 
y: j1907 
=== Succesors ===
=== Usages ===
v1445 v1457 v1414 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1412 y: j1907  <|@  <|@
f <@~|@floating>@ <|@
tid v1445 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1413 
y: j1915 
=== Succesors ===
=== Usages ===
v1448 v1401 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j1413 y: j1915  <|@  <|@
f <@~|@floating>@ <|@
tid v3169 <|@
d <@d|@=== Debug Properties ===
displacement: 240
scale: Times1
stamp: void*
=== Inputs ===
base: j1412 
index: - 
=== Succesors ===
=== Usages ===
v1454 v1410 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1412 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid i25 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2921) [bci: 37]
stamp: i32
=== Inputs ===
x: i3040 
y: i3043 
=== Succesors ===
=== Usages ===
?35 v36 v490 v61 ?527 ?267 ?60 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i3040 y: i3043  <|@  <|@
f <@~|@floating>@ <|@
tid i3036 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 0
stableDimension: 0
stamp: i16 [0] ⇈0000000000000000
stampKind: i16
value: short[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v2982 v3000 v3015 v3030 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v3037 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0>
stableDimension: 0
stamp: <i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000>
stampKind: <i16,i16>
value: SIMD<0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v2984 v3001 v3016 v3031 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v3038 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0>
stableDimension: 0
stamp: <i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000>
stampKind: <i16,i16,i16,i16>
value: SIMD<0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v2986 v3002 v3017 v3032 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v3039 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0,0,0,0,0>
stableDimension: 0
stamp: <i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000>
stampKind: <i16,i16,i16,i16,i16,i16,i16,i16>
value: SIMD<0,0,0,0,0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v2988 v3003 v3018 v3033 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v3035 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>
stableDimension: 0
stamp: <i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000>
stampKind: <i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16>
value: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v3019 v3004 v2989 v3034 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j2555 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -1
stableDimension: 0
stamp: i64 [-1] ⇊ffffffffffffffff
stampKind: i64
value: long[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
j2556 j2607 j2669 j2720 j2782 j2833 j2895 j2946 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j2497 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 2
stableDimension: 0
stamp: i64 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i64
value: long[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
j2511 j2574 j2630 j2687 j2743 j2800 j2856 j2913 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j2551 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -2
stableDimension: 0
stamp: i64 [-2] ⇊fffffffffffffffe ⇈fffffffffffffffe
stampKind: i64
value: long[-2|0xfffffffffffffffe]
=== Inputs ===
=== Succesors ===
=== Usages ===
j2552 j2604 j2666 j2717 j2779 j2830 j2892 j2943 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j2519 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 4
stableDimension: 0
stamp: i64 [4] ⇊0000000000000004 ⇈0000000000000004
stampKind: i64
value: long[4|0x4]
=== Inputs ===
=== Succesors ===
=== Usages ===
j2520 j2580 j2638 j2693 j2751 j2806 j2864 j2919 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j2547 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -4
stableDimension: 0
stamp: i64 [-4] ⇊fffffffffffffffc ⇈fffffffffffffffc
stampKind: i64
value: long[-4|0xfffffffffffffffc]
=== Inputs ===
=== Succesors ===
=== Usages ===
j2548 j2601 j2663 j2714 j2776 j2827 j2889 j2940 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1432 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 8
stableDimension: 0
stamp: i64 [8] ⇊0000000000000008 ⇈0000000000000008
stampKind: i64
value: long[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j2925 j2872 j2812 j2759 j2699 j2646 j2586 j2528 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j2543 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -8
stableDimension: 0
stamp: i64 [-8] ⇊fffffffffffffff8 ⇈fffffffffffffff8
stampKind: i64
value: long[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j2544 j2598 j2660 j2711 j2773 j2824 j2886 j2937 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j739 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2917) [bci: 1]
rawvalue: 16
stableDimension: 0
stamp: i64 [16] ⇊0000000000000010 ⇈0000000000000010
stampKind: i64
value: long[16|0x10]
=== Inputs ===
=== Succesors ===
=== Usages ===
j2931 j2880 j2818 j2767 j2705 j2654 j2592 j2536 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j2537 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -16
stableDimension: 0
stamp: i64 [-16] ⇊fffffffffffffff0 ⇈fffffffffffffff0
stampKind: i64
value: long[-16|0xfffffffffffffff0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j2538 j2593 j2655 j2706 j2768 j2819 j2881 j2932 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1034 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 0
stableDimension: 0
stamp: i64 [0] ⇈0000000000000000
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j2873 j2700 j2752 j2760 v2769 v2707 v2820 j2813 j2807 v2882 v2933 j2521 j2529 v2539 j2926 j2581 j2587 v2594 j2920 j2639 j2647 v2656 j2865 j2694 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1424 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<[C, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[C, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a1660 a1834 a1505 a1731 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
tid a89 <|@
d <@d|@=== Debug Properties ===
fields: [Ljdk.vm.ci.hotspot.HotSpotResolvedJavaField;@915094e
hasIdentity: true
objectId: 1
stamp: a!# Ljava/lang/StringBuilder;
type: HotSpotType<Ljava/lang/StringBuilder;, resolved>
=== Inputs ===
=== Succesors ===
=== Usages ===
?1105 ?374 ?406 ?696 ?35 ?406 ?638 ?527 ?723 ?60 ?267 ?333 ?73 ?351 ?725 ?344 ?365 
=== Predecessor ===
- >@ <|@
instruction <@VirtualInstance|@org.graalvm.compiler.nodes.virtual.VirtualInstanceNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i1512 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2923) [bci: 57]
rawvalue: 23
stableDimension: 0
stamp: i32 [23] ⇊0000000000000017 ⇈0000000000000017
stampKind: i32
value: int[23|0x17]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1513 i1667 i1738 i1841 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i1482 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:603) [bci: 23]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2923) [bci: 57]
rawvalue: -8
stableDimension: 0
stamp: i32 [-8] ⇊00000000fffffff8 ⇈00000000fffffff8
stampKind: i32
value: int[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1483 i1639 i1710 i1813 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i1489 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 48]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2923) [bci: 57]
rawvalue: 16777215
stableDimension: 0
stamp: i32 [16777215] ⇊0000000000ffffff ⇈0000000000ffffff
stampKind: i32
value: int[16777215|0xffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1490 v1645 v1716 v1819 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i285 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 22]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2926) [bci: 90]
rawvalue: 2147483639
stableDimension: 0
stamp: i32 [2147483639] ⇊000000007ffffff7 ⇈000000007ffffff7
stampKind: i32
value: int[2147483639|0x7ffffff7]
=== Inputs ===
=== Succesors ===
=== Usages ===
i286 i307 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i271 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:150) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2926) [bci: 90]
rawvalue: 2
stableDimension: 0
stamp: i32 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
i272 i294 a1876 a1780 a1563 a1607 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i921 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:650) [bci: 26]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2923) [bci: 57]
rawvalue: 32
stableDimension: 0
stamp: i16 [32] ⇊0000000000000020 ⇈0000000000000020
stampKind: i16
value: short[32|0x20]
=== Inputs ===
=== Succesors ===
=== Usages ===
v772 v782 v899 v913 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1437 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0>
stableDimension: 0
stamp: <i64,i64,i64,i64>
stampKind: <i64,i64,i64,i64>
value: SIMD<0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v1439 v1478 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1913 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<[C, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<[C, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1434 v1474 v1532 v1683 v1754 v1857 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1425 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 1
stableDimension: 0
stamp: i64 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1430 v1471 v1529 v1680 v1751 v1854 v1972 v2225 v2099 v2351 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i548 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 5]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2924) [bci: 69]
rawvalue: 16
stableDimension: 0
stamp: i32 [16] ⇊0000000000000010 ⇈0000000000000010
stampKind: i32
value: int[16|0x10]
=== Inputs ===
=== Succesors ===
=== Usages ===
i530 i530 v1470 v1429 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i1910 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 8
stableDimension: 0
stamp: i32 [8] ⇊0000000000000008 ⇈0000000000000008
stampKind: i32
value: int[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
a1405 a1451 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1391 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<[I, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[I, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a1405 a1451 a1563 a1607 a1780 a1876 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v30 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2922) [bci: 41]
stamp: void
trueSuccessorProbability: 0.18604807005003576
=== Inputs ===
condition: v84 
=== Succesors ===
trueSuccessor: v29 
falseSuccessor: v28 
=== Usages ===
=== Predecessor ===
i3045 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v84 #trueSuccessor: v29 #falseSuccessor: v28  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4589678796991780868
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v29 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2924) [bci: 67]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1401 
=== Usages ===
=== Predecessor ===
v30 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1401  <|@  <|@
f <@*|@fixed>@ <|@
tid v1401 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v1445 
=== Succesors ===
trueSuccessor: v1399 
falseSuccessor: v1400 
=== Usages ===
=== Predecessor ===
v29 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1445 #trueSuccessor: v1399 #falseSuccessor: v1400  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4559557624972199865
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1399 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a1405 
=== Usages ===
=== Predecessor ===
v1401 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1405  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1405 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?3 
arguments: v1391 i1910 i47 
=== Succesors ===
next: j1406 
=== Usages ===
j1406 
=== Predecessor ===
v1399 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?3 arguments: v1391 i1910 i47 #next: j1406  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1406 <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1405 
=== Succesors ===
next: v1419 
=== Usages ===
j1418 
=== Predecessor ===
a1405 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a1405 #next: v1419  <|@  <|@
f <@*|@fixed>@ <|@
tid v1419 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1416 
=== Predecessor ===
j1406 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4589628653228494709
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1400 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1414 
=== Usages ===
=== Predecessor ===
v1401 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1414  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1414 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3103 
value: j1915 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1410 
=== Usages ===
=== Predecessor ===
v1400 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3103 value: j1915 stateAfter: - lastLocationAccess: - #next: v1410  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1410 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v3169 
=== Succesors ===
next: v1417 
=== Usages ===
=== Predecessor ===
v1414 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v3169 #next: v1417  <|@  <|@
f <@*|@fixed>@ <|@
tid v1417 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1416 
=== Predecessor ===
v1410 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B6" 
    successors "B75" 
    xhandlers
    flags 
    probability 4589678796991780868
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1418 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1416 
values: j1412 j1406 
=== Succesors ===
=== Usages ===
v3102 v3101 a1036 v3100 v3168 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1416 values: j1412 j1406  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1416 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1417 v1419 
=== Succesors ===
next: a1036 
=== Usages ===
j1418 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1417 v1419 #next: a1036  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1036 <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j1418 
=== Succesors ===
next: v1429 
=== Usages ===
a1042 
=== Predecessor ===
v1416 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j1418 #next: v1429  <|@  <|@
f <@~|@floating>@ <|@
tid v3100 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j1418 
index: - 
=== Succesors ===
=== Usages ===
v1429 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1418 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1429 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3100 
value: i548 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1430 
=== Usages ===
=== Predecessor ===
a1036 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3100 value: i548 stateAfter: - lastLocationAccess: - #next: v1430  <|@  <|@
f <@~|@floating>@ <|@
tid v3101 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1418 
index: - 
=== Succesors ===
=== Usages ===
v1430 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1418 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1430 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3101 
value: j1425 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1434 
=== Usages ===
=== Predecessor ===
v1429 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3101 value: j1425 stateAfter: - lastLocationAccess: - #next: v1434  <|@  <|@
f <@~|@floating>@ <|@
tid v3102 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j1418 
index: - 
=== Succesors ===
=== Usages ===
v1434 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1418 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1434 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3102 
value: v1913 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1439 
=== Usages ===
=== Predecessor ===
v1430 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3102 value: v1913 stateAfter: - lastLocationAccess: - #next: v1439  <|@  <|@
f <@~|@floating>@ <|@
tid v3168 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j1418 
index: - 
=== Succesors ===
=== Usages ===
v1439 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1418 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1439 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3168 
value: v1437 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a1042 
=== Usages ===
=== Predecessor ===
v1434 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3168 value: v1437 stateAfter: - lastLocationAccess: - #next: a1042  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1042 <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a1036 
=== Succesors ===
next: v1043 
=== Usages ===
a637 
=== Predecessor ===
v1439 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a1036 #next: v1043  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1043 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v525 
=== Usages ===
=== Predecessor ===
a1042 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v525  <|@  <|@
f <@*|@fixed>@ <|@
tid v525 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v526 
=== Predecessor ===
v1043 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4599156037586246543
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v28 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2923) [bci: 44]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1448 
=== Usages ===
=== Predecessor ===
v30 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1448  <|@  <|@
f <@*|@fixed>@ <|@
tid v1448 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v1445 
=== Succesors ===
trueSuccessor: v1446 
falseSuccessor: v1447 
=== Usages ===
=== Predecessor ===
v28 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1445 #trueSuccessor: v1446 #falseSuccessor: v1447  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4569166477141788452
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1446 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a1451 
=== Usages ===
=== Predecessor ===
v1448 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1451  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1451 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?3 
arguments: v1391 i1910 i47 
=== Succesors ===
next: j1452 
=== Usages ===
j1452 
=== Predecessor ===
v1446 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?3 arguments: v1391 i1910 i47 #next: j1452  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1452 <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1451 
=== Succesors ===
next: v1462 
=== Usages ===
j1461 
=== Predecessor ===
a1451 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a1451 #next: v1462  <|@  <|@
f <@*|@fixed>@ <|@
tid v1462 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1459 
=== Predecessor ===
j1452 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4599101193409563137
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1447 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1457 
=== Usages ===
=== Predecessor ===
v1448 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1457  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1457 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3103 
value: j1915 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1454 
=== Usages ===
=== Predecessor ===
v1447 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3103 value: j1915 stateAfter: - lastLocationAccess: - #next: v1454  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1454 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v3169 
=== Succesors ===
next: v1460 
=== Usages ===
=== Predecessor ===
v1457 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v3169 #next: v1460  <|@  <|@
f <@*|@fixed>@ <|@
tid v1460 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1459 
=== Predecessor ===
v1454 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4599156037586246543
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1461 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1459 
values: j1412 j1452 
=== Succesors ===
=== Usages ===
v3107 v3106 a1046 v3105 v3170 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1459 values: j1412 j1452  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1459 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1460 v1462 
=== Succesors ===
next: a1046 
=== Usages ===
j1461 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1460 v1462 #next: a1046  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1046 <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j1461 
=== Succesors ===
next: v1470 
=== Usages ===
a1051 a1061 
=== Predecessor ===
v1459 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j1461 #next: v1470  <|@  <|@
f <@~|@floating>@ <|@
tid v3105 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j1461 
index: - 
=== Succesors ===
=== Usages ===
v1470 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1461 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1470 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3105 
value: i548 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1471 
=== Usages ===
=== Predecessor ===
a1046 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3105 value: i548 stateAfter: - lastLocationAccess: - #next: v1471  <|@  <|@
f <@~|@floating>@ <|@
tid v3106 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1461 
index: - 
=== Succesors ===
=== Usages ===
v1471 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1461 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1471 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3106 
value: j1425 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1474 
=== Usages ===
=== Predecessor ===
v1470 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3106 value: j1425 stateAfter: - lastLocationAccess: - #next: v1474  <|@  <|@
f <@~|@floating>@ <|@
tid v3107 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j1461 
index: - 
=== Succesors ===
=== Usages ===
v1474 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1461 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1474 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3107 
value: v1913 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v403 
=== Usages ===
=== Predecessor ===
v1471 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3107 value: v1913 stateAfter: - lastLocationAccess: - #next: v403  <|@  <|@
f <@~|@floating>@ <|@
tid v3170 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j1461 
index: - 
=== Succesors ===
=== Usages ===
v1478 v1480 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1461 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v490 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2923) [bci: 51]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i25 
y: i47 
=== Succesors ===
=== Usages ===
v403 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i25 y: i47  <|@  <|@
f <@*|@fixed>@ <|@
tid v403 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2923) [bci: 51]
stamp: void
trueSuccessorProbability: 0.4177003898613192
=== Inputs ===
condition: v490 
=== Succesors ===
trueSuccessor: v402 
falseSuccessor: v401 
=== Usages ===
=== Predecessor ===
v1474 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v490 #trueSuccessor: v402 #falseSuccessor: v401  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B75" 
    xhandlers
    flags 
    probability 4593749707086991795
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v402 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2924) [bci: 67]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1478 
=== Usages ===
=== Predecessor ===
v403 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1478  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1478 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3170 
value: v1437 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a1051 
=== Usages ===
=== Predecessor ===
v402 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3170 value: v1437 stateAfter: - lastLocationAccess: - #next: a1051  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1051 <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a1046 
=== Succesors ===
next: v1052 
=== Usages ===
a637 
=== Predecessor ===
v1478 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a1046 #next: v1052  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1052 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v528 
=== Usages ===
=== Predecessor ===
a1051 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v528  <|@  <|@
f <@*|@fixed>@ <|@
tid v528 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v526 
=== Predecessor ===
v1052 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4595555168830760299
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v401 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2923) [bci: 54]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1480 
=== Usages ===
=== Predecessor ===
v403 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1480  <|@  <|@
f <@~|@floating>@ <|@
tid v1479 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <32,0,0,0>
stableDimension: 0
stamp: <i64,i64,i64,i64>
stampKind: <i64,i64,i64,i64>
value: SIMD<32,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v1480 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1480 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3170 
value: v1479 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a1061 
=== Usages ===
=== Predecessor ===
v401 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3170 value: v1479 stateAfter: - lastLocationAccess: - #next: a1061  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1061 <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a1046 
=== Succesors ===
next: v1062 
=== Usages ===
a458 
=== Predecessor ===
v1480 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a1046 #next: v1062  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1062 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v32 
=== Usages ===
=== Predecessor ===
a1061 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v32  <|@  <|@
f <@*|@fixed>@ <|@
tid v32 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2923) [bci: 47]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v33 
=== Predecessor ===
v1062 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B70" "B18" 
    successors "B16" "B74" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4598072091713848228
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a458 <|@
d <@d|@=== Debug Properties ===
stamp: a!# [C
valueDescription: a -
=== Inputs ===
merge: v33 
values: a1061 a1281 a458 
=== Succesors ===
=== Usages ===
?374 v3080 a458 a637 v3094 v3079 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v33 values: a1061 a1281 a458  <|@  <|@
f <@~|@floating>@ <|@
tid i457 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v33 
values: i47 i48 i48 
=== Succesors ===
=== Usages ===
?35 v36 v775 i48 ?374 v3081 v3080 i532 v764 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v33 values: i47 i48 i48  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v33 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 1.3940604899411522
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 2
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2923) [bci: 47]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v32 
=== Succesors ===
next: i3046 
=== Usages ===
a458 v41 v49 i457 v504 v995 v980 v985 v990 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v32 #next: i3046  <|@  <|@
f <@~|@floating>@ <|@
tid v3079 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a458 
index: - 
=== Succesors ===
=== Usages ===
i3046 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a458 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i3046 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 5]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2923) [bci: 57]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v3079 
=== Succesors ===
next: v43 
=== Usages ===
i223 i293 i1263 v764 i530 v1203 
=== Predecessor ===
v33 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3079 #next: v43  <|@  <|@
f <@~|@floating>@ <|@
tid v36 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2923) [bci: 51]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i457 
y: i25 
=== Succesors ===
=== Usages ===
v43 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i457 y: i25  <|@  <|@
f <@*|@fixed>@ <|@
tid v43 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2923) [bci: 51]
stamp: void
trueSuccessorProbability: 0.5822996101386808
=== Inputs ===
condition: v36 
=== Succesors ===
trueSuccessor: v37 
falseSuccessor: v41 
=== Usages ===
=== Predecessor ===
i3046 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v36 #trueSuccessor: v37 #falseSuccessor: v41  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B20" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4594352857608977439
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v37 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2923) [bci: 54]
stamp: void
=== Inputs ===
=== Succesors ===
next: v227 
=== Usages ===
=== Predecessor ===
v43 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v227  <|@  <|@
f <@~|@floating>@ <|@
tid i48 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2923) [bci: 61]
stamp: i32
=== Inputs ===
x: i457 
y: i47 
=== Succesors ===
=== Usages ===
i457 i932 i457 i295 i223 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i457 y: i47  <|@  <|@
f <@~|@floating>@ <|@
tid i223 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 6]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2923) [bci: 57]
stamp: i32
=== Inputs ===
x: i48 
y: i3046 
=== Succesors ===
=== Usages ===
v224 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i48 y: i3046  <|@  <|@
f <@~|@floating>@ <|@
tid v224 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 7]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2923) [bci: 57]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i223 
y: i47 
=== Succesors ===
=== Usages ===
v227 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i223 y: i47  <|@  <|@
tid ?374 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a89 
values: i457 a458 
=== Succesors ===
=== Usages ===
?35 
=== Predecessor ===
- >@ <|@
instruction <@VirtualObjectState|@org.graalvm.compiler.virtual.nodes.VirtualObjectState>@ object: a89 values: i457 a458  <|@  <|@
tid ?35 <|@
d <@d|@=== Debug Properties ===
bci: 47
code: ResolvedJavaMethodBytecode<Formatter$FormatSpecifier.justify(String)>
duringCall: false
localsSize: 6
locksSize: 0
rethrowException: false
sourceFile: Formatter.java
sourceLine: 2923
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - a2 a89 i85 i25 i457 
virtualObjectMappings: ?374 
=== Succesors ===
=== Usages ===
a1505 v1345 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - a2 a89 i85 i25 i457 virtualObjectMappings: ?374  <|@  <|@
f <@*|@fixed>@ <|@
tid v227 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 7]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2923) [bci: 57]
stamp: void
trueSuccessorProbability: 0.9354897578252553
=== Inputs ===
condition: v224 
=== Succesors ===
trueSuccessor: v225 
falseSuccessor: v226 
=== Usages ===
=== Predecessor ===
v37 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v224 #trueSuccessor: v225 #falseSuccessor: v226  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4594018382497928091
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v225 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:127) [bci: 26]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2923) [bci: 57]
stamp: void
=== Inputs ===
=== Succesors ===
next: v981 
=== Usages ===
=== Predecessor ===
v227 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v981  <|@  <|@
f <@~|@floating>@ <|@
tid v764 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:650) [bci: 26]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2923) [bci: 57]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i457 
y: i3046 
=== Succesors ===
=== Usages ===
v981 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i457 y: i3046  <|@  <|@
f <@*|@fixed>@ <|@
tid v981 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:650) [bci: 26]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2923) [bci: 57]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v764 
=== Succesors ===
trueSuccessor: v977 
falseSuccessor: v980 
=== Usages ===
=== Predecessor ===
v225 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v764 #trueSuccessor: v977 #falseSuccessor: v980  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B15" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4594018382497928091
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v977 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:650) [bci: 26]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2923) [bci: 57]
stamp: void
=== Inputs ===
=== Succesors ===
next: v772 
=== Usages ===
v772 
=== Predecessor ===
v981 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v772  <|@  <|@
f <@~|@floating>@ <|@
tid v3080 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a458 
index: i457 
=== Succesors ===
=== Usages ===
v772 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a458 index: i457  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v772 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:650) [bci: 26]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2923) [bci: 57]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v977 
address: v3080 
value: i921 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v504 
=== Usages ===
=== Predecessor ===
v977 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v977 address: v3080 value: i921 stateAfter: - lastLocationAccess: - #next: v504  <|@  <|@
f <@*|@fixed>@ <|@
tid v504 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 1
stamp: void
=== Inputs ===
loopBegin: v33 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v772 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v33  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B73" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v980 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:650) [bci: 26]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2923) [bci: 57]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v33 
=== Succesors ===
next: v1341 
=== Usages ===
=== Predecessor ===
v981 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v33 #next: v1341  <|@  <|@
f <@~|@floating>@ <|@
tid i1342 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -195867
stableDimension: 0
stamp: i32 [-195867] ⇊00000000fffd02e5 ⇈00000000fffd02e5
stampKind: i32
value: int[-195867|0xfffffffffffd02e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1343 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1341 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1340 
=== Predecessor ===
v980 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B21" "B22" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4576505223557843009
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v226 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 10]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2923) [bci: 57]
stamp: void
=== Inputs ===
=== Succesors ===
next: v986 
=== Usages ===
=== Predecessor ===
v227 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v986  <|@  <|@
f <@~|@floating>@ <|@
tid i293 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:150) [bci: 6]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2923) [bci: 57]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i3046 
y: i47 
=== Succesors ===
=== Usages ===
i294 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i3046 y: i47  <|@  <|@
f <@~|@floating>@ <|@
tid i294 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:150) [bci: 8]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2923) [bci: 57]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i293 
y: i271 
=== Succesors ===
=== Usages ===
i295 i932 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i293 y: i271  <|@  <|@
f <@~|@floating>@ <|@
tid i295 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:151) [bci: 12]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2923) [bci: 57]
stamp: i32
=== Inputs ===
x: i294 
y: i48 
=== Succesors ===
=== Usages ===
v296 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i294 y: i48  <|@  <|@
f <@~|@floating>@ <|@
tid v296 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:151) [bci: 13]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2923) [bci: 57]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i295 
y: i26 
=== Succesors ===
=== Usages ===
i932 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i295 y: i26  <|@  <|@
f <@~|@floating>@ <|@
tid i932 <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
condition: v296 
trueValue: i48 
falseValue: i294 
=== Succesors ===
=== Usages ===
v775 j1955 v305 i307 v1490 v1203 i1263 a1505 v1528 i1481 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v296 trueValue: i48 falseValue: i294  <|@  <|@
f <@~|@floating>@ <|@
tid v305 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 19]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2923) [bci: 57]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i932 
y: i47 
=== Succesors ===
=== Usages ===
v986 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i932 y: i47  <|@  <|@
f <@*|@fixed>@ <|@
tid v986 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 19]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2923) [bci: 57]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v305 
=== Succesors ===
trueSuccessor: v985 
falseSuccessor: v982 
=== Usages ===
=== Predecessor ===
v226 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v305 #trueSuccessor: v985 #falseSuccessor: v982  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B73" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v985 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 19]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2923) [bci: 57]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v33 
=== Succesors ===
next: v1346 
=== Usages ===
=== Predecessor ===
v986 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v33 #next: v1346  <|@  <|@
f <@~|@floating>@ <|@
tid i1347 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -197907
stableDimension: 0
stamp: i32 [-197907] ⇊00000000fffcfaed ⇈00000000fffcfaed
stampKind: i32
value: int[-197907|0xfffffffffffcfaed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1343 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1346 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1340 
=== Predecessor ===
v985 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4576505223557843009
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v982 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 19]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2923) [bci: 57]
stamp: void
=== Inputs ===
=== Succesors ===
next: v991 
=== Usages ===
=== Predecessor ===
v986 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v991  <|@  <|@
f <@~|@floating>@ <|@
tid i307 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 25]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2923) [bci: 57]
stamp: i32
=== Inputs ===
x: i285 
y: i932 
=== Succesors ===
=== Usages ===
v308 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i285 y: i932  <|@  <|@
f <@~|@floating>@ <|@
tid v308 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 26]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2923) [bci: 57]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i307 
y: i26 
=== Succesors ===
=== Usages ===
v991 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i307 y: i26  <|@  <|@
f <@*|@fixed>@ <|@
tid v991 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 26]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2923) [bci: 57]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v308 
=== Succesors ===
trueSuccessor: v990 
falseSuccessor: v987 
=== Usages ===
=== Predecessor ===
v982 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v308 #trueSuccessor: v990 #falseSuccessor: v987  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B73" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v990 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 26]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2923) [bci: 57]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v33 
=== Succesors ===
next: v1348 
=== Usages ===
=== Predecessor ===
v991 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v33 #next: v1348  <|@  <|@
f <@~|@floating>@ <|@
tid i1349 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -198163
stableDimension: 0
stamp: i32 [-198163] ⇊00000000fffcf9ed ⇈00000000fffcf9ed
stampKind: i32
value: int[-198163|0xfffffffffffcf9ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1343 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1348 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1340 
=== Predecessor ===
v990 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" "B72" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4576505223557843009
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v987 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 26]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2923) [bci: 57]
stamp: void
=== Inputs ===
=== Succesors ===
next: v996 
=== Usages ===
=== Predecessor ===
v991 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v996  <|@  <|@
f <@~|@floating>@ <|@
tid v775 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:650) [bci: 26]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2923) [bci: 57]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i457 
y: i932 
=== Succesors ===
=== Usages ===
v996 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i457 y: i932  <|@  <|@
f <@*|@fixed>@ <|@
tid v996 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:650) [bci: 26]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2923) [bci: 57]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v775 
=== Succesors ===
trueSuccessor: v992 
falseSuccessor: v995 
=== Usages ===
=== Predecessor ===
v987 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v775 #trueSuccessor: v992 #falseSuccessor: v995  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" "B29" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4576505223557843009
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v992 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:650) [bci: 26]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2923) [bci: 57]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1484 
=== Usages ===
v782 
=== Predecessor ===
v996 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j1484  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1484 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:772) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:319) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2923) [bci: 57]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j1525 
=== Usages ===
v3108 v3109 
=== Predecessor ===
v992 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j1525  <|@  <|@
f <@~|@floating>@ <|@
tid v3108 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j1484 
index: - 
=== Succesors ===
=== Usages ===
j1525 v1527 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1484 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1525 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:245) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:320) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2923) [bci: 57]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v3108 
=== Succesors ===
next: j1526 
=== Usages ===
j1488 v3110 v3111 a1504 v3116 v3112 v3113 v3114 v3115 
=== Predecessor ===
j1484 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3108 #next: j1526  <|@  <|@
f <@~|@floating>@ <|@
tid v3109 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j1484 
index: - 
=== Succesors ===
=== Usages ===
j1526 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1484 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1526 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:249) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:321) [bci: 25]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2923) [bci: 57]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v3109 
=== Succesors ===
next: v1493 
=== Usages ===
v1494 
=== Predecessor ===
j1525 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3109 #next: v1493  <|@  <|@
f <@~|@floating>@ <|@
tid v1490 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.core.common.calc.UnsignedMath.belowThan(int, int) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 50]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2923) [bci: 57]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i932 
y: i1489 
=== Succesors ===
=== Usages ===
v1493 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i932 y: i1489  <|@  <|@
f <@*|@fixed>@ <|@
tid v1493 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 64]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2923) [bci: 57]
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v1490 
=== Succesors ===
trueSuccessor: v1492 
falseSuccessor: v1491 
=== Usages ===
=== Predecessor ===
j1526 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1490 #trueSuccessor: v1492 #falseSuccessor: v1491  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" "B28" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4575970063380164052
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1492 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 67]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2923) [bci: 57]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1500 
=== Usages ===
=== Predecessor ===
v1493 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1500  <|@  <|@
f <@~|@floating>@ <|@
tid i1481 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 8]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2923) [bci: 57]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i932 
y: i47 
=== Succesors ===
=== Usages ===
i1513 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i932 y: i47  <|@  <|@
f <@~|@floating>@ <|@
tid i1513 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2923) [bci: 57]
stamp: i32 [-2147483647 - 2147483647] ⇊0000000000000001
=== Inputs ===
x: i1481 
y: i1512 
=== Succesors ===
=== Usages ===
i1483 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1481 y: i1512  <|@  <|@
f <@~|@floating>@ <|@
tid i1483 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:604) [bci: 30]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2923) [bci: 57]
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i1513 
y: i1482 
=== Succesors ===
=== Usages ===
j1487 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i1513 y: i1482  <|@  <|@
f <@~|@floating>@ <|@
tid j1487 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2923) [bci: 57]
resultBits: 64
stamp: i64 [-2147483648 - 2147483640] ⇈fffffffffffffff8
=== Inputs ===
value: i1483 
=== Succesors ===
=== Usages ===
j1488 v3112 v3113 v3114 v3115 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i1483  <|@  <|@
f <@~|@floating>@ <|@
tid j1488 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2923) [bci: 57]
stamp: i64
=== Inputs ===
x: j1487 
y: j1525 
=== Succesors ===
=== Usages ===
v1494 v1527 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1487 y: j1525  <|@  <|@
f <@~|@floating>@ <|@
tid v1494 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 83]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2923) [bci: 57]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1526 
y: j1488 
=== Succesors ===
=== Usages ===
v1500 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j1526 y: j1488  <|@  <|@
f <@*|@fixed>@ <|@
tid v1500 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 89]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2923) [bci: 57]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v1494 
=== Succesors ===
trueSuccessor: v1499 
falseSuccessor: v1498 
=== Usages ===
=== Predecessor ===
v1492 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1494 #trueSuccessor: v1499 #falseSuccessor: v1498  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B30" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4545793469636321557
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1499 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2923) [bci: 57]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1497 
=== Usages ===
=== Predecessor ===
v1500 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1497  <|@  <|@
f <@*|@fixed>@ <|@
tid v1497 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2923) [bci: 57]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1496 
=== Predecessor ===
v1499 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B31" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4575921898964172946
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1498 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 92]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2923) [bci: 57]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1527 
=== Usages ===
=== Predecessor ===
v1500 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1527  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1527 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:257) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 96]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2923) [bci: 57]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3108 
value: j1488 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1515 
=== Usages ===
=== Predecessor ===
v1498 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3108 value: j1488 stateAfter: - lastLocationAccess: - #next: v1515  <|@  <|@
f <@~|@floating>@ <|@
tid v3112 <|@
d <@d|@=== Debug Properties ===
displacement: 192
scale: Times1
stamp: void*
=== Inputs ===
base: j1487 
index: j1525 
=== Succesors ===
=== Usages ===
v1515 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1487 index: j1525  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1515 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2923) [bci: 57]
stamp: void
=== Inputs ===
address: v3112 
=== Succesors ===
next: v1517 
=== Usages ===
=== Predecessor ===
v1527 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v3112 #next: v1517  <|@  <|@
f <@~|@floating>@ <|@
tid v3113 <|@
d <@d|@=== Debug Properties ===
displacement: 256
scale: Times1
stamp: void*
=== Inputs ===
base: j1487 
index: j1525 
=== Succesors ===
=== Usages ===
v1517 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1487 index: j1525  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1517 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2923) [bci: 57]
stamp: void
=== Inputs ===
address: v3113 
=== Succesors ===
next: v1520 
=== Usages ===
=== Predecessor ===
v1515 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v3113 #next: v1520  <|@  <|@
f <@~|@floating>@ <|@
tid v3114 <|@
d <@d|@=== Debug Properties ===
displacement: 320
scale: Times1
stamp: void*
=== Inputs ===
base: j1487 
index: j1525 
=== Succesors ===
=== Usages ===
v1520 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1487 index: j1525  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1520 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2923) [bci: 57]
stamp: void
=== Inputs ===
address: v3114 
=== Succesors ===
next: v1523 
=== Usages ===
=== Predecessor ===
v1517 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v3114 #next: v1523  <|@  <|@
f <@~|@floating>@ <|@
tid v3115 <|@
d <@d|@=== Debug Properties ===
displacement: 384
scale: Times1
stamp: void*
=== Inputs ===
base: j1487 
index: j1525 
=== Succesors ===
=== Usages ===
v1523 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1487 index: j1525  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1523 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2923) [bci: 57]
stamp: void
=== Inputs ===
address: v3115 
=== Succesors ===
next: v1528 
=== Usages ===
=== Predecessor ===
v1520 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v3115 #next: v1528  <|@  <|@
f <@~|@floating>@ <|@
tid v3110 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j1525 
index: - 
=== Succesors ===
=== Usages ===
v1528 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1525 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1528 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:549) [bci: 12]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2923) [bci: 57]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3110 
value: i932 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1529 
=== Usages ===
=== Predecessor ===
v1523 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3110 value: i932 stateAfter: - lastLocationAccess: - #next: v1529  <|@  <|@
f <@~|@floating>@ <|@
tid v3111 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1525 
index: - 
=== Succesors ===
=== Usages ===
v1529 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1525 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1529 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:469) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2923) [bci: 57]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3111 
value: j1425 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1532 
=== Usages ===
=== Predecessor ===
v1528 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3111 value: j1425 stateAfter: - lastLocationAccess: - #next: v1532  <|@  <|@
f <@~|@floating>@ <|@
tid v3116 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j1525 
index: - 
=== Succesors ===
=== Usages ===
v1532 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1525 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1532 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2923) [bci: 57]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3116 
value: v1913 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1503 
=== Usages ===
=== Predecessor ===
v1529 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3116 value: v1913 stateAfter: - lastLocationAccess: - #next: v1503  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1503 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.MembarNode.memoryBarrier(int, LocationIdentity) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:560) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2923) [bci: 57]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1504 
=== Usages ===
=== Predecessor ===
v1532 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a1504  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1504 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:561) [bci: 71]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2923) [bci: 57]
stamp: a! -
trackedPointer: true
=== Inputs ===
input: j1525 
=== Succesors ===
next: v1506 
=== Usages ===
a1509 
=== Predecessor ===
v1503 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j1525 #next: v1506  <|@  <|@
f <@*|@fixed>@ <|@
tid v1506 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2923) [bci: 57]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1507 
=== Predecessor ===
a1504 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B30" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4561701786114434764
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1491 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2923) [bci: 57]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1495 
=== Usages ===
=== Predecessor ===
v1493 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1495  <|@  <|@
f <@*|@fixed>@ <|@
tid v1495 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2923) [bci: 57]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1496 
=== Predecessor ===
v1491 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" "B27" 
    successors "B31" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4562309419648302455
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1496 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2923) [bci: 57]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1495 v1497 
=== Succesors ===
next: a1505 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1495 v1497 #next: a1505  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1505 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.newArray(ForeignCallDescriptor, KlassPointer, int, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 155]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2923) [bci: 57]
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?35 
arguments: v1424 i932 i26 
=== Succesors ===
next: v1508 
=== Usages ===
a1509 
=== Predecessor ===
v1496 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?35 arguments: v1424 i932 i26 #next: v1508  <|@  <|@
f <@*|@fixed>@ <|@
tid v1508 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2923) [bci: 57]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1507 
=== Predecessor ===
a1505 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" 
    successors "B32" "B33" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4576505223557843009
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a1509 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2923) [bci: 57]
stamp: a! -
valueDescription: a -
=== Inputs ===
merge: v1507 
values: a1504 a1505 
=== Succesors ===
=== Usages ===
v3185 a1281 v3098 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1507 values: a1504 a1505  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1507 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2923) [bci: 57]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1506 v1508 
=== Succesors ===
next: v2724 
=== Usages ===
a1509 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1506 v1508 #next: v2724  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2724 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v2228 
=== Usages ===
j2725 j2727 
=== Predecessor ===
v1507 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v2228  <|@  <|@
f <@~|@floating>@ <|@
tid v1203 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Math.min(Math.java:1336) [bci: 2]
at com.oracle.graal.enterprise.T.c.b(stripped:192) [bci: 4]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:102) [bci: 9]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2923) [bci: 57]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3046 
y: i932 
=== Succesors ===
=== Usages ===
i1263 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i3046 y: i932  <|@  <|@
f <@~|@floating>@ <|@
tid i1263 <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
condition: v1203 
trueValue: i3046 
falseValue: i932 
=== Succesors ===
=== Usages ===
j1956 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v1203 trueValue: i3046 falseValue: i932  <|@  <|@
f <@~|@floating>@ <|@
tid j1956 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i1263 
=== Succesors ===
=== Usages ===
j2782 v3185 j1960 v2225 v2486 j2768 j2773 j2776 j2779 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i1263  <|@  <|@
f <@~|@floating>@ <|@
tid v2225 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1956 
y: j1425 
=== Succesors ===
=== Usages ===
v2228 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1956 y: j1425  <|@  <|@
f <@*|@fixed>@ <|@
tid v2228 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v2225 
=== Succesors ===
trueSuccessor: v2226 
falseSuccessor: v2227 
=== Usages ===
=== Predecessor ===
v2724 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2225 #trueSuccessor: v2226 #falseSuccessor: v2227  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B50" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4572001623930472513
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2226 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2244 
=== Usages ===
=== Predecessor ===
v2228 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2244  <|@  <|@
f <@*|@fixed>@ <|@
tid v2244 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2245 
=== Predecessor ===
v2226 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B35" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4572001623930472513
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2227 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2231 
=== Usages ===
=== Predecessor ===
v2228 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2231  <|@  <|@
f <@~|@floating>@ <|@
tid v3098 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1509 
index: - 
=== Succesors ===
=== Usages ===
j2727 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1509 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j2727 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v2724 
address: v3098 
=== Succesors ===
=== Usages ===
v3217 v3219 v3221 v3223 v3225 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v2724 address: v3098  <|@  <|@
f <@~|@floating>@ <|@
tid v3094 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a458 
index: - 
=== Succesors ===
=== Usages ===
j2725 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a458 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j2725 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v2724 
address: v3094 
=== Succesors ===
=== Usages ===
v3218 v3220 v3222 v3224 v3226 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v2724 address: v3094  <|@  <|@
f <@~|@floating>@ <|@
tid j2768 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483664 - 2147483631]
=== Inputs ===
x: j1956 
y: j2537 
=== Succesors ===
=== Usages ===
v2769 v2771 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1956 y: j2537  <|@  <|@
f <@~|@floating>@ <|@
tid v2769 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2768 
y: j1034 
=== Succesors ===
=== Usages ===
v2231 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2768 y: j1034  <|@  <|@
f <@*|@fixed>@ <|@
tid v2231 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v2769 
=== Succesors ===
trueSuccessor: v2229 
falseSuccessor: v2230 
=== Usages ===
=== Predecessor ===
v2227 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2769 #trueSuccessor: v2229 #falseSuccessor: v2230  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B38" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4570173825191496802
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2229 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2240 
=== Usages ===
=== Predecessor ===
v2231 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2240  <|@  <|@
f <@*|@fixed>@ <|@
tid v2240 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2241 
=== Predecessor ===
v2229 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4562994424675731521
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2230 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2232 
=== Usages ===
=== Predecessor ===
v2231 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2232  <|@  <|@
f <@*|@fixed>@ <|@
tid v2232 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2233 
=== Predecessor ===
v2230 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" "B71" 
    successors "B37" "B71" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 2
    probability 4572001623930472513
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j2760 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2233 
values: j1034 j2767 
=== Succesors ===
=== Usages ===
v3226 j2767 v3225 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2233 values: j1034 j2767  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2233 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v2232 
=== Succesors ===
next: v3047 
=== Usages ===
v3047 v2236 v2237 j2760 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v2232 #next: v3047  <|@  <|@
f <@~|@floating>@ <|@
tid v3226 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j2725 
index: j2760 
=== Succesors ===
=== Usages ===
v3047 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2725 index: j2760  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3047 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16>
=== Inputs ===
stateBefore: - 
guard: v2233 
address: v3226 
=== Succesors ===
next: v3014 
=== Usages ===
v3014 
=== Predecessor ===
v2233 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v2233 address: v3226 #next: v3014  <|@  <|@
f <@~|@floating>@ <|@
tid v3225 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j2727 
index: j2760 
=== Succesors ===
=== Usages ===
v3014 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2727 index: j2760  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3014 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3225 
value: v3047 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2239 
=== Usages ===
=== Predecessor ===
v3047 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3225 value: v3047 stateAfter: - lastLocationAccess: - #next: v2239  <|@  <|@
f <@~|@floating>@ <|@
tid j2767 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j2760 
y: j739 
=== Succesors ===
=== Usages ===
j2752 j2760 v2771 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2760 y: j739  <|@  <|@
f <@~|@floating>@ <|@
tid v2771 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2768 
y: j2767 
=== Succesors ===
=== Usages ===
v2239 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2768 y: j2767  <|@  <|@
f <@*|@fixed>@ <|@
tid v2239 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v2771 
=== Succesors ===
trueSuccessor: v2236 
falseSuccessor: v2238 
=== Usages ===
=== Predecessor ===
v3014 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2771 #trueSuccessor: v2236 #falseSuccessor: v2238  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4562994424675731521
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2236 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v2233 
=== Succesors ===
next: v2242 
=== Usages ===
=== Predecessor ===
v2239 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v2233 #next: v2242  <|@  <|@
f <@*|@fixed>@ <|@
tid v2242 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2241 
=== Predecessor ===
v2236 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B34" "B37" 
    successors "B39" "B40" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4572001623930472513
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j2752 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2241 
values: j1034 j2767 
=== Succesors ===
=== Usages ===
v3224 j2759 j2744 v2774 v3223 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2241 values: j1034 j2767  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2241 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2240 v2242 
=== Succesors ===
next: v2263 
=== Usages ===
j2752 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2240 v2242 #next: v2263  <|@  <|@
f <@~|@floating>@ <|@
tid j2773 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483656 - 2147483639]
=== Inputs ===
x: j1956 
y: j2543 
=== Succesors ===
=== Usages ===
v2774 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1956 y: j2543  <|@  <|@
f <@~|@floating>@ <|@
tid v2774 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2773 
y: j2752 
=== Succesors ===
=== Usages ===
v2263 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2773 y: j2752  <|@  <|@
f <@*|@fixed>@ <|@
tid v2263 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v2774 
=== Succesors ===
trueSuccessor: v2262 
falseSuccessor: v2261 
=== Usages ===
=== Predecessor ===
v2241 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2774 #trueSuccessor: v2262 #falseSuccessor: v2261  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4562994424675731521
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2262 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2266 
=== Usages ===
=== Predecessor ===
v2263 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2266  <|@  <|@
f <@*|@fixed>@ <|@
tid v2266 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2252 
=== Predecessor ===
v2262 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4570173825191496802
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2261 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3048 
=== Usages ===
v3048 
=== Predecessor ===
v2263 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3048  <|@  <|@
f <@~|@floating>@ <|@
tid v3224 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j2725 
index: j2752 
=== Succesors ===
=== Usages ===
v3048 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2725 index: j2752  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3048 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16,i16,i16,i16,i16,i16,i16>
=== Inputs ===
stateBefore: - 
guard: v2261 
address: v3224 
=== Succesors ===
next: v3012 
=== Usages ===
v3012 
=== Predecessor ===
v2261 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v2261 address: v3224 #next: v3012  <|@  <|@
f <@~|@floating>@ <|@
tid v3223 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j2727 
index: j2752 
=== Succesors ===
=== Usages ===
v3012 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2727 index: j2752  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3012 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3223 
value: v3048 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2251 
=== Usages ===
=== Predecessor ===
v3048 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3223 value: v3048 stateAfter: - lastLocationAccess: - #next: v2251  <|@  <|@
f <@~|@floating>@ <|@
tid j2759 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j2752 
y: j1432 
=== Succesors ===
=== Usages ===
j2744 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2752 y: j1432  <|@  <|@
f <@*|@fixed>@ <|@
tid v2251 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2252 
=== Predecessor ===
v3012 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" "B39" 
    successors "B42" "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4572001623930472513
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j2744 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2252 
values: j2759 j2752 
=== Succesors ===
=== Usages ===
v3222 j2751 j2736 v2777 v3221 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2252 values: j2759 j2752  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2252 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2251 v2266 
=== Succesors ===
next: v2269 
=== Usages ===
j2744 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2251 v2266 #next: v2269  <|@  <|@
f <@~|@floating>@ <|@
tid j2776 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483652 - 2147483643]
=== Inputs ===
x: j1956 
y: j2547 
=== Succesors ===
=== Usages ===
v2777 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1956 y: j2547  <|@  <|@
f <@~|@floating>@ <|@
tid v2777 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2776 
y: j2744 
=== Succesors ===
=== Usages ===
v2269 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2776 y: j2744  <|@  <|@
f <@*|@fixed>@ <|@
tid v2269 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v2777 
=== Succesors ===
trueSuccessor: v2268 
falseSuccessor: v2267 
=== Usages ===
=== Predecessor ===
v2252 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2777 #trueSuccessor: v2268 #falseSuccessor: v2267  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4562994424675731521
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2268 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2272 
=== Usages ===
=== Predecessor ===
v2269 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2272  <|@  <|@
f <@*|@fixed>@ <|@
tid v2272 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2255 
=== Predecessor ===
v2268 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4570173825191496802
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2267 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3049 
=== Usages ===
v3049 
=== Predecessor ===
v2269 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3049  <|@  <|@
f <@~|@floating>@ <|@
tid v3222 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j2725 
index: j2744 
=== Succesors ===
=== Usages ===
v3049 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2725 index: j2744  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3049 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16,i16,i16>
=== Inputs ===
stateBefore: - 
guard: v2267 
address: v3222 
=== Succesors ===
next: v3010 
=== Usages ===
v3010 
=== Predecessor ===
v2267 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v2267 address: v3222 #next: v3010  <|@  <|@
f <@~|@floating>@ <|@
tid v3221 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j2727 
index: j2744 
=== Succesors ===
=== Usages ===
v3010 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2727 index: j2744  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3010 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3221 
value: v3049 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2254 
=== Usages ===
=== Predecessor ===
v3049 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3221 value: v3049 stateAfter: - lastLocationAccess: - #next: v2254  <|@  <|@
f <@~|@floating>@ <|@
tid j2751 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j2744 
y: j2519 
=== Succesors ===
=== Usages ===
j2736 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2744 y: j2519  <|@  <|@
f <@*|@fixed>@ <|@
tid v2254 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2255 
=== Predecessor ===
v3010 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4572001623930472513
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j2736 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2255 
values: j2751 j2744 
=== Succesors ===
=== Usages ===
v3220 j2743 j2728 v2780 v3219 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2255 values: j2751 j2744  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2255 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2254 v2272 
=== Succesors ===
next: v2275 
=== Usages ===
j2736 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2254 v2272 #next: v2275  <|@  <|@
f <@~|@floating>@ <|@
tid j2779 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483650 - 2147483645]
=== Inputs ===
x: j1956 
y: j2551 
=== Succesors ===
=== Usages ===
v2780 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1956 y: j2551  <|@  <|@
f <@~|@floating>@ <|@
tid v2780 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2779 
y: j2736 
=== Succesors ===
=== Usages ===
v2275 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2779 y: j2736  <|@  <|@
f <@*|@fixed>@ <|@
tid v2275 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v2780 
=== Succesors ===
trueSuccessor: v2274 
falseSuccessor: v2273 
=== Usages ===
=== Predecessor ===
v2255 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2780 #trueSuccessor: v2274 #falseSuccessor: v2273  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4562994424675731521
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2274 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2278 
=== Usages ===
=== Predecessor ===
v2275 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2278  <|@  <|@
f <@*|@fixed>@ <|@
tid v2278 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2258 
=== Predecessor ===
v2274 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4570173825191496802
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2273 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3050 
=== Usages ===
v3050 
=== Predecessor ===
v2275 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3050  <|@  <|@
f <@~|@floating>@ <|@
tid v3220 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j2725 
index: j2736 
=== Succesors ===
=== Usages ===
v3050 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2725 index: j2736  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3050 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16>
=== Inputs ===
stateBefore: - 
guard: v2273 
address: v3220 
=== Succesors ===
next: v3008 
=== Usages ===
v3008 
=== Predecessor ===
v2273 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v2273 address: v3220 #next: v3008  <|@  <|@
f <@~|@floating>@ <|@
tid v3219 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j2727 
index: j2736 
=== Succesors ===
=== Usages ===
v3008 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2727 index: j2736  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3008 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3219 
value: v3050 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2257 
=== Usages ===
=== Predecessor ===
v3050 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3219 value: v3050 stateAfter: - lastLocationAccess: - #next: v2257  <|@  <|@
f <@~|@floating>@ <|@
tid j2743 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j2736 
y: j2497 
=== Succesors ===
=== Usages ===
j2728 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2736 y: j2497  <|@  <|@
f <@*|@fixed>@ <|@
tid v2257 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2258 
=== Predecessor ===
v3008 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" "B45" 
    successors "B48" "B49" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4572001623930472513
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j2728 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2258 
values: j2743 j2736 
=== Succesors ===
=== Usages ===
v3218 v2783 v3217 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2258 values: j2743 j2736  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2258 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2257 v2278 
=== Succesors ===
next: v2281 
=== Usages ===
j2728 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2257 v2278 #next: v2281  <|@  <|@
f <@~|@floating>@ <|@
tid j2782 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483649 - 2147483646]
=== Inputs ===
x: j1956 
y: j2555 
=== Succesors ===
=== Usages ===
v2783 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1956 y: j2555  <|@  <|@
f <@~|@floating>@ <|@
tid v2783 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2782 
y: j2728 
=== Succesors ===
=== Usages ===
v2281 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2782 y: j2728  <|@  <|@
f <@*|@fixed>@ <|@
tid v2281 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v2783 
=== Succesors ===
trueSuccessor: v2280 
falseSuccessor: v2279 
=== Usages ===
=== Predecessor ===
v2258 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2783 #trueSuccessor: v2280 #falseSuccessor: v2279  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4562994424675731521
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2280 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2284 
=== Usages ===
=== Predecessor ===
v2281 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2284  <|@  <|@
f <@*|@fixed>@ <|@
tid v2284 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2245 
=== Predecessor ===
v2280 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4570173825191496802
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2279 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: i3051 
=== Usages ===
i3051 
=== Predecessor ===
v2281 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i3051  <|@  <|@
f <@~|@floating>@ <|@
tid v3218 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j2725 
index: j2728 
=== Succesors ===
=== Usages ===
i3051 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2725 index: j2728  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i3051 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: v2279 
address: v3218 
=== Succesors ===
next: v3006 
=== Usages ===
v3006 
=== Predecessor ===
v2279 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v2279 address: v3218 #next: v3006  <|@  <|@
f <@~|@floating>@ <|@
tid v3217 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j2727 
index: j2728 
=== Succesors ===
=== Usages ===
v3006 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2727 index: j2728  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3006 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3217 
value: i3051 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2260 
=== Usages ===
=== Predecessor ===
i3051 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3217 value: i3051 stateAfter: - lastLocationAccess: - #next: v2260  <|@  <|@
f <@*|@fixed>@ <|@
tid v2260 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2245 
=== Predecessor ===
v3006 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B32" "B49" "B48" 
    successors "B51" "B69" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4576505223557843009
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2245 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2244 v2260 v2284 
=== Succesors ===
next: v2786 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2244 v2260 v2284 #next: v2786  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2786 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v2291 
=== Usages ===
j2788 
=== Predecessor ===
v2245 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v2291  <|@  <|@
f <@~|@floating>@ <|@
tid j1955 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i932 
=== Succesors ===
=== Usages ===
j1960 v2486 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i932  <|@  <|@
f <@~|@floating>@ <|@
tid v2486 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1956 
y: j1955 
=== Succesors ===
=== Usages ===
v2291 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1956 y: j1955  <|@  <|@
f <@*|@fixed>@ <|@
tid v2291 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v2486 
=== Succesors ===
trueSuccessor: v2290 
falseSuccessor: v2289 
=== Usages ===
=== Predecessor ===
v2786 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2486 #trueSuccessor: v2290 #falseSuccessor: v2289  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B52" "B53" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4572001623930472513
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2290 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2294 
=== Usages ===
=== Predecessor ===
v2291 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2294  <|@  <|@
f <@~|@floating>@ <|@
tid v3185 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a1509 
index: j1956 
=== Succesors ===
=== Usages ===
j2788 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1509 index: j1956  <|@  <|@
f <@~|@floating>@ <|@
tid j2788 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v2786 
address: v3185 
=== Succesors ===
=== Usages ===
v3227 v3228 v3229 v3230 v3231 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v2786 address: v3185  <|@  <|@
f <@~|@floating>@ <|@
tid j1960 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
stamp: i64 [-4294967295 - 4294967295]
=== Inputs ===
x: j1955 
y: j1956 
=== Succesors ===
=== Usages ===
j2833 j2819 j2824 j2827 j2830 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j1955 y: j1956  <|@  <|@
f <@~|@floating>@ <|@
tid j2819 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967311 - 4294967279]
=== Inputs ===
x: j1960 
y: j2537 
=== Succesors ===
=== Usages ===
v2820 v2822 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1960 y: j2537  <|@  <|@
f <@~|@floating>@ <|@
tid v2820 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2819 
y: j1034 
=== Succesors ===
=== Usages ===
v2294 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2819 y: j1034  <|@  <|@
f <@*|@fixed>@ <|@
tid v2294 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v2820 
=== Succesors ===
trueSuccessor: v2292 
falseSuccessor: v2293 
=== Usages ===
=== Predecessor ===
v2290 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2820 #trueSuccessor: v2292 #falseSuccessor: v2293  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B56" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4570173825191496802
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2292 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2303 
=== Usages ===
=== Predecessor ===
v2294 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2303  <|@  <|@
f <@*|@fixed>@ <|@
tid v2303 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2304 
=== Predecessor ===
v2292 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4562994424675731521
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2293 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2295 
=== Usages ===
=== Predecessor ===
v2294 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2295  <|@  <|@
f <@*|@fixed>@ <|@
tid v2295 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2296 
=== Predecessor ===
v2293 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" "B68" 
    successors "B55" "B68" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 2
    probability 4572001623930472513
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j2813 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2296 
values: j1034 j2818 
=== Succesors ===
=== Usages ===
v3231 j2818 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2296 values: j1034 j2818  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2296 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v2295 
=== Succesors ===
next: v3019 
=== Usages ===
j2813 v2299 v2300 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v2295 #next: v3019  <|@  <|@
f <@~|@floating>@ <|@
tid v3231 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j2788 
index: j2813 
=== Succesors ===
=== Usages ===
v3019 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2788 index: j2813  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3019 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3231 
value: v3035 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2302 
=== Usages ===
=== Predecessor ===
v2296 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3231 value: v3035 stateAfter: - lastLocationAccess: - #next: v2302  <|@  <|@
f <@~|@floating>@ <|@
tid j2818 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j2813 
y: j739 
=== Succesors ===
=== Usages ===
j2807 j2813 v2822 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2813 y: j739  <|@  <|@
f <@~|@floating>@ <|@
tid v2822 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2819 
y: j2818 
=== Succesors ===
=== Usages ===
v2302 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2819 y: j2818  <|@  <|@
f <@*|@fixed>@ <|@
tid v2302 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v2822 
=== Succesors ===
trueSuccessor: v2299 
falseSuccessor: v2301 
=== Usages ===
=== Predecessor ===
v3019 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2822 #trueSuccessor: v2299 #falseSuccessor: v2301  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B56" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4562994424675731521
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2299 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v2296 
=== Succesors ===
next: v2305 
=== Usages ===
=== Predecessor ===
v2302 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v2296 #next: v2305  <|@  <|@
f <@*|@fixed>@ <|@
tid v2305 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2304 
=== Predecessor ===
v2299 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B52" "B55" 
    successors "B57" "B58" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4572001623930472513
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j2807 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2304 
values: j1034 j2818 
=== Succesors ===
=== Usages ===
v3230 j2812 j2801 v2825 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2304 values: j1034 j2818  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2304 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2303 v2305 
=== Succesors ===
next: v2326 
=== Usages ===
j2807 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2303 v2305 #next: v2326  <|@  <|@
f <@~|@floating>@ <|@
tid j2824 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967303 - 4294967287]
=== Inputs ===
x: j1960 
y: j2543 
=== Succesors ===
=== Usages ===
v2825 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1960 y: j2543  <|@  <|@
f <@~|@floating>@ <|@
tid v2825 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2824 
y: j2807 
=== Succesors ===
=== Usages ===
v2326 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2824 y: j2807  <|@  <|@
f <@*|@fixed>@ <|@
tid v2326 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v2825 
=== Succesors ===
trueSuccessor: v2325 
falseSuccessor: v2324 
=== Usages ===
=== Predecessor ===
v2304 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2825 #trueSuccessor: v2325 #falseSuccessor: v2324  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B59" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4562994424675731521
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2325 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2329 
=== Usages ===
=== Predecessor ===
v2326 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2329  <|@  <|@
f <@*|@fixed>@ <|@
tid v2329 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2315 
=== Predecessor ===
v2325 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B59" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4570173825191496802
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2324 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3018 
=== Usages ===
=== Predecessor ===
v2326 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3018  <|@  <|@
f <@~|@floating>@ <|@
tid v3230 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j2788 
index: j2807 
=== Succesors ===
=== Usages ===
v3018 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2788 index: j2807  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3018 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3230 
value: v3039 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2314 
=== Usages ===
=== Predecessor ===
v2324 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3230 value: v3039 stateAfter: - lastLocationAccess: - #next: v2314  <|@  <|@
f <@~|@floating>@ <|@
tid j2812 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j2807 
y: j1432 
=== Succesors ===
=== Usages ===
j2801 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2807 y: j1432  <|@  <|@
f <@*|@fixed>@ <|@
tid v2314 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2315 
=== Predecessor ===
v3018 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" "B57" 
    successors "B60" "B61" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4572001623930472513
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j2801 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2315 
values: j2812 j2807 
=== Succesors ===
=== Usages ===
v3229 j2806 j2795 v2828 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2315 values: j2812 j2807  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2315 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2314 v2329 
=== Succesors ===
next: v2332 
=== Usages ===
j2801 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2314 v2329 #next: v2332  <|@  <|@
f <@~|@floating>@ <|@
tid j2827 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967299 - 4294967291]
=== Inputs ===
x: j1960 
y: j2547 
=== Succesors ===
=== Usages ===
v2828 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1960 y: j2547  <|@  <|@
f <@~|@floating>@ <|@
tid v2828 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2827 
y: j2801 
=== Succesors ===
=== Usages ===
v2332 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2827 y: j2801  <|@  <|@
f <@*|@fixed>@ <|@
tid v2332 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v2828 
=== Succesors ===
trueSuccessor: v2331 
falseSuccessor: v2330 
=== Usages ===
=== Predecessor ===
v2315 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2828 #trueSuccessor: v2331 #falseSuccessor: v2330  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4562994424675731521
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2331 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2335 
=== Usages ===
=== Predecessor ===
v2332 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2335  <|@  <|@
f <@*|@fixed>@ <|@
tid v2335 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2318 
=== Predecessor ===
v2331 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4570173825191496802
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2330 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3017 
=== Usages ===
=== Predecessor ===
v2332 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3017  <|@  <|@
f <@~|@floating>@ <|@
tid v3229 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j2788 
index: j2801 
=== Succesors ===
=== Usages ===
v3017 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2788 index: j2801  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3017 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3229 
value: v3038 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2317 
=== Usages ===
=== Predecessor ===
v2330 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3229 value: v3038 stateAfter: - lastLocationAccess: - #next: v2317  <|@  <|@
f <@~|@floating>@ <|@
tid j2806 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j2801 
y: j2519 
=== Succesors ===
=== Usages ===
j2795 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2801 y: j2519  <|@  <|@
f <@*|@fixed>@ <|@
tid v2317 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2318 
=== Predecessor ===
v3017 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" "B60" 
    successors "B63" "B64" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4572001623930472513
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j2795 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2318 
values: j2806 j2801 
=== Succesors ===
=== Usages ===
v3228 j2800 j2789 v2831 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2318 values: j2806 j2801  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2318 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2317 v2335 
=== Succesors ===
next: v2338 
=== Usages ===
j2795 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2317 v2335 #next: v2338  <|@  <|@
f <@~|@floating>@ <|@
tid j2830 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967297 - 4294967293]
=== Inputs ===
x: j1960 
y: j2551 
=== Succesors ===
=== Usages ===
v2831 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1960 y: j2551  <|@  <|@
f <@~|@floating>@ <|@
tid v2831 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2830 
y: j2795 
=== Succesors ===
=== Usages ===
v2338 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2830 y: j2795  <|@  <|@
f <@*|@fixed>@ <|@
tid v2338 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v2831 
=== Succesors ===
trueSuccessor: v2337 
falseSuccessor: v2336 
=== Usages ===
=== Predecessor ===
v2318 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2831 #trueSuccessor: v2337 #falseSuccessor: v2336  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B65" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4562994424675731521
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2337 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2341 
=== Usages ===
=== Predecessor ===
v2338 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2341  <|@  <|@
f <@*|@fixed>@ <|@
tid v2341 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2321 
=== Predecessor ===
v2337 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B65" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4570173825191496802
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2336 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3016 
=== Usages ===
=== Predecessor ===
v2338 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3016  <|@  <|@
f <@~|@floating>@ <|@
tid v3228 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j2788 
index: j2795 
=== Succesors ===
=== Usages ===
v3016 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2788 index: j2795  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3016 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3228 
value: v3037 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2320 
=== Usages ===
=== Predecessor ===
v2336 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3228 value: v3037 stateAfter: - lastLocationAccess: - #next: v2320  <|@  <|@
f <@~|@floating>@ <|@
tid j2800 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j2795 
y: j2497 
=== Succesors ===
=== Usages ===
j2789 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2795 y: j2497  <|@  <|@
f <@*|@fixed>@ <|@
tid v2320 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2321 
=== Predecessor ===
v3016 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" "B63" 
    successors "B66" "B67" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4572001623930472513
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j2789 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2321 
values: j2800 j2795 
=== Succesors ===
=== Usages ===
v3227 v2834 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2321 values: j2800 j2795  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2321 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2320 v2341 
=== Succesors ===
next: v2344 
=== Usages ===
j2789 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2320 v2341 #next: v2344  <|@  <|@
f <@~|@floating>@ <|@
tid j2833 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967296 - 4294967294]
=== Inputs ===
x: j1960 
y: j2555 
=== Succesors ===
=== Usages ===
v2834 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1960 y: j2555  <|@  <|@
f <@~|@floating>@ <|@
tid v2834 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2833 
y: j2789 
=== Succesors ===
=== Usages ===
v2344 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2833 y: j2789  <|@  <|@
f <@*|@fixed>@ <|@
tid v2344 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v2834 
=== Succesors ===
trueSuccessor: v2343 
falseSuccessor: v2342 
=== Usages ===
=== Predecessor ===
v2321 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2834 #trueSuccessor: v2343 #falseSuccessor: v2342  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B70" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4562994424675731521
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2343 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2347 
=== Usages ===
=== Predecessor ===
v2344 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2347  <|@  <|@
f <@*|@fixed>@ <|@
tid v2347 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2308 
=== Predecessor ===
v2343 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B70" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4570173825191496802
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2342 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3015 
=== Usages ===
=== Predecessor ===
v2344 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3015  <|@  <|@
f <@~|@floating>@ <|@
tid v3227 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j2788 
index: j2789 
=== Succesors ===
=== Usages ===
v3015 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2788 index: j2789  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3015 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3227 
value: i3036 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2323 
=== Usages ===
=== Predecessor ===
v2342 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3227 value: i3036 stateAfter: - lastLocationAccess: - #next: v2323  <|@  <|@
f <@*|@fixed>@ <|@
tid v2323 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2308 
=== Predecessor ===
v3015 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B54" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 2
    probability 4570173825191496802
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2301 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2300 
=== Usages ===
=== Predecessor ===
v2302 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2300  <|@  <|@
f <@*|@fixed>@ <|@
tid v2300 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v2296 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v2301 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v2296  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B70" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4572001623930472513
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2289 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2307 
=== Usages ===
=== Predecessor ===
v2291 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2307  <|@  <|@
f <@*|@fixed>@ <|@
tid v2307 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2308 
=== Predecessor ===
v2289 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" "B67" "B66" 
    successors "B15" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576505223557843009
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2308 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2307 v2323 v2347 
=== Succesors ===
next: a1281 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2307 v2323 v2347 #next: a1281  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1281 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2923) [bci: 57]
predefinedStamp: [null]
stamp: a! -
=== Inputs ===
object: a1509 
=== Succesors ===
next: v782 
=== Usages ===
v3081 a458 
=== Predecessor ===
v2308 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a1509 #next: v782  <|@  <|@
f <@~|@floating>@ <|@
tid v3081 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a1281 
index: i457 
=== Succesors ===
=== Usages ===
v782 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1281 index: i457  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v782 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:650) [bci: 26]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2923) [bci: 57]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v992 
address: v3081 
value: i921 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v49 
=== Usages ===
=== Predecessor ===
a1281 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v992 address: v3081 value: i921 stateAfter: - lastLocationAccess: - #next: v49  <|@  <|@
f <@*|@fixed>@ <|@
tid v49 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2923) [bci: 47]
stamp: void
=== Inputs ===
loopBegin: v33 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v782 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v33  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B36" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4570173825191496802
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2238 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2237 
=== Usages ===
=== Predecessor ===
v2239 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2237  <|@  <|@
f <@*|@fixed>@ <|@
tid v2237 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v2233 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v2238 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v2233  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B73" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v995 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:650) [bci: 26]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2923) [bci: 57]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v33 
=== Succesors ===
next: v1350 
=== Usages ===
=== Predecessor ===
v996 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v33 #next: v1350  <|@  <|@
f <@~|@floating>@ <|@
tid i1351 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -198683
stableDimension: 0
stamp: i32 [-198683] ⇊00000000fffcf7e5 ⇈00000000fffcf7e5
stampKind: i32
value: int[-198683|0xfffffffffffcf7e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1343 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1350 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1340 
=== Predecessor ===
v995 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B19" "B21" "B23" "B72" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1343 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-198683 - -195867] ⇊00000000fffc00e5 ⇈00000000fffdffed
valueDescription: i32
=== Inputs ===
merge: v1340 
values: i1342 i1347 i1349 i1351 
=== Succesors ===
=== Usages ===
v1345 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1340 values: i1342 i1347 i1349 i1351  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1340 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1341 v1346 v1348 v1350 
=== Succesors ===
next: v1345 
=== Usages ===
i1343 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1341 v1346 v1348 v1350 #next: v1345  <|@  <|@
f <@*|@fixed>@ <|@
tid v1345 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?35 
actionAndReason: i1343 
speculation: a1332 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1340 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?35 actionAndReason: i1343 speculation: a1332  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B75" 
    xhandlers
    flags 
    probability 4592102888872906507
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v41 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2924) [bci: 67]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v33 
=== Succesors ===
next: v568 
=== Usages ===
=== Predecessor ===
v43 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v33 #next: v568  <|@  <|@
f <@*|@fixed>@ <|@
tid v568 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v526 
=== Predecessor ===
v41 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B8" "B13" "B74" 
    successors "B76" "B84" 
    xhandlers
    flags 
    probability 4599075674450723485
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a637 <|@
d <@d|@=== Debug Properties ===
stamp: a!# [C
valueDescription: a -
=== Inputs ===
merge: v526 
values: a1042 a1051 a458 
=== Succesors ===
=== Usages ===
?638 j1544 a713 a1068 ?344 v3082 v3095 a520 ?1105 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v526 values: a1042 a1051 a458  <|@  <|@
f <@~|@floating>@ <|@
tid i530 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
valueDescription: i32
=== Inputs ===
merge: v526 
values: i548 i548 i3046 
=== Succesors ===
=== Usages ===
i336 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v526 values: i548 i548 i3046  <|@  <|@
f <@~|@floating>@ <|@
tid i532 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v526 
values: i26 i26 i457 
=== Succesors ===
=== Usages ===
i319 ?638 v1635 j1545 v811 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v526 values: i26 i26 i457  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v526 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v525 v528 v568 
=== Succesors ===
next: i3052 
=== Usages ===
a637 i530 i532 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v525 v528 v568 #next: i3052  <|@  <|@
f <@~|@floating>@ <|@
tid v3082 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a637 
index: - 
=== Succesors ===
=== Usages ===
i3052 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a637 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i3052 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.compiler.nodes.java.ArrayLengthNode.arrayLength(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 85]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2924) [bci: 69]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v3082 
=== Succesors ===
next: v340 
=== Usages ===
i810 i1266 v1242 
=== Predecessor ===
v526 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3082 #next: v340  <|@  <|@
f <@~|@floating>@ <|@
tid a1068 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Compress
stamp: n!# [C
=== Inputs ===
value: a637 
=== Succesors ===
=== Usages ===
v1595 v1637 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a637  <|@  <|@
tid ?638 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a89 
values: i532 a637 
=== Succesors ===
=== Usages ===
?527 ?626 
=== Predecessor ===
- >@ <|@
instruction <@VirtualObjectState|@org.graalvm.compiler.virtual.nodes.VirtualObjectState>@ object: a89 values: i532 a637  <|@  <|@
tid ?527 <|@
d <@d|@=== Debug Properties ===
bci: 67
code: ResolvedJavaMethodBytecode<Formatter$FormatSpecifier.justify(String)>
duringCall: false
localsSize: 6
locksSize: 0
rethrowException: false
sourceFile: Formatter.java
sourceLine: 2924
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - a2 a89 i85 i25 - 
virtualObjectMappings: ?638 
=== Succesors ===
=== Usages ===
a1607 v816 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - a2 a89 i85 i25 - virtualObjectMappings: ?638  <|@  <|@
f <@~|@floating>@ <|@
tid i319 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 20]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2924) [bci: 69]
stamp: i32
=== Inputs ===
x: i532 
y: i3043 
=== Succesors ===
=== Usages ===
v827 i336 v1593 i521 i711 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i532 y: i3043  <|@  <|@
f <@~|@floating>@ <|@
tid i336 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 6]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2924) [bci: 69]
stamp: i32
=== Inputs ===
x: i319 
y: i530 
=== Succesors ===
=== Usages ===
v337 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i319 y: i530  <|@  <|@
f <@~|@floating>@ <|@
tid v337 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 7]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2924) [bci: 69]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i336 
y: i47 
=== Succesors ===
=== Usages ===
v340 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i336 y: i47  <|@  <|@
tid ?406 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a89 
materializedValue: a89 
=== Succesors ===
=== Usages ===
?267 
=== Predecessor ===
- >@ <|@
instruction <@MaterializedObjectState|@org.graalvm.compiler.virtual.nodes.MaterializedObjectState>@ object: a89 materializedValue: a89  <|@  <|@
tid ?267 <|@
d <@d|@=== Debug Properties ===
bci: 69
code: ResolvedJavaMethodBytecode<Formatter$FormatSpecifier.justify(String)>
duringCall: true
localsSize: 6
locksSize: 0
rethrowException: false
sourceFile: Formatter.java
sourceLine: 2924
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - a89 i85 i25 - 
virtualObjectMappings: ?406 
=== Succesors ===
=== Usages ===
?333 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - a89 i85 i25 - virtualObjectMappings: ?406  <|@  <|@
tid ?333 <|@
d <@d|@=== Debug Properties ===
bci: 2
code: ResolvedJavaMethodBytecode<StringBuilder.append(String)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: StringBuilder.java
sourceLine: 136
stackSize: 0
=== Inputs ===
outerFrameState: ?267 
values: a89 - 
=== Succesors ===
=== Usages ===
?351 ?365 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?267 values: a89 -  <|@  <|@
f <@~|@floating>@ <|@
tid j1549 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: true
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2924) [bci: 69]
resultBits: 64
stamp: i64 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
value: i3043 
=== Succesors ===
=== Usages ===
v1550 v1708 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i3043  <|@  <|@
f <@~|@floating>@ <|@
tid i1698 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2924) [bci: 69]
rawvalue: 0
stableDimension: 0
stamp: i8 [0] ⇈0000000000000000
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1697 v1766 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i1692 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.cardTableShift(GraalHotSpotVMConfig) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2924) [bci: 69]
rawvalue: 9
stableDimension: 0
stamp: i32 [9] ⇊0000000000000009 ⇈0000000000000009
stampKind: i32
value: int[9|0x9]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1693 j1763 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1696 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.loadLongConfigValue(int) [bci: -1]
at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.cardTableAddress(GraalHotSpotVMConfigNode.java:114) [bci: 6]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:133) [bci: 7]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2924) [bci: 69]
rawvalue: 4682670080
stableDimension: 0
stamp: i64 [4682670080] ⇊00000001171be000 ⇈00000001171be000
stampKind: i64
value: long[4682670080|0x1171be000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v3137 v3149 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1923 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1589 v1631 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1579 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
j1623 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1623 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
input: v1579 
=== Succesors ===
=== Usages ===
v3125 
=== Predecessor ===
- >@ <|@
instruction <@PointerCast|@org.graalvm.compiler.hotspot.word.PointerCastNode>@ input: v1579  <|@  <|@
f <@~|@floating>@ <|@
tid v3125 <|@
d <@d|@=== Debug Properties ===
displacement: 168
scale: Times1
stamp: void*
=== Inputs ===
base: j1623 
index: - 
=== Succesors ===
=== Usages ===
j1627 j1585 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1623 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j1919 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 24
stableDimension: 0
stamp: i64 [24] ⇊0000000000000018 ⇈0000000000000018
stampKind: i64
value: long[24|0x18]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1920 j1935 j1926 j1930 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v340 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 7]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2924) [bci: 69]
stamp: void
trueSuccessorProbability: 0.9354897721124376
=== Inputs ===
condition: v337 
=== Succesors ===
trueSuccessor: v338 
falseSuccessor: v339 
=== Usages ===
=== Predecessor ===
i3052 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v337 #trueSuccessor: v338 #falseSuccessor: v339  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B77" "B78" 
    xhandlers
    flags 
    probability 4598727057661294609
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v338 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:127) [bci: 26]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2924) [bci: 69]
stamp: void
=== Inputs ===
=== Succesors ===
next: v815 
=== Usages ===
=== Predecessor ===
v340 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v815  <|@  <|@
f <@~|@floating>@ <|@
tid i810 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 90]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2924) [bci: 69]
stamp: i32 [-2147483647 - 2147483647]
=== Inputs ===
x: i3052 
y: i3043 
=== Succesors ===
=== Usages ===
v811 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i3052 y: i3043  <|@  <|@
f <@~|@floating>@ <|@
tid v811 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 91]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2924) [bci: 69]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i810 
y: i532 
=== Succesors ===
=== Usages ===
v815 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i810 y: i532  <|@  <|@
f <@*|@fixed>@ <|@
tid v815 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2924) [bci: 69]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v811 
=== Succesors ===
trueSuccessor: v814 
falseSuccessor: v812 
=== Usages ===
=== Predecessor ===
v338 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v811 #trueSuccessor: v814 #falseSuccessor: v812  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v814 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2924) [bci: 69]
stamp: void
=== Inputs ===
=== Succesors ===
next: v816 
=== Usages ===
=== Predecessor ===
v815 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v816  <|@  <|@
f <@*|@fixed>@ <|@
tid v816 <|@
d <@d|@=== Debug Properties ===
action: None
debugId: 0
nodeSourcePosition: at org.graalvm.compiler.nodes.DeoptimizeNode.deopt(DeoptimizationAction, DeoptimizationReason) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:263) [bci: 119]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2924) [bci: 69]
reason: RuntimeConstraint
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?527 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v814 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?527  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" "B80" 
    xhandlers
    flags 
    probability 4598727057661294609
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v812 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:265) [bci: 122]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2924) [bci: 69]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1540 
=== Usages ===
=== Predecessor ===
v815 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j1540  <|@  <|@
f <@~|@floating>@ <|@
tid a755 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2921) [bci: 34]
op: Uncompress
stamp: a# [C
=== Inputs ===
value: a3042 
=== Succesors ===
=== Usages ===
j1540 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a3042  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1540 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2924) [bci: 69]
stamp: i64
=== Inputs ===
object: a755 
=== Succesors ===
next: j1544 
=== Usages ===
v3117 
=== Predecessor ===
v812 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a755 #next: j1544  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1544 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2924) [bci: 69]
stamp: i64
=== Inputs ===
object: a637 
=== Succesors ===
next: v1550 
=== Usages ===
v3118 
=== Predecessor ===
j1540 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a637 #next: v1550  <|@  <|@
f <@~|@floating>@ <|@
tid v3117 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j1540 
index: - 
=== Succesors ===
=== Usages ===
v1550 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1540 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j1545 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2924) [bci: 69]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i532 
=== Succesors ===
=== Usages ===
v3118 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i532  <|@  <|@
f <@~|@floating>@ <|@
tid v3118 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: j1544 
index: j1545 
=== Succesors ===
=== Usages ===
v1550 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1544 index: j1545  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1550 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: charArraycopy(Word,Word,Word)void
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2924) [bci: 69]
stamp: void
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: v3117 v3118 j1549 
=== Succesors ===
next: j1552 
=== Usages ===
=== Predecessor ===
j1544 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: v3117 v3118 j1549 #next: j1552  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1552 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j1567 
=== Usages ===
v3119 v3120 
=== Predecessor ===
v1550 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j1567  <|@  <|@
f <@~|@floating>@ <|@
tid v3119 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j1552 
index: - 
=== Succesors ===
=== Usages ===
j1567 v1569 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1552 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1567 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v3119 
=== Succesors ===
next: j1568 
=== Usages ===
j1920 j1573 v3171 
=== Predecessor ===
j1552 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3119 #next: j1568  <|@  <|@
f <@~|@floating>@ <|@
tid v3120 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j1552 
index: - 
=== Succesors ===
=== Usages ===
j1568 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1552 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1568 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v3120 
=== Succesors ===
next: v1560 
=== Usages ===
v1557 
=== Predecessor ===
j1567 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3120 #next: v1560  <|@  <|@
f <@~|@floating>@ <|@
tid j1920 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1567 
y: j1919 
=== Succesors ===
=== Usages ===
v1557 v1569 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1567 y: j1919  <|@  <|@
f <@~|@floating>@ <|@
tid v1557 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1568 
y: j1920 
=== Succesors ===
=== Usages ===
v1560 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j1568 y: j1920  <|@  <|@
f <@*|@fixed>@ <|@
tid v1560 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v1557 
=== Succesors ===
trueSuccessor: v1558 
falseSuccessor: v1559 
=== Usages ===
=== Predecessor ===
j1568 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1557 #trueSuccessor: v1558 #falseSuccessor: v1559  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B81" 
    xhandlers
    flags 
    probability 4568617382837849976
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1558 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a1563 
=== Usages ===
=== Predecessor ===
v1560 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1563  <|@  <|@
tid ?365 <|@
d <@d|@=== Debug Properties ===
bci: 35
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.append(String)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: AbstractStringBuilder.java
sourceLine: 449
stackSize: 0
=== Inputs ===
outerFrameState: ?333 
values: a89 - i3043 
=== Succesors ===
=== Usages ===
?626 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?333 values: a89 - i3043  <|@  <|@
tid ?626 <|@
d <@d|@=== Debug Properties ===
bci: 61
code: ResolvedJavaMethodBytecode<String.getChars(int, int, char[], int)>
duringCall: false
localsSize: 5
locksSize: 0
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2924) [bci: 69]
rethrowException: false
sourceFile: String.java
sourceLine: 827
stackSize: 0
=== Inputs ===
outerFrameState: ?365 
values: - - - - - 
virtualObjectMappings: ?638 
=== Succesors ===
=== Usages ===
a1563 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?365 values: - - - - - virtualObjectMappings: ?638  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1563 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?626 
arguments: v1391 i271 i47 
=== Succesors ===
next: j1564 
=== Usages ===
j1564 
=== Predecessor ===
v1558 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?626 arguments: v1391 i271 i47 #next: j1564  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1564 <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1563 
=== Succesors ===
next: v1574 
=== Usages ===
j1573 
=== Predecessor ===
a1563 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a1563 #next: v1574  <|@  <|@
f <@*|@fixed>@ <|@
tid v1574 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1571 
=== Predecessor ===
j1564 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B81" 
    xhandlers
    flags 
    probability 4598676503283860722
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1559 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1569 
=== Usages ===
=== Predecessor ===
v1560 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1569  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1569 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3119 
value: j1920 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1566 
=== Usages ===
=== Predecessor ===
v1559 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3119 value: j1920 stateAfter: - lastLocationAccess: - #next: v1566  <|@  <|@
f <@~|@floating>@ <|@
tid v3171 <|@
d <@d|@=== Debug Properties ===
displacement: 216
scale: Times1
stamp: void*
=== Inputs ===
base: j1567 
index: - 
=== Succesors ===
=== Usages ===
v1566 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1567 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1566 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v3171 
=== Succesors ===
next: v1572 
=== Usages ===
=== Predecessor ===
v1569 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v3171 #next: v1572  <|@  <|@
f <@*|@fixed>@ <|@
tid v1572 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1571 
=== Predecessor ===
v1566 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" "B79" 
    successors "B82" "B83" 
    xhandlers
    flags 
    probability 4598727057661294609
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1573 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1571 
values: j1567 j1564 
=== Succesors ===
=== Usages ===
v3122 v3121 a1065 v3172 v3173 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1571 values: j1567 j1564  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1571 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1572 v1574 
=== Succesors ===
next: a1065 
=== Usages ===
j1573 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1572 v1574 #next: a1065  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1065 <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j1573 
=== Succesors ===
next: j1585 
=== Usages ===
a1071 
=== Predecessor ===
v1571 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j1573 #next: j1585  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1585 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v3125 
=== Succesors ===
next: v1586 
=== Usages ===
v1586 
=== Predecessor ===
a1065 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3125 #next: v1586  <|@  <|@
f <@~|@floating>@ <|@
tid v3121 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1573 
index: - 
=== Succesors ===
=== Usages ===
v1586 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1573 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1586 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3121 
value: j1585 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1589 
=== Usages ===
=== Predecessor ===
j1585 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3121 value: j1585 stateAfter: - lastLocationAccess: - #next: v1589  <|@  <|@
f <@~|@floating>@ <|@
tid v3122 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j1573 
index: - 
=== Succesors ===
=== Usages ===
v1589 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1573 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1589 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3122 
value: v1923 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1593 
=== Usages ===
=== Predecessor ===
v1586 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3122 value: v1923 stateAfter: - lastLocationAccess: - #next: v1593  <|@  <|@
f <@~|@floating>@ <|@
tid v3172 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j1573 
index: - 
=== Succesors ===
=== Usages ===
v1593 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1573 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1593 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3172 
value: i319 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1595 
=== Usages ===
=== Predecessor ===
v1589 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3172 value: i319 stateAfter: - lastLocationAccess: - #next: v1595  <|@  <|@
f <@~|@floating>@ <|@
tid v3173 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j1573 
index: - 
=== Succesors ===
=== Usages ===
v1595 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1573 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1595 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3173 
value: a1068 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a1071 
=== Usages ===
=== Predecessor ===
v1593 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3173 value: a1068 stateAfter: - lastLocationAccess: - #next: a1071  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1071 <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a1065 
=== Succesors ===
next: v1072 
=== Usages ===
a727 a715 
=== Predecessor ===
v1595 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a1065 #next: v1072  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1072 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v732 
=== Usages ===
=== Predecessor ===
a1071 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v732  <|@  <|@
f <@*|@fixed>@ <|@
tid v732 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2925) [bci: 74]
stamp: void
trueSuccessorProbability: 0.18579515065073993
=== Inputs ===
condition: v84 
=== Succesors ===
trueSuccessor: v731 
falseSuccessor: v730 
=== Usages ===
=== Predecessor ===
v1072 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v84 #trueSuccessor: v731 #falseSuccessor: v730  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors "B144" 
    xhandlers
    flags 
    probability 4587675027572901137
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v731 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2926) [bci: 77]
stamp: void
=== Inputs ===
=== Succesors ===
next: v706 
=== Usages ===
=== Predecessor ===
v732 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v706  <|@  <|@
f <@*|@fixed>@ <|@
tid v706 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v704 
=== Predecessor ===
v731 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors "B206" 
    xhandlers
    flags 
    probability 4597400344143036126
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v730 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2927) [bci: 100]
stamp: void
=== Inputs ===
=== Succesors ===
next: v734 
=== Usages ===
=== Predecessor ===
v732 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v734  <|@  <|@
f <@*|@fixed>@ <|@
tid v734 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v518 
=== Predecessor ===
v730 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B85" "B86" 
    xhandlers
    flags 
    probability 4581235090039285951
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v339 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 10]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2924) [bci: 69]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1596 
=== Usages ===
=== Predecessor ===
v340 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j1596  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1596 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j1611 
=== Usages ===
v3123 v3124 
=== Predecessor ===
v339 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j1611  <|@  <|@
f <@~|@floating>@ <|@
tid v3123 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j1596 
index: - 
=== Succesors ===
=== Usages ===
j1611 v1613 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1596 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1611 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v3123 
=== Succesors ===
next: j1612 
=== Usages ===
j1926 j1617 v3174 
=== Predecessor ===
j1596 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3123 #next: j1612  <|@  <|@
f <@~|@floating>@ <|@
tid v3124 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j1596 
index: - 
=== Succesors ===
=== Usages ===
j1612 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1596 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1612 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v3124 
=== Succesors ===
next: v1604 
=== Usages ===
v1601 
=== Predecessor ===
j1611 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3124 #next: v1604  <|@  <|@
f <@~|@floating>@ <|@
tid j1926 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1611 
y: j1919 
=== Succesors ===
=== Usages ===
v1601 v1613 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1611 y: j1919  <|@  <|@
f <@~|@floating>@ <|@
tid v1601 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1612 
y: j1926 
=== Succesors ===
=== Usages ===
v1604 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j1612 y: j1926  <|@  <|@
f <@*|@fixed>@ <|@
tid v1604 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v1601 
=== Succesors ===
trueSuccessor: v1602 
falseSuccessor: v1603 
=== Usages ===
=== Predecessor ===
j1612 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1601 #trueSuccessor: v1602 #falseSuccessor: v1603  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B87" 
    xhandlers
    flags 
    probability 4551271695864333850
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1602 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a1607 
=== Usages ===
=== Predecessor ===
v1604 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1607  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1607 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?527 
arguments: v1391 i271 i47 
=== Succesors ===
next: j1608 
=== Usages ===
j1608 
=== Predecessor ===
v1602 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?527 arguments: v1391 i271 i47 #next: j1608  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1608 <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1607 
=== Succesors ===
next: v1618 
=== Usages ===
j1617 
=== Predecessor ===
a1607 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a1607 #next: v1618  <|@  <|@
f <@*|@fixed>@ <|@
tid v1618 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1615 
=== Predecessor ===
j1608 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B87" 
    xhandlers
    flags 
    probability 4581179311352977331
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1603 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1613 
=== Usages ===
=== Predecessor ===
v1604 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1613  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1613 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3123 
value: j1926 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1610 
=== Usages ===
=== Predecessor ===
v1603 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3123 value: j1926 stateAfter: - lastLocationAccess: - #next: v1610  <|@  <|@
f <@~|@floating>@ <|@
tid v3174 <|@
d <@d|@=== Debug Properties ===
displacement: 216
scale: Times1
stamp: void*
=== Inputs ===
base: j1611 
index: - 
=== Succesors ===
=== Usages ===
v1610 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1611 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1610 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v3174 
=== Succesors ===
next: v1616 
=== Usages ===
=== Predecessor ===
v1613 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v3174 #next: v1616  <|@  <|@
f <@*|@fixed>@ <|@
tid v1616 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1615 
=== Predecessor ===
v1610 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B86" "B85" 
    successors "B88" "B89" 
    xhandlers
    flags 
    probability 4581235090039285951
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1617 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1615 
values: j1611 j1608 
=== Succesors ===
=== Usages ===
v3127 v3126 a1075 v3175 v3176 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1615 values: j1611 j1608  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1615 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1616 v1618 
=== Succesors ===
next: a1075 
=== Usages ===
j1617 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1616 v1618 #next: a1075  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1075 <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j1617 
=== Succesors ===
next: j1627 
=== Usages ===
a1080 
=== Predecessor ===
v1615 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j1617 #next: j1627  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1627 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v3125 
=== Succesors ===
next: v1628 
=== Usages ===
v1628 
=== Predecessor ===
a1075 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3125 #next: v1628  <|@  <|@
f <@~|@floating>@ <|@
tid v3126 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1617 
index: - 
=== Succesors ===
=== Usages ===
v1628 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1617 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1628 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3126 
value: j1627 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1631 
=== Usages ===
=== Predecessor ===
j1627 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3126 value: j1627 stateAfter: - lastLocationAccess: - #next: v1631  <|@  <|@
f <@~|@floating>@ <|@
tid v3127 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j1617 
index: - 
=== Succesors ===
=== Usages ===
v1631 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1617 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1631 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3127 
value: v1923 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1635 
=== Usages ===
=== Predecessor ===
v1628 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3127 value: v1923 stateAfter: - lastLocationAccess: - #next: v1635  <|@  <|@
f <@~|@floating>@ <|@
tid v3175 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j1617 
index: - 
=== Succesors ===
=== Usages ===
v1635 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1617 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1635 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3175 
value: i532 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1637 
=== Usages ===
=== Predecessor ===
v1631 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3175 value: i532 stateAfter: - lastLocationAccess: - #next: v1637  <|@  <|@
f <@~|@floating>@ <|@
tid v3176 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j1617 
index: - 
=== Succesors ===
=== Usages ===
v1637 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1617 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1637 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3176 
value: a1068 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a1080 
=== Usages ===
=== Predecessor ===
v1635 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3176 value: a1068 stateAfter: - lastLocationAccess: - #next: a1080  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1080 <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a1075 
=== Succesors ===
next: v1081 
=== Usages ===
v827 ?696 v3083 v3084 a715 a727 j1691 
=== Predecessor ===
v1637 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a1075 #next: v1081  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1081 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: i343 
=== Usages ===
=== Predecessor ===
a1080 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: i343  <|@  <|@
tid v827 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2924) [bci: 69]
returnStamp: i32
signature: [Ljdk.vm.ci.meta.JavaType;@57a55a57
stamp: void
targetMethod: HotSpotMethod<AbstractStringBuilder.newCapacity(int)>
=== Inputs ===
arguments: a1080 i319 
=== Succesors ===
=== Usages ===
i343 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1080 i319  <|@  <|@
tid ?351 <|@
d <@d|@=== Debug Properties ===
bci: 21
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.append(String)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: AbstractStringBuilder.java
sourceLine: 448
stackSize: 0
=== Inputs ===
outerFrameState: ?333 
values: a89 a2 i3043 
=== Succesors ===
=== Usages ===
?344 ?348 ?1105 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?333 values: a89 a2 i3043  <|@  <|@
tid ?696 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a89 
materializedValue: a1080 
=== Succesors ===
=== Usages ===
?344 ?348 ?1105 
=== Predecessor ===
- >@ <|@
instruction <@MaterializedObjectState|@org.graalvm.compiler.virtual.nodes.MaterializedObjectState>@ object: a89 materializedValue: a1080  <|@  <|@
tid ?1105 <|@
d <@d|@=== Debug Properties ===
bci: 17
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.ensureCapacityInternal(int)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: AbstractStringBuilder.java
sourceLine: 125
stackSize: 2
=== Inputs ===
outerFrameState: ?351 
values: - - a89 a637 
virtualObjectMappings: ?696 
=== Succesors ===
=== Usages ===
i343 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?351 values: - - a89 a637 virtualObjectMappings: ?696  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i343 <|@
d <@d|@=== Debug Properties ===
bci: 17
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2924) [bci: 69]
polymorphic: false
stamp: i32
targetMethod: Direct#AbstractStringBuilder.newCapacity
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v827 
stateDuring: ?1105 
=== Succesors ===
next: a3053 
=== Usages ===
?344 v1679 i869 j1962 a1660 i1266 i1638 v1645 v1242 v1228 
=== Predecessor ===
v1081 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v827 stateDuring: ?1105 #next: a3053  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a3053 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: String.value
nodeSourcePosition: at java.lang.String.getChars(String.java:820) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2924) [bci: 69]
nullCheck: false
stamp: n# [C
=== Inputs ===
stateBefore: - 
guard: - 
address: v3077 
=== Succesors ===
next: i3054 
=== Usages ===
a836 v3085 
=== Predecessor ===
i343 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3077 #next: i3054  <|@  <|@
tid ?344 <|@
d <@d|@=== Debug Properties ===
bci: 20
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.ensureCapacityInternal(int)>
duringCall: false
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2924) [bci: 69]
rethrowException: false
sourceFile: AbstractStringBuilder.java
sourceLine: 124
stackSize: 3
=== Inputs ===
outerFrameState: ?351 
values: - - a89 a637 i343 
virtualObjectMappings: ?696 
=== Succesors ===
=== Usages ===
v1383 a1660 i3054 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?351 values: - - a89 a637 i343 virtualObjectMappings: ?696  <|@  <|@
f <@~|@floating>@ <|@
tid v3085 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a3053 
=== Succesors ===
=== Usages ===
i3054 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a3053  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i3054 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.compiler.nodes.java.ArrayLengthNode.arrayLength(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 60]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2924) [bci: 69]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?344 
guard: - 
address: v3085 
=== Succesors ===
next: v1004 
=== Usages ===
v930 
=== Predecessor ===
a3053 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?344 guard: - address: v3085 #next: v1004  <|@  <|@
f <@~|@floating>@ <|@
tid v930 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2924) [bci: 69]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3054 
y: i3043 
=== Succesors ===
=== Usages ===
v1004 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i3054 y: i3043  <|@  <|@
f <@*|@fixed>@ <|@
tid v1004 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.getChars(String.java:820) [bci: 19]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2924) [bci: 69]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v930 
=== Succesors ===
trueSuccessor: v1003 
falseSuccessor: v1001 
=== Usages ===
=== Predecessor ===
i3054 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v930 #trueSuccessor: v1003 #falseSuccessor: v1001  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B91" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1003 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.getChars(String.java:820) [bci: 19]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2924) [bci: 69]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1384 
=== Usages ===
=== Predecessor ===
v1004 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1384  <|@  <|@
f <@~|@floating>@ <|@
tid i1385 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -215571
stableDimension: 0
stamp: i32 [-215571] ⇊00000000fffcb5ed ⇈00000000fffcb5ed
stampKind: i32
value: int[-215571|0xfffffffffffcb5ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1381 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1384 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1378 
=== Predecessor ===
v1003 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B90" "B92" 
    xhandlers
    flags 
    probability 4581235090039285951
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1001 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.getChars(String.java:820) [bci: 19]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2924) [bci: 69]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1234 
=== Usages ===
=== Predecessor ===
v1004 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1234  <|@  <|@
f <@~|@floating>@ <|@
tid v1228 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:185) [bci: 22]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:100) [bci: 3]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2924) [bci: 69]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i343 
y: i26 
=== Succesors ===
=== Usages ===
v1234 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i343 y: i26  <|@  <|@
f <@*|@fixed>@ <|@
tid v1234 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:185) [bci: 33]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:100) [bci: 3]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2924) [bci: 69]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v1228 
=== Succesors ===
trueSuccessor: v1233 
falseSuccessor: v1229 
=== Usages ===
=== Predecessor ===
v1001 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1228 #trueSuccessor: v1233 #falseSuccessor: v1229  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B89" 
    successors "B91" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1233 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:187) [bci: 55]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:100) [bci: 3]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2924) [bci: 69]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1386 
=== Usages ===
=== Predecessor ===
v1234 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1386  <|@  <|@
f <@~|@floating>@ <|@
tid i1387 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -317537
stableDimension: 0
stamp: i32 [-317537] ⇊00000000fffb279f ⇈00000000fffb279f
stampKind: i32
value: int[-317537|0xfffffffffffb279f]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1381 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1386 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1378 
=== Predecessor ===
v1233 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B88" "B90" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1381 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-317537 - -214539] ⇊00000000fff82185 ⇈00000000ffffbfff
valueDescription: i32
=== Inputs ===
merge: v1378 
values: i1385 i1387 
=== Succesors ===
=== Usages ===
v1383 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1378 values: i1385 i1387  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1378 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1384 v1386 
=== Succesors ===
next: v1383 
=== Usages ===
i1381 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1384 v1386 #next: v1383  <|@  <|@
f <@*|@fixed>@ <|@
tid v1383 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?344 
actionAndReason: i1381 
speculation: a1332 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1378 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?344 actionAndReason: i1381 speculation: a1332  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B89" 
    successors "B93" "B96" 
    xhandlers
    flags 
    probability 4581235090039285951
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1229 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:185) [bci: 36]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:100) [bci: 3]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2924) [bci: 69]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1640 
=== Usages ===
=== Predecessor ===
v1234 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j1640  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1640 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:772) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:319) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2924) [bci: 69]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j1676 
=== Usages ===
v3128 v3129 
=== Predecessor ===
v1229 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j1676  <|@  <|@
f <@~|@floating>@ <|@
tid v3128 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j1640 
index: - 
=== Succesors ===
=== Usages ===
j1676 v1678 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1640 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1676 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:245) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:320) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2924) [bci: 69]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v3128 
=== Succesors ===
next: j1677 
=== Usages ===
j1644 v3130 v3131 a1659 v3136 v3132 v3133 v3134 v3135 
=== Predecessor ===
j1640 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3128 #next: j1677  <|@  <|@
f <@~|@floating>@ <|@
tid v3129 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j1640 
index: - 
=== Succesors ===
=== Usages ===
j1677 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1640 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1677 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:249) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:321) [bci: 25]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2924) [bci: 69]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v3129 
=== Succesors ===
next: v1648 
=== Usages ===
v1649 
=== Predecessor ===
j1676 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3129 #next: v1648  <|@  <|@
f <@~|@floating>@ <|@
tid v1645 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.core.common.calc.UnsignedMath.belowThan(int, int) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 50]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2924) [bci: 69]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i343 
y: i1489 
=== Succesors ===
=== Usages ===
v1648 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i343 y: i1489  <|@  <|@
f <@*|@fixed>@ <|@
tid v1648 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 64]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2924) [bci: 69]
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v1645 
=== Succesors ===
trueSuccessor: v1647 
falseSuccessor: v1646 
=== Usages ===
=== Predecessor ===
j1677 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1645 #trueSuccessor: v1647 #falseSuccessor: v1646  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B94" "B95" 
    xhandlers
    flags 
    probability 4580677303176199750
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1647 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 67]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2924) [bci: 69]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1655 
=== Usages ===
=== Predecessor ===
v1648 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1655  <|@  <|@
f <@~|@floating>@ <|@
tid i1638 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 8]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2924) [bci: 69]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i343 
y: i47 
=== Succesors ===
=== Usages ===
i1667 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i343 y: i47  <|@  <|@
f <@~|@floating>@ <|@
tid i1667 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2924) [bci: 69]
stamp: i32 [-2147483647 - 2147483647] ⇊0000000000000001
=== Inputs ===
x: i1638 
y: i1512 
=== Succesors ===
=== Usages ===
i1639 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1638 y: i1512  <|@  <|@
f <@~|@floating>@ <|@
tid i1639 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:604) [bci: 30]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2924) [bci: 69]
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i1667 
y: i1482 
=== Succesors ===
=== Usages ===
j1643 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i1667 y: i1482  <|@  <|@
f <@~|@floating>@ <|@
tid j1643 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2924) [bci: 69]
resultBits: 64
stamp: i64 [-2147483648 - 2147483640] ⇈fffffffffffffff8
=== Inputs ===
value: i1639 
=== Succesors ===
=== Usages ===
j1644 v3132 v3133 v3134 v3135 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i1639  <|@  <|@
f <@~|@floating>@ <|@
tid j1644 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2924) [bci: 69]
stamp: i64
=== Inputs ===
x: j1643 
y: j1676 
=== Succesors ===
=== Usages ===
v1649 v1678 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1643 y: j1676  <|@  <|@
f <@~|@floating>@ <|@
tid v1649 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 83]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2924) [bci: 69]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1677 
y: j1644 
=== Succesors ===
=== Usages ===
v1655 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j1677 y: j1644  <|@  <|@
f <@*|@fixed>@ <|@
tid v1655 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 89]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2924) [bci: 69]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v1649 
=== Succesors ===
trueSuccessor: v1654 
falseSuccessor: v1653 
=== Usages ===
=== Predecessor ===
v1647 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1649 #trueSuccessor: v1654 #falseSuccessor: v1653  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B97" 
    xhandlers
    flags 
    probability 4550557728679583512
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1654 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2924) [bci: 69]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1652 
=== Usages ===
=== Predecessor ===
v1655 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1652  <|@  <|@
f <@*|@fixed>@ <|@
tid v1652 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2924) [bci: 69]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1651 
=== Predecessor ===
v1654 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B98" 
    xhandlers
    flags 
    probability 4580627102358521992
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1653 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 92]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2924) [bci: 69]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1678 
=== Usages ===
=== Predecessor ===
v1655 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1678  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1678 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:257) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 96]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2924) [bci: 69]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3128 
value: j1644 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1669 
=== Usages ===
=== Predecessor ===
v1653 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3128 value: j1644 stateAfter: - lastLocationAccess: - #next: v1669  <|@  <|@
f <@~|@floating>@ <|@
tid v3132 <|@
d <@d|@=== Debug Properties ===
displacement: 192
scale: Times1
stamp: void*
=== Inputs ===
base: j1643 
index: j1676 
=== Succesors ===
=== Usages ===
v1669 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1643 index: j1676  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1669 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2924) [bci: 69]
stamp: void
=== Inputs ===
address: v3132 
=== Succesors ===
next: v1671 
=== Usages ===
=== Predecessor ===
v1678 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v3132 #next: v1671  <|@  <|@
f <@~|@floating>@ <|@
tid v3133 <|@
d <@d|@=== Debug Properties ===
displacement: 256
scale: Times1
stamp: void*
=== Inputs ===
base: j1643 
index: j1676 
=== Succesors ===
=== Usages ===
v1671 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1643 index: j1676  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1671 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2924) [bci: 69]
stamp: void
=== Inputs ===
address: v3133 
=== Succesors ===
next: v1673 
=== Usages ===
=== Predecessor ===
v1669 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v3133 #next: v1673  <|@  <|@
f <@~|@floating>@ <|@
tid v3134 <|@
d <@d|@=== Debug Properties ===
displacement: 320
scale: Times1
stamp: void*
=== Inputs ===
base: j1643 
index: j1676 
=== Succesors ===
=== Usages ===
v1673 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1643 index: j1676  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1673 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2924) [bci: 69]
stamp: void
=== Inputs ===
address: v3134 
=== Succesors ===
next: v1675 
=== Usages ===
=== Predecessor ===
v1671 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v3134 #next: v1675  <|@  <|@
f <@~|@floating>@ <|@
tid v3135 <|@
d <@d|@=== Debug Properties ===
displacement: 384
scale: Times1
stamp: void*
=== Inputs ===
base: j1643 
index: j1676 
=== Succesors ===
=== Usages ===
v1675 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1643 index: j1676  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1675 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2924) [bci: 69]
stamp: void
=== Inputs ===
address: v3135 
=== Succesors ===
next: v1679 
=== Usages ===
=== Predecessor ===
v1673 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v3135 #next: v1679  <|@  <|@
f <@~|@floating>@ <|@
tid v3130 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j1676 
index: - 
=== Succesors ===
=== Usages ===
v1679 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1676 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1679 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:549) [bci: 12]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2924) [bci: 69]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3130 
value: i343 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1680 
=== Usages ===
=== Predecessor ===
v1675 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3130 value: i343 stateAfter: - lastLocationAccess: - #next: v1680  <|@  <|@
f <@~|@floating>@ <|@
tid v3131 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1676 
index: - 
=== Succesors ===
=== Usages ===
v1680 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1676 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1680 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:469) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2924) [bci: 69]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3131 
value: j1425 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1683 
=== Usages ===
=== Predecessor ===
v1679 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3131 value: j1425 stateAfter: - lastLocationAccess: - #next: v1683  <|@  <|@
f <@~|@floating>@ <|@
tid v3136 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j1676 
index: - 
=== Succesors ===
=== Usages ===
v1683 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1676 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1683 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2924) [bci: 69]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3136 
value: v1913 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1658 
=== Usages ===
=== Predecessor ===
v1680 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3136 value: v1913 stateAfter: - lastLocationAccess: - #next: v1658  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1658 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.MembarNode.memoryBarrier(int, LocationIdentity) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:560) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2924) [bci: 69]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1659 
=== Usages ===
=== Predecessor ===
v1683 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a1659  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1659 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:561) [bci: 71]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2924) [bci: 69]
stamp: a! -
trackedPointer: true
=== Inputs ===
input: j1676 
=== Succesors ===
next: v1661 
=== Usages ===
a1664 
=== Predecessor ===
v1658 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j1676 #next: v1661  <|@  <|@
f <@*|@fixed>@ <|@
tid v1661 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2924) [bci: 69]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1662 
=== Predecessor ===
a1659 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B97" 
    xhandlers
    flags 
    probability 4566567412708321174
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1646 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2924) [bci: 69]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1650 
=== Usages ===
=== Predecessor ===
v1648 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1650  <|@  <|@
f <@*|@fixed>@ <|@
tid v1650 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2924) [bci: 69]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1651 
=== Predecessor ===
v1646 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B96" "B94" 
    successors "B98" 
    xhandlers
    flags 
    probability 4567010323972424124
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1651 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2924) [bci: 69]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1650 v1652 
=== Succesors ===
next: a1660 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1650 v1652 #next: a1660  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1660 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.newArray(ForeignCallDescriptor, KlassPointer, int, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 155]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2924) [bci: 69]
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?344 
arguments: v1424 i343 i26 
=== Succesors ===
next: v1663 
=== Usages ===
a1664 
=== Predecessor ===
v1651 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?344 arguments: v1424 i343 i26 #next: v1663  <|@  <|@
f <@*|@fixed>@ <|@
tid v1663 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2924) [bci: 69]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1662 
=== Predecessor ===
a1660 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B95" "B97" 
    successors "B99" "B100" 
    xhandlers
    flags 
    probability 4581235090039285952
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a1664 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2924) [bci: 69]
stamp: a! -
valueDescription: a -
=== Inputs ===
merge: v1662 
values: a1659 a1660 
=== Succesors ===
=== Usages ===
v3186 a1285 v3099 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1662 values: a1659 a1660  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1662 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2924) [bci: 69]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1661 v1663 
=== Succesors ===
next: v2837 
=== Usages ===
a1664 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1661 v1663 #next: v2837  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2837 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v2354 
=== Usages ===
j2838 j2840 
=== Predecessor ===
v1662 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v2354  <|@  <|@
f <@~|@floating>@ <|@
tid v1242 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Math.min(Math.java:1336) [bci: 2]
at com.oracle.graal.enterprise.T.c.b(stripped:192) [bci: 4]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:102) [bci: 9]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2924) [bci: 69]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3052 
y: i343 
=== Succesors ===
=== Usages ===
i1266 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i3052 y: i343  <|@  <|@
f <@~|@floating>@ <|@
tid i1266 <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
condition: v1242 
trueValue: i3052 
falseValue: i343 
=== Succesors ===
=== Usages ===
j1963 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v1242 trueValue: i3052 falseValue: i343  <|@  <|@
f <@~|@floating>@ <|@
tid j1963 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i1266 
=== Succesors ===
=== Usages ===
j2895 v3186 j1967 v2351 v2488 j2881 j2886 j2889 j2892 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i1266  <|@  <|@
f <@~|@floating>@ <|@
tid v2351 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1963 
y: j1425 
=== Succesors ===
=== Usages ===
v2354 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1963 y: j1425  <|@  <|@
f <@*|@fixed>@ <|@
tid v2354 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v2351 
=== Succesors ===
trueSuccessor: v2352 
falseSuccessor: v2353 
=== Usages ===
=== Predecessor ===
v2837 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2351 #trueSuccessor: v2352 #falseSuccessor: v2353  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B98" 
    successors "B117" 
    xhandlers
    flags 
    probability 4576731490411915456
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2352 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2370 
=== Usages ===
=== Predecessor ===
v2354 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2370  <|@  <|@
f <@*|@fixed>@ <|@
tid v2370 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2371 
=== Predecessor ===
v2352 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B98" 
    successors "B101" "B102" 
    xhandlers
    flags 
    probability 4576731490411915456
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2353 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2357 
=== Usages ===
=== Predecessor ===
v2354 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2357  <|@  <|@
f <@~|@floating>@ <|@
tid v3099 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1664 
index: - 
=== Succesors ===
=== Usages ===
j2840 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1664 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j2840 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v2837 
address: v3099 
=== Succesors ===
=== Usages ===
v3232 v3234 v3236 v3238 v3240 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v2837 address: v3099  <|@  <|@
f <@~|@floating>@ <|@
tid v3095 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a637 
index: - 
=== Succesors ===
=== Usages ===
j2838 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a637 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j2838 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v2837 
address: v3095 
=== Succesors ===
=== Usages ===
v3233 v3235 v3237 v3239 v3241 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v2837 address: v3095  <|@  <|@
f <@~|@floating>@ <|@
tid j2881 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483664 - 2147483631]
=== Inputs ===
x: j1963 
y: j2537 
=== Succesors ===
=== Usages ===
v2882 v2884 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1963 y: j2537  <|@  <|@
f <@~|@floating>@ <|@
tid v2882 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2881 
y: j1034 
=== Succesors ===
=== Usages ===
v2357 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2881 y: j1034  <|@  <|@
f <@*|@fixed>@ <|@
tid v2357 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v2882 
=== Succesors ===
trueSuccessor: v2355 
falseSuccessor: v2356 
=== Usages ===
=== Predecessor ===
v2353 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2882 #trueSuccessor: v2355 #falseSuccessor: v2356  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B105" 
    xhandlers
    flags 
    probability 4575016825099975968
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2355 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2366 
=== Usages ===
=== Predecessor ===
v2357 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2366  <|@  <|@
f <@*|@fixed>@ <|@
tid v2366 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2367 
=== Predecessor ===
v2355 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B103" 
    xhandlers
    flags 
    probability 4567724291157174464
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2356 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2358 
=== Usages ===
=== Predecessor ===
v2357 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2358  <|@  <|@
f <@*|@fixed>@ <|@
tid v2358 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2359 
=== Predecessor ===
v2356 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B102" "B266" 
    successors "B104" "B266" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4576731490411915456
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j2873 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2359 
values: j1034 j2880 
=== Succesors ===
=== Usages ===
v3241 j2880 v3240 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2359 values: j1034 j2880  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2359 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v2358 
=== Succesors ===
next: v3055 
=== Usages ===
v3055 v2362 v2363 j2873 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v2358 #next: v3055  <|@  <|@
f <@~|@floating>@ <|@
tid v3241 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j2838 
index: j2873 
=== Succesors ===
=== Usages ===
v3055 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2838 index: j2873  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3055 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16>
=== Inputs ===
stateBefore: - 
guard: v2359 
address: v3241 
=== Succesors ===
next: v3029 
=== Usages ===
v3029 
=== Predecessor ===
v2359 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v2359 address: v3241 #next: v3029  <|@  <|@
f <@~|@floating>@ <|@
tid v3240 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j2840 
index: j2873 
=== Succesors ===
=== Usages ===
v3029 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2840 index: j2873  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3029 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3240 
value: v3055 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2365 
=== Usages ===
=== Predecessor ===
v3055 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3240 value: v3055 stateAfter: - lastLocationAccess: - #next: v2365  <|@  <|@
f <@~|@floating>@ <|@
tid j2880 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j2873 
y: j739 
=== Succesors ===
=== Usages ===
j2865 j2873 v2884 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2873 y: j739  <|@  <|@
f <@~|@floating>@ <|@
tid v2884 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2881 
y: j2880 
=== Succesors ===
=== Usages ===
v2365 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2881 y: j2880  <|@  <|@
f <@*|@fixed>@ <|@
tid v2365 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v2884 
=== Succesors ===
trueSuccessor: v2362 
falseSuccessor: v2364 
=== Usages ===
=== Predecessor ===
v3029 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2884 #trueSuccessor: v2362 #falseSuccessor: v2364  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B105" 
    xhandlers
    flags 
    probability 4567724291157174464
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2362 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v2359 
=== Succesors ===
next: v2368 
=== Usages ===
=== Predecessor ===
v2365 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v2359 #next: v2368  <|@  <|@
f <@*|@fixed>@ <|@
tid v2368 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2367 
=== Predecessor ===
v2362 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B101" "B104" 
    successors "B106" "B107" 
    xhandlers
    flags 
    probability 4576731490411915456
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j2865 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2367 
values: j1034 j2880 
=== Succesors ===
=== Usages ===
v3239 j2872 j2857 v2887 v3238 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2367 values: j1034 j2880  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2367 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2366 v2368 
=== Succesors ===
next: v2389 
=== Usages ===
j2865 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2366 v2368 #next: v2389  <|@  <|@
f <@~|@floating>@ <|@
tid j2886 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483656 - 2147483639]
=== Inputs ===
x: j1963 
y: j2543 
=== Succesors ===
=== Usages ===
v2887 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1963 y: j2543  <|@  <|@
f <@~|@floating>@ <|@
tid v2887 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2886 
y: j2865 
=== Succesors ===
=== Usages ===
v2389 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2886 y: j2865  <|@  <|@
f <@*|@fixed>@ <|@
tid v2389 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v2887 
=== Succesors ===
trueSuccessor: v2388 
falseSuccessor: v2387 
=== Usages ===
=== Predecessor ===
v2367 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2887 #trueSuccessor: v2388 #falseSuccessor: v2387  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B105" 
    successors "B108" 
    xhandlers
    flags 
    probability 4567724291157174464
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2388 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2392 
=== Usages ===
=== Predecessor ===
v2389 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2392  <|@  <|@
f <@*|@fixed>@ <|@
tid v2392 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2378 
=== Predecessor ===
v2388 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B105" 
    successors "B108" 
    xhandlers
    flags 
    probability 4575016825099975968
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2387 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3056 
=== Usages ===
v3056 
=== Predecessor ===
v2389 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3056  <|@  <|@
f <@~|@floating>@ <|@
tid v3239 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j2838 
index: j2865 
=== Succesors ===
=== Usages ===
v3056 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2838 index: j2865  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3056 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16,i16,i16,i16,i16,i16,i16>
=== Inputs ===
stateBefore: - 
guard: v2387 
address: v3239 
=== Succesors ===
next: v3027 
=== Usages ===
v3027 
=== Predecessor ===
v2387 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v2387 address: v3239 #next: v3027  <|@  <|@
f <@~|@floating>@ <|@
tid v3238 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j2840 
index: j2865 
=== Succesors ===
=== Usages ===
v3027 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2840 index: j2865  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3027 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3238 
value: v3056 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2377 
=== Usages ===
=== Predecessor ===
v3056 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3238 value: v3056 stateAfter: - lastLocationAccess: - #next: v2377  <|@  <|@
f <@~|@floating>@ <|@
tid j2872 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j2865 
y: j1432 
=== Succesors ===
=== Usages ===
j2857 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2865 y: j1432  <|@  <|@
f <@*|@fixed>@ <|@
tid v2377 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2378 
=== Predecessor ===
v3027 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B107" "B106" 
    successors "B109" "B110" 
    xhandlers
    flags 
    probability 4576731490411915456
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j2857 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2378 
values: j2872 j2865 
=== Succesors ===
=== Usages ===
v3237 j2864 j2849 v2890 v3236 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2378 values: j2872 j2865  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2378 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2377 v2392 
=== Succesors ===
next: v2395 
=== Usages ===
j2857 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2377 v2392 #next: v2395  <|@  <|@
f <@~|@floating>@ <|@
tid j2889 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483652 - 2147483643]
=== Inputs ===
x: j1963 
y: j2547 
=== Succesors ===
=== Usages ===
v2890 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1963 y: j2547  <|@  <|@
f <@~|@floating>@ <|@
tid v2890 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2889 
y: j2857 
=== Succesors ===
=== Usages ===
v2395 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2889 y: j2857  <|@  <|@
f <@*|@fixed>@ <|@
tid v2395 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v2890 
=== Succesors ===
trueSuccessor: v2394 
falseSuccessor: v2393 
=== Usages ===
=== Predecessor ===
v2378 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2890 #trueSuccessor: v2394 #falseSuccessor: v2393  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B111" 
    xhandlers
    flags 
    probability 4567724291157174464
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2394 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2398 
=== Usages ===
=== Predecessor ===
v2395 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2398  <|@  <|@
f <@*|@fixed>@ <|@
tid v2398 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2381 
=== Predecessor ===
v2394 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B111" 
    xhandlers
    flags 
    probability 4575016825099975968
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2393 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3057 
=== Usages ===
v3057 
=== Predecessor ===
v2395 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3057  <|@  <|@
f <@~|@floating>@ <|@
tid v3237 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j2838 
index: j2857 
=== Succesors ===
=== Usages ===
v3057 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2838 index: j2857  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3057 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16,i16,i16>
=== Inputs ===
stateBefore: - 
guard: v2393 
address: v3237 
=== Succesors ===
next: v3025 
=== Usages ===
v3025 
=== Predecessor ===
v2393 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v2393 address: v3237 #next: v3025  <|@  <|@
f <@~|@floating>@ <|@
tid v3236 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j2840 
index: j2857 
=== Succesors ===
=== Usages ===
v3025 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2840 index: j2857  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3025 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3236 
value: v3057 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2380 
=== Usages ===
=== Predecessor ===
v3057 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3236 value: v3057 stateAfter: - lastLocationAccess: - #next: v2380  <|@  <|@
f <@~|@floating>@ <|@
tid j2864 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j2857 
y: j2519 
=== Succesors ===
=== Usages ===
j2849 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2857 y: j2519  <|@  <|@
f <@*|@fixed>@ <|@
tid v2380 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2381 
=== Predecessor ===
v3025 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B110" "B109" 
    successors "B112" "B113" 
    xhandlers
    flags 
    probability 4576731490411915456
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j2849 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2381 
values: j2864 j2857 
=== Succesors ===
=== Usages ===
v3235 j2856 j2841 v2893 v3234 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2381 values: j2864 j2857  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2381 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2380 v2398 
=== Succesors ===
next: v2401 
=== Usages ===
j2849 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2380 v2398 #next: v2401  <|@  <|@
f <@~|@floating>@ <|@
tid j2892 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483650 - 2147483645]
=== Inputs ===
x: j1963 
y: j2551 
=== Succesors ===
=== Usages ===
v2893 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1963 y: j2551  <|@  <|@
f <@~|@floating>@ <|@
tid v2893 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2892 
y: j2849 
=== Succesors ===
=== Usages ===
v2401 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2892 y: j2849  <|@  <|@
f <@*|@fixed>@ <|@
tid v2401 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v2893 
=== Succesors ===
trueSuccessor: v2400 
falseSuccessor: v2399 
=== Usages ===
=== Predecessor ===
v2381 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2893 #trueSuccessor: v2400 #falseSuccessor: v2399  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B114" 
    xhandlers
    flags 
    probability 4567724291157174464
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2400 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2404 
=== Usages ===
=== Predecessor ===
v2401 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2404  <|@  <|@
f <@*|@fixed>@ <|@
tid v2404 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2384 
=== Predecessor ===
v2400 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B114" 
    xhandlers
    flags 
    probability 4575016825099975968
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2399 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3058 
=== Usages ===
v3058 
=== Predecessor ===
v2401 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3058  <|@  <|@
f <@~|@floating>@ <|@
tid v3235 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j2838 
index: j2849 
=== Succesors ===
=== Usages ===
v3058 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2838 index: j2849  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3058 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16>
=== Inputs ===
stateBefore: - 
guard: v2399 
address: v3235 
=== Succesors ===
next: v3023 
=== Usages ===
v3023 
=== Predecessor ===
v2399 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v2399 address: v3235 #next: v3023  <|@  <|@
f <@~|@floating>@ <|@
tid v3234 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j2840 
index: j2849 
=== Succesors ===
=== Usages ===
v3023 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2840 index: j2849  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3023 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3234 
value: v3058 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2383 
=== Usages ===
=== Predecessor ===
v3058 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3234 value: v3058 stateAfter: - lastLocationAccess: - #next: v2383  <|@  <|@
f <@~|@floating>@ <|@
tid j2856 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j2849 
y: j2497 
=== Succesors ===
=== Usages ===
j2841 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2849 y: j2497  <|@  <|@
f <@*|@fixed>@ <|@
tid v2383 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2384 
=== Predecessor ===
v3023 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B113" "B112" 
    successors "B115" "B116" 
    xhandlers
    flags 
    probability 4576731490411915456
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j2841 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2384 
values: j2856 j2849 
=== Succesors ===
=== Usages ===
v3233 v2896 v3232 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2384 values: j2856 j2849  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2384 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2383 v2404 
=== Succesors ===
next: v2407 
=== Usages ===
j2841 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2383 v2404 #next: v2407  <|@  <|@
f <@~|@floating>@ <|@
tid j2895 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483649 - 2147483646]
=== Inputs ===
x: j1963 
y: j2555 
=== Succesors ===
=== Usages ===
v2896 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1963 y: j2555  <|@  <|@
f <@~|@floating>@ <|@
tid v2896 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2895 
y: j2841 
=== Succesors ===
=== Usages ===
v2407 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2895 y: j2841  <|@  <|@
f <@*|@fixed>@ <|@
tid v2407 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v2896 
=== Succesors ===
trueSuccessor: v2406 
falseSuccessor: v2405 
=== Usages ===
=== Predecessor ===
v2384 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2896 #trueSuccessor: v2406 #falseSuccessor: v2405  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors "B117" 
    xhandlers
    flags 
    probability 4567724291157174464
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2406 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2410 
=== Usages ===
=== Predecessor ===
v2407 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2410  <|@  <|@
f <@*|@fixed>@ <|@
tid v2410 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2371 
=== Predecessor ===
v2406 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors "B117" 
    xhandlers
    flags 
    probability 4575016825099975968
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2405 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: i3059 
=== Usages ===
i3059 
=== Predecessor ===
v2407 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i3059  <|@  <|@
f <@~|@floating>@ <|@
tid v3233 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j2838 
index: j2841 
=== Succesors ===
=== Usages ===
i3059 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2838 index: j2841  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i3059 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: v2405 
address: v3233 
=== Succesors ===
next: v3021 
=== Usages ===
v3021 
=== Predecessor ===
v2405 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v2405 address: v3233 #next: v3021  <|@  <|@
f <@~|@floating>@ <|@
tid v3232 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j2840 
index: j2841 
=== Succesors ===
=== Usages ===
v3021 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2840 index: j2841  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3021 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3232 
value: i3059 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2386 
=== Usages ===
=== Predecessor ===
i3059 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3232 value: i3059 stateAfter: - lastLocationAccess: - #next: v2386  <|@  <|@
f <@*|@fixed>@ <|@
tid v2386 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2371 
=== Predecessor ===
v3021 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B99" "B116" "B115" 
    successors "B118" "B136" 
    xhandlers
    flags 
    probability 4581235090039285952
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2371 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2370 v2386 v2410 
=== Succesors ===
next: v2899 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2370 v2386 v2410 #next: v2899  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2899 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v2417 
=== Usages ===
j2901 
=== Predecessor ===
v2371 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v2417  <|@  <|@
f <@~|@floating>@ <|@
tid j1962 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i343 
=== Succesors ===
=== Usages ===
j1967 v2488 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i343  <|@  <|@
f <@~|@floating>@ <|@
tid v2488 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1963 
y: j1962 
=== Succesors ===
=== Usages ===
v2417 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1963 y: j1962  <|@  <|@
f <@*|@fixed>@ <|@
tid v2417 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v2488 
=== Succesors ===
trueSuccessor: v2416 
falseSuccessor: v2415 
=== Usages ===
=== Predecessor ===
v2899 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2488 #trueSuccessor: v2416 #falseSuccessor: v2415  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B117" 
    successors "B119" "B120" 
    xhandlers
    flags 
    probability 4576731490411915456
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2416 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2420 
=== Usages ===
=== Predecessor ===
v2417 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2420  <|@  <|@
f <@~|@floating>@ <|@
tid v3186 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a1664 
index: j1963 
=== Succesors ===
=== Usages ===
j2901 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1664 index: j1963  <|@  <|@
f <@~|@floating>@ <|@
tid j2901 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v2899 
address: v3186 
=== Succesors ===
=== Usages ===
v3242 v3243 v3244 v3245 v3246 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v2899 address: v3186  <|@  <|@
f <@~|@floating>@ <|@
tid j1967 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
stamp: i64 [-4294967295 - 4294967295]
=== Inputs ===
x: j1962 
y: j1963 
=== Succesors ===
=== Usages ===
j2946 j2932 j2937 j2940 j2943 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j1962 y: j1963  <|@  <|@
f <@~|@floating>@ <|@
tid j2932 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967311 - 4294967279]
=== Inputs ===
x: j1967 
y: j2537 
=== Succesors ===
=== Usages ===
v2933 v2935 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1967 y: j2537  <|@  <|@
f <@~|@floating>@ <|@
tid v2933 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2932 
y: j1034 
=== Succesors ===
=== Usages ===
v2420 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2932 y: j1034  <|@  <|@
f <@*|@fixed>@ <|@
tid v2420 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v2933 
=== Succesors ===
trueSuccessor: v2418 
falseSuccessor: v2419 
=== Usages ===
=== Predecessor ===
v2416 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2933 #trueSuccessor: v2418 #falseSuccessor: v2419  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B118" 
    successors "B123" 
    xhandlers
    flags 
    probability 4575016825099975968
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2418 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2429 
=== Usages ===
=== Predecessor ===
v2420 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2429  <|@  <|@
f <@*|@fixed>@ <|@
tid v2429 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2430 
=== Predecessor ===
v2418 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B118" 
    successors "B121" 
    xhandlers
    flags 
    probability 4567724291157174464
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2419 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2421 
=== Usages ===
=== Predecessor ===
v2420 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2421  <|@  <|@
f <@*|@fixed>@ <|@
tid v2421 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2422 
=== Predecessor ===
v2419 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B120" "B135" 
    successors "B122" "B135" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4576731490411915456
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j2926 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2422 
values: j1034 j2931 
=== Succesors ===
=== Usages ===
v3246 j2931 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2422 values: j1034 j2931  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2422 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v2421 
=== Succesors ===
next: v3034 
=== Usages ===
j2926 v2425 v2426 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v2421 #next: v3034  <|@  <|@
f <@~|@floating>@ <|@
tid v3246 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j2901 
index: j2926 
=== Succesors ===
=== Usages ===
v3034 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2901 index: j2926  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3034 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3246 
value: v3035 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2428 
=== Usages ===
=== Predecessor ===
v2422 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3246 value: v3035 stateAfter: - lastLocationAccess: - #next: v2428  <|@  <|@
f <@~|@floating>@ <|@
tid j2931 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j2926 
y: j739 
=== Succesors ===
=== Usages ===
j2920 j2926 v2935 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2926 y: j739  <|@  <|@
f <@~|@floating>@ <|@
tid v2935 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2932 
y: j2931 
=== Succesors ===
=== Usages ===
v2428 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2932 y: j2931  <|@  <|@
f <@*|@fixed>@ <|@
tid v2428 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v2935 
=== Succesors ===
trueSuccessor: v2425 
falseSuccessor: v2427 
=== Usages ===
=== Predecessor ===
v3034 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2935 #trueSuccessor: v2425 #falseSuccessor: v2427  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B121" 
    successors "B123" 
    xhandlers
    flags 
    probability 4567724291157174464
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2425 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v2422 
=== Succesors ===
next: v2431 
=== Usages ===
=== Predecessor ===
v2428 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v2422 #next: v2431  <|@  <|@
f <@*|@fixed>@ <|@
tid v2431 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2430 
=== Predecessor ===
v2425 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B123"
    from_bci -1
    to_bci -1
    predecessors "B119" "B122" 
    successors "B124" "B125" 
    xhandlers
    flags 
    probability 4576731490411915456
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j2920 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2430 
values: j1034 j2931 
=== Succesors ===
=== Usages ===
v3245 j2925 j2914 v2938 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2430 values: j1034 j2931  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2430 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2429 v2431 
=== Succesors ===
next: v2452 
=== Usages ===
j2920 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2429 v2431 #next: v2452  <|@  <|@
f <@~|@floating>@ <|@
tid j2937 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967303 - 4294967287]
=== Inputs ===
x: j1967 
y: j2543 
=== Succesors ===
=== Usages ===
v2938 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1967 y: j2543  <|@  <|@
f <@~|@floating>@ <|@
tid v2938 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2937 
y: j2920 
=== Succesors ===
=== Usages ===
v2452 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2937 y: j2920  <|@  <|@
f <@*|@fixed>@ <|@
tid v2452 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v2938 
=== Succesors ===
trueSuccessor: v2451 
falseSuccessor: v2450 
=== Usages ===
=== Predecessor ===
v2430 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2938 #trueSuccessor: v2451 #falseSuccessor: v2450  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B124"
    from_bci -1
    to_bci -1
    predecessors "B123" 
    successors "B126" 
    xhandlers
    flags 
    probability 4567724291157174464
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2451 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2455 
=== Usages ===
=== Predecessor ===
v2452 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2455  <|@  <|@
f <@*|@fixed>@ <|@
tid v2455 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2441 
=== Predecessor ===
v2451 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B125"
    from_bci -1
    to_bci -1
    predecessors "B123" 
    successors "B126" 
    xhandlers
    flags 
    probability 4575016825099975968
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2450 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3033 
=== Usages ===
=== Predecessor ===
v2452 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3033  <|@  <|@
f <@~|@floating>@ <|@
tid v3245 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j2901 
index: j2920 
=== Succesors ===
=== Usages ===
v3033 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2901 index: j2920  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3033 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3245 
value: v3039 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2440 
=== Usages ===
=== Predecessor ===
v2450 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3245 value: v3039 stateAfter: - lastLocationAccess: - #next: v2440  <|@  <|@
f <@~|@floating>@ <|@
tid j2925 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j2920 
y: j1432 
=== Succesors ===
=== Usages ===
j2914 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2920 y: j1432  <|@  <|@
f <@*|@fixed>@ <|@
tid v2440 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2441 
=== Predecessor ===
v3033 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B126"
    from_bci -1
    to_bci -1
    predecessors "B125" "B124" 
    successors "B127" "B128" 
    xhandlers
    flags 
    probability 4576731490411915456
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j2914 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2441 
values: j2925 j2920 
=== Succesors ===
=== Usages ===
v3244 j2919 j2908 v2941 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2441 values: j2925 j2920  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2441 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2440 v2455 
=== Succesors ===
next: v2458 
=== Usages ===
j2914 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2440 v2455 #next: v2458  <|@  <|@
f <@~|@floating>@ <|@
tid j2940 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967299 - 4294967291]
=== Inputs ===
x: j1967 
y: j2547 
=== Succesors ===
=== Usages ===
v2941 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1967 y: j2547  <|@  <|@
f <@~|@floating>@ <|@
tid v2941 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2940 
y: j2914 
=== Succesors ===
=== Usages ===
v2458 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2940 y: j2914  <|@  <|@
f <@*|@fixed>@ <|@
tid v2458 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v2941 
=== Succesors ===
trueSuccessor: v2457 
falseSuccessor: v2456 
=== Usages ===
=== Predecessor ===
v2441 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2941 #trueSuccessor: v2457 #falseSuccessor: v2456  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B127"
    from_bci -1
    to_bci -1
    predecessors "B126" 
    successors "B129" 
    xhandlers
    flags 
    probability 4567724291157174464
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2457 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2461 
=== Usages ===
=== Predecessor ===
v2458 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2461  <|@  <|@
f <@*|@fixed>@ <|@
tid v2461 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2444 
=== Predecessor ===
v2457 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B128"
    from_bci -1
    to_bci -1
    predecessors "B126" 
    successors "B129" 
    xhandlers
    flags 
    probability 4575016825099975968
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2456 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3032 
=== Usages ===
=== Predecessor ===
v2458 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3032  <|@  <|@
f <@~|@floating>@ <|@
tid v3244 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j2901 
index: j2914 
=== Succesors ===
=== Usages ===
v3032 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2901 index: j2914  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3032 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3244 
value: v3038 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2443 
=== Usages ===
=== Predecessor ===
v2456 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3244 value: v3038 stateAfter: - lastLocationAccess: - #next: v2443  <|@  <|@
f <@~|@floating>@ <|@
tid j2919 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j2914 
y: j2519 
=== Succesors ===
=== Usages ===
j2908 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2914 y: j2519  <|@  <|@
f <@*|@fixed>@ <|@
tid v2443 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2444 
=== Predecessor ===
v3032 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B129"
    from_bci -1
    to_bci -1
    predecessors "B128" "B127" 
    successors "B130" "B131" 
    xhandlers
    flags 
    probability 4576731490411915456
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j2908 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2444 
values: j2919 j2914 
=== Succesors ===
=== Usages ===
v3243 j2913 j2902 v2944 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2444 values: j2919 j2914  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2444 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2443 v2461 
=== Succesors ===
next: v2464 
=== Usages ===
j2908 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2443 v2461 #next: v2464  <|@  <|@
f <@~|@floating>@ <|@
tid j2943 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967297 - 4294967293]
=== Inputs ===
x: j1967 
y: j2551 
=== Succesors ===
=== Usages ===
v2944 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1967 y: j2551  <|@  <|@
f <@~|@floating>@ <|@
tid v2944 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2943 
y: j2908 
=== Succesors ===
=== Usages ===
v2464 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2943 y: j2908  <|@  <|@
f <@*|@fixed>@ <|@
tid v2464 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v2944 
=== Succesors ===
trueSuccessor: v2463 
falseSuccessor: v2462 
=== Usages ===
=== Predecessor ===
v2444 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2944 #trueSuccessor: v2463 #falseSuccessor: v2462  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B130"
    from_bci -1
    to_bci -1
    predecessors "B129" 
    successors "B132" 
    xhandlers
    flags 
    probability 4567724291157174464
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2463 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2467 
=== Usages ===
=== Predecessor ===
v2464 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2467  <|@  <|@
f <@*|@fixed>@ <|@
tid v2467 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2447 
=== Predecessor ===
v2463 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B131"
    from_bci -1
    to_bci -1
    predecessors "B129" 
    successors "B132" 
    xhandlers
    flags 
    probability 4575016825099975968
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2462 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3031 
=== Usages ===
=== Predecessor ===
v2464 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3031  <|@  <|@
f <@~|@floating>@ <|@
tid v3243 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j2901 
index: j2908 
=== Succesors ===
=== Usages ===
v3031 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2901 index: j2908  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3031 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3243 
value: v3037 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2446 
=== Usages ===
=== Predecessor ===
v2462 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3243 value: v3037 stateAfter: - lastLocationAccess: - #next: v2446  <|@  <|@
f <@~|@floating>@ <|@
tid j2913 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j2908 
y: j2497 
=== Succesors ===
=== Usages ===
j2902 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2908 y: j2497  <|@  <|@
f <@*|@fixed>@ <|@
tid v2446 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2447 
=== Predecessor ===
v3031 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B132"
    from_bci -1
    to_bci -1
    predecessors "B131" "B130" 
    successors "B133" "B134" 
    xhandlers
    flags 
    probability 4576731490411915456
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j2902 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2447 
values: j2913 j2908 
=== Succesors ===
=== Usages ===
v3242 v2947 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2447 values: j2913 j2908  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2447 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2446 v2467 
=== Succesors ===
next: v2470 
=== Usages ===
j2902 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2446 v2467 #next: v2470  <|@  <|@
f <@~|@floating>@ <|@
tid j2946 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967296 - 4294967294]
=== Inputs ===
x: j1967 
y: j2555 
=== Succesors ===
=== Usages ===
v2947 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1967 y: j2555  <|@  <|@
f <@~|@floating>@ <|@
tid v2947 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2946 
y: j2902 
=== Succesors ===
=== Usages ===
v2470 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2946 y: j2902  <|@  <|@
f <@*|@fixed>@ <|@
tid v2470 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v2947 
=== Succesors ===
trueSuccessor: v2469 
falseSuccessor: v2468 
=== Usages ===
=== Predecessor ===
v2447 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2947 #trueSuccessor: v2469 #falseSuccessor: v2468  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B133"
    from_bci -1
    to_bci -1
    predecessors "B132" 
    successors "B137" 
    xhandlers
    flags 
    probability 4567724291157174464
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2469 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2473 
=== Usages ===
=== Predecessor ===
v2470 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2473  <|@  <|@
f <@*|@fixed>@ <|@
tid v2473 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2434 
=== Predecessor ===
v2469 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B134"
    from_bci -1
    to_bci -1
    predecessors "B132" 
    successors "B137" 
    xhandlers
    flags 
    probability 4575016825099975968
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2468 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3030 
=== Usages ===
=== Predecessor ===
v2470 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3030  <|@  <|@
f <@~|@floating>@ <|@
tid v3242 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j2901 
index: j2902 
=== Succesors ===
=== Usages ===
v3030 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2901 index: j2902  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3030 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3242 
value: i3036 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2449 
=== Usages ===
=== Predecessor ===
v2468 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3242 value: i3036 stateAfter: - lastLocationAccess: - #next: v2449  <|@  <|@
f <@*|@fixed>@ <|@
tid v2449 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2434 
=== Predecessor ===
v3030 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B135"
    from_bci -1
    to_bci -1
    predecessors "B121" 
    successors "B121" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4575016825099975968
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2427 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2426 
=== Usages ===
=== Predecessor ===
v2428 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2426  <|@  <|@
f <@*|@fixed>@ <|@
tid v2426 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v2422 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v2427 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v2422  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B136"
    from_bci -1
    to_bci -1
    predecessors "B117" 
    successors "B137" 
    xhandlers
    flags 
    probability 4576731490411915456
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2415 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2433 
=== Usages ===
=== Predecessor ===
v2417 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2433  <|@  <|@
f <@*|@fixed>@ <|@
tid v2433 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2434 
=== Predecessor ===
v2415 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B137"
    from_bci -1
    to_bci -1
    predecessors "B136" "B134" "B133" 
    successors "B138" "B139" 
    xhandlers
    flags 
    probability 4581235090039285952
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2434 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2433 v2449 v2473 
=== Succesors ===
next: a1285 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2433 v2449 v2473 #next: a1285  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1285 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2924) [bci: 69]
predefinedStamp: [null]
stamp: a! -
=== Inputs ===
object: a1664 
=== Succesors ===
next: v832 
=== Usages ===
a713 a830 j1703 a520 
=== Predecessor ===
v2434 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a1664 #next: v832  <|@  <|@
f <@~|@floating>@ <|@
tid v3083 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1080 
index: - 
=== Succesors ===
=== Usages ===
v832 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1080 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a830 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2924) [bci: 69]
op: Compress
stamp: n! -
=== Inputs ===
value: a1285 
=== Succesors ===
=== Usages ===
v832 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1285  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v832 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: AbstractStringBuilder.value
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2924) [bci: 69]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3083 
value: a830 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j1691 
=== Usages ===
=== Predecessor ===
a1285 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3083 value: a830 stateAfter: - lastLocationAccess: - #next: j1691  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1691 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2924) [bci: 69]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1080 
=== Succesors ===
next: v1697 
=== Usages ===
j1693 
=== Predecessor ===
v832 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a1080 #next: v1697  <|@  <|@
f <@~|@floating>@ <|@
tid j1693 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2924) [bci: 69]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j1691 
y: i1692 
=== Succesors ===
=== Usages ===
v3137 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j1691 y: i1692  <|@  <|@
f <@~|@floating>@ <|@
tid v3137 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1693 
index: j1696 
=== Succesors ===
=== Usages ===
v1697 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1693 index: j1696  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1697 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2924) [bci: 69]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3137 
value: i1698 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: i3060 
=== Usages ===
=== Predecessor ===
j1691 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3137 value: i1698 stateAfter: - lastLocationAccess: - #next: i3060  <|@  <|@
f <@~|@floating>@ <|@
tid v3084 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1080 
index: - 
=== Succesors ===
=== Usages ===
i3060 v886 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1080 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i3060 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractStringBuilder.count
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 32]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2924) [bci: 69]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v3084 
=== Succesors ===
next: v857 
=== Usages ===
i329 j1704 v851 v870 
=== Predecessor ===
v1697 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3084 #next: v857  <|@  <|@
f <@~|@floating>@ <|@
tid v851 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:257) [bci: 22]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2924) [bci: 69]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3060 
y: i26 
=== Succesors ===
=== Usages ===
v857 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i3060 y: i26  <|@  <|@
f <@*|@fixed>@ <|@
tid v857 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:258) [bci: 33]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2924) [bci: 69]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v851 
=== Succesors ===
trueSuccessor: v856 
falseSuccessor: v852 
=== Usages ===
=== Predecessor ===
i3060 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v851 #trueSuccessor: v856 #falseSuccessor: v852  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B138"
    from_bci -1
    to_bci -1
    predecessors "B137" 
    successors "B141" 
    xhandlers
    flags 
    probability 4551271695864333851
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v856 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2924) [bci: 69]
stamp: void
=== Inputs ===
=== Succesors ===
next: v855 
=== Usages ===
=== Predecessor ===
v857 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v855  <|@  <|@
f <@*|@fixed>@ <|@
tid v855 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2924) [bci: 69]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v854 
=== Predecessor ===
v856 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B139"
    from_bci -1
    to_bci -1
    predecessors "B137" 
    successors "B140" "B142" 
    xhandlers
    flags 
    probability 4581179311352977332
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v852 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:258) [bci: 36]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2924) [bci: 69]
stamp: void
=== Inputs ===
=== Succesors ===
next: v874 
=== Usages ===
=== Predecessor ===
v857 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v874  <|@  <|@
f <@~|@floating>@ <|@
tid i869 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 90]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2924) [bci: 69]
stamp: i32
=== Inputs ===
x: i343 
y: i3043 
=== Succesors ===
=== Usages ===
v870 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i343 y: i3043  <|@  <|@
f <@~|@floating>@ <|@
tid v870 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 91]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2924) [bci: 69]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i869 
y: i3060 
=== Succesors ===
=== Usages ===
v874 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i869 y: i3060  <|@  <|@
f <@*|@fixed>@ <|@
tid v874 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2924) [bci: 69]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v870 
=== Succesors ===
trueSuccessor: v873 
falseSuccessor: v871 
=== Usages ===
=== Predecessor ===
v852 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v870 #trueSuccessor: v873 #falseSuccessor: v871  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B140"
    from_bci -1
    to_bci -1
    predecessors "B139" 
    successors "B141" 
    xhandlers
    flags 
    probability 4551200299145858817
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v873 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2924) [bci: 69]
stamp: void
=== Inputs ===
=== Succesors ===
next: v872 
=== Usages ===
=== Predecessor ===
v874 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v872  <|@  <|@
f <@*|@fixed>@ <|@
tid v872 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2924) [bci: 69]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v854 
=== Predecessor ===
v873 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B141"
    from_bci -1
    to_bci -1
    predecessors "B138" "B140" 
    successors 
    xhandlers
    flags 
    probability 4555739597132466830
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v854 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2924) [bci: 69]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v855 v872 
=== Succesors ===
next: v875 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v855 v872 #next: v875  <|@  <|@
tid ?348 <|@
d <@d|@=== Debug Properties ===
bci: 26
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.ensureCapacityInternal(int)>
duringCall: false
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2924) [bci: 69]
rethrowException: false
sourceFile: AbstractStringBuilder.java
sourceLine: 127
stackSize: 0
=== Inputs ===
outerFrameState: ?351 
values: - - 
virtualObjectMappings: ?696 
=== Succesors ===
=== Usages ===
v875 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?351 values: - - virtualObjectMappings: ?696  <|@  <|@
f <@*|@fixed>@ <|@
tid v875 <|@
d <@d|@=== Debug Properties ===
action: None
debugId: 0
nodeSourcePosition: at org.graalvm.compiler.nodes.DeoptimizeNode.deopt(DeoptimizationAction, DeoptimizationReason) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:263) [bci: 119]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2924) [bci: 69]
reason: RuntimeConstraint
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?348 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v854 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?348  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B142"
    from_bci -1
    to_bci -1
    predecessors "B139" 
    successors "B143" "B205" 
    xhandlers
    flags 
    probability 4581124090453531798
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v871 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:265) [bci: 122]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2924) [bci: 69]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1701 
=== Usages ===
=== Predecessor ===
v874 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j1701  <|@  <|@
f <@~|@floating>@ <|@
tid a836 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.String.getChars(String.java:820) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2924) [bci: 69]
op: Uncompress
stamp: a# [C
=== Inputs ===
value: a3053 
=== Succesors ===
=== Usages ===
j1701 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a3053  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1701 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2924) [bci: 69]
stamp: i64
=== Inputs ===
object: a836 
=== Succesors ===
next: j1703 
=== Usages ===
v3138 
=== Predecessor ===
v871 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a836 #next: j1703  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1703 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2924) [bci: 69]
stamp: i64
=== Inputs ===
object: a1285 
=== Succesors ===
next: v1708 
=== Usages ===
v3139 
=== Predecessor ===
j1701 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a1285 #next: v1708  <|@  <|@
f <@~|@floating>@ <|@
tid v3138 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j1701 
index: - 
=== Succesors ===
=== Usages ===
v1708 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1701 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j1704 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2924) [bci: 69]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i3060 
=== Succesors ===
=== Usages ===
v3139 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i3060  <|@  <|@
f <@~|@floating>@ <|@
tid v3139 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: j1703 
index: j1704 
=== Succesors ===
=== Usages ===
v1708 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1703 index: j1704  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1708 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: charArraycopy(Word,Word,Word)void
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2924) [bci: 69]
stamp: void
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: v3138 v3139 j1549 
=== Succesors ===
next: v886 
=== Usages ===
=== Predecessor ===
j1703 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: v3138 v3139 j1549 #next: v886  <|@  <|@
f <@~|@floating>@ <|@
tid i329 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:450) [bci: 44]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2924) [bci: 69]
stamp: i32
=== Inputs ===
x: i3043 
y: i3060 
=== Succesors ===
=== Usages ===
v886 i521 i711 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i3043 y: i3060  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v886 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: AbstractStringBuilder.count
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:450) [bci: 45]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2924) [bci: 69]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3084 
value: i329 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v55 
=== Usages ===
=== Predecessor ===
v1708 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3084 value: i329 stateAfter: - lastLocationAccess: - #next: v55  <|@  <|@
f <@*|@fixed>@ <|@
tid v55 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2925) [bci: 74]
stamp: void
trueSuccessorProbability: 0.18579515065073993
=== Inputs ===
condition: v84 
=== Succesors ===
trueSuccessor: v54 
falseSuccessor: v53 
=== Usages ===
=== Predecessor ===
v886 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v84 #trueSuccessor: v54 #falseSuccessor: v53  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B143"
    from_bci -1
    to_bci -1
    predecessors "B142" 
    successors "B144" 
    xhandlers
    flags 
    probability 4570272164588901904
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v54 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2926) [bci: 77]
stamp: void
=== Inputs ===
=== Succesors ===
next: v705 
=== Usages ===
=== Predecessor ===
v55 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v705  <|@  <|@
f <@*|@fixed>@ <|@
tid v705 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v704 
=== Predecessor ===
v54 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B144"
    from_bci -1
    to_bci -1
    predecessors "B143" "B82" 
    successors "B145" 
    xhandlers
    flags 
    probability 4588182886451812978
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i711 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v704 
values: i329 i319 
=== Succesors ===
=== Usages ===
i590 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v704 values: i329 i319  <|@  <|@
f <@~|@floating>@ <|@
tid a713 <|@
d <@d|@=== Debug Properties ===
stamp: a!# [C
valueDescription: a -
=== Inputs ===
merge: v704 
values: a1285 a637 
=== Succesors ===
=== Usages ===
a589 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v704 values: a1285 a637  <|@  <|@
f <@~|@floating>@ <|@
tid a715 <|@
d <@d|@=== Debug Properties ===
stamp: a!# Ljava/lang/StringBuilder;
valueDescription: a -
=== Inputs ===
merge: v704 
values: a1080 a1071 
=== Succesors ===
=== Usages ===
v3087 v3089 a727 ?723 j1762 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v704 values: a1080 a1071  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v704 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v705 v706 
=== Succesors ===
next: v57 
=== Usages ===
i711 a713 a715 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v705 v706 #next: v57  <|@  <|@
tid ?723 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a89 
materializedValue: a715 
=== Succesors ===
=== Usages ===
?60 
=== Predecessor ===
- >@ <|@
instruction <@MaterializedObjectState|@org.graalvm.compiler.virtual.nodes.MaterializedObjectState>@ object: a89 materializedValue: a715  <|@  <|@
f <@~|@floating>@ <|@
tid v3087 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a715 
index: - 
=== Succesors ===
=== Usages ===
v890 v905 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a715 index: -  <|@  <|@
f <@*|@fixed>@ <|@
tid v57 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2926) [bci: 80]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v58 
=== Predecessor ===
v704 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B145"
    from_bci -1
    to_bci -1
    predecessors "B144" "B200" "B148" 
    successors "B146" "B204" 
    xhandlers
    flags "llh" 
    loop_index 5
    loop_depth 1
    probability 4602160059308521155
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i59 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v58 
values: i26 i71 i71 
=== Succesors ===
=== Usages ===
?60 v61 i71 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v58 values: i26 i71 i71  <|@  <|@
f <@~|@floating>@ <|@
tid a589 <|@
d <@d|@=== Debug Properties ===
stamp: a!# [C
valueDescription: a -
=== Inputs ===
merge: v58 
values: a713 a1273 a589 
=== Succesors ===
=== Usages ===
v3092 a589 a520 v3086 v3088 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v58 values: a713 a1273 a589  <|@  <|@
f <@~|@floating>@ <|@
tid i590 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v58 
values: i711 i132 i132 
=== Succesors ===
=== Usages ===
i521 v3088 v892 v3090 i132 v906 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v58 values: i711 i132 i132  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v58 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 8.465091170825337
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 2
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2926) [bci: 80]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v57 
=== Succesors ===
next: v68 
=== Usages ===
i59 v66 v72 a589 i590 v616 v1023 v1018 v1013 v1008 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v57 #next: v68  <|@  <|@
f <@~|@floating>@ <|@
tid v61 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2926) [bci: 84]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i59 
y: i25 
=== Succesors ===
=== Usages ===
v68 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i59 y: i25  <|@  <|@
f <@*|@fixed>@ <|@
tid v68 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2926) [bci: 84]
stamp: void
trueSuccessorProbability: 0.8818677814780699
=== Inputs ===
condition: v61 
=== Succesors ===
trueSuccessor: v62 
falseSuccessor: v66 
=== Usages ===
=== Predecessor ===
v58 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v61 #trueSuccessor: v62 #falseSuccessor: v66  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B146"
    from_bci -1
    to_bci -1
    predecessors "B145" 
    successors "B147" "B150" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4601157301131518837
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v62 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2926) [bci: 87]
stamp: void
=== Inputs ===
=== Succesors ===
next: i3061 
=== Usages ===
=== Predecessor ===
v68 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i3061  <|@  <|@
f <@~|@floating>@ <|@
tid v3086 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a589 
index: - 
=== Succesors ===
=== Usages ===
i3061 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a589 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i3061 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 5]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2926) [bci: 90]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v3086 
=== Succesors ===
next: v180 
=== Usages ===
i176 i270 i1264 v892 v1124 
=== Predecessor ===
v62 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3086 #next: v180  <|@  <|@
f <@~|@floating>@ <|@
tid i132 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:650) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2926) [bci: 90]
stamp: i32
=== Inputs ===
x: i590 
y: i47 
=== Succesors ===
=== Usages ===
v905 i590 v890 i931 i590 i176 i273 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i590 y: i47  <|@  <|@
f <@~|@floating>@ <|@
tid i176 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 6]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2926) [bci: 90]
stamp: i32
=== Inputs ===
x: i132 
y: i3061 
=== Succesors ===
=== Usages ===
v177 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i132 y: i3061  <|@  <|@
f <@~|@floating>@ <|@
tid v177 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 7]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2926) [bci: 90]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i176 
y: i47 
=== Succesors ===
=== Usages ===
v180 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i176 y: i47  <|@  <|@
f <@~|@floating>@ <|@
tid i71 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2926) [bci: 94]
stamp: i32
=== Inputs ===
x: i59 
y: i47 
=== Succesors ===
=== Usages ===
i59 i59 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i59 y: i47  <|@  <|@
tid ?60 <|@
d <@d|@=== Debug Properties ===
bci: 80
code: ResolvedJavaMethodBytecode<Formatter$FormatSpecifier.justify(String)>
duringCall: false
localsSize: 6
locksSize: 0
rethrowException: false
sourceFile: Formatter.java
sourceLine: 2926
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - a89 - i25 i59 
virtualObjectMappings: ?723 
=== Succesors ===
=== Usages ===
a1731 v1359 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - a89 - i25 i59 virtualObjectMappings: ?723  <|@  <|@
f <@*|@fixed>@ <|@
tid v180 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 7]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2926) [bci: 90]
stamp: void
trueSuccessorProbability: 0.9354897578252553
=== Inputs ===
condition: v177 
=== Succesors ===
trueSuccessor: v178 
falseSuccessor: v179 
=== Usages ===
=== Predecessor ===
i3061 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v177 #trueSuccessor: v178 #falseSuccessor: v179  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B147"
    from_bci -1
    to_bci -1
    predecessors "B146" 
    successors "B148" "B149" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4600674398023585731
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v178 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:127) [bci: 26]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2926) [bci: 90]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1009 
=== Usages ===
=== Predecessor ===
v180 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1009  <|@  <|@
f <@~|@floating>@ <|@
tid v892 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:650) [bci: 26]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2926) [bci: 90]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i590 
y: i3061 
=== Succesors ===
=== Usages ===
v1009 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i590 y: i3061  <|@  <|@
f <@*|@fixed>@ <|@
tid v1009 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:650) [bci: 26]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2926) [bci: 90]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v892 
=== Succesors ===
trueSuccessor: v1005 
falseSuccessor: v1008 
=== Usages ===
=== Predecessor ===
v178 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v892 #trueSuccessor: v1005 #falseSuccessor: v1008  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B148"
    from_bci -1
    to_bci -1
    predecessors "B147" 
    successors "B145" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 1
    probability 4600674398023585731
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1005 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:650) [bci: 26]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2926) [bci: 90]
stamp: void
=== Inputs ===
=== Succesors ===
next: v890 
=== Usages ===
v899 
=== Predecessor ===
v1009 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v890  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v890 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: AbstractStringBuilder.count
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:650) [bci: 22]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2926) [bci: 90]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3087 
value: i132 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v899 
=== Usages ===
=== Predecessor ===
v1005 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3087 value: i132 stateAfter: - lastLocationAccess: - #next: v899  <|@  <|@
f <@~|@floating>@ <|@
tid v3088 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a589 
index: i590 
=== Succesors ===
=== Usages ===
v899 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a589 index: i590  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v899 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:650) [bci: 26]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2926) [bci: 90]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1005 
address: v3088 
value: i921 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v616 
=== Usages ===
=== Predecessor ===
v890 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1005 address: v3088 value: i921 stateAfter: - lastLocationAccess: - #next: v616  <|@  <|@
f <@*|@fixed>@ <|@
tid v616 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 1
stamp: void
=== Inputs ===
loopBegin: v58 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v899 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v58  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B149"
    from_bci -1
    to_bci -1
    predecessors "B147" 
    successors "B203" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1008 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:650) [bci: 26]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2926) [bci: 90]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v58 
=== Succesors ===
next: v1355 
=== Usages ===
=== Predecessor ===
v1009 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v58 #next: v1355  <|@  <|@
f <@~|@floating>@ <|@
tid i1356 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -228635
stableDimension: 0
stamp: i32 [-228635] ⇊00000000fffc82e5 ⇈00000000fffc82e5
stampKind: i32
value: int[-228635|0xfffffffffffc82e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1357 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1355 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1354 
=== Predecessor ===
v1008 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B150"
    from_bci -1
    to_bci -1
    predecessors "B146" 
    successors "B151" "B152" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4583383671135353628
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v179 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 10]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2926) [bci: 90]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1014 
=== Usages ===
=== Predecessor ===
v180 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1014  <|@  <|@
f <@~|@floating>@ <|@
tid i270 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:150) [bci: 6]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2926) [bci: 90]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i3061 
y: i47 
=== Succesors ===
=== Usages ===
i272 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i3061 y: i47  <|@  <|@
f <@~|@floating>@ <|@
tid i272 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:150) [bci: 8]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2926) [bci: 90]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i270 
y: i271 
=== Succesors ===
=== Usages ===
i273 i931 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i270 y: i271  <|@  <|@
f <@~|@floating>@ <|@
tid i273 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:151) [bci: 12]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2926) [bci: 90]
stamp: i32
=== Inputs ===
x: i272 
y: i132 
=== Succesors ===
=== Usages ===
v274 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i272 y: i132  <|@  <|@
f <@~|@floating>@ <|@
tid v274 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:151) [bci: 13]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2926) [bci: 90]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i273 
y: i26 
=== Succesors ===
=== Usages ===
i931 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i273 y: i26  <|@  <|@
f <@~|@floating>@ <|@
tid i931 <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
condition: v274 
trueValue: i132 
falseValue: i272 
=== Succesors ===
=== Usages ===
v906 j1941 v283 i286 v1716 v1124 i1264 a1731 v1750 i1709 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v274 trueValue: i132 falseValue: i272  <|@  <|@
f <@~|@floating>@ <|@
tid v283 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 19]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2926) [bci: 90]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i931 
y: i47 
=== Succesors ===
=== Usages ===
v1014 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i931 y: i47  <|@  <|@
f <@*|@fixed>@ <|@
tid v1014 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 19]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2926) [bci: 90]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v283 
=== Succesors ===
trueSuccessor: v1013 
falseSuccessor: v1010 
=== Usages ===
=== Predecessor ===
v179 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v283 #trueSuccessor: v1013 #falseSuccessor: v1010  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B151"
    from_bci -1
    to_bci -1
    predecessors "B150" 
    successors "B203" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1013 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 19]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2926) [bci: 90]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v58 
=== Succesors ===
next: v1360 
=== Usages ===
=== Predecessor ===
v1014 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v58 #next: v1360  <|@  <|@
f <@~|@floating>@ <|@
tid i1361 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -230419
stableDimension: 0
stamp: i32 [-230419] ⇊00000000fffc7bed ⇈00000000fffc7bed
stampKind: i32
value: int[-230419|0xfffffffffffc7bed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1357 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1360 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1354 
=== Predecessor ===
v1013 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B152"
    from_bci -1
    to_bci -1
    predecessors "B150" 
    successors "B153" "B154" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4583383671135353628
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1010 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 19]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2926) [bci: 90]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1019 
=== Usages ===
=== Predecessor ===
v1014 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1019  <|@  <|@
f <@~|@floating>@ <|@
tid i286 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 25]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2926) [bci: 90]
stamp: i32
=== Inputs ===
x: i285 
y: i931 
=== Succesors ===
=== Usages ===
v287 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i285 y: i931  <|@  <|@
f <@~|@floating>@ <|@
tid v287 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 26]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2926) [bci: 90]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i286 
y: i26 
=== Succesors ===
=== Usages ===
v1019 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i286 y: i26  <|@  <|@
f <@*|@fixed>@ <|@
tid v1019 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 26]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2926) [bci: 90]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v287 
=== Succesors ===
trueSuccessor: v1018 
falseSuccessor: v1015 
=== Usages ===
=== Predecessor ===
v1010 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v287 #trueSuccessor: v1018 #falseSuccessor: v1015  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B153"
    from_bci -1
    to_bci -1
    predecessors "B152" 
    successors "B203" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1018 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 26]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2926) [bci: 90]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v58 
=== Succesors ===
next: v1362 
=== Usages ===
=== Predecessor ===
v1019 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v58 #next: v1362  <|@  <|@
f <@~|@floating>@ <|@
tid i1363 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -230675
stableDimension: 0
stamp: i32 [-230675] ⇊00000000fffc7aed ⇈00000000fffc7aed
stampKind: i32
value: int[-230675|0xfffffffffffc7aed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1357 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1362 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1354 
=== Predecessor ===
v1018 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B154"
    from_bci -1
    to_bci -1
    predecessors "B152" 
    successors "B155" "B202" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4583383671135353628
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1015 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 26]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2926) [bci: 90]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1024 
=== Usages ===
=== Predecessor ===
v1019 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1024  <|@  <|@
f <@~|@floating>@ <|@
tid v906 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:650) [bci: 26]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2926) [bci: 90]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i590 
y: i931 
=== Succesors ===
=== Usages ===
v1024 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i590 y: i931  <|@  <|@
f <@*|@fixed>@ <|@
tid v1024 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:650) [bci: 26]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2926) [bci: 90]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v906 
=== Succesors ===
trueSuccessor: v1020 
falseSuccessor: v1023 
=== Usages ===
=== Predecessor ===
v1015 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v906 #trueSuccessor: v1020 #falseSuccessor: v1023  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B155"
    from_bci -1
    to_bci -1
    predecessors "B154" 
    successors "B156" "B159" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4583383671135353628
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1020 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:650) [bci: 26]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2926) [bci: 90]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1711 
=== Usages ===
v913 
=== Predecessor ===
v1024 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j1711  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1711 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:772) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:319) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2926) [bci: 90]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j1747 
=== Usages ===
v3140 v3141 
=== Predecessor ===
v1020 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j1747  <|@  <|@
f <@~|@floating>@ <|@
tid v3140 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j1711 
index: - 
=== Succesors ===
=== Usages ===
j1747 v1749 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1711 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1747 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:245) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:320) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2926) [bci: 90]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v3140 
=== Succesors ===
next: j1748 
=== Usages ===
j1715 v3142 v3143 a1730 v3148 v3144 v3145 v3146 v3147 
=== Predecessor ===
j1711 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3140 #next: j1748  <|@  <|@
f <@~|@floating>@ <|@
tid v3141 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j1711 
index: - 
=== Succesors ===
=== Usages ===
j1748 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1711 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1748 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:249) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:321) [bci: 25]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2926) [bci: 90]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v3141 
=== Succesors ===
next: v1719 
=== Usages ===
v1720 
=== Predecessor ===
j1747 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3141 #next: v1719  <|@  <|@
f <@~|@floating>@ <|@
tid v1716 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.core.common.calc.UnsignedMath.belowThan(int, int) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 50]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2926) [bci: 90]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i931 
y: i1489 
=== Succesors ===
=== Usages ===
v1719 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i931 y: i1489  <|@  <|@
f <@*|@fixed>@ <|@
tid v1719 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 64]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2926) [bci: 90]
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v1716 
=== Succesors ===
trueSuccessor: v1718 
falseSuccessor: v1717 
=== Usages ===
=== Predecessor ===
j1748 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1716 #trueSuccessor: v1718 #falseSuccessor: v1717  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B156"
    from_bci -1
    to_bci -1
    predecessors "B155" 
    successors "B157" "B158" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4582611026162660659
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1718 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 67]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2926) [bci: 90]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1726 
=== Usages ===
=== Predecessor ===
v1719 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1726  <|@  <|@
f <@~|@floating>@ <|@
tid i1709 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 8]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2926) [bci: 90]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i931 
y: i47 
=== Succesors ===
=== Usages ===
i1738 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i931 y: i47  <|@  <|@
f <@~|@floating>@ <|@
tid i1738 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2926) [bci: 90]
stamp: i32 [-2147483647 - 2147483647] ⇊0000000000000001
=== Inputs ===
x: i1709 
y: i1512 
=== Succesors ===
=== Usages ===
i1710 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1709 y: i1512  <|@  <|@
f <@~|@floating>@ <|@
tid i1710 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:604) [bci: 30]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2926) [bci: 90]
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i1738 
y: i1482 
=== Succesors ===
=== Usages ===
j1714 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i1738 y: i1482  <|@  <|@
f <@~|@floating>@ <|@
tid j1714 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2926) [bci: 90]
resultBits: 64
stamp: i64 [-2147483648 - 2147483640] ⇈fffffffffffffff8
=== Inputs ===
value: i1710 
=== Succesors ===
=== Usages ===
j1715 v3144 v3145 v3146 v3147 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i1710  <|@  <|@
f <@~|@floating>@ <|@
tid j1715 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2926) [bci: 90]
stamp: i64
=== Inputs ===
x: j1714 
y: j1747 
=== Succesors ===
=== Usages ===
v1720 v1749 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1714 y: j1747  <|@  <|@
f <@~|@floating>@ <|@
tid v1720 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 83]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2926) [bci: 90]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1748 
y: j1715 
=== Succesors ===
=== Usages ===
v1726 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j1748 y: j1715  <|@  <|@
f <@*|@fixed>@ <|@
tid v1726 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 89]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2926) [bci: 90]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v1720 
=== Succesors ===
trueSuccessor: v1725 
falseSuccessor: v1724 
=== Usages ===
=== Predecessor ===
v1718 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1720 #trueSuccessor: v1725 #falseSuccessor: v1724  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B157"
    from_bci -1
    to_bci -1
    predecessors "B156" 
    successors "B160" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4553032894102253477
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1725 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2926) [bci: 90]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1723 
=== Usages ===
=== Predecessor ===
v1726 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1723  <|@  <|@
f <@*|@fixed>@ <|@
tid v1723 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2926) [bci: 90]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1722 
=== Predecessor ===
v1725 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B158"
    from_bci -1
    to_bci -1
    predecessors "B156" 
    successors "B161" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4582541488115118292
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1724 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 92]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2926) [bci: 90]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1749 
=== Usages ===
=== Predecessor ===
v1726 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1749  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1749 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:257) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 96]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2926) [bci: 90]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3140 
value: j1715 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1740 
=== Usages ===
=== Predecessor ===
v1724 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3140 value: j1715 stateAfter: - lastLocationAccess: - #next: v1740  <|@  <|@
f <@~|@floating>@ <|@
tid v3144 <|@
d <@d|@=== Debug Properties ===
displacement: 192
scale: Times1
stamp: void*
=== Inputs ===
base: j1714 
index: j1747 
=== Succesors ===
=== Usages ===
v1740 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1714 index: j1747  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1740 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2926) [bci: 90]
stamp: void
=== Inputs ===
address: v3144 
=== Succesors ===
next: v1742 
=== Usages ===
=== Predecessor ===
v1749 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v3144 #next: v1742  <|@  <|@
f <@~|@floating>@ <|@
tid v3145 <|@
d <@d|@=== Debug Properties ===
displacement: 256
scale: Times1
stamp: void*
=== Inputs ===
base: j1714 
index: j1747 
=== Succesors ===
=== Usages ===
v1742 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1714 index: j1747  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1742 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2926) [bci: 90]
stamp: void
=== Inputs ===
address: v3145 
=== Succesors ===
next: v1744 
=== Usages ===
=== Predecessor ===
v1740 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v3145 #next: v1744  <|@  <|@
f <@~|@floating>@ <|@
tid v3146 <|@
d <@d|@=== Debug Properties ===
displacement: 320
scale: Times1
stamp: void*
=== Inputs ===
base: j1714 
index: j1747 
=== Succesors ===
=== Usages ===
v1744 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1714 index: j1747  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1744 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2926) [bci: 90]
stamp: void
=== Inputs ===
address: v3146 
=== Succesors ===
next: v1746 
=== Usages ===
=== Predecessor ===
v1742 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v3146 #next: v1746  <|@  <|@
f <@~|@floating>@ <|@
tid v3147 <|@
d <@d|@=== Debug Properties ===
displacement: 384
scale: Times1
stamp: void*
=== Inputs ===
base: j1714 
index: j1747 
=== Succesors ===
=== Usages ===
v1746 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1714 index: j1747  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1746 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2926) [bci: 90]
stamp: void
=== Inputs ===
address: v3147 
=== Succesors ===
next: v1750 
=== Usages ===
=== Predecessor ===
v1744 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v3147 #next: v1750  <|@  <|@
f <@~|@floating>@ <|@
tid v3142 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j1747 
index: - 
=== Succesors ===
=== Usages ===
v1750 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1747 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1750 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:549) [bci: 12]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2926) [bci: 90]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3142 
value: i931 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1751 
=== Usages ===
=== Predecessor ===
v1746 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3142 value: i931 stateAfter: - lastLocationAccess: - #next: v1751  <|@  <|@
f <@~|@floating>@ <|@
tid v3143 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1747 
index: - 
=== Succesors ===
=== Usages ===
v1751 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1747 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1751 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:469) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2926) [bci: 90]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3143 
value: j1425 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1754 
=== Usages ===
=== Predecessor ===
v1750 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3143 value: j1425 stateAfter: - lastLocationAccess: - #next: v1754  <|@  <|@
f <@~|@floating>@ <|@
tid v3148 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j1747 
index: - 
=== Succesors ===
=== Usages ===
v1754 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1747 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1754 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2926) [bci: 90]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3148 
value: v1913 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1729 
=== Usages ===
=== Predecessor ===
v1751 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3148 value: v1913 stateAfter: - lastLocationAccess: - #next: v1729  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1729 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.MembarNode.memoryBarrier(int, LocationIdentity) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:560) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2926) [bci: 90]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1730 
=== Usages ===
=== Predecessor ===
v1754 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a1730  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1730 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:561) [bci: 71]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2926) [bci: 90]
stamp: a! -
trackedPointer: true
=== Inputs ===
input: j1747 
=== Succesors ===
next: v1732 
=== Usages ===
a1735 
=== Predecessor ===
v1729 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j1747 #next: v1732  <|@  <|@
f <@*|@fixed>@ <|@
tid v1732 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2926) [bci: 90]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1733 
=== Predecessor ===
a1730 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B159"
    from_bci -1
    to_bci -1
    predecessors "B155" 
    successors "B160" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4568327582307856200
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1717 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2926) [bci: 90]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1721 
=== Usages ===
=== Predecessor ===
v1719 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1721  <|@  <|@
f <@*|@fixed>@ <|@
tid v1721 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2926) [bci: 90]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1722 
=== Predecessor ===
v1717 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B160"
    from_bci -1
    to_bci -1
    predecessors "B159" "B157" 
    successors "B161" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4568883886688195138
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1722 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2926) [bci: 90]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1721 v1723 
=== Succesors ===
next: a1731 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1721 v1723 #next: a1731  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1731 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.newArray(ForeignCallDescriptor, KlassPointer, int, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 155]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2926) [bci: 90]
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?60 
arguments: v1424 i931 i26 
=== Succesors ===
next: v1734 
=== Usages ===
a1735 
=== Predecessor ===
v1722 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?60 arguments: v1424 i931 i26 #next: v1734  <|@  <|@
f <@*|@fixed>@ <|@
tid v1734 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2926) [bci: 90]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1733 
=== Predecessor ===
a1731 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B161"
    from_bci -1
    to_bci -1
    predecessors "B158" "B160" 
    successors "B162" "B163" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4583383671135353628
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a1735 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2926) [bci: 90]
stamp: a! -
valueDescription: a -
=== Inputs ===
merge: v1733 
values: a1730 a1731 
=== Succesors ===
=== Usages ===
v3183 a1273 v3096 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1733 values: a1730 a1731  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1733 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2926) [bci: 90]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1732 v1734 
=== Succesors ===
next: v2491 
=== Usages ===
a1735 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1732 v1734 #next: v2491  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2491 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v1975 
=== Usages ===
j2492 j2494 
=== Predecessor ===
v1733 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v1975  <|@  <|@
f <@~|@floating>@ <|@
tid v1124 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Math.min(Math.java:1336) [bci: 2]
at com.oracle.graal.enterprise.T.c.b(stripped:192) [bci: 4]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:102) [bci: 9]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2926) [bci: 90]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3061 
y: i931 
=== Succesors ===
=== Usages ===
i1264 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i3061 y: i931  <|@  <|@
f <@~|@floating>@ <|@
tid i1264 <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
condition: v1124 
trueValue: i3061 
falseValue: i931 
=== Succesors ===
=== Usages ===
j1942 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v1124 trueValue: i3061 falseValue: i931  <|@  <|@
f <@~|@floating>@ <|@
tid j1942 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i1264 
=== Succesors ===
=== Usages ===
j2556 v3183 j1946 v1972 v2482 j2538 j2544 j2548 j2552 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i1264  <|@  <|@
f <@~|@floating>@ <|@
tid v1972 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1942 
y: j1425 
=== Succesors ===
=== Usages ===
v1975 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1942 y: j1425  <|@  <|@
f <@*|@fixed>@ <|@
tid v1975 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v1972 
=== Succesors ===
trueSuccessor: v1973 
falseSuccessor: v1974 
=== Usages ===
=== Predecessor ===
v2491 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1972 #trueSuccessor: v1973 #falseSuccessor: v1974  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B162"
    from_bci -1
    to_bci -1
    predecessors "B161" 
    successors "B180" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4578880071507983132
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1973 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1991 
=== Usages ===
=== Predecessor ===
v1975 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1991  <|@  <|@
f <@*|@fixed>@ <|@
tid v1991 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1992 
=== Predecessor ===
v1973 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B163"
    from_bci -1
    to_bci -1
    predecessors "B161" 
    successors "B164" "B165" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4578880071507983132
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1974 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1978 
=== Usages ===
=== Predecessor ===
v1975 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1978  <|@  <|@
f <@~|@floating>@ <|@
tid v3096 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1735 
index: - 
=== Succesors ===
=== Usages ===
j2494 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1735 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j2494 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v2491 
address: v3096 
=== Succesors ===
=== Usages ===
v3187 v3189 v3191 v3193 v3195 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v2491 address: v3096  <|@  <|@
f <@~|@floating>@ <|@
tid v3092 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a589 
index: - 
=== Succesors ===
=== Usages ===
j2492 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a589 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j2492 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v2491 
address: v3092 
=== Succesors ===
=== Usages ===
v3188 v3190 v3192 v3194 v3196 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v2491 address: v3092  <|@  <|@
f <@~|@floating>@ <|@
tid j2538 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483664 - 2147483631]
=== Inputs ===
x: j1942 
y: j2537 
=== Succesors ===
=== Usages ===
v2539 v2541 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1942 y: j2537  <|@  <|@
f <@~|@floating>@ <|@
tid v2539 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2538 
y: j1034 
=== Succesors ===
=== Usages ===
v1978 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2538 y: j1034  <|@  <|@
f <@*|@fixed>@ <|@
tid v1978 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v2539 
=== Succesors ===
trueSuccessor: v1976 
falseSuccessor: v1977 
=== Usages ===
=== Predecessor ===
v1974 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2539 #trueSuccessor: v1976 #falseSuccessor: v1977  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B164"
    from_bci -1
    to_bci -1
    predecessors "B163" 
    successors "B168" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4576948459076250709
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1976 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1987 
=== Usages ===
=== Predecessor ===
v1978 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1987  <|@  <|@
f <@*|@fixed>@ <|@
tid v1987 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1988 
=== Predecessor ===
v1976 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B165"
    from_bci -1
    to_bci -1
    predecessors "B163" 
    successors "B166" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4569872872253242140
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1977 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1979 
=== Usages ===
=== Predecessor ===
v1978 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1979  <|@  <|@
f <@*|@fixed>@ <|@
tid v1979 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1980 
=== Predecessor ===
v1977 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B166"
    from_bci -1
    to_bci -1
    predecessors "B165" "B201" 
    successors "B167" "B201" 
    xhandlers
    flags "llh" 
    loop_index 6
    loop_depth 2
    probability 4578880071507983132
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j2529 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1980 
values: j1034 j2536 
=== Succesors ===
=== Usages ===
v3196 j2536 v3195 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1980 values: j1034 j2536  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1980 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v1979 
=== Succesors ===
next: v3062 
=== Usages ===
v3062 v1983 v1984 j2529 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v1979 #next: v3062  <|@  <|@
f <@~|@floating>@ <|@
tid v3196 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j2492 
index: j2529 
=== Succesors ===
=== Usages ===
v3062 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2492 index: j2529  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3062 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16>
=== Inputs ===
stateBefore: - 
guard: v1980 
address: v3196 
=== Succesors ===
next: v2979 
=== Usages ===
v2979 
=== Predecessor ===
v1980 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1980 address: v3196 #next: v2979  <|@  <|@
f <@~|@floating>@ <|@
tid v3195 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j2494 
index: j2529 
=== Succesors ===
=== Usages ===
v2979 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2494 index: j2529  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2979 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3195 
value: v3062 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1986 
=== Usages ===
=== Predecessor ===
v3062 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3195 value: v3062 stateAfter: - lastLocationAccess: - #next: v1986  <|@  <|@
f <@~|@floating>@ <|@
tid j2536 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j2529 
y: j739 
=== Succesors ===
=== Usages ===
j2521 j2529 v2541 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2529 y: j739  <|@  <|@
f <@~|@floating>@ <|@
tid v2541 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2538 
y: j2536 
=== Succesors ===
=== Usages ===
v1986 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2538 y: j2536  <|@  <|@
f <@*|@fixed>@ <|@
tid v1986 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v2541 
=== Succesors ===
trueSuccessor: v1983 
falseSuccessor: v1985 
=== Usages ===
=== Predecessor ===
v2979 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2541 #trueSuccessor: v1983 #falseSuccessor: v1985  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B167"
    from_bci -1
    to_bci -1
    predecessors "B166" 
    successors "B168" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4569872872253242140
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1983 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v1980 
=== Succesors ===
next: v1989 
=== Usages ===
=== Predecessor ===
v1986 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v1980 #next: v1989  <|@  <|@
f <@*|@fixed>@ <|@
tid v1989 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1988 
=== Predecessor ===
v1983 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B168"
    from_bci -1
    to_bci -1
    predecessors "B164" "B167" 
    successors "B169" "B170" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4578880071507983132
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j2521 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1988 
values: j1034 j2536 
=== Succesors ===
=== Usages ===
v3194 j2528 j2512 v2545 v3193 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1988 values: j1034 j2536  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1988 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1987 v1989 
=== Succesors ===
next: v2011 
=== Usages ===
j2521 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1987 v1989 #next: v2011  <|@  <|@
f <@~|@floating>@ <|@
tid j2544 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483656 - 2147483639]
=== Inputs ===
x: j1942 
y: j2543 
=== Succesors ===
=== Usages ===
v2545 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1942 y: j2543  <|@  <|@
f <@~|@floating>@ <|@
tid v2545 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2544 
y: j2521 
=== Succesors ===
=== Usages ===
v2011 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2544 y: j2521  <|@  <|@
f <@*|@fixed>@ <|@
tid v2011 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v2545 
=== Succesors ===
trueSuccessor: v2010 
falseSuccessor: v2009 
=== Usages ===
=== Predecessor ===
v1988 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2545 #trueSuccessor: v2010 #falseSuccessor: v2009  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B169"
    from_bci -1
    to_bci -1
    predecessors "B168" 
    successors "B171" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4569872872253242140
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2010 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2014 
=== Usages ===
=== Predecessor ===
v2011 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2014  <|@  <|@
f <@*|@fixed>@ <|@
tid v2014 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1999 
=== Predecessor ===
v2010 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B170"
    from_bci -1
    to_bci -1
    predecessors "B168" 
    successors "B171" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4576948459076250709
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2009 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3063 
=== Usages ===
v3063 
=== Predecessor ===
v2011 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3063  <|@  <|@
f <@~|@floating>@ <|@
tid v3194 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j2492 
index: j2521 
=== Succesors ===
=== Usages ===
v3063 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2492 index: j2521  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3063 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16,i16,i16,i16,i16,i16,i16>
=== Inputs ===
stateBefore: - 
guard: v2009 
address: v3194 
=== Succesors ===
next: v2977 
=== Usages ===
v2977 
=== Predecessor ===
v2009 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v2009 address: v3194 #next: v2977  <|@  <|@
f <@~|@floating>@ <|@
tid v3193 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j2494 
index: j2521 
=== Succesors ===
=== Usages ===
v2977 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2494 index: j2521  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2977 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3193 
value: v3063 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1998 
=== Usages ===
=== Predecessor ===
v3063 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3193 value: v3063 stateAfter: - lastLocationAccess: - #next: v1998  <|@  <|@
f <@~|@floating>@ <|@
tid j2528 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j2521 
y: j1432 
=== Succesors ===
=== Usages ===
j2512 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2521 y: j1432  <|@  <|@
f <@*|@fixed>@ <|@
tid v1998 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1999 
=== Predecessor ===
v2977 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B171"
    from_bci -1
    to_bci -1
    predecessors "B170" "B169" 
    successors "B172" "B173" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4578880071507983132
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j2512 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1999 
values: j2528 j2521 
=== Succesors ===
=== Usages ===
v3192 j2520 j2504 v2549 v3191 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1999 values: j2528 j2521  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1999 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1998 v2014 
=== Succesors ===
next: v2017 
=== Usages ===
j2512 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1998 v2014 #next: v2017  <|@  <|@
f <@~|@floating>@ <|@
tid j2548 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483652 - 2147483643]
=== Inputs ===
x: j1942 
y: j2547 
=== Succesors ===
=== Usages ===
v2549 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1942 y: j2547  <|@  <|@
f <@~|@floating>@ <|@
tid v2549 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2548 
y: j2512 
=== Succesors ===
=== Usages ===
v2017 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2548 y: j2512  <|@  <|@
f <@*|@fixed>@ <|@
tid v2017 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v2549 
=== Succesors ===
trueSuccessor: v2016 
falseSuccessor: v2015 
=== Usages ===
=== Predecessor ===
v1999 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2549 #trueSuccessor: v2016 #falseSuccessor: v2015  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B172"
    from_bci -1
    to_bci -1
    predecessors "B171" 
    successors "B174" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4569872872253242140
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2016 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2020 
=== Usages ===
=== Predecessor ===
v2017 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2020  <|@  <|@
f <@*|@fixed>@ <|@
tid v2020 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2003 
=== Predecessor ===
v2016 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B173"
    from_bci -1
    to_bci -1
    predecessors "B171" 
    successors "B174" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4576948459076250709
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2015 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3064 
=== Usages ===
v3064 
=== Predecessor ===
v2017 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3064  <|@  <|@
f <@~|@floating>@ <|@
tid v3192 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j2492 
index: j2512 
=== Succesors ===
=== Usages ===
v3064 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2492 index: j2512  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3064 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16,i16,i16>
=== Inputs ===
stateBefore: - 
guard: v2015 
address: v3192 
=== Succesors ===
next: v2975 
=== Usages ===
v2975 
=== Predecessor ===
v2015 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v2015 address: v3192 #next: v2975  <|@  <|@
f <@~|@floating>@ <|@
tid v3191 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j2494 
index: j2512 
=== Succesors ===
=== Usages ===
v2975 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2494 index: j2512  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2975 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3191 
value: v3064 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2002 
=== Usages ===
=== Predecessor ===
v3064 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3191 value: v3064 stateAfter: - lastLocationAccess: - #next: v2002  <|@  <|@
f <@~|@floating>@ <|@
tid j2520 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j2512 
y: j2519 
=== Succesors ===
=== Usages ===
j2504 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2512 y: j2519  <|@  <|@
f <@*|@fixed>@ <|@
tid v2002 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2003 
=== Predecessor ===
v2975 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B174"
    from_bci -1
    to_bci -1
    predecessors "B173" "B172" 
    successors "B175" "B176" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4578880071507983132
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j2504 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2003 
values: j2520 j2512 
=== Succesors ===
=== Usages ===
v3190 j2511 j2495 v2553 v3189 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2003 values: j2520 j2512  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2003 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2002 v2020 
=== Succesors ===
next: v2023 
=== Usages ===
j2504 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2002 v2020 #next: v2023  <|@  <|@
f <@~|@floating>@ <|@
tid j2552 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483650 - 2147483645]
=== Inputs ===
x: j1942 
y: j2551 
=== Succesors ===
=== Usages ===
v2553 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1942 y: j2551  <|@  <|@
f <@~|@floating>@ <|@
tid v2553 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2552 
y: j2504 
=== Succesors ===
=== Usages ===
v2023 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2552 y: j2504  <|@  <|@
f <@*|@fixed>@ <|@
tid v2023 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v2553 
=== Succesors ===
trueSuccessor: v2022 
falseSuccessor: v2021 
=== Usages ===
=== Predecessor ===
v2003 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2553 #trueSuccessor: v2022 #falseSuccessor: v2021  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B175"
    from_bci -1
    to_bci -1
    predecessors "B174" 
    successors "B177" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4569872872253242140
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2022 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2026 
=== Usages ===
=== Predecessor ===
v2023 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2026  <|@  <|@
f <@*|@fixed>@ <|@
tid v2026 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2006 
=== Predecessor ===
v2022 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B176"
    from_bci -1
    to_bci -1
    predecessors "B174" 
    successors "B177" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4576948459076250709
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2021 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3065 
=== Usages ===
v3065 
=== Predecessor ===
v2023 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3065  <|@  <|@
f <@~|@floating>@ <|@
tid v3190 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j2492 
index: j2504 
=== Succesors ===
=== Usages ===
v3065 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2492 index: j2504  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3065 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16>
=== Inputs ===
stateBefore: - 
guard: v2021 
address: v3190 
=== Succesors ===
next: v2973 
=== Usages ===
v2973 
=== Predecessor ===
v2021 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v2021 address: v3190 #next: v2973  <|@  <|@
f <@~|@floating>@ <|@
tid v3189 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j2494 
index: j2504 
=== Succesors ===
=== Usages ===
v2973 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2494 index: j2504  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2973 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3189 
value: v3065 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2005 
=== Usages ===
=== Predecessor ===
v3065 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3189 value: v3065 stateAfter: - lastLocationAccess: - #next: v2005  <|@  <|@
f <@~|@floating>@ <|@
tid j2511 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j2504 
y: j2497 
=== Succesors ===
=== Usages ===
j2495 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2504 y: j2497  <|@  <|@
f <@*|@fixed>@ <|@
tid v2005 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2006 
=== Predecessor ===
v2973 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B177"
    from_bci -1
    to_bci -1
    predecessors "B176" "B175" 
    successors "B178" "B179" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4578880071507983132
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j2495 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2006 
values: j2511 j2504 
=== Succesors ===
=== Usages ===
v3188 v2557 v3187 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2006 values: j2511 j2504  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2006 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2005 v2026 
=== Succesors ===
next: v2029 
=== Usages ===
j2495 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2005 v2026 #next: v2029  <|@  <|@
f <@~|@floating>@ <|@
tid j2556 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483649 - 2147483646]
=== Inputs ===
x: j1942 
y: j2555 
=== Succesors ===
=== Usages ===
v2557 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1942 y: j2555  <|@  <|@
f <@~|@floating>@ <|@
tid v2557 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2556 
y: j2495 
=== Succesors ===
=== Usages ===
v2029 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2556 y: j2495  <|@  <|@
f <@*|@fixed>@ <|@
tid v2029 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v2557 
=== Succesors ===
trueSuccessor: v2028 
falseSuccessor: v2027 
=== Usages ===
=== Predecessor ===
v2006 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2557 #trueSuccessor: v2028 #falseSuccessor: v2027  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B178"
    from_bci -1
    to_bci -1
    predecessors "B177" 
    successors "B180" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4569872872253242140
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2028 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2032 
=== Usages ===
=== Predecessor ===
v2029 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2032  <|@  <|@
f <@*|@fixed>@ <|@
tid v2032 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1992 
=== Predecessor ===
v2028 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B179"
    from_bci -1
    to_bci -1
    predecessors "B177" 
    successors "B180" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4576948459076250709
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2027 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: i3066 
=== Usages ===
i3066 
=== Predecessor ===
v2029 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i3066  <|@  <|@
f <@~|@floating>@ <|@
tid v3188 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j2492 
index: j2495 
=== Succesors ===
=== Usages ===
i3066 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2492 index: j2495  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i3066 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: v2027 
address: v3188 
=== Succesors ===
next: v2971 
=== Usages ===
v2971 
=== Predecessor ===
v2027 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v2027 address: v3188 #next: v2971  <|@  <|@
f <@~|@floating>@ <|@
tid v3187 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j2494 
index: j2495 
=== Succesors ===
=== Usages ===
v2971 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2494 index: j2495  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2971 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3187 
value: i3066 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2008 
=== Usages ===
=== Predecessor ===
i3066 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3187 value: i3066 stateAfter: - lastLocationAccess: - #next: v2008  <|@  <|@
f <@*|@fixed>@ <|@
tid v2008 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1992 
=== Predecessor ===
v2971 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B180"
    from_bci -1
    to_bci -1
    predecessors "B162" "B179" "B178" 
    successors "B181" "B199" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4583383671135353628
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1992 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1991 v2008 v2032 
=== Succesors ===
next: v2560 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1991 v2008 v2032 #next: v2560  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2560 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v2039 
=== Usages ===
j2562 
=== Predecessor ===
v1992 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v2039  <|@  <|@
f <@~|@floating>@ <|@
tid j1941 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i931 
=== Succesors ===
=== Usages ===
j1946 v2482 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i931  <|@  <|@
f <@~|@floating>@ <|@
tid v2482 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1942 
y: j1941 
=== Succesors ===
=== Usages ===
v2039 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1942 y: j1941  <|@  <|@
f <@*|@fixed>@ <|@
tid v2039 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v2482 
=== Succesors ===
trueSuccessor: v2038 
falseSuccessor: v2037 
=== Usages ===
=== Predecessor ===
v2560 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2482 #trueSuccessor: v2038 #falseSuccessor: v2037  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B181"
    from_bci -1
    to_bci -1
    predecessors "B180" 
    successors "B182" "B183" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4578880071507983132
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2038 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2042 
=== Usages ===
=== Predecessor ===
v2039 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2042  <|@  <|@
f <@~|@floating>@ <|@
tid v3183 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a1735 
index: j1942 
=== Succesors ===
=== Usages ===
j2562 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1735 index: j1942  <|@  <|@
f <@~|@floating>@ <|@
tid j2562 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v2560 
address: v3183 
=== Succesors ===
=== Usages ===
v3197 v3198 v3199 v3200 v3201 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v2560 address: v3183  <|@  <|@
f <@~|@floating>@ <|@
tid j1946 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
stamp: i64 [-4294967295 - 4294967295]
=== Inputs ===
x: j1941 
y: j1942 
=== Succesors ===
=== Usages ===
j2607 j2593 j2598 j2601 j2604 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j1941 y: j1942  <|@  <|@
f <@~|@floating>@ <|@
tid j2593 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967311 - 4294967279]
=== Inputs ===
x: j1946 
y: j2537 
=== Succesors ===
=== Usages ===
v2594 v2596 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1946 y: j2537  <|@  <|@
f <@~|@floating>@ <|@
tid v2594 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2593 
y: j1034 
=== Succesors ===
=== Usages ===
v2042 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2593 y: j1034  <|@  <|@
f <@*|@fixed>@ <|@
tid v2042 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v2594 
=== Succesors ===
trueSuccessor: v2040 
falseSuccessor: v2041 
=== Usages ===
=== Predecessor ===
v2038 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2594 #trueSuccessor: v2040 #falseSuccessor: v2041  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B182"
    from_bci -1
    to_bci -1
    predecessors "B181" 
    successors "B186" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4576948459076250709
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2040 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2051 
=== Usages ===
=== Predecessor ===
v2042 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2051  <|@  <|@
f <@*|@fixed>@ <|@
tid v2051 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2052 
=== Predecessor ===
v2040 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B183"
    from_bci -1
    to_bci -1
    predecessors "B181" 
    successors "B184" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4569872872253242140
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2041 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2043 
=== Usages ===
=== Predecessor ===
v2042 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2043  <|@  <|@
f <@*|@fixed>@ <|@
tid v2043 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2044 
=== Predecessor ===
v2041 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B184"
    from_bci -1
    to_bci -1
    predecessors "B183" "B198" 
    successors "B185" "B198" 
    xhandlers
    flags "llh" 
    loop_index 7
    loop_depth 2
    probability 4578880071507983132
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j2587 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2044 
values: j1034 j2592 
=== Succesors ===
=== Usages ===
v3201 j2592 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2044 values: j1034 j2592  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2044 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v2043 
=== Succesors ===
next: v2989 
=== Usages ===
j2587 v2047 v2048 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v2043 #next: v2989  <|@  <|@
f <@~|@floating>@ <|@
tid v3201 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j2562 
index: j2587 
=== Succesors ===
=== Usages ===
v2989 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2562 index: j2587  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2989 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3201 
value: v3035 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2050 
=== Usages ===
=== Predecessor ===
v2044 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3201 value: v3035 stateAfter: - lastLocationAccess: - #next: v2050  <|@  <|@
f <@~|@floating>@ <|@
tid j2592 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j2587 
y: j739 
=== Succesors ===
=== Usages ===
j2581 j2587 v2596 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2587 y: j739  <|@  <|@
f <@~|@floating>@ <|@
tid v2596 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2593 
y: j2592 
=== Succesors ===
=== Usages ===
v2050 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2593 y: j2592  <|@  <|@
f <@*|@fixed>@ <|@
tid v2050 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v2596 
=== Succesors ===
trueSuccessor: v2047 
falseSuccessor: v2049 
=== Usages ===
=== Predecessor ===
v2989 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2596 #trueSuccessor: v2047 #falseSuccessor: v2049  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B185"
    from_bci -1
    to_bci -1
    predecessors "B184" 
    successors "B186" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4569872872253242140
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2047 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v2044 
=== Succesors ===
next: v2053 
=== Usages ===
=== Predecessor ===
v2050 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v2044 #next: v2053  <|@  <|@
f <@*|@fixed>@ <|@
tid v2053 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2052 
=== Predecessor ===
v2047 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B186"
    from_bci -1
    to_bci -1
    predecessors "B182" "B185" 
    successors "B187" "B188" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4578880071507983132
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j2581 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2052 
values: j1034 j2592 
=== Succesors ===
=== Usages ===
v3200 j2586 j2575 v2599 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2052 values: j1034 j2592  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2052 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2051 v2053 
=== Succesors ===
next: v2074 
=== Usages ===
j2581 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2051 v2053 #next: v2074  <|@  <|@
f <@~|@floating>@ <|@
tid j2598 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967303 - 4294967287]
=== Inputs ===
x: j1946 
y: j2543 
=== Succesors ===
=== Usages ===
v2599 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1946 y: j2543  <|@  <|@
f <@~|@floating>@ <|@
tid v2599 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2598 
y: j2581 
=== Succesors ===
=== Usages ===
v2074 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2598 y: j2581  <|@  <|@
f <@*|@fixed>@ <|@
tid v2074 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v2599 
=== Succesors ===
trueSuccessor: v2073 
falseSuccessor: v2072 
=== Usages ===
=== Predecessor ===
v2052 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2599 #trueSuccessor: v2073 #falseSuccessor: v2072  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B187"
    from_bci -1
    to_bci -1
    predecessors "B186" 
    successors "B189" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4569872872253242140
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2073 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2077 
=== Usages ===
=== Predecessor ===
v2074 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2077  <|@  <|@
f <@*|@fixed>@ <|@
tid v2077 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2063 
=== Predecessor ===
v2073 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B188"
    from_bci -1
    to_bci -1
    predecessors "B186" 
    successors "B189" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4576948459076250709
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2072 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2988 
=== Usages ===
=== Predecessor ===
v2074 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2988  <|@  <|@
f <@~|@floating>@ <|@
tid v3200 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j2562 
index: j2581 
=== Succesors ===
=== Usages ===
v2988 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2562 index: j2581  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2988 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3200 
value: v3039 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2062 
=== Usages ===
=== Predecessor ===
v2072 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3200 value: v3039 stateAfter: - lastLocationAccess: - #next: v2062  <|@  <|@
f <@~|@floating>@ <|@
tid j2586 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j2581 
y: j1432 
=== Succesors ===
=== Usages ===
j2575 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2581 y: j1432  <|@  <|@
f <@*|@fixed>@ <|@
tid v2062 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2063 
=== Predecessor ===
v2988 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B189"
    from_bci -1
    to_bci -1
    predecessors "B188" "B187" 
    successors "B190" "B191" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4578880071507983132
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j2575 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2063 
values: j2586 j2581 
=== Succesors ===
=== Usages ===
v3199 j2580 j2569 v2602 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2063 values: j2586 j2581  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2063 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2062 v2077 
=== Succesors ===
next: v2080 
=== Usages ===
j2575 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2062 v2077 #next: v2080  <|@  <|@
f <@~|@floating>@ <|@
tid j2601 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967299 - 4294967291]
=== Inputs ===
x: j1946 
y: j2547 
=== Succesors ===
=== Usages ===
v2602 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1946 y: j2547  <|@  <|@
f <@~|@floating>@ <|@
tid v2602 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2601 
y: j2575 
=== Succesors ===
=== Usages ===
v2080 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2601 y: j2575  <|@  <|@
f <@*|@fixed>@ <|@
tid v2080 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v2602 
=== Succesors ===
trueSuccessor: v2079 
falseSuccessor: v2078 
=== Usages ===
=== Predecessor ===
v2063 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2602 #trueSuccessor: v2079 #falseSuccessor: v2078  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B190"
    from_bci -1
    to_bci -1
    predecessors "B189" 
    successors "B192" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4569872872253242140
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2079 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2083 
=== Usages ===
=== Predecessor ===
v2080 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2083  <|@  <|@
f <@*|@fixed>@ <|@
tid v2083 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2066 
=== Predecessor ===
v2079 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B191"
    from_bci -1
    to_bci -1
    predecessors "B189" 
    successors "B192" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4576948459076250709
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2078 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2986 
=== Usages ===
=== Predecessor ===
v2080 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2986  <|@  <|@
f <@~|@floating>@ <|@
tid v3199 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j2562 
index: j2575 
=== Succesors ===
=== Usages ===
v2986 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2562 index: j2575  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2986 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3199 
value: v3038 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2065 
=== Usages ===
=== Predecessor ===
v2078 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3199 value: v3038 stateAfter: - lastLocationAccess: - #next: v2065  <|@  <|@
f <@~|@floating>@ <|@
tid j2580 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j2575 
y: j2519 
=== Succesors ===
=== Usages ===
j2569 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2575 y: j2519  <|@  <|@
f <@*|@fixed>@ <|@
tid v2065 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2066 
=== Predecessor ===
v2986 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B192"
    from_bci -1
    to_bci -1
    predecessors "B191" "B190" 
    successors "B193" "B194" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4578880071507983132
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j2569 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2066 
values: j2580 j2575 
=== Succesors ===
=== Usages ===
v3198 j2574 j2563 v2605 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2066 values: j2580 j2575  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2066 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2065 v2083 
=== Succesors ===
next: v2086 
=== Usages ===
j2569 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2065 v2083 #next: v2086  <|@  <|@
f <@~|@floating>@ <|@
tid j2604 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967297 - 4294967293]
=== Inputs ===
x: j1946 
y: j2551 
=== Succesors ===
=== Usages ===
v2605 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1946 y: j2551  <|@  <|@
f <@~|@floating>@ <|@
tid v2605 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2604 
y: j2569 
=== Succesors ===
=== Usages ===
v2086 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2604 y: j2569  <|@  <|@
f <@*|@fixed>@ <|@
tid v2086 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v2605 
=== Succesors ===
trueSuccessor: v2085 
falseSuccessor: v2084 
=== Usages ===
=== Predecessor ===
v2066 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2605 #trueSuccessor: v2085 #falseSuccessor: v2084  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B193"
    from_bci -1
    to_bci -1
    predecessors "B192" 
    successors "B195" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4569872872253242140
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2085 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2089 
=== Usages ===
=== Predecessor ===
v2086 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2089  <|@  <|@
f <@*|@fixed>@ <|@
tid v2089 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2069 
=== Predecessor ===
v2085 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B194"
    from_bci -1
    to_bci -1
    predecessors "B192" 
    successors "B195" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4576948459076250709
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2084 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2984 
=== Usages ===
=== Predecessor ===
v2086 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2984  <|@  <|@
f <@~|@floating>@ <|@
tid v3198 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j2562 
index: j2569 
=== Succesors ===
=== Usages ===
v2984 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2562 index: j2569  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2984 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3198 
value: v3037 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2068 
=== Usages ===
=== Predecessor ===
v2084 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3198 value: v3037 stateAfter: - lastLocationAccess: - #next: v2068  <|@  <|@
f <@~|@floating>@ <|@
tid j2574 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j2569 
y: j2497 
=== Succesors ===
=== Usages ===
j2563 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2569 y: j2497  <|@  <|@
f <@*|@fixed>@ <|@
tid v2068 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2069 
=== Predecessor ===
v2984 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B195"
    from_bci -1
    to_bci -1
    predecessors "B194" "B193" 
    successors "B196" "B197" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4578880071507983132
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j2563 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2069 
values: j2574 j2569 
=== Succesors ===
=== Usages ===
v3197 v2608 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2069 values: j2574 j2569  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2069 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2068 v2089 
=== Succesors ===
next: v2092 
=== Usages ===
j2563 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2068 v2089 #next: v2092  <|@  <|@
f <@~|@floating>@ <|@
tid j2607 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967296 - 4294967294]
=== Inputs ===
x: j1946 
y: j2555 
=== Succesors ===
=== Usages ===
v2608 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1946 y: j2555  <|@  <|@
f <@~|@floating>@ <|@
tid v2608 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2607 
y: j2563 
=== Succesors ===
=== Usages ===
v2092 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2607 y: j2563  <|@  <|@
f <@*|@fixed>@ <|@
tid v2092 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v2608 
=== Succesors ===
trueSuccessor: v2091 
falseSuccessor: v2090 
=== Usages ===
=== Predecessor ===
v2069 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2608 #trueSuccessor: v2091 #falseSuccessor: v2090  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B196"
    from_bci -1
    to_bci -1
    predecessors "B195" 
    successors "B200" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4569872872253242140
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2091 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2095 
=== Usages ===
=== Predecessor ===
v2092 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2095  <|@  <|@
f <@*|@fixed>@ <|@
tid v2095 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2056 
=== Predecessor ===
v2091 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B197"
    from_bci -1
    to_bci -1
    predecessors "B195" 
    successors "B200" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4576948459076250709
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2090 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2982 
=== Usages ===
=== Predecessor ===
v2092 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2982  <|@  <|@
f <@~|@floating>@ <|@
tid v3197 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j2562 
index: j2563 
=== Succesors ===
=== Usages ===
v2982 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2562 index: j2563  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2982 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3197 
value: i3036 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2071 
=== Usages ===
=== Predecessor ===
v2090 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3197 value: i3036 stateAfter: - lastLocationAccess: - #next: v2071  <|@  <|@
f <@*|@fixed>@ <|@
tid v2071 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2056 
=== Predecessor ===
v2982 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B198"
    from_bci -1
    to_bci -1
    predecessors "B184" 
    successors "B184" 
    xhandlers
    flags "lle" 
    loop_index 7
    loop_depth 2
    probability 4576948459076250709
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2049 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2048 
=== Usages ===
=== Predecessor ===
v2050 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2048  <|@  <|@
f <@*|@fixed>@ <|@
tid v2048 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v2044 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v2049 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v2044  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B199"
    from_bci -1
    to_bci -1
    predecessors "B180" 
    successors "B200" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4578880071507983132
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2037 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2055 
=== Usages ===
=== Predecessor ===
v2039 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2055  <|@  <|@
f <@*|@fixed>@ <|@
tid v2055 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2056 
=== Predecessor ===
v2037 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B200"
    from_bci -1
    to_bci -1
    predecessors "B199" "B197" "B196" 
    successors "B145" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 1
    probability 4583383671135353628
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2056 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2055 v2071 v2095 
=== Succesors ===
next: a1273 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2055 v2071 v2095 #next: a1273  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1273 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2926) [bci: 90]
predefinedStamp: [null]
stamp: a! -
=== Inputs ===
object: a1735 
=== Succesors ===
next: v904 
=== Usages ===
a589 a902 v3090 
=== Predecessor ===
v2056 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a1735 #next: v904  <|@  <|@
f <@~|@floating>@ <|@
tid v3089 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a715 
index: - 
=== Succesors ===
=== Usages ===
v904 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a715 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a902 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2926) [bci: 90]
op: Compress
stamp: n! -
=== Inputs ===
value: a1273 
=== Succesors ===
=== Usages ===
v904 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1273  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v904 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: AbstractStringBuilder.value
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2926) [bci: 90]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3089 
value: a902 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j1762 
=== Usages ===
=== Predecessor ===
a1273 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3089 value: a902 stateAfter: - lastLocationAccess: - #next: j1762  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1762 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2926) [bci: 90]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a715 
=== Succesors ===
next: v1766 
=== Usages ===
j1763 
=== Predecessor ===
v904 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a715 #next: v1766  <|@  <|@
f <@~|@floating>@ <|@
tid j1763 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2926) [bci: 90]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j1762 
y: i1692 
=== Succesors ===
=== Usages ===
v3149 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j1762 y: i1692  <|@  <|@
f <@~|@floating>@ <|@
tid v3149 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1763 
index: j1696 
=== Succesors ===
=== Usages ===
v1766 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1763 index: j1696  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1766 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2926) [bci: 90]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3149 
value: i1698 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v905 
=== Usages ===
=== Predecessor ===
j1762 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3149 value: i1698 stateAfter: - lastLocationAccess: - #next: v905  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v905 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: AbstractStringBuilder.count
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:650) [bci: 22]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2926) [bci: 90]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3087 
value: i132 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v913 
=== Usages ===
=== Predecessor ===
v1766 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3087 value: i132 stateAfter: - lastLocationAccess: - #next: v913  <|@  <|@
f <@~|@floating>@ <|@
tid v3090 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a1273 
index: i590 
=== Succesors ===
=== Usages ===
v913 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1273 index: i590  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v913 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:650) [bci: 26]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2926) [bci: 90]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1020 
address: v3090 
value: i921 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v72 
=== Usages ===
=== Predecessor ===
v905 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1020 address: v3090 value: i921 stateAfter: - lastLocationAccess: - #next: v72  <|@  <|@
f <@*|@fixed>@ <|@
tid v72 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2926) [bci: 80]
stamp: void
=== Inputs ===
loopBegin: v58 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v913 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v58  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B201"
    from_bci -1
    to_bci -1
    predecessors "B166" 
    successors "B166" 
    xhandlers
    flags "lle" 
    loop_index 6
    loop_depth 2
    probability 4576948459076250709
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1985 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1984 
=== Usages ===
=== Predecessor ===
v1986 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1984  <|@  <|@
f <@*|@fixed>@ <|@
tid v1984 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v1980 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1985 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v1980  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B202"
    from_bci -1
    to_bci -1
    predecessors "B154" 
    successors "B203" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1023 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:650) [bci: 26]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2926) [bci: 90]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v58 
=== Succesors ===
next: v1364 
=== Usages ===
=== Predecessor ===
v1024 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v58 #next: v1364  <|@  <|@
f <@~|@floating>@ <|@
tid i1365 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -232219
stableDimension: 0
stamp: i32 [-232219] ⇊00000000fffc74e5 ⇈00000000fffc74e5
stampKind: i32
value: int[-232219|0xfffffffffffc74e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1357 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1364 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1354 
=== Predecessor ===
v1023 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B203"
    from_bci -1
    to_bci -1
    predecessors "B149" "B151" "B153" "B202" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1357 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-232219 - -228635] ⇊00000000fffc00e5 ⇈00000000fffcffed
valueDescription: i32
=== Inputs ===
merge: v1354 
values: i1356 i1361 i1363 i1365 
=== Succesors ===
=== Usages ===
v1359 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1354 values: i1356 i1361 i1363 i1365  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1354 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1355 v1360 v1362 v1364 
=== Succesors ===
next: v1359 
=== Usages ===
i1357 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1355 v1360 v1362 v1364 #next: v1359  <|@  <|@
f <@*|@fixed>@ <|@
tid v1359 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?60 
actionAndReason: i1357 
speculation: a1332 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1354 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?60 actionAndReason: i1357 speculation: a1332  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B204"
    from_bci -1
    to_bci -1
    predecessors "B145" 
    successors "B206" 
    xhandlers
    flags 
    probability 4588182886451812978
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v66 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2927) [bci: 100]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v58 
=== Succesors ===
next: v517 
=== Usages ===
=== Predecessor ===
v68 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v58 #next: v517  <|@  <|@
f <@*|@fixed>@ <|@
tid v517 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v518 
=== Predecessor ===
v66 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B205"
    from_bci -1
    to_bci -1
    predecessors "B142" 
    successors "B206" 
    xhandlers
    flags 
    probability 4580055924355621800
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v53 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2927) [bci: 100]
stamp: void
=== Inputs ===
=== Succesors ===
next: v519 
=== Usages ===
=== Predecessor ===
v55 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v519  <|@  <|@
f <@*|@fixed>@ <|@
tid v519 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v518 
=== Predecessor ===
v53 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B206"
    from_bci -1
    to_bci -1
    predecessors "B204" "B205" "B83" 
    successors "B207" "B213" 
    xhandlers
    flags 
    probability 4599068736976613850
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a520 <|@
d <@d|@=== Debug Properties ===
stamp: a!# [C
valueDescription: a -
=== Inputs ===
merge: v518 
values: a589 a1285 a637 
=== Succesors ===
=== Usages ===
v3093 v3091 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v518 values: a589 a1285 a637  <|@  <|@
f <@~|@floating>@ <|@
tid i521 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v518 
values: i590 i329 i319 
=== Succesors ===
=== Usages ===
j1948 v195 v199 i208 a1834 v1164 i1265 v1853 i1812 v1819 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v518 values: i590 i329 i319  <|@  <|@
f <@~|@floating>@ <|@
tid a727 <|@
d <@d|@=== Debug Properties ===
stamp: a!# Ljava/lang/StringBuilder;
valueDescription: a -
=== Inputs ===
merge: v518 
values: a715 a1080 a1071 
=== Succesors ===
=== Usages ===
?725 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v518 values: a715 a1080 a1071  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v518 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v517 v519 v734 
=== Succesors ===
next: v198 
=== Usages ===
a520 i521 a727 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v517 v519 v734 #next: v198  <|@  <|@
tid ?725 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a89 
materializedValue: a727 
=== Succesors ===
=== Usages ===
?73 
=== Predecessor ===
- >@ <|@
instruction <@MaterializedObjectState|@org.graalvm.compiler.virtual.nodes.MaterializedObjectState>@ object: a89 materializedValue: a727  <|@  <|@
tid ?73 <|@
d <@d|@=== Debug Properties ===
bci: 100
code: ResolvedJavaMethodBytecode<Formatter$FormatSpecifier.justify(String)>
duringCall: false
localsSize: 6
locksSize: 0
rethrowException: false
sourceFile: Formatter.java
sourceLine: 2927
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - a89 - - - 
virtualObjectMappings: ?725 
=== Succesors ===
=== Usages ===
v1373 a1876 a1780 a1834 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - a89 - - - virtualObjectMappings: ?725  <|@  <|@
f <@~|@floating>@ <|@
tid v195 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.String.<init>(String.java:194) [bci: 18]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2927) [bci: 101]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i521 
y: i47 
=== Succesors ===
=== Usages ===
v198 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i521 y: i47  <|@  <|@
f <@~|@floating>@ <|@
tid v1932 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1805 v1900 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1796 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/lang/String;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Ljava/lang/String;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
j1892 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1892 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
input: v1796 
=== Succesors ===
=== Usages ===
v3165 
=== Predecessor ===
- >@ <|@
instruction <@PointerCast|@org.graalvm.compiler.hotspot.word.PointerCastNode>@ input: v1796  <|@  <|@
f <@~|@floating>@ <|@
tid v3165 <|@
d <@d|@=== Debug Properties ===
displacement: 168
scale: Times1
stamp: void*
=== Inputs ===
base: j1892 
index: - 
=== Succesors ===
=== Usages ===
j1896 j1801 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1892 index: -  <|@  <|@
f <@*|@fixed>@ <|@
tid v198 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.<init>(String.java:194) [bci: 18]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2927) [bci: 101]
stamp: void
trueSuccessorProbability: 0.09284041465770032
=== Inputs ===
condition: v195 
=== Succesors ===
trueSuccessor: v196 
falseSuccessor: v197 
=== Usages ===
=== Predecessor ===
v518 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v195 #trueSuccessor: v196 #falseSuccessor: v197  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B207"
    from_bci -1
    to_bci -1
    predecessors "B206" 
    successors "B208" "B209" 
    xhandlers
    flags 
    probability 4583674350779409410
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v196 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.<init>(String.java:195) [bci: 21]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2927) [bci: 101]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1028 
=== Usages ===
=== Predecessor ===
v198 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1028  <|@  <|@
f <@~|@floating>@ <|@
tid v199 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.String.<init>(String.java:195) [bci: 22]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2927) [bci: 101]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i521 
y: i26 
=== Succesors ===
=== Usages ===
v1028 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i521 y: i26  <|@  <|@
f <@*|@fixed>@ <|@
tid v1028 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.<init>(String.java:195) [bci: 22]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2927) [bci: 101]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v199 
=== Succesors ===
trueSuccessor: v1027 
falseSuccessor: v1025 
=== Usages ===
=== Predecessor ===
v196 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v199 #trueSuccessor: v1027 #falseSuccessor: v1025  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B208"
    from_bci -1
    to_bci -1
    predecessors "B207" 
    successors "B215" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1027 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.<init>(String.java:195) [bci: 22]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2927) [bci: 101]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1369 
=== Usages ===
=== Predecessor ===
v1028 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1369  <|@  <|@
f <@~|@floating>@ <|@
tid i1370 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -234003
stableDimension: 0
stamp: i32 [-234003] ⇊00000000fffc6ded ⇈00000000fffc6ded
stampKind: i32
value: int[-234003|0xfffffffffffc6ded]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1371 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1369 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1368 
=== Predecessor ===
v1027 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B209"
    from_bci -1
    to_bci -1
    predecessors "B207" 
    successors "B210" "B211" 
    xhandlers
    flags 
    probability 4583674350779409410
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1025 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.<init>(String.java:195) [bci: 22]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2927) [bci: 101]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1769 
=== Usages ===
=== Predecessor ===
v1028 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j1769  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1769 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j1784 
=== Usages ===
v3150 v3151 
=== Predecessor ===
v1025 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j1784  <|@  <|@
f <@~|@floating>@ <|@
tid v3150 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j1769 
index: - 
=== Succesors ===
=== Usages ===
j1784 v1786 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1769 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1784 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v3150 
=== Succesors ===
next: j1785 
=== Usages ===
j1930 j1790 v3177 
=== Predecessor ===
j1769 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3150 #next: j1785  <|@  <|@
f <@~|@floating>@ <|@
tid v3151 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j1769 
index: - 
=== Succesors ===
=== Usages ===
j1785 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1769 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1785 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v3151 
=== Succesors ===
next: v1777 
=== Usages ===
v1774 
=== Predecessor ===
j1784 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3151 #next: v1777  <|@  <|@
f <@~|@floating>@ <|@
tid j1930 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1784 
y: j1919 
=== Succesors ===
=== Usages ===
v1774 v1786 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1784 y: j1919  <|@  <|@
f <@~|@floating>@ <|@
tid v1774 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1785 
y: j1930 
=== Succesors ===
=== Usages ===
v1777 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j1785 y: j1930  <|@  <|@
f <@*|@fixed>@ <|@
tid v1777 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v1774 
=== Succesors ===
trueSuccessor: v1775 
falseSuccessor: v1776 
=== Usages ===
=== Predecessor ===
j1785 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1774 #trueSuccessor: v1775 #falseSuccessor: v1776  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B210"
    from_bci -1
    to_bci -1
    predecessors "B209" 
    successors "B212" 
    xhandlers
    flags 
    probability 4553766586441631668
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1775 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a1780 
=== Usages ===
=== Predecessor ===
v1777 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1780  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1780 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?73 
arguments: v1391 i271 i47 
=== Succesors ===
next: j1781 
=== Usages ===
j1781 
=== Predecessor ===
v1775 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?73 arguments: v1391 i271 i47 #next: j1781  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1781 <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1780 
=== Succesors ===
next: v1791 
=== Usages ===
j1790 
=== Predecessor ===
a1780 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a1780 #next: v1791  <|@  <|@
f <@*|@fixed>@ <|@
tid v1791 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1788 
=== Predecessor ===
j1781 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B211"
    from_bci -1
    to_bci -1
    predecessors "B209" 
    successors "B212" 
    xhandlers
    flags 
    probability 4583594179485699555
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1776 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1786 
=== Usages ===
=== Predecessor ===
v1777 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1786  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1786 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3150 
value: j1930 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1783 
=== Usages ===
=== Predecessor ===
v1776 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3150 value: j1930 stateAfter: - lastLocationAccess: - #next: v1783  <|@  <|@
f <@~|@floating>@ <|@
tid v3177 <|@
d <@d|@=== Debug Properties ===
displacement: 216
scale: Times1
stamp: void*
=== Inputs ===
base: j1784 
index: - 
=== Succesors ===
=== Usages ===
v1783 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1784 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1783 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v3177 
=== Succesors ===
next: v1789 
=== Usages ===
=== Predecessor ===
v1786 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v3177 #next: v1789  <|@  <|@
f <@*|@fixed>@ <|@
tid v1789 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1788 
=== Predecessor ===
v1783 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B212"
    from_bci -1
    to_bci -1
    predecessors "B211" "B210" 
    successors 
    xhandlers
    flags 
    probability 4583674350779409410
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1790 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1788 
values: j1784 j1781 
=== Succesors ===
=== Usages ===
v3153 v3152 a1084 v3178 v3179 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1788 values: j1784 j1781  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1788 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1789 v1791 
=== Succesors ===
next: a1084 
=== Usages ===
j1790 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1789 v1791 #next: a1084  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1084 <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j1790 
=== Succesors ===
next: j1801 
=== Usages ===
a1090 
=== Predecessor ===
v1788 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j1790 #next: j1801  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1801 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v3165 
=== Succesors ===
next: v1802 
=== Usages ===
v1802 
=== Predecessor ===
a1084 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3165 #next: v1802  <|@  <|@
f <@~|@floating>@ <|@
tid v3152 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1790 
index: - 
=== Succesors ===
=== Usages ===
v1802 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1790 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1802 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3152 
value: j1801 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1805 
=== Usages ===
=== Predecessor ===
j1801 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3152 value: j1801 stateAfter: - lastLocationAccess: - #next: v1805  <|@  <|@
f <@~|@floating>@ <|@
tid v3153 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j1790 
index: - 
=== Succesors ===
=== Usages ===
v1805 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1790 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1805 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3153 
value: v1932 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1809 
=== Usages ===
=== Predecessor ===
v1802 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3153 value: v1932 stateAfter: - lastLocationAccess: - #next: v1809  <|@  <|@
f <@~|@floating>@ <|@
tid v3178 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j1790 
index: - 
=== Succesors ===
=== Usages ===
v1809 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1790 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a1103 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: char[0]{}
stableDimension: 1
stamp: n!# [C
stampKind: n -
value: NarrowOop[char[0]{}]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1809 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1809 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3178 
value: a1103 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1811 
=== Usages ===
=== Predecessor ===
v1805 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3178 value: a1103 stateAfter: - lastLocationAccess: - #next: v1811  <|@  <|@
f <@~|@floating>@ <|@
tid v3179 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j1790 
index: - 
=== Succesors ===
=== Usages ===
v1811 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1790 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1811 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3179 
value: i26 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a1090 
=== Usages ===
=== Predecessor ===
v1809 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3179 value: i26 stateAfter: - lastLocationAccess: - #next: a1090  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1090 <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a1084 
=== Succesors ===
next: v1091 
=== Usages ===
v242 
=== Predecessor ===
v1811 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a1084 #next: v1091  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1091 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v242 
=== Usages ===
=== Predecessor ===
a1090 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v242  <|@  <|@
f <@*|@fixed>@ <|@
tid v242 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
result: a1090 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1091 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a1090 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B213"
    from_bci -1
    to_bci -1
    predecessors "B206" 
    successors "B214" "B216" 
    xhandlers
    flags 
    probability 4598567666390927258
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v197 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.<init>(String.java:204) [bci: 50]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2927) [bci: 101]
stamp: void
=== Inputs ===
=== Succesors ===
next: i3067 
=== Usages ===
=== Predecessor ===
v198 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i3067  <|@  <|@
f <@~|@floating>@ <|@
tid v3091 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a520 
index: - 
=== Succesors ===
=== Usages ===
i3067 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a520 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i3067 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.lang.String.<init>(String.java:204) [bci: 52]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2927) [bci: 101]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v3091 
=== Succesors ===
next: v1032 
=== Usages ===
i208 i1265 v1164 
=== Predecessor ===
v197 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3091 #next: v1032  <|@  <|@
f <@~|@floating>@ <|@
tid i208 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at java.lang.String.<init>(String.java:204) [bci: 54]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2927) [bci: 101]
stamp: i32
=== Inputs ===
x: i3067 
y: i521 
=== Succesors ===
=== Usages ===
v209 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i3067 y: i521  <|@  <|@
f <@~|@floating>@ <|@
tid v209 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.String.<init>(String.java:204) [bci: 55]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2927) [bci: 101]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i208 
y: i26 
=== Succesors ===
=== Usages ===
v1032 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i208 y: i26  <|@  <|@
f <@*|@fixed>@ <|@
tid v1032 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.<init>(String.java:204) [bci: 55]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2927) [bci: 101]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v209 
=== Succesors ===
trueSuccessor: v1031 
falseSuccessor: v1029 
=== Usages ===
=== Predecessor ===
i3067 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v209 #trueSuccessor: v1031 #falseSuccessor: v1029  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B214"
    from_bci -1
    to_bci -1
    predecessors "B213" 
    successors "B215" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1031 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.<init>(String.java:204) [bci: 55]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2927) [bci: 101]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1374 
=== Usages ===
=== Predecessor ===
v1032 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1374  <|@  <|@
f <@~|@floating>@ <|@
tid i1375 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -235027
stableDimension: 0
stamp: i32 [-235027] ⇊00000000fffc69ed ⇈00000000fffc69ed
stampKind: i32
value: int[-235027|0xfffffffffffc69ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1371 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1374 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1368 
=== Predecessor ===
v1031 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B215"
    from_bci -1
    to_bci -1
    predecessors "B208" "B214" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1371 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-235027 - -234003] ⇊00000000fffc69ed ⇈00000000fffc6ded
valueDescription: i32
=== Inputs ===
merge: v1368 
values: i1370 i1375 
=== Succesors ===
=== Usages ===
v1373 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1368 values: i1370 i1375  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1368 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1369 v1374 
=== Succesors ===
next: v1373 
=== Usages ===
i1371 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1369 v1374 #next: v1373  <|@  <|@
f <@*|@fixed>@ <|@
tid v1373 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?73 
actionAndReason: i1371 
speculation: a1332 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1368 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?73 actionAndReason: i1371 speculation: a1332  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B216"
    from_bci -1
    to_bci -1
    predecessors "B213" 
    successors "B217" "B220" 
    xhandlers
    flags 
    probability 4598567666390927258
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1029 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.<init>(String.java:204) [bci: 55]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2927) [bci: 101]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1814 
=== Usages ===
=== Predecessor ===
v1032 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j1814  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1814 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:772) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:319) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2927) [bci: 101]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j1850 
=== Usages ===
v3154 v3155 
=== Predecessor ===
v1029 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j1850  <|@  <|@
f <@~|@floating>@ <|@
tid v3154 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j1814 
index: - 
=== Succesors ===
=== Usages ===
j1850 v1852 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1814 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1850 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:245) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:320) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2927) [bci: 101]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v3154 
=== Succesors ===
next: j1851 
=== Usages ===
j1818 v3156 v3157 a1833 v3162 v3158 v3159 v3160 v3161 
=== Predecessor ===
j1814 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3154 #next: j1851  <|@  <|@
f <@~|@floating>@ <|@
tid v3155 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j1814 
index: - 
=== Succesors ===
=== Usages ===
j1851 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1814 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1851 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:249) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:321) [bci: 25]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2927) [bci: 101]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v3155 
=== Succesors ===
next: v1822 
=== Usages ===
v1823 
=== Predecessor ===
j1850 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3155 #next: v1822  <|@  <|@
f <@~|@floating>@ <|@
tid v1819 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.core.common.calc.UnsignedMath.belowThan(int, int) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 50]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2927) [bci: 101]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i521 
y: i1489 
=== Succesors ===
=== Usages ===
v1822 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i521 y: i1489  <|@  <|@
f <@*|@fixed>@ <|@
tid v1822 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 64]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2927) [bci: 101]
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v1819 
=== Succesors ===
trueSuccessor: v1821 
falseSuccessor: v1820 
=== Usages ===
=== Predecessor ===
j1851 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1819 #trueSuccessor: v1821 #falseSuccessor: v1820  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B217"
    from_bci -1
    to_bci -1
    predecessors "B216" 
    successors "B218" "B219" 
    xhandlers
    flags 
    probability 4597980903941973833
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1821 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 67]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2927) [bci: 101]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1829 
=== Usages ===
=== Predecessor ===
v1822 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1829  <|@  <|@
f <@~|@floating>@ <|@
tid i1812 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 8]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2927) [bci: 101]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i521 
y: i47 
=== Succesors ===
=== Usages ===
i1841 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i521 y: i47  <|@  <|@
f <@~|@floating>@ <|@
tid i1841 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2927) [bci: 101]
stamp: i32 [-2147483647 - 2147483647] ⇊0000000000000001
=== Inputs ===
x: i1812 
y: i1512 
=== Succesors ===
=== Usages ===
i1813 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1812 y: i1512  <|@  <|@
f <@~|@floating>@ <|@
tid i1813 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:604) [bci: 30]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2927) [bci: 101]
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i1841 
y: i1482 
=== Succesors ===
=== Usages ===
j1817 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i1841 y: i1482  <|@  <|@
f <@~|@floating>@ <|@
tid j1817 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2927) [bci: 101]
resultBits: 64
stamp: i64 [-2147483648 - 2147483640] ⇈fffffffffffffff8
=== Inputs ===
value: i1813 
=== Succesors ===
=== Usages ===
j1818 v3158 v3159 v3160 v3161 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i1813  <|@  <|@
f <@~|@floating>@ <|@
tid j1818 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2927) [bci: 101]
stamp: i64
=== Inputs ===
x: j1817 
y: j1850 
=== Succesors ===
=== Usages ===
v1823 v1852 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1817 y: j1850  <|@  <|@
f <@~|@floating>@ <|@
tid v1823 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 83]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2927) [bci: 101]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1851 
y: j1818 
=== Succesors ===
=== Usages ===
v1829 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j1851 y: j1818  <|@  <|@
f <@*|@fixed>@ <|@
tid v1829 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 89]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2927) [bci: 101]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v1823 
=== Succesors ===
trueSuccessor: v1828 
falseSuccessor: v1827 
=== Usages ===
=== Predecessor ===
v1821 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1823 #trueSuccessor: v1828 #falseSuccessor: v1827  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B218"
    from_bci -1
    to_bci -1
    predecessors "B217" 
    successors "B221" 
    xhandlers
    flags 
    probability 4567786668063233035
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1828 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2927) [bci: 101]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1826 
=== Usages ===
=== Predecessor ===
v1829 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1826  <|@  <|@
f <@*|@fixed>@ <|@
tid v1826 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2927) [bci: 101]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1825 
=== Predecessor ===
v1828 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B219"
    from_bci -1
    to_bci -1
    predecessors "B217" 
    successors "B222" 
    xhandlers
    flags 
    probability 4597892775105459449
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1827 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 92]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2927) [bci: 101]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1852 
=== Usages ===
=== Predecessor ===
v1829 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1852  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1852 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:257) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 96]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2927) [bci: 101]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3154 
value: j1818 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1843 
=== Usages ===
=== Predecessor ===
v1827 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3154 value: j1818 stateAfter: - lastLocationAccess: - #next: v1843  <|@  <|@
f <@~|@floating>@ <|@
tid v3158 <|@
d <@d|@=== Debug Properties ===
displacement: 192
scale: Times1
stamp: void*
=== Inputs ===
base: j1817 
index: j1850 
=== Succesors ===
=== Usages ===
v1843 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1817 index: j1850  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1843 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2927) [bci: 101]
stamp: void
=== Inputs ===
address: v3158 
=== Succesors ===
next: v1845 
=== Usages ===
=== Predecessor ===
v1852 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v3158 #next: v1845  <|@  <|@
f <@~|@floating>@ <|@
tid v3159 <|@
d <@d|@=== Debug Properties ===
displacement: 256
scale: Times1
stamp: void*
=== Inputs ===
base: j1817 
index: j1850 
=== Succesors ===
=== Usages ===
v1845 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1817 index: j1850  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1845 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2927) [bci: 101]
stamp: void
=== Inputs ===
address: v3159 
=== Succesors ===
next: v1847 
=== Usages ===
=== Predecessor ===
v1843 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v3159 #next: v1847  <|@  <|@
f <@~|@floating>@ <|@
tid v3160 <|@
d <@d|@=== Debug Properties ===
displacement: 320
scale: Times1
stamp: void*
=== Inputs ===
base: j1817 
index: j1850 
=== Succesors ===
=== Usages ===
v1847 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1817 index: j1850  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1847 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2927) [bci: 101]
stamp: void
=== Inputs ===
address: v3160 
=== Succesors ===
next: v1849 
=== Usages ===
=== Predecessor ===
v1845 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v3160 #next: v1849  <|@  <|@
f <@~|@floating>@ <|@
tid v3161 <|@
d <@d|@=== Debug Properties ===
displacement: 384
scale: Times1
stamp: void*
=== Inputs ===
base: j1817 
index: j1850 
=== Succesors ===
=== Usages ===
v1849 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1817 index: j1850  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1849 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2927) [bci: 101]
stamp: void
=== Inputs ===
address: v3161 
=== Succesors ===
next: v1853 
=== Usages ===
=== Predecessor ===
v1847 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v3161 #next: v1853  <|@  <|@
f <@~|@floating>@ <|@
tid v3156 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j1850 
index: - 
=== Succesors ===
=== Usages ===
v1853 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1850 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1853 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:549) [bci: 12]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2927) [bci: 101]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3156 
value: i521 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1854 
=== Usages ===
=== Predecessor ===
v1849 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3156 value: i521 stateAfter: - lastLocationAccess: - #next: v1854  <|@  <|@
f <@~|@floating>@ <|@
tid v3157 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1850 
index: - 
=== Succesors ===
=== Usages ===
v1854 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1850 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1854 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:469) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2927) [bci: 101]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3157 
value: j1425 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1857 
=== Usages ===
=== Predecessor ===
v1853 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3157 value: j1425 stateAfter: - lastLocationAccess: - #next: v1857  <|@  <|@
f <@~|@floating>@ <|@
tid v3162 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j1850 
index: - 
=== Succesors ===
=== Usages ===
v1857 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1850 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1857 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2927) [bci: 101]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3162 
value: v1913 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1832 
=== Usages ===
=== Predecessor ===
v1854 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3162 value: v1913 stateAfter: - lastLocationAccess: - #next: v1832  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1832 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.MembarNode.memoryBarrier(int, LocationIdentity) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:560) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2927) [bci: 101]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1833 
=== Usages ===
=== Predecessor ===
v1857 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a1833  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1833 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:561) [bci: 71]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2927) [bci: 101]
stamp: a! -
trackedPointer: true
=== Inputs ===
input: j1850 
=== Succesors ===
next: v1835 
=== Usages ===
a1838 
=== Predecessor ===
v1832 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j1850 #next: v1835  <|@  <|@
f <@*|@fixed>@ <|@
tid v1835 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2927) [bci: 101]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1836 
=== Predecessor ===
a1833 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B220"
    from_bci -1
    to_bci -1
    predecessors "B216" 
    successors "B221" 
    xhandlers
    flags 
    probability 4583490895765258075
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1820 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2927) [bci: 101]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1824 
=== Usages ===
=== Predecessor ===
v1822 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1824  <|@  <|@
f <@*|@fixed>@ <|@
tid v1824 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2927) [bci: 101]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1825 
=== Predecessor ===
v1820 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B221"
    from_bci -1
    to_bci -1
    predecessors "B220" "B218" 
    successors "B222" 
    xhandlers
    flags 
    probability 4584195926457373148
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1825 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2927) [bci: 101]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1824 v1826 
=== Succesors ===
next: a1834 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1824 v1826 #next: a1834  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1834 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.newArray(ForeignCallDescriptor, KlassPointer, int, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 155]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2927) [bci: 101]
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?73 
arguments: v1424 i521 i26 
=== Succesors ===
next: v1837 
=== Usages ===
a1838 
=== Predecessor ===
v1825 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?73 arguments: v1424 i521 i26 #next: v1837  <|@  <|@
f <@*|@fixed>@ <|@
tid v1837 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2927) [bci: 101]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1836 
=== Predecessor ===
a1834 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B222"
    from_bci -1
    to_bci -1
    predecessors "B219" "B221" 
    successors "B223" "B224" 
    xhandlers
    flags 
    probability 4598567666390927258
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a1838 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2927) [bci: 101]
stamp: a! -
valueDescription: a -
=== Inputs ===
merge: v1836 
values: a1833 a1834 
=== Succesors ===
=== Usages ===
v3184 a1277 v3097 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1836 values: a1833 a1834  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1836 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2927) [bci: 101]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1835 v1837 
=== Succesors ===
next: v2611 
=== Usages ===
a1838 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1835 v1837 #next: v2611  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2611 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v2102 
=== Usages ===
j2612 j2614 
=== Predecessor ===
v1836 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v2102  <|@  <|@
f <@~|@floating>@ <|@
tid v1164 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Math.min(Math.java:1336) [bci: 2]
at com.oracle.graal.enterprise.T.c.b(stripped:192) [bci: 4]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:102) [bci: 9]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2927) [bci: 101]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3067 
y: i521 
=== Succesors ===
=== Usages ===
i1265 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i3067 y: i521  <|@  <|@
f <@~|@floating>@ <|@
tid i1265 <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
condition: v1164 
trueValue: i3067 
falseValue: i521 
=== Succesors ===
=== Usages ===
j1949 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v1164 trueValue: i3067 falseValue: i521  <|@  <|@
f <@~|@floating>@ <|@
tid j1949 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i1265 
=== Succesors ===
=== Usages ===
j2669 v3184 j1953 v2099 v2484 j2655 j2660 j2663 j2666 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i1265  <|@  <|@
f <@~|@floating>@ <|@
tid v2099 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1949 
y: j1425 
=== Succesors ===
=== Usages ===
v2102 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1949 y: j1425  <|@  <|@
f <@*|@fixed>@ <|@
tid v2102 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v2099 
=== Succesors ===
trueSuccessor: v2100 
falseSuccessor: v2101 
=== Usages ===
=== Predecessor ===
v2611 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2099 #trueSuccessor: v2100 #falseSuccessor: v2101  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B223"
    from_bci -1
    to_bci -1
    predecessors "B222" 
    successors "B241" 
    xhandlers
    flags 
    probability 4594064066763556762
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2100 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2118 
=== Usages ===
=== Predecessor ===
v2102 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2118  <|@  <|@
f <@*|@fixed>@ <|@
tid v2118 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2119 
=== Predecessor ===
v2100 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B224"
    from_bci -1
    to_bci -1
    predecessors "B222" 
    successors "B225" "B226" 
    xhandlers
    flags 
    probability 4594064066763556762
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2101 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2105 
=== Usages ===
=== Predecessor ===
v2102 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2105  <|@  <|@
f <@~|@floating>@ <|@
tid v3097 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1838 
index: - 
=== Succesors ===
=== Usages ===
j2614 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1838 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j2614 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v2611 
address: v3097 
=== Succesors ===
=== Usages ===
v3202 v3204 v3206 v3208 v3210 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v2611 address: v3097  <|@  <|@
f <@~|@floating>@ <|@
tid v3093 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a520 
index: - 
=== Succesors ===
=== Usages ===
j2612 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a520 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j2612 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v2611 
address: v3093 
=== Succesors ===
=== Usages ===
v3203 v3205 v3207 v3209 v3211 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v2611 address: v3093  <|@  <|@
f <@~|@floating>@ <|@
tid j2655 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483664 - 2147483631]
=== Inputs ===
x: j1949 
y: j2537 
=== Succesors ===
=== Usages ===
v2656 v2658 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1949 y: j2537  <|@  <|@
f <@~|@floating>@ <|@
tid v2656 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2655 
y: j1034 
=== Succesors ===
=== Usages ===
v2105 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2655 y: j1034  <|@  <|@
f <@*|@fixed>@ <|@
tid v2105 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v2656 
=== Succesors ===
trueSuccessor: v2103 
falseSuccessor: v2104 
=== Usages ===
=== Predecessor ===
v2101 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2656 #trueSuccessor: v2103 #falseSuccessor: v2104  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B225"
    from_bci -1
    to_bci -1
    predecessors "B224" 
    successors "B229" 
    xhandlers
    flags 
    probability 4592008490372696935
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2103 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2114 
=== Usages ===
=== Predecessor ===
v2105 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2114  <|@  <|@
f <@*|@fixed>@ <|@
tid v2114 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2115 
=== Predecessor ===
v2103 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B226"
    from_bci -1
    to_bci -1
    predecessors "B224" 
    successors "B227" 
    xhandlers
    flags 
    probability 4585056867508815770
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2104 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2106 
=== Usages ===
=== Predecessor ===
v2105 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2106  <|@  <|@
f <@*|@fixed>@ <|@
tid v2106 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2107 
=== Predecessor ===
v2104 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B227"
    from_bci -1
    to_bci -1
    predecessors "B226" "B265" 
    successors "B228" "B265" 
    xhandlers
    flags "llh" 
    loop_index 8
    loop_depth 1
    probability 4594064066763556762
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j2647 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2107 
values: j1034 j2654 
=== Succesors ===
=== Usages ===
v3211 j2654 v3210 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2107 values: j1034 j2654  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2107 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v2106 
=== Succesors ===
next: v3068 
=== Usages ===
v3068 v2110 v2111 j2647 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v2106 #next: v3068  <|@  <|@
f <@~|@floating>@ <|@
tid v3211 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j2612 
index: j2647 
=== Succesors ===
=== Usages ===
v3068 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2612 index: j2647  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3068 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16>
=== Inputs ===
stateBefore: - 
guard: v2107 
address: v3211 
=== Succesors ===
next: v2999 
=== Usages ===
v2999 
=== Predecessor ===
v2107 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v2107 address: v3211 #next: v2999  <|@  <|@
f <@~|@floating>@ <|@
tid v3210 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j2614 
index: j2647 
=== Succesors ===
=== Usages ===
v2999 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2614 index: j2647  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2999 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3210 
value: v3068 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2113 
=== Usages ===
=== Predecessor ===
v3068 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3210 value: v3068 stateAfter: - lastLocationAccess: - #next: v2113  <|@  <|@
f <@~|@floating>@ <|@
tid j2654 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j2647 
y: j739 
=== Succesors ===
=== Usages ===
j2639 j2647 v2658 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2647 y: j739  <|@  <|@
f <@~|@floating>@ <|@
tid v2658 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2655 
y: j2654 
=== Succesors ===
=== Usages ===
v2113 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2655 y: j2654  <|@  <|@
f <@*|@fixed>@ <|@
tid v2113 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v2658 
=== Succesors ===
trueSuccessor: v2110 
falseSuccessor: v2112 
=== Usages ===
=== Predecessor ===
v2999 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2658 #trueSuccessor: v2110 #falseSuccessor: v2112  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B228"
    from_bci -1
    to_bci -1
    predecessors "B227" 
    successors "B229" 
    xhandlers
    flags 
    probability 4585056867508815770
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2110 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v2107 
=== Succesors ===
next: v2116 
=== Usages ===
=== Predecessor ===
v2113 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v2107 #next: v2116  <|@  <|@
f <@*|@fixed>@ <|@
tid v2116 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2115 
=== Predecessor ===
v2110 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B229"
    from_bci -1
    to_bci -1
    predecessors "B225" "B228" 
    successors "B230" "B231" 
    xhandlers
    flags 
    probability 4594064066763556762
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j2639 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2115 
values: j1034 j2654 
=== Succesors ===
=== Usages ===
v3209 j2646 j2631 v2661 v3208 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2115 values: j1034 j2654  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2115 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2114 v2116 
=== Succesors ===
next: v2137 
=== Usages ===
j2639 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2114 v2116 #next: v2137  <|@  <|@
f <@~|@floating>@ <|@
tid j2660 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483656 - 2147483639]
=== Inputs ===
x: j1949 
y: j2543 
=== Succesors ===
=== Usages ===
v2661 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1949 y: j2543  <|@  <|@
f <@~|@floating>@ <|@
tid v2661 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2660 
y: j2639 
=== Succesors ===
=== Usages ===
v2137 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2660 y: j2639  <|@  <|@
f <@*|@fixed>@ <|@
tid v2137 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v2661 
=== Succesors ===
trueSuccessor: v2136 
falseSuccessor: v2135 
=== Usages ===
=== Predecessor ===
v2115 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2661 #trueSuccessor: v2136 #falseSuccessor: v2135  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B230"
    from_bci -1
    to_bci -1
    predecessors "B229" 
    successors "B232" 
    xhandlers
    flags 
    probability 4585056867508815770
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2136 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2140 
=== Usages ===
=== Predecessor ===
v2137 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2140  <|@  <|@
f <@*|@fixed>@ <|@
tid v2140 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2126 
=== Predecessor ===
v2136 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B231"
    from_bci -1
    to_bci -1
    predecessors "B229" 
    successors "B232" 
    xhandlers
    flags 
    probability 4592008490372696935
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2135 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3069 
=== Usages ===
v3069 
=== Predecessor ===
v2137 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3069  <|@  <|@
f <@~|@floating>@ <|@
tid v3209 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j2612 
index: j2639 
=== Succesors ===
=== Usages ===
v3069 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2612 index: j2639  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3069 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16,i16,i16,i16,i16,i16,i16>
=== Inputs ===
stateBefore: - 
guard: v2135 
address: v3209 
=== Succesors ===
next: v2997 
=== Usages ===
v2997 
=== Predecessor ===
v2135 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v2135 address: v3209 #next: v2997  <|@  <|@
f <@~|@floating>@ <|@
tid v3208 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j2614 
index: j2639 
=== Succesors ===
=== Usages ===
v2997 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2614 index: j2639  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2997 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3208 
value: v3069 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2125 
=== Usages ===
=== Predecessor ===
v3069 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3208 value: v3069 stateAfter: - lastLocationAccess: - #next: v2125  <|@  <|@
f <@~|@floating>@ <|@
tid j2646 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j2639 
y: j1432 
=== Succesors ===
=== Usages ===
j2631 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2639 y: j1432  <|@  <|@
f <@*|@fixed>@ <|@
tid v2125 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2126 
=== Predecessor ===
v2997 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B232"
    from_bci -1
    to_bci -1
    predecessors "B231" "B230" 
    successors "B233" "B234" 
    xhandlers
    flags 
    probability 4594064066763556762
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j2631 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2126 
values: j2646 j2639 
=== Succesors ===
=== Usages ===
v3207 j2638 j2623 v2664 v3206 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2126 values: j2646 j2639  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2126 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2125 v2140 
=== Succesors ===
next: v2143 
=== Usages ===
j2631 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2125 v2140 #next: v2143  <|@  <|@
f <@~|@floating>@ <|@
tid j2663 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483652 - 2147483643]
=== Inputs ===
x: j1949 
y: j2547 
=== Succesors ===
=== Usages ===
v2664 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1949 y: j2547  <|@  <|@
f <@~|@floating>@ <|@
tid v2664 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2663 
y: j2631 
=== Succesors ===
=== Usages ===
v2143 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2663 y: j2631  <|@  <|@
f <@*|@fixed>@ <|@
tid v2143 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v2664 
=== Succesors ===
trueSuccessor: v2142 
falseSuccessor: v2141 
=== Usages ===
=== Predecessor ===
v2126 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2664 #trueSuccessor: v2142 #falseSuccessor: v2141  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B233"
    from_bci -1
    to_bci -1
    predecessors "B232" 
    successors "B235" 
    xhandlers
    flags 
    probability 4585056867508815770
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2142 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2146 
=== Usages ===
=== Predecessor ===
v2143 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2146  <|@  <|@
f <@*|@fixed>@ <|@
tid v2146 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2129 
=== Predecessor ===
v2142 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B234"
    from_bci -1
    to_bci -1
    predecessors "B232" 
    successors "B235" 
    xhandlers
    flags 
    probability 4592008490372696935
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2141 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3070 
=== Usages ===
v3070 
=== Predecessor ===
v2143 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3070  <|@  <|@
f <@~|@floating>@ <|@
tid v3207 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j2612 
index: j2631 
=== Succesors ===
=== Usages ===
v3070 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2612 index: j2631  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3070 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16,i16,i16>
=== Inputs ===
stateBefore: - 
guard: v2141 
address: v3207 
=== Succesors ===
next: v2995 
=== Usages ===
v2995 
=== Predecessor ===
v2141 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v2141 address: v3207 #next: v2995  <|@  <|@
f <@~|@floating>@ <|@
tid v3206 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j2614 
index: j2631 
=== Succesors ===
=== Usages ===
v2995 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2614 index: j2631  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2995 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3206 
value: v3070 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2128 
=== Usages ===
=== Predecessor ===
v3070 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3206 value: v3070 stateAfter: - lastLocationAccess: - #next: v2128  <|@  <|@
f <@~|@floating>@ <|@
tid j2638 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j2631 
y: j2519 
=== Succesors ===
=== Usages ===
j2623 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2631 y: j2519  <|@  <|@
f <@*|@fixed>@ <|@
tid v2128 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2129 
=== Predecessor ===
v2995 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B235"
    from_bci -1
    to_bci -1
    predecessors "B234" "B233" 
    successors "B236" "B237" 
    xhandlers
    flags 
    probability 4594064066763556762
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j2623 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2129 
values: j2638 j2631 
=== Succesors ===
=== Usages ===
v3205 j2630 j2615 v2667 v3204 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2129 values: j2638 j2631  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2129 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2128 v2146 
=== Succesors ===
next: v2149 
=== Usages ===
j2623 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2128 v2146 #next: v2149  <|@  <|@
f <@~|@floating>@ <|@
tid j2666 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483650 - 2147483645]
=== Inputs ===
x: j1949 
y: j2551 
=== Succesors ===
=== Usages ===
v2667 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1949 y: j2551  <|@  <|@
f <@~|@floating>@ <|@
tid v2667 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2666 
y: j2623 
=== Succesors ===
=== Usages ===
v2149 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2666 y: j2623  <|@  <|@
f <@*|@fixed>@ <|@
tid v2149 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v2667 
=== Succesors ===
trueSuccessor: v2148 
falseSuccessor: v2147 
=== Usages ===
=== Predecessor ===
v2129 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2667 #trueSuccessor: v2148 #falseSuccessor: v2147  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B236"
    from_bci -1
    to_bci -1
    predecessors "B235" 
    successors "B238" 
    xhandlers
    flags 
    probability 4585056867508815770
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2148 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2152 
=== Usages ===
=== Predecessor ===
v2149 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2152  <|@  <|@
f <@*|@fixed>@ <|@
tid v2152 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2132 
=== Predecessor ===
v2148 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B237"
    from_bci -1
    to_bci -1
    predecessors "B235" 
    successors "B238" 
    xhandlers
    flags 
    probability 4592008490372696935
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2147 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3071 
=== Usages ===
v3071 
=== Predecessor ===
v2149 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3071  <|@  <|@
f <@~|@floating>@ <|@
tid v3205 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j2612 
index: j2623 
=== Succesors ===
=== Usages ===
v3071 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2612 index: j2623  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3071 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16>
=== Inputs ===
stateBefore: - 
guard: v2147 
address: v3205 
=== Succesors ===
next: v2993 
=== Usages ===
v2993 
=== Predecessor ===
v2147 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v2147 address: v3205 #next: v2993  <|@  <|@
f <@~|@floating>@ <|@
tid v3204 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j2614 
index: j2623 
=== Succesors ===
=== Usages ===
v2993 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2614 index: j2623  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2993 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3204 
value: v3071 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2131 
=== Usages ===
=== Predecessor ===
v3071 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3204 value: v3071 stateAfter: - lastLocationAccess: - #next: v2131  <|@  <|@
f <@~|@floating>@ <|@
tid j2630 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j2623 
y: j2497 
=== Succesors ===
=== Usages ===
j2615 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2623 y: j2497  <|@  <|@
f <@*|@fixed>@ <|@
tid v2131 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2132 
=== Predecessor ===
v2993 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B238"
    from_bci -1
    to_bci -1
    predecessors "B237" "B236" 
    successors "B239" "B240" 
    xhandlers
    flags 
    probability 4594064066763556762
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j2615 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2132 
values: j2630 j2623 
=== Succesors ===
=== Usages ===
v3203 v2670 v3202 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2132 values: j2630 j2623  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2132 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2131 v2152 
=== Succesors ===
next: v2155 
=== Usages ===
j2615 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2131 v2152 #next: v2155  <|@  <|@
f <@~|@floating>@ <|@
tid j2669 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483649 - 2147483646]
=== Inputs ===
x: j1949 
y: j2555 
=== Succesors ===
=== Usages ===
v2670 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1949 y: j2555  <|@  <|@
f <@~|@floating>@ <|@
tid v2670 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2669 
y: j2615 
=== Succesors ===
=== Usages ===
v2155 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2669 y: j2615  <|@  <|@
f <@*|@fixed>@ <|@
tid v2155 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v2670 
=== Succesors ===
trueSuccessor: v2154 
falseSuccessor: v2153 
=== Usages ===
=== Predecessor ===
v2132 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2670 #trueSuccessor: v2154 #falseSuccessor: v2153  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B239"
    from_bci -1
    to_bci -1
    predecessors "B238" 
    successors "B241" 
    xhandlers
    flags 
    probability 4585056867508815770
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2154 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2158 
=== Usages ===
=== Predecessor ===
v2155 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2158  <|@  <|@
f <@*|@fixed>@ <|@
tid v2158 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2119 
=== Predecessor ===
v2154 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B240"
    from_bci -1
    to_bci -1
    predecessors "B238" 
    successors "B241" 
    xhandlers
    flags 
    probability 4592008490372696935
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2153 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: i3072 
=== Usages ===
i3072 
=== Predecessor ===
v2155 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i3072  <|@  <|@
f <@~|@floating>@ <|@
tid v3203 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j2612 
index: j2615 
=== Succesors ===
=== Usages ===
i3072 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2612 index: j2615  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i3072 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: v2153 
address: v3203 
=== Succesors ===
next: v2991 
=== Usages ===
v2991 
=== Predecessor ===
v2153 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v2153 address: v3203 #next: v2991  <|@  <|@
f <@~|@floating>@ <|@
tid v3202 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j2614 
index: j2615 
=== Succesors ===
=== Usages ===
v2991 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2614 index: j2615  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2991 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3202 
value: i3072 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2134 
=== Usages ===
=== Predecessor ===
i3072 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3202 value: i3072 stateAfter: - lastLocationAccess: - #next: v2134  <|@  <|@
f <@*|@fixed>@ <|@
tid v2134 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2119 
=== Predecessor ===
v2991 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B241"
    from_bci -1
    to_bci -1
    predecessors "B223" "B240" "B239" 
    successors "B242" "B260" 
    xhandlers
    flags 
    probability 4598567666390927258
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2119 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2118 v2134 v2158 
=== Succesors ===
next: v2673 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2118 v2134 v2158 #next: v2673  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2673 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v2165 
=== Usages ===
j2675 
=== Predecessor ===
v2119 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v2165  <|@  <|@
f <@~|@floating>@ <|@
tid j1948 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i521 
=== Succesors ===
=== Usages ===
j1953 v2484 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i521  <|@  <|@
f <@~|@floating>@ <|@
tid v2484 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1949 
y: j1948 
=== Succesors ===
=== Usages ===
v2165 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1949 y: j1948  <|@  <|@
f <@*|@fixed>@ <|@
tid v2165 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v2484 
=== Succesors ===
trueSuccessor: v2164 
falseSuccessor: v2163 
=== Usages ===
=== Predecessor ===
v2673 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2484 #trueSuccessor: v2164 #falseSuccessor: v2163  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B242"
    from_bci -1
    to_bci -1
    predecessors "B241" 
    successors "B243" "B244" 
    xhandlers
    flags 
    probability 4594064066763556762
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2164 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2168 
=== Usages ===
=== Predecessor ===
v2165 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2168  <|@  <|@
f <@~|@floating>@ <|@
tid v3184 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a1838 
index: j1949 
=== Succesors ===
=== Usages ===
j2675 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1838 index: j1949  <|@  <|@
f <@~|@floating>@ <|@
tid j2675 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v2673 
address: v3184 
=== Succesors ===
=== Usages ===
v3212 v3213 v3214 v3215 v3216 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v2673 address: v3184  <|@  <|@
f <@~|@floating>@ <|@
tid j1953 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
stamp: i64 [-4294967295 - 4294967295]
=== Inputs ===
x: j1948 
y: j1949 
=== Succesors ===
=== Usages ===
j2720 j2706 j2711 j2714 j2717 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j1948 y: j1949  <|@  <|@
f <@~|@floating>@ <|@
tid j2706 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967311 - 4294967279]
=== Inputs ===
x: j1953 
y: j2537 
=== Succesors ===
=== Usages ===
v2707 v2709 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1953 y: j2537  <|@  <|@
f <@~|@floating>@ <|@
tid v2707 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2706 
y: j1034 
=== Succesors ===
=== Usages ===
v2168 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2706 y: j1034  <|@  <|@
f <@*|@fixed>@ <|@
tid v2168 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v2707 
=== Succesors ===
trueSuccessor: v2166 
falseSuccessor: v2167 
=== Usages ===
=== Predecessor ===
v2164 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2707 #trueSuccessor: v2166 #falseSuccessor: v2167  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B243"
    from_bci -1
    to_bci -1
    predecessors "B242" 
    successors "B247" 
    xhandlers
    flags 
    probability 4592008490372696935
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2166 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2177 
=== Usages ===
=== Predecessor ===
v2168 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2177  <|@  <|@
f <@*|@fixed>@ <|@
tid v2177 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2178 
=== Predecessor ===
v2166 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B244"
    from_bci -1
    to_bci -1
    predecessors "B242" 
    successors "B245" 
    xhandlers
    flags 
    probability 4585056867508815770
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2167 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2169 
=== Usages ===
=== Predecessor ===
v2168 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2169  <|@  <|@
f <@*|@fixed>@ <|@
tid v2169 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2170 
=== Predecessor ===
v2167 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B245"
    from_bci -1
    to_bci -1
    predecessors "B244" "B259" 
    successors "B246" "B259" 
    xhandlers
    flags "llh" 
    loop_index 9
    loop_depth 1
    probability 4594064066763556762
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j2700 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2170 
values: j1034 j2705 
=== Succesors ===
=== Usages ===
v3216 j2705 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2170 values: j1034 j2705  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2170 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v2169 
=== Succesors ===
next: v3004 
=== Usages ===
j2700 v2173 v2174 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v2169 #next: v3004  <|@  <|@
f <@~|@floating>@ <|@
tid v3216 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j2675 
index: j2700 
=== Succesors ===
=== Usages ===
v3004 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2675 index: j2700  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3004 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3216 
value: v3035 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2176 
=== Usages ===
=== Predecessor ===
v2170 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3216 value: v3035 stateAfter: - lastLocationAccess: - #next: v2176  <|@  <|@
f <@~|@floating>@ <|@
tid j2705 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j2700 
y: j739 
=== Succesors ===
=== Usages ===
j2694 j2700 v2709 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2700 y: j739  <|@  <|@
f <@~|@floating>@ <|@
tid v2709 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2706 
y: j2705 
=== Succesors ===
=== Usages ===
v2176 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2706 y: j2705  <|@  <|@
f <@*|@fixed>@ <|@
tid v2176 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v2709 
=== Succesors ===
trueSuccessor: v2173 
falseSuccessor: v2175 
=== Usages ===
=== Predecessor ===
v3004 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2709 #trueSuccessor: v2173 #falseSuccessor: v2175  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B246"
    from_bci -1
    to_bci -1
    predecessors "B245" 
    successors "B247" 
    xhandlers
    flags 
    probability 4585056867508815770
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2173 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v2170 
=== Succesors ===
next: v2179 
=== Usages ===
=== Predecessor ===
v2176 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v2170 #next: v2179  <|@  <|@
f <@*|@fixed>@ <|@
tid v2179 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2178 
=== Predecessor ===
v2173 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B247"
    from_bci -1
    to_bci -1
    predecessors "B243" "B246" 
    successors "B248" "B249" 
    xhandlers
    flags 
    probability 4594064066763556762
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j2694 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2178 
values: j1034 j2705 
=== Succesors ===
=== Usages ===
v3215 j2699 j2688 v2712 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2178 values: j1034 j2705  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2178 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2177 v2179 
=== Succesors ===
next: v2200 
=== Usages ===
j2694 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2177 v2179 #next: v2200  <|@  <|@
f <@~|@floating>@ <|@
tid j2711 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967303 - 4294967287]
=== Inputs ===
x: j1953 
y: j2543 
=== Succesors ===
=== Usages ===
v2712 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1953 y: j2543  <|@  <|@
f <@~|@floating>@ <|@
tid v2712 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2711 
y: j2694 
=== Succesors ===
=== Usages ===
v2200 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2711 y: j2694  <|@  <|@
f <@*|@fixed>@ <|@
tid v2200 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v2712 
=== Succesors ===
trueSuccessor: v2199 
falseSuccessor: v2198 
=== Usages ===
=== Predecessor ===
v2178 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2712 #trueSuccessor: v2199 #falseSuccessor: v2198  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B248"
    from_bci -1
    to_bci -1
    predecessors "B247" 
    successors "B250" 
    xhandlers
    flags 
    probability 4585056867508815770
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2199 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2203 
=== Usages ===
=== Predecessor ===
v2200 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2203  <|@  <|@
f <@*|@fixed>@ <|@
tid v2203 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2189 
=== Predecessor ===
v2199 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B249"
    from_bci -1
    to_bci -1
    predecessors "B247" 
    successors "B250" 
    xhandlers
    flags 
    probability 4592008490372696935
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2198 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3003 
=== Usages ===
=== Predecessor ===
v2200 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3003  <|@  <|@
f <@~|@floating>@ <|@
tid v3215 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j2675 
index: j2694 
=== Succesors ===
=== Usages ===
v3003 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2675 index: j2694  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3003 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3215 
value: v3039 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2188 
=== Usages ===
=== Predecessor ===
v2198 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3215 value: v3039 stateAfter: - lastLocationAccess: - #next: v2188  <|@  <|@
f <@~|@floating>@ <|@
tid j2699 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j2694 
y: j1432 
=== Succesors ===
=== Usages ===
j2688 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2694 y: j1432  <|@  <|@
f <@*|@fixed>@ <|@
tid v2188 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2189 
=== Predecessor ===
v3003 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B250"
    from_bci -1
    to_bci -1
    predecessors "B249" "B248" 
    successors "B251" "B252" 
    xhandlers
    flags 
    probability 4594064066763556762
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j2688 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2189 
values: j2699 j2694 
=== Succesors ===
=== Usages ===
v3214 j2693 j2682 v2715 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2189 values: j2699 j2694  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2189 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2188 v2203 
=== Succesors ===
next: v2206 
=== Usages ===
j2688 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2188 v2203 #next: v2206  <|@  <|@
f <@~|@floating>@ <|@
tid j2714 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967299 - 4294967291]
=== Inputs ===
x: j1953 
y: j2547 
=== Succesors ===
=== Usages ===
v2715 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1953 y: j2547  <|@  <|@
f <@~|@floating>@ <|@
tid v2715 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2714 
y: j2688 
=== Succesors ===
=== Usages ===
v2206 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2714 y: j2688  <|@  <|@
f <@*|@fixed>@ <|@
tid v2206 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v2715 
=== Succesors ===
trueSuccessor: v2205 
falseSuccessor: v2204 
=== Usages ===
=== Predecessor ===
v2189 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2715 #trueSuccessor: v2205 #falseSuccessor: v2204  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B251"
    from_bci -1
    to_bci -1
    predecessors "B250" 
    successors "B253" 
    xhandlers
    flags 
    probability 4585056867508815770
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2205 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2209 
=== Usages ===
=== Predecessor ===
v2206 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2209  <|@  <|@
f <@*|@fixed>@ <|@
tid v2209 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2192 
=== Predecessor ===
v2205 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B252"
    from_bci -1
    to_bci -1
    predecessors "B250" 
    successors "B253" 
    xhandlers
    flags 
    probability 4592008490372696935
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2204 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3002 
=== Usages ===
=== Predecessor ===
v2206 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3002  <|@  <|@
f <@~|@floating>@ <|@
tid v3214 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j2675 
index: j2688 
=== Succesors ===
=== Usages ===
v3002 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2675 index: j2688  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3002 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3214 
value: v3038 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2191 
=== Usages ===
=== Predecessor ===
v2204 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3214 value: v3038 stateAfter: - lastLocationAccess: - #next: v2191  <|@  <|@
f <@~|@floating>@ <|@
tid j2693 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j2688 
y: j2519 
=== Succesors ===
=== Usages ===
j2682 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2688 y: j2519  <|@  <|@
f <@*|@fixed>@ <|@
tid v2191 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2192 
=== Predecessor ===
v3002 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B253"
    from_bci -1
    to_bci -1
    predecessors "B252" "B251" 
    successors "B254" "B255" 
    xhandlers
    flags 
    probability 4594064066763556762
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j2682 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2192 
values: j2693 j2688 
=== Succesors ===
=== Usages ===
v3213 j2687 j2676 v2718 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2192 values: j2693 j2688  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2192 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2191 v2209 
=== Succesors ===
next: v2212 
=== Usages ===
j2682 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2191 v2209 #next: v2212  <|@  <|@
f <@~|@floating>@ <|@
tid j2717 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967297 - 4294967293]
=== Inputs ===
x: j1953 
y: j2551 
=== Succesors ===
=== Usages ===
v2718 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1953 y: j2551  <|@  <|@
f <@~|@floating>@ <|@
tid v2718 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2717 
y: j2682 
=== Succesors ===
=== Usages ===
v2212 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2717 y: j2682  <|@  <|@
f <@*|@fixed>@ <|@
tid v2212 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v2718 
=== Succesors ===
trueSuccessor: v2211 
falseSuccessor: v2210 
=== Usages ===
=== Predecessor ===
v2192 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2718 #trueSuccessor: v2211 #falseSuccessor: v2210  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B254"
    from_bci -1
    to_bci -1
    predecessors "B253" 
    successors "B256" 
    xhandlers
    flags 
    probability 4585056867508815770
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2211 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2215 
=== Usages ===
=== Predecessor ===
v2212 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2215  <|@  <|@
f <@*|@fixed>@ <|@
tid v2215 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2195 
=== Predecessor ===
v2211 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B255"
    from_bci -1
    to_bci -1
    predecessors "B253" 
    successors "B256" 
    xhandlers
    flags 
    probability 4592008490372696935
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2210 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3001 
=== Usages ===
=== Predecessor ===
v2212 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3001  <|@  <|@
f <@~|@floating>@ <|@
tid v3213 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j2675 
index: j2682 
=== Succesors ===
=== Usages ===
v3001 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2675 index: j2682  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3001 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3213 
value: v3037 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2194 
=== Usages ===
=== Predecessor ===
v2210 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3213 value: v3037 stateAfter: - lastLocationAccess: - #next: v2194  <|@  <|@
f <@~|@floating>@ <|@
tid j2687 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j2682 
y: j2497 
=== Succesors ===
=== Usages ===
j2676 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2682 y: j2497  <|@  <|@
f <@*|@fixed>@ <|@
tid v2194 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2195 
=== Predecessor ===
v3001 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B256"
    from_bci -1
    to_bci -1
    predecessors "B255" "B254" 
    successors "B257" "B258" 
    xhandlers
    flags 
    probability 4594064066763556762
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j2676 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2195 
values: j2687 j2682 
=== Succesors ===
=== Usages ===
v3212 v2721 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2195 values: j2687 j2682  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2195 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2194 v2215 
=== Succesors ===
next: v2218 
=== Usages ===
j2676 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2194 v2215 #next: v2218  <|@  <|@
f <@~|@floating>@ <|@
tid j2720 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967296 - 4294967294]
=== Inputs ===
x: j1953 
y: j2555 
=== Succesors ===
=== Usages ===
v2721 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1953 y: j2555  <|@  <|@
f <@~|@floating>@ <|@
tid v2721 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2720 
y: j2676 
=== Succesors ===
=== Usages ===
v2218 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2720 y: j2676  <|@  <|@
f <@*|@fixed>@ <|@
tid v2218 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v2721 
=== Succesors ===
trueSuccessor: v2217 
falseSuccessor: v2216 
=== Usages ===
=== Predecessor ===
v2195 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2721 #trueSuccessor: v2217 #falseSuccessor: v2216  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B257"
    from_bci -1
    to_bci -1
    predecessors "B256" 
    successors "B261" 
    xhandlers
    flags 
    probability 4585056867508815770
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2217 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2221 
=== Usages ===
=== Predecessor ===
v2218 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2221  <|@  <|@
f <@*|@fixed>@ <|@
tid v2221 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2182 
=== Predecessor ===
v2217 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B258"
    from_bci -1
    to_bci -1
    predecessors "B256" 
    successors "B261" 
    xhandlers
    flags 
    probability 4592008490372696935
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2216 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3000 
=== Usages ===
=== Predecessor ===
v2218 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3000  <|@  <|@
f <@~|@floating>@ <|@
tid v3212 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j2675 
index: j2676 
=== Succesors ===
=== Usages ===
v3000 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2675 index: j2676  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3000 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3212 
value: i3036 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2197 
=== Usages ===
=== Predecessor ===
v2216 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3212 value: i3036 stateAfter: - lastLocationAccess: - #next: v2197  <|@  <|@
f <@*|@fixed>@ <|@
tid v2197 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2182 
=== Predecessor ===
v3000 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B259"
    from_bci -1
    to_bci -1
    predecessors "B245" 
    successors "B245" 
    xhandlers
    flags "lle" 
    loop_index 9
    loop_depth 1
    probability 4592008490372696935
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2175 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2174 
=== Usages ===
=== Predecessor ===
v2176 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2174  <|@  <|@
f <@*|@fixed>@ <|@
tid v2174 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v2170 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v2175 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v2170  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B260"
    from_bci -1
    to_bci -1
    predecessors "B241" 
    successors "B261" 
    xhandlers
    flags 
    probability 4594064066763556762
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2163 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2181 
=== Usages ===
=== Predecessor ===
v2165 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2181  <|@  <|@
f <@*|@fixed>@ <|@
tid v2181 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2182 
=== Predecessor ===
v2163 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B261"
    from_bci -1
    to_bci -1
    predecessors "B260" "B258" "B257" 
    successors "B262" "B263" 
    xhandlers
    flags 
    probability 4598567666390927258
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2182 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2181 v2197 v2221 
=== Succesors ===
next: a1277 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2181 v2197 v2221 #next: a1277  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1277 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2927) [bci: 101]
predefinedStamp: [null]
stamp: a! -
=== Inputs ===
object: a1838 
=== Succesors ===
next: j1865 
=== Usages ===
a1097 
=== Predecessor ===
v2182 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a1838 #next: j1865  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1865 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j1880 
=== Usages ===
v3163 v3164 
=== Predecessor ===
a1277 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j1880  <|@  <|@
f <@~|@floating>@ <|@
tid v3163 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j1865 
index: - 
=== Succesors ===
=== Usages ===
j1880 v1882 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1865 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1880 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v3163 
=== Succesors ===
next: j1881 
=== Usages ===
j1935 j1886 v3180 
=== Predecessor ===
j1865 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3163 #next: j1881  <|@  <|@
f <@~|@floating>@ <|@
tid v3164 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j1865 
index: - 
=== Succesors ===
=== Usages ===
j1881 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1865 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1881 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v3164 
=== Succesors ===
next: v1873 
=== Usages ===
v1870 
=== Predecessor ===
j1880 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3164 #next: v1873  <|@  <|@
f <@~|@floating>@ <|@
tid j1935 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1880 
y: j1919 
=== Succesors ===
=== Usages ===
v1870 v1882 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1880 y: j1919  <|@  <|@
f <@~|@floating>@ <|@
tid v1870 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1881 
y: j1935 
=== Succesors ===
=== Usages ===
v1873 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j1881 y: j1935  <|@  <|@
f <@*|@fixed>@ <|@
tid v1873 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v1870 
=== Succesors ===
trueSuccessor: v1871 
falseSuccessor: v1872 
=== Usages ===
=== Predecessor ===
j1881 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1870 #trueSuccessor: v1871 #falseSuccessor: v1872  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B262"
    from_bci -1
    to_bci -1
    predecessors "B261" 
    successors "B264" 
    xhandlers
    flags 
    probability 4568413362011779766
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1871 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a1876 
=== Usages ===
=== Predecessor ===
v1873 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1876  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1876 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?73 
arguments: v1391 i271 i47 
=== Succesors ===
next: j1877 
=== Usages ===
j1877 
=== Predecessor ===
v1871 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?73 arguments: v1391 i271 i47 #next: j1877  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1877 <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1876 
=== Succesors ===
next: v1887 
=== Usages ===
j1886 
=== Predecessor ===
a1876 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a1876 #next: v1887  <|@  <|@
f <@*|@fixed>@ <|@
tid v1887 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1884 
=== Predecessor ===
j1877 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B263"
    from_bci -1
    to_bci -1
    predecessors "B261" 
    successors "B264" 
    xhandlers
    flags 
    probability 4598518705926197045
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1872 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1882 
=== Usages ===
=== Predecessor ===
v1873 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1882  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1882 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3163 
value: j1935 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1879 
=== Usages ===
=== Predecessor ===
v1872 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3163 value: j1935 stateAfter: - lastLocationAccess: - #next: v1879  <|@  <|@
f <@~|@floating>@ <|@
tid v3180 <|@
d <@d|@=== Debug Properties ===
displacement: 216
scale: Times1
stamp: void*
=== Inputs ===
base: j1880 
index: - 
=== Succesors ===
=== Usages ===
v1879 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1880 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1879 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v3180 
=== Succesors ===
next: v1885 
=== Usages ===
=== Predecessor ===
v1882 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v3180 #next: v1885  <|@  <|@
f <@*|@fixed>@ <|@
tid v1885 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1884 
=== Predecessor ===
v1879 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B264"
    from_bci -1
    to_bci -1
    predecessors "B263" "B262" 
    successors 
    xhandlers
    flags 
    probability 4598567666390927258
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1886 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1884 
values: j1880 j1877 
=== Succesors ===
=== Usages ===
v3167 v3166 a1094 v3181 v3182 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1884 values: j1880 j1877  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1884 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1885 v1887 
=== Succesors ===
next: a1094 
=== Usages ===
j1886 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1885 v1887 #next: a1094  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1094 <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j1886 
=== Succesors ===
next: j1896 
=== Usages ===
a1100 
=== Predecessor ===
v1884 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j1886 #next: j1896  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1896 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v3165 
=== Succesors ===
next: v1897 
=== Usages ===
v1897 
=== Predecessor ===
a1094 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3165 #next: v1897  <|@  <|@
f <@~|@floating>@ <|@
tid v3166 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1886 
index: - 
=== Succesors ===
=== Usages ===
v1897 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1886 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1897 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3166 
value: j1896 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1900 
=== Usages ===
=== Predecessor ===
j1896 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3166 value: j1896 stateAfter: - lastLocationAccess: - #next: v1900  <|@  <|@
f <@~|@floating>@ <|@
tid v3167 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j1886 
index: - 
=== Succesors ===
=== Usages ===
v1900 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1886 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1900 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3167 
value: v1932 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1904 
=== Usages ===
=== Predecessor ===
v1897 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3167 value: v1932 stateAfter: - lastLocationAccess: - #next: v1904  <|@  <|@
f <@~|@floating>@ <|@
tid v3181 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j1886 
index: - 
=== Succesors ===
=== Usages ===
v1904 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1886 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a1097 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Compress
stamp: n! -
=== Inputs ===
value: a1277 
=== Succesors ===
=== Usages ===
v1904 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1277  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1904 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3181 
value: a1097 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1906 
=== Usages ===
=== Predecessor ===
v1900 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3181 value: a1097 stateAfter: - lastLocationAccess: - #next: v1906  <|@  <|@
f <@~|@floating>@ <|@
tid v3182 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j1886 
index: - 
=== Succesors ===
=== Usages ===
v1906 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1886 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1906 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3182 
value: i26 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a1100 
=== Usages ===
=== Predecessor ===
v1904 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3182 value: i26 stateAfter: - lastLocationAccess: - #next: a1100  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1100 <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a1094 
=== Succesors ===
next: v1101 
=== Usages ===
v243 
=== Predecessor ===
v1906 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a1094 #next: v1101  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1101 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v243 
=== Usages ===
=== Predecessor ===
a1100 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v243  <|@  <|@
f <@*|@fixed>@ <|@
tid v243 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
result: a1100 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1101 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a1100 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B265"
    from_bci -1
    to_bci -1
    predecessors "B227" 
    successors "B227" 
    xhandlers
    flags "lle" 
    loop_index 8
    loop_depth 1
    probability 4592008490372696935
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2112 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2111 
=== Usages ===
=== Predecessor ===
v2113 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2111  <|@  <|@
f <@*|@fixed>@ <|@
tid v2111 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v2107 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v2112 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v2107  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B266"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B103" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4575016825099975968
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2364 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2363 
=== Usages ===
=== Predecessor ===
v2365 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2363  <|@  <|@
f <@*|@fixed>@ <|@
tid v2363 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v2359 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v2364 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v2359  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: i3040 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: i3040  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Ljava/util/Formatter$FormatSpecifier;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v3073 v3074 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v3073 <|@
result [v0|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i3040 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i3040 <|@
result v2|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Formatter$FormatSpecifier.width
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2917) [bci: 1]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v3073 
=== Succesors ===
next: v9 
=== Usages ===
v6 i25 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3073 #next: v9  <|@  <|@
f <@~|@floating>@ <|@
tid i5 <|@
result int[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2917) [bci: 4]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1] ⇊00000000ffffffff
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v6 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v6 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2917) [bci: 5]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3040 
y: i5 
=== Succesors ===
=== Usages ===
v9 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i3040 y: i5  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
result v1|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a# Ljava/lang/String;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v10 ?527 ?351 ?35 v3077 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v9 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2917) [bci: 5]
stamp: void
trueSuccessorProbability: 0.6259652107203015
=== Inputs ===
condition: v6 
=== Succesors ===
trueSuccessor: v7 
falseSuccessor: v8 
=== Usages ===
=== Predecessor ===
i3040 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v6 #trueSuccessor: v7 #falseSuccessor: v8  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@4182771d slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v2|DWORD y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.6259652107203015 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4603813412924770104
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v7 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2918) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v10 
=== Usages ===
=== Predecessor ===
v9 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v10  <|@  <|@
f <@*|@fixed>@ <|@
tid v10 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2918) [bci: 9]
stamp: void
=== Inputs ===
result: a2 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v7 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a2 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4600409631668400528
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v8 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2919) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: a3041 
=== Usages ===
=== Predecessor ===
v9 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a3041  <|@  <|@
f <@~|@floating>@ <|@
tid v3074 <|@
result [v0|QWORD[.] + 28] <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a3041 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a3041 <|@
result v3|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Formatter$FormatSpecifier.f
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2920) [bci: 19]
nullCheck: false
stamp: n# Ljava/util/Formatter$Flags;
=== Inputs ===
stateBefore: - 
guard: - 
address: v3074 
=== Succesors ===
next: v3247 
=== Usages ===
v3075 v3247 
=== Predecessor ===
v8 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3074 #next: v3247  <|@  <|@
tid ?3 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<Formatter$FormatSpecifier.justify(String)>
duringCall: false
localsSize: 6
locksSize: 0
rethrowException: false
sourceFile: Formatter.java
sourceLine: 2917
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 - - - - 
=== Succesors ===
=== Usages ===
v1335 a1405 a1451 v3247 a3042 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3247 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?3 
object: a3041 
=== Succesors ===
next: a3042 
=== Usages ===
=== Predecessor ===
a3041 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?3 object: a3041 #next: a3042  <|@  <|@
f <@~|@floating>@ <|@
tid v3077 <|@
result [v1|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
a3042 a3053 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a3042 <|@
result v4|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: String.value
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2921) [bci: 34]
nullCheck: true
stamp: n# [C
=== Inputs ===
stateBefore: ?3 
guard: - 
address: v3077 
=== Succesors ===
next: v976 
=== Usages ===
a755 v756 v3078 
=== Predecessor ===
v3247 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?3 guard: - address: v3077 #next: v976  <|@  <|@
f <@~|@floating>@ <|@
tid v756 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 4]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2921) [bci: 34]
stamp: void
=== Inputs ===
value: a3042 
=== Succesors ===
=== Usages ===
v976 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a3042  <|@  <|@
f <@~|@floating>@ <|@
tid a1332 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1335 v1383 v1373 v1345 v1359 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v976 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 4]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2921) [bci: 34]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v756 
=== Succesors ===
trueSuccessor: v975 
falseSuccessor: v973 
=== Usages ===
=== Predecessor ===
a3042 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v756 #trueSuccessor: v975 #falseSuccessor: v973  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v3|DWORD[.] = MOV [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FormatSpecifier.justify(Formatter.java:2917) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v3|DWORD[.] * 8] state [bci:0] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FormatSpecifier.justify(Formatter.java:2917) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - 
>@ <|@ instruction v4|DWORD[.] = MOV [v1|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction TEST (x: v4|DWORD[.], y: v4|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v975 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 4]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2921) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1335 
=== Usages ===
=== Predecessor ===
v976 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1335  <|@  <|@
f <@~|@floating>@ <|@
tid i1339 <|@
result int[-193803|0xfffffffffffd0af5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -193803
stableDimension: 0
stamp: i32 [-193803] ⇊00000000fffd0af5 ⇈00000000fffd0af5
stampKind: i32
value: int[-193803|0xfffffffffffd0af5]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1335 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1335 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?3 
actionAndReason: i1339 
speculation: a1332 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v975 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?3 actionAndReason: i1339 speculation: a1332  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -193803 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FormatSpecifier.justify(Formatter.java:2917) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B9" 
    xhandlers
    flags 
    probability 4600409631668400528
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v973 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 4]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2921) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: i3043 
=== Usages ===
=== Predecessor ===
v976 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i3043  <|@  <|@
f <@~|@floating>@ <|@
tid v3078 <|@
result [v4|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a3042 
=== Succesors ===
=== Usages ===
i3043 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a3042  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i3043 <|@
result v5|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 4]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2921) [bci: 34]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v3078 
=== Succesors ===
next: j1393 
=== Usages ===
i25 v930 ?351 i869 i329 i319 j1549 i810 ?365 
=== Predecessor ===
v973 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3078 #next: j1393  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1393 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j1412 
=== Usages ===
v3104 v3103 
=== Predecessor ===
i3043 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j1412  <|@  <|@
f <@~|@floating>@ <|@
tid v3103 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j1393 
index: - 
=== Succesors ===
=== Usages ===
v1414 v1457 j1412 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1393 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1412 <|@
result v6|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v3103 
=== Succesors ===
next: j1413 
=== Usages ===
v3169 j1418 j1461 j1915 
=== Predecessor ===
j1393 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3103 #next: j1413  <|@  <|@
f <@~|@floating>@ <|@
tid v3104 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j1393 
index: - 
=== Succesors ===
=== Usages ===
j1413 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1393 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1413 <|@
result v7|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v3104 
=== Succesors ===
next: i3044 
=== Usages ===
v1445 
=== Predecessor ===
j1412 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3104 #next: i3044  <|@  <|@
f <@~|@floating>@ <|@
tid v3075 <|@
result [v3|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a3041 
=== Succesors ===
=== Usages ===
i3044 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a3041  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i3044 <|@
result v8|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Formatter$Flags.flags
nodeSourcePosition: at java.util.Formatter$Flags.contains(Formatter.java:4420) [bci: 1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2920) [bci: 25]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v3075 
=== Succesors ===
next: i3045 
=== Usages ===
i82 
=== Predecessor ===
j1413 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3075 #next: i3045  <|@  <|@
f <@~|@floating>@ <|@
tid a15 <|@
result v9|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2920) [bci: 22]
rawvalue: Formatter.Flags@122446495
stableDimension: 0
stamp: a!# Ljava/util/Formatter$Flags;
stampKind: a -
value: Object[Formatter.Flags@122446495]
=== Inputs ===
=== Succesors ===
=== Usages ===
v3076 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v3076 <|@
result [v9|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a15 
index: - 
=== Succesors ===
=== Usages ===
i3045 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a15 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i3045 <|@
result v10|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Formatter$Flags.flags
nodeSourcePosition: at java.util.Formatter$Flags.valueOf(Formatter.java:4416) [bci: 1]
at java.util.Formatter$Flags.contains(Formatter.java:4420) [bci: 5]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2920) [bci: 25]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v3076 
=== Succesors ===
next: v30 
=== Usages ===
i82 v84 
=== Predecessor ===
i3044 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3076 #next: v30  <|@  <|@
f <@~|@floating>@ <|@
tid i82 <|@
result v11|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at java.util.Formatter$Flags.contains(Formatter.java:4420) [bci: 8]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2920) [bci: 25]
stamp: i32
=== Inputs ===
x: i3044 
y: i3045 
=== Succesors ===
=== Usages ===
v84 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i3044 y: i3045  <|@  <|@
f <@~|@floating>@ <|@
tid v84 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.Formatter$Flags.contains(Formatter.java:4420) [bci: 13]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2920) [bci: 25]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i82 
y: i3045 
=== Succesors ===
=== Usages ===
i85 v55 v30 v732 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i82 y: i3045  <|@  <|@
f <@~|@floating>@ <|@
tid i47 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2923) [bci: 61]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i48 i71 i85 v490 i132 v337 v305 v177 v195 v224 i270 v283 i293 i457 i1812 a1780 i1709 a1607 a1405 a1451 i1481 a1876 i1638 a1563 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i26 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2922) [bci: 41]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
i85 i532 i59 v1811 v1906 a1834 a1505 a1660 v199 v209 v1228 a1731 i532 v274 v287 v296 v851 v308 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i85 <|@
result v12|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$Flags.contains(Formatter.java:4420) [bci: 13]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2920) [bci: 25]
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
condition: v84 
trueValue: i47 
falseValue: i26 
=== Succesors ===
=== Usages ===
?35 ?527 ?267 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v84 trueValue: i47 falseValue: i26  <|@  <|@
f <@~|@floating>@ <|@
tid j1907 <|@
result long[48|0x30] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 48
stableDimension: 0
stamp: i64 [48] ⇊0000000000000030 ⇈0000000000000030
stampKind: i64
value: long[48|0x30]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1915 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1915 <|@
result v13|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1412 
y: j1907 
=== Succesors ===
=== Usages ===
v1445 v1457 v1414 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1412 y: j1907  <|@  <|@
f <@~|@floating>@ <|@
tid v1445 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1413 
y: j1915 
=== Succesors ===
=== Usages ===
v1448 v1401 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j1413 y: j1915  <|@  <|@
f <@~|@floating>@ <|@
tid v3169 <|@
result [v6|QWORD + 240] <|@
d <@d|@=== Debug Properties ===
displacement: 240
scale: Times1
stamp: void*
=== Inputs ===
base: j1412 
index: - 
=== Succesors ===
=== Usages ===
v1454 v1410 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1412 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid i25 <|@
result v14|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2921) [bci: 37]
stamp: i32
=== Inputs ===
x: i3040 
y: i3043 
=== Succesors ===
=== Usages ===
?35 v36 v490 v61 ?527 ?267 ?60 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i3040 y: i3043  <|@  <|@
f <@~|@floating>@ <|@
tid i3036 <|@
result short[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 0
stableDimension: 0
stamp: i16 [0] ⇈0000000000000000
stampKind: i16
value: short[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v2982 v3000 v3015 v3030 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v3037 <|@
result v15|V32_WORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0>
stableDimension: 0
stamp: <i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000>
stampKind: <i16,i16>
value: SIMD<0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v2984 v3001 v3016 v3031 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v3038 <|@
result v16|V64_WORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0>
stableDimension: 0
stamp: <i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000>
stampKind: <i16,i16,i16,i16>
value: SIMD<0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v2986 v3002 v3017 v3032 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v3039 <|@
result v17|V128_WORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0,0,0,0,0>
stableDimension: 0
stamp: <i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000>
stampKind: <i16,i16,i16,i16,i16,i16,i16,i16>
value: SIMD<0,0,0,0,0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v2988 v3003 v3018 v3033 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v3035 <|@
result v18|V256_WORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>
stableDimension: 0
stamp: <i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000>
stampKind: <i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16>
value: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v3019 v3004 v2989 v3034 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j2555 <|@
result long[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -1
stableDimension: 0
stamp: i64 [-1] ⇊ffffffffffffffff
stampKind: i64
value: long[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
j2556 j2607 j2669 j2720 j2782 j2833 j2895 j2946 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j2497 <|@
result long[2|0x2] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 2
stableDimension: 0
stamp: i64 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i64
value: long[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
j2511 j2574 j2630 j2687 j2743 j2800 j2856 j2913 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j2551 <|@
result long[-2|0xfffffffffffffffe] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -2
stableDimension: 0
stamp: i64 [-2] ⇊fffffffffffffffe ⇈fffffffffffffffe
stampKind: i64
value: long[-2|0xfffffffffffffffe]
=== Inputs ===
=== Succesors ===
=== Usages ===
j2552 j2604 j2666 j2717 j2779 j2830 j2892 j2943 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j2519 <|@
result long[4|0x4] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 4
stableDimension: 0
stamp: i64 [4] ⇊0000000000000004 ⇈0000000000000004
stampKind: i64
value: long[4|0x4]
=== Inputs ===
=== Succesors ===
=== Usages ===
j2520 j2580 j2638 j2693 j2751 j2806 j2864 j2919 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j2547 <|@
result long[-4|0xfffffffffffffffc] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -4
stableDimension: 0
stamp: i64 [-4] ⇊fffffffffffffffc ⇈fffffffffffffffc
stampKind: i64
value: long[-4|0xfffffffffffffffc]
=== Inputs ===
=== Succesors ===
=== Usages ===
j2548 j2601 j2663 j2714 j2776 j2827 j2889 j2940 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1432 <|@
result long[8|0x8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 8
stableDimension: 0
stamp: i64 [8] ⇊0000000000000008 ⇈0000000000000008
stampKind: i64
value: long[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j2925 j2872 j2812 j2759 j2699 j2646 j2586 j2528 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j2543 <|@
result long[-8|0xfffffffffffffff8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -8
stableDimension: 0
stamp: i64 [-8] ⇊fffffffffffffff8 ⇈fffffffffffffff8
stampKind: i64
value: long[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j2544 j2598 j2660 j2711 j2773 j2824 j2886 j2937 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j739 <|@
result long[16|0x10] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2917) [bci: 1]
rawvalue: 16
stableDimension: 0
stamp: i64 [16] ⇊0000000000000010 ⇈0000000000000010
stampKind: i64
value: long[16|0x10]
=== Inputs ===
=== Succesors ===
=== Usages ===
j2931 j2880 j2818 j2767 j2705 j2654 j2592 j2536 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j2537 <|@
result long[-16|0xfffffffffffffff0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -16
stableDimension: 0
stamp: i64 [-16] ⇊fffffffffffffff0 ⇈fffffffffffffff0
stampKind: i64
value: long[-16|0xfffffffffffffff0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j2538 j2593 j2655 j2706 j2768 j2819 j2881 j2932 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1034 <|@
result long[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 0
stableDimension: 0
stamp: i64 [0] ⇈0000000000000000
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j2873 j2700 j2752 j2760 v2769 v2707 v2820 j2813 j2807 v2882 v2933 j2521 j2529 v2539 j2926 j2581 j2587 v2594 j2920 j2639 j2647 v2656 j2865 j2694 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1424 <|@
result v19|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<[C, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[C, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a1660 a1834 a1505 a1731 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
tid a89 <|@
d <@d|@=== Debug Properties ===
fields: [Ljdk.vm.ci.hotspot.HotSpotResolvedJavaField;@915094e
hasIdentity: true
objectId: 1
stamp: a!# Ljava/lang/StringBuilder;
type: HotSpotType<Ljava/lang/StringBuilder;, resolved>
=== Inputs ===
=== Succesors ===
=== Usages ===
?1105 ?374 ?406 ?696 ?35 ?406 ?638 ?527 ?723 ?60 ?267 ?333 ?73 ?351 ?725 ?344 ?365 
=== Predecessor ===
- >@ <|@
instruction <@VirtualInstance|@org.graalvm.compiler.nodes.virtual.VirtualInstanceNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i1512 <|@
result int[23|0x17] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2923) [bci: 57]
rawvalue: 23
stableDimension: 0
stamp: i32 [23] ⇊0000000000000017 ⇈0000000000000017
stampKind: i32
value: int[23|0x17]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1513 i1667 i1738 i1841 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i1482 <|@
result int[-8|0xfffffffffffffff8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:603) [bci: 23]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2923) [bci: 57]
rawvalue: -8
stableDimension: 0
stamp: i32 [-8] ⇊00000000fffffff8 ⇈00000000fffffff8
stampKind: i32
value: int[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1483 i1639 i1710 i1813 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i1489 <|@
result int[16777215|0xffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 48]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2923) [bci: 57]
rawvalue: 16777215
stableDimension: 0
stamp: i32 [16777215] ⇊0000000000ffffff ⇈0000000000ffffff
stampKind: i32
value: int[16777215|0xffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1490 v1645 v1716 v1819 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i285 <|@
result int[2147483639|0x7ffffff7] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 22]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2926) [bci: 90]
rawvalue: 2147483639
stableDimension: 0
stamp: i32 [2147483639] ⇊000000007ffffff7 ⇈000000007ffffff7
stampKind: i32
value: int[2147483639|0x7ffffff7]
=== Inputs ===
=== Succesors ===
=== Usages ===
i286 i307 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i271 <|@
result int[2|0x2] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:150) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2926) [bci: 90]
rawvalue: 2
stableDimension: 0
stamp: i32 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
i272 i294 a1876 a1780 a1563 a1607 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i921 <|@
result short[32|0x20] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:650) [bci: 26]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2923) [bci: 57]
rawvalue: 32
stableDimension: 0
stamp: i16 [32] ⇊0000000000000020 ⇈0000000000000020
stampKind: i16
value: short[32|0x20]
=== Inputs ===
=== Succesors ===
=== Usages ===
v772 v782 v899 v913 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1437 <|@
result v20|V256_QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0>
stableDimension: 0
stamp: <i64,i64,i64,i64>
stampKind: <i64,i64,i64,i64>
value: SIMD<0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v1439 v1478 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1913 <|@
result meta{HotSpotType<[C, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<[C, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<[C, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1434 v1474 v1532 v1683 v1754 v1857 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1425 <|@
result long[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 1
stableDimension: 0
stamp: i64 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1430 v1471 v1529 v1680 v1751 v1854 v1972 v2225 v2099 v2351 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i548 <|@
result int[16|0x10] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 5]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2924) [bci: 69]
rawvalue: 16
stableDimension: 0
stamp: i32 [16] ⇊0000000000000010 ⇈0000000000000010
stampKind: i32
value: int[16|0x10]
=== Inputs ===
=== Succesors ===
=== Usages ===
i530 i530 v1470 v1429 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i1910 <|@
result int[8|0x8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 8
stableDimension: 0
stamp: i32 [8] ⇊0000000000000008 ⇈0000000000000008
stampKind: i32
value: int[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
a1405 a1451 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1391 <|@
result v21|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<[I, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[I, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a1405 a1451 a1563 a1607 a1780 a1876 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v30 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2922) [bci: 41]
stamp: void
trueSuccessorProbability: 0.18604807005003576
=== Inputs ===
condition: v84 
=== Succesors ===
trueSuccessor: v29 
falseSuccessor: v28 
=== Usages ===
=== Predecessor ===
i3045 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v84 #trueSuccessor: v29 #falseSuccessor: v28  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = MOV [v4|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = MOV [v3|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Formatter.Flags@122446495] <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = MOV [v9|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = AND (x: v8|DWORD, y: v10|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v10|DWORD, y: v11|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = SETCC condition: = <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = LEA [v6|QWORD + 48] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = SUB (x: v2|DWORD, ~y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|V32_WORD = L oc: SIMD<0,0> <|@ <|@
      nr   -1  <|@ instruction v16|V64_WORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction v17|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction v18|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>} <|@ <|@
      nr   -1  <|@ instruction v20|V256_QWORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction v21|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction CMP (x: v10|DWORD, y: v11|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.18604807005003576 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4589678796991780868
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v29 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2924) [bci: 67]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1401 
=== Usages ===
=== Predecessor ===
v30 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1401  <|@  <|@
f <@*|@fixed>@ <|@
tid v1401 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v1445 
=== Succesors ===
trueSuccessor: v1399 
falseSuccessor: v1400 
=== Usages ===
=== Predecessor ===
v29 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1445 #trueSuccessor: v1399 #falseSuccessor: v1400  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v13|QWORD, y: v7|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4559557624972199865
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1399 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a1405 
=== Usages ===
=== Predecessor ===
v1401 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1405  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1405 <|@
result v22|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?3 
arguments: v1391 i1910 i47 
=== Succesors ===
next: j1406 
=== Usages ===
j1406 
=== Predecessor ===
v1399 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?3 arguments: v1391 i1910 i47 #next: j1406  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1406 <|@
result v22|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1405 
=== Succesors ===
next: v1419 
=== Usages ===
j1418 
=== Predecessor ===
a1405 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a1405 #next: v1419  <|@  <|@
f <@*|@fixed>@ <|@
tid v1419 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1416 
=== Predecessor ===
j1406 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v21|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[8|0x8] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FormatSpecifier.justify(Formatter.java:2917) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v22|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v22|QWORD[.]] destination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4589628653228494709
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1400 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1414 
=== Usages ===
=== Predecessor ===
v1401 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1414  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1414 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3103 
value: j1915 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1410 
=== Usages ===
=== Predecessor ===
v1400 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3103 value: j1915 stateAfter: - lastLocationAccess: - #next: v1410  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1410 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v3169 
=== Succesors ===
next: v1417 
=== Usages ===
=== Predecessor ===
v1414 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v3169 #next: v1417  <|@  <|@
f <@*|@fixed>@ <|@
tid v1417 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1416 
=== Predecessor ===
v1410 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v13|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v6|QWORD + 240] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v6|QWORD] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B6" 
    successors "B75" 
    xhandlers
    flags 
    probability 4589678796991780868
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1418 <|@
result v23|QWORD[*] <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1416 
values: j1412 j1406 
=== Succesors ===
=== Usages ===
v3102 v3101 a1036 v3100 v3168 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1416 values: j1412 j1406  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1416 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1417 v1419 
=== Succesors ===
next: a1036 
=== Usages ===
j1418 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1417 v1419 #next: a1036  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1036 <|@
result v24|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j1418 
=== Succesors ===
next: v1429 
=== Usages ===
a1042 
=== Predecessor ===
v1416 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j1418 #next: v1429  <|@  <|@
f <@~|@floating>@ <|@
tid v3100 <|@
result [v23|QWORD[*] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j1418 
index: - 
=== Succesors ===
=== Usages ===
v1429 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1418 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1429 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3100 
value: i548 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1430 
=== Usages ===
=== Predecessor ===
a1036 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3100 value: i548 stateAfter: - lastLocationAccess: - #next: v1430  <|@  <|@
f <@~|@floating>@ <|@
tid v3101 <|@
result [v23|QWORD[*]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1418 
index: - 
=== Succesors ===
=== Usages ===
v1430 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1418 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1430 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3101 
value: j1425 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1434 
=== Usages ===
=== Predecessor ===
v1429 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3101 value: j1425 stateAfter: - lastLocationAccess: - #next: v1434  <|@  <|@
f <@~|@floating>@ <|@
tid v3102 <|@
result [v23|QWORD[*] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j1418 
index: - 
=== Succesors ===
=== Usages ===
v1434 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1418 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1434 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3102 
value: v1913 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1439 
=== Usages ===
=== Predecessor ===
v1430 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3102 value: v1913 stateAfter: - lastLocationAccess: - #next: v1439  <|@  <|@
f <@~|@floating>@ <|@
tid v3168 <|@
result [v23|QWORD[*] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j1418 
index: - 
=== Succesors ===
=== Usages ===
v1439 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1418 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1439 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3168 
value: v1437 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a1042 
=== Usages ===
=== Predecessor ===
v1434 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3168 value: v1437 stateAfter: - lastLocationAccess: - #next: a1042  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1042 <|@
result v24|QWORD[.] <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a1036 
=== Succesors ===
next: v1043 
=== Usages ===
a637 
=== Predecessor ===
v1439 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a1036 #next: v1043  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1043 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v525 
=== Usages ===
=== Predecessor ===
a1042 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v525  <|@  <|@
f <@*|@fixed>@ <|@
tid v525 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v526 
=== Predecessor ===
v1043 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v23|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v24|QWORD[.] = MOVE v23|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v23|QWORD[*] + 12] y: 16 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v23|QWORD[*]] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v23|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction J (address: [v23|QWORD[*] + 16], input: v20|V256_QWORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v24|QWORD[.], int[16|0x10], int[0|0x0]] destination: B8 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4599156037586246543
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v28 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2923) [bci: 44]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1448 
=== Usages ===
=== Predecessor ===
v30 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1448  <|@  <|@
f <@*|@fixed>@ <|@
tid v1448 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v1445 
=== Succesors ===
trueSuccessor: v1446 
falseSuccessor: v1447 
=== Usages ===
=== Predecessor ===
v28 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1445 #trueSuccessor: v1446 #falseSuccessor: v1447  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v13|QWORD, y: v7|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4569166477141788452
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1446 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a1451 
=== Usages ===
=== Predecessor ===
v1448 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1451  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1451 <|@
result v25|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?3 
arguments: v1391 i1910 i47 
=== Succesors ===
next: j1452 
=== Usages ===
j1452 
=== Predecessor ===
v1446 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?3 arguments: v1391 i1910 i47 #next: j1452  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1452 <|@
result v25|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1451 
=== Succesors ===
next: v1462 
=== Usages ===
j1461 
=== Predecessor ===
a1451 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a1451 #next: v1462  <|@  <|@
f <@*|@fixed>@ <|@
tid v1462 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1459 
=== Predecessor ===
j1452 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v21|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[8|0x8] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FormatSpecifier.justify(Formatter.java:2917) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v25|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v25|QWORD[.]] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4599101193409563137
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1447 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1457 
=== Usages ===
=== Predecessor ===
v1448 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1457  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1457 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3103 
value: j1915 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1454 
=== Usages ===
=== Predecessor ===
v1447 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3103 value: j1915 stateAfter: - lastLocationAccess: - #next: v1454  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1454 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v3169 
=== Succesors ===
next: v1460 
=== Usages ===
=== Predecessor ===
v1457 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v3169 #next: v1460  <|@  <|@
f <@*|@fixed>@ <|@
tid v1460 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1459 
=== Predecessor ===
v1454 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v13|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v6|QWORD + 240] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v6|QWORD] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4599156037586246543
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1461 <|@
result v26|QWORD[*] <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1459 
values: j1412 j1452 
=== Succesors ===
=== Usages ===
v3107 v3106 a1046 v3105 v3170 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1459 values: j1412 j1452  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1459 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1460 v1462 
=== Succesors ===
next: a1046 
=== Usages ===
j1461 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1460 v1462 #next: a1046  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1046 <|@
result v27|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j1461 
=== Succesors ===
next: v1470 
=== Usages ===
a1051 a1061 
=== Predecessor ===
v1459 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j1461 #next: v1470  <|@  <|@
f <@~|@floating>@ <|@
tid v3105 <|@
result [v26|QWORD[*] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j1461 
index: - 
=== Succesors ===
=== Usages ===
v1470 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1461 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1470 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3105 
value: i548 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1471 
=== Usages ===
=== Predecessor ===
a1046 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3105 value: i548 stateAfter: - lastLocationAccess: - #next: v1471  <|@  <|@
f <@~|@floating>@ <|@
tid v3106 <|@
result [v26|QWORD[*]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1461 
index: - 
=== Succesors ===
=== Usages ===
v1471 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1461 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1471 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3106 
value: j1425 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1474 
=== Usages ===
=== Predecessor ===
v1470 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3106 value: j1425 stateAfter: - lastLocationAccess: - #next: v1474  <|@  <|@
f <@~|@floating>@ <|@
tid v3107 <|@
result [v26|QWORD[*] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j1461 
index: - 
=== Succesors ===
=== Usages ===
v1474 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1461 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1474 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3107 
value: v1913 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v403 
=== Usages ===
=== Predecessor ===
v1471 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3107 value: v1913 stateAfter: - lastLocationAccess: - #next: v403  <|@  <|@
f <@~|@floating>@ <|@
tid v3170 <|@
result [v26|QWORD[*] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j1461 
index: - 
=== Succesors ===
=== Usages ===
v1478 v1480 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1461 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v490 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2923) [bci: 51]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i25 
y: i47 
=== Succesors ===
=== Usages ===
v403 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i25 y: i47  <|@  <|@
f <@*|@fixed>@ <|@
tid v403 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2923) [bci: 51]
stamp: void
trueSuccessorProbability: 0.4177003898613192
=== Inputs ===
condition: v490 
=== Succesors ===
trueSuccessor: v402 
falseSuccessor: v401 
=== Usages ===
=== Predecessor ===
v1474 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v490 #trueSuccessor: v402 #falseSuccessor: v401  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v26|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v27|QWORD[.] = MOVE v26|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v26|QWORD[*] + 12] y: 16 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v26|QWORD[*]] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v26|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction CMP v14|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.4177003898613192 condition: < trueDestination: B12 -> B13 falseDestination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B75" 
    xhandlers
    flags 
    probability 4593749707086991795
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v402 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2924) [bci: 67]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1478 
=== Usages ===
=== Predecessor ===
v403 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1478  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1478 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3170 
value: v1437 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a1051 
=== Usages ===
=== Predecessor ===
v402 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3170 value: v1437 stateAfter: - lastLocationAccess: - #next: a1051  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1051 <|@
result v27|QWORD[.] <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a1046 
=== Succesors ===
next: v1052 
=== Usages ===
a637 
=== Predecessor ===
v1478 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a1046 #next: v1052  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1052 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v528 
=== Usages ===
=== Predecessor ===
a1051 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v528  <|@  <|@
f <@*|@fixed>@ <|@
tid v528 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v526 
=== Predecessor ===
v1052 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v26|QWORD[*] + 16], input: v20|V256_QWORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v27|QWORD[.], int[16|0x10], int[0|0x0]] destination: B13 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4595555168830760299
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v401 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2923) [bci: 54]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1480 
=== Usages ===
=== Predecessor ===
v403 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1480  <|@  <|@
f <@~|@floating>@ <|@
tid v1479 <|@
result v28|V256_QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <32,0,0,0>
stableDimension: 0
stamp: <i64,i64,i64,i64>
stampKind: <i64,i64,i64,i64>
value: SIMD<32,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v1480 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1480 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3170 
value: v1479 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a1061 
=== Usages ===
=== Predecessor ===
v401 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3170 value: v1479 stateAfter: - lastLocationAccess: - #next: a1061  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1061 <|@
result v27|QWORD[.] <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a1046 
=== Succesors ===
next: v1062 
=== Usages ===
a458 
=== Predecessor ===
v1480 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a1046 #next: v1062  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1062 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v32 
=== Usages ===
=== Predecessor ===
a1061 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v32  <|@  <|@
f <@*|@fixed>@ <|@
tid v32 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2923) [bci: 47]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v33 
=== Predecessor ===
v1062 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v28|V256_QWORD = A od: SIMD<32,0,0,0> oe: QWORD <|@ <|@
      nr   -1  <|@ instruction J (address: [v26|QWORD[*] + 16], input: v28|V256_QWORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v27|QWORD[.], int[1|0x1]] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B70" "B18" 
    successors "B16" "B74" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4598072091713848228
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a458 <|@
result v29|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a!# [C
valueDescription: a -
=== Inputs ===
merge: v33 
values: a1061 a1281 a458 
=== Succesors ===
=== Usages ===
?374 v3080 a458 a637 v3094 v3079 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v33 values: a1061 a1281 a458  <|@  <|@
f <@~|@floating>@ <|@
tid i457 <|@
result v30|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v33 
values: i47 i48 i48 
=== Succesors ===
=== Usages ===
?35 v36 v775 i48 ?374 v3081 v3080 i532 v764 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v33 values: i47 i48 i48  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v33 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 1.3940604899411522
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 2
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2923) [bci: 47]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v32 
=== Succesors ===
next: i3046 
=== Usages ===
a458 v41 v49 i457 v504 v995 v980 v985 v990 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v32 #next: i3046  <|@  <|@
f <@~|@floating>@ <|@
tid v3079 <|@
result [v29|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a458 
index: - 
=== Succesors ===
=== Usages ===
i3046 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a458 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i3046 <|@
result v31|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 5]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2923) [bci: 57]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v3079 
=== Succesors ===
next: v43 
=== Usages ===
i223 i293 i1263 v764 i530 v1203 
=== Predecessor ===
v33 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3079 #next: v43  <|@  <|@
f <@~|@floating>@ <|@
tid v36 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2923) [bci: 51]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i457 
y: i25 
=== Succesors ===
=== Usages ===
v43 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i457 y: i25  <|@  <|@
f <@*|@fixed>@ <|@
tid v43 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2923) [bci: 51]
stamp: void
trueSuccessorProbability: 0.5822996101386808
=== Inputs ===
condition: v36 
=== Succesors ===
trueSuccessor: v37 
falseSuccessor: v41 
=== Usages ===
=== Predecessor ===
i3046 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v36 #trueSuccessor: v37 #falseSuccessor: v41  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v29|QWORD[.], v30|DWORD] = LABEL numbPhis: 2 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = MOV [v29|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v14|DWORD, y: v30|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5822996101386808 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B20" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4594352857608977439
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v37 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2923) [bci: 54]
stamp: void
=== Inputs ===
=== Succesors ===
next: v227 
=== Usages ===
=== Predecessor ===
v43 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v227  <|@  <|@
f <@~|@floating>@ <|@
tid i48 <|@
result v32|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2923) [bci: 61]
stamp: i32
=== Inputs ===
x: i457 
y: i47 
=== Succesors ===
=== Usages ===
i457 i932 i457 i295 i223 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i457 y: i47  <|@  <|@
f <@~|@floating>@ <|@
tid i223 <|@
result v33|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 6]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2923) [bci: 57]
stamp: i32
=== Inputs ===
x: i48 
y: i3046 
=== Succesors ===
=== Usages ===
v224 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i48 y: i3046  <|@  <|@
f <@~|@floating>@ <|@
tid v224 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 7]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2923) [bci: 57]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i223 
y: i47 
=== Succesors ===
=== Usages ===
v227 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i223 y: i47  <|@  <|@
tid ?374 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a89 
values: i457 a458 
=== Succesors ===
=== Usages ===
?35 
=== Predecessor ===
- >@ <|@
instruction <@VirtualObjectState|@org.graalvm.compiler.virtual.nodes.VirtualObjectState>@ object: a89 values: i457 a458  <|@  <|@
tid ?35 <|@
d <@d|@=== Debug Properties ===
bci: 47
code: ResolvedJavaMethodBytecode<Formatter$FormatSpecifier.justify(String)>
duringCall: false
localsSize: 6
locksSize: 0
rethrowException: false
sourceFile: Formatter.java
sourceLine: 2923
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - a2 a89 i85 i25 i457 
virtualObjectMappings: ?374 
=== Succesors ===
=== Usages ===
a1505 v1345 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - a2 a89 i85 i25 i457 virtualObjectMappings: ?374  <|@  <|@
f <@*|@fixed>@ <|@
tid v227 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 7]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2923) [bci: 57]
stamp: void
trueSuccessorProbability: 0.9354897578252553
=== Inputs ===
condition: v224 
=== Succesors ===
trueSuccessor: v225 
falseSuccessor: v226 
=== Usages ===
=== Predecessor ===
v37 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v224 #trueSuccessor: v225 #falseSuccessor: v226  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v32|DWORD = INC v30|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v33|DWORD = SUB (x: v32|DWORD, ~y: v31|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v33|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9354897578252553 condition: < trueDestination: B16 -> B17 falseDestination: B16 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4594018382497928091
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v225 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:127) [bci: 26]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2923) [bci: 57]
stamp: void
=== Inputs ===
=== Succesors ===
next: v981 
=== Usages ===
=== Predecessor ===
v227 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v981  <|@  <|@
f <@~|@floating>@ <|@
tid v764 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:650) [bci: 26]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2923) [bci: 57]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i457 
y: i3046 
=== Succesors ===
=== Usages ===
v981 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i457 y: i3046  <|@  <|@
f <@*|@fixed>@ <|@
tid v981 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:650) [bci: 26]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2923) [bci: 57]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v764 
=== Succesors ===
trueSuccessor: v977 
falseSuccessor: v980 
=== Usages ===
=== Predecessor ===
v225 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v764 #trueSuccessor: v977 #falseSuccessor: v980  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v31|DWORD, y: v30|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B17 -> B18 falseDestination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B15" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4594018382497928091
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v977 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:650) [bci: 26]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2923) [bci: 57]
stamp: void
=== Inputs ===
=== Succesors ===
next: v772 
=== Usages ===
v772 
=== Predecessor ===
v981 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v772  <|@  <|@
f <@~|@floating>@ <|@
tid v3080 <|@
result [v29|QWORD[.] + v30|DWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a458 
index: i457 
=== Succesors ===
=== Usages ===
v772 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a458 index: i457  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v772 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:650) [bci: 26]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2923) [bci: 57]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v977 
address: v3080 
value: i921 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v504 
=== Usages ===
=== Predecessor ===
v977 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v977 address: v3080 value: i921 stateAfter: - lastLocationAccess: - #next: v504  <|@  <|@
f <@*|@fixed>@ <|@
tid v504 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 1
stamp: void
=== Inputs ===
loopBegin: v33 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v772 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v33  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v29|QWORD[.] + v30|DWORD * 2 + 16] y: 32 size: WORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v29|QWORD[.], v32|DWORD] destination: B18 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B73" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v980 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:650) [bci: 26]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2923) [bci: 57]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v33 
=== Succesors ===
next: v1341 
=== Usages ===
=== Predecessor ===
v981 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v33 #next: v1341  <|@  <|@
f <@~|@floating>@ <|@
tid i1342 <|@
result int[-195867|0xfffffffffffd02e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -195867
stableDimension: 0
stamp: i32 [-195867] ⇊00000000fffd02e5 ⇈00000000fffd02e5
stampKind: i32
value: int[-195867|0xfffffffffffd02e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1343 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1341 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1340 
=== Predecessor ===
v980 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-195867|0xfffffffffffd02e5]] destination: B19 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B21" "B22" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4576505223557843009
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v226 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 10]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2923) [bci: 57]
stamp: void
=== Inputs ===
=== Succesors ===
next: v986 
=== Usages ===
=== Predecessor ===
v227 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v986  <|@  <|@
f <@~|@floating>@ <|@
tid i293 <|@
result v34|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:150) [bci: 6]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2923) [bci: 57]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i3046 
y: i47 
=== Succesors ===
=== Usages ===
i294 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i3046 y: i47  <|@  <|@
f <@~|@floating>@ <|@
tid i294 <|@
result v35|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:150) [bci: 8]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2923) [bci: 57]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i293 
y: i271 
=== Succesors ===
=== Usages ===
i295 i932 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i293 y: i271  <|@  <|@
f <@~|@floating>@ <|@
tid i295 <|@
result v36|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:151) [bci: 12]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2923) [bci: 57]
stamp: i32
=== Inputs ===
x: i294 
y: i48 
=== Succesors ===
=== Usages ===
v296 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i294 y: i48  <|@  <|@
f <@~|@floating>@ <|@
tid v296 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:151) [bci: 13]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2923) [bci: 57]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i295 
y: i26 
=== Succesors ===
=== Usages ===
i932 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i295 y: i26  <|@  <|@
f <@~|@floating>@ <|@
tid i932 <|@
result v37|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
condition: v296 
trueValue: i48 
falseValue: i294 
=== Succesors ===
=== Usages ===
v775 j1955 v305 i307 v1490 v1203 i1263 a1505 v1528 i1481 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v296 trueValue: i48 falseValue: i294  <|@  <|@
f <@~|@floating>@ <|@
tid v305 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 19]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2923) [bci: 57]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i932 
y: i47 
=== Succesors ===
=== Usages ===
v986 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i932 y: i47  <|@  <|@
f <@*|@fixed>@ <|@
tid v986 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 19]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2923) [bci: 57]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v305 
=== Succesors ===
trueSuccessor: v985 
falseSuccessor: v982 
=== Usages ===
=== Predecessor ===
v226 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v305 #trueSuccessor: v985 #falseSuccessor: v982  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v34|DWORD = SHL v31|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v35|DWORD = LEA [v34|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v36|DWORD = SUB (x: v35|DWORD, ~y: v32|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v36|DWORD, y: v36|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v37|DWORD = CMOVE (falseValue: v35|DWORD, ~trueValue: v32|DWORD) condition: < <|@ <|@
      nr   -1  <|@ instruction CMP v37|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B20 -> B21 falseDestination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B73" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v985 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 19]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2923) [bci: 57]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v33 
=== Succesors ===
next: v1346 
=== Usages ===
=== Predecessor ===
v986 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v33 #next: v1346  <|@  <|@
f <@~|@floating>@ <|@
tid i1347 <|@
result int[-197907|0xfffffffffffcfaed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -197907
stableDimension: 0
stamp: i32 [-197907] ⇊00000000fffcfaed ⇈00000000fffcfaed
stampKind: i32
value: int[-197907|0xfffffffffffcfaed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1343 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1346 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1340 
=== Predecessor ===
v985 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-197907|0xfffffffffffcfaed]] destination: B21 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4576505223557843009
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v982 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 19]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2923) [bci: 57]
stamp: void
=== Inputs ===
=== Succesors ===
next: v991 
=== Usages ===
=== Predecessor ===
v986 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v991  <|@  <|@
f <@~|@floating>@ <|@
tid i307 <|@
result v39|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 25]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2923) [bci: 57]
stamp: i32
=== Inputs ===
x: i285 
y: i932 
=== Succesors ===
=== Usages ===
v308 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i285 y: i932  <|@  <|@
f <@~|@floating>@ <|@
tid v308 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 26]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2923) [bci: 57]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i307 
y: i26 
=== Succesors ===
=== Usages ===
v991 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i307 y: i26  <|@  <|@
f <@*|@fixed>@ <|@
tid v991 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 26]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2923) [bci: 57]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v308 
=== Succesors ===
trueSuccessor: v990 
falseSuccessor: v987 
=== Usages ===
=== Predecessor ===
v982 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v308 #trueSuccessor: v990 #falseSuccessor: v987  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v38|DWORD = MOVE input: int[2147483639|0x7ffffff7] <|@ <|@
      nr   -1  <|@ instruction v39|DWORD = SUB (x: v38|DWORD, ~y: v37|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v39|DWORD, y: v39|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B22 -> B23 falseDestination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B73" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v990 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 26]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2923) [bci: 57]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v33 
=== Succesors ===
next: v1348 
=== Usages ===
=== Predecessor ===
v991 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v33 #next: v1348  <|@  <|@
f <@~|@floating>@ <|@
tid i1349 <|@
result int[-198163|0xfffffffffffcf9ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -198163
stableDimension: 0
stamp: i32 [-198163] ⇊00000000fffcf9ed ⇈00000000fffcf9ed
stampKind: i32
value: int[-198163|0xfffffffffffcf9ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1343 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1348 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1340 
=== Predecessor ===
v990 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-198163|0xfffffffffffcf9ed]] destination: B23 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" "B72" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4576505223557843009
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v987 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 26]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2923) [bci: 57]
stamp: void
=== Inputs ===
=== Succesors ===
next: v996 
=== Usages ===
=== Predecessor ===
v991 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v996  <|@  <|@
f <@~|@floating>@ <|@
tid v775 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:650) [bci: 26]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2923) [bci: 57]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i457 
y: i932 
=== Succesors ===
=== Usages ===
v996 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i457 y: i932  <|@  <|@
f <@*|@fixed>@ <|@
tid v996 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:650) [bci: 26]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2923) [bci: 57]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v775 
=== Succesors ===
trueSuccessor: v992 
falseSuccessor: v995 
=== Usages ===
=== Predecessor ===
v987 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v775 #trueSuccessor: v992 #falseSuccessor: v995  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v37|DWORD, y: v30|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B24 -> B25 falseDestination: B24 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" "B29" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4576505223557843009
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v992 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:650) [bci: 26]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2923) [bci: 57]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1484 
=== Usages ===
v782 
=== Predecessor ===
v996 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j1484  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1484 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:772) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:319) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2923) [bci: 57]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j1525 
=== Usages ===
v3108 v3109 
=== Predecessor ===
v992 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j1525  <|@  <|@
f <@~|@floating>@ <|@
tid v3108 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j1484 
index: - 
=== Succesors ===
=== Usages ===
j1525 v1527 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1484 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1525 <|@
result v40|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:245) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:320) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2923) [bci: 57]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v3108 
=== Succesors ===
next: j1526 
=== Usages ===
j1488 v3110 v3111 a1504 v3116 v3112 v3113 v3114 v3115 
=== Predecessor ===
j1484 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3108 #next: j1526  <|@  <|@
f <@~|@floating>@ <|@
tid v3109 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j1484 
index: - 
=== Succesors ===
=== Usages ===
j1526 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1484 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1526 <|@
result v41|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:249) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:321) [bci: 25]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2923) [bci: 57]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v3109 
=== Succesors ===
next: v1493 
=== Usages ===
v1494 
=== Predecessor ===
j1525 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3109 #next: v1493  <|@  <|@
f <@~|@floating>@ <|@
tid v1490 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.core.common.calc.UnsignedMath.belowThan(int, int) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 50]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2923) [bci: 57]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i932 
y: i1489 
=== Succesors ===
=== Usages ===
v1493 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i932 y: i1489  <|@  <|@
f <@*|@fixed>@ <|@
tid v1493 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 64]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2923) [bci: 57]
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v1490 
=== Succesors ===
trueSuccessor: v1492 
falseSuccessor: v1491 
=== Usages ===
=== Predecessor ===
j1526 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1490 #trueSuccessor: v1492 #falseSuccessor: v1491  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v40|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v41|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v37|DWORD y: 16777215 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B25 -> B26 falseDestination: B25 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" "B28" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4575970063380164052
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1492 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 67]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2923) [bci: 57]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1500 
=== Usages ===
=== Predecessor ===
v1493 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1500  <|@  <|@
f <@~|@floating>@ <|@
tid i1481 <|@
result v42|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 8]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2923) [bci: 57]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i932 
y: i47 
=== Succesors ===
=== Usages ===
i1513 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i932 y: i47  <|@  <|@
f <@~|@floating>@ <|@
tid i1513 <|@
result v43|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2923) [bci: 57]
stamp: i32 [-2147483647 - 2147483647] ⇊0000000000000001
=== Inputs ===
x: i1481 
y: i1512 
=== Succesors ===
=== Usages ===
i1483 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1481 y: i1512  <|@  <|@
f <@~|@floating>@ <|@
tid i1483 <|@
result v44|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:604) [bci: 30]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2923) [bci: 57]
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i1513 
y: i1482 
=== Succesors ===
=== Usages ===
j1487 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i1513 y: i1482  <|@  <|@
f <@~|@floating>@ <|@
tid j1487 <|@
result v45|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2923) [bci: 57]
resultBits: 64
stamp: i64 [-2147483648 - 2147483640] ⇈fffffffffffffff8
=== Inputs ===
value: i1483 
=== Succesors ===
=== Usages ===
j1488 v3112 v3113 v3114 v3115 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i1483  <|@  <|@
f <@~|@floating>@ <|@
tid j1488 <|@
result v46|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2923) [bci: 57]
stamp: i64
=== Inputs ===
x: j1487 
y: j1525 
=== Succesors ===
=== Usages ===
v1494 v1527 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1487 y: j1525  <|@  <|@
f <@~|@floating>@ <|@
tid v1494 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 83]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2923) [bci: 57]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1526 
y: j1488 
=== Succesors ===
=== Usages ===
v1500 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j1526 y: j1488  <|@  <|@
f <@*|@fixed>@ <|@
tid v1500 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 89]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2923) [bci: 57]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v1494 
=== Succesors ===
trueSuccessor: v1499 
falseSuccessor: v1498 
=== Usages ===
=== Predecessor ===
v1492 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1494 #trueSuccessor: v1499 #falseSuccessor: v1498  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v42|DWORD = SHL v37|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v43|DWORD = LEA [v42|DWORD + 23] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v44|DWORD = AND v43|DWORD y: -8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v45|QWORD = MOVSXD v44|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v46|QWORD = ADD (x: v45|QWORD, y: v40|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v46|QWORD, y: v41|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B26 -> B27 falseDestination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B30" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4545793469636321557
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1499 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2923) [bci: 57]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1497 
=== Usages ===
=== Predecessor ===
v1500 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1497  <|@  <|@
f <@*|@fixed>@ <|@
tid v1497 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2923) [bci: 57]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1496 
=== Predecessor ===
v1499 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B27 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B31" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4575921898964172946
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1498 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 92]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2923) [bci: 57]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1527 
=== Usages ===
=== Predecessor ===
v1500 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1527  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1527 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:257) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 96]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2923) [bci: 57]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3108 
value: j1488 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1515 
=== Usages ===
=== Predecessor ===
v1498 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3108 value: j1488 stateAfter: - lastLocationAccess: - #next: v1515  <|@  <|@
f <@~|@floating>@ <|@
tid v3112 <|@
result [v45|QWORD + v40|QWORD * 1 + 192] <|@
d <@d|@=== Debug Properties ===
displacement: 192
scale: Times1
stamp: void*
=== Inputs ===
base: j1487 
index: j1525 
=== Succesors ===
=== Usages ===
v1515 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1487 index: j1525  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1515 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2923) [bci: 57]
stamp: void
=== Inputs ===
address: v3112 
=== Succesors ===
next: v1517 
=== Usages ===
=== Predecessor ===
v1527 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v3112 #next: v1517  <|@  <|@
f <@~|@floating>@ <|@
tid v3113 <|@
result [v45|QWORD + v40|QWORD * 1 + 256] <|@
d <@d|@=== Debug Properties ===
displacement: 256
scale: Times1
stamp: void*
=== Inputs ===
base: j1487 
index: j1525 
=== Succesors ===
=== Usages ===
v1517 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1487 index: j1525  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1517 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2923) [bci: 57]
stamp: void
=== Inputs ===
address: v3113 
=== Succesors ===
next: v1520 
=== Usages ===
=== Predecessor ===
v1515 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v3113 #next: v1520  <|@  <|@
f <@~|@floating>@ <|@
tid v3114 <|@
result [v45|QWORD + v40|QWORD * 1 + 320] <|@
d <@d|@=== Debug Properties ===
displacement: 320
scale: Times1
stamp: void*
=== Inputs ===
base: j1487 
index: j1525 
=== Succesors ===
=== Usages ===
v1520 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1487 index: j1525  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1520 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2923) [bci: 57]
stamp: void
=== Inputs ===
address: v3114 
=== Succesors ===
next: v1523 
=== Usages ===
=== Predecessor ===
v1517 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v3114 #next: v1523  <|@  <|@
f <@~|@floating>@ <|@
tid v3115 <|@
result [v45|QWORD + v40|QWORD * 1 + 384] <|@
d <@d|@=== Debug Properties ===
displacement: 384
scale: Times1
stamp: void*
=== Inputs ===
base: j1487 
index: j1525 
=== Succesors ===
=== Usages ===
v1523 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1487 index: j1525  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1523 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2923) [bci: 57]
stamp: void
=== Inputs ===
address: v3115 
=== Succesors ===
next: v1528 
=== Usages ===
=== Predecessor ===
v1520 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v3115 #next: v1528  <|@  <|@
f <@~|@floating>@ <|@
tid v3110 <|@
result [v40|QWORD + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j1525 
index: - 
=== Succesors ===
=== Usages ===
v1528 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1525 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1528 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:549) [bci: 12]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2923) [bci: 57]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3110 
value: i932 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1529 
=== Usages ===
=== Predecessor ===
v1523 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3110 value: i932 stateAfter: - lastLocationAccess: - #next: v1529  <|@  <|@
f <@~|@floating>@ <|@
tid v3111 <|@
result [v40|QWORD] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1525 
index: - 
=== Succesors ===
=== Usages ===
v1529 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1525 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1529 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:469) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2923) [bci: 57]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3111 
value: j1425 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1532 
=== Usages ===
=== Predecessor ===
v1528 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3111 value: j1425 stateAfter: - lastLocationAccess: - #next: v1532  <|@  <|@
f <@~|@floating>@ <|@
tid v3116 <|@
result [v40|QWORD + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j1525 
index: - 
=== Succesors ===
=== Usages ===
v1532 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1525 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1532 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2923) [bci: 57]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3116 
value: v1913 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1503 
=== Usages ===
=== Predecessor ===
v1529 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3116 value: v1913 stateAfter: - lastLocationAccess: - #next: v1503  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1503 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.MembarNode.memoryBarrier(int, LocationIdentity) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:560) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2923) [bci: 57]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1504 
=== Usages ===
=== Predecessor ===
v1532 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a1504  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1504 <|@
result v47|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:561) [bci: 71]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2923) [bci: 57]
stamp: a! -
trackedPointer: true
=== Inputs ===
input: j1525 
=== Succesors ===
next: v1506 
=== Usages ===
a1509 
=== Predecessor ===
v1503 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j1525 #next: v1506  <|@  <|@
f <@*|@fixed>@ <|@
tid v1506 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2923) [bci: 57]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1507 
=== Predecessor ===
a1504 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v46|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v45|QWORD + v40|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v45|QWORD + v40|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v45|QWORD + v40|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v45|QWORD + v40|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v40|QWORD + 12], y: v37|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v40|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v40|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v47|QWORD[.] = MOVE v40|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v47|QWORD[.]] destination: B28 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B30" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4561701786114434764
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1491 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2923) [bci: 57]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1495 
=== Usages ===
=== Predecessor ===
v1493 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1495  <|@  <|@
f <@*|@fixed>@ <|@
tid v1495 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2923) [bci: 57]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1496 
=== Predecessor ===
v1491 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" "B27" 
    successors "B31" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4562309419648302455
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1496 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2923) [bci: 57]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1495 v1497 
=== Succesors ===
next: a1505 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1495 v1497 #next: a1505  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1505 <|@
result v48|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.newArray(ForeignCallDescriptor, KlassPointer, int, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 155]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2923) [bci: 57]
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?35 
arguments: v1424 i932 i26 
=== Succesors ===
next: v1508 
=== Usages ===
a1509 
=== Predecessor ===
v1496 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?35 arguments: v1424 i932 i26 #next: v1508  <|@  <|@
f <@*|@fixed>@ <|@
tid v1508 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2923) [bci: 57]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1507 
=== Predecessor ===
a1505 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v19|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v37|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FormatSpecifier.justify(Formatter.java:2923) [bci: 47]
locals: - v1|QWORD[.] vobject:StringBuilder:0{count=v30|DWORD,value=v29|QWORD[.]} v12|DWORD v14|DWORD v30|DWORD 
vobject:StringBuilder:0{count=v30|DWORD,value=v29|QWORD[.]} Ljava/lang/StringBuilder; v30|DWORD v29|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:47] <|@ <|@
      nr   -1  <|@ instruction v48|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v48|QWORD[.]] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" 
    successors "B32" "B33" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4576505223557843009
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a1509 <|@
result v49|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2923) [bci: 57]
stamp: a! -
valueDescription: a -
=== Inputs ===
merge: v1507 
values: a1504 a1505 
=== Succesors ===
=== Usages ===
v3185 a1281 v3098 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1507 values: a1504 a1505  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1507 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2923) [bci: 57]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1506 v1508 
=== Succesors ===
next: v2724 
=== Usages ===
a1509 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1506 v1508 #next: v2724  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2724 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v2228 
=== Usages ===
j2725 j2727 
=== Predecessor ===
v1507 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v2228  <|@  <|@
f <@~|@floating>@ <|@
tid v1203 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Math.min(Math.java:1336) [bci: 2]
at com.oracle.graal.enterprise.T.c.b(stripped:192) [bci: 4]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:102) [bci: 9]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2923) [bci: 57]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3046 
y: i932 
=== Succesors ===
=== Usages ===
i1263 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i3046 y: i932  <|@  <|@
f <@~|@floating>@ <|@
tid i1263 <|@
result v50|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
condition: v1203 
trueValue: i3046 
falseValue: i932 
=== Succesors ===
=== Usages ===
j1956 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v1203 trueValue: i3046 falseValue: i932  <|@  <|@
f <@~|@floating>@ <|@
tid j1956 <|@
result v51|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i1263 
=== Succesors ===
=== Usages ===
j2782 v3185 j1960 v2225 v2486 j2768 j2773 j2776 j2779 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i1263  <|@  <|@
f <@~|@floating>@ <|@
tid v2225 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1956 
y: j1425 
=== Succesors ===
=== Usages ===
v2228 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1956 y: j1425  <|@  <|@
f <@*|@fixed>@ <|@
tid v2228 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v2225 
=== Succesors ===
trueSuccessor: v2226 
falseSuccessor: v2227 
=== Usages ===
=== Predecessor ===
v2724 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2225 #trueSuccessor: v2226 #falseSuccessor: v2227  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v49|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v37|DWORD, y: v31|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v50|DWORD = CMOVE (falseValue: v37|DWORD, ~trueValue: v31|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction v51|QWORD = MOVSXD v50|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v51|QWORD y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B31 -> B32 falseDestination: B31 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B50" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4572001623930472513
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2226 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2244 
=== Usages ===
=== Predecessor ===
v2228 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2244  <|@  <|@
f <@*|@fixed>@ <|@
tid v2244 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2245 
=== Predecessor ===
v2226 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B32 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B35" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4572001623930472513
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2227 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2231 
=== Usages ===
=== Predecessor ===
v2228 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2231  <|@  <|@
f <@~|@floating>@ <|@
tid v3098 <|@
result [v49|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1509 
index: - 
=== Succesors ===
=== Usages ===
j2727 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1509 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j2727 <|@
result v52|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v2724 
address: v3098 
=== Succesors ===
=== Usages ===
v3217 v3219 v3221 v3223 v3225 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v2724 address: v3098  <|@  <|@
f <@~|@floating>@ <|@
tid v3094 <|@
result [v29|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a458 
index: - 
=== Succesors ===
=== Usages ===
j2725 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a458 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j2725 <|@
result v53|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v2724 
address: v3094 
=== Succesors ===
=== Usages ===
v3218 v3220 v3222 v3224 v3226 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v2724 address: v3094  <|@  <|@
f <@~|@floating>@ <|@
tid j2768 <|@
result v54|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483664 - 2147483631]
=== Inputs ===
x: j1956 
y: j2537 
=== Succesors ===
=== Usages ===
v2769 v2771 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1956 y: j2537  <|@  <|@
f <@~|@floating>@ <|@
tid v2769 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2768 
y: j1034 
=== Succesors ===
=== Usages ===
v2231 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2768 y: j1034  <|@  <|@
f <@*|@fixed>@ <|@
tid v2231 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v2769 
=== Succesors ===
trueSuccessor: v2229 
falseSuccessor: v2230 
=== Usages ===
=== Predecessor ===
v2227 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2769 #trueSuccessor: v2229 #falseSuccessor: v2230  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v52|QWORD[.] = LEA [v49|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v53|QWORD[.] = LEA [v29|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v54|QWORD = LEA [v51|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v54|QWORD, y: v54|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B33 -> B34 falseDestination: B33 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B38" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4570173825191496802
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2229 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2240 
=== Usages ===
=== Predecessor ===
v2231 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2240  <|@  <|@
f <@*|@fixed>@ <|@
tid v2240 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2241 
=== Predecessor ===
v2229 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B34 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4562994424675731521
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2230 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2232 
=== Usages ===
=== Predecessor ===
v2231 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2232  <|@  <|@
f <@*|@fixed>@ <|@
tid v2232 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2233 
=== Predecessor ===
v2230 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" "B71" 
    successors "B37" "B71" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 2
    probability 4572001623930472513
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j2760 <|@
result v55|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2233 
values: j1034 j2767 
=== Succesors ===
=== Usages ===
v3226 j2767 v3225 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2233 values: j1034 j2767  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2233 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v2232 
=== Succesors ===
next: v3047 
=== Usages ===
v3047 v2236 v2237 j2760 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v2232 #next: v3047  <|@  <|@
f <@~|@floating>@ <|@
tid v3226 <|@
result [v53|QWORD[.] + v55|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j2725 
index: j2760 
=== Succesors ===
=== Usages ===
v3047 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2725 index: j2760  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3047 <|@
result v56|V256_WORD <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16>
=== Inputs ===
stateBefore: - 
guard: v2233 
address: v3226 
=== Succesors ===
next: v3014 
=== Usages ===
v3014 
=== Predecessor ===
v2233 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v2233 address: v3226 #next: v3014  <|@  <|@
f <@~|@floating>@ <|@
tid v3225 <|@
result [v52|QWORD[.] + v55|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j2727 
index: j2760 
=== Succesors ===
=== Usages ===
v3014 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2727 index: j2760  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3014 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3225 
value: v3047 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2239 
=== Usages ===
=== Predecessor ===
v3047 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3225 value: v3047 stateAfter: - lastLocationAccess: - #next: v2239  <|@  <|@
f <@~|@floating>@ <|@
tid j2767 <|@
result v57|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j2760 
y: j739 
=== Succesors ===
=== Usages ===
j2752 j2760 v2771 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2760 y: j739  <|@  <|@
f <@~|@floating>@ <|@
tid v2771 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2768 
y: j2767 
=== Succesors ===
=== Usages ===
v2239 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2768 y: j2767  <|@  <|@
f <@*|@fixed>@ <|@
tid v2239 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v2771 
=== Succesors ===
trueSuccessor: v2236 
falseSuccessor: v2238 
=== Usages ===
=== Predecessor ===
v3014 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2771 #trueSuccessor: v2236 #falseSuccessor: v2238  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v55|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v56|V256_WORD = H [v53|QWORD[.] + v55|QWORD * 2] nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v52|QWORD[.] + v55|QWORD * 2], input: v56|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v57|QWORD = LEA [v55|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v57|QWORD, y: v54|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B36 -> B37 falseDestination: B36 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4562994424675731521
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2236 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v2233 
=== Succesors ===
next: v2242 
=== Usages ===
=== Predecessor ===
v2239 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v2233 #next: v2242  <|@  <|@
f <@*|@fixed>@ <|@
tid v2242 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2241 
=== Predecessor ===
v2236 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v57|QWORD] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B34" "B37" 
    successors "B39" "B40" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4572001623930472513
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j2752 <|@
result v58|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2241 
values: j1034 j2767 
=== Succesors ===
=== Usages ===
v3224 j2759 j2744 v2774 v3223 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2241 values: j1034 j2767  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2241 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2240 v2242 
=== Succesors ===
next: v2263 
=== Usages ===
j2752 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2240 v2242 #next: v2263  <|@  <|@
f <@~|@floating>@ <|@
tid j2773 <|@
result v59|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483656 - 2147483639]
=== Inputs ===
x: j1956 
y: j2543 
=== Succesors ===
=== Usages ===
v2774 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1956 y: j2543  <|@  <|@
f <@~|@floating>@ <|@
tid v2774 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2773 
y: j2752 
=== Succesors ===
=== Usages ===
v2263 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2773 y: j2752  <|@  <|@
f <@*|@fixed>@ <|@
tid v2263 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v2774 
=== Succesors ===
trueSuccessor: v2262 
falseSuccessor: v2261 
=== Usages ===
=== Predecessor ===
v2241 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2774 #trueSuccessor: v2262 #falseSuccessor: v2261  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v58|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v59|QWORD = LEA [v51|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v58|QWORD, y: v59|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B38 -> B39 falseDestination: B38 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4562994424675731521
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2262 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2266 
=== Usages ===
=== Predecessor ===
v2263 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2266  <|@  <|@
f <@*|@fixed>@ <|@
tid v2266 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2252 
=== Predecessor ===
v2262 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v58|QWORD] destination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4570173825191496802
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2261 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3048 
=== Usages ===
v3048 
=== Predecessor ===
v2263 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3048  <|@  <|@
f <@~|@floating>@ <|@
tid v3224 <|@
result [v53|QWORD[.] + v58|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j2725 
index: j2752 
=== Succesors ===
=== Usages ===
v3048 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2725 index: j2752  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3048 <|@
result v60|V128_WORD <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16,i16,i16,i16,i16,i16,i16>
=== Inputs ===
stateBefore: - 
guard: v2261 
address: v3224 
=== Succesors ===
next: v3012 
=== Usages ===
v3012 
=== Predecessor ===
v2261 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v2261 address: v3224 #next: v3012  <|@  <|@
f <@~|@floating>@ <|@
tid v3223 <|@
result [v52|QWORD[.] + v58|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j2727 
index: j2752 
=== Succesors ===
=== Usages ===
v3012 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2727 index: j2752  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3012 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3223 
value: v3048 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2251 
=== Usages ===
=== Predecessor ===
v3048 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3223 value: v3048 stateAfter: - lastLocationAccess: - #next: v2251  <|@  <|@
f <@~|@floating>@ <|@
tid j2759 <|@
result v61|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j2752 
y: j1432 
=== Succesors ===
=== Usages ===
j2744 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2752 y: j1432  <|@  <|@
f <@*|@fixed>@ <|@
tid v2251 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2252 
=== Predecessor ===
v3012 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v60|V128_WORD = H [v53|QWORD[.] + v58|QWORD * 2] nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v52|QWORD[.] + v58|QWORD * 2], input: v60|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v61|QWORD = LEA [v58|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v61|QWORD] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" "B39" 
    successors "B42" "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4572001623930472513
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j2744 <|@
result v62|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2252 
values: j2759 j2752 
=== Succesors ===
=== Usages ===
v3222 j2751 j2736 v2777 v3221 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2252 values: j2759 j2752  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2252 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2251 v2266 
=== Succesors ===
next: v2269 
=== Usages ===
j2744 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2251 v2266 #next: v2269  <|@  <|@
f <@~|@floating>@ <|@
tid j2776 <|@
result v63|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483652 - 2147483643]
=== Inputs ===
x: j1956 
y: j2547 
=== Succesors ===
=== Usages ===
v2777 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1956 y: j2547  <|@  <|@
f <@~|@floating>@ <|@
tid v2777 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2776 
y: j2744 
=== Succesors ===
=== Usages ===
v2269 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2776 y: j2744  <|@  <|@
f <@*|@fixed>@ <|@
tid v2269 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v2777 
=== Succesors ===
trueSuccessor: v2268 
falseSuccessor: v2267 
=== Usages ===
=== Predecessor ===
v2252 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2777 #trueSuccessor: v2268 #falseSuccessor: v2267  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v62|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v63|QWORD = LEA [v51|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v62|QWORD, y: v63|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B41 -> B42 falseDestination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4562994424675731521
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2268 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2272 
=== Usages ===
=== Predecessor ===
v2269 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2272  <|@  <|@
f <@*|@fixed>@ <|@
tid v2272 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2255 
=== Predecessor ===
v2268 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v62|QWORD] destination: B42 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4570173825191496802
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2267 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3049 
=== Usages ===
v3049 
=== Predecessor ===
v2269 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3049  <|@  <|@
f <@~|@floating>@ <|@
tid v3222 <|@
result [v53|QWORD[.] + v62|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j2725 
index: j2744 
=== Succesors ===
=== Usages ===
v3049 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2725 index: j2744  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3049 <|@
result v64|V64_WORD <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16,i16,i16>
=== Inputs ===
stateBefore: - 
guard: v2267 
address: v3222 
=== Succesors ===
next: v3010 
=== Usages ===
v3010 
=== Predecessor ===
v2267 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v2267 address: v3222 #next: v3010  <|@  <|@
f <@~|@floating>@ <|@
tid v3221 <|@
result [v52|QWORD[.] + v62|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j2727 
index: j2744 
=== Succesors ===
=== Usages ===
v3010 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2727 index: j2744  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3010 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3221 
value: v3049 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2254 
=== Usages ===
=== Predecessor ===
v3049 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3221 value: v3049 stateAfter: - lastLocationAccess: - #next: v2254  <|@  <|@
f <@~|@floating>@ <|@
tid j2751 <|@
result v65|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j2744 
y: j2519 
=== Succesors ===
=== Usages ===
j2736 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2744 y: j2519  <|@  <|@
f <@*|@fixed>@ <|@
tid v2254 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2255 
=== Predecessor ===
v3010 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v64|V64_WORD = H [v53|QWORD[.] + v62|QWORD * 2] nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction J (address: [v52|QWORD[.] + v62|QWORD * 2], input: v64|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v65|QWORD = LEA [v62|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v65|QWORD] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4572001623930472513
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j2736 <|@
result v66|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2255 
values: j2751 j2744 
=== Succesors ===
=== Usages ===
v3220 j2743 j2728 v2780 v3219 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2255 values: j2751 j2744  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2255 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2254 v2272 
=== Succesors ===
next: v2275 
=== Usages ===
j2736 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2254 v2272 #next: v2275  <|@  <|@
f <@~|@floating>@ <|@
tid j2779 <|@
result v67|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483650 - 2147483645]
=== Inputs ===
x: j1956 
y: j2551 
=== Succesors ===
=== Usages ===
v2780 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1956 y: j2551  <|@  <|@
f <@~|@floating>@ <|@
tid v2780 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2779 
y: j2736 
=== Succesors ===
=== Usages ===
v2275 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2779 y: j2736  <|@  <|@
f <@*|@fixed>@ <|@
tid v2275 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v2780 
=== Succesors ===
trueSuccessor: v2274 
falseSuccessor: v2273 
=== Usages ===
=== Predecessor ===
v2255 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2780 #trueSuccessor: v2274 #falseSuccessor: v2273  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v66|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v67|QWORD = LEA [v51|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v66|QWORD, y: v67|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B44 -> B45 falseDestination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4562994424675731521
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2274 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2278 
=== Usages ===
=== Predecessor ===
v2275 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2278  <|@  <|@
f <@*|@fixed>@ <|@
tid v2278 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2258 
=== Predecessor ===
v2274 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v66|QWORD] destination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4570173825191496802
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2273 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3050 
=== Usages ===
v3050 
=== Predecessor ===
v2275 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3050  <|@  <|@
f <@~|@floating>@ <|@
tid v3220 <|@
result [v53|QWORD[.] + v66|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j2725 
index: j2736 
=== Succesors ===
=== Usages ===
v3050 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2725 index: j2736  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3050 <|@
result v68|V32_WORD <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16>
=== Inputs ===
stateBefore: - 
guard: v2273 
address: v3220 
=== Succesors ===
next: v3008 
=== Usages ===
v3008 
=== Predecessor ===
v2273 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v2273 address: v3220 #next: v3008  <|@  <|@
f <@~|@floating>@ <|@
tid v3219 <|@
result [v52|QWORD[.] + v66|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j2727 
index: j2736 
=== Succesors ===
=== Usages ===
v3008 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2727 index: j2736  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3008 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3219 
value: v3050 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2257 
=== Usages ===
=== Predecessor ===
v3050 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3219 value: v3050 stateAfter: - lastLocationAccess: - #next: v2257  <|@  <|@
f <@~|@floating>@ <|@
tid j2743 <|@
result v69|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j2736 
y: j2497 
=== Succesors ===
=== Usages ===
j2728 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2736 y: j2497  <|@  <|@
f <@*|@fixed>@ <|@
tid v2257 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2258 
=== Predecessor ===
v3008 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v68|V32_WORD = H [v53|QWORD[.] + v66|QWORD * 2] nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction J (address: [v52|QWORD[.] + v66|QWORD * 2], input: v68|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction v69|QWORD = LEA [v66|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v69|QWORD] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" "B45" 
    successors "B48" "B49" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4572001623930472513
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j2728 <|@
result v70|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2258 
values: j2743 j2736 
=== Succesors ===
=== Usages ===
v3218 v2783 v3217 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2258 values: j2743 j2736  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2258 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2257 v2278 
=== Succesors ===
next: v2281 
=== Usages ===
j2728 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2257 v2278 #next: v2281  <|@  <|@
f <@~|@floating>@ <|@
tid j2782 <|@
result v71|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483649 - 2147483646]
=== Inputs ===
x: j1956 
y: j2555 
=== Succesors ===
=== Usages ===
v2783 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1956 y: j2555  <|@  <|@
f <@~|@floating>@ <|@
tid v2783 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2782 
y: j2728 
=== Succesors ===
=== Usages ===
v2281 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2782 y: j2728  <|@  <|@
f <@*|@fixed>@ <|@
tid v2281 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v2783 
=== Succesors ===
trueSuccessor: v2280 
falseSuccessor: v2279 
=== Usages ===
=== Predecessor ===
v2258 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2783 #trueSuccessor: v2280 #falseSuccessor: v2279  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v70|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v71|QWORD = DEC v51|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v70|QWORD, y: v71|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B47 -> B48 falseDestination: B47 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4562994424675731521
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2280 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2284 
=== Usages ===
=== Predecessor ===
v2281 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2284  <|@  <|@
f <@*|@fixed>@ <|@
tid v2284 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2245 
=== Predecessor ===
v2280 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B48 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4570173825191496802
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2279 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: i3051 
=== Usages ===
i3051 
=== Predecessor ===
v2281 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i3051  <|@  <|@
f <@~|@floating>@ <|@
tid v3218 <|@
result [v53|QWORD[.] + v70|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j2725 
index: j2728 
=== Succesors ===
=== Usages ===
i3051 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2725 index: j2728  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i3051 <|@
result v72|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: v2279 
address: v3218 
=== Succesors ===
next: v3006 
=== Usages ===
v3006 
=== Predecessor ===
v2279 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v2279 address: v3218 #next: v3006  <|@  <|@
f <@~|@floating>@ <|@
tid v3217 <|@
result [v52|QWORD[.] + v70|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j2727 
index: j2728 
=== Succesors ===
=== Usages ===
v3006 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2727 index: j2728  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3006 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3217 
value: i3051 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2260 
=== Usages ===
=== Predecessor ===
i3051 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3217 value: i3051 stateAfter: - lastLocationAccess: - #next: v2260  <|@  <|@
f <@*|@fixed>@ <|@
tid v2260 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2245 
=== Predecessor ===
v3006 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v72|DWORD = MOVSX [v53|QWORD[.] + v70|QWORD * 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v52|QWORD[.] + v70|QWORD * 2], y: v72|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B32" "B49" "B48" 
    successors "B51" "B69" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4576505223557843009
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2245 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2244 v2260 v2284 
=== Succesors ===
next: v2786 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2244 v2260 v2284 #next: v2786  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2786 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v2291 
=== Usages ===
j2788 
=== Predecessor ===
v2245 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v2291  <|@  <|@
f <@~|@floating>@ <|@
tid j1955 <|@
result v73|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i932 
=== Succesors ===
=== Usages ===
j1960 v2486 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i932  <|@  <|@
f <@~|@floating>@ <|@
tid v2486 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1956 
y: j1955 
=== Succesors ===
=== Usages ===
v2291 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1956 y: j1955  <|@  <|@
f <@*|@fixed>@ <|@
tid v2291 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v2486 
=== Succesors ===
trueSuccessor: v2290 
falseSuccessor: v2289 
=== Usages ===
=== Predecessor ===
v2786 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2486 #trueSuccessor: v2290 #falseSuccessor: v2289  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v73|QWORD = MOVSXD v37|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v73|QWORD, y: v51|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B50 -> B51 falseDestination: B50 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B52" "B53" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4572001623930472513
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2290 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2294 
=== Usages ===
=== Predecessor ===
v2291 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2294  <|@  <|@
f <@~|@floating>@ <|@
tid v3185 <|@
result [v49|QWORD[.] + v51|QWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a1509 
index: j1956 
=== Succesors ===
=== Usages ===
j2788 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1509 index: j1956  <|@  <|@
f <@~|@floating>@ <|@
tid j2788 <|@
result v74|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v2786 
address: v3185 
=== Succesors ===
=== Usages ===
v3227 v3228 v3229 v3230 v3231 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v2786 address: v3185  <|@  <|@
f <@~|@floating>@ <|@
tid j1960 <|@
result v75|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
stamp: i64 [-4294967295 - 4294967295]
=== Inputs ===
x: j1955 
y: j1956 
=== Succesors ===
=== Usages ===
j2833 j2819 j2824 j2827 j2830 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j1955 y: j1956  <|@  <|@
f <@~|@floating>@ <|@
tid j2819 <|@
result v76|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967311 - 4294967279]
=== Inputs ===
x: j1960 
y: j2537 
=== Succesors ===
=== Usages ===
v2820 v2822 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1960 y: j2537  <|@  <|@
f <@~|@floating>@ <|@
tid v2820 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2819 
y: j1034 
=== Succesors ===
=== Usages ===
v2294 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2819 y: j1034  <|@  <|@
f <@*|@fixed>@ <|@
tid v2294 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v2820 
=== Succesors ===
trueSuccessor: v2292 
falseSuccessor: v2293 
=== Usages ===
=== Predecessor ===
v2290 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2820 #trueSuccessor: v2292 #falseSuccessor: v2293  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v74|QWORD[.] = LEA [v49|QWORD[.] + v51|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v75|QWORD = SUB (x: v73|QWORD, ~y: v51|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v76|QWORD = LEA [v75|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v76|QWORD, y: v76|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B51 -> B52 falseDestination: B51 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B56" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4570173825191496802
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2292 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2303 
=== Usages ===
=== Predecessor ===
v2294 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2303  <|@  <|@
f <@*|@fixed>@ <|@
tid v2303 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2304 
=== Predecessor ===
v2292 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B52 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4562994424675731521
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2293 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2295 
=== Usages ===
=== Predecessor ===
v2294 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2295  <|@  <|@
f <@*|@fixed>@ <|@
tid v2295 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2296 
=== Predecessor ===
v2293 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B53 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" "B68" 
    successors "B55" "B68" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 2
    probability 4572001623930472513
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j2813 <|@
result v77|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2296 
values: j1034 j2818 
=== Succesors ===
=== Usages ===
v3231 j2818 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2296 values: j1034 j2818  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2296 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v2295 
=== Succesors ===
next: v3019 
=== Usages ===
j2813 v2299 v2300 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v2295 #next: v3019  <|@  <|@
f <@~|@floating>@ <|@
tid v3231 <|@
result [v74|QWORD[.] + v77|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j2788 
index: j2813 
=== Succesors ===
=== Usages ===
v3019 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2788 index: j2813  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3019 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3231 
value: v3035 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2302 
=== Usages ===
=== Predecessor ===
v2296 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3231 value: v3035 stateAfter: - lastLocationAccess: - #next: v2302  <|@  <|@
f <@~|@floating>@ <|@
tid j2818 <|@
result v78|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j2813 
y: j739 
=== Succesors ===
=== Usages ===
j2807 j2813 v2822 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2813 y: j739  <|@  <|@
f <@~|@floating>@ <|@
tid v2822 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2819 
y: j2818 
=== Succesors ===
=== Usages ===
v2302 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2819 y: j2818  <|@  <|@
f <@*|@fixed>@ <|@
tid v2302 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v2822 
=== Succesors ===
trueSuccessor: v2299 
falseSuccessor: v2301 
=== Usages ===
=== Predecessor ===
v3019 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2822 #trueSuccessor: v2299 #falseSuccessor: v2301  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v77|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v74|QWORD[.] + v77|QWORD * 2], input: v18|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v78|QWORD = LEA [v77|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v78|QWORD, y: v76|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B54 -> B55 falseDestination: B54 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B56" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4562994424675731521
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2299 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v2296 
=== Succesors ===
next: v2305 
=== Usages ===
=== Predecessor ===
v2302 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v2296 #next: v2305  <|@  <|@
f <@*|@fixed>@ <|@
tid v2305 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2304 
=== Predecessor ===
v2299 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v78|QWORD] destination: B55 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B52" "B55" 
    successors "B57" "B58" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4572001623930472513
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j2807 <|@
result v79|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2304 
values: j1034 j2818 
=== Succesors ===
=== Usages ===
v3230 j2812 j2801 v2825 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2304 values: j1034 j2818  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2304 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2303 v2305 
=== Succesors ===
next: v2326 
=== Usages ===
j2807 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2303 v2305 #next: v2326  <|@  <|@
f <@~|@floating>@ <|@
tid j2824 <|@
result v80|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967303 - 4294967287]
=== Inputs ===
x: j1960 
y: j2543 
=== Succesors ===
=== Usages ===
v2825 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1960 y: j2543  <|@  <|@
f <@~|@floating>@ <|@
tid v2825 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2824 
y: j2807 
=== Succesors ===
=== Usages ===
v2326 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2824 y: j2807  <|@  <|@
f <@*|@fixed>@ <|@
tid v2326 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v2825 
=== Succesors ===
trueSuccessor: v2325 
falseSuccessor: v2324 
=== Usages ===
=== Predecessor ===
v2304 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2825 #trueSuccessor: v2325 #falseSuccessor: v2324  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v79|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v80|QWORD = LEA [v75|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v79|QWORD, y: v80|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B56 -> B57 falseDestination: B56 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B59" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4562994424675731521
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2325 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2329 
=== Usages ===
=== Predecessor ===
v2326 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2329  <|@  <|@
f <@*|@fixed>@ <|@
tid v2329 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2315 
=== Predecessor ===
v2325 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v79|QWORD] destination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B59" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4570173825191496802
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2324 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3018 
=== Usages ===
=== Predecessor ===
v2326 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3018  <|@  <|@
f <@~|@floating>@ <|@
tid v3230 <|@
result [v74|QWORD[.] + v79|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j2788 
index: j2807 
=== Succesors ===
=== Usages ===
v3018 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2788 index: j2807  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3018 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3230 
value: v3039 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2314 
=== Usages ===
=== Predecessor ===
v2324 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3230 value: v3039 stateAfter: - lastLocationAccess: - #next: v2314  <|@  <|@
f <@~|@floating>@ <|@
tid j2812 <|@
result v81|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j2807 
y: j1432 
=== Succesors ===
=== Usages ===
j2801 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2807 y: j1432  <|@  <|@
f <@*|@fixed>@ <|@
tid v2314 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2315 
=== Predecessor ===
v3018 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v74|QWORD[.] + v79|QWORD * 2], input: v17|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v81|QWORD = LEA [v79|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v81|QWORD] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" "B57" 
    successors "B60" "B61" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4572001623930472513
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j2801 <|@
result v82|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2315 
values: j2812 j2807 
=== Succesors ===
=== Usages ===
v3229 j2806 j2795 v2828 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2315 values: j2812 j2807  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2315 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2314 v2329 
=== Succesors ===
next: v2332 
=== Usages ===
j2801 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2314 v2329 #next: v2332  <|@  <|@
f <@~|@floating>@ <|@
tid j2827 <|@
result v83|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967299 - 4294967291]
=== Inputs ===
x: j1960 
y: j2547 
=== Succesors ===
=== Usages ===
v2828 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1960 y: j2547  <|@  <|@
f <@~|@floating>@ <|@
tid v2828 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2827 
y: j2801 
=== Succesors ===
=== Usages ===
v2332 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2827 y: j2801  <|@  <|@
f <@*|@fixed>@ <|@
tid v2332 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v2828 
=== Succesors ===
trueSuccessor: v2331 
falseSuccessor: v2330 
=== Usages ===
=== Predecessor ===
v2315 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2828 #trueSuccessor: v2331 #falseSuccessor: v2330  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v82|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v83|QWORD = LEA [v75|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v82|QWORD, y: v83|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B59 -> B60 falseDestination: B59 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4562994424675731521
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2331 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2335 
=== Usages ===
=== Predecessor ===
v2332 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2335  <|@  <|@
f <@*|@fixed>@ <|@
tid v2335 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2318 
=== Predecessor ===
v2331 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v82|QWORD] destination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4570173825191496802
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2330 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3017 
=== Usages ===
=== Predecessor ===
v2332 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3017  <|@  <|@
f <@~|@floating>@ <|@
tid v3229 <|@
result [v74|QWORD[.] + v82|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j2788 
index: j2801 
=== Succesors ===
=== Usages ===
v3017 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2788 index: j2801  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3017 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3229 
value: v3038 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2317 
=== Usages ===
=== Predecessor ===
v2330 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3229 value: v3038 stateAfter: - lastLocationAccess: - #next: v2317  <|@  <|@
f <@~|@floating>@ <|@
tid j2806 <|@
result v84|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j2801 
y: j2519 
=== Succesors ===
=== Usages ===
j2795 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2801 y: j2519  <|@  <|@
f <@*|@fixed>@ <|@
tid v2317 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2318 
=== Predecessor ===
v3017 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v74|QWORD[.] + v82|QWORD * 2], input: v16|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v84|QWORD = LEA [v82|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v84|QWORD] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" "B60" 
    successors "B63" "B64" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4572001623930472513
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j2795 <|@
result v85|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2318 
values: j2806 j2801 
=== Succesors ===
=== Usages ===
v3228 j2800 j2789 v2831 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2318 values: j2806 j2801  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2318 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2317 v2335 
=== Succesors ===
next: v2338 
=== Usages ===
j2795 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2317 v2335 #next: v2338  <|@  <|@
f <@~|@floating>@ <|@
tid j2830 <|@
result v86|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967297 - 4294967293]
=== Inputs ===
x: j1960 
y: j2551 
=== Succesors ===
=== Usages ===
v2831 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1960 y: j2551  <|@  <|@
f <@~|@floating>@ <|@
tid v2831 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2830 
y: j2795 
=== Succesors ===
=== Usages ===
v2338 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2830 y: j2795  <|@  <|@
f <@*|@fixed>@ <|@
tid v2338 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v2831 
=== Succesors ===
trueSuccessor: v2337 
falseSuccessor: v2336 
=== Usages ===
=== Predecessor ===
v2318 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2831 #trueSuccessor: v2337 #falseSuccessor: v2336  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v85|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v86|QWORD = LEA [v75|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v85|QWORD, y: v86|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B62 -> B63 falseDestination: B62 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B65" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4562994424675731521
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2337 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2341 
=== Usages ===
=== Predecessor ===
v2338 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2341  <|@  <|@
f <@*|@fixed>@ <|@
tid v2341 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2321 
=== Predecessor ===
v2337 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v85|QWORD] destination: B63 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B65" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4570173825191496802
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2336 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3016 
=== Usages ===
=== Predecessor ===
v2338 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3016  <|@  <|@
f <@~|@floating>@ <|@
tid v3228 <|@
result [v74|QWORD[.] + v85|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j2788 
index: j2795 
=== Succesors ===
=== Usages ===
v3016 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2788 index: j2795  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3016 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3228 
value: v3037 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2320 
=== Usages ===
=== Predecessor ===
v2336 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3228 value: v3037 stateAfter: - lastLocationAccess: - #next: v2320  <|@  <|@
f <@~|@floating>@ <|@
tid j2800 <|@
result v87|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j2795 
y: j2497 
=== Succesors ===
=== Usages ===
j2789 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2795 y: j2497  <|@  <|@
f <@*|@fixed>@ <|@
tid v2320 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2321 
=== Predecessor ===
v3016 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v74|QWORD[.] + v85|QWORD * 2], input: v15|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction v87|QWORD = LEA [v85|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v87|QWORD] destination: B64 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" "B63" 
    successors "B66" "B67" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4572001623930472513
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j2789 <|@
result v88|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2321 
values: j2800 j2795 
=== Succesors ===
=== Usages ===
v3227 v2834 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2321 values: j2800 j2795  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2321 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2320 v2341 
=== Succesors ===
next: v2344 
=== Usages ===
j2789 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2320 v2341 #next: v2344  <|@  <|@
f <@~|@floating>@ <|@
tid j2833 <|@
result v89|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967296 - 4294967294]
=== Inputs ===
x: j1960 
y: j2555 
=== Succesors ===
=== Usages ===
v2834 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1960 y: j2555  <|@  <|@
f <@~|@floating>@ <|@
tid v2834 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2833 
y: j2789 
=== Succesors ===
=== Usages ===
v2344 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2833 y: j2789  <|@  <|@
f <@*|@fixed>@ <|@
tid v2344 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v2834 
=== Succesors ===
trueSuccessor: v2343 
falseSuccessor: v2342 
=== Usages ===
=== Predecessor ===
v2321 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2834 #trueSuccessor: v2343 #falseSuccessor: v2342  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v88|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v89|QWORD = DEC v75|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v88|QWORD, y: v89|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B65 -> B66 falseDestination: B65 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B70" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4562994424675731521
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2343 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2347 
=== Usages ===
=== Predecessor ===
v2344 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2347  <|@  <|@
f <@*|@fixed>@ <|@
tid v2347 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2308 
=== Predecessor ===
v2343 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B66 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B70" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4570173825191496802
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2342 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3015 
=== Usages ===
=== Predecessor ===
v2344 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3015  <|@  <|@
f <@~|@floating>@ <|@
tid v3227 <|@
result [v74|QWORD[.] + v88|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j2788 
index: j2789 
=== Succesors ===
=== Usages ===
v3015 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2788 index: j2789  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3015 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3227 
value: i3036 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2323 
=== Usages ===
=== Predecessor ===
v2342 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3227 value: i3036 stateAfter: - lastLocationAccess: - #next: v2323  <|@  <|@
f <@*|@fixed>@ <|@
tid v2323 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2308 
=== Predecessor ===
v3015 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v74|QWORD[.] + v88|QWORD * 2], y: r12|ILLEGAL) size: WORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B67 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B54" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 2
    probability 4570173825191496802
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2301 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2300 
=== Usages ===
=== Predecessor ===
v2302 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2300  <|@  <|@
f <@*|@fixed>@ <|@
tid v2300 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v2296 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v2301 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v2296  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v78|QWORD] destination: B68 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B70" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4572001623930472513
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2289 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2307 
=== Usages ===
=== Predecessor ===
v2291 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2307  <|@  <|@
f <@*|@fixed>@ <|@
tid v2307 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2308 
=== Predecessor ===
v2289 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B69 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" "B67" "B66" 
    successors "B15" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576505223557843009
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2308 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2307 v2323 v2347 
=== Succesors ===
next: a1281 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2307 v2323 v2347 #next: a1281  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1281 <|@
result v49|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2923) [bci: 57]
predefinedStamp: [null]
stamp: a! -
=== Inputs ===
object: a1509 
=== Succesors ===
next: v782 
=== Usages ===
v3081 a458 
=== Predecessor ===
v2308 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a1509 #next: v782  <|@  <|@
f <@~|@floating>@ <|@
tid v3081 <|@
result [v49|QWORD[.] + v30|DWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a1281 
index: i457 
=== Succesors ===
=== Usages ===
v782 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1281 index: i457  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v782 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:650) [bci: 26]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2923) [bci: 57]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v992 
address: v3081 
value: i921 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v49 
=== Usages ===
=== Predecessor ===
a1281 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v992 address: v3081 value: i921 stateAfter: - lastLocationAccess: - #next: v49  <|@  <|@
f <@*|@fixed>@ <|@
tid v49 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2923) [bci: 47]
stamp: void
=== Inputs ===
loopBegin: v33 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v782 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v33  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v49|QWORD[.] + v30|DWORD * 2 + 16] y: 32 size: WORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v49|QWORD[.], v32|DWORD] destination: B70 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B36" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4570173825191496802
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2238 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2237 
=== Usages ===
=== Predecessor ===
v2239 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2237  <|@  <|@
f <@*|@fixed>@ <|@
tid v2237 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v2233 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v2238 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v2233  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v57|QWORD] destination: B71 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B73" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v995 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:650) [bci: 26]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2923) [bci: 57]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v33 
=== Succesors ===
next: v1350 
=== Usages ===
=== Predecessor ===
v996 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v33 #next: v1350  <|@  <|@
f <@~|@floating>@ <|@
tid i1351 <|@
result int[-198683|0xfffffffffffcf7e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -198683
stableDimension: 0
stamp: i32 [-198683] ⇊00000000fffcf7e5 ⇈00000000fffcf7e5
stampKind: i32
value: int[-198683|0xfffffffffffcf7e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1343 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1350 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1340 
=== Predecessor ===
v995 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-198683|0xfffffffffffcf7e5]] destination: B72 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B19" "B21" "B23" "B72" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1343 <|@
result v90|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-198683 - -195867] ⇊00000000fffc00e5 ⇈00000000fffdffed
valueDescription: i32
=== Inputs ===
merge: v1340 
values: i1342 i1347 i1349 i1351 
=== Succesors ===
=== Usages ===
v1345 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1340 values: i1342 i1347 i1349 i1351  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1340 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1341 v1346 v1348 v1350 
=== Succesors ===
next: v1345 
=== Usages ===
i1343 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1341 v1346 v1348 v1350 #next: v1345  <|@  <|@
f <@*|@fixed>@ <|@
tid v1345 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?35 
actionAndReason: i1343 
speculation: a1332 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1340 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?35 actionAndReason: i1343 speculation: a1332  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v90|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v90|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FormatSpecifier.justify(Formatter.java:2923) [bci: 47]
locals: - v1|QWORD[.] vobject:StringBuilder:0{count=v30|DWORD,value=v29|QWORD[.]} v12|DWORD v14|DWORD v30|DWORD 
vobject:StringBuilder:0{count=v30|DWORD,value=v29|QWORD[.]} Ljava/lang/StringBuilder; v30|DWORD v29|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:47] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B75" 
    xhandlers
    flags 
    probability 4592102888872906507
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v41 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2924) [bci: 67]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v33 
=== Succesors ===
next: v568 
=== Usages ===
=== Predecessor ===
v43 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v33 #next: v568  <|@  <|@
f <@*|@fixed>@ <|@
tid v568 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v526 
=== Predecessor ===
v41 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v29|QWORD[.], v31|DWORD, v30|DWORD] destination: B74 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B8" "B13" "B74" 
    successors "B76" "B84" 
    xhandlers
    flags 
    probability 4599075674450723485
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a637 <|@
result v91|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a!# [C
valueDescription: a -
=== Inputs ===
merge: v526 
values: a1042 a1051 a458 
=== Succesors ===
=== Usages ===
?638 j1544 a713 a1068 ?344 v3082 v3095 a520 ?1105 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v526 values: a1042 a1051 a458  <|@  <|@
f <@~|@floating>@ <|@
tid i530 <|@
result v92|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
valueDescription: i32
=== Inputs ===
merge: v526 
values: i548 i548 i3046 
=== Succesors ===
=== Usages ===
i336 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v526 values: i548 i548 i3046  <|@  <|@
f <@~|@floating>@ <|@
tid i532 <|@
result v93|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v526 
values: i26 i26 i457 
=== Succesors ===
=== Usages ===
i319 ?638 v1635 j1545 v811 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v526 values: i26 i26 i457  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v526 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v525 v528 v568 
=== Succesors ===
next: i3052 
=== Usages ===
a637 i530 i532 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v525 v528 v568 #next: i3052  <|@  <|@
f <@~|@floating>@ <|@
tid v3082 <|@
result [v91|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a637 
index: - 
=== Succesors ===
=== Usages ===
i3052 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a637 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i3052 <|@
result v94|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.compiler.nodes.java.ArrayLengthNode.arrayLength(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 85]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2924) [bci: 69]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v3082 
=== Succesors ===
next: v340 
=== Usages ===
i810 i1266 v1242 
=== Predecessor ===
v526 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3082 #next: v340  <|@  <|@
f <@~|@floating>@ <|@
tid a1068 <|@
result v95|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Compress
stamp: n!# [C
=== Inputs ===
value: a637 
=== Succesors ===
=== Usages ===
v1595 v1637 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a637  <|@  <|@
tid ?638 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a89 
values: i532 a637 
=== Succesors ===
=== Usages ===
?527 ?626 
=== Predecessor ===
- >@ <|@
instruction <@VirtualObjectState|@org.graalvm.compiler.virtual.nodes.VirtualObjectState>@ object: a89 values: i532 a637  <|@  <|@
tid ?527 <|@
d <@d|@=== Debug Properties ===
bci: 67
code: ResolvedJavaMethodBytecode<Formatter$FormatSpecifier.justify(String)>
duringCall: false
localsSize: 6
locksSize: 0
rethrowException: false
sourceFile: Formatter.java
sourceLine: 2924
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - a2 a89 i85 i25 - 
virtualObjectMappings: ?638 
=== Succesors ===
=== Usages ===
a1607 v816 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - a2 a89 i85 i25 - virtualObjectMappings: ?638  <|@  <|@
f <@~|@floating>@ <|@
tid i319 <|@
result v96|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 20]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2924) [bci: 69]
stamp: i32
=== Inputs ===
x: i532 
y: i3043 
=== Succesors ===
=== Usages ===
v827 i336 v1593 i521 i711 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i532 y: i3043  <|@  <|@
f <@~|@floating>@ <|@
tid i336 <|@
result v97|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 6]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2924) [bci: 69]
stamp: i32
=== Inputs ===
x: i319 
y: i530 
=== Succesors ===
=== Usages ===
v337 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i319 y: i530  <|@  <|@
f <@~|@floating>@ <|@
tid v337 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 7]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2924) [bci: 69]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i336 
y: i47 
=== Succesors ===
=== Usages ===
v340 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i336 y: i47  <|@  <|@
tid ?406 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a89 
materializedValue: a89 
=== Succesors ===
=== Usages ===
?267 
=== Predecessor ===
- >@ <|@
instruction <@MaterializedObjectState|@org.graalvm.compiler.virtual.nodes.MaterializedObjectState>@ object: a89 materializedValue: a89  <|@  <|@
tid ?267 <|@
d <@d|@=== Debug Properties ===
bci: 69
code: ResolvedJavaMethodBytecode<Formatter$FormatSpecifier.justify(String)>
duringCall: true
localsSize: 6
locksSize: 0
rethrowException: false
sourceFile: Formatter.java
sourceLine: 2924
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - a89 i85 i25 - 
virtualObjectMappings: ?406 
=== Succesors ===
=== Usages ===
?333 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - a89 i85 i25 - virtualObjectMappings: ?406  <|@  <|@
tid ?333 <|@
d <@d|@=== Debug Properties ===
bci: 2
code: ResolvedJavaMethodBytecode<StringBuilder.append(String)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: StringBuilder.java
sourceLine: 136
stackSize: 0
=== Inputs ===
outerFrameState: ?267 
values: a89 - 
=== Succesors ===
=== Usages ===
?351 ?365 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?267 values: a89 -  <|@  <|@
f <@~|@floating>@ <|@
tid j1549 <|@
result v98|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: true
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2924) [bci: 69]
resultBits: 64
stamp: i64 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
value: i3043 
=== Succesors ===
=== Usages ===
v1550 v1708 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i3043  <|@  <|@
f <@~|@floating>@ <|@
tid i1698 <|@
result byte[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2924) [bci: 69]
rawvalue: 0
stableDimension: 0
stamp: i8 [0] ⇈0000000000000000
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1697 v1766 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i1692 <|@
result int[9|0x9] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.cardTableShift(GraalHotSpotVMConfig) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2924) [bci: 69]
rawvalue: 9
stableDimension: 0
stamp: i32 [9] ⇊0000000000000009 ⇈0000000000000009
stampKind: i32
value: int[9|0x9]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1693 j1763 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1696 <|@
result v99|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.loadLongConfigValue(int) [bci: -1]
at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.cardTableAddress(GraalHotSpotVMConfigNode.java:114) [bci: 6]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:133) [bci: 7]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2924) [bci: 69]
rawvalue: 4682670080
stableDimension: 0
stamp: i64 [4682670080] ⇊00000001171be000 ⇈00000001171be000
stampKind: i64
value: long[4682670080|0x1171be000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v3137 v3149 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1923 <|@
result meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1589 v1631 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1579 <|@
result v100|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
j1623 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1623 <|@
result v100|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
input: v1579 
=== Succesors ===
=== Usages ===
v3125 
=== Predecessor ===
- >@ <|@
instruction <@PointerCast|@org.graalvm.compiler.hotspot.word.PointerCastNode>@ input: v1579  <|@  <|@
f <@~|@floating>@ <|@
tid v3125 <|@
result [v100|QWORD + 168] <|@
d <@d|@=== Debug Properties ===
displacement: 168
scale: Times1
stamp: void*
=== Inputs ===
base: j1623 
index: - 
=== Succesors ===
=== Usages ===
j1627 j1585 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1623 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j1919 <|@
result long[24|0x18] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 24
stableDimension: 0
stamp: i64 [24] ⇊0000000000000018 ⇈0000000000000018
stampKind: i64
value: long[24|0x18]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1920 j1935 j1926 j1930 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v340 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 7]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2924) [bci: 69]
stamp: void
trueSuccessorProbability: 0.9354897721124376
=== Inputs ===
condition: v337 
=== Succesors ===
trueSuccessor: v338 
falseSuccessor: v339 
=== Usages ===
=== Predecessor ===
i3052 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v337 #trueSuccessor: v338 #falseSuccessor: v339  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v91|QWORD[.], v92|DWORD, v93|DWORD] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v94|DWORD = MOV [v91|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v95|DWORD[.] = COMPRESSPOINTER (input: v91|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@1d28dd80 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v96|DWORD = ADD (x: v93|DWORD, y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v97|DWORD = SUB (x: v96|DWORD, ~y: v92|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v98|QWORD = MOV v5|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v99|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr   -1  <|@ instruction v100|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>} <|@ <|@
      nr   -1  <|@ instruction CMP v97|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9354897721124376 condition: < trueDestination: B75 -> B76 falseDestination: B75 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B77" "B78" 
    xhandlers
    flags 
    probability 4598727057661294609
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v338 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:127) [bci: 26]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2924) [bci: 69]
stamp: void
=== Inputs ===
=== Succesors ===
next: v815 
=== Usages ===
=== Predecessor ===
v340 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v815  <|@  <|@
f <@~|@floating>@ <|@
tid i810 <|@
result v101|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 90]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2924) [bci: 69]
stamp: i32 [-2147483647 - 2147483647]
=== Inputs ===
x: i3052 
y: i3043 
=== Succesors ===
=== Usages ===
v811 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i3052 y: i3043  <|@  <|@
f <@~|@floating>@ <|@
tid v811 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 91]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2924) [bci: 69]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i810 
y: i532 
=== Succesors ===
=== Usages ===
v815 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i810 y: i532  <|@  <|@
f <@*|@fixed>@ <|@
tid v815 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2924) [bci: 69]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v811 
=== Succesors ===
trueSuccessor: v814 
falseSuccessor: v812 
=== Usages ===
=== Predecessor ===
v338 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v811 #trueSuccessor: v814 #falseSuccessor: v812  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v101|DWORD = SUB (x: v94|DWORD, ~y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v93|DWORD, y: v101|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B76 -> B77 falseDestination: B76 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v814 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2924) [bci: 69]
stamp: void
=== Inputs ===
=== Succesors ===
next: v816 
=== Usages ===
=== Predecessor ===
v815 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v816  <|@  <|@
f <@*|@fixed>@ <|@
tid v816 <|@
d <@d|@=== Debug Properties ===
action: None
debugId: 0
nodeSourcePosition: at org.graalvm.compiler.nodes.DeoptimizeNode.deopt(DeoptimizationAction, DeoptimizationReason) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:263) [bci: 119]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2924) [bci: 69]
reason: RuntimeConstraint
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?527 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v814 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?527  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -208993 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FormatSpecifier.justify(Formatter.java:2924) [bci: 67]
locals: - v1|QWORD[.] vobject:StringBuilder:0{count=v93|DWORD,value=v91|QWORD[.]} v12|DWORD v14|DWORD - 
vobject:StringBuilder:0{count=v93|DWORD,value=v91|QWORD[.]} Ljava/lang/StringBuilder; v93|DWORD v91|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:67] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" "B80" 
    xhandlers
    flags 
    probability 4598727057661294609
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v812 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:265) [bci: 122]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2924) [bci: 69]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1540 
=== Usages ===
=== Predecessor ===
v815 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j1540  <|@  <|@
f <@~|@floating>@ <|@
tid a755 <|@
result v102|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2921) [bci: 34]
op: Uncompress
stamp: a# [C
=== Inputs ===
value: a3042 
=== Succesors ===
=== Usages ===
j1540 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a3042  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1540 <|@
result v103|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2924) [bci: 69]
stamp: i64
=== Inputs ===
object: a755 
=== Succesors ===
next: j1544 
=== Usages ===
v3117 
=== Predecessor ===
v812 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a755 #next: j1544  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1544 <|@
result v104|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2924) [bci: 69]
stamp: i64
=== Inputs ===
object: a637 
=== Succesors ===
next: v1550 
=== Usages ===
v3118 
=== Predecessor ===
j1540 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a637 #next: v1550  <|@  <|@
f <@~|@floating>@ <|@
tid v3117 <|@
result [v103|QWORD[*] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j1540 
index: - 
=== Succesors ===
=== Usages ===
v1550 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1540 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j1545 <|@
result v105|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2924) [bci: 69]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i532 
=== Succesors ===
=== Usages ===
v3118 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i532  <|@  <|@
f <@~|@floating>@ <|@
tid v3118 <|@
result [v104|QWORD[*] + v105|QWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: j1544 
index: j1545 
=== Succesors ===
=== Usages ===
v1550 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1544 index: j1545  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1550 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: charArraycopy(Word,Word,Word)void
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2924) [bci: 69]
stamp: void
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: v3117 v3118 j1549 
=== Succesors ===
next: j1552 
=== Usages ===
=== Predecessor ===
j1544 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: v3117 v3118 j1549 #next: j1552  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1552 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j1567 
=== Usages ===
v3119 v3120 
=== Predecessor ===
v1550 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j1567  <|@  <|@
f <@~|@floating>@ <|@
tid v3119 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j1552 
index: - 
=== Succesors ===
=== Usages ===
j1567 v1569 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1552 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1567 <|@
result v106|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v3119 
=== Succesors ===
next: j1568 
=== Usages ===
j1920 j1573 v3171 
=== Predecessor ===
j1552 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3119 #next: j1568  <|@  <|@
f <@~|@floating>@ <|@
tid v3120 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j1552 
index: - 
=== Succesors ===
=== Usages ===
j1568 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1552 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1568 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v3120 
=== Succesors ===
next: v1560 
=== Usages ===
v1557 
=== Predecessor ===
j1567 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3120 #next: v1560  <|@  <|@
f <@~|@floating>@ <|@
tid j1920 <|@
result v107|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1567 
y: j1919 
=== Succesors ===
=== Usages ===
v1557 v1569 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1567 y: j1919  <|@  <|@
f <@~|@floating>@ <|@
tid v1557 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1568 
y: j1920 
=== Succesors ===
=== Usages ===
v1560 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j1568 y: j1920  <|@  <|@
f <@*|@fixed>@ <|@
tid v1560 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v1557 
=== Succesors ===
trueSuccessor: v1558 
falseSuccessor: v1559 
=== Usages ===
=== Predecessor ===
j1568 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1557 #trueSuccessor: v1558 #falseSuccessor: v1559  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v102|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1d28dd80 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v103|QWORD[*] = MOVE v102|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v104|QWORD[*] = MOVE v91|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v105|QWORD = MOVSXD v93|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA [v103|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA [v104|QWORD[*] + v105|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE v98|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charArraycopy(Word,Word,Word)void@0x106812d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v106|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v107|QWORD = LEA [v106|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v107|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B78 -> B79 falseDestination: B78 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B81" 
    xhandlers
    flags 
    probability 4568617382837849976
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1558 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a1563 
=== Usages ===
=== Predecessor ===
v1560 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1563  <|@  <|@
tid ?365 <|@
d <@d|@=== Debug Properties ===
bci: 35
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.append(String)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: AbstractStringBuilder.java
sourceLine: 449
stackSize: 0
=== Inputs ===
outerFrameState: ?333 
values: a89 - i3043 
=== Succesors ===
=== Usages ===
?626 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?333 values: a89 - i3043  <|@  <|@
tid ?626 <|@
d <@d|@=== Debug Properties ===
bci: 61
code: ResolvedJavaMethodBytecode<String.getChars(int, int, char[], int)>
duringCall: false
localsSize: 5
locksSize: 0
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2924) [bci: 69]
rethrowException: false
sourceFile: String.java
sourceLine: 827
stackSize: 0
=== Inputs ===
outerFrameState: ?365 
values: - - - - - 
virtualObjectMappings: ?638 
=== Succesors ===
=== Usages ===
a1563 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?365 values: - - - - - virtualObjectMappings: ?638  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1563 <|@
result v108|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?626 
arguments: v1391 i271 i47 
=== Succesors ===
next: j1564 
=== Usages ===
j1564 
=== Predecessor ===
v1558 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?626 arguments: v1391 i271 i47 #next: j1564  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1564 <|@
result v108|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1563 
=== Succesors ===
next: v1574 
=== Usages ===
j1573 
=== Predecessor ===
a1563 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a1563 #next: v1574  <|@  <|@
f <@*|@fixed>@ <|@
tid v1574 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1571 
=== Predecessor ===
j1564 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v21|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.getChars(String.java:827) [bci: 61]
locals: - - - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
locals: vobject:StringBuilder:0{count=v93|DWORD,value=v91|QWORD[.]} - v5|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
locals: vobject:StringBuilder:0{count=v93|DWORD,value=v91|QWORD[.]} - 
java.util.Formatter$FormatSpecifier.justify(Formatter.java:2924) [bci: 69]
locals: - - vobject:StringBuilder:0{count=v93|DWORD,value=v91|QWORD[.]} v12|DWORD v14|DWORD - 
vobject:StringBuilder:0{count=v93|DWORD,value=v91|QWORD[.]} Ljava/lang/StringBuilder; v93|DWORD v91|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:61, 35, 2, 69] <|@ <|@
      nr   -1  <|@ instruction v108|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v108|QWORD[.]] destination: B79 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B81" 
    xhandlers
    flags 
    probability 4598676503283860722
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1559 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1569 
=== Usages ===
=== Predecessor ===
v1560 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1569  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1569 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3119 
value: j1920 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1566 
=== Usages ===
=== Predecessor ===
v1559 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3119 value: j1920 stateAfter: - lastLocationAccess: - #next: v1566  <|@  <|@
f <@~|@floating>@ <|@
tid v3171 <|@
result [v106|QWORD + 216] <|@
d <@d|@=== Debug Properties ===
displacement: 216
scale: Times1
stamp: void*
=== Inputs ===
base: j1567 
index: - 
=== Succesors ===
=== Usages ===
v1566 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1567 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1566 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v3171 
=== Succesors ===
next: v1572 
=== Usages ===
=== Predecessor ===
v1569 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v3171 #next: v1572  <|@  <|@
f <@*|@fixed>@ <|@
tid v1572 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1571 
=== Predecessor ===
v1566 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v107|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v106|QWORD + 216] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v106|QWORD] destination: B80 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" "B79" 
    successors "B82" "B83" 
    xhandlers
    flags 
    probability 4598727057661294609
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1573 <|@
result v109|QWORD[*] <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1571 
values: j1567 j1564 
=== Succesors ===
=== Usages ===
v3122 v3121 a1065 v3172 v3173 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1571 values: j1567 j1564  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1571 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1572 v1574 
=== Succesors ===
next: a1065 
=== Usages ===
j1573 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1572 v1574 #next: a1065  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1065 <|@
result v110|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j1573 
=== Succesors ===
next: j1585 
=== Usages ===
a1071 
=== Predecessor ===
v1571 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j1573 #next: j1585  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1585 <|@
result v111|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v3125 
=== Succesors ===
next: v1586 
=== Usages ===
v1586 
=== Predecessor ===
a1065 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3125 #next: v1586  <|@  <|@
f <@~|@floating>@ <|@
tid v3121 <|@
result [v109|QWORD[*]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1573 
index: - 
=== Succesors ===
=== Usages ===
v1586 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1573 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1586 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3121 
value: j1585 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1589 
=== Usages ===
=== Predecessor ===
j1585 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3121 value: j1585 stateAfter: - lastLocationAccess: - #next: v1589  <|@  <|@
f <@~|@floating>@ <|@
tid v3122 <|@
result [v109|QWORD[*] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j1573 
index: - 
=== Succesors ===
=== Usages ===
v1589 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1573 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1589 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3122 
value: v1923 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1593 
=== Usages ===
=== Predecessor ===
v1586 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3122 value: v1923 stateAfter: - lastLocationAccess: - #next: v1593  <|@  <|@
f <@~|@floating>@ <|@
tid v3172 <|@
result [v109|QWORD[*] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j1573 
index: - 
=== Succesors ===
=== Usages ===
v1593 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1573 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1593 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3172 
value: i319 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1595 
=== Usages ===
=== Predecessor ===
v1589 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3172 value: i319 stateAfter: - lastLocationAccess: - #next: v1595  <|@  <|@
f <@~|@floating>@ <|@
tid v3173 <|@
result [v109|QWORD[*] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j1573 
index: - 
=== Succesors ===
=== Usages ===
v1595 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1573 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1595 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3173 
value: a1068 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a1071 
=== Usages ===
=== Predecessor ===
v1593 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3173 value: a1068 stateAfter: - lastLocationAccess: - #next: a1071  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1071 <|@
result v110|QWORD[.] <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a1065 
=== Succesors ===
next: v1072 
=== Usages ===
a727 a715 
=== Predecessor ===
v1595 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a1065 #next: v1072  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1072 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v732 
=== Usages ===
=== Predecessor ===
a1071 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v732  <|@  <|@
f <@*|@fixed>@ <|@
tid v732 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2925) [bci: 74]
stamp: void
trueSuccessorProbability: 0.18579515065073993
=== Inputs ===
condition: v84 
=== Succesors ===
trueSuccessor: v731 
falseSuccessor: v730 
=== Usages ===
=== Predecessor ===
v1072 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v84 #trueSuccessor: v731 #falseSuccessor: v730  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v109|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v110|QWORD[.] = MOVE v109|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v111|QWORD = MOV [v100|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v109|QWORD[*]], y: v111|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v109|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v109|QWORD[*] + 12], y: v96|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v109|QWORD[*] + 16], y: v95|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v10|DWORD, y: v11|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.18579515065073993 condition: = trueDestination: B81 -> B82 falseDestination: B81 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors "B144" 
    xhandlers
    flags 
    probability 4587675027572901137
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v731 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2926) [bci: 77]
stamp: void
=== Inputs ===
=== Succesors ===
next: v706 
=== Usages ===
=== Predecessor ===
v732 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v706  <|@  <|@
f <@*|@fixed>@ <|@
tid v706 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v704 
=== Predecessor ===
v731 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v96|DWORD, v91|QWORD[.], v110|QWORD[.]] destination: B82 -> B144 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors "B206" 
    xhandlers
    flags 
    probability 4597400344143036126
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v730 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2927) [bci: 100]
stamp: void
=== Inputs ===
=== Succesors ===
next: v734 
=== Usages ===
=== Predecessor ===
v732 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v734  <|@  <|@
f <@*|@fixed>@ <|@
tid v734 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v518 
=== Predecessor ===
v730 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v91|QWORD[.], v96|DWORD, v110|QWORD[.]] destination: B83 -> B206 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B85" "B86" 
    xhandlers
    flags 
    probability 4581235090039285951
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v339 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 10]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2924) [bci: 69]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1596 
=== Usages ===
=== Predecessor ===
v340 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j1596  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1596 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j1611 
=== Usages ===
v3123 v3124 
=== Predecessor ===
v339 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j1611  <|@  <|@
f <@~|@floating>@ <|@
tid v3123 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j1596 
index: - 
=== Succesors ===
=== Usages ===
j1611 v1613 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1596 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1611 <|@
result v112|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v3123 
=== Succesors ===
next: j1612 
=== Usages ===
j1926 j1617 v3174 
=== Predecessor ===
j1596 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3123 #next: j1612  <|@  <|@
f <@~|@floating>@ <|@
tid v3124 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j1596 
index: - 
=== Succesors ===
=== Usages ===
j1612 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1596 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1612 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v3124 
=== Succesors ===
next: v1604 
=== Usages ===
v1601 
=== Predecessor ===
j1611 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3124 #next: v1604  <|@  <|@
f <@~|@floating>@ <|@
tid j1926 <|@
result v113|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1611 
y: j1919 
=== Succesors ===
=== Usages ===
v1601 v1613 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1611 y: j1919  <|@  <|@
f <@~|@floating>@ <|@
tid v1601 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1612 
y: j1926 
=== Succesors ===
=== Usages ===
v1604 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j1612 y: j1926  <|@  <|@
f <@*|@fixed>@ <|@
tid v1604 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v1601 
=== Succesors ===
trueSuccessor: v1602 
falseSuccessor: v1603 
=== Usages ===
=== Predecessor ===
j1612 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1601 #trueSuccessor: v1602 #falseSuccessor: v1603  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v112|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v113|QWORD = LEA [v112|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v113|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B84 -> B85 falseDestination: B84 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B87" 
    xhandlers
    flags 
    probability 4551271695864333850
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1602 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a1607 
=== Usages ===
=== Predecessor ===
v1604 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1607  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1607 <|@
result v114|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?527 
arguments: v1391 i271 i47 
=== Succesors ===
next: j1608 
=== Usages ===
j1608 
=== Predecessor ===
v1602 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?527 arguments: v1391 i271 i47 #next: j1608  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1608 <|@
result v114|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1607 
=== Succesors ===
next: v1618 
=== Usages ===
j1617 
=== Predecessor ===
a1607 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a1607 #next: v1618  <|@  <|@
f <@*|@fixed>@ <|@
tid v1618 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1615 
=== Predecessor ===
j1608 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v21|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FormatSpecifier.justify(Formatter.java:2924) [bci: 67]
locals: - v1|QWORD[.] vobject:StringBuilder:0{count=v93|DWORD,value=v91|QWORD[.]} v12|DWORD v14|DWORD - 
vobject:StringBuilder:0{count=v93|DWORD,value=v91|QWORD[.]} Ljava/lang/StringBuilder; v93|DWORD v91|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:67] <|@ <|@
      nr   -1  <|@ instruction v114|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v114|QWORD[.]] destination: B85 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B87" 
    xhandlers
    flags 
    probability 4581179311352977331
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1603 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1613 
=== Usages ===
=== Predecessor ===
v1604 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1613  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1613 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3123 
value: j1926 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1610 
=== Usages ===
=== Predecessor ===
v1603 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3123 value: j1926 stateAfter: - lastLocationAccess: - #next: v1610  <|@  <|@
f <@~|@floating>@ <|@
tid v3174 <|@
result [v112|QWORD + 216] <|@
d <@d|@=== Debug Properties ===
displacement: 216
scale: Times1
stamp: void*
=== Inputs ===
base: j1611 
index: - 
=== Succesors ===
=== Usages ===
v1610 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1611 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1610 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v3174 
=== Succesors ===
next: v1616 
=== Usages ===
=== Predecessor ===
v1613 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v3174 #next: v1616  <|@  <|@
f <@*|@fixed>@ <|@
tid v1616 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1615 
=== Predecessor ===
v1610 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v113|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v112|QWORD + 216] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v112|QWORD] destination: B86 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B86" "B85" 
    successors "B88" "B89" 
    xhandlers
    flags 
    probability 4581235090039285951
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1617 <|@
result v115|QWORD[*] <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1615 
values: j1611 j1608 
=== Succesors ===
=== Usages ===
v3127 v3126 a1075 v3175 v3176 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1615 values: j1611 j1608  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1615 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1616 v1618 
=== Succesors ===
next: a1075 
=== Usages ===
j1617 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1616 v1618 #next: a1075  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1075 <|@
result v116|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j1617 
=== Succesors ===
next: j1627 
=== Usages ===
a1080 
=== Predecessor ===
v1615 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j1617 #next: j1627  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1627 <|@
result v117|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v3125 
=== Succesors ===
next: v1628 
=== Usages ===
v1628 
=== Predecessor ===
a1075 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3125 #next: v1628  <|@  <|@
f <@~|@floating>@ <|@
tid v3126 <|@
result [v115|QWORD[*]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1617 
index: - 
=== Succesors ===
=== Usages ===
v1628 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1617 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1628 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3126 
value: j1627 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1631 
=== Usages ===
=== Predecessor ===
j1627 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3126 value: j1627 stateAfter: - lastLocationAccess: - #next: v1631  <|@  <|@
f <@~|@floating>@ <|@
tid v3127 <|@
result [v115|QWORD[*] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j1617 
index: - 
=== Succesors ===
=== Usages ===
v1631 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1617 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1631 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3127 
value: v1923 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1635 
=== Usages ===
=== Predecessor ===
v1628 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3127 value: v1923 stateAfter: - lastLocationAccess: - #next: v1635  <|@  <|@
f <@~|@floating>@ <|@
tid v3175 <|@
result [v115|QWORD[*] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j1617 
index: - 
=== Succesors ===
=== Usages ===
v1635 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1617 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1635 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3175 
value: i532 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1637 
=== Usages ===
=== Predecessor ===
v1631 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3175 value: i532 stateAfter: - lastLocationAccess: - #next: v1637  <|@  <|@
f <@~|@floating>@ <|@
tid v3176 <|@
result [v115|QWORD[*] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j1617 
index: - 
=== Succesors ===
=== Usages ===
v1637 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1617 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1637 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3176 
value: a1068 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a1080 
=== Usages ===
=== Predecessor ===
v1635 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3176 value: a1068 stateAfter: - lastLocationAccess: - #next: a1080  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1080 <|@
result v116|QWORD[.] <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a1075 
=== Succesors ===
next: v1081 
=== Usages ===
v827 ?696 v3083 v3084 a715 a727 j1691 
=== Predecessor ===
v1637 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a1075 #next: v1081  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1081 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: i343 
=== Usages ===
=== Predecessor ===
a1080 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: i343  <|@  <|@
tid v827 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2924) [bci: 69]
returnStamp: i32
signature: [Ljdk.vm.ci.meta.JavaType;@57a55a57
stamp: void
targetMethod: HotSpotMethod<AbstractStringBuilder.newCapacity(int)>
=== Inputs ===
arguments: a1080 i319 
=== Succesors ===
=== Usages ===
i343 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1080 i319  <|@  <|@
tid ?351 <|@
d <@d|@=== Debug Properties ===
bci: 21
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.append(String)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: AbstractStringBuilder.java
sourceLine: 448
stackSize: 0
=== Inputs ===
outerFrameState: ?333 
values: a89 a2 i3043 
=== Succesors ===
=== Usages ===
?344 ?348 ?1105 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?333 values: a89 a2 i3043  <|@  <|@
tid ?696 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a89 
materializedValue: a1080 
=== Succesors ===
=== Usages ===
?344 ?348 ?1105 
=== Predecessor ===
- >@ <|@
instruction <@MaterializedObjectState|@org.graalvm.compiler.virtual.nodes.MaterializedObjectState>@ object: a89 materializedValue: a1080  <|@  <|@
tid ?1105 <|@
d <@d|@=== Debug Properties ===
bci: 17
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.ensureCapacityInternal(int)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: AbstractStringBuilder.java
sourceLine: 125
stackSize: 2
=== Inputs ===
outerFrameState: ?351 
values: - - a89 a637 
virtualObjectMappings: ?696 
=== Succesors ===
=== Usages ===
i343 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?351 values: - - a89 a637 virtualObjectMappings: ?696  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i343 <|@
result v118|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 17
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2924) [bci: 69]
polymorphic: false
stamp: i32
targetMethod: Direct#AbstractStringBuilder.newCapacity
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v827 
stateDuring: ?1105 
=== Succesors ===
next: a3053 
=== Usages ===
?344 v1679 i869 j1962 a1660 i1266 i1638 v1645 v1242 v1228 
=== Predecessor ===
v1081 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v827 stateDuring: ?1105 #next: a3053  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a3053 <|@
result v119|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: String.value
nodeSourcePosition: at java.lang.String.getChars(String.java:820) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2924) [bci: 69]
nullCheck: false
stamp: n# [C
=== Inputs ===
stateBefore: - 
guard: - 
address: v3077 
=== Succesors ===
next: i3054 
=== Usages ===
a836 v3085 
=== Predecessor ===
i343 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3077 #next: i3054  <|@  <|@
tid ?344 <|@
d <@d|@=== Debug Properties ===
bci: 20
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.ensureCapacityInternal(int)>
duringCall: false
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2924) [bci: 69]
rethrowException: false
sourceFile: AbstractStringBuilder.java
sourceLine: 124
stackSize: 3
=== Inputs ===
outerFrameState: ?351 
values: - - a89 a637 i343 
virtualObjectMappings: ?696 
=== Succesors ===
=== Usages ===
v1383 a1660 i3054 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?351 values: - - a89 a637 i343 virtualObjectMappings: ?696  <|@  <|@
f <@~|@floating>@ <|@
tid v3085 <|@
result [v119|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a3053 
=== Succesors ===
=== Usages ===
i3054 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a3053  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i3054 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.compiler.nodes.java.ArrayLengthNode.arrayLength(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 60]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2924) [bci: 69]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?344 
guard: - 
address: v3085 
=== Succesors ===
next: v1004 
=== Usages ===
v930 
=== Predecessor ===
a3053 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?344 guard: - address: v3085 #next: v1004  <|@  <|@
f <@~|@floating>@ <|@
tid v930 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2924) [bci: 69]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3054 
y: i3043 
=== Succesors ===
=== Usages ===
v1004 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i3054 y: i3043  <|@  <|@
f <@*|@fixed>@ <|@
tid v1004 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.getChars(String.java:820) [bci: 19]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2924) [bci: 69]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v930 
=== Succesors ===
trueSuccessor: v1003 
falseSuccessor: v1001 
=== Usages ===
=== Predecessor ===
i3054 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v930 #trueSuccessor: v1003 #falseSuccessor: v1001  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v115|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v116|QWORD[.] = MOVE v115|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v117|QWORD = MOV [v100|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v115|QWORD[*]], y: v117|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v115|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v115|QWORD[*] + 12], y: v93|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v115|QWORD[*] + 16], y: v95|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v116|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v96|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
stack: v116|QWORD[.] v91|QWORD[.] 
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
locals: v116|QWORD[.] v1|QWORD[.] v5|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
locals: v116|QWORD[.] - 
java.util.Formatter$FormatSpecifier.justify(Formatter.java:2924) [bci: 69]
locals: - - v116|QWORD[.] v12|DWORD v14|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractStringBuilder.newCapacity(int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:17, 21, 2, 69] <|@ <|@
      nr   -1  <|@ instruction v118|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v119|DWORD[.] = MOV [v1|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
stack: v116|QWORD[.] v91|QWORD[.] v118|DWORD 
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
locals: v116|QWORD[.] v1|QWORD[.] v5|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
locals: v116|QWORD[.] - 
java.util.Formatter$FormatSpecifier.justify(Formatter.java:2924) [bci: 69]
locals: - - v116|QWORD[.] v12|DWORD v14|DWORD - 
>@ <|@ instruction CMP (x: v5|DWORD, y: [v119|DWORD[.] * 8 + 12]) size: DWORD state [bci:20, 21, 2, 69] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: |>| trueDestination: B87 -> B88 falseDestination: B87 -> B89 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B91" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1003 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.getChars(String.java:820) [bci: 19]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2924) [bci: 69]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1384 
=== Usages ===
=== Predecessor ===
v1004 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1384  <|@  <|@
f <@~|@floating>@ <|@
tid i1385 <|@
result int[-215571|0xfffffffffffcb5ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -215571
stableDimension: 0
stamp: i32 [-215571] ⇊00000000fffcb5ed ⇈00000000fffcb5ed
stampKind: i32
value: int[-215571|0xfffffffffffcb5ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1381 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1384 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1378 
=== Predecessor ===
v1003 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-215571|0xfffffffffffcb5ed]] destination: B88 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B90" "B92" 
    xhandlers
    flags 
    probability 4581235090039285951
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1001 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.getChars(String.java:820) [bci: 19]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2924) [bci: 69]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1234 
=== Usages ===
=== Predecessor ===
v1004 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1234  <|@  <|@
f <@~|@floating>@ <|@
tid v1228 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:185) [bci: 22]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:100) [bci: 3]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2924) [bci: 69]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i343 
y: i26 
=== Succesors ===
=== Usages ===
v1234 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i343 y: i26  <|@  <|@
f <@*|@fixed>@ <|@
tid v1234 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:185) [bci: 33]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:100) [bci: 3]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2924) [bci: 69]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v1228 
=== Succesors ===
trueSuccessor: v1233 
falseSuccessor: v1229 
=== Usages ===
=== Predecessor ===
v1001 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1228 #trueSuccessor: v1233 #falseSuccessor: v1229  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v118|DWORD, y: v118|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B89 -> B90 falseDestination: B89 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B89" 
    successors "B91" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1233 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:187) [bci: 55]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:100) [bci: 3]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2924) [bci: 69]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1386 
=== Usages ===
=== Predecessor ===
v1234 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1386  <|@  <|@
f <@~|@floating>@ <|@
tid i1387 <|@
result int[-317537|0xfffffffffffb279f] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -317537
stableDimension: 0
stamp: i32 [-317537] ⇊00000000fffb279f ⇈00000000fffb279f
stampKind: i32
value: int[-317537|0xfffffffffffb279f]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1381 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1386 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1378 
=== Predecessor ===
v1233 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-317537|0xfffffffffffb279f]] destination: B90 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B88" "B90" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1381 <|@
result v120|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-317537 - -214539] ⇊00000000fff82185 ⇈00000000ffffbfff
valueDescription: i32
=== Inputs ===
merge: v1378 
values: i1385 i1387 
=== Succesors ===
=== Usages ===
v1383 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1378 values: i1385 i1387  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1378 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1384 v1386 
=== Succesors ===
next: v1383 
=== Usages ===
i1381 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1384 v1386 #next: v1383  <|@  <|@
f <@*|@fixed>@ <|@
tid v1383 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?344 
actionAndReason: i1381 
speculation: a1332 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1378 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?344 actionAndReason: i1381 speculation: a1332  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v120|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v120|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
stack: v116|QWORD[.] v91|QWORD[.] v118|DWORD 
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
locals: v116|QWORD[.] v1|QWORD[.] v5|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
locals: v116|QWORD[.] - 
java.util.Formatter$FormatSpecifier.justify(Formatter.java:2924) [bci: 69]
locals: - - v116|QWORD[.] v12|DWORD v14|DWORD - 
>@ <|@ instruction DEOPT info [bci:20, 21, 2, 69] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B89" 
    successors "B93" "B96" 
    xhandlers
    flags 
    probability 4581235090039285951
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1229 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:185) [bci: 36]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:100) [bci: 3]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2924) [bci: 69]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1640 
=== Usages ===
=== Predecessor ===
v1234 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j1640  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1640 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:772) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:319) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2924) [bci: 69]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j1676 
=== Usages ===
v3128 v3129 
=== Predecessor ===
v1229 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j1676  <|@  <|@
f <@~|@floating>@ <|@
tid v3128 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j1640 
index: - 
=== Succesors ===
=== Usages ===
j1676 v1678 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1640 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1676 <|@
result v121|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:245) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:320) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2924) [bci: 69]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v3128 
=== Succesors ===
next: j1677 
=== Usages ===
j1644 v3130 v3131 a1659 v3136 v3132 v3133 v3134 v3135 
=== Predecessor ===
j1640 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3128 #next: j1677  <|@  <|@
f <@~|@floating>@ <|@
tid v3129 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j1640 
index: - 
=== Succesors ===
=== Usages ===
j1677 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1640 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1677 <|@
result v122|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:249) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:321) [bci: 25]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2924) [bci: 69]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v3129 
=== Succesors ===
next: v1648 
=== Usages ===
v1649 
=== Predecessor ===
j1676 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3129 #next: v1648  <|@  <|@
f <@~|@floating>@ <|@
tid v1645 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.core.common.calc.UnsignedMath.belowThan(int, int) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 50]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2924) [bci: 69]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i343 
y: i1489 
=== Succesors ===
=== Usages ===
v1648 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i343 y: i1489  <|@  <|@
f <@*|@fixed>@ <|@
tid v1648 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 64]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2924) [bci: 69]
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v1645 
=== Succesors ===
trueSuccessor: v1647 
falseSuccessor: v1646 
=== Usages ===
=== Predecessor ===
j1677 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1645 #trueSuccessor: v1647 #falseSuccessor: v1646  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v121|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v122|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v118|DWORD y: 16777215 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B92 -> B93 falseDestination: B92 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B94" "B95" 
    xhandlers
    flags 
    probability 4580677303176199750
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1647 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 67]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2924) [bci: 69]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1655 
=== Usages ===
=== Predecessor ===
v1648 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1655  <|@  <|@
f <@~|@floating>@ <|@
tid i1638 <|@
result v123|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 8]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2924) [bci: 69]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i343 
y: i47 
=== Succesors ===
=== Usages ===
i1667 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i343 y: i47  <|@  <|@
f <@~|@floating>@ <|@
tid i1667 <|@
result v124|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2924) [bci: 69]
stamp: i32 [-2147483647 - 2147483647] ⇊0000000000000001
=== Inputs ===
x: i1638 
y: i1512 
=== Succesors ===
=== Usages ===
i1639 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1638 y: i1512  <|@  <|@
f <@~|@floating>@ <|@
tid i1639 <|@
result v125|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:604) [bci: 30]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2924) [bci: 69]
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i1667 
y: i1482 
=== Succesors ===
=== Usages ===
j1643 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i1667 y: i1482  <|@  <|@
f <@~|@floating>@ <|@
tid j1643 <|@
result v126|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2924) [bci: 69]
resultBits: 64
stamp: i64 [-2147483648 - 2147483640] ⇈fffffffffffffff8
=== Inputs ===
value: i1639 
=== Succesors ===
=== Usages ===
j1644 v3132 v3133 v3134 v3135 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i1639  <|@  <|@
f <@~|@floating>@ <|@
tid j1644 <|@
result v127|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2924) [bci: 69]
stamp: i64
=== Inputs ===
x: j1643 
y: j1676 
=== Succesors ===
=== Usages ===
v1649 v1678 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1643 y: j1676  <|@  <|@
f <@~|@floating>@ <|@
tid v1649 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 83]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2924) [bci: 69]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1677 
y: j1644 
=== Succesors ===
=== Usages ===
v1655 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j1677 y: j1644  <|@  <|@
f <@*|@fixed>@ <|@
tid v1655 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 89]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2924) [bci: 69]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v1649 
=== Succesors ===
trueSuccessor: v1654 
falseSuccessor: v1653 
=== Usages ===
=== Predecessor ===
v1647 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1649 #trueSuccessor: v1654 #falseSuccessor: v1653  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v123|DWORD = SHL v118|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v124|DWORD = LEA [v123|DWORD + 23] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v125|DWORD = AND v124|DWORD y: -8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v126|QWORD = MOVSXD v125|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v127|QWORD = ADD (x: v126|QWORD, y: v121|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v127|QWORD, y: v122|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B93 -> B94 falseDestination: B93 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B97" 
    xhandlers
    flags 
    probability 4550557728679583512
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1654 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2924) [bci: 69]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1652 
=== Usages ===
=== Predecessor ===
v1655 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1652  <|@  <|@
f <@*|@fixed>@ <|@
tid v1652 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2924) [bci: 69]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1651 
=== Predecessor ===
v1654 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B94 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B98" 
    xhandlers
    flags 
    probability 4580627102358521992
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1653 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 92]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2924) [bci: 69]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1678 
=== Usages ===
=== Predecessor ===
v1655 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1678  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1678 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:257) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 96]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2924) [bci: 69]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3128 
value: j1644 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1669 
=== Usages ===
=== Predecessor ===
v1653 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3128 value: j1644 stateAfter: - lastLocationAccess: - #next: v1669  <|@  <|@
f <@~|@floating>@ <|@
tid v3132 <|@
result [v126|QWORD + v121|QWORD * 1 + 192] <|@
d <@d|@=== Debug Properties ===
displacement: 192
scale: Times1
stamp: void*
=== Inputs ===
base: j1643 
index: j1676 
=== Succesors ===
=== Usages ===
v1669 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1643 index: j1676  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1669 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2924) [bci: 69]
stamp: void
=== Inputs ===
address: v3132 
=== Succesors ===
next: v1671 
=== Usages ===
=== Predecessor ===
v1678 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v3132 #next: v1671  <|@  <|@
f <@~|@floating>@ <|@
tid v3133 <|@
result [v126|QWORD + v121|QWORD * 1 + 256] <|@
d <@d|@=== Debug Properties ===
displacement: 256
scale: Times1
stamp: void*
=== Inputs ===
base: j1643 
index: j1676 
=== Succesors ===
=== Usages ===
v1671 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1643 index: j1676  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1671 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2924) [bci: 69]
stamp: void
=== Inputs ===
address: v3133 
=== Succesors ===
next: v1673 
=== Usages ===
=== Predecessor ===
v1669 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v3133 #next: v1673  <|@  <|@
f <@~|@floating>@ <|@
tid v3134 <|@
result [v126|QWORD + v121|QWORD * 1 + 320] <|@
d <@d|@=== Debug Properties ===
displacement: 320
scale: Times1
stamp: void*
=== Inputs ===
base: j1643 
index: j1676 
=== Succesors ===
=== Usages ===
v1673 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1643 index: j1676  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1673 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2924) [bci: 69]
stamp: void
=== Inputs ===
address: v3134 
=== Succesors ===
next: v1675 
=== Usages ===
=== Predecessor ===
v1671 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v3134 #next: v1675  <|@  <|@
f <@~|@floating>@ <|@
tid v3135 <|@
result [v126|QWORD + v121|QWORD * 1 + 384] <|@
d <@d|@=== Debug Properties ===
displacement: 384
scale: Times1
stamp: void*
=== Inputs ===
base: j1643 
index: j1676 
=== Succesors ===
=== Usages ===
v1675 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1643 index: j1676  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1675 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2924) [bci: 69]
stamp: void
=== Inputs ===
address: v3135 
=== Succesors ===
next: v1679 
=== Usages ===
=== Predecessor ===
v1673 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v3135 #next: v1679  <|@  <|@
f <@~|@floating>@ <|@
tid v3130 <|@
result [v121|QWORD + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j1676 
index: - 
=== Succesors ===
=== Usages ===
v1679 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1676 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1679 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:549) [bci: 12]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2924) [bci: 69]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3130 
value: i343 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1680 
=== Usages ===
=== Predecessor ===
v1675 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3130 value: i343 stateAfter: - lastLocationAccess: - #next: v1680  <|@  <|@
f <@~|@floating>@ <|@
tid v3131 <|@
result [v121|QWORD] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1676 
index: - 
=== Succesors ===
=== Usages ===
v1680 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1676 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1680 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:469) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2924) [bci: 69]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3131 
value: j1425 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1683 
=== Usages ===
=== Predecessor ===
v1679 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3131 value: j1425 stateAfter: - lastLocationAccess: - #next: v1683  <|@  <|@
f <@~|@floating>@ <|@
tid v3136 <|@
result [v121|QWORD + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j1676 
index: - 
=== Succesors ===
=== Usages ===
v1683 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1676 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1683 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2924) [bci: 69]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3136 
value: v1913 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1658 
=== Usages ===
=== Predecessor ===
v1680 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3136 value: v1913 stateAfter: - lastLocationAccess: - #next: v1658  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1658 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.MembarNode.memoryBarrier(int, LocationIdentity) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:560) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2924) [bci: 69]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1659 
=== Usages ===
=== Predecessor ===
v1683 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a1659  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1659 <|@
result v128|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:561) [bci: 71]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2924) [bci: 69]
stamp: a! -
trackedPointer: true
=== Inputs ===
input: j1676 
=== Succesors ===
next: v1661 
=== Usages ===
a1664 
=== Predecessor ===
v1658 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j1676 #next: v1661  <|@  <|@
f <@*|@fixed>@ <|@
tid v1661 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2924) [bci: 69]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1662 
=== Predecessor ===
a1659 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v127|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v126|QWORD + v121|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v126|QWORD + v121|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v126|QWORD + v121|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v126|QWORD + v121|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v121|QWORD + 12], y: v118|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v121|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v121|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v128|QWORD[.] = MOVE v121|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v128|QWORD[.]] destination: B95 -> B98 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B97" 
    xhandlers
    flags 
    probability 4566567412708321174
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1646 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2924) [bci: 69]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1650 
=== Usages ===
=== Predecessor ===
v1648 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1650  <|@  <|@
f <@*|@fixed>@ <|@
tid v1650 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2924) [bci: 69]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1651 
=== Predecessor ===
v1646 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B96 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B96" "B94" 
    successors "B98" 
    xhandlers
    flags 
    probability 4567010323972424124
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1651 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2924) [bci: 69]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1650 v1652 
=== Succesors ===
next: a1660 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1650 v1652 #next: a1660  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1660 <|@
result v129|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.newArray(ForeignCallDescriptor, KlassPointer, int, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 155]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2924) [bci: 69]
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?344 
arguments: v1424 i343 i26 
=== Succesors ===
next: v1663 
=== Usages ===
a1664 
=== Predecessor ===
v1651 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?344 arguments: v1424 i343 i26 #next: v1663  <|@  <|@
f <@*|@fixed>@ <|@
tid v1663 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2924) [bci: 69]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1662 
=== Predecessor ===
a1660 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v19|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v118|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
stack: v116|QWORD[.] v91|QWORD[.] v118|DWORD 
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
locals: v116|QWORD[.] v1|QWORD[.] v5|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
locals: v116|QWORD[.] - 
java.util.Formatter$FormatSpecifier.justify(Formatter.java:2924) [bci: 69]
locals: - - v116|QWORD[.] v12|DWORD v14|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:20, 21, 2, 69] <|@ <|@
      nr   -1  <|@ instruction v129|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v129|QWORD[.]] destination: B97 -> B98 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B95" "B97" 
    successors "B99" "B100" 
    xhandlers
    flags 
    probability 4581235090039285952
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a1664 <|@
result v130|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2924) [bci: 69]
stamp: a! -
valueDescription: a -
=== Inputs ===
merge: v1662 
values: a1659 a1660 
=== Succesors ===
=== Usages ===
v3186 a1285 v3099 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1662 values: a1659 a1660  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1662 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2924) [bci: 69]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1661 v1663 
=== Succesors ===
next: v2837 
=== Usages ===
a1664 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1661 v1663 #next: v2837  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2837 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v2354 
=== Usages ===
j2838 j2840 
=== Predecessor ===
v1662 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v2354  <|@  <|@
f <@~|@floating>@ <|@
tid v1242 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Math.min(Math.java:1336) [bci: 2]
at com.oracle.graal.enterprise.T.c.b(stripped:192) [bci: 4]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:102) [bci: 9]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2924) [bci: 69]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3052 
y: i343 
=== Succesors ===
=== Usages ===
i1266 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i3052 y: i343  <|@  <|@
f <@~|@floating>@ <|@
tid i1266 <|@
result v131|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
condition: v1242 
trueValue: i3052 
falseValue: i343 
=== Succesors ===
=== Usages ===
j1963 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v1242 trueValue: i3052 falseValue: i343  <|@  <|@
f <@~|@floating>@ <|@
tid j1963 <|@
result v132|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i1266 
=== Succesors ===
=== Usages ===
j2895 v3186 j1967 v2351 v2488 j2881 j2886 j2889 j2892 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i1266  <|@  <|@
f <@~|@floating>@ <|@
tid v2351 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1963 
y: j1425 
=== Succesors ===
=== Usages ===
v2354 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1963 y: j1425  <|@  <|@
f <@*|@fixed>@ <|@
tid v2354 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v2351 
=== Succesors ===
trueSuccessor: v2352 
falseSuccessor: v2353 
=== Usages ===
=== Predecessor ===
v2837 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2351 #trueSuccessor: v2352 #falseSuccessor: v2353  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v130|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v118|DWORD, y: v94|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v131|DWORD = CMOVE (falseValue: v118|DWORD, ~trueValue: v94|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction v132|QWORD = MOVSXD v131|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v132|QWORD y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B98 -> B99 falseDestination: B98 -> B100 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B98" 
    successors "B117" 
    xhandlers
    flags 
    probability 4576731490411915456
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2352 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2370 
=== Usages ===
=== Predecessor ===
v2354 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2370  <|@  <|@
f <@*|@fixed>@ <|@
tid v2370 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2371 
=== Predecessor ===
v2352 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B99 -> B117 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B98" 
    successors "B101" "B102" 
    xhandlers
    flags 
    probability 4576731490411915456
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2353 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2357 
=== Usages ===
=== Predecessor ===
v2354 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2357  <|@  <|@
f <@~|@floating>@ <|@
tid v3099 <|@
result [v130|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1664 
index: - 
=== Succesors ===
=== Usages ===
j2840 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1664 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j2840 <|@
result v133|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v2837 
address: v3099 
=== Succesors ===
=== Usages ===
v3232 v3234 v3236 v3238 v3240 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v2837 address: v3099  <|@  <|@
f <@~|@floating>@ <|@
tid v3095 <|@
result [v91|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a637 
index: - 
=== Succesors ===
=== Usages ===
j2838 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a637 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j2838 <|@
result v134|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v2837 
address: v3095 
=== Succesors ===
=== Usages ===
v3233 v3235 v3237 v3239 v3241 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v2837 address: v3095  <|@  <|@
f <@~|@floating>@ <|@
tid j2881 <|@
result v135|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483664 - 2147483631]
=== Inputs ===
x: j1963 
y: j2537 
=== Succesors ===
=== Usages ===
v2882 v2884 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1963 y: j2537  <|@  <|@
f <@~|@floating>@ <|@
tid v2882 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2881 
y: j1034 
=== Succesors ===
=== Usages ===
v2357 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2881 y: j1034  <|@  <|@
f <@*|@fixed>@ <|@
tid v2357 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v2882 
=== Succesors ===
trueSuccessor: v2355 
falseSuccessor: v2356 
=== Usages ===
=== Predecessor ===
v2353 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2882 #trueSuccessor: v2355 #falseSuccessor: v2356  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v133|QWORD[.] = LEA [v130|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v134|QWORD[.] = LEA [v91|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v135|QWORD = LEA [v132|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v135|QWORD, y: v135|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B100 -> B101 falseDestination: B100 -> B102 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B105" 
    xhandlers
    flags 
    probability 4575016825099975968
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2355 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2366 
=== Usages ===
=== Predecessor ===
v2357 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2366  <|@  <|@
f <@*|@fixed>@ <|@
tid v2366 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2367 
=== Predecessor ===
v2355 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B101 -> B105 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B103" 
    xhandlers
    flags 
    probability 4567724291157174464
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2356 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2358 
=== Usages ===
=== Predecessor ===
v2357 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2358  <|@  <|@
f <@*|@fixed>@ <|@
tid v2358 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2359 
=== Predecessor ===
v2356 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B102 -> B103 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B102" "B266" 
    successors "B104" "B266" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4576731490411915456
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j2873 <|@
result v136|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2359 
values: j1034 j2880 
=== Succesors ===
=== Usages ===
v3241 j2880 v3240 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2359 values: j1034 j2880  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2359 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v2358 
=== Succesors ===
next: v3055 
=== Usages ===
v3055 v2362 v2363 j2873 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v2358 #next: v3055  <|@  <|@
f <@~|@floating>@ <|@
tid v3241 <|@
result [v134|QWORD[.] + v136|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j2838 
index: j2873 
=== Succesors ===
=== Usages ===
v3055 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2838 index: j2873  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3055 <|@
result v137|V256_WORD <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16>
=== Inputs ===
stateBefore: - 
guard: v2359 
address: v3241 
=== Succesors ===
next: v3029 
=== Usages ===
v3029 
=== Predecessor ===
v2359 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v2359 address: v3241 #next: v3029  <|@  <|@
f <@~|@floating>@ <|@
tid v3240 <|@
result [v133|QWORD[.] + v136|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j2840 
index: j2873 
=== Succesors ===
=== Usages ===
v3029 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2840 index: j2873  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3029 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3240 
value: v3055 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2365 
=== Usages ===
=== Predecessor ===
v3055 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3240 value: v3055 stateAfter: - lastLocationAccess: - #next: v2365  <|@  <|@
f <@~|@floating>@ <|@
tid j2880 <|@
result v138|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j2873 
y: j739 
=== Succesors ===
=== Usages ===
j2865 j2873 v2884 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2873 y: j739  <|@  <|@
f <@~|@floating>@ <|@
tid v2884 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2881 
y: j2880 
=== Succesors ===
=== Usages ===
v2365 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2881 y: j2880  <|@  <|@
f <@*|@fixed>@ <|@
tid v2365 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v2884 
=== Succesors ===
trueSuccessor: v2362 
falseSuccessor: v2364 
=== Usages ===
=== Predecessor ===
v3029 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2884 #trueSuccessor: v2362 #falseSuccessor: v2364  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v136|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v137|V256_WORD = H [v134|QWORD[.] + v136|QWORD * 2] nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v133|QWORD[.] + v136|QWORD * 2], input: v137|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v138|QWORD = LEA [v136|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v138|QWORD, y: v135|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B103 -> B104 falseDestination: B103 -> B266 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B105" 
    xhandlers
    flags 
    probability 4567724291157174464
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2362 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v2359 
=== Succesors ===
next: v2368 
=== Usages ===
=== Predecessor ===
v2365 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v2359 #next: v2368  <|@  <|@
f <@*|@fixed>@ <|@
tid v2368 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2367 
=== Predecessor ===
v2362 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v138|QWORD] destination: B104 -> B105 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B101" "B104" 
    successors "B106" "B107" 
    xhandlers
    flags 
    probability 4576731490411915456
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j2865 <|@
result v139|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2367 
values: j1034 j2880 
=== Succesors ===
=== Usages ===
v3239 j2872 j2857 v2887 v3238 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2367 values: j1034 j2880  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2367 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2366 v2368 
=== Succesors ===
next: v2389 
=== Usages ===
j2865 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2366 v2368 #next: v2389  <|@  <|@
f <@~|@floating>@ <|@
tid j2886 <|@
result v140|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483656 - 2147483639]
=== Inputs ===
x: j1963 
y: j2543 
=== Succesors ===
=== Usages ===
v2887 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1963 y: j2543  <|@  <|@
f <@~|@floating>@ <|@
tid v2887 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2886 
y: j2865 
=== Succesors ===
=== Usages ===
v2389 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2886 y: j2865  <|@  <|@
f <@*|@fixed>@ <|@
tid v2389 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v2887 
=== Succesors ===
trueSuccessor: v2388 
falseSuccessor: v2387 
=== Usages ===
=== Predecessor ===
v2367 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2887 #trueSuccessor: v2388 #falseSuccessor: v2387  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v139|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v140|QWORD = LEA [v132|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v139|QWORD, y: v140|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B105 -> B106 falseDestination: B105 -> B107 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B105" 
    successors "B108" 
    xhandlers
    flags 
    probability 4567724291157174464
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2388 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2392 
=== Usages ===
=== Predecessor ===
v2389 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2392  <|@  <|@
f <@*|@fixed>@ <|@
tid v2392 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2378 
=== Predecessor ===
v2388 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v139|QWORD] destination: B106 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B105" 
    successors "B108" 
    xhandlers
    flags 
    probability 4575016825099975968
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2387 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3056 
=== Usages ===
v3056 
=== Predecessor ===
v2389 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3056  <|@  <|@
f <@~|@floating>@ <|@
tid v3239 <|@
result [v134|QWORD[.] + v139|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j2838 
index: j2865 
=== Succesors ===
=== Usages ===
v3056 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2838 index: j2865  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3056 <|@
result v141|V128_WORD <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16,i16,i16,i16,i16,i16,i16>
=== Inputs ===
stateBefore: - 
guard: v2387 
address: v3239 
=== Succesors ===
next: v3027 
=== Usages ===
v3027 
=== Predecessor ===
v2387 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v2387 address: v3239 #next: v3027  <|@  <|@
f <@~|@floating>@ <|@
tid v3238 <|@
result [v133|QWORD[.] + v139|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j2840 
index: j2865 
=== Succesors ===
=== Usages ===
v3027 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2840 index: j2865  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3027 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3238 
value: v3056 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2377 
=== Usages ===
=== Predecessor ===
v3056 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3238 value: v3056 stateAfter: - lastLocationAccess: - #next: v2377  <|@  <|@
f <@~|@floating>@ <|@
tid j2872 <|@
result v142|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j2865 
y: j1432 
=== Succesors ===
=== Usages ===
j2857 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2865 y: j1432  <|@  <|@
f <@*|@fixed>@ <|@
tid v2377 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2378 
=== Predecessor ===
v3027 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v141|V128_WORD = H [v134|QWORD[.] + v139|QWORD * 2] nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v133|QWORD[.] + v139|QWORD * 2], input: v141|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v142|QWORD = LEA [v139|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v142|QWORD] destination: B107 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B107" "B106" 
    successors "B109" "B110" 
    xhandlers
    flags 
    probability 4576731490411915456
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j2857 <|@
result v143|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2378 
values: j2872 j2865 
=== Succesors ===
=== Usages ===
v3237 j2864 j2849 v2890 v3236 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2378 values: j2872 j2865  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2378 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2377 v2392 
=== Succesors ===
next: v2395 
=== Usages ===
j2857 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2377 v2392 #next: v2395  <|@  <|@
f <@~|@floating>@ <|@
tid j2889 <|@
result v144|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483652 - 2147483643]
=== Inputs ===
x: j1963 
y: j2547 
=== Succesors ===
=== Usages ===
v2890 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1963 y: j2547  <|@  <|@
f <@~|@floating>@ <|@
tid v2890 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2889 
y: j2857 
=== Succesors ===
=== Usages ===
v2395 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2889 y: j2857  <|@  <|@
f <@*|@fixed>@ <|@
tid v2395 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v2890 
=== Succesors ===
trueSuccessor: v2394 
falseSuccessor: v2393 
=== Usages ===
=== Predecessor ===
v2378 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2890 #trueSuccessor: v2394 #falseSuccessor: v2393  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v143|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v144|QWORD = LEA [v132|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v143|QWORD, y: v144|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B108 -> B109 falseDestination: B108 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B111" 
    xhandlers
    flags 
    probability 4567724291157174464
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2394 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2398 
=== Usages ===
=== Predecessor ===
v2395 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2398  <|@  <|@
f <@*|@fixed>@ <|@
tid v2398 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2381 
=== Predecessor ===
v2394 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v143|QWORD] destination: B109 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B111" 
    xhandlers
    flags 
    probability 4575016825099975968
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2393 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3057 
=== Usages ===
v3057 
=== Predecessor ===
v2395 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3057  <|@  <|@
f <@~|@floating>@ <|@
tid v3237 <|@
result [v134|QWORD[.] + v143|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j2838 
index: j2857 
=== Succesors ===
=== Usages ===
v3057 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2838 index: j2857  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3057 <|@
result v145|V64_WORD <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16,i16,i16>
=== Inputs ===
stateBefore: - 
guard: v2393 
address: v3237 
=== Succesors ===
next: v3025 
=== Usages ===
v3025 
=== Predecessor ===
v2393 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v2393 address: v3237 #next: v3025  <|@  <|@
f <@~|@floating>@ <|@
tid v3236 <|@
result [v133|QWORD[.] + v143|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j2840 
index: j2857 
=== Succesors ===
=== Usages ===
v3025 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2840 index: j2857  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3025 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3236 
value: v3057 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2380 
=== Usages ===
=== Predecessor ===
v3057 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3236 value: v3057 stateAfter: - lastLocationAccess: - #next: v2380  <|@  <|@
f <@~|@floating>@ <|@
tid j2864 <|@
result v146|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j2857 
y: j2519 
=== Succesors ===
=== Usages ===
j2849 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2857 y: j2519  <|@  <|@
f <@*|@fixed>@ <|@
tid v2380 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2381 
=== Predecessor ===
v3025 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v145|V64_WORD = H [v134|QWORD[.] + v143|QWORD * 2] nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction J (address: [v133|QWORD[.] + v143|QWORD * 2], input: v145|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v146|QWORD = LEA [v143|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v146|QWORD] destination: B110 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B110" "B109" 
    successors "B112" "B113" 
    xhandlers
    flags 
    probability 4576731490411915456
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j2849 <|@
result v147|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2381 
values: j2864 j2857 
=== Succesors ===
=== Usages ===
v3235 j2856 j2841 v2893 v3234 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2381 values: j2864 j2857  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2381 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2380 v2398 
=== Succesors ===
next: v2401 
=== Usages ===
j2849 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2380 v2398 #next: v2401  <|@  <|@
f <@~|@floating>@ <|@
tid j2892 <|@
result v148|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483650 - 2147483645]
=== Inputs ===
x: j1963 
y: j2551 
=== Succesors ===
=== Usages ===
v2893 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1963 y: j2551  <|@  <|@
f <@~|@floating>@ <|@
tid v2893 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2892 
y: j2849 
=== Succesors ===
=== Usages ===
v2401 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2892 y: j2849  <|@  <|@
f <@*|@fixed>@ <|@
tid v2401 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v2893 
=== Succesors ===
trueSuccessor: v2400 
falseSuccessor: v2399 
=== Usages ===
=== Predecessor ===
v2381 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2893 #trueSuccessor: v2400 #falseSuccessor: v2399  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v147|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v148|QWORD = LEA [v132|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v147|QWORD, y: v148|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B111 -> B112 falseDestination: B111 -> B113 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B114" 
    xhandlers
    flags 
    probability 4567724291157174464
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2400 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2404 
=== Usages ===
=== Predecessor ===
v2401 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2404  <|@  <|@
f <@*|@fixed>@ <|@
tid v2404 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2384 
=== Predecessor ===
v2400 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v147|QWORD] destination: B112 -> B114 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B114" 
    xhandlers
    flags 
    probability 4575016825099975968
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2399 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3058 
=== Usages ===
v3058 
=== Predecessor ===
v2401 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3058  <|@  <|@
f <@~|@floating>@ <|@
tid v3235 <|@
result [v134|QWORD[.] + v147|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j2838 
index: j2849 
=== Succesors ===
=== Usages ===
v3058 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2838 index: j2849  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3058 <|@
result v149|V32_WORD <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16>
=== Inputs ===
stateBefore: - 
guard: v2399 
address: v3235 
=== Succesors ===
next: v3023 
=== Usages ===
v3023 
=== Predecessor ===
v2399 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v2399 address: v3235 #next: v3023  <|@  <|@
f <@~|@floating>@ <|@
tid v3234 <|@
result [v133|QWORD[.] + v147|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j2840 
index: j2849 
=== Succesors ===
=== Usages ===
v3023 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2840 index: j2849  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3023 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3234 
value: v3058 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2383 
=== Usages ===
=== Predecessor ===
v3058 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3234 value: v3058 stateAfter: - lastLocationAccess: - #next: v2383  <|@  <|@
f <@~|@floating>@ <|@
tid j2856 <|@
result v150|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j2849 
y: j2497 
=== Succesors ===
=== Usages ===
j2841 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2849 y: j2497  <|@  <|@
f <@*|@fixed>@ <|@
tid v2383 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2384 
=== Predecessor ===
v3023 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v149|V32_WORD = H [v134|QWORD[.] + v147|QWORD * 2] nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction J (address: [v133|QWORD[.] + v147|QWORD * 2], input: v149|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction v150|QWORD = LEA [v147|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v150|QWORD] destination: B113 -> B114 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B113" "B112" 
    successors "B115" "B116" 
    xhandlers
    flags 
    probability 4576731490411915456
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j2841 <|@
result v151|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2384 
values: j2856 j2849 
=== Succesors ===
=== Usages ===
v3233 v2896 v3232 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2384 values: j2856 j2849  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2384 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2383 v2404 
=== Succesors ===
next: v2407 
=== Usages ===
j2841 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2383 v2404 #next: v2407  <|@  <|@
f <@~|@floating>@ <|@
tid j2895 <|@
result v152|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483649 - 2147483646]
=== Inputs ===
x: j1963 
y: j2555 
=== Succesors ===
=== Usages ===
v2896 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1963 y: j2555  <|@  <|@
f <@~|@floating>@ <|@
tid v2896 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2895 
y: j2841 
=== Succesors ===
=== Usages ===
v2407 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2895 y: j2841  <|@  <|@
f <@*|@fixed>@ <|@
tid v2407 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v2896 
=== Succesors ===
trueSuccessor: v2406 
falseSuccessor: v2405 
=== Usages ===
=== Predecessor ===
v2384 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2896 #trueSuccessor: v2406 #falseSuccessor: v2405  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v151|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v152|QWORD = DEC v132|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v151|QWORD, y: v152|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B114 -> B115 falseDestination: B114 -> B116 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors "B117" 
    xhandlers
    flags 
    probability 4567724291157174464
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2406 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2410 
=== Usages ===
=== Predecessor ===
v2407 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2410  <|@  <|@
f <@*|@fixed>@ <|@
tid v2410 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2371 
=== Predecessor ===
v2406 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B115 -> B117 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors "B117" 
    xhandlers
    flags 
    probability 4575016825099975968
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2405 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: i3059 
=== Usages ===
i3059 
=== Predecessor ===
v2407 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i3059  <|@  <|@
f <@~|@floating>@ <|@
tid v3233 <|@
result [v134|QWORD[.] + v151|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j2838 
index: j2841 
=== Succesors ===
=== Usages ===
i3059 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2838 index: j2841  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i3059 <|@
result v153|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: v2405 
address: v3233 
=== Succesors ===
next: v3021 
=== Usages ===
v3021 
=== Predecessor ===
v2405 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v2405 address: v3233 #next: v3021  <|@  <|@
f <@~|@floating>@ <|@
tid v3232 <|@
result [v133|QWORD[.] + v151|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j2840 
index: j2841 
=== Succesors ===
=== Usages ===
v3021 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2840 index: j2841  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3021 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3232 
value: i3059 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2386 
=== Usages ===
=== Predecessor ===
i3059 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3232 value: i3059 stateAfter: - lastLocationAccess: - #next: v2386  <|@  <|@
f <@*|@fixed>@ <|@
tid v2386 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2371 
=== Predecessor ===
v3021 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v153|DWORD = MOVSX [v134|QWORD[.] + v151|QWORD * 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v133|QWORD[.] + v151|QWORD * 2], y: v153|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B116 -> B117 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B99" "B116" "B115" 
    successors "B118" "B136" 
    xhandlers
    flags 
    probability 4581235090039285952
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2371 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2370 v2386 v2410 
=== Succesors ===
next: v2899 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2370 v2386 v2410 #next: v2899  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2899 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v2417 
=== Usages ===
j2901 
=== Predecessor ===
v2371 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v2417  <|@  <|@
f <@~|@floating>@ <|@
tid j1962 <|@
result v154|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i343 
=== Succesors ===
=== Usages ===
j1967 v2488 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i343  <|@  <|@
f <@~|@floating>@ <|@
tid v2488 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1963 
y: j1962 
=== Succesors ===
=== Usages ===
v2417 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1963 y: j1962  <|@  <|@
f <@*|@fixed>@ <|@
tid v2417 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v2488 
=== Succesors ===
trueSuccessor: v2416 
falseSuccessor: v2415 
=== Usages ===
=== Predecessor ===
v2899 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2488 #trueSuccessor: v2416 #falseSuccessor: v2415  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v154|QWORD = MOVSXD v118|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v154|QWORD, y: v132|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B117 -> B118 falseDestination: B117 -> B136 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B117" 
    successors "B119" "B120" 
    xhandlers
    flags 
    probability 4576731490411915456
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2416 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2420 
=== Usages ===
=== Predecessor ===
v2417 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2420  <|@  <|@
f <@~|@floating>@ <|@
tid v3186 <|@
result [v130|QWORD[.] + v132|QWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a1664 
index: j1963 
=== Succesors ===
=== Usages ===
j2901 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1664 index: j1963  <|@  <|@
f <@~|@floating>@ <|@
tid j2901 <|@
result v155|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v2899 
address: v3186 
=== Succesors ===
=== Usages ===
v3242 v3243 v3244 v3245 v3246 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v2899 address: v3186  <|@  <|@
f <@~|@floating>@ <|@
tid j1967 <|@
result v156|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
stamp: i64 [-4294967295 - 4294967295]
=== Inputs ===
x: j1962 
y: j1963 
=== Succesors ===
=== Usages ===
j2946 j2932 j2937 j2940 j2943 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j1962 y: j1963  <|@  <|@
f <@~|@floating>@ <|@
tid j2932 <|@
result v157|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967311 - 4294967279]
=== Inputs ===
x: j1967 
y: j2537 
=== Succesors ===
=== Usages ===
v2933 v2935 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1967 y: j2537  <|@  <|@
f <@~|@floating>@ <|@
tid v2933 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2932 
y: j1034 
=== Succesors ===
=== Usages ===
v2420 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2932 y: j1034  <|@  <|@
f <@*|@fixed>@ <|@
tid v2420 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v2933 
=== Succesors ===
trueSuccessor: v2418 
falseSuccessor: v2419 
=== Usages ===
=== Predecessor ===
v2416 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2933 #trueSuccessor: v2418 #falseSuccessor: v2419  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v155|QWORD[.] = LEA [v130|QWORD[.] + v132|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v156|QWORD = SUB (x: v154|QWORD, ~y: v132|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v157|QWORD = LEA [v156|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v157|QWORD, y: v157|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B118 -> B119 falseDestination: B118 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B118" 
    successors "B123" 
    xhandlers
    flags 
    probability 4575016825099975968
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2418 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2429 
=== Usages ===
=== Predecessor ===
v2420 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2429  <|@  <|@
f <@*|@fixed>@ <|@
tid v2429 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2430 
=== Predecessor ===
v2418 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B119 -> B123 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B118" 
    successors "B121" 
    xhandlers
    flags 
    probability 4567724291157174464
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2419 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2421 
=== Usages ===
=== Predecessor ===
v2420 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2421  <|@  <|@
f <@*|@fixed>@ <|@
tid v2421 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2422 
=== Predecessor ===
v2419 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B120 -> B121 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B120" "B135" 
    successors "B122" "B135" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4576731490411915456
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j2926 <|@
result v158|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2422 
values: j1034 j2931 
=== Succesors ===
=== Usages ===
v3246 j2931 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2422 values: j1034 j2931  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2422 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v2421 
=== Succesors ===
next: v3034 
=== Usages ===
j2926 v2425 v2426 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v2421 #next: v3034  <|@  <|@
f <@~|@floating>@ <|@
tid v3246 <|@
result [v155|QWORD[.] + v158|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j2901 
index: j2926 
=== Succesors ===
=== Usages ===
v3034 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2901 index: j2926  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3034 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3246 
value: v3035 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2428 
=== Usages ===
=== Predecessor ===
v2422 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3246 value: v3035 stateAfter: - lastLocationAccess: - #next: v2428  <|@  <|@
f <@~|@floating>@ <|@
tid j2931 <|@
result v159|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j2926 
y: j739 
=== Succesors ===
=== Usages ===
j2920 j2926 v2935 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2926 y: j739  <|@  <|@
f <@~|@floating>@ <|@
tid v2935 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2932 
y: j2931 
=== Succesors ===
=== Usages ===
v2428 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2932 y: j2931  <|@  <|@
f <@*|@fixed>@ <|@
tid v2428 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v2935 
=== Succesors ===
trueSuccessor: v2425 
falseSuccessor: v2427 
=== Usages ===
=== Predecessor ===
v3034 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2935 #trueSuccessor: v2425 #falseSuccessor: v2427  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v158|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v155|QWORD[.] + v158|QWORD * 2], input: v18|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v159|QWORD = LEA [v158|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v159|QWORD, y: v157|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B121 -> B122 falseDestination: B121 -> B135 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B121" 
    successors "B123" 
    xhandlers
    flags 
    probability 4567724291157174464
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2425 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v2422 
=== Succesors ===
next: v2431 
=== Usages ===
=== Predecessor ===
v2428 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v2422 #next: v2431  <|@  <|@
f <@*|@fixed>@ <|@
tid v2431 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2430 
=== Predecessor ===
v2425 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v159|QWORD] destination: B122 -> B123 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B123"
    from_bci -1
    to_bci -1
    predecessors "B119" "B122" 
    successors "B124" "B125" 
    xhandlers
    flags 
    probability 4576731490411915456
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j2920 <|@
result v160|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2430 
values: j1034 j2931 
=== Succesors ===
=== Usages ===
v3245 j2925 j2914 v2938 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2430 values: j1034 j2931  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2430 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2429 v2431 
=== Succesors ===
next: v2452 
=== Usages ===
j2920 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2429 v2431 #next: v2452  <|@  <|@
f <@~|@floating>@ <|@
tid j2937 <|@
result v161|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967303 - 4294967287]
=== Inputs ===
x: j1967 
y: j2543 
=== Succesors ===
=== Usages ===
v2938 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1967 y: j2543  <|@  <|@
f <@~|@floating>@ <|@
tid v2938 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2937 
y: j2920 
=== Succesors ===
=== Usages ===
v2452 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2937 y: j2920  <|@  <|@
f <@*|@fixed>@ <|@
tid v2452 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v2938 
=== Succesors ===
trueSuccessor: v2451 
falseSuccessor: v2450 
=== Usages ===
=== Predecessor ===
v2430 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2938 #trueSuccessor: v2451 #falseSuccessor: v2450  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v160|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v161|QWORD = LEA [v156|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v160|QWORD, y: v161|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B123 -> B124 falseDestination: B123 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B124"
    from_bci -1
    to_bci -1
    predecessors "B123" 
    successors "B126" 
    xhandlers
    flags 
    probability 4567724291157174464
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2451 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2455 
=== Usages ===
=== Predecessor ===
v2452 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2455  <|@  <|@
f <@*|@fixed>@ <|@
tid v2455 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2441 
=== Predecessor ===
v2451 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v160|QWORD] destination: B124 -> B126 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B125"
    from_bci -1
    to_bci -1
    predecessors "B123" 
    successors "B126" 
    xhandlers
    flags 
    probability 4575016825099975968
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2450 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3033 
=== Usages ===
=== Predecessor ===
v2452 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3033  <|@  <|@
f <@~|@floating>@ <|@
tid v3245 <|@
result [v155|QWORD[.] + v160|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j2901 
index: j2920 
=== Succesors ===
=== Usages ===
v3033 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2901 index: j2920  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3033 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3245 
value: v3039 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2440 
=== Usages ===
=== Predecessor ===
v2450 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3245 value: v3039 stateAfter: - lastLocationAccess: - #next: v2440  <|@  <|@
f <@~|@floating>@ <|@
tid j2925 <|@
result v162|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j2920 
y: j1432 
=== Succesors ===
=== Usages ===
j2914 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2920 y: j1432  <|@  <|@
f <@*|@fixed>@ <|@
tid v2440 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2441 
=== Predecessor ===
v3033 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v155|QWORD[.] + v160|QWORD * 2], input: v17|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v162|QWORD = LEA [v160|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v162|QWORD] destination: B125 -> B126 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B126"
    from_bci -1
    to_bci -1
    predecessors "B125" "B124" 
    successors "B127" "B128" 
    xhandlers
    flags 
    probability 4576731490411915456
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j2914 <|@
result v163|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2441 
values: j2925 j2920 
=== Succesors ===
=== Usages ===
v3244 j2919 j2908 v2941 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2441 values: j2925 j2920  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2441 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2440 v2455 
=== Succesors ===
next: v2458 
=== Usages ===
j2914 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2440 v2455 #next: v2458  <|@  <|@
f <@~|@floating>@ <|@
tid j2940 <|@
result v164|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967299 - 4294967291]
=== Inputs ===
x: j1967 
y: j2547 
=== Succesors ===
=== Usages ===
v2941 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1967 y: j2547  <|@  <|@
f <@~|@floating>@ <|@
tid v2941 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2940 
y: j2914 
=== Succesors ===
=== Usages ===
v2458 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2940 y: j2914  <|@  <|@
f <@*|@fixed>@ <|@
tid v2458 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v2941 
=== Succesors ===
trueSuccessor: v2457 
falseSuccessor: v2456 
=== Usages ===
=== Predecessor ===
v2441 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2941 #trueSuccessor: v2457 #falseSuccessor: v2456  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v163|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v164|QWORD = LEA [v156|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v163|QWORD, y: v164|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B126 -> B127 falseDestination: B126 -> B128 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B127"
    from_bci -1
    to_bci -1
    predecessors "B126" 
    successors "B129" 
    xhandlers
    flags 
    probability 4567724291157174464
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2457 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2461 
=== Usages ===
=== Predecessor ===
v2458 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2461  <|@  <|@
f <@*|@fixed>@ <|@
tid v2461 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2444 
=== Predecessor ===
v2457 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v163|QWORD] destination: B127 -> B129 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B128"
    from_bci -1
    to_bci -1
    predecessors "B126" 
    successors "B129" 
    xhandlers
    flags 
    probability 4575016825099975968
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2456 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3032 
=== Usages ===
=== Predecessor ===
v2458 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3032  <|@  <|@
f <@~|@floating>@ <|@
tid v3244 <|@
result [v155|QWORD[.] + v163|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j2901 
index: j2914 
=== Succesors ===
=== Usages ===
v3032 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2901 index: j2914  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3032 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3244 
value: v3038 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2443 
=== Usages ===
=== Predecessor ===
v2456 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3244 value: v3038 stateAfter: - lastLocationAccess: - #next: v2443  <|@  <|@
f <@~|@floating>@ <|@
tid j2919 <|@
result v165|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j2914 
y: j2519 
=== Succesors ===
=== Usages ===
j2908 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2914 y: j2519  <|@  <|@
f <@*|@fixed>@ <|@
tid v2443 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2444 
=== Predecessor ===
v3032 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v155|QWORD[.] + v163|QWORD * 2], input: v16|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v165|QWORD = LEA [v163|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v165|QWORD] destination: B128 -> B129 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B129"
    from_bci -1
    to_bci -1
    predecessors "B128" "B127" 
    successors "B130" "B131" 
    xhandlers
    flags 
    probability 4576731490411915456
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j2908 <|@
result v166|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2444 
values: j2919 j2914 
=== Succesors ===
=== Usages ===
v3243 j2913 j2902 v2944 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2444 values: j2919 j2914  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2444 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2443 v2461 
=== Succesors ===
next: v2464 
=== Usages ===
j2908 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2443 v2461 #next: v2464  <|@  <|@
f <@~|@floating>@ <|@
tid j2943 <|@
result v167|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967297 - 4294967293]
=== Inputs ===
x: j1967 
y: j2551 
=== Succesors ===
=== Usages ===
v2944 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1967 y: j2551  <|@  <|@
f <@~|@floating>@ <|@
tid v2944 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2943 
y: j2908 
=== Succesors ===
=== Usages ===
v2464 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2943 y: j2908  <|@  <|@
f <@*|@fixed>@ <|@
tid v2464 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v2944 
=== Succesors ===
trueSuccessor: v2463 
falseSuccessor: v2462 
=== Usages ===
=== Predecessor ===
v2444 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2944 #trueSuccessor: v2463 #falseSuccessor: v2462  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v166|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v167|QWORD = LEA [v156|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v166|QWORD, y: v167|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B129 -> B130 falseDestination: B129 -> B131 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B130"
    from_bci -1
    to_bci -1
    predecessors "B129" 
    successors "B132" 
    xhandlers
    flags 
    probability 4567724291157174464
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2463 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2467 
=== Usages ===
=== Predecessor ===
v2464 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2467  <|@  <|@
f <@*|@fixed>@ <|@
tid v2467 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2447 
=== Predecessor ===
v2463 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v166|QWORD] destination: B130 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B131"
    from_bci -1
    to_bci -1
    predecessors "B129" 
    successors "B132" 
    xhandlers
    flags 
    probability 4575016825099975968
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2462 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3031 
=== Usages ===
=== Predecessor ===
v2464 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3031  <|@  <|@
f <@~|@floating>@ <|@
tid v3243 <|@
result [v155|QWORD[.] + v166|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j2901 
index: j2908 
=== Succesors ===
=== Usages ===
v3031 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2901 index: j2908  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3031 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3243 
value: v3037 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2446 
=== Usages ===
=== Predecessor ===
v2462 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3243 value: v3037 stateAfter: - lastLocationAccess: - #next: v2446  <|@  <|@
f <@~|@floating>@ <|@
tid j2913 <|@
result v168|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j2908 
y: j2497 
=== Succesors ===
=== Usages ===
j2902 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2908 y: j2497  <|@  <|@
f <@*|@fixed>@ <|@
tid v2446 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2447 
=== Predecessor ===
v3031 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v155|QWORD[.] + v166|QWORD * 2], input: v15|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction v168|QWORD = LEA [v166|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v168|QWORD] destination: B131 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B132"
    from_bci -1
    to_bci -1
    predecessors "B131" "B130" 
    successors "B133" "B134" 
    xhandlers
    flags 
    probability 4576731490411915456
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j2902 <|@
result v169|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2447 
values: j2913 j2908 
=== Succesors ===
=== Usages ===
v3242 v2947 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2447 values: j2913 j2908  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2447 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2446 v2467 
=== Succesors ===
next: v2470 
=== Usages ===
j2902 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2446 v2467 #next: v2470  <|@  <|@
f <@~|@floating>@ <|@
tid j2946 <|@
result v170|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967296 - 4294967294]
=== Inputs ===
x: j1967 
y: j2555 
=== Succesors ===
=== Usages ===
v2947 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1967 y: j2555  <|@  <|@
f <@~|@floating>@ <|@
tid v2947 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2946 
y: j2902 
=== Succesors ===
=== Usages ===
v2470 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2946 y: j2902  <|@  <|@
f <@*|@fixed>@ <|@
tid v2470 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v2947 
=== Succesors ===
trueSuccessor: v2469 
falseSuccessor: v2468 
=== Usages ===
=== Predecessor ===
v2447 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2947 #trueSuccessor: v2469 #falseSuccessor: v2468  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v169|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v170|QWORD = DEC v156|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v169|QWORD, y: v170|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B132 -> B133 falseDestination: B132 -> B134 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B133"
    from_bci -1
    to_bci -1
    predecessors "B132" 
    successors "B137" 
    xhandlers
    flags 
    probability 4567724291157174464
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2469 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2473 
=== Usages ===
=== Predecessor ===
v2470 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2473  <|@  <|@
f <@*|@fixed>@ <|@
tid v2473 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2434 
=== Predecessor ===
v2469 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B133 -> B137 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B134"
    from_bci -1
    to_bci -1
    predecessors "B132" 
    successors "B137" 
    xhandlers
    flags 
    probability 4575016825099975968
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2468 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3030 
=== Usages ===
=== Predecessor ===
v2470 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3030  <|@  <|@
f <@~|@floating>@ <|@
tid v3242 <|@
result [v155|QWORD[.] + v169|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j2901 
index: j2902 
=== Succesors ===
=== Usages ===
v3030 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2901 index: j2902  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3030 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3242 
value: i3036 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2449 
=== Usages ===
=== Predecessor ===
v2468 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3242 value: i3036 stateAfter: - lastLocationAccess: - #next: v2449  <|@  <|@
f <@*|@fixed>@ <|@
tid v2449 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2434 
=== Predecessor ===
v3030 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v155|QWORD[.] + v169|QWORD * 2], y: r12|ILLEGAL) size: WORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B134 -> B137 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B135"
    from_bci -1
    to_bci -1
    predecessors "B121" 
    successors "B121" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4575016825099975968
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2427 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2426 
=== Usages ===
=== Predecessor ===
v2428 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2426  <|@  <|@
f <@*|@fixed>@ <|@
tid v2426 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v2422 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v2427 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v2422  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v159|QWORD] destination: B135 -> B121 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B136"
    from_bci -1
    to_bci -1
    predecessors "B117" 
    successors "B137" 
    xhandlers
    flags 
    probability 4576731490411915456
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2415 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2433 
=== Usages ===
=== Predecessor ===
v2417 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2433  <|@  <|@
f <@*|@fixed>@ <|@
tid v2433 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2434 
=== Predecessor ===
v2415 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B136 -> B137 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B137"
    from_bci -1
    to_bci -1
    predecessors "B136" "B134" "B133" 
    successors "B138" "B139" 
    xhandlers
    flags 
    probability 4581235090039285952
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2434 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2433 v2449 v2473 
=== Succesors ===
next: a1285 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2433 v2449 v2473 #next: a1285  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1285 <|@
result v130|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2924) [bci: 69]
predefinedStamp: [null]
stamp: a! -
=== Inputs ===
object: a1664 
=== Succesors ===
next: v832 
=== Usages ===
a713 a830 j1703 a520 
=== Predecessor ===
v2434 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a1664 #next: v832  <|@  <|@
f <@~|@floating>@ <|@
tid v3083 <|@
result [v116|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1080 
index: - 
=== Succesors ===
=== Usages ===
v832 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1080 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a830 <|@
result v171|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2924) [bci: 69]
op: Compress
stamp: n! -
=== Inputs ===
value: a1285 
=== Succesors ===
=== Usages ===
v832 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1285  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v832 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: AbstractStringBuilder.value
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2924) [bci: 69]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3083 
value: a830 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j1691 
=== Usages ===
=== Predecessor ===
a1285 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3083 value: a830 stateAfter: - lastLocationAccess: - #next: j1691  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1691 <|@
result v116|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2924) [bci: 69]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1080 
=== Succesors ===
next: v1697 
=== Usages ===
j1693 
=== Predecessor ===
v832 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a1080 #next: v1697  <|@  <|@
f <@~|@floating>@ <|@
tid j1693 <|@
result v172|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2924) [bci: 69]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j1691 
y: i1692 
=== Succesors ===
=== Usages ===
v3137 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j1691 y: i1692  <|@  <|@
f <@~|@floating>@ <|@
tid v3137 <|@
result [v172|QWORD[*] + v99|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1693 
index: j1696 
=== Succesors ===
=== Usages ===
v1697 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1693 index: j1696  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1697 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2924) [bci: 69]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3137 
value: i1698 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: i3060 
=== Usages ===
=== Predecessor ===
j1691 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3137 value: i1698 stateAfter: - lastLocationAccess: - #next: i3060  <|@  <|@
f <@~|@floating>@ <|@
tid v3084 <|@
result [v116|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1080 
index: - 
=== Succesors ===
=== Usages ===
i3060 v886 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1080 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i3060 <|@
result v173|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractStringBuilder.count
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 32]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2924) [bci: 69]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v3084 
=== Succesors ===
next: v857 
=== Usages ===
i329 j1704 v851 v870 
=== Predecessor ===
v1697 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3084 #next: v857  <|@  <|@
f <@~|@floating>@ <|@
tid v851 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:257) [bci: 22]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2924) [bci: 69]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3060 
y: i26 
=== Succesors ===
=== Usages ===
v857 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i3060 y: i26  <|@  <|@
f <@*|@fixed>@ <|@
tid v857 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:258) [bci: 33]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2924) [bci: 69]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v851 
=== Succesors ===
trueSuccessor: v856 
falseSuccessor: v852 
=== Usages ===
=== Predecessor ===
i3060 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v851 #trueSuccessor: v856 #falseSuccessor: v852  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v171|DWORD[.] = COMPRESSPOINTER (input: v130|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@1d28dd80 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v116|QWORD[.] + 16], y: v171|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v172|QWORD[*] = SHR v116|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v172|QWORD[*] + v99|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v173|DWORD = MOV [v116|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v173|DWORD, y: v173|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B137 -> B138 falseDestination: B137 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B138"
    from_bci -1
    to_bci -1
    predecessors "B137" 
    successors "B141" 
    xhandlers
    flags 
    probability 4551271695864333851
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v856 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2924) [bci: 69]
stamp: void
=== Inputs ===
=== Succesors ===
next: v855 
=== Usages ===
=== Predecessor ===
v857 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v855  <|@  <|@
f <@*|@fixed>@ <|@
tid v855 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2924) [bci: 69]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v854 
=== Predecessor ===
v856 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B138 -> B141 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B139"
    from_bci -1
    to_bci -1
    predecessors "B137" 
    successors "B140" "B142" 
    xhandlers
    flags 
    probability 4581179311352977332
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v852 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:258) [bci: 36]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2924) [bci: 69]
stamp: void
=== Inputs ===
=== Succesors ===
next: v874 
=== Usages ===
=== Predecessor ===
v857 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v874  <|@  <|@
f <@~|@floating>@ <|@
tid i869 <|@
result v174|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 90]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2924) [bci: 69]
stamp: i32
=== Inputs ===
x: i343 
y: i3043 
=== Succesors ===
=== Usages ===
v870 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i343 y: i3043  <|@  <|@
f <@~|@floating>@ <|@
tid v870 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 91]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2924) [bci: 69]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i869 
y: i3060 
=== Succesors ===
=== Usages ===
v874 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i869 y: i3060  <|@  <|@
f <@*|@fixed>@ <|@
tid v874 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2924) [bci: 69]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v870 
=== Succesors ===
trueSuccessor: v873 
falseSuccessor: v871 
=== Usages ===
=== Predecessor ===
v852 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v870 #trueSuccessor: v873 #falseSuccessor: v871  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v174|DWORD = SUB (x: v118|DWORD, ~y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v173|DWORD, y: v174|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B139 -> B140 falseDestination: B139 -> B142 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B140"
    from_bci -1
    to_bci -1
    predecessors "B139" 
    successors "B141" 
    xhandlers
    flags 
    probability 4551200299145858817
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v873 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2924) [bci: 69]
stamp: void
=== Inputs ===
=== Succesors ===
next: v872 
=== Usages ===
=== Predecessor ===
v874 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v872  <|@  <|@
f <@*|@fixed>@ <|@
tid v872 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2924) [bci: 69]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v854 
=== Predecessor ===
v873 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B140 -> B141 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B141"
    from_bci -1
    to_bci -1
    predecessors "B138" "B140" 
    successors 
    xhandlers
    flags 
    probability 4555739597132466830
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v854 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2924) [bci: 69]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v855 v872 
=== Succesors ===
next: v875 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v855 v872 #next: v875  <|@  <|@
tid ?348 <|@
d <@d|@=== Debug Properties ===
bci: 26
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.ensureCapacityInternal(int)>
duringCall: false
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2924) [bci: 69]
rethrowException: false
sourceFile: AbstractStringBuilder.java
sourceLine: 127
stackSize: 0
=== Inputs ===
outerFrameState: ?351 
values: - - 
virtualObjectMappings: ?696 
=== Succesors ===
=== Usages ===
v875 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?351 values: - - virtualObjectMappings: ?696  <|@  <|@
f <@*|@fixed>@ <|@
tid v875 <|@
d <@d|@=== Debug Properties ===
action: None
debugId: 0
nodeSourcePosition: at org.graalvm.compiler.nodes.DeoptimizeNode.deopt(DeoptimizationAction, DeoptimizationReason) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:263) [bci: 119]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2924) [bci: 69]
reason: RuntimeConstraint
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?348 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v854 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?348  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -224097 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:127) [bci: 26]
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
locals: v116|QWORD[.] v1|QWORD[.] v5|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
locals: v116|QWORD[.] - 
java.util.Formatter$FormatSpecifier.justify(Formatter.java:2924) [bci: 69]
locals: - - v116|QWORD[.] v12|DWORD v14|DWORD - 
>@ <|@ instruction DEOPT info [bci:26, 21, 2, 69] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B142"
    from_bci -1
    to_bci -1
    predecessors "B139" 
    successors "B143" "B205" 
    xhandlers
    flags 
    probability 4581124090453531798
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v871 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:265) [bci: 122]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2924) [bci: 69]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1701 
=== Usages ===
=== Predecessor ===
v874 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j1701  <|@  <|@
f <@~|@floating>@ <|@
tid a836 <|@
result v175|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.String.getChars(String.java:820) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2924) [bci: 69]
op: Uncompress
stamp: a# [C
=== Inputs ===
value: a3053 
=== Succesors ===
=== Usages ===
j1701 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a3053  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1701 <|@
result v176|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2924) [bci: 69]
stamp: i64
=== Inputs ===
object: a836 
=== Succesors ===
next: j1703 
=== Usages ===
v3138 
=== Predecessor ===
v871 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a836 #next: j1703  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1703 <|@
result v177|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2924) [bci: 69]
stamp: i64
=== Inputs ===
object: a1285 
=== Succesors ===
next: v1708 
=== Usages ===
v3139 
=== Predecessor ===
j1701 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a1285 #next: v1708  <|@  <|@
f <@~|@floating>@ <|@
tid v3138 <|@
result [v176|QWORD[*] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j1701 
index: - 
=== Succesors ===
=== Usages ===
v1708 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1701 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j1704 <|@
result v178|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2924) [bci: 69]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i3060 
=== Succesors ===
=== Usages ===
v3139 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i3060  <|@  <|@
f <@~|@floating>@ <|@
tid v3139 <|@
result [v177|QWORD[*] + v178|QWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: j1703 
index: j1704 
=== Succesors ===
=== Usages ===
v1708 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1703 index: j1704  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1708 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: charArraycopy(Word,Word,Word)void
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2924) [bci: 69]
stamp: void
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: v3138 v3139 j1549 
=== Succesors ===
next: v886 
=== Usages ===
=== Predecessor ===
j1703 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: v3138 v3139 j1549 #next: v886  <|@  <|@
f <@~|@floating>@ <|@
tid i329 <|@
result v179|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:450) [bci: 44]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2924) [bci: 69]
stamp: i32
=== Inputs ===
x: i3043 
y: i3060 
=== Succesors ===
=== Usages ===
v886 i521 i711 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i3043 y: i3060  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v886 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: AbstractStringBuilder.count
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:450) [bci: 45]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2924) [bci: 69]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3084 
value: i329 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v55 
=== Usages ===
=== Predecessor ===
v1708 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3084 value: i329 stateAfter: - lastLocationAccess: - #next: v55  <|@  <|@
f <@*|@fixed>@ <|@
tid v55 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2925) [bci: 74]
stamp: void
trueSuccessorProbability: 0.18579515065073993
=== Inputs ===
condition: v84 
=== Succesors ===
trueSuccessor: v54 
falseSuccessor: v53 
=== Usages ===
=== Predecessor ===
v886 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v84 #trueSuccessor: v54 #falseSuccessor: v53  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v175|QWORD[.] = UNCOMPRESSPOINTER (input: v119|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1d28dd80 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v176|QWORD[*] = MOVE v175|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v177|QWORD[*] = MOVE v130|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v178|QWORD = MOVSXD v173|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA [v176|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA [v177|QWORD[*] + v178|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE v98|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charArraycopy(Word,Word,Word)void@0x106812d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v179|DWORD = ADD (x: v5|DWORD, y: v173|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v116|QWORD[.] + 12], y: v179|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v10|DWORD, y: v11|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.18579515065073993 condition: = trueDestination: B142 -> B143 falseDestination: B142 -> B205 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B143"
    from_bci -1
    to_bci -1
    predecessors "B142" 
    successors "B144" 
    xhandlers
    flags 
    probability 4570272164588901904
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v54 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2926) [bci: 77]
stamp: void
=== Inputs ===
=== Succesors ===
next: v705 
=== Usages ===
=== Predecessor ===
v55 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v705  <|@  <|@
f <@*|@fixed>@ <|@
tid v705 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v704 
=== Predecessor ===
v54 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v179|DWORD, v130|QWORD[.], v116|QWORD[.]] destination: B143 -> B144 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B144"
    from_bci -1
    to_bci -1
    predecessors "B143" "B82" 
    successors "B145" 
    xhandlers
    flags 
    probability 4588182886451812978
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i711 <|@
result v180|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v704 
values: i329 i319 
=== Succesors ===
=== Usages ===
i590 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v704 values: i329 i319  <|@  <|@
f <@~|@floating>@ <|@
tid a713 <|@
result v181|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a!# [C
valueDescription: a -
=== Inputs ===
merge: v704 
values: a1285 a637 
=== Succesors ===
=== Usages ===
a589 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v704 values: a1285 a637  <|@  <|@
f <@~|@floating>@ <|@
tid a715 <|@
result v182|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a!# Ljava/lang/StringBuilder;
valueDescription: a -
=== Inputs ===
merge: v704 
values: a1080 a1071 
=== Succesors ===
=== Usages ===
v3087 v3089 a727 ?723 j1762 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v704 values: a1080 a1071  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v704 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v705 v706 
=== Succesors ===
next: v57 
=== Usages ===
i711 a713 a715 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v705 v706 #next: v57  <|@  <|@
tid ?723 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a89 
materializedValue: a715 
=== Succesors ===
=== Usages ===
?60 
=== Predecessor ===
- >@ <|@
instruction <@MaterializedObjectState|@org.graalvm.compiler.virtual.nodes.MaterializedObjectState>@ object: a89 materializedValue: a715  <|@  <|@
f <@~|@floating>@ <|@
tid v3087 <|@
result [v182|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a715 
index: - 
=== Succesors ===
=== Usages ===
v890 v905 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a715 index: -  <|@  <|@
f <@*|@fixed>@ <|@
tid v57 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2926) [bci: 80]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v58 
=== Predecessor ===
v704 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v180|DWORD, v181|QWORD[.], v182|QWORD[.]] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0], v181|QWORD[.], v180|DWORD] destination: B144 -> B145 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B145"
    from_bci -1
    to_bci -1
    predecessors "B144" "B200" "B148" 
    successors "B146" "B204" 
    xhandlers
    flags "llh" 
    loop_index 5
    loop_depth 1
    probability 4602160059308521155
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i59 <|@
result v183|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v58 
values: i26 i71 i71 
=== Succesors ===
=== Usages ===
?60 v61 i71 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v58 values: i26 i71 i71  <|@  <|@
f <@~|@floating>@ <|@
tid a589 <|@
result v184|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a!# [C
valueDescription: a -
=== Inputs ===
merge: v58 
values: a713 a1273 a589 
=== Succesors ===
=== Usages ===
v3092 a589 a520 v3086 v3088 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v58 values: a713 a1273 a589  <|@  <|@
f <@~|@floating>@ <|@
tid i590 <|@
result v185|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v58 
values: i711 i132 i132 
=== Succesors ===
=== Usages ===
i521 v3088 v892 v3090 i132 v906 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v58 values: i711 i132 i132  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v58 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 8.465091170825337
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 2
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2926) [bci: 80]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v57 
=== Succesors ===
next: v68 
=== Usages ===
i59 v66 v72 a589 i590 v616 v1023 v1018 v1013 v1008 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v57 #next: v68  <|@  <|@
f <@~|@floating>@ <|@
tid v61 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2926) [bci: 84]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i59 
y: i25 
=== Succesors ===
=== Usages ===
v68 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i59 y: i25  <|@  <|@
f <@*|@fixed>@ <|@
tid v68 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2926) [bci: 84]
stamp: void
trueSuccessorProbability: 0.8818677814780699
=== Inputs ===
condition: v61 
=== Succesors ===
trueSuccessor: v62 
falseSuccessor: v66 
=== Usages ===
=== Predecessor ===
v58 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v61 #trueSuccessor: v62 #falseSuccessor: v66  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v183|DWORD, v184|QWORD[.], v185|DWORD] = LABEL numbPhis: 3 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v14|DWORD, y: v183|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.8818677814780699 condition: > trueDestination: B145 -> B146 falseDestination: B145 -> B204 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B146"
    from_bci -1
    to_bci -1
    predecessors "B145" 
    successors "B147" "B150" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4601157301131518837
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v62 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2926) [bci: 87]
stamp: void
=== Inputs ===
=== Succesors ===
next: i3061 
=== Usages ===
=== Predecessor ===
v68 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i3061  <|@  <|@
f <@~|@floating>@ <|@
tid v3086 <|@
result [v184|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a589 
index: - 
=== Succesors ===
=== Usages ===
i3061 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a589 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i3061 <|@
result v186|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 5]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2926) [bci: 90]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v3086 
=== Succesors ===
next: v180 
=== Usages ===
i176 i270 i1264 v892 v1124 
=== Predecessor ===
v62 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3086 #next: v180  <|@  <|@
f <@~|@floating>@ <|@
tid i132 <|@
result v187|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:650) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2926) [bci: 90]
stamp: i32
=== Inputs ===
x: i590 
y: i47 
=== Succesors ===
=== Usages ===
v905 i590 v890 i931 i590 i176 i273 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i590 y: i47  <|@  <|@
f <@~|@floating>@ <|@
tid i176 <|@
result v188|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 6]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2926) [bci: 90]
stamp: i32
=== Inputs ===
x: i132 
y: i3061 
=== Succesors ===
=== Usages ===
v177 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i132 y: i3061  <|@  <|@
f <@~|@floating>@ <|@
tid v177 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 7]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2926) [bci: 90]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i176 
y: i47 
=== Succesors ===
=== Usages ===
v180 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i176 y: i47  <|@  <|@
f <@~|@floating>@ <|@
tid i71 <|@
result v189|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2926) [bci: 94]
stamp: i32
=== Inputs ===
x: i59 
y: i47 
=== Succesors ===
=== Usages ===
i59 i59 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i59 y: i47  <|@  <|@
tid ?60 <|@
d <@d|@=== Debug Properties ===
bci: 80
code: ResolvedJavaMethodBytecode<Formatter$FormatSpecifier.justify(String)>
duringCall: false
localsSize: 6
locksSize: 0
rethrowException: false
sourceFile: Formatter.java
sourceLine: 2926
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - a89 - i25 i59 
virtualObjectMappings: ?723 
=== Succesors ===
=== Usages ===
a1731 v1359 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - a89 - i25 i59 virtualObjectMappings: ?723  <|@  <|@
f <@*|@fixed>@ <|@
tid v180 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 7]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2926) [bci: 90]
stamp: void
trueSuccessorProbability: 0.9354897578252553
=== Inputs ===
condition: v177 
=== Succesors ===
trueSuccessor: v178 
falseSuccessor: v179 
=== Usages ===
=== Predecessor ===
i3061 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v177 #trueSuccessor: v178 #falseSuccessor: v179  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v186|DWORD = MOV [v184|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v187|DWORD = INC v185|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v188|DWORD = SUB (x: v187|DWORD, ~y: v186|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v189|DWORD = INC v183|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v188|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9354897578252553 condition: < trueDestination: B146 -> B147 falseDestination: B146 -> B150 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B147"
    from_bci -1
    to_bci -1
    predecessors "B146" 
    successors "B148" "B149" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4600674398023585731
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v178 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:127) [bci: 26]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2926) [bci: 90]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1009 
=== Usages ===
=== Predecessor ===
v180 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1009  <|@  <|@
f <@~|@floating>@ <|@
tid v892 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:650) [bci: 26]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2926) [bci: 90]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i590 
y: i3061 
=== Succesors ===
=== Usages ===
v1009 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i590 y: i3061  <|@  <|@
f <@*|@fixed>@ <|@
tid v1009 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:650) [bci: 26]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2926) [bci: 90]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v892 
=== Succesors ===
trueSuccessor: v1005 
falseSuccessor: v1008 
=== Usages ===
=== Predecessor ===
v178 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v892 #trueSuccessor: v1005 #falseSuccessor: v1008  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v186|DWORD, y: v185|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B147 -> B148 falseDestination: B147 -> B149 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B148"
    from_bci -1
    to_bci -1
    predecessors "B147" 
    successors "B145" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 1
    probability 4600674398023585731
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1005 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:650) [bci: 26]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2926) [bci: 90]
stamp: void
=== Inputs ===
=== Succesors ===
next: v890 
=== Usages ===
v899 
=== Predecessor ===
v1009 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v890  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v890 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: AbstractStringBuilder.count
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:650) [bci: 22]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2926) [bci: 90]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3087 
value: i132 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v899 
=== Usages ===
=== Predecessor ===
v1005 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3087 value: i132 stateAfter: - lastLocationAccess: - #next: v899  <|@  <|@
f <@~|@floating>@ <|@
tid v3088 <|@
result [v184|QWORD[.] + v185|DWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a589 
index: i590 
=== Succesors ===
=== Usages ===
v899 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a589 index: i590  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v899 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:650) [bci: 26]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2926) [bci: 90]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1005 
address: v3088 
value: i921 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v616 
=== Usages ===
=== Predecessor ===
v890 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1005 address: v3088 value: i921 stateAfter: - lastLocationAccess: - #next: v616  <|@  <|@
f <@*|@fixed>@ <|@
tid v616 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 1
stamp: void
=== Inputs ===
loopBegin: v58 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v899 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v58  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v182|QWORD[.] + 12], y: v187|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v184|QWORD[.] + v185|DWORD * 2 + 16] y: 32 size: WORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v189|DWORD, v184|QWORD[.], v187|DWORD] destination: B148 -> B145 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B149"
    from_bci -1
    to_bci -1
    predecessors "B147" 
    successors "B203" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1008 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:650) [bci: 26]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2926) [bci: 90]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v58 
=== Succesors ===
next: v1355 
=== Usages ===
=== Predecessor ===
v1009 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v58 #next: v1355  <|@  <|@
f <@~|@floating>@ <|@
tid i1356 <|@
result int[-228635|0xfffffffffffc82e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -228635
stableDimension: 0
stamp: i32 [-228635] ⇊00000000fffc82e5 ⇈00000000fffc82e5
stampKind: i32
value: int[-228635|0xfffffffffffc82e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1357 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1355 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1354 
=== Predecessor ===
v1008 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-228635|0xfffffffffffc82e5]] destination: B149 -> B203 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B150"
    from_bci -1
    to_bci -1
    predecessors "B146" 
    successors "B151" "B152" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4583383671135353628
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v179 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 10]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2926) [bci: 90]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1014 
=== Usages ===
=== Predecessor ===
v180 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1014  <|@  <|@
f <@~|@floating>@ <|@
tid i270 <|@
result v190|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:150) [bci: 6]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2926) [bci: 90]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i3061 
y: i47 
=== Succesors ===
=== Usages ===
i272 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i3061 y: i47  <|@  <|@
f <@~|@floating>@ <|@
tid i272 <|@
result v191|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:150) [bci: 8]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2926) [bci: 90]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i270 
y: i271 
=== Succesors ===
=== Usages ===
i273 i931 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i270 y: i271  <|@  <|@
f <@~|@floating>@ <|@
tid i273 <|@
result v192|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:151) [bci: 12]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2926) [bci: 90]
stamp: i32
=== Inputs ===
x: i272 
y: i132 
=== Succesors ===
=== Usages ===
v274 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i272 y: i132  <|@  <|@
f <@~|@floating>@ <|@
tid v274 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:151) [bci: 13]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2926) [bci: 90]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i273 
y: i26 
=== Succesors ===
=== Usages ===
i931 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i273 y: i26  <|@  <|@
f <@~|@floating>@ <|@
tid i931 <|@
result v193|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
condition: v274 
trueValue: i132 
falseValue: i272 
=== Succesors ===
=== Usages ===
v906 j1941 v283 i286 v1716 v1124 i1264 a1731 v1750 i1709 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v274 trueValue: i132 falseValue: i272  <|@  <|@
f <@~|@floating>@ <|@
tid v283 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 19]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2926) [bci: 90]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i931 
y: i47 
=== Succesors ===
=== Usages ===
v1014 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i931 y: i47  <|@  <|@
f <@*|@fixed>@ <|@
tid v1014 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 19]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2926) [bci: 90]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v283 
=== Succesors ===
trueSuccessor: v1013 
falseSuccessor: v1010 
=== Usages ===
=== Predecessor ===
v179 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v283 #trueSuccessor: v1013 #falseSuccessor: v1010  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v190|DWORD = SHL v186|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v191|DWORD = LEA [v190|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v192|DWORD = SUB (x: v191|DWORD, ~y: v187|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v192|DWORD, y: v192|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v193|DWORD = CMOVE (falseValue: v191|DWORD, ~trueValue: v187|DWORD) condition: < <|@ <|@
      nr   -1  <|@ instruction CMP v193|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B150 -> B151 falseDestination: B150 -> B152 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B151"
    from_bci -1
    to_bci -1
    predecessors "B150" 
    successors "B203" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1013 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 19]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2926) [bci: 90]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v58 
=== Succesors ===
next: v1360 
=== Usages ===
=== Predecessor ===
v1014 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v58 #next: v1360  <|@  <|@
f <@~|@floating>@ <|@
tid i1361 <|@
result int[-230419|0xfffffffffffc7bed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -230419
stableDimension: 0
stamp: i32 [-230419] ⇊00000000fffc7bed ⇈00000000fffc7bed
stampKind: i32
value: int[-230419|0xfffffffffffc7bed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1357 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1360 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1354 
=== Predecessor ===
v1013 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-230419|0xfffffffffffc7bed]] destination: B151 -> B203 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B152"
    from_bci -1
    to_bci -1
    predecessors "B150" 
    successors "B153" "B154" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4583383671135353628
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1010 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 19]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2926) [bci: 90]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1019 
=== Usages ===
=== Predecessor ===
v1014 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1019  <|@  <|@
f <@~|@floating>@ <|@
tid i286 <|@
result v195|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 25]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2926) [bci: 90]
stamp: i32
=== Inputs ===
x: i285 
y: i931 
=== Succesors ===
=== Usages ===
v287 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i285 y: i931  <|@  <|@
f <@~|@floating>@ <|@
tid v287 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 26]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2926) [bci: 90]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i286 
y: i26 
=== Succesors ===
=== Usages ===
v1019 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i286 y: i26  <|@  <|@
f <@*|@fixed>@ <|@
tid v1019 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 26]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2926) [bci: 90]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v287 
=== Succesors ===
trueSuccessor: v1018 
falseSuccessor: v1015 
=== Usages ===
=== Predecessor ===
v1010 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v287 #trueSuccessor: v1018 #falseSuccessor: v1015  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v194|DWORD = MOVE input: int[2147483639|0x7ffffff7] <|@ <|@
      nr   -1  <|@ instruction v195|DWORD = SUB (x: v194|DWORD, ~y: v193|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v195|DWORD, y: v195|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B152 -> B153 falseDestination: B152 -> B154 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B153"
    from_bci -1
    to_bci -1
    predecessors "B152" 
    successors "B203" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1018 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 26]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2926) [bci: 90]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v58 
=== Succesors ===
next: v1362 
=== Usages ===
=== Predecessor ===
v1019 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v58 #next: v1362  <|@  <|@
f <@~|@floating>@ <|@
tid i1363 <|@
result int[-230675|0xfffffffffffc7aed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -230675
stableDimension: 0
stamp: i32 [-230675] ⇊00000000fffc7aed ⇈00000000fffc7aed
stampKind: i32
value: int[-230675|0xfffffffffffc7aed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1357 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1362 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1354 
=== Predecessor ===
v1018 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-230675|0xfffffffffffc7aed]] destination: B153 -> B203 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B154"
    from_bci -1
    to_bci -1
    predecessors "B152" 
    successors "B155" "B202" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4583383671135353628
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1015 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:154) [bci: 26]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2926) [bci: 90]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1024 
=== Usages ===
=== Predecessor ===
v1019 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1024  <|@  <|@
f <@~|@floating>@ <|@
tid v906 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:650) [bci: 26]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2926) [bci: 90]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i590 
y: i931 
=== Succesors ===
=== Usages ===
v1024 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i590 y: i931  <|@  <|@
f <@*|@fixed>@ <|@
tid v1024 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:650) [bci: 26]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2926) [bci: 90]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v906 
=== Succesors ===
trueSuccessor: v1020 
falseSuccessor: v1023 
=== Usages ===
=== Predecessor ===
v1015 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v906 #trueSuccessor: v1020 #falseSuccessor: v1023  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v193|DWORD, y: v185|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B154 -> B155 falseDestination: B154 -> B202 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B155"
    from_bci -1
    to_bci -1
    predecessors "B154" 
    successors "B156" "B159" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4583383671135353628
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1020 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:650) [bci: 26]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2926) [bci: 90]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1711 
=== Usages ===
v913 
=== Predecessor ===
v1024 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j1711  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1711 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:772) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:319) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2926) [bci: 90]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j1747 
=== Usages ===
v3140 v3141 
=== Predecessor ===
v1020 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j1747  <|@  <|@
f <@~|@floating>@ <|@
tid v3140 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j1711 
index: - 
=== Succesors ===
=== Usages ===
j1747 v1749 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1711 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1747 <|@
result v196|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:245) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:320) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2926) [bci: 90]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v3140 
=== Succesors ===
next: j1748 
=== Usages ===
j1715 v3142 v3143 a1730 v3148 v3144 v3145 v3146 v3147 
=== Predecessor ===
j1711 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3140 #next: j1748  <|@  <|@
f <@~|@floating>@ <|@
tid v3141 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j1711 
index: - 
=== Succesors ===
=== Usages ===
j1748 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1711 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1748 <|@
result v197|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:249) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:321) [bci: 25]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2926) [bci: 90]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v3141 
=== Succesors ===
next: v1719 
=== Usages ===
v1720 
=== Predecessor ===
j1747 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3141 #next: v1719  <|@  <|@
f <@~|@floating>@ <|@
tid v1716 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.core.common.calc.UnsignedMath.belowThan(int, int) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 50]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2926) [bci: 90]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i931 
y: i1489 
=== Succesors ===
=== Usages ===
v1719 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i931 y: i1489  <|@  <|@
f <@*|@fixed>@ <|@
tid v1719 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 64]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2926) [bci: 90]
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v1716 
=== Succesors ===
trueSuccessor: v1718 
falseSuccessor: v1717 
=== Usages ===
=== Predecessor ===
j1748 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1716 #trueSuccessor: v1718 #falseSuccessor: v1717  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v196|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v197|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v193|DWORD y: 16777215 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B155 -> B156 falseDestination: B155 -> B159 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B156"
    from_bci -1
    to_bci -1
    predecessors "B155" 
    successors "B157" "B158" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4582611026162660659
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1718 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 67]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2926) [bci: 90]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1726 
=== Usages ===
=== Predecessor ===
v1719 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1726  <|@  <|@
f <@~|@floating>@ <|@
tid i1709 <|@
result v198|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 8]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2926) [bci: 90]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i931 
y: i47 
=== Succesors ===
=== Usages ===
i1738 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i931 y: i47  <|@  <|@
f <@~|@floating>@ <|@
tid i1738 <|@
result v199|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2926) [bci: 90]
stamp: i32 [-2147483647 - 2147483647] ⇊0000000000000001
=== Inputs ===
x: i1709 
y: i1512 
=== Succesors ===
=== Usages ===
i1710 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1709 y: i1512  <|@  <|@
f <@~|@floating>@ <|@
tid i1710 <|@
result v200|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:604) [bci: 30]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2926) [bci: 90]
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i1738 
y: i1482 
=== Succesors ===
=== Usages ===
j1714 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i1738 y: i1482  <|@  <|@
f <@~|@floating>@ <|@
tid j1714 <|@
result v201|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2926) [bci: 90]
resultBits: 64
stamp: i64 [-2147483648 - 2147483640] ⇈fffffffffffffff8
=== Inputs ===
value: i1710 
=== Succesors ===
=== Usages ===
j1715 v3144 v3145 v3146 v3147 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i1710  <|@  <|@
f <@~|@floating>@ <|@
tid j1715 <|@
result v202|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2926) [bci: 90]
stamp: i64
=== Inputs ===
x: j1714 
y: j1747 
=== Succesors ===
=== Usages ===
v1720 v1749 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1714 y: j1747  <|@  <|@
f <@~|@floating>@ <|@
tid v1720 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 83]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2926) [bci: 90]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1748 
y: j1715 
=== Succesors ===
=== Usages ===
v1726 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j1748 y: j1715  <|@  <|@
f <@*|@fixed>@ <|@
tid v1726 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 89]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2926) [bci: 90]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v1720 
=== Succesors ===
trueSuccessor: v1725 
falseSuccessor: v1724 
=== Usages ===
=== Predecessor ===
v1718 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1720 #trueSuccessor: v1725 #falseSuccessor: v1724  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v198|DWORD = SHL v193|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v199|DWORD = LEA [v198|DWORD + 23] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v200|DWORD = AND v199|DWORD y: -8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v201|QWORD = MOVSXD v200|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v202|QWORD = ADD (x: v201|QWORD, y: v196|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v202|QWORD, y: v197|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B156 -> B157 falseDestination: B156 -> B158 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B157"
    from_bci -1
    to_bci -1
    predecessors "B156" 
    successors "B160" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4553032894102253477
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1725 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2926) [bci: 90]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1723 
=== Usages ===
=== Predecessor ===
v1726 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1723  <|@  <|@
f <@*|@fixed>@ <|@
tid v1723 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2926) [bci: 90]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1722 
=== Predecessor ===
v1725 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B157 -> B160 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B158"
    from_bci -1
    to_bci -1
    predecessors "B156" 
    successors "B161" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4582541488115118292
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1724 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 92]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2926) [bci: 90]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1749 
=== Usages ===
=== Predecessor ===
v1726 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1749  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1749 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:257) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 96]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2926) [bci: 90]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3140 
value: j1715 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1740 
=== Usages ===
=== Predecessor ===
v1724 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3140 value: j1715 stateAfter: - lastLocationAccess: - #next: v1740  <|@  <|@
f <@~|@floating>@ <|@
tid v3144 <|@
result [v201|QWORD + v196|QWORD * 1 + 192] <|@
d <@d|@=== Debug Properties ===
displacement: 192
scale: Times1
stamp: void*
=== Inputs ===
base: j1714 
index: j1747 
=== Succesors ===
=== Usages ===
v1740 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1714 index: j1747  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1740 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2926) [bci: 90]
stamp: void
=== Inputs ===
address: v3144 
=== Succesors ===
next: v1742 
=== Usages ===
=== Predecessor ===
v1749 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v3144 #next: v1742  <|@  <|@
f <@~|@floating>@ <|@
tid v3145 <|@
result [v201|QWORD + v196|QWORD * 1 + 256] <|@
d <@d|@=== Debug Properties ===
displacement: 256
scale: Times1
stamp: void*
=== Inputs ===
base: j1714 
index: j1747 
=== Succesors ===
=== Usages ===
v1742 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1714 index: j1747  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1742 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2926) [bci: 90]
stamp: void
=== Inputs ===
address: v3145 
=== Succesors ===
next: v1744 
=== Usages ===
=== Predecessor ===
v1740 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v3145 #next: v1744  <|@  <|@
f <@~|@floating>@ <|@
tid v3146 <|@
result [v201|QWORD + v196|QWORD * 1 + 320] <|@
d <@d|@=== Debug Properties ===
displacement: 320
scale: Times1
stamp: void*
=== Inputs ===
base: j1714 
index: j1747 
=== Succesors ===
=== Usages ===
v1744 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1714 index: j1747  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1744 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2926) [bci: 90]
stamp: void
=== Inputs ===
address: v3146 
=== Succesors ===
next: v1746 
=== Usages ===
=== Predecessor ===
v1742 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v3146 #next: v1746  <|@  <|@
f <@~|@floating>@ <|@
tid v3147 <|@
result [v201|QWORD + v196|QWORD * 1 + 384] <|@
d <@d|@=== Debug Properties ===
displacement: 384
scale: Times1
stamp: void*
=== Inputs ===
base: j1714 
index: j1747 
=== Succesors ===
=== Usages ===
v1746 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1714 index: j1747  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1746 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2926) [bci: 90]
stamp: void
=== Inputs ===
address: v3147 
=== Succesors ===
next: v1750 
=== Usages ===
=== Predecessor ===
v1744 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v3147 #next: v1750  <|@  <|@
f <@~|@floating>@ <|@
tid v3142 <|@
result [v196|QWORD + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j1747 
index: - 
=== Succesors ===
=== Usages ===
v1750 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1747 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1750 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:549) [bci: 12]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2926) [bci: 90]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3142 
value: i931 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1751 
=== Usages ===
=== Predecessor ===
v1746 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3142 value: i931 stateAfter: - lastLocationAccess: - #next: v1751  <|@  <|@
f <@~|@floating>@ <|@
tid v3143 <|@
result [v196|QWORD] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1747 
index: - 
=== Succesors ===
=== Usages ===
v1751 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1747 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1751 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:469) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2926) [bci: 90]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3143 
value: j1425 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1754 
=== Usages ===
=== Predecessor ===
v1750 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3143 value: j1425 stateAfter: - lastLocationAccess: - #next: v1754  <|@  <|@
f <@~|@floating>@ <|@
tid v3148 <|@
result [v196|QWORD + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j1747 
index: - 
=== Succesors ===
=== Usages ===
v1754 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1747 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1754 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2926) [bci: 90]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3148 
value: v1913 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1729 
=== Usages ===
=== Predecessor ===
v1751 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3148 value: v1913 stateAfter: - lastLocationAccess: - #next: v1729  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1729 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.MembarNode.memoryBarrier(int, LocationIdentity) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:560) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2926) [bci: 90]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1730 
=== Usages ===
=== Predecessor ===
v1754 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a1730  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1730 <|@
result v203|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:561) [bci: 71]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2926) [bci: 90]
stamp: a! -
trackedPointer: true
=== Inputs ===
input: j1747 
=== Succesors ===
next: v1732 
=== Usages ===
a1735 
=== Predecessor ===
v1729 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j1747 #next: v1732  <|@  <|@
f <@*|@fixed>@ <|@
tid v1732 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2926) [bci: 90]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1733 
=== Predecessor ===
a1730 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v202|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v201|QWORD + v196|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v201|QWORD + v196|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v201|QWORD + v196|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v201|QWORD + v196|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v196|QWORD + 12], y: v193|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v196|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v196|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v203|QWORD[.] = MOVE v196|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v203|QWORD[.]] destination: B158 -> B161 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B159"
    from_bci -1
    to_bci -1
    predecessors "B155" 
    successors "B160" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4568327582307856200
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1717 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2926) [bci: 90]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1721 
=== Usages ===
=== Predecessor ===
v1719 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1721  <|@  <|@
f <@*|@fixed>@ <|@
tid v1721 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2926) [bci: 90]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1722 
=== Predecessor ===
v1717 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B159 -> B160 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B160"
    from_bci -1
    to_bci -1
    predecessors "B159" "B157" 
    successors "B161" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4568883886688195138
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1722 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2926) [bci: 90]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1721 v1723 
=== Succesors ===
next: a1731 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1721 v1723 #next: a1731  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1731 <|@
result v204|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.newArray(ForeignCallDescriptor, KlassPointer, int, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 155]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2926) [bci: 90]
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?60 
arguments: v1424 i931 i26 
=== Succesors ===
next: v1734 
=== Usages ===
a1735 
=== Predecessor ===
v1722 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?60 arguments: v1424 i931 i26 #next: v1734  <|@  <|@
f <@*|@fixed>@ <|@
tid v1734 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2926) [bci: 90]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1733 
=== Predecessor ===
a1731 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v19|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v193|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FormatSpecifier.justify(Formatter.java:2926) [bci: 80]
locals: - - v182|QWORD[.] - v14|DWORD v183|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:80] <|@ <|@
      nr   -1  <|@ instruction v204|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v204|QWORD[.]] destination: B160 -> B161 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B161"
    from_bci -1
    to_bci -1
    predecessors "B158" "B160" 
    successors "B162" "B163" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4583383671135353628
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a1735 <|@
result v205|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2926) [bci: 90]
stamp: a! -
valueDescription: a -
=== Inputs ===
merge: v1733 
values: a1730 a1731 
=== Succesors ===
=== Usages ===
v3183 a1273 v3096 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1733 values: a1730 a1731  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1733 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2926) [bci: 90]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1732 v1734 
=== Succesors ===
next: v2491 
=== Usages ===
a1735 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1732 v1734 #next: v2491  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2491 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v1975 
=== Usages ===
j2492 j2494 
=== Predecessor ===
v1733 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v1975  <|@  <|@
f <@~|@floating>@ <|@
tid v1124 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Math.min(Math.java:1336) [bci: 2]
at com.oracle.graal.enterprise.T.c.b(stripped:192) [bci: 4]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:102) [bci: 9]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2926) [bci: 90]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3061 
y: i931 
=== Succesors ===
=== Usages ===
i1264 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i3061 y: i931  <|@  <|@
f <@~|@floating>@ <|@
tid i1264 <|@
result v206|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
condition: v1124 
trueValue: i3061 
falseValue: i931 
=== Succesors ===
=== Usages ===
j1942 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v1124 trueValue: i3061 falseValue: i931  <|@  <|@
f <@~|@floating>@ <|@
tid j1942 <|@
result v207|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i1264 
=== Succesors ===
=== Usages ===
j2556 v3183 j1946 v1972 v2482 j2538 j2544 j2548 j2552 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i1264  <|@  <|@
f <@~|@floating>@ <|@
tid v1972 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1942 
y: j1425 
=== Succesors ===
=== Usages ===
v1975 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1942 y: j1425  <|@  <|@
f <@*|@fixed>@ <|@
tid v1975 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v1972 
=== Succesors ===
trueSuccessor: v1973 
falseSuccessor: v1974 
=== Usages ===
=== Predecessor ===
v2491 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1972 #trueSuccessor: v1973 #falseSuccessor: v1974  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v205|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v193|DWORD, y: v186|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v206|DWORD = CMOVE (falseValue: v193|DWORD, ~trueValue: v186|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction v207|QWORD = MOVSXD v206|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v207|QWORD y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B161 -> B162 falseDestination: B161 -> B163 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B162"
    from_bci -1
    to_bci -1
    predecessors "B161" 
    successors "B180" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4578880071507983132
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1973 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1991 
=== Usages ===
=== Predecessor ===
v1975 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1991  <|@  <|@
f <@*|@fixed>@ <|@
tid v1991 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1992 
=== Predecessor ===
v1973 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B162 -> B180 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B163"
    from_bci -1
    to_bci -1
    predecessors "B161" 
    successors "B164" "B165" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4578880071507983132
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1974 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1978 
=== Usages ===
=== Predecessor ===
v1975 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1978  <|@  <|@
f <@~|@floating>@ <|@
tid v3096 <|@
result [v205|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1735 
index: - 
=== Succesors ===
=== Usages ===
j2494 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1735 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j2494 <|@
result v208|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v2491 
address: v3096 
=== Succesors ===
=== Usages ===
v3187 v3189 v3191 v3193 v3195 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v2491 address: v3096  <|@  <|@
f <@~|@floating>@ <|@
tid v3092 <|@
result [v184|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a589 
index: - 
=== Succesors ===
=== Usages ===
j2492 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a589 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j2492 <|@
result v209|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v2491 
address: v3092 
=== Succesors ===
=== Usages ===
v3188 v3190 v3192 v3194 v3196 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v2491 address: v3092  <|@  <|@
f <@~|@floating>@ <|@
tid j2538 <|@
result v210|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483664 - 2147483631]
=== Inputs ===
x: j1942 
y: j2537 
=== Succesors ===
=== Usages ===
v2539 v2541 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1942 y: j2537  <|@  <|@
f <@~|@floating>@ <|@
tid v2539 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2538 
y: j1034 
=== Succesors ===
=== Usages ===
v1978 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2538 y: j1034  <|@  <|@
f <@*|@fixed>@ <|@
tid v1978 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v2539 
=== Succesors ===
trueSuccessor: v1976 
falseSuccessor: v1977 
=== Usages ===
=== Predecessor ===
v1974 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2539 #trueSuccessor: v1976 #falseSuccessor: v1977  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v208|QWORD[.] = LEA [v205|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v209|QWORD[.] = LEA [v184|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v210|QWORD = LEA [v207|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v210|QWORD, y: v210|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B163 -> B164 falseDestination: B163 -> B165 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B164"
    from_bci -1
    to_bci -1
    predecessors "B163" 
    successors "B168" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4576948459076250709
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1976 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1987 
=== Usages ===
=== Predecessor ===
v1978 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1987  <|@  <|@
f <@*|@fixed>@ <|@
tid v1987 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1988 
=== Predecessor ===
v1976 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B164 -> B168 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B165"
    from_bci -1
    to_bci -1
    predecessors "B163" 
    successors "B166" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4569872872253242140
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1977 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1979 
=== Usages ===
=== Predecessor ===
v1978 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1979  <|@  <|@
f <@*|@fixed>@ <|@
tid v1979 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1980 
=== Predecessor ===
v1977 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B165 -> B166 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B166"
    from_bci -1
    to_bci -1
    predecessors "B165" "B201" 
    successors "B167" "B201" 
    xhandlers
    flags "llh" 
    loop_index 6
    loop_depth 2
    probability 4578880071507983132
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j2529 <|@
result v211|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1980 
values: j1034 j2536 
=== Succesors ===
=== Usages ===
v3196 j2536 v3195 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1980 values: j1034 j2536  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1980 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v1979 
=== Succesors ===
next: v3062 
=== Usages ===
v3062 v1983 v1984 j2529 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v1979 #next: v3062  <|@  <|@
f <@~|@floating>@ <|@
tid v3196 <|@
result [v209|QWORD[.] + v211|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j2492 
index: j2529 
=== Succesors ===
=== Usages ===
v3062 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2492 index: j2529  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3062 <|@
result v212|V256_WORD <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16>
=== Inputs ===
stateBefore: - 
guard: v1980 
address: v3196 
=== Succesors ===
next: v2979 
=== Usages ===
v2979 
=== Predecessor ===
v1980 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1980 address: v3196 #next: v2979  <|@  <|@
f <@~|@floating>@ <|@
tid v3195 <|@
result [v208|QWORD[.] + v211|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j2494 
index: j2529 
=== Succesors ===
=== Usages ===
v2979 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2494 index: j2529  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2979 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3195 
value: v3062 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1986 
=== Usages ===
=== Predecessor ===
v3062 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3195 value: v3062 stateAfter: - lastLocationAccess: - #next: v1986  <|@  <|@
f <@~|@floating>@ <|@
tid j2536 <|@
result v213|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j2529 
y: j739 
=== Succesors ===
=== Usages ===
j2521 j2529 v2541 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2529 y: j739  <|@  <|@
f <@~|@floating>@ <|@
tid v2541 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2538 
y: j2536 
=== Succesors ===
=== Usages ===
v1986 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2538 y: j2536  <|@  <|@
f <@*|@fixed>@ <|@
tid v1986 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v2541 
=== Succesors ===
trueSuccessor: v1983 
falseSuccessor: v1985 
=== Usages ===
=== Predecessor ===
v2979 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2541 #trueSuccessor: v1983 #falseSuccessor: v1985  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v211|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v212|V256_WORD = H [v209|QWORD[.] + v211|QWORD * 2] nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v208|QWORD[.] + v211|QWORD * 2], input: v212|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v213|QWORD = LEA [v211|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v213|QWORD, y: v210|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B166 -> B167 falseDestination: B166 -> B201 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B167"
    from_bci -1
    to_bci -1
    predecessors "B166" 
    successors "B168" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4569872872253242140
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1983 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v1980 
=== Succesors ===
next: v1989 
=== Usages ===
=== Predecessor ===
v1986 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v1980 #next: v1989  <|@  <|@
f <@*|@fixed>@ <|@
tid v1989 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1988 
=== Predecessor ===
v1983 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v213|QWORD] destination: B167 -> B168 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B168"
    from_bci -1
    to_bci -1
    predecessors "B164" "B167" 
    successors "B169" "B170" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4578880071507983132
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j2521 <|@
result v214|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1988 
values: j1034 j2536 
=== Succesors ===
=== Usages ===
v3194 j2528 j2512 v2545 v3193 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1988 values: j1034 j2536  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1988 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1987 v1989 
=== Succesors ===
next: v2011 
=== Usages ===
j2521 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1987 v1989 #next: v2011  <|@  <|@
f <@~|@floating>@ <|@
tid j2544 <|@
result v215|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483656 - 2147483639]
=== Inputs ===
x: j1942 
y: j2543 
=== Succesors ===
=== Usages ===
v2545 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1942 y: j2543  <|@  <|@
f <@~|@floating>@ <|@
tid v2545 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2544 
y: j2521 
=== Succesors ===
=== Usages ===
v2011 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2544 y: j2521  <|@  <|@
f <@*|@fixed>@ <|@
tid v2011 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v2545 
=== Succesors ===
trueSuccessor: v2010 
falseSuccessor: v2009 
=== Usages ===
=== Predecessor ===
v1988 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2545 #trueSuccessor: v2010 #falseSuccessor: v2009  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v214|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v215|QWORD = LEA [v207|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v214|QWORD, y: v215|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B168 -> B169 falseDestination: B168 -> B170 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B169"
    from_bci -1
    to_bci -1
    predecessors "B168" 
    successors "B171" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4569872872253242140
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2010 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2014 
=== Usages ===
=== Predecessor ===
v2011 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2014  <|@  <|@
f <@*|@fixed>@ <|@
tid v2014 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1999 
=== Predecessor ===
v2010 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v214|QWORD] destination: B169 -> B171 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B170"
    from_bci -1
    to_bci -1
    predecessors "B168" 
    successors "B171" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4576948459076250709
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2009 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3063 
=== Usages ===
v3063 
=== Predecessor ===
v2011 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3063  <|@  <|@
f <@~|@floating>@ <|@
tid v3194 <|@
result [v209|QWORD[.] + v214|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j2492 
index: j2521 
=== Succesors ===
=== Usages ===
v3063 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2492 index: j2521  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3063 <|@
result v216|V128_WORD <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16,i16,i16,i16,i16,i16,i16>
=== Inputs ===
stateBefore: - 
guard: v2009 
address: v3194 
=== Succesors ===
next: v2977 
=== Usages ===
v2977 
=== Predecessor ===
v2009 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v2009 address: v3194 #next: v2977  <|@  <|@
f <@~|@floating>@ <|@
tid v3193 <|@
result [v208|QWORD[.] + v214|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j2494 
index: j2521 
=== Succesors ===
=== Usages ===
v2977 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2494 index: j2521  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2977 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3193 
value: v3063 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1998 
=== Usages ===
=== Predecessor ===
v3063 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3193 value: v3063 stateAfter: - lastLocationAccess: - #next: v1998  <|@  <|@
f <@~|@floating>@ <|@
tid j2528 <|@
result v217|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j2521 
y: j1432 
=== Succesors ===
=== Usages ===
j2512 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2521 y: j1432  <|@  <|@
f <@*|@fixed>@ <|@
tid v1998 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1999 
=== Predecessor ===
v2977 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v216|V128_WORD = H [v209|QWORD[.] + v214|QWORD * 2] nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v208|QWORD[.] + v214|QWORD * 2], input: v216|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v217|QWORD = LEA [v214|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v217|QWORD] destination: B170 -> B171 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B171"
    from_bci -1
    to_bci -1
    predecessors "B170" "B169" 
    successors "B172" "B173" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4578880071507983132
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j2512 <|@
result v218|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1999 
values: j2528 j2521 
=== Succesors ===
=== Usages ===
v3192 j2520 j2504 v2549 v3191 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1999 values: j2528 j2521  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1999 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1998 v2014 
=== Succesors ===
next: v2017 
=== Usages ===
j2512 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1998 v2014 #next: v2017  <|@  <|@
f <@~|@floating>@ <|@
tid j2548 <|@
result v219|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483652 - 2147483643]
=== Inputs ===
x: j1942 
y: j2547 
=== Succesors ===
=== Usages ===
v2549 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1942 y: j2547  <|@  <|@
f <@~|@floating>@ <|@
tid v2549 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2548 
y: j2512 
=== Succesors ===
=== Usages ===
v2017 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2548 y: j2512  <|@  <|@
f <@*|@fixed>@ <|@
tid v2017 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v2549 
=== Succesors ===
trueSuccessor: v2016 
falseSuccessor: v2015 
=== Usages ===
=== Predecessor ===
v1999 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2549 #trueSuccessor: v2016 #falseSuccessor: v2015  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v218|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v219|QWORD = LEA [v207|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v218|QWORD, y: v219|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B171 -> B172 falseDestination: B171 -> B173 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B172"
    from_bci -1
    to_bci -1
    predecessors "B171" 
    successors "B174" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4569872872253242140
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2016 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2020 
=== Usages ===
=== Predecessor ===
v2017 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2020  <|@  <|@
f <@*|@fixed>@ <|@
tid v2020 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2003 
=== Predecessor ===
v2016 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v218|QWORD] destination: B172 -> B174 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B173"
    from_bci -1
    to_bci -1
    predecessors "B171" 
    successors "B174" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4576948459076250709
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2015 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3064 
=== Usages ===
v3064 
=== Predecessor ===
v2017 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3064  <|@  <|@
f <@~|@floating>@ <|@
tid v3192 <|@
result [v209|QWORD[.] + v218|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j2492 
index: j2512 
=== Succesors ===
=== Usages ===
v3064 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2492 index: j2512  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3064 <|@
result v220|V64_WORD <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16,i16,i16>
=== Inputs ===
stateBefore: - 
guard: v2015 
address: v3192 
=== Succesors ===
next: v2975 
=== Usages ===
v2975 
=== Predecessor ===
v2015 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v2015 address: v3192 #next: v2975  <|@  <|@
f <@~|@floating>@ <|@
tid v3191 <|@
result [v208|QWORD[.] + v218|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j2494 
index: j2512 
=== Succesors ===
=== Usages ===
v2975 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2494 index: j2512  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2975 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3191 
value: v3064 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2002 
=== Usages ===
=== Predecessor ===
v3064 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3191 value: v3064 stateAfter: - lastLocationAccess: - #next: v2002  <|@  <|@
f <@~|@floating>@ <|@
tid j2520 <|@
result v221|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j2512 
y: j2519 
=== Succesors ===
=== Usages ===
j2504 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2512 y: j2519  <|@  <|@
f <@*|@fixed>@ <|@
tid v2002 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2003 
=== Predecessor ===
v2975 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v220|V64_WORD = H [v209|QWORD[.] + v218|QWORD * 2] nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction J (address: [v208|QWORD[.] + v218|QWORD * 2], input: v220|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v221|QWORD = LEA [v218|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v221|QWORD] destination: B173 -> B174 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B174"
    from_bci -1
    to_bci -1
    predecessors "B173" "B172" 
    successors "B175" "B176" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4578880071507983132
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j2504 <|@
result v222|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2003 
values: j2520 j2512 
=== Succesors ===
=== Usages ===
v3190 j2511 j2495 v2553 v3189 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2003 values: j2520 j2512  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2003 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2002 v2020 
=== Succesors ===
next: v2023 
=== Usages ===
j2504 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2002 v2020 #next: v2023  <|@  <|@
f <@~|@floating>@ <|@
tid j2552 <|@
result v223|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483650 - 2147483645]
=== Inputs ===
x: j1942 
y: j2551 
=== Succesors ===
=== Usages ===
v2553 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1942 y: j2551  <|@  <|@
f <@~|@floating>@ <|@
tid v2553 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2552 
y: j2504 
=== Succesors ===
=== Usages ===
v2023 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2552 y: j2504  <|@  <|@
f <@*|@fixed>@ <|@
tid v2023 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v2553 
=== Succesors ===
trueSuccessor: v2022 
falseSuccessor: v2021 
=== Usages ===
=== Predecessor ===
v2003 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2553 #trueSuccessor: v2022 #falseSuccessor: v2021  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v222|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v223|QWORD = LEA [v207|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v222|QWORD, y: v223|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B174 -> B175 falseDestination: B174 -> B176 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B175"
    from_bci -1
    to_bci -1
    predecessors "B174" 
    successors "B177" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4569872872253242140
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2022 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2026 
=== Usages ===
=== Predecessor ===
v2023 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2026  <|@  <|@
f <@*|@fixed>@ <|@
tid v2026 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2006 
=== Predecessor ===
v2022 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v222|QWORD] destination: B175 -> B177 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B176"
    from_bci -1
    to_bci -1
    predecessors "B174" 
    successors "B177" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4576948459076250709
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2021 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3065 
=== Usages ===
v3065 
=== Predecessor ===
v2023 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3065  <|@  <|@
f <@~|@floating>@ <|@
tid v3190 <|@
result [v209|QWORD[.] + v222|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j2492 
index: j2504 
=== Succesors ===
=== Usages ===
v3065 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2492 index: j2504  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3065 <|@
result v224|V32_WORD <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16>
=== Inputs ===
stateBefore: - 
guard: v2021 
address: v3190 
=== Succesors ===
next: v2973 
=== Usages ===
v2973 
=== Predecessor ===
v2021 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v2021 address: v3190 #next: v2973  <|@  <|@
f <@~|@floating>@ <|@
tid v3189 <|@
result [v208|QWORD[.] + v222|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j2494 
index: j2504 
=== Succesors ===
=== Usages ===
v2973 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2494 index: j2504  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2973 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3189 
value: v3065 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2005 
=== Usages ===
=== Predecessor ===
v3065 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3189 value: v3065 stateAfter: - lastLocationAccess: - #next: v2005  <|@  <|@
f <@~|@floating>@ <|@
tid j2511 <|@
result v225|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j2504 
y: j2497 
=== Succesors ===
=== Usages ===
j2495 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2504 y: j2497  <|@  <|@
f <@*|@fixed>@ <|@
tid v2005 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2006 
=== Predecessor ===
v2973 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v224|V32_WORD = H [v209|QWORD[.] + v222|QWORD * 2] nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction J (address: [v208|QWORD[.] + v222|QWORD * 2], input: v224|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction v225|QWORD = LEA [v222|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v225|QWORD] destination: B176 -> B177 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B177"
    from_bci -1
    to_bci -1
    predecessors "B176" "B175" 
    successors "B178" "B179" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4578880071507983132
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j2495 <|@
result v226|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2006 
values: j2511 j2504 
=== Succesors ===
=== Usages ===
v3188 v2557 v3187 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2006 values: j2511 j2504  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2006 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2005 v2026 
=== Succesors ===
next: v2029 
=== Usages ===
j2495 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2005 v2026 #next: v2029  <|@  <|@
f <@~|@floating>@ <|@
tid j2556 <|@
result v227|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483649 - 2147483646]
=== Inputs ===
x: j1942 
y: j2555 
=== Succesors ===
=== Usages ===
v2557 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1942 y: j2555  <|@  <|@
f <@~|@floating>@ <|@
tid v2557 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2556 
y: j2495 
=== Succesors ===
=== Usages ===
v2029 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2556 y: j2495  <|@  <|@
f <@*|@fixed>@ <|@
tid v2029 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v2557 
=== Succesors ===
trueSuccessor: v2028 
falseSuccessor: v2027 
=== Usages ===
=== Predecessor ===
v2006 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2557 #trueSuccessor: v2028 #falseSuccessor: v2027  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v226|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v227|QWORD = DEC v207|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v226|QWORD, y: v227|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B177 -> B178 falseDestination: B177 -> B179 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B178"
    from_bci -1
    to_bci -1
    predecessors "B177" 
    successors "B180" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4569872872253242140
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2028 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2032 
=== Usages ===
=== Predecessor ===
v2029 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2032  <|@  <|@
f <@*|@fixed>@ <|@
tid v2032 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1992 
=== Predecessor ===
v2028 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B178 -> B180 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B179"
    from_bci -1
    to_bci -1
    predecessors "B177" 
    successors "B180" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4576948459076250709
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2027 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: i3066 
=== Usages ===
i3066 
=== Predecessor ===
v2029 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i3066  <|@  <|@
f <@~|@floating>@ <|@
tid v3188 <|@
result [v209|QWORD[.] + v226|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j2492 
index: j2495 
=== Succesors ===
=== Usages ===
i3066 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2492 index: j2495  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i3066 <|@
result v228|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: v2027 
address: v3188 
=== Succesors ===
next: v2971 
=== Usages ===
v2971 
=== Predecessor ===
v2027 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v2027 address: v3188 #next: v2971  <|@  <|@
f <@~|@floating>@ <|@
tid v3187 <|@
result [v208|QWORD[.] + v226|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j2494 
index: j2495 
=== Succesors ===
=== Usages ===
v2971 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2494 index: j2495  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2971 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3187 
value: i3066 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2008 
=== Usages ===
=== Predecessor ===
i3066 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3187 value: i3066 stateAfter: - lastLocationAccess: - #next: v2008  <|@  <|@
f <@*|@fixed>@ <|@
tid v2008 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1992 
=== Predecessor ===
v2971 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v228|DWORD = MOVSX [v209|QWORD[.] + v226|QWORD * 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v208|QWORD[.] + v226|QWORD * 2], y: v228|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B179 -> B180 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B180"
    from_bci -1
    to_bci -1
    predecessors "B162" "B179" "B178" 
    successors "B181" "B199" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4583383671135353628
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1992 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1991 v2008 v2032 
=== Succesors ===
next: v2560 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1991 v2008 v2032 #next: v2560  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2560 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v2039 
=== Usages ===
j2562 
=== Predecessor ===
v1992 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v2039  <|@  <|@
f <@~|@floating>@ <|@
tid j1941 <|@
result v229|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i931 
=== Succesors ===
=== Usages ===
j1946 v2482 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i931  <|@  <|@
f <@~|@floating>@ <|@
tid v2482 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1942 
y: j1941 
=== Succesors ===
=== Usages ===
v2039 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1942 y: j1941  <|@  <|@
f <@*|@fixed>@ <|@
tid v2039 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v2482 
=== Succesors ===
trueSuccessor: v2038 
falseSuccessor: v2037 
=== Usages ===
=== Predecessor ===
v2560 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2482 #trueSuccessor: v2038 #falseSuccessor: v2037  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v229|QWORD = MOVSXD v193|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v229|QWORD, y: v207|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B180 -> B181 falseDestination: B180 -> B199 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B181"
    from_bci -1
    to_bci -1
    predecessors "B180" 
    successors "B182" "B183" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4578880071507983132
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2038 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2042 
=== Usages ===
=== Predecessor ===
v2039 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2042  <|@  <|@
f <@~|@floating>@ <|@
tid v3183 <|@
result [v205|QWORD[.] + v207|QWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a1735 
index: j1942 
=== Succesors ===
=== Usages ===
j2562 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1735 index: j1942  <|@  <|@
f <@~|@floating>@ <|@
tid j2562 <|@
result v230|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v2560 
address: v3183 
=== Succesors ===
=== Usages ===
v3197 v3198 v3199 v3200 v3201 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v2560 address: v3183  <|@  <|@
f <@~|@floating>@ <|@
tid j1946 <|@
result v231|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
stamp: i64 [-4294967295 - 4294967295]
=== Inputs ===
x: j1941 
y: j1942 
=== Succesors ===
=== Usages ===
j2607 j2593 j2598 j2601 j2604 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j1941 y: j1942  <|@  <|@
f <@~|@floating>@ <|@
tid j2593 <|@
result v232|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967311 - 4294967279]
=== Inputs ===
x: j1946 
y: j2537 
=== Succesors ===
=== Usages ===
v2594 v2596 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1946 y: j2537  <|@  <|@
f <@~|@floating>@ <|@
tid v2594 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2593 
y: j1034 
=== Succesors ===
=== Usages ===
v2042 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2593 y: j1034  <|@  <|@
f <@*|@fixed>@ <|@
tid v2042 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v2594 
=== Succesors ===
trueSuccessor: v2040 
falseSuccessor: v2041 
=== Usages ===
=== Predecessor ===
v2038 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2594 #trueSuccessor: v2040 #falseSuccessor: v2041  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v230|QWORD[.] = LEA [v205|QWORD[.] + v207|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v231|QWORD = SUB (x: v229|QWORD, ~y: v207|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v232|QWORD = LEA [v231|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v232|QWORD, y: v232|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B181 -> B182 falseDestination: B181 -> B183 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B182"
    from_bci -1
    to_bci -1
    predecessors "B181" 
    successors "B186" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4576948459076250709
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2040 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2051 
=== Usages ===
=== Predecessor ===
v2042 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2051  <|@  <|@
f <@*|@fixed>@ <|@
tid v2051 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2052 
=== Predecessor ===
v2040 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B182 -> B186 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B183"
    from_bci -1
    to_bci -1
    predecessors "B181" 
    successors "B184" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4569872872253242140
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2041 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2043 
=== Usages ===
=== Predecessor ===
v2042 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2043  <|@  <|@
f <@*|@fixed>@ <|@
tid v2043 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2044 
=== Predecessor ===
v2041 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B183 -> B184 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B184"
    from_bci -1
    to_bci -1
    predecessors "B183" "B198" 
    successors "B185" "B198" 
    xhandlers
    flags "llh" 
    loop_index 7
    loop_depth 2
    probability 4578880071507983132
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j2587 <|@
result v233|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2044 
values: j1034 j2592 
=== Succesors ===
=== Usages ===
v3201 j2592 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2044 values: j1034 j2592  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2044 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v2043 
=== Succesors ===
next: v2989 
=== Usages ===
j2587 v2047 v2048 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v2043 #next: v2989  <|@  <|@
f <@~|@floating>@ <|@
tid v3201 <|@
result [v230|QWORD[.] + v233|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j2562 
index: j2587 
=== Succesors ===
=== Usages ===
v2989 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2562 index: j2587  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2989 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3201 
value: v3035 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2050 
=== Usages ===
=== Predecessor ===
v2044 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3201 value: v3035 stateAfter: - lastLocationAccess: - #next: v2050  <|@  <|@
f <@~|@floating>@ <|@
tid j2592 <|@
result v234|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j2587 
y: j739 
=== Succesors ===
=== Usages ===
j2581 j2587 v2596 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2587 y: j739  <|@  <|@
f <@~|@floating>@ <|@
tid v2596 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2593 
y: j2592 
=== Succesors ===
=== Usages ===
v2050 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2593 y: j2592  <|@  <|@
f <@*|@fixed>@ <|@
tid v2050 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v2596 
=== Succesors ===
trueSuccessor: v2047 
falseSuccessor: v2049 
=== Usages ===
=== Predecessor ===
v2989 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2596 #trueSuccessor: v2047 #falseSuccessor: v2049  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v233|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v230|QWORD[.] + v233|QWORD * 2], input: v18|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v234|QWORD = LEA [v233|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v234|QWORD, y: v232|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B184 -> B185 falseDestination: B184 -> B198 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B185"
    from_bci -1
    to_bci -1
    predecessors "B184" 
    successors "B186" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4569872872253242140
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2047 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v2044 
=== Succesors ===
next: v2053 
=== Usages ===
=== Predecessor ===
v2050 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v2044 #next: v2053  <|@  <|@
f <@*|@fixed>@ <|@
tid v2053 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2052 
=== Predecessor ===
v2047 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v234|QWORD] destination: B185 -> B186 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B186"
    from_bci -1
    to_bci -1
    predecessors "B182" "B185" 
    successors "B187" "B188" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4578880071507983132
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j2581 <|@
result v235|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2052 
values: j1034 j2592 
=== Succesors ===
=== Usages ===
v3200 j2586 j2575 v2599 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2052 values: j1034 j2592  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2052 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2051 v2053 
=== Succesors ===
next: v2074 
=== Usages ===
j2581 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2051 v2053 #next: v2074  <|@  <|@
f <@~|@floating>@ <|@
tid j2598 <|@
result v236|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967303 - 4294967287]
=== Inputs ===
x: j1946 
y: j2543 
=== Succesors ===
=== Usages ===
v2599 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1946 y: j2543  <|@  <|@
f <@~|@floating>@ <|@
tid v2599 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2598 
y: j2581 
=== Succesors ===
=== Usages ===
v2074 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2598 y: j2581  <|@  <|@
f <@*|@fixed>@ <|@
tid v2074 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v2599 
=== Succesors ===
trueSuccessor: v2073 
falseSuccessor: v2072 
=== Usages ===
=== Predecessor ===
v2052 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2599 #trueSuccessor: v2073 #falseSuccessor: v2072  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v235|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v236|QWORD = LEA [v231|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v235|QWORD, y: v236|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B186 -> B187 falseDestination: B186 -> B188 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B187"
    from_bci -1
    to_bci -1
    predecessors "B186" 
    successors "B189" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4569872872253242140
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2073 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2077 
=== Usages ===
=== Predecessor ===
v2074 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2077  <|@  <|@
f <@*|@fixed>@ <|@
tid v2077 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2063 
=== Predecessor ===
v2073 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v235|QWORD] destination: B187 -> B189 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B188"
    from_bci -1
    to_bci -1
    predecessors "B186" 
    successors "B189" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4576948459076250709
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2072 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2988 
=== Usages ===
=== Predecessor ===
v2074 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2988  <|@  <|@
f <@~|@floating>@ <|@
tid v3200 <|@
result [v230|QWORD[.] + v235|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j2562 
index: j2581 
=== Succesors ===
=== Usages ===
v2988 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2562 index: j2581  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2988 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3200 
value: v3039 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2062 
=== Usages ===
=== Predecessor ===
v2072 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3200 value: v3039 stateAfter: - lastLocationAccess: - #next: v2062  <|@  <|@
f <@~|@floating>@ <|@
tid j2586 <|@
result v237|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j2581 
y: j1432 
=== Succesors ===
=== Usages ===
j2575 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2581 y: j1432  <|@  <|@
f <@*|@fixed>@ <|@
tid v2062 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2063 
=== Predecessor ===
v2988 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v230|QWORD[.] + v235|QWORD * 2], input: v17|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v237|QWORD = LEA [v235|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v237|QWORD] destination: B188 -> B189 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B189"
    from_bci -1
    to_bci -1
    predecessors "B188" "B187" 
    successors "B190" "B191" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4578880071507983132
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j2575 <|@
result v238|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2063 
values: j2586 j2581 
=== Succesors ===
=== Usages ===
v3199 j2580 j2569 v2602 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2063 values: j2586 j2581  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2063 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2062 v2077 
=== Succesors ===
next: v2080 
=== Usages ===
j2575 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2062 v2077 #next: v2080  <|@  <|@
f <@~|@floating>@ <|@
tid j2601 <|@
result v239|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967299 - 4294967291]
=== Inputs ===
x: j1946 
y: j2547 
=== Succesors ===
=== Usages ===
v2602 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1946 y: j2547  <|@  <|@
f <@~|@floating>@ <|@
tid v2602 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2601 
y: j2575 
=== Succesors ===
=== Usages ===
v2080 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2601 y: j2575  <|@  <|@
f <@*|@fixed>@ <|@
tid v2080 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v2602 
=== Succesors ===
trueSuccessor: v2079 
falseSuccessor: v2078 
=== Usages ===
=== Predecessor ===
v2063 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2602 #trueSuccessor: v2079 #falseSuccessor: v2078  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v238|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v239|QWORD = LEA [v231|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v238|QWORD, y: v239|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B189 -> B190 falseDestination: B189 -> B191 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B190"
    from_bci -1
    to_bci -1
    predecessors "B189" 
    successors "B192" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4569872872253242140
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2079 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2083 
=== Usages ===
=== Predecessor ===
v2080 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2083  <|@  <|@
f <@*|@fixed>@ <|@
tid v2083 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2066 
=== Predecessor ===
v2079 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v238|QWORD] destination: B190 -> B192 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B191"
    from_bci -1
    to_bci -1
    predecessors "B189" 
    successors "B192" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4576948459076250709
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2078 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2986 
=== Usages ===
=== Predecessor ===
v2080 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2986  <|@  <|@
f <@~|@floating>@ <|@
tid v3199 <|@
result [v230|QWORD[.] + v238|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j2562 
index: j2575 
=== Succesors ===
=== Usages ===
v2986 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2562 index: j2575  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2986 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3199 
value: v3038 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2065 
=== Usages ===
=== Predecessor ===
v2078 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3199 value: v3038 stateAfter: - lastLocationAccess: - #next: v2065  <|@  <|@
f <@~|@floating>@ <|@
tid j2580 <|@
result v240|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j2575 
y: j2519 
=== Succesors ===
=== Usages ===
j2569 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2575 y: j2519  <|@  <|@
f <@*|@fixed>@ <|@
tid v2065 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2066 
=== Predecessor ===
v2986 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v230|QWORD[.] + v238|QWORD * 2], input: v16|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v240|QWORD = LEA [v238|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v240|QWORD] destination: B191 -> B192 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B192"
    from_bci -1
    to_bci -1
    predecessors "B191" "B190" 
    successors "B193" "B194" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4578880071507983132
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j2569 <|@
result v241|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2066 
values: j2580 j2575 
=== Succesors ===
=== Usages ===
v3198 j2574 j2563 v2605 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2066 values: j2580 j2575  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2066 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2065 v2083 
=== Succesors ===
next: v2086 
=== Usages ===
j2569 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2065 v2083 #next: v2086  <|@  <|@
f <@~|@floating>@ <|@
tid j2604 <|@
result v242|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967297 - 4294967293]
=== Inputs ===
x: j1946 
y: j2551 
=== Succesors ===
=== Usages ===
v2605 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1946 y: j2551  <|@  <|@
f <@~|@floating>@ <|@
tid v2605 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2604 
y: j2569 
=== Succesors ===
=== Usages ===
v2086 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2604 y: j2569  <|@  <|@
f <@*|@fixed>@ <|@
tid v2086 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v2605 
=== Succesors ===
trueSuccessor: v2085 
falseSuccessor: v2084 
=== Usages ===
=== Predecessor ===
v2066 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2605 #trueSuccessor: v2085 #falseSuccessor: v2084  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v241|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v242|QWORD = LEA [v231|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v241|QWORD, y: v242|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B192 -> B193 falseDestination: B192 -> B194 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B193"
    from_bci -1
    to_bci -1
    predecessors "B192" 
    successors "B195" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4569872872253242140
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2085 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2089 
=== Usages ===
=== Predecessor ===
v2086 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2089  <|@  <|@
f <@*|@fixed>@ <|@
tid v2089 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2069 
=== Predecessor ===
v2085 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v241|QWORD] destination: B193 -> B195 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B194"
    from_bci -1
    to_bci -1
    predecessors "B192" 
    successors "B195" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4576948459076250709
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2084 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2984 
=== Usages ===
=== Predecessor ===
v2086 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2984  <|@  <|@
f <@~|@floating>@ <|@
tid v3198 <|@
result [v230|QWORD[.] + v241|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j2562 
index: j2569 
=== Succesors ===
=== Usages ===
v2984 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2562 index: j2569  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2984 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3198 
value: v3037 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2068 
=== Usages ===
=== Predecessor ===
v2084 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3198 value: v3037 stateAfter: - lastLocationAccess: - #next: v2068  <|@  <|@
f <@~|@floating>@ <|@
tid j2574 <|@
result v243|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j2569 
y: j2497 
=== Succesors ===
=== Usages ===
j2563 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2569 y: j2497  <|@  <|@
f <@*|@fixed>@ <|@
tid v2068 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2069 
=== Predecessor ===
v2984 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v230|QWORD[.] + v241|QWORD * 2], input: v15|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction v243|QWORD = LEA [v241|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v243|QWORD] destination: B194 -> B195 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B195"
    from_bci -1
    to_bci -1
    predecessors "B194" "B193" 
    successors "B196" "B197" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4578880071507983132
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j2563 <|@
result v244|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2069 
values: j2574 j2569 
=== Succesors ===
=== Usages ===
v3197 v2608 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2069 values: j2574 j2569  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2069 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2068 v2089 
=== Succesors ===
next: v2092 
=== Usages ===
j2563 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2068 v2089 #next: v2092  <|@  <|@
f <@~|@floating>@ <|@
tid j2607 <|@
result v245|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967296 - 4294967294]
=== Inputs ===
x: j1946 
y: j2555 
=== Succesors ===
=== Usages ===
v2608 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1946 y: j2555  <|@  <|@
f <@~|@floating>@ <|@
tid v2608 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2607 
y: j2563 
=== Succesors ===
=== Usages ===
v2092 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2607 y: j2563  <|@  <|@
f <@*|@fixed>@ <|@
tid v2092 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v2608 
=== Succesors ===
trueSuccessor: v2091 
falseSuccessor: v2090 
=== Usages ===
=== Predecessor ===
v2069 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2608 #trueSuccessor: v2091 #falseSuccessor: v2090  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v244|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v245|QWORD = DEC v231|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v244|QWORD, y: v245|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B195 -> B196 falseDestination: B195 -> B197 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B196"
    from_bci -1
    to_bci -1
    predecessors "B195" 
    successors "B200" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4569872872253242140
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2091 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2095 
=== Usages ===
=== Predecessor ===
v2092 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2095  <|@  <|@
f <@*|@fixed>@ <|@
tid v2095 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2056 
=== Predecessor ===
v2091 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B196 -> B200 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B197"
    from_bci -1
    to_bci -1
    predecessors "B195" 
    successors "B200" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4576948459076250709
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2090 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2982 
=== Usages ===
=== Predecessor ===
v2092 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2982  <|@  <|@
f <@~|@floating>@ <|@
tid v3197 <|@
result [v230|QWORD[.] + v244|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j2562 
index: j2563 
=== Succesors ===
=== Usages ===
v2982 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2562 index: j2563  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2982 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3197 
value: i3036 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2071 
=== Usages ===
=== Predecessor ===
v2090 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3197 value: i3036 stateAfter: - lastLocationAccess: - #next: v2071  <|@  <|@
f <@*|@fixed>@ <|@
tid v2071 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2056 
=== Predecessor ===
v2982 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v230|QWORD[.] + v244|QWORD * 2], y: r12|ILLEGAL) size: WORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B197 -> B200 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B198"
    from_bci -1
    to_bci -1
    predecessors "B184" 
    successors "B184" 
    xhandlers
    flags "lle" 
    loop_index 7
    loop_depth 2
    probability 4576948459076250709
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2049 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2048 
=== Usages ===
=== Predecessor ===
v2050 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2048  <|@  <|@
f <@*|@fixed>@ <|@
tid v2048 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v2044 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v2049 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v2044  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v234|QWORD] destination: B198 -> B184 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B199"
    from_bci -1
    to_bci -1
    predecessors "B180" 
    successors "B200" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4578880071507983132
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2037 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2055 
=== Usages ===
=== Predecessor ===
v2039 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2055  <|@  <|@
f <@*|@fixed>@ <|@
tid v2055 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2056 
=== Predecessor ===
v2037 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B199 -> B200 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B200"
    from_bci -1
    to_bci -1
    predecessors "B199" "B197" "B196" 
    successors "B145" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 1
    probability 4583383671135353628
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2056 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2055 v2071 v2095 
=== Succesors ===
next: a1273 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2055 v2071 v2095 #next: a1273  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1273 <|@
result v205|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2926) [bci: 90]
predefinedStamp: [null]
stamp: a! -
=== Inputs ===
object: a1735 
=== Succesors ===
next: v904 
=== Usages ===
a589 a902 v3090 
=== Predecessor ===
v2056 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a1735 #next: v904  <|@  <|@
f <@~|@floating>@ <|@
tid v3089 <|@
result [v182|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a715 
index: - 
=== Succesors ===
=== Usages ===
v904 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a715 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a902 <|@
result v246|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2926) [bci: 90]
op: Compress
stamp: n! -
=== Inputs ===
value: a1273 
=== Succesors ===
=== Usages ===
v904 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1273  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v904 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: AbstractStringBuilder.value
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2926) [bci: 90]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3089 
value: a902 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j1762 
=== Usages ===
=== Predecessor ===
a1273 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3089 value: a902 stateAfter: - lastLocationAccess: - #next: j1762  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1762 <|@
result v182|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2926) [bci: 90]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a715 
=== Succesors ===
next: v1766 
=== Usages ===
j1763 
=== Predecessor ===
v904 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a715 #next: v1766  <|@  <|@
f <@~|@floating>@ <|@
tid j1763 <|@
result v247|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2926) [bci: 90]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j1762 
y: i1692 
=== Succesors ===
=== Usages ===
v3149 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j1762 y: i1692  <|@  <|@
f <@~|@floating>@ <|@
tid v3149 <|@
result [v247|QWORD[*] + v99|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1763 
index: j1696 
=== Succesors ===
=== Usages ===
v1766 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1763 index: j1696  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1766 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2926) [bci: 90]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3149 
value: i1698 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v905 
=== Usages ===
=== Predecessor ===
j1762 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3149 value: i1698 stateAfter: - lastLocationAccess: - #next: v905  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v905 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: AbstractStringBuilder.count
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:650) [bci: 22]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2926) [bci: 90]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3087 
value: i132 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v913 
=== Usages ===
=== Predecessor ===
v1766 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3087 value: i132 stateAfter: - lastLocationAccess: - #next: v913  <|@  <|@
f <@~|@floating>@ <|@
tid v3090 <|@
result [v205|QWORD[.] + v185|DWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a1273 
index: i590 
=== Succesors ===
=== Usages ===
v913 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1273 index: i590  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v913 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:650) [bci: 26]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2926) [bci: 90]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1020 
address: v3090 
value: i921 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v72 
=== Usages ===
=== Predecessor ===
v905 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1020 address: v3090 value: i921 stateAfter: - lastLocationAccess: - #next: v72  <|@  <|@
f <@*|@fixed>@ <|@
tid v72 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2926) [bci: 80]
stamp: void
=== Inputs ===
loopBegin: v58 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v913 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v58  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v246|DWORD[.] = COMPRESSPOINTER (input: v205|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@1d28dd80 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v182|QWORD[.] + 16], y: v246|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v247|QWORD[*] = SHR v182|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v247|QWORD[*] + v99|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v182|QWORD[.] + 12], y: v187|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v205|QWORD[.] + v185|DWORD * 2 + 16] y: 32 size: WORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v189|DWORD, v205|QWORD[.], v187|DWORD] destination: B200 -> B145 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B201"
    from_bci -1
    to_bci -1
    predecessors "B166" 
    successors "B166" 
    xhandlers
    flags "lle" 
    loop_index 6
    loop_depth 2
    probability 4576948459076250709
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1985 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1984 
=== Usages ===
=== Predecessor ===
v1986 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1984  <|@  <|@
f <@*|@fixed>@ <|@
tid v1984 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v1980 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1985 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v1980  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v213|QWORD] destination: B201 -> B166 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B202"
    from_bci -1
    to_bci -1
    predecessors "B154" 
    successors "B203" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1023 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:650) [bci: 26]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2926) [bci: 90]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v58 
=== Succesors ===
next: v1364 
=== Usages ===
=== Predecessor ===
v1024 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v58 #next: v1364  <|@  <|@
f <@~|@floating>@ <|@
tid i1365 <|@
result int[-232219|0xfffffffffffc74e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -232219
stableDimension: 0
stamp: i32 [-232219] ⇊00000000fffc74e5 ⇈00000000fffc74e5
stampKind: i32
value: int[-232219|0xfffffffffffc74e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1357 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1364 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1354 
=== Predecessor ===
v1023 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-232219|0xfffffffffffc74e5]] destination: B202 -> B203 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B203"
    from_bci -1
    to_bci -1
    predecessors "B149" "B151" "B153" "B202" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1357 <|@
result v248|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-232219 - -228635] ⇊00000000fffc00e5 ⇈00000000fffcffed
valueDescription: i32
=== Inputs ===
merge: v1354 
values: i1356 i1361 i1363 i1365 
=== Succesors ===
=== Usages ===
v1359 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1354 values: i1356 i1361 i1363 i1365  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1354 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1355 v1360 v1362 v1364 
=== Succesors ===
next: v1359 
=== Usages ===
i1357 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1355 v1360 v1362 v1364 #next: v1359  <|@  <|@
f <@*|@fixed>@ <|@
tid v1359 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?60 
actionAndReason: i1357 
speculation: a1332 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1354 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?60 actionAndReason: i1357 speculation: a1332  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v248|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v248|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FormatSpecifier.justify(Formatter.java:2926) [bci: 80]
locals: - - v182|QWORD[.] - v14|DWORD v183|DWORD 
>@ <|@ instruction DEOPT info [bci:80] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B204"
    from_bci -1
    to_bci -1
    predecessors "B145" 
    successors "B206" 
    xhandlers
    flags 
    probability 4588182886451812978
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v66 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2927) [bci: 100]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v58 
=== Succesors ===
next: v517 
=== Usages ===
=== Predecessor ===
v68 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v58 #next: v517  <|@  <|@
f <@*|@fixed>@ <|@
tid v517 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v518 
=== Predecessor ===
v66 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v184|QWORD[.], v185|DWORD, v182|QWORD[.]] destination: B204 -> B206 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B205"
    from_bci -1
    to_bci -1
    predecessors "B142" 
    successors "B206" 
    xhandlers
    flags 
    probability 4580055924355621800
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v53 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2927) [bci: 100]
stamp: void
=== Inputs ===
=== Succesors ===
next: v519 
=== Usages ===
=== Predecessor ===
v55 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v519  <|@  <|@
f <@*|@fixed>@ <|@
tid v519 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v518 
=== Predecessor ===
v53 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v130|QWORD[.], v179|DWORD, v116|QWORD[.]] destination: B205 -> B206 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B206"
    from_bci -1
    to_bci -1
    predecessors "B204" "B205" "B83" 
    successors "B207" "B213" 
    xhandlers
    flags 
    probability 4599068736976613850
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a520 <|@
result v249|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a!# [C
valueDescription: a -
=== Inputs ===
merge: v518 
values: a589 a1285 a637 
=== Succesors ===
=== Usages ===
v3093 v3091 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v518 values: a589 a1285 a637  <|@  <|@
f <@~|@floating>@ <|@
tid i521 <|@
result v250|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v518 
values: i590 i329 i319 
=== Succesors ===
=== Usages ===
j1948 v195 v199 i208 a1834 v1164 i1265 v1853 i1812 v1819 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v518 values: i590 i329 i319  <|@  <|@
f <@~|@floating>@ <|@
tid a727 <|@
result v251|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a!# Ljava/lang/StringBuilder;
valueDescription: a -
=== Inputs ===
merge: v518 
values: a715 a1080 a1071 
=== Succesors ===
=== Usages ===
?725 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v518 values: a715 a1080 a1071  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v518 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v517 v519 v734 
=== Succesors ===
next: v198 
=== Usages ===
a520 i521 a727 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v517 v519 v734 #next: v198  <|@  <|@
tid ?725 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a89 
materializedValue: a727 
=== Succesors ===
=== Usages ===
?73 
=== Predecessor ===
- >@ <|@
instruction <@MaterializedObjectState|@org.graalvm.compiler.virtual.nodes.MaterializedObjectState>@ object: a89 materializedValue: a727  <|@  <|@
tid ?73 <|@
d <@d|@=== Debug Properties ===
bci: 100
code: ResolvedJavaMethodBytecode<Formatter$FormatSpecifier.justify(String)>
duringCall: false
localsSize: 6
locksSize: 0
rethrowException: false
sourceFile: Formatter.java
sourceLine: 2927
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - a89 - - - 
virtualObjectMappings: ?725 
=== Succesors ===
=== Usages ===
v1373 a1876 a1780 a1834 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - a89 - - - virtualObjectMappings: ?725  <|@  <|@
f <@~|@floating>@ <|@
tid v195 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.String.<init>(String.java:194) [bci: 18]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2927) [bci: 101]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i521 
y: i47 
=== Succesors ===
=== Usages ===
v198 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i521 y: i47  <|@  <|@
f <@~|@floating>@ <|@
tid v1932 <|@
result meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1805 v1900 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1796 <|@
result v252|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/lang/String;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Ljava/lang/String;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
j1892 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1892 <|@
result v252|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
input: v1796 
=== Succesors ===
=== Usages ===
v3165 
=== Predecessor ===
- >@ <|@
instruction <@PointerCast|@org.graalvm.compiler.hotspot.word.PointerCastNode>@ input: v1796  <|@  <|@
f <@~|@floating>@ <|@
tid v3165 <|@
result [v252|QWORD + 168] <|@
d <@d|@=== Debug Properties ===
displacement: 168
scale: Times1
stamp: void*
=== Inputs ===
base: j1892 
index: - 
=== Succesors ===
=== Usages ===
j1896 j1801 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1892 index: -  <|@  <|@
f <@*|@fixed>@ <|@
tid v198 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.<init>(String.java:194) [bci: 18]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2927) [bci: 101]
stamp: void
trueSuccessorProbability: 0.09284041465770032
=== Inputs ===
condition: v195 
=== Succesors ===
trueSuccessor: v196 
falseSuccessor: v197 
=== Usages ===
=== Predecessor ===
v518 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v195 #trueSuccessor: v196 #falseSuccessor: v197  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v249|QWORD[.], v250|DWORD, v251|QWORD[.]] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v252|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr   -1  <|@ instruction CMP v250|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09284041465770032 condition: < trueDestination: B206 -> B207 falseDestination: B206 -> B213 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B207"
    from_bci -1
    to_bci -1
    predecessors "B206" 
    successors "B208" "B209" 
    xhandlers
    flags 
    probability 4583674350779409410
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v196 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.<init>(String.java:195) [bci: 21]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2927) [bci: 101]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1028 
=== Usages ===
=== Predecessor ===
v198 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1028  <|@  <|@
f <@~|@floating>@ <|@
tid v199 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.String.<init>(String.java:195) [bci: 22]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2927) [bci: 101]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i521 
y: i26 
=== Succesors ===
=== Usages ===
v1028 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i521 y: i26  <|@  <|@
f <@*|@fixed>@ <|@
tid v1028 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.<init>(String.java:195) [bci: 22]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2927) [bci: 101]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v199 
=== Succesors ===
trueSuccessor: v1027 
falseSuccessor: v1025 
=== Usages ===
=== Predecessor ===
v196 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v199 #trueSuccessor: v1027 #falseSuccessor: v1025  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v250|DWORD, y: v250|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B207 -> B208 falseDestination: B207 -> B209 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B208"
    from_bci -1
    to_bci -1
    predecessors "B207" 
    successors "B215" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1027 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.<init>(String.java:195) [bci: 22]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2927) [bci: 101]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1369 
=== Usages ===
=== Predecessor ===
v1028 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1369  <|@  <|@
f <@~|@floating>@ <|@
tid i1370 <|@
result int[-234003|0xfffffffffffc6ded] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -234003
stableDimension: 0
stamp: i32 [-234003] ⇊00000000fffc6ded ⇈00000000fffc6ded
stampKind: i32
value: int[-234003|0xfffffffffffc6ded]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1371 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1369 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1368 
=== Predecessor ===
v1027 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-234003|0xfffffffffffc6ded]] destination: B208 -> B215 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B209"
    from_bci -1
    to_bci -1
    predecessors "B207" 
    successors "B210" "B211" 
    xhandlers
    flags 
    probability 4583674350779409410
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1025 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.<init>(String.java:195) [bci: 22]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2927) [bci: 101]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1769 
=== Usages ===
=== Predecessor ===
v1028 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j1769  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1769 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j1784 
=== Usages ===
v3150 v3151 
=== Predecessor ===
v1025 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j1784  <|@  <|@
f <@~|@floating>@ <|@
tid v3150 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j1769 
index: - 
=== Succesors ===
=== Usages ===
j1784 v1786 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1769 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1784 <|@
result v253|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v3150 
=== Succesors ===
next: j1785 
=== Usages ===
j1930 j1790 v3177 
=== Predecessor ===
j1769 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3150 #next: j1785  <|@  <|@
f <@~|@floating>@ <|@
tid v3151 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j1769 
index: - 
=== Succesors ===
=== Usages ===
j1785 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1769 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1785 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v3151 
=== Succesors ===
next: v1777 
=== Usages ===
v1774 
=== Predecessor ===
j1784 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3151 #next: v1777  <|@  <|@
f <@~|@floating>@ <|@
tid j1930 <|@
result v254|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1784 
y: j1919 
=== Succesors ===
=== Usages ===
v1774 v1786 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1784 y: j1919  <|@  <|@
f <@~|@floating>@ <|@
tid v1774 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1785 
y: j1930 
=== Succesors ===
=== Usages ===
v1777 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j1785 y: j1930  <|@  <|@
f <@*|@fixed>@ <|@
tid v1777 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v1774 
=== Succesors ===
trueSuccessor: v1775 
falseSuccessor: v1776 
=== Usages ===
=== Predecessor ===
j1785 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1774 #trueSuccessor: v1775 #falseSuccessor: v1776  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v253|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v254|QWORD = LEA [v253|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v254|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B209 -> B210 falseDestination: B209 -> B211 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B210"
    from_bci -1
    to_bci -1
    predecessors "B209" 
    successors "B212" 
    xhandlers
    flags 
    probability 4553766586441631668
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1775 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a1780 
=== Usages ===
=== Predecessor ===
v1777 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1780  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1780 <|@
result v255|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?73 
arguments: v1391 i271 i47 
=== Succesors ===
next: j1781 
=== Usages ===
j1781 
=== Predecessor ===
v1775 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?73 arguments: v1391 i271 i47 #next: j1781  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1781 <|@
result v255|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1780 
=== Succesors ===
next: v1791 
=== Usages ===
j1790 
=== Predecessor ===
a1780 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a1780 #next: v1791  <|@  <|@
f <@*|@fixed>@ <|@
tid v1791 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1788 
=== Predecessor ===
j1781 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v21|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FormatSpecifier.justify(Formatter.java:2927) [bci: 100]
locals: - - v251|QWORD[.] - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:100] <|@ <|@
      nr   -1  <|@ instruction v255|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v255|QWORD[.]] destination: B210 -> B212 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B211"
    from_bci -1
    to_bci -1
    predecessors "B209" 
    successors "B212" 
    xhandlers
    flags 
    probability 4583594179485699555
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1776 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1786 
=== Usages ===
=== Predecessor ===
v1777 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1786  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1786 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3150 
value: j1930 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1783 
=== Usages ===
=== Predecessor ===
v1776 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3150 value: j1930 stateAfter: - lastLocationAccess: - #next: v1783  <|@  <|@
f <@~|@floating>@ <|@
tid v3177 <|@
result [v253|QWORD + 216] <|@
d <@d|@=== Debug Properties ===
displacement: 216
scale: Times1
stamp: void*
=== Inputs ===
base: j1784 
index: - 
=== Succesors ===
=== Usages ===
v1783 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1784 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1783 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v3177 
=== Succesors ===
next: v1789 
=== Usages ===
=== Predecessor ===
v1786 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v3177 #next: v1789  <|@  <|@
f <@*|@fixed>@ <|@
tid v1789 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1788 
=== Predecessor ===
v1783 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v254|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v253|QWORD + 216] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v253|QWORD] destination: B211 -> B212 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B212"
    from_bci -1
    to_bci -1
    predecessors "B211" "B210" 
    successors 
    xhandlers
    flags 
    probability 4583674350779409410
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1790 <|@
result v256|QWORD[*] <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1788 
values: j1784 j1781 
=== Succesors ===
=== Usages ===
v3153 v3152 a1084 v3178 v3179 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1788 values: j1784 j1781  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1788 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1789 v1791 
=== Succesors ===
next: a1084 
=== Usages ===
j1790 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1789 v1791 #next: a1084  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1084 <|@
result v257|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j1790 
=== Succesors ===
next: j1801 
=== Usages ===
a1090 
=== Predecessor ===
v1788 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j1790 #next: j1801  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1801 <|@
result v258|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v3165 
=== Succesors ===
next: v1802 
=== Usages ===
v1802 
=== Predecessor ===
a1084 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3165 #next: v1802  <|@  <|@
f <@~|@floating>@ <|@
tid v3152 <|@
result [v256|QWORD[*]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1790 
index: - 
=== Succesors ===
=== Usages ===
v1802 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1790 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1802 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3152 
value: j1801 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1805 
=== Usages ===
=== Predecessor ===
j1801 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3152 value: j1801 stateAfter: - lastLocationAccess: - #next: v1805  <|@  <|@
f <@~|@floating>@ <|@
tid v3153 <|@
result [v256|QWORD[*] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j1790 
index: - 
=== Succesors ===
=== Usages ===
v1805 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1790 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1805 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3153 
value: v1932 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1809 
=== Usages ===
=== Predecessor ===
v1802 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3153 value: v1932 stateAfter: - lastLocationAccess: - #next: v1809  <|@  <|@
f <@~|@floating>@ <|@
tid v3178 <|@
result [v256|QWORD[*] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j1790 
index: - 
=== Succesors ===
=== Usages ===
v1809 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1790 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a1103 <|@
result NarrowOop[char[0]{}] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: char[0]{}
stableDimension: 1
stamp: n!# [C
stampKind: n -
value: NarrowOop[char[0]{}]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1809 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1809 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3178 
value: a1103 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1811 
=== Usages ===
=== Predecessor ===
v1805 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3178 value: a1103 stateAfter: - lastLocationAccess: - #next: v1811  <|@  <|@
f <@~|@floating>@ <|@
tid v3179 <|@
result [v256|QWORD[*] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j1790 
index: - 
=== Succesors ===
=== Usages ===
v1811 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1790 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1811 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3179 
value: i26 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a1090 
=== Usages ===
=== Predecessor ===
v1809 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3179 value: i26 stateAfter: - lastLocationAccess: - #next: a1090  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1090 <|@
result v257|QWORD[.] <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a1084 
=== Succesors ===
next: v1091 
=== Usages ===
v242 
=== Predecessor ===
v1811 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a1084 #next: v1091  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1091 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v242 
=== Usages ===
=== Predecessor ===
a1090 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v242  <|@  <|@
f <@*|@fixed>@ <|@
tid v242 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
result: a1090 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1091 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a1090 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v256|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v257|QWORD[.] = MOVE v256|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v258|QWORD = MOV [v252|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v256|QWORD[*]], y: v258|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v256|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV [v256|QWORD[*] + 12] y: -559030611 size: DWORD c: NarrowOop[char[0]{}] <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v256|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v257|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B213"
    from_bci -1
    to_bci -1
    predecessors "B206" 
    successors "B214" "B216" 
    xhandlers
    flags 
    probability 4598567666390927258
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v197 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.<init>(String.java:204) [bci: 50]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2927) [bci: 101]
stamp: void
=== Inputs ===
=== Succesors ===
next: i3067 
=== Usages ===
=== Predecessor ===
v198 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i3067  <|@  <|@
f <@~|@floating>@ <|@
tid v3091 <|@
result [v249|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a520 
index: - 
=== Succesors ===
=== Usages ===
i3067 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a520 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i3067 <|@
result v259|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.lang.String.<init>(String.java:204) [bci: 52]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2927) [bci: 101]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v3091 
=== Succesors ===
next: v1032 
=== Usages ===
i208 i1265 v1164 
=== Predecessor ===
v197 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3091 #next: v1032  <|@  <|@
f <@~|@floating>@ <|@
tid i208 <|@
result v260|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at java.lang.String.<init>(String.java:204) [bci: 54]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2927) [bci: 101]
stamp: i32
=== Inputs ===
x: i3067 
y: i521 
=== Succesors ===
=== Usages ===
v209 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i3067 y: i521  <|@  <|@
f <@~|@floating>@ <|@
tid v209 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.String.<init>(String.java:204) [bci: 55]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2927) [bci: 101]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i208 
y: i26 
=== Succesors ===
=== Usages ===
v1032 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i208 y: i26  <|@  <|@
f <@*|@fixed>@ <|@
tid v1032 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.<init>(String.java:204) [bci: 55]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2927) [bci: 101]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v209 
=== Succesors ===
trueSuccessor: v1031 
falseSuccessor: v1029 
=== Usages ===
=== Predecessor ===
i3067 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v209 #trueSuccessor: v1031 #falseSuccessor: v1029  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v259|DWORD = MOV [v249|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v260|DWORD = SUB (x: v259|DWORD, ~y: v250|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v260|DWORD, y: v260|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B213 -> B214 falseDestination: B213 -> B216 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B214"
    from_bci -1
    to_bci -1
    predecessors "B213" 
    successors "B215" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1031 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.<init>(String.java:204) [bci: 55]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2927) [bci: 101]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1374 
=== Usages ===
=== Predecessor ===
v1032 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1374  <|@  <|@
f <@~|@floating>@ <|@
tid i1375 <|@
result int[-235027|0xfffffffffffc69ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -235027
stableDimension: 0
stamp: i32 [-235027] ⇊00000000fffc69ed ⇈00000000fffc69ed
stampKind: i32
value: int[-235027|0xfffffffffffc69ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1371 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1374 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1368 
=== Predecessor ===
v1031 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-235027|0xfffffffffffc69ed]] destination: B214 -> B215 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B215"
    from_bci -1
    to_bci -1
    predecessors "B208" "B214" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1371 <|@
result v261|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-235027 - -234003] ⇊00000000fffc69ed ⇈00000000fffc6ded
valueDescription: i32
=== Inputs ===
merge: v1368 
values: i1370 i1375 
=== Succesors ===
=== Usages ===
v1373 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1368 values: i1370 i1375  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1368 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1369 v1374 
=== Succesors ===
next: v1373 
=== Usages ===
i1371 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1369 v1374 #next: v1373  <|@  <|@
f <@*|@fixed>@ <|@
tid v1373 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?73 
actionAndReason: i1371 
speculation: a1332 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1368 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?73 actionAndReason: i1371 speculation: a1332  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v261|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v261|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FormatSpecifier.justify(Formatter.java:2927) [bci: 100]
locals: - - v251|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:100] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B216"
    from_bci -1
    to_bci -1
    predecessors "B213" 
    successors "B217" "B220" 
    xhandlers
    flags 
    probability 4598567666390927258
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1029 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.<init>(String.java:204) [bci: 55]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2927) [bci: 101]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1814 
=== Usages ===
=== Predecessor ===
v1032 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j1814  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1814 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:772) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:319) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2927) [bci: 101]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j1850 
=== Usages ===
v3154 v3155 
=== Predecessor ===
v1029 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j1850  <|@  <|@
f <@~|@floating>@ <|@
tid v3154 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j1814 
index: - 
=== Succesors ===
=== Usages ===
j1850 v1852 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1814 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1850 <|@
result v262|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:245) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:320) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2927) [bci: 101]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v3154 
=== Succesors ===
next: j1851 
=== Usages ===
j1818 v3156 v3157 a1833 v3162 v3158 v3159 v3160 v3161 
=== Predecessor ===
j1814 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3154 #next: j1851  <|@  <|@
f <@~|@floating>@ <|@
tid v3155 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j1814 
index: - 
=== Succesors ===
=== Usages ===
j1851 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1814 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1851 <|@
result v263|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:249) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:321) [bci: 25]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2927) [bci: 101]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v3155 
=== Succesors ===
next: v1822 
=== Usages ===
v1823 
=== Predecessor ===
j1850 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3155 #next: v1822  <|@  <|@
f <@~|@floating>@ <|@
tid v1819 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.core.common.calc.UnsignedMath.belowThan(int, int) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 50]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2927) [bci: 101]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i521 
y: i1489 
=== Succesors ===
=== Usages ===
v1822 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i521 y: i1489  <|@  <|@
f <@*|@fixed>@ <|@
tid v1822 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 64]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2927) [bci: 101]
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v1819 
=== Succesors ===
trueSuccessor: v1821 
falseSuccessor: v1820 
=== Usages ===
=== Predecessor ===
j1851 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1819 #trueSuccessor: v1821 #falseSuccessor: v1820  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v262|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v263|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v250|DWORD y: 16777215 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B216 -> B217 falseDestination: B216 -> B220 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B217"
    from_bci -1
    to_bci -1
    predecessors "B216" 
    successors "B218" "B219" 
    xhandlers
    flags 
    probability 4597980903941973833
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1821 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 67]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2927) [bci: 101]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1829 
=== Usages ===
=== Predecessor ===
v1822 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1829  <|@  <|@
f <@~|@floating>@ <|@
tid i1812 <|@
result v264|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 8]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2927) [bci: 101]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i521 
y: i47 
=== Succesors ===
=== Usages ===
i1841 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i521 y: i47  <|@  <|@
f <@~|@floating>@ <|@
tid i1841 <|@
result v265|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2927) [bci: 101]
stamp: i32 [-2147483647 - 2147483647] ⇊0000000000000001
=== Inputs ===
x: i1812 
y: i1512 
=== Succesors ===
=== Usages ===
i1813 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1812 y: i1512  <|@  <|@
f <@~|@floating>@ <|@
tid i1813 <|@
result v266|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:604) [bci: 30]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2927) [bci: 101]
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i1841 
y: i1482 
=== Succesors ===
=== Usages ===
j1817 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i1841 y: i1482  <|@  <|@
f <@~|@floating>@ <|@
tid j1817 <|@
result v267|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2927) [bci: 101]
resultBits: 64
stamp: i64 [-2147483648 - 2147483640] ⇈fffffffffffffff8
=== Inputs ===
value: i1813 
=== Succesors ===
=== Usages ===
j1818 v3158 v3159 v3160 v3161 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i1813  <|@  <|@
f <@~|@floating>@ <|@
tid j1818 <|@
result v268|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2927) [bci: 101]
stamp: i64
=== Inputs ===
x: j1817 
y: j1850 
=== Succesors ===
=== Usages ===
v1823 v1852 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1817 y: j1850  <|@  <|@
f <@~|@floating>@ <|@
tid v1823 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 83]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2927) [bci: 101]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1851 
y: j1818 
=== Succesors ===
=== Usages ===
v1829 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j1851 y: j1818  <|@  <|@
f <@*|@fixed>@ <|@
tid v1829 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 89]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2927) [bci: 101]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v1823 
=== Succesors ===
trueSuccessor: v1828 
falseSuccessor: v1827 
=== Usages ===
=== Predecessor ===
v1821 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1823 #trueSuccessor: v1828 #falseSuccessor: v1827  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v264|DWORD = SHL v250|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v265|DWORD = LEA [v264|DWORD + 23] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v266|DWORD = AND v265|DWORD y: -8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v267|QWORD = MOVSXD v266|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v268|QWORD = ADD (x: v267|QWORD, y: v262|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v268|QWORD, y: v263|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B217 -> B218 falseDestination: B217 -> B219 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B218"
    from_bci -1
    to_bci -1
    predecessors "B217" 
    successors "B221" 
    xhandlers
    flags 
    probability 4567786668063233035
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1828 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2927) [bci: 101]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1826 
=== Usages ===
=== Predecessor ===
v1829 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1826  <|@  <|@
f <@*|@fixed>@ <|@
tid v1826 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2927) [bci: 101]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1825 
=== Predecessor ===
v1828 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B218 -> B221 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B219"
    from_bci -1
    to_bci -1
    predecessors "B217" 
    successors "B222" 
    xhandlers
    flags 
    probability 4597892775105459449
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1827 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 92]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2927) [bci: 101]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1852 
=== Usages ===
=== Predecessor ===
v1829 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1852  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1852 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:257) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 96]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2927) [bci: 101]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3154 
value: j1818 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1843 
=== Usages ===
=== Predecessor ===
v1827 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3154 value: j1818 stateAfter: - lastLocationAccess: - #next: v1843  <|@  <|@
f <@~|@floating>@ <|@
tid v3158 <|@
result [v267|QWORD + v262|QWORD * 1 + 192] <|@
d <@d|@=== Debug Properties ===
displacement: 192
scale: Times1
stamp: void*
=== Inputs ===
base: j1817 
index: j1850 
=== Succesors ===
=== Usages ===
v1843 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1817 index: j1850  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1843 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2927) [bci: 101]
stamp: void
=== Inputs ===
address: v3158 
=== Succesors ===
next: v1845 
=== Usages ===
=== Predecessor ===
v1852 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v3158 #next: v1845  <|@  <|@
f <@~|@floating>@ <|@
tid v3159 <|@
result [v267|QWORD + v262|QWORD * 1 + 256] <|@
d <@d|@=== Debug Properties ===
displacement: 256
scale: Times1
stamp: void*
=== Inputs ===
base: j1817 
index: j1850 
=== Succesors ===
=== Usages ===
v1845 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1817 index: j1850  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1845 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2927) [bci: 101]
stamp: void
=== Inputs ===
address: v3159 
=== Succesors ===
next: v1847 
=== Usages ===
=== Predecessor ===
v1843 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v3159 #next: v1847  <|@  <|@
f <@~|@floating>@ <|@
tid v3160 <|@
result [v267|QWORD + v262|QWORD * 1 + 320] <|@
d <@d|@=== Debug Properties ===
displacement: 320
scale: Times1
stamp: void*
=== Inputs ===
base: j1817 
index: j1850 
=== Succesors ===
=== Usages ===
v1847 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1817 index: j1850  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1847 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2927) [bci: 101]
stamp: void
=== Inputs ===
address: v3160 
=== Succesors ===
next: v1849 
=== Usages ===
=== Predecessor ===
v1845 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v3160 #next: v1849  <|@  <|@
f <@~|@floating>@ <|@
tid v3161 <|@
result [v267|QWORD + v262|QWORD * 1 + 384] <|@
d <@d|@=== Debug Properties ===
displacement: 384
scale: Times1
stamp: void*
=== Inputs ===
base: j1817 
index: j1850 
=== Succesors ===
=== Usages ===
v1849 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1817 index: j1850  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1849 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2927) [bci: 101]
stamp: void
=== Inputs ===
address: v3161 
=== Succesors ===
next: v1853 
=== Usages ===
=== Predecessor ===
v1847 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v3161 #next: v1853  <|@  <|@
f <@~|@floating>@ <|@
tid v3156 <|@
result [v262|QWORD + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j1850 
index: - 
=== Succesors ===
=== Usages ===
v1853 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1850 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1853 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:549) [bci: 12]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2927) [bci: 101]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3156 
value: i521 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1854 
=== Usages ===
=== Predecessor ===
v1849 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3156 value: i521 stateAfter: - lastLocationAccess: - #next: v1854  <|@  <|@
f <@~|@floating>@ <|@
tid v3157 <|@
result [v262|QWORD] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1850 
index: - 
=== Succesors ===
=== Usages ===
v1854 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1850 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1854 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:469) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2927) [bci: 101]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3157 
value: j1425 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1857 
=== Usages ===
=== Predecessor ===
v1853 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3157 value: j1425 stateAfter: - lastLocationAccess: - #next: v1857  <|@  <|@
f <@~|@floating>@ <|@
tid v3162 <|@
result [v262|QWORD + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j1850 
index: - 
=== Succesors ===
=== Usages ===
v1857 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1850 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1857 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2927) [bci: 101]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3162 
value: v1913 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1832 
=== Usages ===
=== Predecessor ===
v1854 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3162 value: v1913 stateAfter: - lastLocationAccess: - #next: v1832  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1832 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.MembarNode.memoryBarrier(int, LocationIdentity) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:560) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2927) [bci: 101]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1833 
=== Usages ===
=== Predecessor ===
v1857 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a1833  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1833 <|@
result v269|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:561) [bci: 71]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2927) [bci: 101]
stamp: a! -
trackedPointer: true
=== Inputs ===
input: j1850 
=== Succesors ===
next: v1835 
=== Usages ===
a1838 
=== Predecessor ===
v1832 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j1850 #next: v1835  <|@  <|@
f <@*|@fixed>@ <|@
tid v1835 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2927) [bci: 101]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1836 
=== Predecessor ===
a1833 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v268|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v267|QWORD + v262|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v267|QWORD + v262|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v267|QWORD + v262|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v267|QWORD + v262|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v262|QWORD + 12], y: v250|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v262|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v262|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v269|QWORD[.] = MOVE v262|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v269|QWORD[.]] destination: B219 -> B222 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B220"
    from_bci -1
    to_bci -1
    predecessors "B216" 
    successors "B221" 
    xhandlers
    flags 
    probability 4583490895765258075
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1820 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2927) [bci: 101]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1824 
=== Usages ===
=== Predecessor ===
v1822 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1824  <|@  <|@
f <@*|@fixed>@ <|@
tid v1824 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2927) [bci: 101]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1825 
=== Predecessor ===
v1820 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B220 -> B221 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B221"
    from_bci -1
    to_bci -1
    predecessors "B220" "B218" 
    successors "B222" 
    xhandlers
    flags 
    probability 4584195926457373148
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1825 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2927) [bci: 101]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1824 v1826 
=== Succesors ===
next: a1834 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1824 v1826 #next: a1834  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1834 <|@
result v270|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.newArray(ForeignCallDescriptor, KlassPointer, int, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 155]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2927) [bci: 101]
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?73 
arguments: v1424 i521 i26 
=== Succesors ===
next: v1837 
=== Usages ===
a1838 
=== Predecessor ===
v1825 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?73 arguments: v1424 i521 i26 #next: v1837  <|@  <|@
f <@*|@fixed>@ <|@
tid v1837 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2927) [bci: 101]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1836 
=== Predecessor ===
a1834 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v19|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v250|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FormatSpecifier.justify(Formatter.java:2927) [bci: 100]
locals: - - v251|QWORD[.] - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:100] <|@ <|@
      nr   -1  <|@ instruction v270|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v270|QWORD[.]] destination: B221 -> B222 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B222"
    from_bci -1
    to_bci -1
    predecessors "B219" "B221" 
    successors "B223" "B224" 
    xhandlers
    flags 
    probability 4598567666390927258
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a1838 <|@
result v271|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2927) [bci: 101]
stamp: a! -
valueDescription: a -
=== Inputs ===
merge: v1836 
values: a1833 a1834 
=== Succesors ===
=== Usages ===
v3184 a1277 v3097 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1836 values: a1833 a1834  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1836 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2927) [bci: 101]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1835 v1837 
=== Succesors ===
next: v2611 
=== Usages ===
a1838 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1835 v1837 #next: v2611  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2611 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v2102 
=== Usages ===
j2612 j2614 
=== Predecessor ===
v1836 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v2102  <|@  <|@
f <@~|@floating>@ <|@
tid v1164 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Math.min(Math.java:1336) [bci: 2]
at com.oracle.graal.enterprise.T.c.b(stripped:192) [bci: 4]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:102) [bci: 9]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2927) [bci: 101]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3067 
y: i521 
=== Succesors ===
=== Usages ===
i1265 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i3067 y: i521  <|@  <|@
f <@~|@floating>@ <|@
tid i1265 <|@
result v272|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
condition: v1164 
trueValue: i3067 
falseValue: i521 
=== Succesors ===
=== Usages ===
j1949 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v1164 trueValue: i3067 falseValue: i521  <|@  <|@
f <@~|@floating>@ <|@
tid j1949 <|@
result v273|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i1265 
=== Succesors ===
=== Usages ===
j2669 v3184 j1953 v2099 v2484 j2655 j2660 j2663 j2666 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i1265  <|@  <|@
f <@~|@floating>@ <|@
tid v2099 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1949 
y: j1425 
=== Succesors ===
=== Usages ===
v2102 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1949 y: j1425  <|@  <|@
f <@*|@fixed>@ <|@
tid v2102 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v2099 
=== Succesors ===
trueSuccessor: v2100 
falseSuccessor: v2101 
=== Usages ===
=== Predecessor ===
v2611 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2099 #trueSuccessor: v2100 #falseSuccessor: v2101  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v271|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v250|DWORD, y: v259|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v272|DWORD = CMOVE (falseValue: v250|DWORD, ~trueValue: v259|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction v273|QWORD = MOVSXD v272|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v273|QWORD y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B222 -> B223 falseDestination: B222 -> B224 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B223"
    from_bci -1
    to_bci -1
    predecessors "B222" 
    successors "B241" 
    xhandlers
    flags 
    probability 4594064066763556762
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2100 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2118 
=== Usages ===
=== Predecessor ===
v2102 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2118  <|@  <|@
f <@*|@fixed>@ <|@
tid v2118 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2119 
=== Predecessor ===
v2100 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B223 -> B241 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B224"
    from_bci -1
    to_bci -1
    predecessors "B222" 
    successors "B225" "B226" 
    xhandlers
    flags 
    probability 4594064066763556762
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2101 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2105 
=== Usages ===
=== Predecessor ===
v2102 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2105  <|@  <|@
f <@~|@floating>@ <|@
tid v3097 <|@
result [v271|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1838 
index: - 
=== Succesors ===
=== Usages ===
j2614 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1838 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j2614 <|@
result v274|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v2611 
address: v3097 
=== Succesors ===
=== Usages ===
v3202 v3204 v3206 v3208 v3210 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v2611 address: v3097  <|@  <|@
f <@~|@floating>@ <|@
tid v3093 <|@
result [v249|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a520 
index: - 
=== Succesors ===
=== Usages ===
j2612 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a520 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j2612 <|@
result v275|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v2611 
address: v3093 
=== Succesors ===
=== Usages ===
v3203 v3205 v3207 v3209 v3211 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v2611 address: v3093  <|@  <|@
f <@~|@floating>@ <|@
tid j2655 <|@
result v276|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483664 - 2147483631]
=== Inputs ===
x: j1949 
y: j2537 
=== Succesors ===
=== Usages ===
v2656 v2658 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1949 y: j2537  <|@  <|@
f <@~|@floating>@ <|@
tid v2656 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2655 
y: j1034 
=== Succesors ===
=== Usages ===
v2105 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2655 y: j1034  <|@  <|@
f <@*|@fixed>@ <|@
tid v2105 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v2656 
=== Succesors ===
trueSuccessor: v2103 
falseSuccessor: v2104 
=== Usages ===
=== Predecessor ===
v2101 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2656 #trueSuccessor: v2103 #falseSuccessor: v2104  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v274|QWORD[.] = LEA [v271|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v275|QWORD[.] = LEA [v249|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v276|QWORD = LEA [v273|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v276|QWORD, y: v276|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B224 -> B225 falseDestination: B224 -> B226 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B225"
    from_bci -1
    to_bci -1
    predecessors "B224" 
    successors "B229" 
    xhandlers
    flags 
    probability 4592008490372696935
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2103 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2114 
=== Usages ===
=== Predecessor ===
v2105 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2114  <|@  <|@
f <@*|@fixed>@ <|@
tid v2114 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2115 
=== Predecessor ===
v2103 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B225 -> B229 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B226"
    from_bci -1
    to_bci -1
    predecessors "B224" 
    successors "B227" 
    xhandlers
    flags 
    probability 4585056867508815770
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2104 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2106 
=== Usages ===
=== Predecessor ===
v2105 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2106  <|@  <|@
f <@*|@fixed>@ <|@
tid v2106 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2107 
=== Predecessor ===
v2104 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B226 -> B227 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B227"
    from_bci -1
    to_bci -1
    predecessors "B226" "B265" 
    successors "B228" "B265" 
    xhandlers
    flags "llh" 
    loop_index 8
    loop_depth 1
    probability 4594064066763556762
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j2647 <|@
result v277|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2107 
values: j1034 j2654 
=== Succesors ===
=== Usages ===
v3211 j2654 v3210 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2107 values: j1034 j2654  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2107 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v2106 
=== Succesors ===
next: v3068 
=== Usages ===
v3068 v2110 v2111 j2647 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v2106 #next: v3068  <|@  <|@
f <@~|@floating>@ <|@
tid v3211 <|@
result [v275|QWORD[.] + v277|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j2612 
index: j2647 
=== Succesors ===
=== Usages ===
v3068 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2612 index: j2647  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3068 <|@
result v278|V256_WORD <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16>
=== Inputs ===
stateBefore: - 
guard: v2107 
address: v3211 
=== Succesors ===
next: v2999 
=== Usages ===
v2999 
=== Predecessor ===
v2107 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v2107 address: v3211 #next: v2999  <|@  <|@
f <@~|@floating>@ <|@
tid v3210 <|@
result [v274|QWORD[.] + v277|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j2614 
index: j2647 
=== Succesors ===
=== Usages ===
v2999 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2614 index: j2647  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2999 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3210 
value: v3068 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2113 
=== Usages ===
=== Predecessor ===
v3068 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3210 value: v3068 stateAfter: - lastLocationAccess: - #next: v2113  <|@  <|@
f <@~|@floating>@ <|@
tid j2654 <|@
result v279|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j2647 
y: j739 
=== Succesors ===
=== Usages ===
j2639 j2647 v2658 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2647 y: j739  <|@  <|@
f <@~|@floating>@ <|@
tid v2658 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2655 
y: j2654 
=== Succesors ===
=== Usages ===
v2113 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2655 y: j2654  <|@  <|@
f <@*|@fixed>@ <|@
tid v2113 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v2658 
=== Succesors ===
trueSuccessor: v2110 
falseSuccessor: v2112 
=== Usages ===
=== Predecessor ===
v2999 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2658 #trueSuccessor: v2110 #falseSuccessor: v2112  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v277|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v278|V256_WORD = H [v275|QWORD[.] + v277|QWORD * 2] nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v274|QWORD[.] + v277|QWORD * 2], input: v278|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v279|QWORD = LEA [v277|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v279|QWORD, y: v276|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B227 -> B228 falseDestination: B227 -> B265 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B228"
    from_bci -1
    to_bci -1
    predecessors "B227" 
    successors "B229" 
    xhandlers
    flags 
    probability 4585056867508815770
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2110 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v2107 
=== Succesors ===
next: v2116 
=== Usages ===
=== Predecessor ===
v2113 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v2107 #next: v2116  <|@  <|@
f <@*|@fixed>@ <|@
tid v2116 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2115 
=== Predecessor ===
v2110 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v279|QWORD] destination: B228 -> B229 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B229"
    from_bci -1
    to_bci -1
    predecessors "B225" "B228" 
    successors "B230" "B231" 
    xhandlers
    flags 
    probability 4594064066763556762
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j2639 <|@
result v280|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2115 
values: j1034 j2654 
=== Succesors ===
=== Usages ===
v3209 j2646 j2631 v2661 v3208 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2115 values: j1034 j2654  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2115 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2114 v2116 
=== Succesors ===
next: v2137 
=== Usages ===
j2639 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2114 v2116 #next: v2137  <|@  <|@
f <@~|@floating>@ <|@
tid j2660 <|@
result v281|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483656 - 2147483639]
=== Inputs ===
x: j1949 
y: j2543 
=== Succesors ===
=== Usages ===
v2661 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1949 y: j2543  <|@  <|@
f <@~|@floating>@ <|@
tid v2661 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2660 
y: j2639 
=== Succesors ===
=== Usages ===
v2137 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2660 y: j2639  <|@  <|@
f <@*|@fixed>@ <|@
tid v2137 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v2661 
=== Succesors ===
trueSuccessor: v2136 
falseSuccessor: v2135 
=== Usages ===
=== Predecessor ===
v2115 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2661 #trueSuccessor: v2136 #falseSuccessor: v2135  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v280|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v281|QWORD = LEA [v273|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v280|QWORD, y: v281|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B229 -> B230 falseDestination: B229 -> B231 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B230"
    from_bci -1
    to_bci -1
    predecessors "B229" 
    successors "B232" 
    xhandlers
    flags 
    probability 4585056867508815770
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2136 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2140 
=== Usages ===
=== Predecessor ===
v2137 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2140  <|@  <|@
f <@*|@fixed>@ <|@
tid v2140 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2126 
=== Predecessor ===
v2136 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v280|QWORD] destination: B230 -> B232 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B231"
    from_bci -1
    to_bci -1
    predecessors "B229" 
    successors "B232" 
    xhandlers
    flags 
    probability 4592008490372696935
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2135 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3069 
=== Usages ===
v3069 
=== Predecessor ===
v2137 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3069  <|@  <|@
f <@~|@floating>@ <|@
tid v3209 <|@
result [v275|QWORD[.] + v280|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j2612 
index: j2639 
=== Succesors ===
=== Usages ===
v3069 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2612 index: j2639  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3069 <|@
result v282|V128_WORD <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16,i16,i16,i16,i16,i16,i16>
=== Inputs ===
stateBefore: - 
guard: v2135 
address: v3209 
=== Succesors ===
next: v2997 
=== Usages ===
v2997 
=== Predecessor ===
v2135 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v2135 address: v3209 #next: v2997  <|@  <|@
f <@~|@floating>@ <|@
tid v3208 <|@
result [v274|QWORD[.] + v280|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j2614 
index: j2639 
=== Succesors ===
=== Usages ===
v2997 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2614 index: j2639  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2997 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3208 
value: v3069 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2125 
=== Usages ===
=== Predecessor ===
v3069 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3208 value: v3069 stateAfter: - lastLocationAccess: - #next: v2125  <|@  <|@
f <@~|@floating>@ <|@
tid j2646 <|@
result v283|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j2639 
y: j1432 
=== Succesors ===
=== Usages ===
j2631 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2639 y: j1432  <|@  <|@
f <@*|@fixed>@ <|@
tid v2125 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2126 
=== Predecessor ===
v2997 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v282|V128_WORD = H [v275|QWORD[.] + v280|QWORD * 2] nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v274|QWORD[.] + v280|QWORD * 2], input: v282|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v283|QWORD = LEA [v280|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v283|QWORD] destination: B231 -> B232 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B232"
    from_bci -1
    to_bci -1
    predecessors "B231" "B230" 
    successors "B233" "B234" 
    xhandlers
    flags 
    probability 4594064066763556762
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j2631 <|@
result v284|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2126 
values: j2646 j2639 
=== Succesors ===
=== Usages ===
v3207 j2638 j2623 v2664 v3206 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2126 values: j2646 j2639  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2126 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2125 v2140 
=== Succesors ===
next: v2143 
=== Usages ===
j2631 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2125 v2140 #next: v2143  <|@  <|@
f <@~|@floating>@ <|@
tid j2663 <|@
result v285|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483652 - 2147483643]
=== Inputs ===
x: j1949 
y: j2547 
=== Succesors ===
=== Usages ===
v2664 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1949 y: j2547  <|@  <|@
f <@~|@floating>@ <|@
tid v2664 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2663 
y: j2631 
=== Succesors ===
=== Usages ===
v2143 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2663 y: j2631  <|@  <|@
f <@*|@fixed>@ <|@
tid v2143 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v2664 
=== Succesors ===
trueSuccessor: v2142 
falseSuccessor: v2141 
=== Usages ===
=== Predecessor ===
v2126 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2664 #trueSuccessor: v2142 #falseSuccessor: v2141  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v284|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v285|QWORD = LEA [v273|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v284|QWORD, y: v285|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B232 -> B233 falseDestination: B232 -> B234 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B233"
    from_bci -1
    to_bci -1
    predecessors "B232" 
    successors "B235" 
    xhandlers
    flags 
    probability 4585056867508815770
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2142 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2146 
=== Usages ===
=== Predecessor ===
v2143 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2146  <|@  <|@
f <@*|@fixed>@ <|@
tid v2146 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2129 
=== Predecessor ===
v2142 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v284|QWORD] destination: B233 -> B235 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B234"
    from_bci -1
    to_bci -1
    predecessors "B232" 
    successors "B235" 
    xhandlers
    flags 
    probability 4592008490372696935
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2141 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3070 
=== Usages ===
v3070 
=== Predecessor ===
v2143 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3070  <|@  <|@
f <@~|@floating>@ <|@
tid v3207 <|@
result [v275|QWORD[.] + v284|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j2612 
index: j2631 
=== Succesors ===
=== Usages ===
v3070 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2612 index: j2631  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3070 <|@
result v286|V64_WORD <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16,i16,i16>
=== Inputs ===
stateBefore: - 
guard: v2141 
address: v3207 
=== Succesors ===
next: v2995 
=== Usages ===
v2995 
=== Predecessor ===
v2141 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v2141 address: v3207 #next: v2995  <|@  <|@
f <@~|@floating>@ <|@
tid v3206 <|@
result [v274|QWORD[.] + v284|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j2614 
index: j2631 
=== Succesors ===
=== Usages ===
v2995 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2614 index: j2631  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2995 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3206 
value: v3070 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2128 
=== Usages ===
=== Predecessor ===
v3070 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3206 value: v3070 stateAfter: - lastLocationAccess: - #next: v2128  <|@  <|@
f <@~|@floating>@ <|@
tid j2638 <|@
result v287|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j2631 
y: j2519 
=== Succesors ===
=== Usages ===
j2623 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2631 y: j2519  <|@  <|@
f <@*|@fixed>@ <|@
tid v2128 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2129 
=== Predecessor ===
v2995 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v286|V64_WORD = H [v275|QWORD[.] + v284|QWORD * 2] nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction J (address: [v274|QWORD[.] + v284|QWORD * 2], input: v286|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v287|QWORD = LEA [v284|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v287|QWORD] destination: B234 -> B235 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B235"
    from_bci -1
    to_bci -1
    predecessors "B234" "B233" 
    successors "B236" "B237" 
    xhandlers
    flags 
    probability 4594064066763556762
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j2623 <|@
result v288|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2129 
values: j2638 j2631 
=== Succesors ===
=== Usages ===
v3205 j2630 j2615 v2667 v3204 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2129 values: j2638 j2631  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2129 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2128 v2146 
=== Succesors ===
next: v2149 
=== Usages ===
j2623 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2128 v2146 #next: v2149  <|@  <|@
f <@~|@floating>@ <|@
tid j2666 <|@
result v289|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483650 - 2147483645]
=== Inputs ===
x: j1949 
y: j2551 
=== Succesors ===
=== Usages ===
v2667 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1949 y: j2551  <|@  <|@
f <@~|@floating>@ <|@
tid v2667 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2666 
y: j2623 
=== Succesors ===
=== Usages ===
v2149 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2666 y: j2623  <|@  <|@
f <@*|@fixed>@ <|@
tid v2149 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v2667 
=== Succesors ===
trueSuccessor: v2148 
falseSuccessor: v2147 
=== Usages ===
=== Predecessor ===
v2129 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2667 #trueSuccessor: v2148 #falseSuccessor: v2147  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v288|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v289|QWORD = LEA [v273|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v288|QWORD, y: v289|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B235 -> B236 falseDestination: B235 -> B237 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B236"
    from_bci -1
    to_bci -1
    predecessors "B235" 
    successors "B238" 
    xhandlers
    flags 
    probability 4585056867508815770
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2148 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2152 
=== Usages ===
=== Predecessor ===
v2149 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2152  <|@  <|@
f <@*|@fixed>@ <|@
tid v2152 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2132 
=== Predecessor ===
v2148 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v288|QWORD] destination: B236 -> B238 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B237"
    from_bci -1
    to_bci -1
    predecessors "B235" 
    successors "B238" 
    xhandlers
    flags 
    probability 4592008490372696935
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2147 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3071 
=== Usages ===
v3071 
=== Predecessor ===
v2149 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3071  <|@  <|@
f <@~|@floating>@ <|@
tid v3205 <|@
result [v275|QWORD[.] + v288|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j2612 
index: j2623 
=== Succesors ===
=== Usages ===
v3071 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2612 index: j2623  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3071 <|@
result v290|V32_WORD <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16>
=== Inputs ===
stateBefore: - 
guard: v2147 
address: v3205 
=== Succesors ===
next: v2993 
=== Usages ===
v2993 
=== Predecessor ===
v2147 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v2147 address: v3205 #next: v2993  <|@  <|@
f <@~|@floating>@ <|@
tid v3204 <|@
result [v274|QWORD[.] + v288|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j2614 
index: j2623 
=== Succesors ===
=== Usages ===
v2993 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2614 index: j2623  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2993 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3204 
value: v3071 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2131 
=== Usages ===
=== Predecessor ===
v3071 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3204 value: v3071 stateAfter: - lastLocationAccess: - #next: v2131  <|@  <|@
f <@~|@floating>@ <|@
tid j2630 <|@
result v291|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j2623 
y: j2497 
=== Succesors ===
=== Usages ===
j2615 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2623 y: j2497  <|@  <|@
f <@*|@fixed>@ <|@
tid v2131 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2132 
=== Predecessor ===
v2993 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v290|V32_WORD = H [v275|QWORD[.] + v288|QWORD * 2] nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction J (address: [v274|QWORD[.] + v288|QWORD * 2], input: v290|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction v291|QWORD = LEA [v288|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v291|QWORD] destination: B237 -> B238 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B238"
    from_bci -1
    to_bci -1
    predecessors "B237" "B236" 
    successors "B239" "B240" 
    xhandlers
    flags 
    probability 4594064066763556762
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j2615 <|@
result v292|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2132 
values: j2630 j2623 
=== Succesors ===
=== Usages ===
v3203 v2670 v3202 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2132 values: j2630 j2623  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2132 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2131 v2152 
=== Succesors ===
next: v2155 
=== Usages ===
j2615 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2131 v2152 #next: v2155  <|@  <|@
f <@~|@floating>@ <|@
tid j2669 <|@
result v293|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483649 - 2147483646]
=== Inputs ===
x: j1949 
y: j2555 
=== Succesors ===
=== Usages ===
v2670 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1949 y: j2555  <|@  <|@
f <@~|@floating>@ <|@
tid v2670 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2669 
y: j2615 
=== Succesors ===
=== Usages ===
v2155 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2669 y: j2615  <|@  <|@
f <@*|@fixed>@ <|@
tid v2155 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v2670 
=== Succesors ===
trueSuccessor: v2154 
falseSuccessor: v2153 
=== Usages ===
=== Predecessor ===
v2132 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2670 #trueSuccessor: v2154 #falseSuccessor: v2153  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v292|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v293|QWORD = DEC v273|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v292|QWORD, y: v293|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B238 -> B239 falseDestination: B238 -> B240 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B239"
    from_bci -1
    to_bci -1
    predecessors "B238" 
    successors "B241" 
    xhandlers
    flags 
    probability 4585056867508815770
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2154 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2158 
=== Usages ===
=== Predecessor ===
v2155 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2158  <|@  <|@
f <@*|@fixed>@ <|@
tid v2158 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2119 
=== Predecessor ===
v2154 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B239 -> B241 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B240"
    from_bci -1
    to_bci -1
    predecessors "B238" 
    successors "B241" 
    xhandlers
    flags 
    probability 4592008490372696935
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2153 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: i3072 
=== Usages ===
i3072 
=== Predecessor ===
v2155 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i3072  <|@  <|@
f <@~|@floating>@ <|@
tid v3203 <|@
result [v275|QWORD[.] + v292|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j2612 
index: j2615 
=== Succesors ===
=== Usages ===
i3072 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2612 index: j2615  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i3072 <|@
result v294|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: v2153 
address: v3203 
=== Succesors ===
next: v2991 
=== Usages ===
v2991 
=== Predecessor ===
v2153 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v2153 address: v3203 #next: v2991  <|@  <|@
f <@~|@floating>@ <|@
tid v3202 <|@
result [v274|QWORD[.] + v292|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j2614 
index: j2615 
=== Succesors ===
=== Usages ===
v2991 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2614 index: j2615  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2991 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3202 
value: i3072 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2134 
=== Usages ===
=== Predecessor ===
i3072 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3202 value: i3072 stateAfter: - lastLocationAccess: - #next: v2134  <|@  <|@
f <@*|@fixed>@ <|@
tid v2134 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2119 
=== Predecessor ===
v2991 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v294|DWORD = MOVSX [v275|QWORD[.] + v292|QWORD * 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v274|QWORD[.] + v292|QWORD * 2], y: v294|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B240 -> B241 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B241"
    from_bci -1
    to_bci -1
    predecessors "B223" "B240" "B239" 
    successors "B242" "B260" 
    xhandlers
    flags 
    probability 4598567666390927258
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2119 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2118 v2134 v2158 
=== Succesors ===
next: v2673 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2118 v2134 v2158 #next: v2673  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2673 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v2165 
=== Usages ===
j2675 
=== Predecessor ===
v2119 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v2165  <|@  <|@
f <@~|@floating>@ <|@
tid j1948 <|@
result v295|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i521 
=== Succesors ===
=== Usages ===
j1953 v2484 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i521  <|@  <|@
f <@~|@floating>@ <|@
tid v2484 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1949 
y: j1948 
=== Succesors ===
=== Usages ===
v2165 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1949 y: j1948  <|@  <|@
f <@*|@fixed>@ <|@
tid v2165 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v2484 
=== Succesors ===
trueSuccessor: v2164 
falseSuccessor: v2163 
=== Usages ===
=== Predecessor ===
v2673 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2484 #trueSuccessor: v2164 #falseSuccessor: v2163  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v295|QWORD = MOVSXD v250|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v295|QWORD, y: v273|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B241 -> B242 falseDestination: B241 -> B260 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B242"
    from_bci -1
    to_bci -1
    predecessors "B241" 
    successors "B243" "B244" 
    xhandlers
    flags 
    probability 4594064066763556762
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2164 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2168 
=== Usages ===
=== Predecessor ===
v2165 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2168  <|@  <|@
f <@~|@floating>@ <|@
tid v3184 <|@
result [v271|QWORD[.] + v273|QWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a1838 
index: j1949 
=== Succesors ===
=== Usages ===
j2675 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1838 index: j1949  <|@  <|@
f <@~|@floating>@ <|@
tid j2675 <|@
result v296|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v2673 
address: v3184 
=== Succesors ===
=== Usages ===
v3212 v3213 v3214 v3215 v3216 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v2673 address: v3184  <|@  <|@
f <@~|@floating>@ <|@
tid j1953 <|@
result v297|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
stamp: i64 [-4294967295 - 4294967295]
=== Inputs ===
x: j1948 
y: j1949 
=== Succesors ===
=== Usages ===
j2720 j2706 j2711 j2714 j2717 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j1948 y: j1949  <|@  <|@
f <@~|@floating>@ <|@
tid j2706 <|@
result v298|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967311 - 4294967279]
=== Inputs ===
x: j1953 
y: j2537 
=== Succesors ===
=== Usages ===
v2707 v2709 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1953 y: j2537  <|@  <|@
f <@~|@floating>@ <|@
tid v2707 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2706 
y: j1034 
=== Succesors ===
=== Usages ===
v2168 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2706 y: j1034  <|@  <|@
f <@*|@fixed>@ <|@
tid v2168 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v2707 
=== Succesors ===
trueSuccessor: v2166 
falseSuccessor: v2167 
=== Usages ===
=== Predecessor ===
v2164 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2707 #trueSuccessor: v2166 #falseSuccessor: v2167  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v296|QWORD[.] = LEA [v271|QWORD[.] + v273|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v297|QWORD = SUB (x: v295|QWORD, ~y: v273|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v298|QWORD = LEA [v297|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v298|QWORD, y: v298|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B242 -> B243 falseDestination: B242 -> B244 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B243"
    from_bci -1
    to_bci -1
    predecessors "B242" 
    successors "B247" 
    xhandlers
    flags 
    probability 4592008490372696935
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2166 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2177 
=== Usages ===
=== Predecessor ===
v2168 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2177  <|@  <|@
f <@*|@fixed>@ <|@
tid v2177 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2178 
=== Predecessor ===
v2166 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B243 -> B247 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B244"
    from_bci -1
    to_bci -1
    predecessors "B242" 
    successors "B245" 
    xhandlers
    flags 
    probability 4585056867508815770
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2167 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2169 
=== Usages ===
=== Predecessor ===
v2168 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2169  <|@  <|@
f <@*|@fixed>@ <|@
tid v2169 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2170 
=== Predecessor ===
v2167 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B244 -> B245 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B245"
    from_bci -1
    to_bci -1
    predecessors "B244" "B259" 
    successors "B246" "B259" 
    xhandlers
    flags "llh" 
    loop_index 9
    loop_depth 1
    probability 4594064066763556762
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j2700 <|@
result v299|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2170 
values: j1034 j2705 
=== Succesors ===
=== Usages ===
v3216 j2705 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2170 values: j1034 j2705  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2170 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v2169 
=== Succesors ===
next: v3004 
=== Usages ===
j2700 v2173 v2174 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v2169 #next: v3004  <|@  <|@
f <@~|@floating>@ <|@
tid v3216 <|@
result [v296|QWORD[.] + v299|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j2675 
index: j2700 
=== Succesors ===
=== Usages ===
v3004 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2675 index: j2700  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3004 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3216 
value: v3035 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2176 
=== Usages ===
=== Predecessor ===
v2170 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3216 value: v3035 stateAfter: - lastLocationAccess: - #next: v2176  <|@  <|@
f <@~|@floating>@ <|@
tid j2705 <|@
result v300|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j2700 
y: j739 
=== Succesors ===
=== Usages ===
j2694 j2700 v2709 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2700 y: j739  <|@  <|@
f <@~|@floating>@ <|@
tid v2709 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2706 
y: j2705 
=== Succesors ===
=== Usages ===
v2176 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2706 y: j2705  <|@  <|@
f <@*|@fixed>@ <|@
tid v2176 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v2709 
=== Succesors ===
trueSuccessor: v2173 
falseSuccessor: v2175 
=== Usages ===
=== Predecessor ===
v3004 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2709 #trueSuccessor: v2173 #falseSuccessor: v2175  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v299|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v296|QWORD[.] + v299|QWORD * 2], input: v18|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v300|QWORD = LEA [v299|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v300|QWORD, y: v298|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B245 -> B246 falseDestination: B245 -> B259 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B246"
    from_bci -1
    to_bci -1
    predecessors "B245" 
    successors "B247" 
    xhandlers
    flags 
    probability 4585056867508815770
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2173 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v2170 
=== Succesors ===
next: v2179 
=== Usages ===
=== Predecessor ===
v2176 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v2170 #next: v2179  <|@  <|@
f <@*|@fixed>@ <|@
tid v2179 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2178 
=== Predecessor ===
v2173 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v300|QWORD] destination: B246 -> B247 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B247"
    from_bci -1
    to_bci -1
    predecessors "B243" "B246" 
    successors "B248" "B249" 
    xhandlers
    flags 
    probability 4594064066763556762
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j2694 <|@
result v301|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2178 
values: j1034 j2705 
=== Succesors ===
=== Usages ===
v3215 j2699 j2688 v2712 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2178 values: j1034 j2705  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2178 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2177 v2179 
=== Succesors ===
next: v2200 
=== Usages ===
j2694 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2177 v2179 #next: v2200  <|@  <|@
f <@~|@floating>@ <|@
tid j2711 <|@
result v302|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967303 - 4294967287]
=== Inputs ===
x: j1953 
y: j2543 
=== Succesors ===
=== Usages ===
v2712 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1953 y: j2543  <|@  <|@
f <@~|@floating>@ <|@
tid v2712 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2711 
y: j2694 
=== Succesors ===
=== Usages ===
v2200 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2711 y: j2694  <|@  <|@
f <@*|@fixed>@ <|@
tid v2200 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v2712 
=== Succesors ===
trueSuccessor: v2199 
falseSuccessor: v2198 
=== Usages ===
=== Predecessor ===
v2178 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2712 #trueSuccessor: v2199 #falseSuccessor: v2198  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v301|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v302|QWORD = LEA [v297|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v301|QWORD, y: v302|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B247 -> B248 falseDestination: B247 -> B249 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B248"
    from_bci -1
    to_bci -1
    predecessors "B247" 
    successors "B250" 
    xhandlers
    flags 
    probability 4585056867508815770
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2199 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2203 
=== Usages ===
=== Predecessor ===
v2200 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2203  <|@  <|@
f <@*|@fixed>@ <|@
tid v2203 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2189 
=== Predecessor ===
v2199 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v301|QWORD] destination: B248 -> B250 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B249"
    from_bci -1
    to_bci -1
    predecessors "B247" 
    successors "B250" 
    xhandlers
    flags 
    probability 4592008490372696935
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2198 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3003 
=== Usages ===
=== Predecessor ===
v2200 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3003  <|@  <|@
f <@~|@floating>@ <|@
tid v3215 <|@
result [v296|QWORD[.] + v301|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j2675 
index: j2694 
=== Succesors ===
=== Usages ===
v3003 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2675 index: j2694  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3003 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3215 
value: v3039 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2188 
=== Usages ===
=== Predecessor ===
v2198 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3215 value: v3039 stateAfter: - lastLocationAccess: - #next: v2188  <|@  <|@
f <@~|@floating>@ <|@
tid j2699 <|@
result v303|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j2694 
y: j1432 
=== Succesors ===
=== Usages ===
j2688 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2694 y: j1432  <|@  <|@
f <@*|@fixed>@ <|@
tid v2188 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2189 
=== Predecessor ===
v3003 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v296|QWORD[.] + v301|QWORD * 2], input: v17|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v303|QWORD = LEA [v301|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v303|QWORD] destination: B249 -> B250 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B250"
    from_bci -1
    to_bci -1
    predecessors "B249" "B248" 
    successors "B251" "B252" 
    xhandlers
    flags 
    probability 4594064066763556762
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j2688 <|@
result v304|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2189 
values: j2699 j2694 
=== Succesors ===
=== Usages ===
v3214 j2693 j2682 v2715 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2189 values: j2699 j2694  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2189 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2188 v2203 
=== Succesors ===
next: v2206 
=== Usages ===
j2688 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2188 v2203 #next: v2206  <|@  <|@
f <@~|@floating>@ <|@
tid j2714 <|@
result v305|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967299 - 4294967291]
=== Inputs ===
x: j1953 
y: j2547 
=== Succesors ===
=== Usages ===
v2715 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1953 y: j2547  <|@  <|@
f <@~|@floating>@ <|@
tid v2715 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2714 
y: j2688 
=== Succesors ===
=== Usages ===
v2206 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2714 y: j2688  <|@  <|@
f <@*|@fixed>@ <|@
tid v2206 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v2715 
=== Succesors ===
trueSuccessor: v2205 
falseSuccessor: v2204 
=== Usages ===
=== Predecessor ===
v2189 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2715 #trueSuccessor: v2205 #falseSuccessor: v2204  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v304|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v305|QWORD = LEA [v297|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v304|QWORD, y: v305|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B250 -> B251 falseDestination: B250 -> B252 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B251"
    from_bci -1
    to_bci -1
    predecessors "B250" 
    successors "B253" 
    xhandlers
    flags 
    probability 4585056867508815770
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2205 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2209 
=== Usages ===
=== Predecessor ===
v2206 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2209  <|@  <|@
f <@*|@fixed>@ <|@
tid v2209 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2192 
=== Predecessor ===
v2205 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v304|QWORD] destination: B251 -> B253 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B252"
    from_bci -1
    to_bci -1
    predecessors "B250" 
    successors "B253" 
    xhandlers
    flags 
    probability 4592008490372696935
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2204 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3002 
=== Usages ===
=== Predecessor ===
v2206 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3002  <|@  <|@
f <@~|@floating>@ <|@
tid v3214 <|@
result [v296|QWORD[.] + v304|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j2675 
index: j2688 
=== Succesors ===
=== Usages ===
v3002 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2675 index: j2688  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3002 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3214 
value: v3038 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2191 
=== Usages ===
=== Predecessor ===
v2204 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3214 value: v3038 stateAfter: - lastLocationAccess: - #next: v2191  <|@  <|@
f <@~|@floating>@ <|@
tid j2693 <|@
result v306|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j2688 
y: j2519 
=== Succesors ===
=== Usages ===
j2682 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2688 y: j2519  <|@  <|@
f <@*|@fixed>@ <|@
tid v2191 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2192 
=== Predecessor ===
v3002 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v296|QWORD[.] + v304|QWORD * 2], input: v16|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v306|QWORD = LEA [v304|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v306|QWORD] destination: B252 -> B253 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B253"
    from_bci -1
    to_bci -1
    predecessors "B252" "B251" 
    successors "B254" "B255" 
    xhandlers
    flags 
    probability 4594064066763556762
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j2682 <|@
result v307|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2192 
values: j2693 j2688 
=== Succesors ===
=== Usages ===
v3213 j2687 j2676 v2718 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2192 values: j2693 j2688  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2192 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2191 v2209 
=== Succesors ===
next: v2212 
=== Usages ===
j2682 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2191 v2209 #next: v2212  <|@  <|@
f <@~|@floating>@ <|@
tid j2717 <|@
result v308|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967297 - 4294967293]
=== Inputs ===
x: j1953 
y: j2551 
=== Succesors ===
=== Usages ===
v2718 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1953 y: j2551  <|@  <|@
f <@~|@floating>@ <|@
tid v2718 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2717 
y: j2682 
=== Succesors ===
=== Usages ===
v2212 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2717 y: j2682  <|@  <|@
f <@*|@fixed>@ <|@
tid v2212 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v2718 
=== Succesors ===
trueSuccessor: v2211 
falseSuccessor: v2210 
=== Usages ===
=== Predecessor ===
v2192 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2718 #trueSuccessor: v2211 #falseSuccessor: v2210  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v307|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v308|QWORD = LEA [v297|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v307|QWORD, y: v308|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B253 -> B254 falseDestination: B253 -> B255 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B254"
    from_bci -1
    to_bci -1
    predecessors "B253" 
    successors "B256" 
    xhandlers
    flags 
    probability 4585056867508815770
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2211 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2215 
=== Usages ===
=== Predecessor ===
v2212 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2215  <|@  <|@
f <@*|@fixed>@ <|@
tid v2215 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2195 
=== Predecessor ===
v2211 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v307|QWORD] destination: B254 -> B256 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B255"
    from_bci -1
    to_bci -1
    predecessors "B253" 
    successors "B256" 
    xhandlers
    flags 
    probability 4592008490372696935
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2210 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3001 
=== Usages ===
=== Predecessor ===
v2212 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3001  <|@  <|@
f <@~|@floating>@ <|@
tid v3213 <|@
result [v296|QWORD[.] + v307|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j2675 
index: j2682 
=== Succesors ===
=== Usages ===
v3001 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2675 index: j2682  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3001 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3213 
value: v3037 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2194 
=== Usages ===
=== Predecessor ===
v2210 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3213 value: v3037 stateAfter: - lastLocationAccess: - #next: v2194  <|@  <|@
f <@~|@floating>@ <|@
tid j2687 <|@
result v309|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j2682 
y: j2497 
=== Succesors ===
=== Usages ===
j2676 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2682 y: j2497  <|@  <|@
f <@*|@fixed>@ <|@
tid v2194 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2195 
=== Predecessor ===
v3001 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v296|QWORD[.] + v307|QWORD * 2], input: v15|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction v309|QWORD = LEA [v307|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v309|QWORD] destination: B255 -> B256 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B256"
    from_bci -1
    to_bci -1
    predecessors "B255" "B254" 
    successors "B257" "B258" 
    xhandlers
    flags 
    probability 4594064066763556762
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j2676 <|@
result v310|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2195 
values: j2687 j2682 
=== Succesors ===
=== Usages ===
v3212 v2721 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2195 values: j2687 j2682  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2195 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2194 v2215 
=== Succesors ===
next: v2218 
=== Usages ===
j2676 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2194 v2215 #next: v2218  <|@  <|@
f <@~|@floating>@ <|@
tid j2720 <|@
result v311|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967296 - 4294967294]
=== Inputs ===
x: j1953 
y: j2555 
=== Succesors ===
=== Usages ===
v2721 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1953 y: j2555  <|@  <|@
f <@~|@floating>@ <|@
tid v2721 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2720 
y: j2676 
=== Succesors ===
=== Usages ===
v2218 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2720 y: j2676  <|@  <|@
f <@*|@fixed>@ <|@
tid v2218 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v2721 
=== Succesors ===
trueSuccessor: v2217 
falseSuccessor: v2216 
=== Usages ===
=== Predecessor ===
v2195 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2721 #trueSuccessor: v2217 #falseSuccessor: v2216  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v310|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v311|QWORD = DEC v297|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v310|QWORD, y: v311|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B256 -> B257 falseDestination: B256 -> B258 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B257"
    from_bci -1
    to_bci -1
    predecessors "B256" 
    successors "B261" 
    xhandlers
    flags 
    probability 4585056867508815770
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2217 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2221 
=== Usages ===
=== Predecessor ===
v2218 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2221  <|@  <|@
f <@*|@fixed>@ <|@
tid v2221 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2182 
=== Predecessor ===
v2217 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B257 -> B261 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B258"
    from_bci -1
    to_bci -1
    predecessors "B256" 
    successors "B261" 
    xhandlers
    flags 
    probability 4592008490372696935
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2216 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3000 
=== Usages ===
=== Predecessor ===
v2218 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3000  <|@  <|@
f <@~|@floating>@ <|@
tid v3212 <|@
result [v296|QWORD[.] + v310|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j2675 
index: j2676 
=== Succesors ===
=== Usages ===
v3000 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2675 index: j2676  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3000 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3212 
value: i3036 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2197 
=== Usages ===
=== Predecessor ===
v2216 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3212 value: i3036 stateAfter: - lastLocationAccess: - #next: v2197  <|@  <|@
f <@*|@fixed>@ <|@
tid v2197 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2182 
=== Predecessor ===
v3000 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v296|QWORD[.] + v310|QWORD * 2], y: r12|ILLEGAL) size: WORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B258 -> B261 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B259"
    from_bci -1
    to_bci -1
    predecessors "B245" 
    successors "B245" 
    xhandlers
    flags "lle" 
    loop_index 9
    loop_depth 1
    probability 4592008490372696935
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2175 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2174 
=== Usages ===
=== Predecessor ===
v2176 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2174  <|@  <|@
f <@*|@fixed>@ <|@
tid v2174 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v2170 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v2175 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v2170  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v300|QWORD] destination: B259 -> B245 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B260"
    from_bci -1
    to_bci -1
    predecessors "B241" 
    successors "B261" 
    xhandlers
    flags 
    probability 4594064066763556762
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2163 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2181 
=== Usages ===
=== Predecessor ===
v2165 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2181  <|@  <|@
f <@*|@fixed>@ <|@
tid v2181 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2182 
=== Predecessor ===
v2163 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B260 -> B261 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B261"
    from_bci -1
    to_bci -1
    predecessors "B260" "B258" "B257" 
    successors "B262" "B263" 
    xhandlers
    flags 
    probability 4598567666390927258
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2182 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2181 v2197 v2221 
=== Succesors ===
next: a1277 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2181 v2197 v2221 #next: a1277  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1277 <|@
result v271|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2927) [bci: 101]
predefinedStamp: [null]
stamp: a! -
=== Inputs ===
object: a1838 
=== Succesors ===
next: j1865 
=== Usages ===
a1097 
=== Predecessor ===
v2182 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a1838 #next: j1865  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1865 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j1880 
=== Usages ===
v3163 v3164 
=== Predecessor ===
a1277 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j1880  <|@  <|@
f <@~|@floating>@ <|@
tid v3163 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j1865 
index: - 
=== Succesors ===
=== Usages ===
j1880 v1882 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1865 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1880 <|@
result v312|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v3163 
=== Succesors ===
next: j1881 
=== Usages ===
j1935 j1886 v3180 
=== Predecessor ===
j1865 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3163 #next: j1881  <|@  <|@
f <@~|@floating>@ <|@
tid v3164 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j1865 
index: - 
=== Succesors ===
=== Usages ===
j1881 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1865 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1881 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v3164 
=== Succesors ===
next: v1873 
=== Usages ===
v1870 
=== Predecessor ===
j1880 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3164 #next: v1873  <|@  <|@
f <@~|@floating>@ <|@
tid j1935 <|@
result v313|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1880 
y: j1919 
=== Succesors ===
=== Usages ===
v1870 v1882 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1880 y: j1919  <|@  <|@
f <@~|@floating>@ <|@
tid v1870 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1881 
y: j1935 
=== Succesors ===
=== Usages ===
v1873 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j1881 y: j1935  <|@  <|@
f <@*|@fixed>@ <|@
tid v1873 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v1870 
=== Succesors ===
trueSuccessor: v1871 
falseSuccessor: v1872 
=== Usages ===
=== Predecessor ===
j1881 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1870 #trueSuccessor: v1871 #falseSuccessor: v1872  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v312|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v313|QWORD = LEA [v312|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v313|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B261 -> B262 falseDestination: B261 -> B263 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B262"
    from_bci -1
    to_bci -1
    predecessors "B261" 
    successors "B264" 
    xhandlers
    flags 
    probability 4568413362011779766
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1871 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a1876 
=== Usages ===
=== Predecessor ===
v1873 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1876  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1876 <|@
result v314|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?73 
arguments: v1391 i271 i47 
=== Succesors ===
next: j1877 
=== Usages ===
j1877 
=== Predecessor ===
v1871 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?73 arguments: v1391 i271 i47 #next: j1877  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1877 <|@
result v314|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1876 
=== Succesors ===
next: v1887 
=== Usages ===
j1886 
=== Predecessor ===
a1876 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a1876 #next: v1887  <|@  <|@
f <@*|@fixed>@ <|@
tid v1887 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1884 
=== Predecessor ===
j1877 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v21|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FormatSpecifier.justify(Formatter.java:2927) [bci: 100]
locals: - - v251|QWORD[.] - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:100] <|@ <|@
      nr   -1  <|@ instruction v314|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v314|QWORD[.]] destination: B262 -> B264 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B263"
    from_bci -1
    to_bci -1
    predecessors "B261" 
    successors "B264" 
    xhandlers
    flags 
    probability 4598518705926197045
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1872 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1882 
=== Usages ===
=== Predecessor ===
v1873 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1882  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1882 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3163 
value: j1935 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1879 
=== Usages ===
=== Predecessor ===
v1872 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3163 value: j1935 stateAfter: - lastLocationAccess: - #next: v1879  <|@  <|@
f <@~|@floating>@ <|@
tid v3180 <|@
result [v312|QWORD + 216] <|@
d <@d|@=== Debug Properties ===
displacement: 216
scale: Times1
stamp: void*
=== Inputs ===
base: j1880 
index: - 
=== Succesors ===
=== Usages ===
v1879 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1880 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1879 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v3180 
=== Succesors ===
next: v1885 
=== Usages ===
=== Predecessor ===
v1882 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v3180 #next: v1885  <|@  <|@
f <@*|@fixed>@ <|@
tid v1885 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1884 
=== Predecessor ===
v1879 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v313|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v312|QWORD + 216] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v312|QWORD] destination: B263 -> B264 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B264"
    from_bci -1
    to_bci -1
    predecessors "B263" "B262" 
    successors 
    xhandlers
    flags 
    probability 4598567666390927258
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1886 <|@
result v315|QWORD[*] <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1884 
values: j1880 j1877 
=== Succesors ===
=== Usages ===
v3167 v3166 a1094 v3181 v3182 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1884 values: j1880 j1877  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1884 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1885 v1887 
=== Succesors ===
next: a1094 
=== Usages ===
j1886 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1885 v1887 #next: a1094  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1094 <|@
result v316|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j1886 
=== Succesors ===
next: j1896 
=== Usages ===
a1100 
=== Predecessor ===
v1884 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j1886 #next: j1896  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1896 <|@
result v317|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v3165 
=== Succesors ===
next: v1897 
=== Usages ===
v1897 
=== Predecessor ===
a1094 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3165 #next: v1897  <|@  <|@
f <@~|@floating>@ <|@
tid v3166 <|@
result [v315|QWORD[*]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1886 
index: - 
=== Succesors ===
=== Usages ===
v1897 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1886 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1897 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3166 
value: j1896 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1900 
=== Usages ===
=== Predecessor ===
j1896 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3166 value: j1896 stateAfter: - lastLocationAccess: - #next: v1900  <|@  <|@
f <@~|@floating>@ <|@
tid v3167 <|@
result [v315|QWORD[*] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j1886 
index: - 
=== Succesors ===
=== Usages ===
v1900 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1886 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1900 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3167 
value: v1932 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1904 
=== Usages ===
=== Predecessor ===
v1897 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3167 value: v1932 stateAfter: - lastLocationAccess: - #next: v1904  <|@  <|@
f <@~|@floating>@ <|@
tid v3181 <|@
result [v315|QWORD[*] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j1886 
index: - 
=== Succesors ===
=== Usages ===
v1904 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1886 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a1097 <|@
result v318|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Compress
stamp: n! -
=== Inputs ===
value: a1277 
=== Succesors ===
=== Usages ===
v1904 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1277  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1904 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3181 
value: a1097 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1906 
=== Usages ===
=== Predecessor ===
v1900 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3181 value: a1097 stateAfter: - lastLocationAccess: - #next: v1906  <|@  <|@
f <@~|@floating>@ <|@
tid v3182 <|@
result [v315|QWORD[*] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j1886 
index: - 
=== Succesors ===
=== Usages ===
v1906 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1886 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1906 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3182 
value: i26 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a1100 
=== Usages ===
=== Predecessor ===
v1904 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3182 value: i26 stateAfter: - lastLocationAccess: - #next: a1100  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1100 <|@
result v316|QWORD[.] <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a1094 
=== Succesors ===
next: v1101 
=== Usages ===
v243 
=== Predecessor ===
v1906 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a1094 #next: v1101  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1101 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v243 
=== Usages ===
=== Predecessor ===
a1100 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v243  <|@  <|@
f <@*|@fixed>@ <|@
tid v243 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
result: a1100 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1101 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a1100 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v315|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v316|QWORD[.] = MOVE v315|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v317|QWORD = MOV [v252|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v315|QWORD[*]], y: v317|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v315|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v318|DWORD[.] = COMPRESSPOINTER (input: v271|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@1d28dd80 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v315|QWORD[*] + 12], y: v318|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v315|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v316|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B265"
    from_bci -1
    to_bci -1
    predecessors "B227" 
    successors "B227" 
    xhandlers
    flags "lle" 
    loop_index 8
    loop_depth 1
    probability 4592008490372696935
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2112 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2111 
=== Usages ===
=== Predecessor ===
v2113 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2111  <|@  <|@
f <@*|@fixed>@ <|@
tid v2111 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v2107 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v2112 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v2107  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v279|QWORD] destination: B265 -> B227 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B266"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B103" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4575016825099975968
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2364 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2363 
=== Usages ===
=== Predecessor ===
v2365 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2363  <|@  <|@
f <@*|@fixed>@ <|@
tid v2363 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v2359 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v2364 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v2359  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v138|QWORD] destination: B266 -> B103 <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@4182771d slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v2|DWORD y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.6259652107203015 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4603813412924770104
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4600409631668400528
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v3|DWORD[.] = MOV [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FormatSpecifier.justify(Formatter.java:2917) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v3|DWORD[.] * 8] state [bci:0] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FormatSpecifier.justify(Formatter.java:2917) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - 
>@ <|@ instruction v4|DWORD[.] = MOV [v1|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction TEST (x: v4|DWORD[.], y: v4|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B9" 
    xhandlers
    flags 
    probability 4600409631668400528
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = MOV [v4|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = MOV [v3|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Formatter.Flags@122446495] <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = MOV [v9|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = AND (x: v8|DWORD, y: v10|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v10|DWORD, y: v11|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = SETCC condition: = <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = LEA [v6|QWORD + 48] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = SUB (x: v2|DWORD, ~y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v10|DWORD, y: v11|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.18604807005003576 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4599156037586246543
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v13|QWORD, y: v7|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4599101193409563137
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v13|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v6|QWORD + 240] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v6|QWORD] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4599156037586246543
    begin_IR
      LIR
      nr   -1  <|@ instruction [v26|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v27|QWORD[.] = MOVE v26|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v26|QWORD[*] + 12] y: 16 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v26|QWORD[*]] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v26|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction CMP v14|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.4177003898613192 condition: < trueDestination: B12 -> B13 falseDestination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4595555168830760299
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v28|V256_QWORD = A od: SIMD<32,0,0,0> oe: QWORD <|@ <|@
      nr   -1  <|@ instruction J (address: [v26|QWORD[*] + 16], input: v28|V256_QWORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v27|QWORD[.], int[1|0x1]] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B70" "B18" 
    successors "B16" "B74" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4598072091713848228
    begin_IR
      LIR
      nr   -1  <|@ instruction [v29|QWORD[.], v30|DWORD] = LABEL numbPhis: 2 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = MOV [v29|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v14|DWORD, y: v30|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5822996101386808 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B20" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4594352857608977439
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v32|DWORD = INC v30|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v33|DWORD = SUB (x: v32|DWORD, ~y: v31|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v33|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9354897578252553 condition: < trueDestination: B16 -> B17 falseDestination: B16 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4594018382497928091
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v31|DWORD, y: v30|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B17 -> B18 falseDestination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B15" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4594018382497928091
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v29|QWORD[.] + v30|DWORD * 2 + 16] y: 32 size: WORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v29|QWORD[.], v32|DWORD] destination: B18 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B21" "B22" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4576505223557843009
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v34|DWORD = SHL v31|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v35|DWORD = LEA [v34|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v36|DWORD = SUB (x: v35|DWORD, ~y: v32|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v36|DWORD, y: v36|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v37|DWORD = CMOVE (falseValue: v35|DWORD, ~trueValue: v32|DWORD) condition: < <|@ <|@
      nr   -1  <|@ instruction CMP v37|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B20 -> B21 falseDestination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4576505223557843009
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v38|DWORD = MOVE input: int[2147483639|0x7ffffff7] <|@ <|@
      nr   -1  <|@ instruction v39|DWORD = SUB (x: v38|DWORD, ~y: v37|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v39|DWORD, y: v39|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B22 -> B23 falseDestination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" "B72" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4576505223557843009
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v37|DWORD, y: v30|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B24 -> B25 falseDestination: B24 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" "B29" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4576505223557843009
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v40|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v41|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v37|DWORD y: 16777215 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B25 -> B26 falseDestination: B25 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" "B28" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4575970063380164052
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v42|DWORD = SHL v37|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v43|DWORD = LEA [v42|DWORD + 23] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v44|DWORD = AND v43|DWORD y: -8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v45|QWORD = MOVSXD v44|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v46|QWORD = ADD (x: v45|QWORD, y: v40|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v46|QWORD, y: v41|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B26 -> B27 falseDestination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B31" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4575921898964172946
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v46|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v45|QWORD + v40|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v45|QWORD + v40|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v45|QWORD + v40|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v45|QWORD + v40|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v40|QWORD + 12], y: v37|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v40|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v40|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v47|QWORD[.] = MOVE v40|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v47|QWORD[.]] destination: B28 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" 
    successors "B32" "B33" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4576505223557843009
    begin_IR
      LIR
      nr   -1  <|@ instruction [v49|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v37|DWORD, y: v31|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v50|DWORD = CMOVE (falseValue: v37|DWORD, ~trueValue: v31|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction v51|QWORD = MOVSXD v50|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v51|QWORD y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B31 -> B32 falseDestination: B31 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B35" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4572001623930472513
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v52|QWORD[.] = LEA [v49|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v53|QWORD[.] = LEA [v29|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v54|QWORD = LEA [v51|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v54|QWORD, y: v54|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B33 -> B34 falseDestination: B33 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B38" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4570173825191496802
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B34 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B34" "B37" 
    successors "B39" "B40" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4572001623930472513
    begin_IR
      LIR
      nr   -1  <|@ instruction [v58|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v59|QWORD = LEA [v51|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v58|QWORD, y: v59|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B38 -> B39 falseDestination: B38 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4570173825191496802
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v60|V128_WORD = H [v53|QWORD[.] + v58|QWORD * 2] nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v52|QWORD[.] + v58|QWORD * 2], input: v60|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v61|QWORD = LEA [v58|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v61|QWORD] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" "B39" 
    successors "B42" "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4572001623930472513
    begin_IR
      LIR
      nr   -1  <|@ instruction [v62|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v63|QWORD = LEA [v51|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v62|QWORD, y: v63|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B41 -> B42 falseDestination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4570173825191496802
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v64|V64_WORD = H [v53|QWORD[.] + v62|QWORD * 2] nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction J (address: [v52|QWORD[.] + v62|QWORD * 2], input: v64|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v65|QWORD = LEA [v62|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v65|QWORD] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4572001623930472513
    begin_IR
      LIR
      nr   -1  <|@ instruction [v66|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v67|QWORD = LEA [v51|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v66|QWORD, y: v67|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B44 -> B45 falseDestination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4570173825191496802
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v68|V32_WORD = H [v53|QWORD[.] + v66|QWORD * 2] nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction J (address: [v52|QWORD[.] + v66|QWORD * 2], input: v68|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction v69|QWORD = LEA [v66|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v69|QWORD] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" "B45" 
    successors "B48" "B49" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4572001623930472513
    begin_IR
      LIR
      nr   -1  <|@ instruction [v70|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v71|QWORD = DEC v51|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v70|QWORD, y: v71|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B47 -> B48 falseDestination: B47 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4570173825191496802
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v72|DWORD = MOVSX [v53|QWORD[.] + v70|QWORD * 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v52|QWORD[.] + v70|QWORD * 2], y: v72|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B32" "B49" "B48" 
    successors "B51" "B69" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4576505223557843009
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v73|QWORD = MOVSXD v37|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v73|QWORD, y: v51|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B50 -> B51 falseDestination: B50 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B70" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4572001623930472513
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B69 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" "B67" "B66" 
    successors "B15" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576505223557843009
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v49|QWORD[.] + v30|DWORD * 2 + 16] y: 32 size: WORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v49|QWORD[.], v32|DWORD] destination: B70 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B50" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4572001623930472513
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B32 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B52" "B53" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4572001623930472513
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v74|QWORD[.] = LEA [v49|QWORD[.] + v51|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v75|QWORD = SUB (x: v73|QWORD, ~y: v51|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v76|QWORD = LEA [v75|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v76|QWORD, y: v76|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B51 -> B52 falseDestination: B51 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B56" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4570173825191496802
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B52 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B52" "B55" 
    successors "B57" "B58" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4572001623930472513
    begin_IR
      LIR
      nr   -1  <|@ instruction [v79|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v80|QWORD = LEA [v75|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v79|QWORD, y: v80|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B56 -> B57 falseDestination: B56 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B59" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4570173825191496802
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v330|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v74|QWORD[.] + v79|QWORD * 2], input: v330|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v81|QWORD = LEA [v79|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v81|QWORD] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" "B57" 
    successors "B60" "B61" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4572001623930472513
    begin_IR
      LIR
      nr   -1  <|@ instruction [v82|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v83|QWORD = LEA [v75|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v82|QWORD, y: v83|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B59 -> B60 falseDestination: B59 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4570173825191496802
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v326|V64_WORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v74|QWORD[.] + v82|QWORD * 2], input: v326|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v84|QWORD = LEA [v82|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v84|QWORD] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" "B60" 
    successors "B63" "B64" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4572001623930472513
    begin_IR
      LIR
      nr   -1  <|@ instruction [v85|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v86|QWORD = LEA [v75|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v85|QWORD, y: v86|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B62 -> B63 falseDestination: B62 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B65" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4570173825191496802
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v322|V32_WORD = L oc: SIMD<0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v74|QWORD[.] + v85|QWORD * 2], input: v322|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction v87|QWORD = LEA [v85|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v87|QWORD] destination: B64 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" "B63" 
    successors "B66" "B67" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4572001623930472513
    begin_IR
      LIR
      nr   -1  <|@ instruction [v88|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v89|QWORD = DEC v75|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v88|QWORD, y: v89|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B65 -> B66 falseDestination: B65 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B70" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4570173825191496802
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v74|QWORD[.] + v88|QWORD * 2], y: r12|ILLEGAL) size: WORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B67 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4562994424675731521
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B36" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4570173825191496802
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v57|QWORD] destination: B71 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" "B71" 
    successors "B37" "B71" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 2
    probability 4572001623930472513
    begin_IR
      LIR
      nr   -1  <|@ instruction [v55|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v56|V256_WORD = H [v53|QWORD[.] + v55|QWORD * 2] nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v52|QWORD[.] + v55|QWORD * 2], input: v56|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v57|QWORD = LEA [v55|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v57|QWORD, y: v54|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B36 -> B37 falseDestination: B36 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4562994424675731521
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v58|QWORD] destination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4562994424675731521
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v62|QWORD] destination: B42 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4562994424675731521
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v57|QWORD] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4562994424675731521
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v66|QWORD] destination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B65" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4562994424675731521
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v85|QWORD] destination: B63 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B70" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4562994424675731521
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B66 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4562994424675731521
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v82|QWORD] destination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4562994424675731521
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B48 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B59" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4562994424675731521
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v79|QWORD] destination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4562994424675731521
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v334|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B53 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B54" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 2
    probability 4570173825191496802
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v78|QWORD] destination: B68 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" "B68" 
    successors "B55" "B68" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 2
    probability 4572001623930472513
    begin_IR
      LIR
      nr   -1  <|@ instruction [v77|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v74|QWORD[.] + v77|QWORD * 2], input: v334|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v78|QWORD = LEA [v77|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v78|QWORD, y: v76|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B54 -> B55 falseDestination: B54 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B56" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4562994424675731521
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v78|QWORD] destination: B55 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B30" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4561701786114434764
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" "B27" 
    successors "B31" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4562309419648302455
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v338|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v338|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v37|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FormatSpecifier.justify(Formatter.java:2923) [bci: 47]
locals: - v1|QWORD[.] vobject:StringBuilder:0{count=v30|DWORD,value=v29|QWORD[.]} v12|DWORD v14|DWORD v30|DWORD 
vobject:StringBuilder:0{count=v30|DWORD,value=v29|QWORD[.]} Ljava/lang/StringBuilder; v30|DWORD v29|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:47] <|@ <|@
      nr   -1  <|@ instruction v48|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v48|QWORD[.]] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B30" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4545793469636321557
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B27 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B75" 
    xhandlers
    flags 
    probability 4593749707086991795
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v339|V256_QWORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v26|QWORD[*] + 16], input: v339|V256_QWORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v27|QWORD[.], int[16|0x10], int[0|0x0]] destination: B13 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B8" "B13" "B74" 
    successors "B76" "B84" 
    xhandlers
    flags 
    probability 4599075674450723485
    begin_IR
      LIR
      nr   -1  <|@ instruction [v91|QWORD[.], v92|DWORD, v93|DWORD] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v94|DWORD = MOV [v91|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v95|DWORD[.] = COMPRESSPOINTER (input: v91|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@1d28dd80 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v96|DWORD = ADD (x: v93|DWORD, y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v97|DWORD = SUB (x: v96|DWORD, ~y: v92|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v98|QWORD = MOV v5|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v100|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>} <|@ <|@
      nr   -1  <|@ instruction CMP v97|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9354897721124376 condition: < trueDestination: B75 -> B76 falseDestination: B75 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B77" "B78" 
    xhandlers
    flags 
    probability 4598727057661294609
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v101|DWORD = SUB (x: v94|DWORD, ~y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v93|DWORD, y: v101|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B76 -> B77 falseDestination: B76 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" "B80" 
    xhandlers
    flags 
    probability 4598727057661294609
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v102|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1d28dd80 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v103|QWORD[*] = MOVE v102|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v104|QWORD[*] = MOVE v91|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v105|QWORD = MOVSXD v93|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA [v103|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA [v104|QWORD[*] + v105|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE v98|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charArraycopy(Word,Word,Word)void@0x106812d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v106|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v107|QWORD = LEA [v106|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v107|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B78 -> B79 falseDestination: B78 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B81" 
    xhandlers
    flags 
    probability 4598676503283860722
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v107|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v106|QWORD + 216] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v106|QWORD] destination: B80 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" "B79" 
    successors "B82" "B83" 
    xhandlers
    flags 
    probability 4598727057661294609
    begin_IR
      LIR
      nr   -1  <|@ instruction [v109|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v110|QWORD[.] = MOVE v109|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v111|QWORD = MOV [v100|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v109|QWORD[*]], y: v111|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v109|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v109|QWORD[*] + 12], y: v96|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v109|QWORD[*] + 16], y: v95|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v10|DWORD, y: v11|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.18579515065073993 condition: = trueDestination: B81 -> B82 falseDestination: B81 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors "B206" 
    xhandlers
    flags 
    probability 4597400344143036126
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v91|QWORD[.], v96|DWORD, v110|QWORD[.]] destination: B83 -> B206 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B206"
    from_bci -1
    to_bci -1
    predecessors "B204" "B205" "B83" 
    successors "B207" "B213" 
    xhandlers
    flags 
    probability 4599068736976613850
    begin_IR
      LIR
      nr   -1  <|@ instruction [v249|QWORD[.], v250|DWORD, v251|QWORD[.]] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v252|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr   -1  <|@ instruction CMP v250|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09284041465770032 condition: < trueDestination: B206 -> B207 falseDestination: B206 -> B213 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B213"
    from_bci -1
    to_bci -1
    predecessors "B206" 
    successors "B214" "B216" 
    xhandlers
    flags 
    probability 4598567666390927258
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v259|DWORD = MOV [v249|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v260|DWORD = SUB (x: v259|DWORD, ~y: v250|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v260|DWORD, y: v260|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B213 -> B214 falseDestination: B213 -> B216 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B216"
    from_bci -1
    to_bci -1
    predecessors "B213" 
    successors "B217" "B220" 
    xhandlers
    flags 
    probability 4598567666390927258
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v262|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v263|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v250|DWORD y: 16777215 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B216 -> B217 falseDestination: B216 -> B220 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B217"
    from_bci -1
    to_bci -1
    predecessors "B216" 
    successors "B218" "B219" 
    xhandlers
    flags 
    probability 4597980903941973833
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v264|DWORD = SHL v250|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v265|DWORD = LEA [v264|DWORD + 23] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v266|DWORD = AND v265|DWORD y: -8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v267|QWORD = MOVSXD v266|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v268|QWORD = ADD (x: v267|QWORD, y: v262|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v268|QWORD, y: v263|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B217 -> B218 falseDestination: B217 -> B219 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B219"
    from_bci -1
    to_bci -1
    predecessors "B217" 
    successors "B222" 
    xhandlers
    flags 
    probability 4597892775105459449
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v268|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v267|QWORD + v262|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v267|QWORD + v262|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v267|QWORD + v262|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v267|QWORD + v262|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v262|QWORD + 12], y: v250|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v262|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v262|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v269|QWORD[.] = MOVE v262|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v269|QWORD[.]] destination: B219 -> B222 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B222"
    from_bci -1
    to_bci -1
    predecessors "B219" "B221" 
    successors "B223" "B224" 
    xhandlers
    flags 
    probability 4598567666390927258
    begin_IR
      LIR
      nr   -1  <|@ instruction [v271|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v250|DWORD, y: v259|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v272|DWORD = CMOVE (falseValue: v250|DWORD, ~trueValue: v259|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction v273|QWORD = MOVSXD v272|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v273|QWORD y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B222 -> B223 falseDestination: B222 -> B224 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B224"
    from_bci -1
    to_bci -1
    predecessors "B222" 
    successors "B225" "B226" 
    xhandlers
    flags 
    probability 4594064066763556762
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v274|QWORD[.] = LEA [v271|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v275|QWORD[.] = LEA [v249|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v276|QWORD = LEA [v273|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v276|QWORD, y: v276|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B224 -> B225 falseDestination: B224 -> B226 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B225"
    from_bci -1
    to_bci -1
    predecessors "B224" 
    successors "B229" 
    xhandlers
    flags 
    probability 4592008490372696935
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B225 -> B229 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B229"
    from_bci -1
    to_bci -1
    predecessors "B225" "B228" 
    successors "B230" "B231" 
    xhandlers
    flags 
    probability 4594064066763556762
    begin_IR
      LIR
      nr   -1  <|@ instruction [v280|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v281|QWORD = LEA [v273|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v280|QWORD, y: v281|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B229 -> B230 falseDestination: B229 -> B231 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B231"
    from_bci -1
    to_bci -1
    predecessors "B229" 
    successors "B232" 
    xhandlers
    flags 
    probability 4592008490372696935
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v282|V128_WORD = H [v275|QWORD[.] + v280|QWORD * 2] nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v274|QWORD[.] + v280|QWORD * 2], input: v282|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v283|QWORD = LEA [v280|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v283|QWORD] destination: B231 -> B232 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B232"
    from_bci -1
    to_bci -1
    predecessors "B231" "B230" 
    successors "B233" "B234" 
    xhandlers
    flags 
    probability 4594064066763556762
    begin_IR
      LIR
      nr   -1  <|@ instruction [v284|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v285|QWORD = LEA [v273|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v284|QWORD, y: v285|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B232 -> B233 falseDestination: B232 -> B234 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B234"
    from_bci -1
    to_bci -1
    predecessors "B232" 
    successors "B235" 
    xhandlers
    flags 
    probability 4592008490372696935
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v286|V64_WORD = H [v275|QWORD[.] + v284|QWORD * 2] nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction J (address: [v274|QWORD[.] + v284|QWORD * 2], input: v286|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v287|QWORD = LEA [v284|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v287|QWORD] destination: B234 -> B235 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B235"
    from_bci -1
    to_bci -1
    predecessors "B234" "B233" 
    successors "B236" "B237" 
    xhandlers
    flags 
    probability 4594064066763556762
    begin_IR
      LIR
      nr   -1  <|@ instruction [v288|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v289|QWORD = LEA [v273|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v288|QWORD, y: v289|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B235 -> B236 falseDestination: B235 -> B237 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B237"
    from_bci -1
    to_bci -1
    predecessors "B235" 
    successors "B238" 
    xhandlers
    flags 
    probability 4592008490372696935
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v290|V32_WORD = H [v275|QWORD[.] + v288|QWORD * 2] nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction J (address: [v274|QWORD[.] + v288|QWORD * 2], input: v290|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction v291|QWORD = LEA [v288|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v291|QWORD] destination: B237 -> B238 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B238"
    from_bci -1
    to_bci -1
    predecessors "B237" "B236" 
    successors "B239" "B240" 
    xhandlers
    flags 
    probability 4594064066763556762
    begin_IR
      LIR
      nr   -1  <|@ instruction [v292|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v293|QWORD = DEC v273|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v292|QWORD, y: v293|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B238 -> B239 falseDestination: B238 -> B240 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B240"
    from_bci -1
    to_bci -1
    predecessors "B238" 
    successors "B241" 
    xhandlers
    flags 
    probability 4592008490372696935
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v294|DWORD = MOVSX [v275|QWORD[.] + v292|QWORD * 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v274|QWORD[.] + v292|QWORD * 2], y: v294|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B240 -> B241 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B241"
    from_bci -1
    to_bci -1
    predecessors "B223" "B240" "B239" 
    successors "B242" "B260" 
    xhandlers
    flags 
    probability 4598567666390927258
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v295|QWORD = MOVSXD v250|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v295|QWORD, y: v273|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B241 -> B242 falseDestination: B241 -> B260 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B260"
    from_bci -1
    to_bci -1
    predecessors "B241" 
    successors "B261" 
    xhandlers
    flags 
    probability 4594064066763556762
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B260 -> B261 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B261"
    from_bci -1
    to_bci -1
    predecessors "B260" "B258" "B257" 
    successors "B262" "B263" 
    xhandlers
    flags 
    probability 4598567666390927258
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v312|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v313|QWORD = LEA [v312|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v313|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B261 -> B262 falseDestination: B261 -> B263 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B263"
    from_bci -1
    to_bci -1
    predecessors "B261" 
    successors "B264" 
    xhandlers
    flags 
    probability 4598518705926197045
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v313|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v312|QWORD + 216] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v312|QWORD] destination: B263 -> B264 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B264"
    from_bci -1
    to_bci -1
    predecessors "B263" "B262" 
    successors 
    xhandlers
    flags 
    probability 4598567666390927258
    begin_IR
      LIR
      nr   -1  <|@ instruction [v315|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v316|QWORD[.] = MOVE v315|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v317|QWORD = MOV [v252|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v315|QWORD[*]], y: v317|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v315|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v318|DWORD[.] = COMPRESSPOINTER (input: v271|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@1d28dd80 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v315|QWORD[*] + 12], y: v318|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v315|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v316|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B223"
    from_bci -1
    to_bci -1
    predecessors "B222" 
    successors "B241" 
    xhandlers
    flags 
    probability 4594064066763556762
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B223 -> B241 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B242"
    from_bci -1
    to_bci -1
    predecessors "B241" 
    successors "B243" "B244" 
    xhandlers
    flags 
    probability 4594064066763556762
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v296|QWORD[.] = LEA [v271|QWORD[.] + v273|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v297|QWORD = SUB (x: v295|QWORD, ~y: v273|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v298|QWORD = LEA [v297|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v298|QWORD, y: v298|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B242 -> B243 falseDestination: B242 -> B244 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B243"
    from_bci -1
    to_bci -1
    predecessors "B242" 
    successors "B247" 
    xhandlers
    flags 
    probability 4592008490372696935
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B243 -> B247 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B247"
    from_bci -1
    to_bci -1
    predecessors "B243" "B246" 
    successors "B248" "B249" 
    xhandlers
    flags 
    probability 4594064066763556762
    begin_IR
      LIR
      nr   -1  <|@ instruction [v301|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v302|QWORD = LEA [v297|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v301|QWORD, y: v302|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B247 -> B248 falseDestination: B247 -> B249 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B249"
    from_bci -1
    to_bci -1
    predecessors "B247" 
    successors "B250" 
    xhandlers
    flags 
    probability 4592008490372696935
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v327|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v296|QWORD[.] + v301|QWORD * 2], input: v327|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v303|QWORD = LEA [v301|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v303|QWORD] destination: B249 -> B250 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B250"
    from_bci -1
    to_bci -1
    predecessors "B249" "B248" 
    successors "B251" "B252" 
    xhandlers
    flags 
    probability 4594064066763556762
    begin_IR
      LIR
      nr   -1  <|@ instruction [v304|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v305|QWORD = LEA [v297|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v304|QWORD, y: v305|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B250 -> B251 falseDestination: B250 -> B252 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B252"
    from_bci -1
    to_bci -1
    predecessors "B250" 
    successors "B253" 
    xhandlers
    flags 
    probability 4592008490372696935
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v323|V64_WORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v296|QWORD[.] + v304|QWORD * 2], input: v323|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v306|QWORD = LEA [v304|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v306|QWORD] destination: B252 -> B253 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B253"
    from_bci -1
    to_bci -1
    predecessors "B252" "B251" 
    successors "B254" "B255" 
    xhandlers
    flags 
    probability 4594064066763556762
    begin_IR
      LIR
      nr   -1  <|@ instruction [v307|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v308|QWORD = LEA [v297|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v307|QWORD, y: v308|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B253 -> B254 falseDestination: B253 -> B255 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B255"
    from_bci -1
    to_bci -1
    predecessors "B253" 
    successors "B256" 
    xhandlers
    flags 
    probability 4592008490372696935
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v319|V32_WORD = L oc: SIMD<0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v296|QWORD[.] + v307|QWORD * 2], input: v319|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction v309|QWORD = LEA [v307|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v309|QWORD] destination: B255 -> B256 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B256"
    from_bci -1
    to_bci -1
    predecessors "B255" "B254" 
    successors "B257" "B258" 
    xhandlers
    flags 
    probability 4594064066763556762
    begin_IR
      LIR
      nr   -1  <|@ instruction [v310|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v311|QWORD = DEC v297|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v310|QWORD, y: v311|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B256 -> B257 falseDestination: B256 -> B258 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B258"
    from_bci -1
    to_bci -1
    predecessors "B256" 
    successors "B261" 
    xhandlers
    flags 
    probability 4592008490372696935
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v296|QWORD[.] + v310|QWORD * 2], y: r12|ILLEGAL) size: WORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B258 -> B261 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B75" 
    xhandlers
    flags 
    probability 4592102888872906507
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v29|QWORD[.], v31|DWORD, v30|DWORD] destination: B74 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4589678796991780868
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v13|QWORD, y: v7|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4589628653228494709
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v13|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v6|QWORD + 240] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v6|QWORD] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B6" 
    successors "B75" 
    xhandlers
    flags 
    probability 4589678796991780868
    begin_IR
      LIR
      nr   -1  <|@ instruction [v23|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v340|V256_QWORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction v24|QWORD[.] = MOVE v23|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v23|QWORD[*] + 12] y: 16 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v23|QWORD[*]] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v23|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction J (address: [v23|QWORD[*] + 16], input: v340|V256_QWORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v24|QWORD[.], int[16|0x10], int[0|0x0]] destination: B8 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors "B144" 
    xhandlers
    flags 
    probability 4587675027572901137
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v96|DWORD, v91|QWORD[.], v110|QWORD[.]] destination: B82 -> B144 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B144"
    from_bci -1
    to_bci -1
    predecessors "B143" "B82" 
    successors "B145" 
    xhandlers
    flags 
    probability 4588182886451812978
    begin_IR
      LIR
      nr   -1  <|@ instruction [v180|DWORD, v181|QWORD[.], v182|QWORD[.]] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0], v181|QWORD[.], v180|DWORD] destination: B144 -> B145 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B145"
    from_bci -1
    to_bci -1
    predecessors "B144" "B200" "B148" 
    successors "B146" "B204" 
    xhandlers
    flags "llh" 
    loop_index 5
    loop_depth 1
    probability 4602160059308521155
    begin_IR
      LIR
      nr   -1  <|@ instruction [v183|DWORD, v184|QWORD[.], v185|DWORD] = LABEL numbPhis: 3 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v14|DWORD, y: v183|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.8818677814780699 condition: > trueDestination: B145 -> B146 falseDestination: B145 -> B204 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B146"
    from_bci -1
    to_bci -1
    predecessors "B145" 
    successors "B147" "B150" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4601157301131518837
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v186|DWORD = MOV [v184|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v187|DWORD = INC v185|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v188|DWORD = SUB (x: v187|DWORD, ~y: v186|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v189|DWORD = INC v183|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v188|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9354897578252553 condition: < trueDestination: B146 -> B147 falseDestination: B146 -> B150 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B147"
    from_bci -1
    to_bci -1
    predecessors "B146" 
    successors "B148" "B149" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4600674398023585731
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v186|DWORD, y: v185|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B147 -> B148 falseDestination: B147 -> B149 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B148"
    from_bci -1
    to_bci -1
    predecessors "B147" 
    successors "B145" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 1
    probability 4600674398023585731
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v182|QWORD[.] + 12], y: v187|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v184|QWORD[.] + v185|DWORD * 2 + 16] y: 32 size: WORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v189|DWORD, v184|QWORD[.], v187|DWORD] destination: B148 -> B145 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B150"
    from_bci -1
    to_bci -1
    predecessors "B146" 
    successors "B151" "B152" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4583383671135353628
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v190|DWORD = SHL v186|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v191|DWORD = LEA [v190|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v192|DWORD = SUB (x: v191|DWORD, ~y: v187|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v192|DWORD, y: v192|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v193|DWORD = CMOVE (falseValue: v191|DWORD, ~trueValue: v187|DWORD) condition: < <|@ <|@
      nr   -1  <|@ instruction CMP v193|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B150 -> B151 falseDestination: B150 -> B152 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B152"
    from_bci -1
    to_bci -1
    predecessors "B150" 
    successors "B153" "B154" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4583383671135353628
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v194|DWORD = MOVE input: int[2147483639|0x7ffffff7] <|@ <|@
      nr   -1  <|@ instruction v195|DWORD = SUB (x: v194|DWORD, ~y: v193|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v195|DWORD, y: v195|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B152 -> B153 falseDestination: B152 -> B154 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B154"
    from_bci -1
    to_bci -1
    predecessors "B152" 
    successors "B155" "B202" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4583383671135353628
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v193|DWORD, y: v185|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B154 -> B155 falseDestination: B154 -> B202 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B155"
    from_bci -1
    to_bci -1
    predecessors "B154" 
    successors "B156" "B159" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4583383671135353628
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v196|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v197|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v193|DWORD y: 16777215 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B155 -> B156 falseDestination: B155 -> B159 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B156"
    from_bci -1
    to_bci -1
    predecessors "B155" 
    successors "B157" "B158" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4582611026162660659
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v198|DWORD = SHL v193|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v199|DWORD = LEA [v198|DWORD + 23] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v200|DWORD = AND v199|DWORD y: -8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v201|QWORD = MOVSXD v200|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v202|QWORD = ADD (x: v201|QWORD, y: v196|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v202|QWORD, y: v197|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B156 -> B157 falseDestination: B156 -> B158 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B158"
    from_bci -1
    to_bci -1
    predecessors "B156" 
    successors "B161" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4582541488115118292
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v202|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v201|QWORD + v196|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v201|QWORD + v196|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v201|QWORD + v196|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v201|QWORD + v196|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v196|QWORD + 12], y: v193|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v196|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v196|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v203|QWORD[.] = MOVE v196|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v203|QWORD[.]] destination: B158 -> B161 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B161"
    from_bci -1
    to_bci -1
    predecessors "B158" "B160" 
    successors "B162" "B163" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4583383671135353628
    begin_IR
      LIR
      nr   -1  <|@ instruction [v205|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v193|DWORD, y: v186|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v206|DWORD = CMOVE (falseValue: v193|DWORD, ~trueValue: v186|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction v207|QWORD = MOVSXD v206|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v207|QWORD y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B161 -> B162 falseDestination: B161 -> B163 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B163"
    from_bci -1
    to_bci -1
    predecessors "B161" 
    successors "B164" "B165" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4578880071507983132
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v208|QWORD[.] = LEA [v205|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v209|QWORD[.] = LEA [v184|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v210|QWORD = LEA [v207|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v210|QWORD, y: v210|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B163 -> B164 falseDestination: B163 -> B165 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B164"
    from_bci -1
    to_bci -1
    predecessors "B163" 
    successors "B168" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4576948459076250709
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B164 -> B168 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B168"
    from_bci -1
    to_bci -1
    predecessors "B164" "B167" 
    successors "B169" "B170" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4578880071507983132
    begin_IR
      LIR
      nr   -1  <|@ instruction [v214|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v215|QWORD = LEA [v207|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v214|QWORD, y: v215|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B168 -> B169 falseDestination: B168 -> B170 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B170"
    from_bci -1
    to_bci -1
    predecessors "B168" 
    successors "B171" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4576948459076250709
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v216|V128_WORD = H [v209|QWORD[.] + v214|QWORD * 2] nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v208|QWORD[.] + v214|QWORD * 2], input: v216|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v217|QWORD = LEA [v214|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v217|QWORD] destination: B170 -> B171 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B171"
    from_bci -1
    to_bci -1
    predecessors "B170" "B169" 
    successors "B172" "B173" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4578880071507983132
    begin_IR
      LIR
      nr   -1  <|@ instruction [v218|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v219|QWORD = LEA [v207|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v218|QWORD, y: v219|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B171 -> B172 falseDestination: B171 -> B173 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B173"
    from_bci -1
    to_bci -1
    predecessors "B171" 
    successors "B174" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4576948459076250709
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v220|V64_WORD = H [v209|QWORD[.] + v218|QWORD * 2] nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction J (address: [v208|QWORD[.] + v218|QWORD * 2], input: v220|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v221|QWORD = LEA [v218|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v221|QWORD] destination: B173 -> B174 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B174"
    from_bci -1
    to_bci -1
    predecessors "B173" "B172" 
    successors "B175" "B176" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4578880071507983132
    begin_IR
      LIR
      nr   -1  <|@ instruction [v222|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v223|QWORD = LEA [v207|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v222|QWORD, y: v223|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B174 -> B175 falseDestination: B174 -> B176 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B176"
    from_bci -1
    to_bci -1
    predecessors "B174" 
    successors "B177" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4576948459076250709
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v224|V32_WORD = H [v209|QWORD[.] + v222|QWORD * 2] nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction J (address: [v208|QWORD[.] + v222|QWORD * 2], input: v224|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction v225|QWORD = LEA [v222|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v225|QWORD] destination: B176 -> B177 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B177"
    from_bci -1
    to_bci -1
    predecessors "B176" "B175" 
    successors "B178" "B179" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4578880071507983132
    begin_IR
      LIR
      nr   -1  <|@ instruction [v226|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v227|QWORD = DEC v207|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v226|QWORD, y: v227|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B177 -> B178 falseDestination: B177 -> B179 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B179"
    from_bci -1
    to_bci -1
    predecessors "B177" 
    successors "B180" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4576948459076250709
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v228|DWORD = MOVSX [v209|QWORD[.] + v226|QWORD * 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v208|QWORD[.] + v226|QWORD * 2], y: v228|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B179 -> B180 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B180"
    from_bci -1
    to_bci -1
    predecessors "B162" "B179" "B178" 
    successors "B181" "B199" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4583383671135353628
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v229|QWORD = MOVSXD v193|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v229|QWORD, y: v207|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B180 -> B181 falseDestination: B180 -> B199 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B199"
    from_bci -1
    to_bci -1
    predecessors "B180" 
    successors "B200" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4578880071507983132
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B199 -> B200 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B200"
    from_bci -1
    to_bci -1
    predecessors "B199" "B197" "B196" 
    successors "B145" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 1
    probability 4583383671135353628
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v347|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr   -1  <|@ instruction v246|DWORD[.] = COMPRESSPOINTER (input: v205|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@1d28dd80 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v182|QWORD[.] + 16], y: v246|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v247|QWORD[*] = SHR v182|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v247|QWORD[*] + v347|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v182|QWORD[.] + 12], y: v187|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v205|QWORD[.] + v185|DWORD * 2 + 16] y: 32 size: WORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v189|DWORD, v205|QWORD[.], v187|DWORD] destination: B200 -> B145 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B162"
    from_bci -1
    to_bci -1
    predecessors "B161" 
    successors "B180" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4578880071507983132
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B162 -> B180 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B181"
    from_bci -1
    to_bci -1
    predecessors "B180" 
    successors "B182" "B183" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4578880071507983132
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v230|QWORD[.] = LEA [v205|QWORD[.] + v207|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v231|QWORD = SUB (x: v229|QWORD, ~y: v207|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v232|QWORD = LEA [v231|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v232|QWORD, y: v232|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B181 -> B182 falseDestination: B181 -> B183 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B182"
    from_bci -1
    to_bci -1
    predecessors "B181" 
    successors "B186" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4576948459076250709
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B182 -> B186 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B186"
    from_bci -1
    to_bci -1
    predecessors "B182" "B185" 
    successors "B187" "B188" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4578880071507983132
    begin_IR
      LIR
      nr   -1  <|@ instruction [v235|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v236|QWORD = LEA [v231|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v235|QWORD, y: v236|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B186 -> B187 falseDestination: B186 -> B188 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B188"
    from_bci -1
    to_bci -1
    predecessors "B186" 
    successors "B189" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4576948459076250709
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v328|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v230|QWORD[.] + v235|QWORD * 2], input: v328|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v237|QWORD = LEA [v235|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v237|QWORD] destination: B188 -> B189 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B189"
    from_bci -1
    to_bci -1
    predecessors "B188" "B187" 
    successors "B190" "B191" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4578880071507983132
    begin_IR
      LIR
      nr   -1  <|@ instruction [v238|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v239|QWORD = LEA [v231|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v238|QWORD, y: v239|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B189 -> B190 falseDestination: B189 -> B191 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B191"
    from_bci -1
    to_bci -1
    predecessors "B189" 
    successors "B192" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4576948459076250709
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v324|V64_WORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v230|QWORD[.] + v238|QWORD * 2], input: v324|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v240|QWORD = LEA [v238|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v240|QWORD] destination: B191 -> B192 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B192"
    from_bci -1
    to_bci -1
    predecessors "B191" "B190" 
    successors "B193" "B194" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4578880071507983132
    begin_IR
      LIR
      nr   -1  <|@ instruction [v241|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v242|QWORD = LEA [v231|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v241|QWORD, y: v242|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B192 -> B193 falseDestination: B192 -> B194 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B194"
    from_bci -1
    to_bci -1
    predecessors "B192" 
    successors "B195" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4576948459076250709
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v320|V32_WORD = L oc: SIMD<0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v230|QWORD[.] + v241|QWORD * 2], input: v320|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction v243|QWORD = LEA [v241|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v243|QWORD] destination: B194 -> B195 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B195"
    from_bci -1
    to_bci -1
    predecessors "B194" "B193" 
    successors "B196" "B197" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4578880071507983132
    begin_IR
      LIR
      nr   -1  <|@ instruction [v244|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v245|QWORD = DEC v231|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v244|QWORD, y: v245|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B195 -> B196 falseDestination: B195 -> B197 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B197"
    from_bci -1
    to_bci -1
    predecessors "B195" 
    successors "B200" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4576948459076250709
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v230|QWORD[.] + v244|QWORD * 2], y: r12|ILLEGAL) size: WORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B197 -> B200 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B165"
    from_bci -1
    to_bci -1
    predecessors "B163" 
    successors "B166" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4569872872253242140
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B165 -> B166 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B201"
    from_bci -1
    to_bci -1
    predecessors "B166" 
    successors "B166" 
    xhandlers
    flags "lle" 
    loop_index 6
    loop_depth 2
    probability 4576948459076250709
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v213|QWORD] destination: B201 -> B166 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B166"
    from_bci -1
    to_bci -1
    predecessors "B165" "B201" 
    successors "B167" "B201" 
    xhandlers
    flags "llh" 
    loop_index 6
    loop_depth 2
    probability 4578880071507983132
    begin_IR
      LIR
      nr   -1  <|@ instruction [v211|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v212|V256_WORD = H [v209|QWORD[.] + v211|QWORD * 2] nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v208|QWORD[.] + v211|QWORD * 2], input: v212|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v213|QWORD = LEA [v211|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v213|QWORD, y: v210|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B166 -> B167 falseDestination: B166 -> B201 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B169"
    from_bci -1
    to_bci -1
    predecessors "B168" 
    successors "B171" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4569872872253242140
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v214|QWORD] destination: B169 -> B171 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B190"
    from_bci -1
    to_bci -1
    predecessors "B189" 
    successors "B192" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4569872872253242140
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v238|QWORD] destination: B190 -> B192 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B193"
    from_bci -1
    to_bci -1
    predecessors "B192" 
    successors "B195" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4569872872253242140
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v241|QWORD] destination: B193 -> B195 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B196"
    from_bci -1
    to_bci -1
    predecessors "B195" 
    successors "B200" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4569872872253242140
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B196 -> B200 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B167"
    from_bci -1
    to_bci -1
    predecessors "B166" 
    successors "B168" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4569872872253242140
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v213|QWORD] destination: B167 -> B168 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B172"
    from_bci -1
    to_bci -1
    predecessors "B171" 
    successors "B174" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4569872872253242140
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v218|QWORD] destination: B172 -> B174 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B178"
    from_bci -1
    to_bci -1
    predecessors "B177" 
    successors "B180" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4569872872253242140
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B178 -> B180 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B183"
    from_bci -1
    to_bci -1
    predecessors "B181" 
    successors "B184" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4569872872253242140
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v332|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B183 -> B184 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B198"
    from_bci -1
    to_bci -1
    predecessors "B184" 
    successors "B184" 
    xhandlers
    flags "lle" 
    loop_index 7
    loop_depth 2
    probability 4576948459076250709
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v234|QWORD] destination: B198 -> B184 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B184"
    from_bci -1
    to_bci -1
    predecessors "B183" "B198" 
    successors "B185" "B198" 
    xhandlers
    flags "llh" 
    loop_index 7
    loop_depth 2
    probability 4578880071507983132
    begin_IR
      LIR
      nr   -1  <|@ instruction [v233|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v230|QWORD[.] + v233|QWORD * 2], input: v332|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v234|QWORD = LEA [v233|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v234|QWORD, y: v232|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B184 -> B185 falseDestination: B184 -> B198 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B187"
    from_bci -1
    to_bci -1
    predecessors "B186" 
    successors "B189" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4569872872253242140
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v235|QWORD] destination: B187 -> B189 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B175"
    from_bci -1
    to_bci -1
    predecessors "B174" 
    successors "B177" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4569872872253242140
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v222|QWORD] destination: B175 -> B177 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B185"
    from_bci -1
    to_bci -1
    predecessors "B184" 
    successors "B186" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4569872872253242140
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v234|QWORD] destination: B185 -> B186 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B159"
    from_bci -1
    to_bci -1
    predecessors "B155" 
    successors "B160" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4568327582307856200
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B159 -> B160 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B160"
    from_bci -1
    to_bci -1
    predecessors "B159" "B157" 
    successors "B161" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4568883886688195138
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v336|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v336|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v193|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FormatSpecifier.justify(Formatter.java:2926) [bci: 80]
locals: - - v182|QWORD[.] - v14|DWORD v183|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:80] <|@ <|@
      nr   -1  <|@ instruction v204|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v204|QWORD[.]] destination: B160 -> B161 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B157"
    from_bci -1
    to_bci -1
    predecessors "B156" 
    successors "B160" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4553032894102253477
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B157 -> B160 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B204"
    from_bci -1
    to_bci -1
    predecessors "B145" 
    successors "B206" 
    xhandlers
    flags 
    probability 4588182886451812978
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v184|QWORD[.], v185|DWORD, v182|QWORD[.]] destination: B204 -> B206 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B254"
    from_bci -1
    to_bci -1
    predecessors "B253" 
    successors "B256" 
    xhandlers
    flags 
    probability 4585056867508815770
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v307|QWORD] destination: B254 -> B256 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B257"
    from_bci -1
    to_bci -1
    predecessors "B256" 
    successors "B261" 
    xhandlers
    flags 
    probability 4585056867508815770
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B257 -> B261 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B248"
    from_bci -1
    to_bci -1
    predecessors "B247" 
    successors "B250" 
    xhandlers
    flags 
    probability 4585056867508815770
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v301|QWORD] destination: B248 -> B250 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B251"
    from_bci -1
    to_bci -1
    predecessors "B250" 
    successors "B253" 
    xhandlers
    flags 
    probability 4585056867508815770
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v304|QWORD] destination: B251 -> B253 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B244"
    from_bci -1
    to_bci -1
    predecessors "B242" 
    successors "B245" 
    xhandlers
    flags 
    probability 4585056867508815770
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v331|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B244 -> B245 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B259"
    from_bci -1
    to_bci -1
    predecessors "B245" 
    successors "B245" 
    xhandlers
    flags "lle" 
    loop_index 9
    loop_depth 1
    probability 4592008490372696935
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v300|QWORD] destination: B259 -> B245 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B245"
    from_bci -1
    to_bci -1
    predecessors "B244" "B259" 
    successors "B246" "B259" 
    xhandlers
    flags "llh" 
    loop_index 9
    loop_depth 1
    probability 4594064066763556762
    begin_IR
      LIR
      nr   -1  <|@ instruction [v299|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v296|QWORD[.] + v299|QWORD * 2], input: v331|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v300|QWORD = LEA [v299|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v300|QWORD, y: v298|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B245 -> B246 falseDestination: B245 -> B259 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B239"
    from_bci -1
    to_bci -1
    predecessors "B238" 
    successors "B241" 
    xhandlers
    flags 
    probability 4585056867508815770
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B239 -> B241 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B246"
    from_bci -1
    to_bci -1
    predecessors "B245" 
    successors "B247" 
    xhandlers
    flags 
    probability 4585056867508815770
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v300|QWORD] destination: B246 -> B247 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B236"
    from_bci -1
    to_bci -1
    predecessors "B235" 
    successors "B238" 
    xhandlers
    flags 
    probability 4585056867508815770
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v288|QWORD] destination: B236 -> B238 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B230"
    from_bci -1
    to_bci -1
    predecessors "B229" 
    successors "B232" 
    xhandlers
    flags 
    probability 4585056867508815770
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v280|QWORD] destination: B230 -> B232 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B233"
    from_bci -1
    to_bci -1
    predecessors "B232" 
    successors "B235" 
    xhandlers
    flags 
    probability 4585056867508815770
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v284|QWORD] destination: B233 -> B235 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B226"
    from_bci -1
    to_bci -1
    predecessors "B224" 
    successors "B227" 
    xhandlers
    flags 
    probability 4585056867508815770
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B226 -> B227 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B265"
    from_bci -1
    to_bci -1
    predecessors "B227" 
    successors "B227" 
    xhandlers
    flags "lle" 
    loop_index 8
    loop_depth 1
    probability 4592008490372696935
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v279|QWORD] destination: B265 -> B227 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B227"
    from_bci -1
    to_bci -1
    predecessors "B226" "B265" 
    successors "B228" "B265" 
    xhandlers
    flags "llh" 
    loop_index 8
    loop_depth 1
    probability 4594064066763556762
    begin_IR
      LIR
      nr   -1  <|@ instruction [v277|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v278|V256_WORD = H [v275|QWORD[.] + v277|QWORD * 2] nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v274|QWORD[.] + v277|QWORD * 2], input: v278|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v279|QWORD = LEA [v277|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v279|QWORD, y: v276|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B227 -> B228 falseDestination: B227 -> B265 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B228"
    from_bci -1
    to_bci -1
    predecessors "B227" 
    successors "B229" 
    xhandlers
    flags 
    probability 4585056867508815770
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v279|QWORD] destination: B228 -> B229 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B207"
    from_bci -1
    to_bci -1
    predecessors "B206" 
    successors "B208" "B209" 
    xhandlers
    flags 
    probability 4583674350779409410
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v250|DWORD, y: v250|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B207 -> B208 falseDestination: B207 -> B209 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B209"
    from_bci -1
    to_bci -1
    predecessors "B207" 
    successors "B210" "B211" 
    xhandlers
    flags 
    probability 4583674350779409410
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v253|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v254|QWORD = LEA [v253|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v254|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B209 -> B210 falseDestination: B209 -> B211 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B211"
    from_bci -1
    to_bci -1
    predecessors "B209" 
    successors "B212" 
    xhandlers
    flags 
    probability 4583594179485699555
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v254|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v253|QWORD + 216] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v253|QWORD] destination: B211 -> B212 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B212"
    from_bci -1
    to_bci -1
    predecessors "B211" "B210" 
    successors 
    xhandlers
    flags 
    probability 4583674350779409410
    begin_IR
      LIR
      nr   -1  <|@ instruction [v256|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v257|QWORD[.] = MOVE v256|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v258|QWORD = MOV [v252|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v256|QWORD[*]], y: v258|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v256|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV [v256|QWORD[*] + 12] y: -559030611 size: DWORD c: NarrowOop[char[0]{}] <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v256|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v257|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B220"
    from_bci -1
    to_bci -1
    predecessors "B216" 
    successors "B221" 
    xhandlers
    flags 
    probability 4583490895765258075
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B220 -> B221 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B221"
    from_bci -1
    to_bci -1
    predecessors "B220" "B218" 
    successors "B222" 
    xhandlers
    flags 
    probability 4584195926457373148
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v335|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v335|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v250|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FormatSpecifier.justify(Formatter.java:2927) [bci: 100]
locals: - - v251|QWORD[.] - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:100] <|@ <|@
      nr   -1  <|@ instruction v270|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v270|QWORD[.]] destination: B221 -> B222 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B85" "B86" 
    xhandlers
    flags 
    probability 4581235090039285951
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v112|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v113|QWORD = LEA [v112|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v113|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B84 -> B85 falseDestination: B84 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B87" 
    xhandlers
    flags 
    probability 4581179311352977331
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v113|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v112|QWORD + 216] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v112|QWORD] destination: B86 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B86" "B85" 
    successors "B88" "B89" 
    xhandlers
    flags 
    probability 4581235090039285951
    begin_IR
      LIR
      nr   -1  <|@ instruction [v115|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v116|QWORD[.] = MOVE v115|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v117|QWORD = MOV [v100|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v115|QWORD[*]], y: v117|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v115|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v115|QWORD[*] + 12], y: v93|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v115|QWORD[*] + 16], y: v95|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v116|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v96|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
stack: v116|QWORD[.] v91|QWORD[.] 
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
locals: v116|QWORD[.] v1|QWORD[.] v5|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
locals: v116|QWORD[.] - 
java.util.Formatter$FormatSpecifier.justify(Formatter.java:2924) [bci: 69]
locals: - - v116|QWORD[.] v12|DWORD v14|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractStringBuilder.newCapacity(int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:17, 21, 2, 69] <|@ <|@
      nr   -1  <|@ instruction v118|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v119|DWORD[.] = MOV [v1|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
stack: v116|QWORD[.] v91|QWORD[.] v118|DWORD 
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
locals: v116|QWORD[.] v1|QWORD[.] v5|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
locals: v116|QWORD[.] - 
java.util.Formatter$FormatSpecifier.justify(Formatter.java:2924) [bci: 69]
locals: - - v116|QWORD[.] v12|DWORD v14|DWORD - 
>@ <|@ instruction CMP (x: v5|DWORD, y: [v119|DWORD[.] * 8 + 12]) size: DWORD state [bci:20, 21, 2, 69] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: |>| trueDestination: B87 -> B88 falseDestination: B87 -> B89 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B90" "B92" 
    xhandlers
    flags 
    probability 4581235090039285951
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v118|DWORD, y: v118|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B89 -> B90 falseDestination: B89 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B89" 
    successors "B93" "B96" 
    xhandlers
    flags 
    probability 4581235090039285951
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v348|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr   -1  <|@ instruction v121|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v122|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v118|DWORD y: 16777215 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B92 -> B93 falseDestination: B92 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B94" "B95" 
    xhandlers
    flags 
    probability 4580677303176199750
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v123|DWORD = SHL v118|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v124|DWORD = LEA [v123|DWORD + 23] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v125|DWORD = AND v124|DWORD y: -8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v126|QWORD = MOVSXD v125|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v127|QWORD = ADD (x: v126|QWORD, y: v121|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v127|QWORD, y: v122|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B93 -> B94 falseDestination: B93 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B98" 
    xhandlers
    flags 
    probability 4580627102358521992
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v127|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v126|QWORD + v121|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v126|QWORD + v121|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v126|QWORD + v121|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v126|QWORD + v121|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v121|QWORD + 12], y: v118|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v121|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v121|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v128|QWORD[.] = MOVE v121|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v128|QWORD[.]] destination: B95 -> B98 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B95" "B97" 
    successors "B99" "B100" 
    xhandlers
    flags 
    probability 4581235090039285952
    begin_IR
      LIR
      nr   -1  <|@ instruction [v130|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v118|DWORD, y: v94|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v131|DWORD = CMOVE (falseValue: v118|DWORD, ~trueValue: v94|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction v132|QWORD = MOVSXD v131|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v132|QWORD y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B98 -> B99 falseDestination: B98 -> B100 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B98" 
    successors "B101" "B102" 
    xhandlers
    flags 
    probability 4576731490411915456
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v133|QWORD[.] = LEA [v130|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v134|QWORD[.] = LEA [v91|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v135|QWORD = LEA [v132|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v135|QWORD, y: v135|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B100 -> B101 falseDestination: B100 -> B102 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B105" 
    xhandlers
    flags 
    probability 4575016825099975968
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B101 -> B105 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B101" "B104" 
    successors "B106" "B107" 
    xhandlers
    flags 
    probability 4576731490411915456
    begin_IR
      LIR
      nr   -1  <|@ instruction [v139|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v140|QWORD = LEA [v132|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v139|QWORD, y: v140|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B105 -> B106 falseDestination: B105 -> B107 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B105" 
    successors "B108" 
    xhandlers
    flags 
    probability 4575016825099975968
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v141|V128_WORD = H [v134|QWORD[.] + v139|QWORD * 2] nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v133|QWORD[.] + v139|QWORD * 2], input: v141|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v142|QWORD = LEA [v139|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v142|QWORD] destination: B107 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B107" "B106" 
    successors "B109" "B110" 
    xhandlers
    flags 
    probability 4576731490411915456
    begin_IR
      LIR
      nr   -1  <|@ instruction [v143|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v144|QWORD = LEA [v132|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v143|QWORD, y: v144|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B108 -> B109 falseDestination: B108 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B111" 
    xhandlers
    flags 
    probability 4575016825099975968
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v145|V64_WORD = H [v134|QWORD[.] + v143|QWORD * 2] nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction J (address: [v133|QWORD[.] + v143|QWORD * 2], input: v145|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v146|QWORD = LEA [v143|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v146|QWORD] destination: B110 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B110" "B109" 
    successors "B112" "B113" 
    xhandlers
    flags 
    probability 4576731490411915456
    begin_IR
      LIR
      nr   -1  <|@ instruction [v147|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v148|QWORD = LEA [v132|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v147|QWORD, y: v148|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B111 -> B112 falseDestination: B111 -> B113 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B114" 
    xhandlers
    flags 
    probability 4575016825099975968
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v149|V32_WORD = H [v134|QWORD[.] + v147|QWORD * 2] nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction J (address: [v133|QWORD[.] + v147|QWORD * 2], input: v149|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction v150|QWORD = LEA [v147|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v150|QWORD] destination: B113 -> B114 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B113" "B112" 
    successors "B115" "B116" 
    xhandlers
    flags 
    probability 4576731490411915456
    begin_IR
      LIR
      nr   -1  <|@ instruction [v151|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v152|QWORD = DEC v132|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v151|QWORD, y: v152|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B114 -> B115 falseDestination: B114 -> B116 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors "B117" 
    xhandlers
    flags 
    probability 4575016825099975968
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v153|DWORD = MOVSX [v134|QWORD[.] + v151|QWORD * 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v133|QWORD[.] + v151|QWORD * 2], y: v153|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B116 -> B117 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B99" "B116" "B115" 
    successors "B118" "B136" 
    xhandlers
    flags 
    probability 4581235090039285952
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v154|QWORD = MOVSXD v118|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v154|QWORD, y: v132|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B117 -> B118 falseDestination: B117 -> B136 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B136"
    from_bci -1
    to_bci -1
    predecessors "B117" 
    successors "B137" 
    xhandlers
    flags 
    probability 4576731490411915456
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B136 -> B137 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B137"
    from_bci -1
    to_bci -1
    predecessors "B136" "B134" "B133" 
    successors "B138" "B139" 
    xhandlers
    flags 
    probability 4581235090039285952
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v171|DWORD[.] = COMPRESSPOINTER (input: v130|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@1d28dd80 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v116|QWORD[.] + 16], y: v171|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v172|QWORD[*] = SHR v116|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v172|QWORD[*] + v348|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v173|DWORD = MOV [v116|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v173|DWORD, y: v173|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B137 -> B138 falseDestination: B137 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B139"
    from_bci -1
    to_bci -1
    predecessors "B137" 
    successors "B140" "B142" 
    xhandlers
    flags 
    probability 4581179311352977332
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v174|DWORD = SUB (x: v118|DWORD, ~y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v173|DWORD, y: v174|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B139 -> B140 falseDestination: B139 -> B142 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B142"
    from_bci -1
    to_bci -1
    predecessors "B139" 
    successors "B143" "B205" 
    xhandlers
    flags 
    probability 4581124090453531798
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v175|QWORD[.] = UNCOMPRESSPOINTER (input: v119|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1d28dd80 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v176|QWORD[*] = MOVE v175|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v177|QWORD[*] = MOVE v130|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v178|QWORD = MOVSXD v173|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA [v176|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA [v177|QWORD[*] + v178|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE v98|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charArraycopy(Word,Word,Word)void@0x106812d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v179|DWORD = ADD (x: v5|DWORD, y: v173|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v116|QWORD[.] + 12], y: v179|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v10|DWORD, y: v11|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.18579515065073993 condition: = trueDestination: B142 -> B143 falseDestination: B142 -> B205 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B205"
    from_bci -1
    to_bci -1
    predecessors "B142" 
    successors "B206" 
    xhandlers
    flags 
    probability 4580055924355621800
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v130|QWORD[.], v179|DWORD, v116|QWORD[.]] destination: B205 -> B206 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B98" 
    successors "B117" 
    xhandlers
    flags 
    probability 4576731490411915456
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B99 -> B117 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B117" 
    successors "B119" "B120" 
    xhandlers
    flags 
    probability 4576731490411915456
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v155|QWORD[.] = LEA [v130|QWORD[.] + v132|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v156|QWORD = SUB (x: v154|QWORD, ~y: v132|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v157|QWORD = LEA [v156|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v157|QWORD, y: v157|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B118 -> B119 falseDestination: B118 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B118" 
    successors "B123" 
    xhandlers
    flags 
    probability 4575016825099975968
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B119 -> B123 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B123"
    from_bci -1
    to_bci -1
    predecessors "B119" "B122" 
    successors "B124" "B125" 
    xhandlers
    flags 
    probability 4576731490411915456
    begin_IR
      LIR
      nr   -1  <|@ instruction [v160|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v161|QWORD = LEA [v156|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v160|QWORD, y: v161|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B123 -> B124 falseDestination: B123 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B125"
    from_bci -1
    to_bci -1
    predecessors "B123" 
    successors "B126" 
    xhandlers
    flags 
    probability 4575016825099975968
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v329|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v155|QWORD[.] + v160|QWORD * 2], input: v329|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v162|QWORD = LEA [v160|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v162|QWORD] destination: B125 -> B126 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B126"
    from_bci -1
    to_bci -1
    predecessors "B125" "B124" 
    successors "B127" "B128" 
    xhandlers
    flags 
    probability 4576731490411915456
    begin_IR
      LIR
      nr   -1  <|@ instruction [v163|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v164|QWORD = LEA [v156|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v163|QWORD, y: v164|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B126 -> B127 falseDestination: B126 -> B128 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B128"
    from_bci -1
    to_bci -1
    predecessors "B126" 
    successors "B129" 
    xhandlers
    flags 
    probability 4575016825099975968
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v325|V64_WORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v155|QWORD[.] + v163|QWORD * 2], input: v325|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v165|QWORD = LEA [v163|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v165|QWORD] destination: B128 -> B129 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B129"
    from_bci -1
    to_bci -1
    predecessors "B128" "B127" 
    successors "B130" "B131" 
    xhandlers
    flags 
    probability 4576731490411915456
    begin_IR
      LIR
      nr   -1  <|@ instruction [v166|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v167|QWORD = LEA [v156|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v166|QWORD, y: v167|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B129 -> B130 falseDestination: B129 -> B131 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B131"
    from_bci -1
    to_bci -1
    predecessors "B129" 
    successors "B132" 
    xhandlers
    flags 
    probability 4575016825099975968
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v321|V32_WORD = L oc: SIMD<0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v155|QWORD[.] + v166|QWORD * 2], input: v321|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction v168|QWORD = LEA [v166|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v168|QWORD] destination: B131 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B132"
    from_bci -1
    to_bci -1
    predecessors "B131" "B130" 
    successors "B133" "B134" 
    xhandlers
    flags 
    probability 4576731490411915456
    begin_IR
      LIR
      nr   -1  <|@ instruction [v169|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v170|QWORD = DEC v156|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v169|QWORD, y: v170|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B132 -> B133 falseDestination: B132 -> B134 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B134"
    from_bci -1
    to_bci -1
    predecessors "B132" 
    successors "B137" 
    xhandlers
    flags 
    probability 4575016825099975968
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v155|QWORD[.] + v169|QWORD * 2], y: r12|ILLEGAL) size: WORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B134 -> B137 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B143"
    from_bci -1
    to_bci -1
    predecessors "B142" 
    successors "B144" 
    xhandlers
    flags 
    probability 4570272164588901904
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v179|DWORD, v130|QWORD[.], v116|QWORD[.]] destination: B143 -> B144 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4569166477141788452
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v345|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v345|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[8|0x8] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FormatSpecifier.justify(Formatter.java:2917) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v25|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v25|QWORD[.]] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B81" 
    xhandlers
    flags 
    probability 4568617382837849976
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v344|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v344|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.getChars(String.java:827) [bci: 61]
locals: - - - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
locals: vobject:StringBuilder:0{count=v93|DWORD,value=v91|QWORD[.]} - v5|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
locals: vobject:StringBuilder:0{count=v93|DWORD,value=v91|QWORD[.]} - 
java.util.Formatter$FormatSpecifier.justify(Formatter.java:2924) [bci: 69]
locals: - - vobject:StringBuilder:0{count=v93|DWORD,value=v91|QWORD[.]} v12|DWORD v14|DWORD - 
vobject:StringBuilder:0{count=v93|DWORD,value=v91|QWORD[.]} Ljava/lang/StringBuilder; v93|DWORD v91|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:61, 35, 2, 69] <|@ <|@
      nr   -1  <|@ instruction v108|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v108|QWORD[.]] destination: B79 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B262"
    from_bci -1
    to_bci -1
    predecessors "B261" 
    successors "B264" 
    xhandlers
    flags 
    probability 4568413362011779766
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v341|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v341|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FormatSpecifier.justify(Formatter.java:2927) [bci: 100]
locals: - - v251|QWORD[.] - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:100] <|@ <|@
      nr   -1  <|@ instruction v314|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v314|QWORD[.]] destination: B262 -> B264 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B218"
    from_bci -1
    to_bci -1
    predecessors "B217" 
    successors "B221" 
    xhandlers
    flags 
    probability 4567786668063233035
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B218 -> B221 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B114" 
    xhandlers
    flags 
    probability 4567724291157174464
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v147|QWORD] destination: B112 -> B114 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors "B117" 
    xhandlers
    flags 
    probability 4567724291157174464
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B115 -> B117 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B105" 
    successors "B108" 
    xhandlers
    flags 
    probability 4567724291157174464
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v139|QWORD] destination: B106 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B111" 
    xhandlers
    flags 
    probability 4567724291157174464
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v143|QWORD] destination: B109 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B103" 
    xhandlers
    flags 
    probability 4567724291157174464
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B102 -> B103 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B266"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B103" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4575016825099975968
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v138|QWORD] destination: B266 -> B103 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B102" "B266" 
    successors "B104" "B266" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4576731490411915456
    begin_IR
      LIR
      nr   -1  <|@ instruction [v136|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v137|V256_WORD = H [v134|QWORD[.] + v136|QWORD * 2] nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v133|QWORD[.] + v136|QWORD * 2], input: v137|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v138|QWORD = LEA [v136|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v138|QWORD, y: v135|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B103 -> B104 falseDestination: B103 -> B266 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B133"
    from_bci -1
    to_bci -1
    predecessors "B132" 
    successors "B137" 
    xhandlers
    flags 
    probability 4567724291157174464
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B133 -> B137 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B105" 
    xhandlers
    flags 
    probability 4567724291157174464
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v138|QWORD] destination: B104 -> B105 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B130"
    from_bci -1
    to_bci -1
    predecessors "B129" 
    successors "B132" 
    xhandlers
    flags 
    probability 4567724291157174464
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v166|QWORD] destination: B130 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B118" 
    successors "B121" 
    xhandlers
    flags 
    probability 4567724291157174464
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v333|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B120 -> B121 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B135"
    from_bci -1
    to_bci -1
    predecessors "B121" 
    successors "B121" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4575016825099975968
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v159|QWORD] destination: B135 -> B121 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B120" "B135" 
    successors "B122" "B135" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4576731490411915456
    begin_IR
      LIR
      nr   -1  <|@ instruction [v158|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v155|QWORD[.] + v158|QWORD * 2], input: v333|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v159|QWORD = LEA [v158|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v159|QWORD, y: v157|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B121 -> B122 falseDestination: B121 -> B135 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B127"
    from_bci -1
    to_bci -1
    predecessors "B126" 
    successors "B129" 
    xhandlers
    flags 
    probability 4567724291157174464
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v163|QWORD] destination: B127 -> B129 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B121" 
    successors "B123" 
    xhandlers
    flags 
    probability 4567724291157174464
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v159|QWORD] destination: B122 -> B123 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B124"
    from_bci -1
    to_bci -1
    predecessors "B123" 
    successors "B126" 
    xhandlers
    flags 
    probability 4567724291157174464
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v160|QWORD] destination: B124 -> B126 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B97" 
    xhandlers
    flags 
    probability 4566567412708321174
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B96 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B96" "B94" 
    successors "B98" 
    xhandlers
    flags 
    probability 4567010323972424124
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v337|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v337|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v118|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
stack: v116|QWORD[.] v91|QWORD[.] v118|DWORD 
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
locals: v116|QWORD[.] v1|QWORD[.] v5|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
locals: v116|QWORD[.] - 
java.util.Formatter$FormatSpecifier.justify(Formatter.java:2924) [bci: 69]
locals: - - v116|QWORD[.] v12|DWORD v14|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:20, 21, 2, 69] <|@ <|@
      nr   -1  <|@ instruction v129|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v129|QWORD[.]] destination: B97 -> B98 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4559557624972199865
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v346|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v346|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[8|0x8] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FormatSpecifier.justify(Formatter.java:2917) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v22|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v22|QWORD[.]] destination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B210"
    from_bci -1
    to_bci -1
    predecessors "B209" 
    successors "B212" 
    xhandlers
    flags 
    probability 4553766586441631668
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v342|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v342|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FormatSpecifier.justify(Formatter.java:2927) [bci: 100]
locals: - - v251|QWORD[.] - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:100] <|@ <|@
      nr   -1  <|@ instruction v255|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v255|QWORD[.]] destination: B210 -> B212 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B138"
    from_bci -1
    to_bci -1
    predecessors "B137" 
    successors "B141" 
    xhandlers
    flags 
    probability 4551271695864333851
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B138 -> B141 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B141"
    from_bci -1
    to_bci -1
    predecessors "B138" "B140" 
    successors 
    xhandlers
    flags 
    probability 4555739597132466830
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -224097 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:127) [bci: 26]
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
locals: v116|QWORD[.] v1|QWORD[.] v5|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
locals: v116|QWORD[.] - 
java.util.Formatter$FormatSpecifier.justify(Formatter.java:2924) [bci: 69]
locals: - - v116|QWORD[.] v12|DWORD v14|DWORD - 
>@ <|@ instruction DEOPT info [bci:26, 21, 2, 69] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B87" 
    xhandlers
    flags 
    probability 4551271695864333850
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v343|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v343|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FormatSpecifier.justify(Formatter.java:2924) [bci: 67]
locals: - v1|QWORD[.] vobject:StringBuilder:0{count=v93|DWORD,value=v91|QWORD[.]} v12|DWORD v14|DWORD - 
vobject:StringBuilder:0{count=v93|DWORD,value=v91|QWORD[.]} Ljava/lang/StringBuilder; v93|DWORD v91|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:67] <|@ <|@
      nr   -1  <|@ instruction v114|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v114|QWORD[.]] destination: B85 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B140"
    from_bci -1
    to_bci -1
    predecessors "B139" 
    successors "B141" 
    xhandlers
    flags 
    probability 4551200299145858817
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B140 -> B141 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B97" 
    xhandlers
    flags 
    probability 4550557728679583512
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B94 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -208993 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FormatSpecifier.justify(Formatter.java:2924) [bci: 67]
locals: - v1|QWORD[.] vobject:StringBuilder:0{count=v93|DWORD,value=v91|QWORD[.]} v12|DWORD v14|DWORD - 
vobject:StringBuilder:0{count=v93|DWORD,value=v91|QWORD[.]} Ljava/lang/StringBuilder; v93|DWORD v91|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:67] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B89" 
    successors "B91" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-317537|0xfffffffffffb279f]] destination: B90 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B88" "B90" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v120|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v120|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
stack: v116|QWORD[.] v91|QWORD[.] v118|DWORD 
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
locals: v116|QWORD[.] v1|QWORD[.] v5|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
locals: v116|QWORD[.] - 
java.util.Formatter$FormatSpecifier.justify(Formatter.java:2924) [bci: 69]
locals: - - v116|QWORD[.] v12|DWORD v14|DWORD - 
>@ <|@ instruction DEOPT info [bci:20, 21, 2, 69] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B202"
    from_bci -1
    to_bci -1
    predecessors "B154" 
    successors "B203" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-232219|0xfffffffffffc74e5]] destination: B202 -> B203 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B203"
    from_bci -1
    to_bci -1
    predecessors "B149" "B151" "B153" "B202" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr   -1  <|@ instruction [v248|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v248|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FormatSpecifier.justify(Formatter.java:2926) [bci: 80]
locals: - - v182|QWORD[.] - v14|DWORD v183|DWORD 
>@ <|@ instruction DEOPT info [bci:80] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B91" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-215571|0xfffffffffffcb5ed]] destination: B88 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -193803 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FormatSpecifier.justify(Formatter.java:2917) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B73" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-198163|0xfffffffffffcf9ed]] destination: B23 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B19" "B21" "B23" "B72" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr   -1  <|@ instruction [v90|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v90|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FormatSpecifier.justify(Formatter.java:2923) [bci: 47]
locals: - v1|QWORD[.] vobject:StringBuilder:0{count=v30|DWORD,value=v29|QWORD[.]} v12|DWORD v14|DWORD v30|DWORD 
vobject:StringBuilder:0{count=v30|DWORD,value=v29|QWORD[.]} Ljava/lang/StringBuilder; v30|DWORD v29|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:47] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B153"
    from_bci -1
    to_bci -1
    predecessors "B152" 
    successors "B203" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-230675|0xfffffffffffc7aed]] destination: B153 -> B203 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B208"
    from_bci -1
    to_bci -1
    predecessors "B207" 
    successors "B215" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-234003|0xfffffffffffc6ded]] destination: B208 -> B215 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B215"
    from_bci -1
    to_bci -1
    predecessors "B208" "B214" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v261|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v261|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FormatSpecifier.justify(Formatter.java:2927) [bci: 100]
locals: - - v251|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:100] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B151"
    from_bci -1
    to_bci -1
    predecessors "B150" 
    successors "B203" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-230419|0xfffffffffffc7bed]] destination: B151 -> B203 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B149"
    from_bci -1
    to_bci -1
    predecessors "B147" 
    successors "B203" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-228635|0xfffffffffffc82e5]] destination: B149 -> B203 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B214"
    from_bci -1
    to_bci -1
    predecessors "B213" 
    successors "B215" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-235027|0xfffffffffffc69ed]] destination: B214 -> B215 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B73" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-195867|0xfffffffffffd02e5]] destination: B19 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B73" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-197907|0xfffffffffffcfaed]] destination: B21 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B73" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-198683|0xfffffffffffcf7e5]] destination: B72 -> B73 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #10         // width:int
     4: iconst_m1     
     5: if_icmpne     10
     8: aload_1       
     9: areturn       
    10: new           #125        // java.lang.StringBuilder
    13: dup           
    14: invokespecial #100        // java.lang.StringBuilder.<init>:()void
    17: astore_2      
    18: aload_0       
    19: getfield      #7          // f:java.util.Formatter$Flags
    22: getstatic     #101        // java.util.Formatter$Flags.LEFT_JUSTIFY:java.util.Formatter$Flags
    25: invokevirtual #9          // java.util.Formatter$Flags.contains:(java.util.Formatter$Flags)boolean
    28: istore_3      
    29: aload_0       
    30: getfield      #10         // width:int
    33: aload_1       
    34: invokevirtual #0          // java.lang.String.length:()int
    37: isub          
    38: istore        4
    40: iload_3       
    41: ifne          67
    44: iconst_0      
    45: istore        5
    47: iload         5
    49: iload         4
    51: if_icmpge     67
    54: aload_2       
    55: bipush        32
    57: invokevirtual #102        // java.lang.StringBuilder.append:(char)java.lang.StringBuilder
    60: pop           
    61: iinc          
    64: goto          47
    67: aload_2       
    68: aload_1       
    69: invokevirtual #103        // java.lang.StringBuilder.append:(java.lang.String)java.lang.StringBuilder
    72: pop           
    73: iload_3       
    74: ifeq          100
    77: iconst_0      
    78: istore        5
    80: iload         5
    82: iload         4
    84: if_icmpge     100
    87: aload_2       
    88: bipush        32
    90: invokevirtual #102        // java.lang.StringBuilder.append:(char)java.lang.StringBuilder
    93: pop           
    94: iinc          
    97: goto          80
   100: aload_2       
   101: invokevirtual #104        // java.lang.StringBuilder.toString:()java.lang.String
   104: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@4182771d slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction rsi|DWORD = MOV [r13|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   10  <|@ instruction CMP rsi|DWORD y: -1 size: DWORD <|@ <|@
      nr   12  <|@ instruction BRANCH trueDestinationProbability: 0.6259652107203015 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4603813412924770104
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   16  <|@ instruction rax|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   18  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4600409631668400528
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   22  <|@ instruction stack:32|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction rcx|DWORD[.] = MOV [r13|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   26  <|@ st <@st|@reference-map: [rcx:0, rdx:0, r13:0, stack:96]
live-base-pointers: []
java.util.Formatter$FormatSpecifier.justify(Formatter.java:2917) [bci: 0]
locals: r13|QWORD[.] rdx|QWORD[.] - - - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + rcx|DWORD[.] * 8] state [bci:0] <|@ <|@
      nr   28  <|@ st <@st|@reference-map: [rcx:0, rdx:0, r13:0, stack:96]
live-base-pointers: []
java.util.Formatter$FormatSpecifier.justify(Formatter.java:2917) [bci: 0]
locals: r13|QWORD[.] rdx|QWORD[.] - - - - 
>@ <|@ instruction r14|DWORD[.] = MOV [rdx|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   30  <|@ instruction stack:36|DWORD[.] = MOVE r14|DWORD[.] moveKind: DWORD <|@ <|@
      nr   32  <|@ instruction TEST (x: r14|DWORD[.], y: r14|DWORD[.]) size: DWORD <|@ <|@
      nr   34  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B9" 
    xhandlers
    flags 
    probability 4600409631668400528
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   46  <|@ instruction r10|DWORD = MOV [r14|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   48  <|@ instruction stack:40|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr   50  <|@ instruction r11|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   52  <|@ instruction r8|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   54  <|@ instruction rcx|DWORD = MOV [rcx|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   56  <|@ instruction r9|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Formatter.Flags@122446495] <|@ <|@
      nr   58  <|@ instruction r9|DWORD = MOV [r9|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   60  <|@ instruction stack:44|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr   62  <|@ instruction rcx|DWORD = AND (x: rcx|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr   64  <|@ instruction stack:48|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr   66  <|@ instruction CMP (x: r9|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr   68  <|@ instruction rbx|DWORD = SETCC condition: = <|@ <|@
      nr   70  <|@ instruction stack:52|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr   72  <|@ instruction rdi|QWORD = LEA [r11|QWORD + 48] size: QWORD <|@ <|@
      nr   74  <|@ instruction rsi|DWORD = SUB (x: rsi|DWORD, ~y: r10|DWORD) size: DWORD <|@ <|@
      nr   76  <|@ instruction stack:56|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr   78  <|@ instruction CMP (x: r9|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr   80  <|@ instruction BRANCH trueDestinationProbability: 0.18604807005003576 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4599156037586246543
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  140  <|@ instruction CMP (x: rdi|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr  142  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4599101193409563137
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  174  <|@ instruction MOV (x: [r15|QWORD + 96], y: rdi|QWORD) size: QWORD <|@ <|@
      nr  176  <|@ instruction AMD64PREFETCH ~[r11|QWORD + 240] instr: 0 <|@ <|@
      nr  178  <|@ instruction r13|QWORD[*] = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  180  <|@ instruction JUMP ~[] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4599156037586246543
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  184  <|@ instruction r11|QWORD[.] = MOVE r13|QWORD[*] moveKind: QWORD <|@ <|@
      nr  186  <|@ instruction MOV [r13|QWORD[*] + 12] y: 16 size: DWORD <|@ <|@
      nr  188  <|@ instruction MOV [r13|QWORD[*]] y: 1 size: QWORD <|@ <|@
      nr  190  <|@ instruction MOV [r13|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr  192  <|@ instruction CMP rsi|DWORD y: 1 size: DWORD <|@ <|@
      nr  194  <|@ instruction BRANCH trueDestinationProbability: 0.4177003898613192 condition: < trueDestination: B12 -> B13 falseDestination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4595555168830760299
    begin_IR
      LIR
      nr  210  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  212  <|@ instruction xmm0|V256_QWORD = A od: SIMD<32,0,0,0> oe: QWORD <|@ <|@
      nr  214  <|@ instruction J (address: [r13|QWORD[*] + 16], input: xmm0|V256_QWORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr  216  <|@ instruction r13|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  218  <|@ instruction r10|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  220  <|@ instruction JUMP ~[] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B70" "B18" 
    successors "B16" "B74" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4598072091713848228
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL numbPhis: 2 align: true label: ? <|@ <|@
      nr  224  <|@ instruction r8|DWORD = MOV [r13|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  226  <|@ instruction CMP (x: rsi|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  228  <|@ instruction BRANCH trueDestinationProbability: 0.5822996101386808 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B20" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4594352857608977439
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  232  <|@ instruction rdi|DWORD = INC r10|DWORD size: DWORD <|@ <|@
      nr  234  <|@ instruction rax|DWORD = SUB (x: rdi|DWORD, ~y: r8|DWORD) size: DWORD <|@ <|@
      nr  236  <|@ instruction CMP rax|DWORD y: 1 size: DWORD <|@ <|@
      nr  238  <|@ instruction BRANCH trueDestinationProbability: 0.9354897578252553 condition: < trueDestination: B16 -> B17 falseDestination: B16 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4594018382497928091
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  242  <|@ instruction CMP (x: r8|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  244  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B17 -> B18 falseDestination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B15" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4594018382497928091
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  248  <|@ instruction MOV [r13|QWORD[.] + r10|DWORD * 2 + 16] y: 32 size: WORD <|@ <|@
      nr  250  <|@ instruction r10|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  252  <|@ instruction JUMP ~[] destination: B18 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B21" "B22" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4576505223557843009
    begin_IR
      LIR
      nr  268  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  270  <|@ instruction rax|DWORD = SHL r8|DWORD size: DWORD <|@ <|@
      nr  272  <|@ instruction rax|DWORD = LEA [rax|DWORD + 2] size: DWORD <|@ <|@
      nr  274  <|@ instruction rbp|DWORD = SUB (x: rax|DWORD, ~y: rdi|DWORD) size: DWORD <|@ <|@
      nr  276  <|@ instruction TEST (x: rbp|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  278  <|@ instruction rax|DWORD = CMOVE (falseValue: rax|DWORD, ~trueValue: rdi|DWORD) condition: < <|@ <|@
      nr  280  <|@ instruction CMP rax|DWORD y: 1 size: DWORD <|@ <|@
      nr  282  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B20 -> B21 falseDestination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4576505223557843009
    begin_IR
      LIR
      nr  298  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  300  <|@ instruction rbp|DWORD = MOVE input: int[2147483639|0x7ffffff7] <|@ <|@
      nr  302  <|@ instruction rbp|DWORD = SUB (x: rbp|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr  304  <|@ instruction TEST (x: rbp|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  306  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B22 -> B23 falseDestination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" "B72" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4576505223557843009
    begin_IR
      LIR
      nr  322  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  324  <|@ instruction CMP (x: rax|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  326  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B24 -> B25 falseDestination: B24 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" "B29" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4576505223557843009
    begin_IR
      LIR
      nr  328  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  330  <|@ instruction stack:60|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  332  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  334  <|@ instruction r14|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr  336  <|@ instruction CMP rax|DWORD y: 16777215 size: DWORD <|@ <|@
      nr  338  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B25 -> B26 falseDestination: B25 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" "B28" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4575970063380164052
    begin_IR
      LIR
      nr  340  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  342  <|@ instruction stack:72|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  344  <|@ instruction r13|DWORD = SHL rax|DWORD size: DWORD <|@ <|@
      nr  346  <|@ instruction r13|DWORD = LEA [r13|DWORD + 23] size: DWORD <|@ <|@
      nr  348  <|@ instruction r13|DWORD = AND r13|DWORD y: -8 size: DWORD <|@ <|@
      nr  350  <|@ instruction r13|QWORD = MOVSXD r13|DWORD size: QWORD <|@ <|@
      nr  352  <|@ instruction r10|QWORD = ADD (x: r13|QWORD, y: rbp|QWORD) size: QWORD <|@ <|@
      nr  354  <|@ instruction CMP (x: r10|QWORD, y: r14|QWORD) size: QWORD <|@ <|@
      nr  356  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B26 -> B27 falseDestination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B31" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4575921898964172946
    begin_IR
      LIR
      nr  366  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  368  <|@ instruction MOV (x: [r15|QWORD + 96], y: r10|QWORD) size: QWORD <|@ <|@
      nr  370  <|@ instruction AMD64PREFETCH ~[r13|QWORD + rbp|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr  372  <|@ instruction AMD64PREFETCH ~[r13|QWORD + rbp|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  374  <|@ instruction AMD64PREFETCH ~[r13|QWORD + rbp|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  376  <|@ instruction AMD64PREFETCH ~[r13|QWORD + rbp|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  378  <|@ instruction MOV (x: [rbp|QWORD + 12], y: rax|DWORD) size: DWORD <|@ <|@
      nr  380  <|@ instruction MOV [rbp|QWORD] y: 1 size: QWORD <|@ <|@
      nr  382  <|@ instruction MOV [rbp|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr  384  <|@ instruction rbp|QWORD[.] = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr  386  <|@ instruction r14|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  388  <|@ instruction stack:76|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  390  <|@ instruction r13|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  392  <|@ instruction rax|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  394  <|@ instruction JUMP ~[] destination: B28 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" 
    successors "B32" "B33" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4576505223557843009
    begin_IR
      LIR
      nr  422  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  424  <|@ instruction CMP (x: r14|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  426  <|@ instruction rdi|DWORD = CMOVE (falseValue: r14|DWORD, ~trueValue: r13|DWORD) condition: > <|@ <|@
      nr  428  <|@ instruction rdi|QWORD = MOVSXD rdi|DWORD size: QWORD <|@ <|@
      nr  430  <|@ instruction CMP rdi|QWORD y: 1 size: QWORD <|@ <|@
      nr  432  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B31 -> B32 falseDestination: B31 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B35" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4572001623930472513
    begin_IR
      LIR
      nr  438  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  440  <|@ instruction r10|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  442  <|@ instruction rsi|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  444  <|@ instruction rdx|QWORD[.] = LEA [r10|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  446  <|@ instruction r10|QWORD = LEA [rdi|QWORD - 16] size: QWORD <|@ <|@
      nr  448  <|@ instruction TEST (x: r10|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  450  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B33 -> B34 falseDestination: B33 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B38" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4570173825191496802
    begin_IR
      LIR
      nr  452  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  454  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  456  <|@ instruction JUMP ~[] destination: B34 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B34" "B37" 
    successors "B39" "B40" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4572001623930472513
    begin_IR
      LIR
      nr  480  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  482  <|@ instruction r10|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  484  <|@ instruction CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  486  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B38 -> B39 falseDestination: B38 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4570173825191496802
    begin_IR
      LIR
      nr  492  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  494  <|@ instruction xmm0|V128_WORD = H [rdx|QWORD[.] + r11|QWORD * 2] nZ: XMM oh: VMOVDQU <|@ <|@
      nr  496  <|@ instruction J (address: [rsi|QWORD[.] + r11|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr  498  <|@ instruction r10|QWORD = LEA [r11|QWORD + 8] size: QWORD <|@ <|@
      nr  500  <|@ instruction r11|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  502  <|@ instruction JUMP ~[] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" "B39" 
    successors "B42" "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4572001623930472513
    begin_IR
      LIR
      nr  504  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  506  <|@ instruction r10|QWORD = LEA [rdi|QWORD - 4] size: QWORD <|@ <|@
      nr  508  <|@ instruction CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  510  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B41 -> B42 falseDestination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4570173825191496802
    begin_IR
      LIR
      nr  516  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  518  <|@ instruction xmm0|V64_WORD = H [rdx|QWORD[.] + r11|QWORD * 2] nZ: XMM oh: VMOVQ <|@ <|@
      nr  520  <|@ instruction J (address: [rsi|QWORD[.] + r11|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr  522  <|@ instruction r10|QWORD = LEA [r11|QWORD + 4] size: QWORD <|@ <|@
      nr  524  <|@ instruction r11|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  526  <|@ instruction JUMP ~[] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4572001623930472513
    begin_IR
      LIR
      nr  528  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  530  <|@ instruction r10|QWORD = LEA [rdi|QWORD - 2] size: QWORD <|@ <|@
      nr  532  <|@ instruction CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  534  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B44 -> B45 falseDestination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4570173825191496802
    begin_IR
      LIR
      nr  540  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  542  <|@ instruction xmm0|V32_WORD = H [rdx|QWORD[.] + r11|QWORD * 2] nZ: XMM oh: VMOVD <|@ <|@
      nr  544  <|@ instruction J (address: [rsi|QWORD[.] + r11|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr  546  <|@ instruction r10|QWORD = LEA [r11|QWORD + 2] size: QWORD <|@ <|@
      nr  548  <|@ instruction r11|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  550  <|@ instruction JUMP ~[] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" "B45" 
    successors "B48" "B49" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4572001623930472513
    begin_IR
      LIR
      nr  552  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  554  <|@ instruction r10|QWORD = DEC rdi|QWORD size: QWORD <|@ <|@
      nr  556  <|@ instruction CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  558  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B47 -> B48 falseDestination: B47 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4570173825191496802
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  566  <|@ instruction rdx|DWORD = MOVSX [rdx|QWORD[.] + r11|QWORD * 2] size: DWORD <|@ <|@
      nr  568  <|@ instruction MOV (x: [rsi|QWORD[.] + r11|QWORD * 2], y: rdx|DWORD) size: WORD <|@ <|@
      nr  570  <|@ instruction JUMP ~[] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B32" "B49" "B48" 
    successors "B51" "B69" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4576505223557843009
    begin_IR
      LIR
      nr  572  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  574  <|@ instruction rsi|QWORD = MOVSXD r14|DWORD size: QWORD <|@ <|@
      nr  576  <|@ instruction CMP (x: rsi|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr  578  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B50 -> B51 falseDestination: B50 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B70" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4572001623930472513
    begin_IR
      LIR
      nr  718  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  720  <|@ instruction r11|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr  722  <|@ instruction JUMP ~[] destination: B69 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" "B67" "B66" 
    successors "B15" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576505223557843009
    begin_IR
      LIR
      nr  724  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  726  <|@ instruction MOV [rax|QWORD[.] + r11|DWORD * 2 + 16] y: 32 size: WORD <|@ <|@
      nr  728  <|@ instruction r10|DWORD = MOVE stack:76|DWORD moveKind: DWORD <|@ <|@
      nr  730  <|@ instruction r13|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  732  <|@ instruction rsi|DWORD = MOVE stack:56|DWORD moveKind: DWORD <|@ <|@
      nr  734  <|@ instruction JUMP ~[] destination: B70 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B50" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4572001623930472513
    begin_IR
      LIR
      nr  434  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  436  <|@ instruction JUMP ~[] destination: B32 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B52" "B53" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4572001623930472513
    begin_IR
      LIR
      nr  580  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  582  <|@ instruction rdx|QWORD[.] = LEA [rax|QWORD[.] + rdi|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr  584  <|@ instruction rsi|QWORD = SUB (x: rsi|QWORD, ~y: rdi|QWORD) size: QWORD <|@ <|@
      nr  586  <|@ instruction rdi|QWORD = LEA [rsi|QWORD - 16] size: QWORD <|@ <|@
      nr  588  <|@ instruction TEST (x: rdi|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr  590  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B51 -> B52 falseDestination: B51 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B56" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4570173825191496802
    begin_IR
      LIR
      nr  592  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  594  <|@ instruction r10|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  596  <|@ instruction JUMP ~[] destination: B52 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B52" "B55" 
    successors "B57" "B58" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4572001623930472513
    begin_IR
      LIR
      nr  620  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  622  <|@ instruction rdi|QWORD = LEA [rsi|QWORD - 8] size: QWORD <|@ <|@
      nr  624  <|@ instruction CMP (x: r10|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr  626  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B56 -> B57 falseDestination: B56 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B59" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4570173825191496802
    begin_IR
      LIR
      nr  632  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  634  <|@ instruction xmm0|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0> <|@ <|@
      nr  636  <|@ instruction J (address: [rdx|QWORD[.] + r10|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr  638  <|@ instruction rdi|QWORD = LEA [r10|QWORD + 8] size: QWORD <|@ <|@
      nr  640  <|@ instruction r10|QWORD = MOVE rdi|QWORD moveKind: QWORD <|@ <|@
      nr  642  <|@ instruction JUMP ~[] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" "B57" 
    successors "B60" "B61" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4572001623930472513
    begin_IR
      LIR
      nr  644  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  646  <|@ instruction rdi|QWORD = LEA [rsi|QWORD - 4] size: QWORD <|@ <|@
      nr  648  <|@ instruction CMP (x: r10|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr  650  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B59 -> B60 falseDestination: B59 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4570173825191496802
    begin_IR
      LIR
      nr  656  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  658  <|@ instruction xmm0|V64_WORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr  660  <|@ instruction J (address: [rdx|QWORD[.] + r10|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr  662  <|@ instruction rdi|QWORD = LEA [r10|QWORD + 4] size: QWORD <|@ <|@
      nr  664  <|@ instruction r10|QWORD = MOVE rdi|QWORD moveKind: QWORD <|@ <|@
      nr  666  <|@ instruction JUMP ~[] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" "B60" 
    successors "B63" "B64" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4572001623930472513
    begin_IR
      LIR
      nr  668  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  670  <|@ instruction rdi|QWORD = LEA [rsi|QWORD - 2] size: QWORD <|@ <|@
      nr  672  <|@ instruction CMP (x: r10|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr  674  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B62 -> B63 falseDestination: B62 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B65" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4570173825191496802
    begin_IR
      LIR
      nr  680  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  682  <|@ instruction xmm0|V32_WORD = L oc: SIMD<0,0> <|@ <|@
      nr  684  <|@ instruction J (address: [rdx|QWORD[.] + r10|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr  686  <|@ instruction rdi|QWORD = LEA [r10|QWORD + 2] size: QWORD <|@ <|@
      nr  688  <|@ instruction r10|QWORD = MOVE rdi|QWORD moveKind: QWORD <|@ <|@
      nr  690  <|@ instruction JUMP ~[] destination: B64 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" "B63" 
    successors "B66" "B67" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4572001623930472513
    begin_IR
      LIR
      nr  692  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  694  <|@ instruction rsi|QWORD = DEC rsi|QWORD size: QWORD <|@ <|@
      nr  696  <|@ instruction CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  698  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B65 -> B66 falseDestination: B65 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B70" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4570173825191496802
    begin_IR
      LIR
      nr  706  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  708  <|@ instruction MOV (x: [rdx|QWORD[.] + r10|QWORD * 2], y: r12|ILLEGAL) size: WORD <|@ <|@
      nr  710  <|@ instruction r11|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr  712  <|@ instruction JUMP ~[] destination: B67 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4562994424675731521
    begin_IR
      LIR
      nr  458  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  460  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  462  <|@ instruction JUMP ~[] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B36" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 2
    probability 4570173825191496802
    begin_IR
      LIR
      nr  736  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  738  <|@ instruction JUMP ~[] destination: B71 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" "B71" 
    successors "B37" "B71" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 2
    probability 4572001623930472513
    begin_IR
      LIR
      nr  464  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  466  <|@ instruction xmm0|V256_WORD = H [rdx|QWORD[.] + r11|QWORD * 2] nZ: YMM oh: VMOVDQU <|@ <|@
      nr  468  <|@ instruction J (address: [rsi|QWORD[.] + r11|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr  470  <|@ instruction r11|QWORD = LEA [r11|QWORD + 16] size: QWORD <|@ <|@
      nr  472  <|@ instruction CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  474  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B36 -> B37 falseDestination: B36 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4562994424675731521
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  490  <|@ instruction JUMP ~[] destination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4562994424675731521
    begin_IR
      LIR
      nr  512  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  514  <|@ instruction JUMP ~[] destination: B42 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4562994424675731521
    begin_IR
      LIR
      nr  476  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  478  <|@ instruction JUMP ~[] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4562994424675731521
    begin_IR
      LIR
      nr  536  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  538  <|@ instruction JUMP ~[] destination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B65" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4562994424675731521
    begin_IR
      LIR
      nr  676  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  678  <|@ instruction JUMP ~[] destination: B63 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B70" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4562994424675731521
    begin_IR
      LIR
      nr  700  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  702  <|@ instruction r11|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr  704  <|@ instruction JUMP ~[] destination: B66 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4562994424675731521
    begin_IR
      LIR
      nr  652  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  654  <|@ instruction JUMP ~[] destination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4562994424675731521
    begin_IR
      LIR
      nr  560  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  562  <|@ instruction JUMP ~[] destination: B48 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B59" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4562994424675731521
    begin_IR
      LIR
      nr  628  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  630  <|@ instruction JUMP ~[] destination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4562994424675731521
    begin_IR
      LIR
      nr  598  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  600  <|@ instruction xmm0|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0> <|@ <|@
      nr  602  <|@ instruction r10|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  604  <|@ instruction JUMP ~[] destination: B53 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B54" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 2
    probability 4570173825191496802
    begin_IR
      LIR
      nr  714  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  716  <|@ instruction JUMP ~[] destination: B68 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" "B68" 
    successors "B55" "B68" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 2
    probability 4572001623930472513
    begin_IR
      LIR
      nr  606  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  608  <|@ instruction J (address: [rdx|QWORD[.] + r10|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr  610  <|@ instruction r10|QWORD = LEA [r10|QWORD + 16] size: QWORD <|@ <|@
      nr  612  <|@ instruction CMP (x: r10|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr  614  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B54 -> B55 falseDestination: B54 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B56" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4562994424675731521
    begin_IR
      LIR
      nr  616  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  618  <|@ instruction JUMP ~[] destination: B55 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B30" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4561701786114434764
    begin_IR
      LIR
      nr  396  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  398  <|@ instruction stack:76|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  400  <|@ instruction stack:72|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  402  <|@ instruction r13|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  404  <|@ instruction JUMP ~[] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" "B27" 
    successors "B31" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4562309419648302455
    begin_IR
      LIR
      nr  406  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  408  <|@ instruction r11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>} <|@ <|@
      nr  410  <|@ instruction rsi|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  412  <|@ instruction rdx|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  414  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  416  <|@ instruction r14|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  418  <|@ st <@st|@reference-map: [stack:56, stack:92, stack:96]
live-base-pointers: []
java.util.Formatter$FormatSpecifier.justify(Formatter.java:2923) [bci: 47]
locals: - stack:32|QWORD[.] vobject:StringBuilder:0{count=stack:60|DWORD,value=stack:72|QWORD[.]} stack:52|DWORD stack:56|DWORD stack:60|DWORD 
vobject:StringBuilder:0{count=stack:60|DWORD,value=stack:72|QWORD[.]} Ljava/lang/StringBuilder; stack:60|DWORD stack:72|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:47] <|@ <|@
      nr  420  <|@ instruction JUMP ~[] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B30" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4545793469636321557
    begin_IR
      LIR
      nr  358  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  360  <|@ instruction stack:76|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  362  <|@ instruction r13|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  364  <|@ instruction JUMP ~[] destination: B27 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B75" 
    xhandlers
    flags 
    probability 4593749707086991795
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  198  <|@ instruction xmm0|V256_QWORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr  200  <|@ instruction J (address: [r13|QWORD[*] + 16], input: xmm0|V256_QWORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr  202  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  204  <|@ instruction r8|DWORD = MOVE input: int[16|0x10] <|@ <|@
      nr  206  <|@ instruction r13|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  208  <|@ instruction JUMP ~[] destination: B13 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B8" "B13" "B74" 
    successors "B76" "B84" 
    xhandlers
    flags 
    probability 4599075674450723485
    begin_IR
      LIR
      nr  766  <|@ instruction [] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr  768  <|@ instruction stack:72|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  770  <|@ instruction stack:76|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  772  <|@ instruction r11|DWORD = MOV [r13|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  774  <|@ instruction r9|DWORD[.] = COMPRESSPOINTER (input: r13|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@1d28dd80 encoding: base: 0 shift: 3 <|@ <|@
      nr  776  <|@ instruction stack:60|DWORD[.] = MOVE r9|DWORD[.] moveKind: DWORD <|@ <|@
      nr  778  <|@ instruction rcx|DWORD = ADD (x: r10|DWORD, y: stack:40|DWORD) size: DWORD <|@ <|@
      nr  780  <|@ instruction stack:80|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  782  <|@ instruction rdi|DWORD = SUB (x: rcx|DWORD, ~y: r8|DWORD) size: DWORD <|@ <|@
      nr  784  <|@ instruction r8|QWORD = MOV stack:40|DWORD size: DWORD <|@ <|@
      nr  786  <|@ instruction rbx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>} <|@ <|@
      nr  788  <|@ instruction CMP rdi|DWORD y: 1 size: DWORD <|@ <|@
      nr  790  <|@ instruction BRANCH trueDestinationProbability: 0.9354897721124376 condition: < trueDestination: B75 -> B76 falseDestination: B75 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B77" "B78" 
    xhandlers
    flags 
    probability 4598727057661294609
    begin_IR
      LIR
      nr  792  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  794  <|@ instruction r11|DWORD = SUB (x: r11|DWORD, ~y: stack:40|DWORD) size: DWORD <|@ <|@
      nr  796  <|@ instruction CMP (x: r10|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  798  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B76 -> B77 falseDestination: B76 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" "B80" 
    xhandlers
    flags 
    probability 4598727057661294609
    begin_IR
      LIR
      nr  808  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  810  <|@ instruction r14|DWORD[.] = MOVE stack:36|DWORD[.] moveKind: DWORD <|@ <|@
      nr  812  <|@ instruction r14|QWORD[.] = UNCOMPRESSPOINTER (input: r14|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1d28dd80 encoding: base: 0 shift: 3 <|@ <|@
      nr  814  <|@ instruction r14|QWORD[*] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  816  <|@ instruction rsi|QWORD[*] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  818  <|@ instruction rdx|QWORD = MOVSXD r10|DWORD size: QWORD <|@ <|@
      nr  820  <|@ instruction rdi|QWORD = LEA [r14|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  822  <|@ instruction rsi|QWORD = LEA [rsi|QWORD[*] + rdx|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr  824  <|@ instruction rdx|QWORD = MOVE r8|QWORD moveKind: QWORD <|@ <|@
      nr  826  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charArraycopy(Word,Word,Word)void@0x106812d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  828  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  830  <|@ instruction rdx|QWORD = LEA [rsi|QWORD + 24] size: QWORD <|@ <|@
      nr  832  <|@ instruction CMP (x: rdx|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr  834  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B78 -> B79 falseDestination: B78 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B81" 
    xhandlers
    flags 
    probability 4598676503283860722
    begin_IR
      LIR
      nr  858  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  860  <|@ instruction MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  862  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 216] instr: 0 <|@ <|@
      nr  864  <|@ instruction rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  866  <|@ instruction r13|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>} <|@ <|@
      nr  868  <|@ instruction r14|DWORD = MOVE stack:80|DWORD moveKind: DWORD <|@ <|@
      nr  870  <|@ instruction r9|DWORD[.] = MOVE stack:60|DWORD[.] moveKind: DWORD <|@ <|@
      nr  872  <|@ instruction r10|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  874  <|@ instruction JUMP ~[] destination: B80 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" "B79" 
    successors "B82" "B83" 
    xhandlers
    flags 
    probability 4598727057661294609
    begin_IR
      LIR
      nr  876  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  878  <|@ instruction rdx|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  880  <|@ instruction rcx|QWORD = MOV [r13|QWORD + 168] size: QWORD <|@ <|@
      nr  882  <|@ instruction MOV (x: [rsi|QWORD[*]], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  884  <|@ instruction MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} <|@ <|@
      nr  886  <|@ instruction MOV (x: [rsi|QWORD[*] + 12], y: r14|DWORD) size: DWORD <|@ <|@
      nr  888  <|@ instruction MOV (x: [rsi|QWORD[*] + 16], y: r9|DWORD[.]) size: DWORD <|@ <|@
      nr  890  <|@ instruction CMP (x: r10|DWORD, y: stack:48|DWORD) size: DWORD <|@ <|@
      nr  892  <|@ instruction BRANCH trueDestinationProbability: 0.18579515065073993 condition: = trueDestination: B81 -> B82 falseDestination: B81 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors "B206" 
    xhandlers
    flags 
    probability 4597400344143036126
    begin_IR
      LIR
      nr  904  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  906  <|@ instruction stack:88|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  908  <|@ instruction r13|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  910  <|@ instruction JUMP ~[] destination: B83 -> B206 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B206"
    from_bci -1
    to_bci -1
    predecessors "B204" "B205" "B83" 
    successors "B207" "B213" 
    xhandlers
    flags 
    probability 4599068736976613850
    begin_IR
      LIR
      nr 2110  <|@ instruction [] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr 2112  <|@ instruction r10|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr 2114  <|@ instruction CMP r14|DWORD y: 1 size: DWORD <|@ <|@
      nr 2116  <|@ instruction BRANCH trueDestinationProbability: 0.09284041465770032 condition: < trueDestination: B206 -> B207 falseDestination: B206 -> B213 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B213"
    from_bci -1
    to_bci -1
    predecessors "B206" 
    successors "B214" "B216" 
    xhandlers
    flags 
    probability 4598567666390927258
    begin_IR
      LIR
      nr 2188  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2190  <|@ instruction r11|DWORD = MOV [r13|QWORD[.] + 12] size: DWORD <|@ <|@
      nr 2192  <|@ instruction rax|DWORD = SUB (x: r11|DWORD, ~y: r14|DWORD) size: DWORD <|@ <|@
      nr 2194  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr 2196  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B213 -> B214 falseDestination: B213 -> B216 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B216"
    from_bci -1
    to_bci -1
    predecessors "B213" 
    successors "B217" "B220" 
    xhandlers
    flags 
    probability 4598567666390927258
    begin_IR
      LIR
      nr 2214  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2216  <|@ instruction rax|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr 2218  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr 2220  <|@ instruction CMP r14|DWORD y: 16777215 size: DWORD <|@ <|@
      nr 2222  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B216 -> B217 falseDestination: B216 -> B220 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B217"
    from_bci -1
    to_bci -1
    predecessors "B216" 
    successors "B218" "B219" 
    xhandlers
    flags 
    probability 4597980903941973833
    begin_IR
      LIR
      nr 2224  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2226  <|@ instruction rcx|DWORD = SHL r14|DWORD size: DWORD <|@ <|@
      nr 2228  <|@ instruction rcx|DWORD = LEA [rcx|DWORD + 23] size: DWORD <|@ <|@
      nr 2230  <|@ instruction rcx|DWORD = AND rcx|DWORD y: -8 size: DWORD <|@ <|@
      nr 2232  <|@ instruction rcx|QWORD = MOVSXD rcx|DWORD size: QWORD <|@ <|@
      nr 2234  <|@ instruction r8|QWORD = ADD (x: rcx|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr 2236  <|@ instruction CMP (x: r8|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr 2238  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B217 -> B218 falseDestination: B217 -> B219 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B219"
    from_bci -1
    to_bci -1
    predecessors "B217" 
    successors "B222" 
    xhandlers
    flags 
    probability 4597892775105459449
    begin_IR
      LIR
      nr 2246  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2248  <|@ instruction MOV (x: [r15|QWORD + 96], y: r8|QWORD) size: QWORD <|@ <|@
      nr 2250  <|@ instruction AMD64PREFETCH ~[rcx|QWORD + rax|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr 2252  <|@ instruction AMD64PREFETCH ~[rcx|QWORD + rax|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr 2254  <|@ instruction AMD64PREFETCH ~[rcx|QWORD + rax|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr 2256  <|@ instruction AMD64PREFETCH ~[rcx|QWORD + rax|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr 2258  <|@ instruction MOV (x: [rax|QWORD + 12], y: r14|DWORD) size: DWORD <|@ <|@
      nr 2260  <|@ instruction MOV [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr 2262  <|@ instruction MOV [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr 2264  <|@ instruction rax|QWORD[.] = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr 2266  <|@ instruction stack:72|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2268  <|@ instruction r13|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr 2270  <|@ instruction JUMP ~[] destination: B219 -> B222 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B222"
    from_bci -1
    to_bci -1
    predecessors "B219" "B221" 
    successors "B223" "B224" 
    xhandlers
    flags 
    probability 4598567666390927258
    begin_IR
      LIR
      nr 2292  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 2294  <|@ instruction CMP (x: r14|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr 2296  <|@ instruction rsi|DWORD = CMOVE (falseValue: r14|DWORD, ~trueValue: r13|DWORD) condition: > <|@ <|@
      nr 2298  <|@ instruction rsi|QWORD = MOVSXD rsi|DWORD size: QWORD <|@ <|@
      nr 2300  <|@ instruction CMP rsi|QWORD y: 1 size: QWORD <|@ <|@
      nr 2302  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B222 -> B223 falseDestination: B222 -> B224 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B224"
    from_bci -1
    to_bci -1
    predecessors "B222" 
    successors "B225" "B226" 
    xhandlers
    flags 
    probability 4594064066763556762
    begin_IR
      LIR
      nr 2308  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2310  <|@ instruction r10|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2312  <|@ instruction rdx|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD <|@ <|@
      nr 2314  <|@ instruction rcx|QWORD[.] = LEA [r10|QWORD[.] + 16] size: QWORD <|@ <|@
      nr 2316  <|@ instruction r10|QWORD = LEA [rsi|QWORD - 16] size: QWORD <|@ <|@
      nr 2318  <|@ instruction TEST (x: r10|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr 2320  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B224 -> B225 falseDestination: B224 -> B226 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B225"
    from_bci -1
    to_bci -1
    predecessors "B224" 
    successors "B229" 
    xhandlers
    flags 
    probability 4592008490372696935
    begin_IR
      LIR
      nr 2322  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2324  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 2326  <|@ instruction JUMP ~[] destination: B225 -> B229 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B229"
    from_bci -1
    to_bci -1
    predecessors "B225" "B228" 
    successors "B230" "B231" 
    xhandlers
    flags 
    probability 4594064066763556762
    begin_IR
      LIR
      nr 2350  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 2352  <|@ instruction r10|QWORD = LEA [rsi|QWORD - 8] size: QWORD <|@ <|@
      nr 2354  <|@ instruction CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr 2356  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B229 -> B230 falseDestination: B229 -> B231 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B231"
    from_bci -1
    to_bci -1
    predecessors "B229" 
    successors "B232" 
    xhandlers
    flags 
    probability 4592008490372696935
    begin_IR
      LIR
      nr 2362  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2364  <|@ instruction xmm0|V128_WORD = H [rcx|QWORD[.] + r11|QWORD * 2] nZ: XMM oh: VMOVDQU <|@ <|@
      nr 2366  <|@ instruction J (address: [rdx|QWORD[.] + r11|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr 2368  <|@ instruction r10|QWORD = LEA [r11|QWORD + 8] size: QWORD <|@ <|@
      nr 2370  <|@ instruction r11|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr 2372  <|@ instruction JUMP ~[] destination: B231 -> B232 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B232"
    from_bci -1
    to_bci -1
    predecessors "B231" "B230" 
    successors "B233" "B234" 
    xhandlers
    flags 
    probability 4594064066763556762
    begin_IR
      LIR
      nr 2374  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 2376  <|@ instruction r10|QWORD = LEA [rsi|QWORD - 4] size: QWORD <|@ <|@
      nr 2378  <|@ instruction CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr 2380  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B232 -> B233 falseDestination: B232 -> B234 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B234"
    from_bci -1
    to_bci -1
    predecessors "B232" 
    successors "B235" 
    xhandlers
    flags 
    probability 4592008490372696935
    begin_IR
      LIR
      nr 2386  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2388  <|@ instruction xmm0|V64_WORD = H [rcx|QWORD[.] + r11|QWORD * 2] nZ: XMM oh: VMOVQ <|@ <|@
      nr 2390  <|@ instruction J (address: [rdx|QWORD[.] + r11|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr 2392  <|@ instruction r10|QWORD = LEA [r11|QWORD + 4] size: QWORD <|@ <|@
      nr 2394  <|@ instruction r11|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr 2396  <|@ instruction JUMP ~[] destination: B234 -> B235 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B235"
    from_bci -1
    to_bci -1
    predecessors "B234" "B233" 
    successors "B236" "B237" 
    xhandlers
    flags 
    probability 4594064066763556762
    begin_IR
      LIR
      nr 2398  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 2400  <|@ instruction r10|QWORD = LEA [rsi|QWORD - 2] size: QWORD <|@ <|@
      nr 2402  <|@ instruction CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr 2404  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B235 -> B236 falseDestination: B235 -> B237 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B237"
    from_bci -1
    to_bci -1
    predecessors "B235" 
    successors "B238" 
    xhandlers
    flags 
    probability 4592008490372696935
    begin_IR
      LIR
      nr 2410  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2412  <|@ instruction xmm0|V32_WORD = H [rcx|QWORD[.] + r11|QWORD * 2] nZ: XMM oh: VMOVD <|@ <|@
      nr 2414  <|@ instruction J (address: [rdx|QWORD[.] + r11|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr 2416  <|@ instruction r10|QWORD = LEA [r11|QWORD + 2] size: QWORD <|@ <|@
      nr 2418  <|@ instruction r11|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr 2420  <|@ instruction JUMP ~[] destination: B237 -> B238 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B238"
    from_bci -1
    to_bci -1
    predecessors "B237" "B236" 
    successors "B239" "B240" 
    xhandlers
    flags 
    probability 4594064066763556762
    begin_IR
      LIR
      nr 2422  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 2424  <|@ instruction r10|QWORD = DEC rsi|QWORD size: QWORD <|@ <|@
      nr 2426  <|@ instruction CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr 2428  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B238 -> B239 falseDestination: B238 -> B240 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B240"
    from_bci -1
    to_bci -1
    predecessors "B238" 
    successors "B241" 
    xhandlers
    flags 
    probability 4592008490372696935
    begin_IR
      LIR
      nr 2434  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2436  <|@ instruction rcx|DWORD = MOVSX [rcx|QWORD[.] + r11|QWORD * 2] size: DWORD <|@ <|@
      nr 2438  <|@ instruction MOV (x: [rdx|QWORD[.] + r11|QWORD * 2], y: rcx|DWORD) size: WORD <|@ <|@
      nr 2440  <|@ instruction JUMP ~[] destination: B240 -> B241 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B241"
    from_bci -1
    to_bci -1
    predecessors "B223" "B240" "B239" 
    successors "B242" "B260" 
    xhandlers
    flags 
    probability 4598567666390927258
    begin_IR
      LIR
      nr 2442  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2444  <|@ instruction rdx|QWORD = MOVSXD r14|DWORD size: QWORD <|@ <|@
      nr 2446  <|@ instruction CMP (x: rdx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr 2448  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B241 -> B242 falseDestination: B241 -> B260 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B260"
    from_bci -1
    to_bci -1
    predecessors "B241" 
    successors "B261" 
    xhandlers
    flags 
    probability 4594064066763556762
    begin_IR
      LIR
      nr 2584  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2586  <|@ instruction JUMP ~[] destination: B260 -> B261 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B261"
    from_bci -1
    to_bci -1
    predecessors "B260" "B258" "B257" 
    successors "B262" "B263" 
    xhandlers
    flags 
    probability 4598567666390927258
    begin_IR
      LIR
      nr 2588  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2590  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr 2592  <|@ instruction rdx|QWORD = LEA [rsi|QWORD + 24] size: QWORD <|@ <|@
      nr 2594  <|@ instruction CMP (x: rdx|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr 2596  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B261 -> B262 falseDestination: B261 -> B263 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B263"
    from_bci -1
    to_bci -1
    predecessors "B261" 
    successors "B264" 
    xhandlers
    flags 
    probability 4598518705926197045
    begin_IR
      LIR
      nr 2622  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2624  <|@ instruction MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD <|@ <|@
      nr 2626  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 216] instr: 0 <|@ <|@
      nr 2628  <|@ instruction rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr 2630  <|@ instruction r10|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr 2632  <|@ instruction JUMP ~[] destination: B263 -> B264 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B264"
    from_bci -1
    to_bci -1
    predecessors "B263" "B262" 
    successors 
    xhandlers
    flags 
    probability 4598567666390927258
    begin_IR
      LIR
      nr 2634  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 2636  <|@ instruction rdx|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr 2638  <|@ instruction rcx|QWORD = MOV [r10|QWORD + 168] size: QWORD <|@ <|@
      nr 2640  <|@ instruction MOV (x: [rsi|QWORD[*]], y: rcx|QWORD) size: QWORD <|@ <|@
      nr 2642  <|@ instruction MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr 2644  <|@ instruction rax|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@1d28dd80 encoding: base: 0 shift: 3 <|@ <|@
      nr 2646  <|@ instruction MOV (x: [rsi|QWORD[*] + 12], y: rax|DWORD[.]) size: DWORD <|@ <|@
      nr 2648  <|@ instruction MOV (x: [rsi|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr 2650  <|@ instruction rax|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2652  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B223"
    from_bci -1
    to_bci -1
    predecessors "B222" 
    successors "B241" 
    xhandlers
    flags 
    probability 4594064066763556762
    begin_IR
      LIR
      nr 2304  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2306  <|@ instruction JUMP ~[] destination: B223 -> B241 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B242"
    from_bci -1
    to_bci -1
    predecessors "B241" 
    successors "B243" "B244" 
    xhandlers
    flags 
    probability 4594064066763556762
    begin_IR
      LIR
      nr 2450  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2452  <|@ instruction rcx|QWORD[.] = LEA [rax|QWORD[.] + rsi|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr 2454  <|@ instruction rdx|QWORD = SUB (x: rdx|QWORD, ~y: rsi|QWORD) size: QWORD <|@ <|@
      nr 2456  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 16] size: QWORD <|@ <|@
      nr 2458  <|@ instruction TEST (x: rsi|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr 2460  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B242 -> B243 falseDestination: B242 -> B244 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B243"
    from_bci -1
    to_bci -1
    predecessors "B242" 
    successors "B247" 
    xhandlers
    flags 
    probability 4592008490372696935
    begin_IR
      LIR
      nr 2462  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2464  <|@ instruction r10|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 2466  <|@ instruction JUMP ~[] destination: B243 -> B247 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B247"
    from_bci -1
    to_bci -1
    predecessors "B243" "B246" 
    successors "B248" "B249" 
    xhandlers
    flags 
    probability 4594064066763556762
    begin_IR
      LIR
      nr 2490  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 2492  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 8] size: QWORD <|@ <|@
      nr 2494  <|@ instruction CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr 2496  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B247 -> B248 falseDestination: B247 -> B249 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B249"
    from_bci -1
    to_bci -1
    predecessors "B247" 
    successors "B250" 
    xhandlers
    flags 
    probability 4592008490372696935
    begin_IR
      LIR
      nr 2502  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2504  <|@ instruction xmm0|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0> <|@ <|@
      nr 2506  <|@ instruction J (address: [rcx|QWORD[.] + r10|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr 2508  <|@ instruction rsi|QWORD = LEA [r10|QWORD + 8] size: QWORD <|@ <|@
      nr 2510  <|@ instruction r10|QWORD = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr 2512  <|@ instruction JUMP ~[] destination: B249 -> B250 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B250"
    from_bci -1
    to_bci -1
    predecessors "B249" "B248" 
    successors "B251" "B252" 
    xhandlers
    flags 
    probability 4594064066763556762
    begin_IR
      LIR
      nr 2514  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 2516  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 4] size: QWORD <|@ <|@
      nr 2518  <|@ instruction CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr 2520  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B250 -> B251 falseDestination: B250 -> B252 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B252"
    from_bci -1
    to_bci -1
    predecessors "B250" 
    successors "B253" 
    xhandlers
    flags 
    probability 4592008490372696935
    begin_IR
      LIR
      nr 2526  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2528  <|@ instruction xmm0|V64_WORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr 2530  <|@ instruction J (address: [rcx|QWORD[.] + r10|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr 2532  <|@ instruction rsi|QWORD = LEA [r10|QWORD + 4] size: QWORD <|@ <|@
      nr 2534  <|@ instruction r10|QWORD = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr 2536  <|@ instruction JUMP ~[] destination: B252 -> B253 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B253"
    from_bci -1
    to_bci -1
    predecessors "B252" "B251" 
    successors "B254" "B255" 
    xhandlers
    flags 
    probability 4594064066763556762
    begin_IR
      LIR
      nr 2538  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 2540  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 2] size: QWORD <|@ <|@
      nr 2542  <|@ instruction CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr 2544  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B253 -> B254 falseDestination: B253 -> B255 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B255"
    from_bci -1
    to_bci -1
    predecessors "B253" 
    successors "B256" 
    xhandlers
    flags 
    probability 4592008490372696935
    begin_IR
      LIR
      nr 2550  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2552  <|@ instruction xmm0|V32_WORD = L oc: SIMD<0,0> <|@ <|@
      nr 2554  <|@ instruction J (address: [rcx|QWORD[.] + r10|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr 2556  <|@ instruction rsi|QWORD = LEA [r10|QWORD + 2] size: QWORD <|@ <|@
      nr 2558  <|@ instruction r10|QWORD = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr 2560  <|@ instruction JUMP ~[] destination: B255 -> B256 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B256"
    from_bci -1
    to_bci -1
    predecessors "B255" "B254" 
    successors "B257" "B258" 
    xhandlers
    flags 
    probability 4594064066763556762
    begin_IR
      LIR
      nr 2562  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 2564  <|@ instruction rdx|QWORD = DEC rdx|QWORD size: QWORD <|@ <|@
      nr 2566  <|@ instruction CMP (x: r10|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr 2568  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B256 -> B257 falseDestination: B256 -> B258 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B258"
    from_bci -1
    to_bci -1
    predecessors "B256" 
    successors "B261" 
    xhandlers
    flags 
    probability 4592008490372696935
    begin_IR
      LIR
      nr 2574  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2576  <|@ instruction MOV (x: [rcx|QWORD[.] + r10|QWORD * 2], y: r12|ILLEGAL) size: WORD <|@ <|@
      nr 2578  <|@ instruction JUMP ~[] destination: B258 -> B261 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B75" 
    xhandlers
    flags 
    probability 4592102888872906507
    begin_IR
      LIR
      nr  762  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  764  <|@ instruction JUMP ~[] destination: B74 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4589678796991780868
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   84  <|@ instruction CMP (x: rdi|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr   86  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4589628653228494709
    begin_IR
      LIR
      nr  106  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  108  <|@ instruction MOV (x: [r15|QWORD + 96], y: rdi|QWORD) size: QWORD <|@ <|@
      nr  110  <|@ instruction AMD64PREFETCH ~[r11|QWORD + 240] instr: 0 <|@ <|@
      nr  112  <|@ instruction rdi|QWORD[*] = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  114  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B6" 
    successors "B75" 
    xhandlers
    flags 
    probability 4589678796991780868
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  118  <|@ instruction xmm0|V256_QWORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr  120  <|@ instruction rsi|QWORD[.] = MOVE rdi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  122  <|@ instruction MOV [rdi|QWORD[*] + 12] y: 16 size: DWORD <|@ <|@
      nr  124  <|@ instruction MOV [rdi|QWORD[*]] y: 1 size: QWORD <|@ <|@
      nr  126  <|@ instruction MOV [rdi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr  128  <|@ instruction J (address: [rdi|QWORD[*] + 16], input: xmm0|V256_QWORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr  130  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  132  <|@ instruction r8|DWORD = MOVE input: int[16|0x10] <|@ <|@
      nr  134  <|@ instruction r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  136  <|@ instruction JUMP ~[] destination: B8 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors "B144" 
    xhandlers
    flags 
    probability 4587675027572901137
    begin_IR
      LIR
      nr  894  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  896  <|@ instruction r13|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  898  <|@ instruction rcx|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  900  <|@ instruction r14|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  902  <|@ instruction JUMP ~[] destination: B82 -> B144 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B144"
    from_bci -1
    to_bci -1
    predecessors "B143" "B82" 
    successors "B145" 
    xhandlers
    flags 
    probability 4588182886451812978
    begin_IR
      LIR
      nr 1510  <|@ instruction [] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr 1512  <|@ instruction stack:112|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1514  <|@ instruction r11|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1516  <|@ instruction r10|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1518  <|@ instruction r13|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1520  <|@ instruction rsi|DWORD = MOVE stack:56|DWORD moveKind: DWORD <|@ <|@
      nr 1522  <|@ instruction JUMP ~[] destination: B144 -> B145 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B145"
    from_bci -1
    to_bci -1
    predecessors "B144" "B200" "B148" 
    successors "B146" "B204" 
    xhandlers
    flags "llh" 
    loop_index 5
    loop_depth 1
    probability 4602160059308521155
    begin_IR
      LIR
      nr 1524  <|@ instruction [] = LABEL numbPhis: 3 align: true label: ? <|@ <|@
      nr 1526  <|@ instruction CMP (x: rsi|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr 1528  <|@ instruction BRANCH trueDestinationProbability: 0.8818677814780699 condition: > trueDestination: B145 -> B146 falseDestination: B145 -> B204 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B146"
    from_bci -1
    to_bci -1
    predecessors "B145" 
    successors "B147" "B150" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4601157301131518837
    begin_IR
      LIR
      nr 1530  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1532  <|@ instruction r8|DWORD = MOV [r10|QWORD[.] + 12] size: DWORD <|@ <|@
      nr 1534  <|@ instruction r9|DWORD = INC r11|DWORD size: DWORD <|@ <|@
      nr 1536  <|@ instruction rdx|DWORD = SUB (x: r9|DWORD, ~y: r8|DWORD) size: DWORD <|@ <|@
      nr 1538  <|@ instruction rbx|DWORD = INC r13|DWORD size: DWORD <|@ <|@
      nr 1540  <|@ instruction CMP rdx|DWORD y: 1 size: DWORD <|@ <|@
      nr 1542  <|@ instruction BRANCH trueDestinationProbability: 0.9354897578252553 condition: < trueDestination: B146 -> B147 falseDestination: B146 -> B150 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B147"
    from_bci -1
    to_bci -1
    predecessors "B146" 
    successors "B148" "B149" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4600674398023585731
    begin_IR
      LIR
      nr 1544  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1546  <|@ instruction CMP (x: r8|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr 1548  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B147 -> B148 falseDestination: B147 -> B149 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B148"
    from_bci -1
    to_bci -1
    predecessors "B147" 
    successors "B145" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 1
    probability 4600674398023585731
    begin_IR
      LIR
      nr 1550  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1552  <|@ instruction MOV (x: [r14|QWORD[.] + 12], y: r9|DWORD) size: DWORD <|@ <|@
      nr 1554  <|@ instruction MOV [r10|QWORD[.] + r11|DWORD * 2 + 16] y: 32 size: WORD <|@ <|@
      nr 1556  <|@ instruction r11|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr 1558  <|@ instruction r13|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1560  <|@ instruction JUMP ~[] destination: B148 -> B145 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B150"
    from_bci -1
    to_bci -1
    predecessors "B146" 
    successors "B151" "B152" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4583383671135353628
    begin_IR
      LIR
      nr 1570  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1572  <|@ instruction rdx|DWORD = SHL r8|DWORD size: DWORD <|@ <|@
      nr 1574  <|@ instruction rdx|DWORD = LEA [rdx|DWORD + 2] size: DWORD <|@ <|@
      nr 1576  <|@ instruction rcx|DWORD = SUB (x: rdx|DWORD, ~y: r9|DWORD) size: DWORD <|@ <|@
      nr 1578  <|@ instruction TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1580  <|@ instruction rdx|DWORD = CMOVE (falseValue: rdx|DWORD, ~trueValue: r9|DWORD) condition: < <|@ <|@
      nr 1582  <|@ instruction CMP rdx|DWORD y: 1 size: DWORD <|@ <|@
      nr 1584  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B150 -> B151 falseDestination: B150 -> B152 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B152"
    from_bci -1
    to_bci -1
    predecessors "B150" 
    successors "B153" "B154" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4583383671135353628
    begin_IR
      LIR
      nr 1594  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1596  <|@ instruction rcx|DWORD = MOVE input: int[2147483639|0x7ffffff7] <|@ <|@
      nr 1598  <|@ instruction rcx|DWORD = SUB (x: rcx|DWORD, ~y: rdx|DWORD) size: DWORD <|@ <|@
      nr 1600  <|@ instruction TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1602  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B152 -> B153 falseDestination: B152 -> B154 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B154"
    from_bci -1
    to_bci -1
    predecessors "B152" 
    successors "B155" "B202" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4583383671135353628
    begin_IR
      LIR
      nr 1612  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1614  <|@ instruction CMP (x: rdx|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr 1616  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B154 -> B155 falseDestination: B154 -> B202 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B155"
    from_bci -1
    to_bci -1
    predecessors "B154" 
    successors "B156" "B159" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4583383671135353628
    begin_IR
      LIR
      nr 1618  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1620  <|@ instruction rcx|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr 1622  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr 1624  <|@ instruction CMP rdx|DWORD y: 16777215 size: DWORD <|@ <|@
      nr 1626  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B155 -> B156 falseDestination: B155 -> B159 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B156"
    from_bci -1
    to_bci -1
    predecessors "B155" 
    successors "B157" "B158" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4582611026162660659
    begin_IR
      LIR
      nr 1628  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1630  <|@ instruction rax|DWORD = SHL rdx|DWORD size: DWORD <|@ <|@
      nr 1632  <|@ instruction rax|DWORD = LEA [rax|DWORD + 23] size: DWORD <|@ <|@
      nr 1634  <|@ instruction rax|DWORD = AND rax|DWORD y: -8 size: DWORD <|@ <|@
      nr 1636  <|@ instruction rax|QWORD = MOVSXD rax|DWORD size: QWORD <|@ <|@
      nr 1638  <|@ instruction rbp|QWORD = ADD (x: rax|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr 1640  <|@ instruction CMP (x: rbp|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr 1642  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B156 -> B157 falseDestination: B156 -> B158 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B158"
    from_bci -1
    to_bci -1
    predecessors "B156" 
    successors "B161" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4582541488115118292
    begin_IR
      LIR
      nr 1658  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1660  <|@ instruction MOV (x: [r15|QWORD + 96], y: rbp|QWORD) size: QWORD <|@ <|@
      nr 1662  <|@ instruction AMD64PREFETCH ~[rax|QWORD + rcx|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr 1664  <|@ instruction AMD64PREFETCH ~[rax|QWORD + rcx|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr 1666  <|@ instruction AMD64PREFETCH ~[rax|QWORD + rcx|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr 1668  <|@ instruction AMD64PREFETCH ~[rax|QWORD + rcx|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr 1670  <|@ instruction MOV (x: [rcx|QWORD + 12], y: rdx|DWORD) size: DWORD <|@ <|@
      nr 1672  <|@ instruction MOV [rcx|QWORD] y: 1 size: QWORD <|@ <|@
      nr 1674  <|@ instruction MOV [rcx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr 1676  <|@ instruction rcx|QWORD[.] = MOVE rcx|QWORD moveKind: QWORD <|@ <|@
      nr 1678  <|@ instruction rax|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1680  <|@ instruction r13|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr 1682  <|@ instruction stack:36|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1684  <|@ instruction stack:80|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr 1686  <|@ instruction stack:60|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr 1688  <|@ instruction stack:120|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1690  <|@ instruction r14|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr 1692  <|@ instruction JUMP ~[] destination: B158 -> B161 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B161"
    from_bci -1
    to_bci -1
    predecessors "B158" "B160" 
    successors "B162" "B163" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4583383671135353628
    begin_IR
      LIR
      nr 1728  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1730  <|@ instruction CMP (x: r13|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr 1732  <|@ instruction rdx|DWORD = CMOVE (falseValue: r13|DWORD, ~trueValue: r14|DWORD) condition: > <|@ <|@
      nr 1734  <|@ instruction rsi|QWORD = MOVSXD rdx|DWORD size: QWORD <|@ <|@
      nr 1736  <|@ instruction CMP rsi|QWORD y: 1 size: QWORD <|@ <|@
      nr 1738  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B161 -> B162 falseDestination: B161 -> B163 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B163"
    from_bci -1
    to_bci -1
    predecessors "B161" 
    successors "B164" "B165" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4578880071507983132
    begin_IR
      LIR
      nr 1744  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1746  <|@ instruction r10|QWORD[.] = MOVE stack:120|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1748  <|@ instruction rdx|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD <|@ <|@
      nr 1750  <|@ instruction r10|QWORD[.] = LEA [r10|QWORD[.] + 16] size: QWORD <|@ <|@
      nr 1752  <|@ instruction r11|QWORD = LEA [rsi|QWORD - 16] size: QWORD <|@ <|@
      nr 1754  <|@ instruction TEST (x: r11|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr 1756  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B163 -> B164 falseDestination: B163 -> B165 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B164"
    from_bci -1
    to_bci -1
    predecessors "B163" 
    successors "B168" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4576948459076250709
    begin_IR
      LIR
      nr 1758  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1760  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1762  <|@ instruction JUMP ~[] destination: B164 -> B168 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B168"
    from_bci -1
    to_bci -1
    predecessors "B164" "B167" 
    successors "B169" "B170" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4578880071507983132
    begin_IR
      LIR
      nr 1786  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1788  <|@ instruction r11|QWORD = LEA [rsi|QWORD - 8] size: QWORD <|@ <|@
      nr 1790  <|@ instruction CMP (x: r8|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr 1792  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B168 -> B169 falseDestination: B168 -> B170 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B170"
    from_bci -1
    to_bci -1
    predecessors "B168" 
    successors "B171" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4576948459076250709
    begin_IR
      LIR
      nr 1798  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1800  <|@ instruction xmm0|V128_WORD = H [r10|QWORD[.] + r8|QWORD * 2] nZ: XMM oh: VMOVDQU <|@ <|@
      nr 1802  <|@ instruction J (address: [rdx|QWORD[.] + r8|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr 1804  <|@ instruction r11|QWORD = LEA [r8|QWORD + 8] size: QWORD <|@ <|@
      nr 1806  <|@ instruction r8|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr 1808  <|@ instruction JUMP ~[] destination: B170 -> B171 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B171"
    from_bci -1
    to_bci -1
    predecessors "B170" "B169" 
    successors "B172" "B173" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4578880071507983132
    begin_IR
      LIR
      nr 1810  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1812  <|@ instruction r11|QWORD = LEA [rsi|QWORD - 4] size: QWORD <|@ <|@
      nr 1814  <|@ instruction CMP (x: r8|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr 1816  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B171 -> B172 falseDestination: B171 -> B173 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B173"
    from_bci -1
    to_bci -1
    predecessors "B171" 
    successors "B174" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4576948459076250709
    begin_IR
      LIR
      nr 1822  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1824  <|@ instruction xmm0|V64_WORD = H [r10|QWORD[.] + r8|QWORD * 2] nZ: XMM oh: VMOVQ <|@ <|@
      nr 1826  <|@ instruction J (address: [rdx|QWORD[.] + r8|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr 1828  <|@ instruction r11|QWORD = LEA [r8|QWORD + 4] size: QWORD <|@ <|@
      nr 1830  <|@ instruction r8|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr 1832  <|@ instruction JUMP ~[] destination: B173 -> B174 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B174"
    from_bci -1
    to_bci -1
    predecessors "B173" "B172" 
    successors "B175" "B176" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4578880071507983132
    begin_IR
      LIR
      nr 1834  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1836  <|@ instruction r11|QWORD = LEA [rsi|QWORD - 2] size: QWORD <|@ <|@
      nr 1838  <|@ instruction CMP (x: r8|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr 1840  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B174 -> B175 falseDestination: B174 -> B176 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B176"
    from_bci -1
    to_bci -1
    predecessors "B174" 
    successors "B177" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4576948459076250709
    begin_IR
      LIR
      nr 1846  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1848  <|@ instruction xmm0|V32_WORD = H [r10|QWORD[.] + r8|QWORD * 2] nZ: XMM oh: VMOVD <|@ <|@
      nr 1850  <|@ instruction J (address: [rdx|QWORD[.] + r8|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr 1852  <|@ instruction r11|QWORD = LEA [r8|QWORD + 2] size: QWORD <|@ <|@
      nr 1854  <|@ instruction r8|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr 1856  <|@ instruction JUMP ~[] destination: B176 -> B177 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B177"
    from_bci -1
    to_bci -1
    predecessors "B176" "B175" 
    successors "B178" "B179" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4578880071507983132
    begin_IR
      LIR
      nr 1858  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1860  <|@ instruction r11|QWORD = DEC rsi|QWORD size: QWORD <|@ <|@
      nr 1862  <|@ instruction CMP (x: r8|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr 1864  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B177 -> B178 falseDestination: B177 -> B179 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B179"
    from_bci -1
    to_bci -1
    predecessors "B177" 
    successors "B180" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4576948459076250709
    begin_IR
      LIR
      nr 1870  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1872  <|@ instruction r10|DWORD = MOVSX [r10|QWORD[.] + r8|QWORD * 2] size: DWORD <|@ <|@
      nr 1874  <|@ instruction MOV (x: [rdx|QWORD[.] + r8|QWORD * 2], y: r10|DWORD) size: WORD <|@ <|@
      nr 1876  <|@ instruction JUMP ~[] destination: B179 -> B180 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B180"
    from_bci -1
    to_bci -1
    predecessors "B162" "B179" "B178" 
    successors "B181" "B199" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4583383671135353628
    begin_IR
      LIR
      nr 1878  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1880  <|@ instruction rdx|QWORD = MOVSXD r13|DWORD size: QWORD <|@ <|@
      nr 1882  <|@ instruction CMP (x: rdx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1884  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B180 -> B181 falseDestination: B180 -> B199 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B199"
    from_bci -1
    to_bci -1
    predecessors "B180" 
    successors "B200" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4578880071507983132
    begin_IR
      LIR
      nr 2032  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2034  <|@ instruction r9|DWORD = MOVE stack:80|DWORD moveKind: DWORD <|@ <|@
      nr 2036  <|@ instruction rsi|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr 2038  <|@ instruction r11|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2040  <|@ instruction JUMP ~[] destination: B199 -> B200 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B200"
    from_bci -1
    to_bci -1
    predecessors "B199" "B197" "B196" 
    successors "B145" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 1
    probability 4583383671135353628
    begin_IR
      LIR
      nr 2042  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2044  <|@ instruction rdx|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr 2046  <|@ instruction r10|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@1d28dd80 encoding: base: 0 shift: 3 <|@ <|@
      nr 2048  <|@ instruction MOV (x: [r11|QWORD[.] + 16], y: r10|DWORD[.]) size: DWORD <|@ <|@
      nr 2050  <|@ instruction r14|QWORD[*] = SHR r11|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr 2052  <|@ instruction MOVB (x: [r14|QWORD[*] + rdx|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr 2054  <|@ instruction MOV (x: [r11|QWORD[.] + 12], y: r9|DWORD) size: DWORD <|@ <|@
      nr 2056  <|@ instruction MOV [rax|QWORD[.] + rsi|DWORD * 2 + 16] y: 32 size: WORD <|@ <|@
      nr 2058  <|@ instruction r10|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2060  <|@ instruction r13|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr 2062  <|@ instruction r14|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2064  <|@ instruction rsi|DWORD = MOVE stack:56|DWORD moveKind: DWORD <|@ <|@
      nr 2066  <|@ instruction r11|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr 2068  <|@ instruction JUMP ~[] destination: B200 -> B145 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B162"
    from_bci -1
    to_bci -1
    predecessors "B161" 
    successors "B180" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4578880071507983132
    begin_IR
      LIR
      nr 1740  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1742  <|@ instruction JUMP ~[] destination: B162 -> B180 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B181"
    from_bci -1
    to_bci -1
    predecessors "B180" 
    successors "B182" "B183" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4578880071507983132
    begin_IR
      LIR
      nr 1886  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1888  <|@ instruction r10|QWORD[.] = LEA [rax|QWORD[.] + rsi|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr 1890  <|@ instruction rdx|QWORD = SUB (x: rdx|QWORD, ~y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1892  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 16] size: QWORD <|@ <|@
      nr 1894  <|@ instruction TEST (x: rsi|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1896  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B181 -> B182 falseDestination: B181 -> B183 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B182"
    from_bci -1
    to_bci -1
    predecessors "B181" 
    successors "B186" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4576948459076250709
    begin_IR
      LIR
      nr 1898  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1900  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1902  <|@ instruction JUMP ~[] destination: B182 -> B186 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B186"
    from_bci -1
    to_bci -1
    predecessors "B182" "B185" 
    successors "B187" "B188" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4578880071507983132
    begin_IR
      LIR
      nr 1926  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1928  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 8] size: QWORD <|@ <|@
      nr 1930  <|@ instruction CMP (x: r11|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1932  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B186 -> B187 falseDestination: B186 -> B188 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B188"
    from_bci -1
    to_bci -1
    predecessors "B186" 
    successors "B189" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4576948459076250709
    begin_IR
      LIR
      nr 1938  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1940  <|@ instruction xmm0|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0> <|@ <|@
      nr 1942  <|@ instruction J (address: [r10|QWORD[.] + r11|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr 1944  <|@ instruction rsi|QWORD = LEA [r11|QWORD + 8] size: QWORD <|@ <|@
      nr 1946  <|@ instruction r11|QWORD = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr 1948  <|@ instruction JUMP ~[] destination: B188 -> B189 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B189"
    from_bci -1
    to_bci -1
    predecessors "B188" "B187" 
    successors "B190" "B191" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4578880071507983132
    begin_IR
      LIR
      nr 1950  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1952  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 4] size: QWORD <|@ <|@
      nr 1954  <|@ instruction CMP (x: r11|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1956  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B189 -> B190 falseDestination: B189 -> B191 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B191"
    from_bci -1
    to_bci -1
    predecessors "B189" 
    successors "B192" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4576948459076250709
    begin_IR
      LIR
      nr 1962  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1964  <|@ instruction xmm0|V64_WORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr 1966  <|@ instruction J (address: [r10|QWORD[.] + r11|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr 1968  <|@ instruction rsi|QWORD = LEA [r11|QWORD + 4] size: QWORD <|@ <|@
      nr 1970  <|@ instruction r11|QWORD = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr 1972  <|@ instruction JUMP ~[] destination: B191 -> B192 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B192"
    from_bci -1
    to_bci -1
    predecessors "B191" "B190" 
    successors "B193" "B194" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4578880071507983132
    begin_IR
      LIR
      nr 1974  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1976  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 2] size: QWORD <|@ <|@
      nr 1978  <|@ instruction CMP (x: r11|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1980  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B192 -> B193 falseDestination: B192 -> B194 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B194"
    from_bci -1
    to_bci -1
    predecessors "B192" 
    successors "B195" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4576948459076250709
    begin_IR
      LIR
      nr 1986  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1988  <|@ instruction xmm0|V32_WORD = L oc: SIMD<0,0> <|@ <|@
      nr 1990  <|@ instruction J (address: [r10|QWORD[.] + r11|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr 1992  <|@ instruction rsi|QWORD = LEA [r11|QWORD + 2] size: QWORD <|@ <|@
      nr 1994  <|@ instruction r11|QWORD = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr 1996  <|@ instruction JUMP ~[] destination: B194 -> B195 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B195"
    from_bci -1
    to_bci -1
    predecessors "B194" "B193" 
    successors "B196" "B197" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4578880071507983132
    begin_IR
      LIR
      nr 1998  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 2000  <|@ instruction rdx|QWORD = DEC rdx|QWORD size: QWORD <|@ <|@
      nr 2002  <|@ instruction CMP (x: r11|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr 2004  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B195 -> B196 falseDestination: B195 -> B197 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B197"
    from_bci -1
    to_bci -1
    predecessors "B195" 
    successors "B200" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4576948459076250709
    begin_IR
      LIR
      nr 2016  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2018  <|@ instruction MOV (x: [r10|QWORD[.] + r11|QWORD * 2], y: r12|ILLEGAL) size: WORD <|@ <|@
      nr 2020  <|@ instruction r9|DWORD = MOVE stack:80|DWORD moveKind: DWORD <|@ <|@
      nr 2022  <|@ instruction rsi|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr 2024  <|@ instruction r11|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2026  <|@ instruction JUMP ~[] destination: B197 -> B200 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B165"
    from_bci -1
    to_bci -1
    predecessors "B163" 
    successors "B166" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4569872872253242140
    begin_IR
      LIR
      nr 1764  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1766  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1768  <|@ instruction JUMP ~[] destination: B165 -> B166 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B201"
    from_bci -1
    to_bci -1
    predecessors "B166" 
    successors "B166" 
    xhandlers
    flags "lle" 
    loop_index 6
    loop_depth 2
    probability 4576948459076250709
    begin_IR
      LIR
      nr 2070  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr 2072  <|@ instruction JUMP ~[] destination: B201 -> B166 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B166"
    from_bci -1
    to_bci -1
    predecessors "B165" "B201" 
    successors "B167" "B201" 
    xhandlers
    flags "llh" 
    loop_index 6
    loop_depth 2
    probability 4578880071507983132
    begin_IR
      LIR
      nr 1770  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1772  <|@ instruction xmm0|V256_WORD = H [r10|QWORD[.] + r8|QWORD * 2] nZ: YMM oh: VMOVDQU <|@ <|@
      nr 1774  <|@ instruction J (address: [rdx|QWORD[.] + r8|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr 1776  <|@ instruction r8|QWORD = LEA [r8|QWORD + 16] size: QWORD <|@ <|@
      nr 1778  <|@ instruction CMP (x: r8|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr 1780  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B166 -> B167 falseDestination: B166 -> B201 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B169"
    from_bci -1
    to_bci -1
    predecessors "B168" 
    successors "B171" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4569872872253242140
    begin_IR
      LIR
      nr 1794  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1796  <|@ instruction JUMP ~[] destination: B169 -> B171 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B190"
    from_bci -1
    to_bci -1
    predecessors "B189" 
    successors "B192" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4569872872253242140
    begin_IR
      LIR
      nr 1958  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1960  <|@ instruction JUMP ~[] destination: B190 -> B192 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B193"
    from_bci -1
    to_bci -1
    predecessors "B192" 
    successors "B195" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4569872872253242140
    begin_IR
      LIR
      nr 1982  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1984  <|@ instruction JUMP ~[] destination: B193 -> B195 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B196"
    from_bci -1
    to_bci -1
    predecessors "B195" 
    successors "B200" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4569872872253242140
    begin_IR
      LIR
      nr 2006  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2008  <|@ instruction r9|DWORD = MOVE stack:80|DWORD moveKind: DWORD <|@ <|@
      nr 2010  <|@ instruction rsi|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr 2012  <|@ instruction r11|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2014  <|@ instruction JUMP ~[] destination: B196 -> B200 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B167"
    from_bci -1
    to_bci -1
    predecessors "B166" 
    successors "B168" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4569872872253242140
    begin_IR
      LIR
      nr 1782  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1784  <|@ instruction JUMP ~[] destination: B167 -> B168 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B172"
    from_bci -1
    to_bci -1
    predecessors "B171" 
    successors "B174" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4569872872253242140
    begin_IR
      LIR
      nr 1818  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1820  <|@ instruction JUMP ~[] destination: B172 -> B174 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B178"
    from_bci -1
    to_bci -1
    predecessors "B177" 
    successors "B180" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4569872872253242140
    begin_IR
      LIR
      nr 1866  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1868  <|@ instruction JUMP ~[] destination: B178 -> B180 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B183"
    from_bci -1
    to_bci -1
    predecessors "B181" 
    successors "B184" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4569872872253242140
    begin_IR
      LIR
      nr 1904  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1906  <|@ instruction xmm0|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0> <|@ <|@
      nr 1908  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1910  <|@ instruction JUMP ~[] destination: B183 -> B184 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B198"
    from_bci -1
    to_bci -1
    predecessors "B184" 
    successors "B184" 
    xhandlers
    flags "lle" 
    loop_index 7
    loop_depth 2
    probability 4576948459076250709
    begin_IR
      LIR
      nr 2028  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr 2030  <|@ instruction JUMP ~[] destination: B198 -> B184 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B184"
    from_bci -1
    to_bci -1
    predecessors "B183" "B198" 
    successors "B185" "B198" 
    xhandlers
    flags "llh" 
    loop_index 7
    loop_depth 2
    probability 4578880071507983132
    begin_IR
      LIR
      nr 1912  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1914  <|@ instruction J (address: [r10|QWORD[.] + r11|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr 1916  <|@ instruction r11|QWORD = LEA [r11|QWORD + 16] size: QWORD <|@ <|@
      nr 1918  <|@ instruction CMP (x: r11|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1920  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B184 -> B185 falseDestination: B184 -> B198 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B187"
    from_bci -1
    to_bci -1
    predecessors "B186" 
    successors "B189" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4569872872253242140
    begin_IR
      LIR
      nr 1934  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1936  <|@ instruction JUMP ~[] destination: B187 -> B189 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B175"
    from_bci -1
    to_bci -1
    predecessors "B174" 
    successors "B177" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4569872872253242140
    begin_IR
      LIR
      nr 1842  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1844  <|@ instruction JUMP ~[] destination: B175 -> B177 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B185"
    from_bci -1
    to_bci -1
    predecessors "B184" 
    successors "B186" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4569872872253242140
    begin_IR
      LIR
      nr 1922  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1924  <|@ instruction JUMP ~[] destination: B185 -> B186 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B159"
    from_bci -1
    to_bci -1
    predecessors "B155" 
    successors "B160" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4568327582307856200
    begin_IR
      LIR
      nr 1694  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1696  <|@ instruction stack:36|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1698  <|@ instruction stack:80|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr 1700  <|@ instruction stack:60|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr 1702  <|@ instruction stack:120|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1704  <|@ instruction stack:124|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr 1706  <|@ instruction JUMP ~[] destination: B159 -> B160 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B160"
    from_bci -1
    to_bci -1
    predecessors "B159" "B157" 
    successors "B161" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4568883886688195138
    begin_IR
      LIR
      nr 1708  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1710  <|@ instruction rcx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>} <|@ <|@
      nr 1712  <|@ instruction rsi|QWORD = MOVE rcx|QWORD moveKind: QWORD <|@ <|@
      nr 1714  <|@ instruction rax|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr 1716  <|@ instruction rdx|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr 1718  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1720  <|@ instruction r14|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr 1722  <|@ instruction r13|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr 1724  <|@ st <@st|@reference-map: [stack:8, stack:16]
live-base-pointers: []
java.util.Formatter$FormatSpecifier.justify(Formatter.java:2926) [bci: 80]
locals: - - stack:112|QWORD[.] - stack:56|DWORD stack:124|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:80] <|@ <|@
      nr 1726  <|@ instruction JUMP ~[] destination: B160 -> B161 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B157"
    from_bci -1
    to_bci -1
    predecessors "B156" 
    successors "B160" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4553032894102253477
    begin_IR
      LIR
      nr 1644  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1646  <|@ instruction stack:36|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1648  <|@ instruction stack:80|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr 1650  <|@ instruction stack:60|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr 1652  <|@ instruction stack:120|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1654  <|@ instruction stack:124|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr 1656  <|@ instruction JUMP ~[] destination: B157 -> B160 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B204"
    from_bci -1
    to_bci -1
    predecessors "B145" 
    successors "B206" 
    xhandlers
    flags 
    probability 4588182886451812978
    begin_IR
      LIR
      nr 2090  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2092  <|@ instruction stack:88|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2094  <|@ instruction r14|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr 2096  <|@ instruction r13|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2098  <|@ instruction JUMP ~[] destination: B204 -> B206 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B254"
    from_bci -1
    to_bci -1
    predecessors "B253" 
    successors "B256" 
    xhandlers
    flags 
    probability 4585056867508815770
    begin_IR
      LIR
      nr 2546  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2548  <|@ instruction JUMP ~[] destination: B254 -> B256 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B257"
    from_bci -1
    to_bci -1
    predecessors "B256" 
    successors "B261" 
    xhandlers
    flags 
    probability 4585056867508815770
    begin_IR
      LIR
      nr 2570  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2572  <|@ instruction JUMP ~[] destination: B257 -> B261 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B248"
    from_bci -1
    to_bci -1
    predecessors "B247" 
    successors "B250" 
    xhandlers
    flags 
    probability 4585056867508815770
    begin_IR
      LIR
      nr 2498  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2500  <|@ instruction JUMP ~[] destination: B248 -> B250 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B251"
    from_bci -1
    to_bci -1
    predecessors "B250" 
    successors "B253" 
    xhandlers
    flags 
    probability 4585056867508815770
    begin_IR
      LIR
      nr 2522  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2524  <|@ instruction JUMP ~[] destination: B251 -> B253 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B244"
    from_bci -1
    to_bci -1
    predecessors "B242" 
    successors "B245" 
    xhandlers
    flags 
    probability 4585056867508815770
    begin_IR
      LIR
      nr 2468  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2470  <|@ instruction xmm0|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0> <|@ <|@
      nr 2472  <|@ instruction r10|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 2474  <|@ instruction JUMP ~[] destination: B244 -> B245 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B259"
    from_bci -1
    to_bci -1
    predecessors "B245" 
    successors "B245" 
    xhandlers
    flags "lle" 
    loop_index 9
    loop_depth 1
    probability 4592008490372696935
    begin_IR
      LIR
      nr 2580  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr 2582  <|@ instruction JUMP ~[] destination: B259 -> B245 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B245"
    from_bci -1
    to_bci -1
    predecessors "B244" "B259" 
    successors "B246" "B259" 
    xhandlers
    flags "llh" 
    loop_index 9
    loop_depth 1
    probability 4594064066763556762
    begin_IR
      LIR
      nr 2476  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 2478  <|@ instruction J (address: [rcx|QWORD[.] + r10|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr 2480  <|@ instruction r10|QWORD = LEA [r10|QWORD + 16] size: QWORD <|@ <|@
      nr 2482  <|@ instruction CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr 2484  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B245 -> B246 falseDestination: B245 -> B259 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B239"
    from_bci -1
    to_bci -1
    predecessors "B238" 
    successors "B241" 
    xhandlers
    flags 
    probability 4585056867508815770
    begin_IR
      LIR
      nr 2430  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2432  <|@ instruction JUMP ~[] destination: B239 -> B241 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B246"
    from_bci -1
    to_bci -1
    predecessors "B245" 
    successors "B247" 
    xhandlers
    flags 
    probability 4585056867508815770
    begin_IR
      LIR
      nr 2486  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2488  <|@ instruction JUMP ~[] destination: B246 -> B247 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B236"
    from_bci -1
    to_bci -1
    predecessors "B235" 
    successors "B238" 
    xhandlers
    flags 
    probability 4585056867508815770
    begin_IR
      LIR
      nr 2406  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2408  <|@ instruction JUMP ~[] destination: B236 -> B238 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B230"
    from_bci -1
    to_bci -1
    predecessors "B229" 
    successors "B232" 
    xhandlers
    flags 
    probability 4585056867508815770
    begin_IR
      LIR
      nr 2358  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2360  <|@ instruction JUMP ~[] destination: B230 -> B232 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B233"
    from_bci -1
    to_bci -1
    predecessors "B232" 
    successors "B235" 
    xhandlers
    flags 
    probability 4585056867508815770
    begin_IR
      LIR
      nr 2382  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2384  <|@ instruction JUMP ~[] destination: B233 -> B235 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B226"
    from_bci -1
    to_bci -1
    predecessors "B224" 
    successors "B227" 
    xhandlers
    flags 
    probability 4585056867508815770
    begin_IR
      LIR
      nr 2328  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2330  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 2332  <|@ instruction JUMP ~[] destination: B226 -> B227 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B265"
    from_bci -1
    to_bci -1
    predecessors "B227" 
    successors "B227" 
    xhandlers
    flags "lle" 
    loop_index 8
    loop_depth 1
    probability 4592008490372696935
    begin_IR
      LIR
      nr 2654  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr 2656  <|@ instruction JUMP ~[] destination: B265 -> B227 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B227"
    from_bci -1
    to_bci -1
    predecessors "B226" "B265" 
    successors "B228" "B265" 
    xhandlers
    flags "llh" 
    loop_index 8
    loop_depth 1
    probability 4594064066763556762
    begin_IR
      LIR
      nr 2334  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 2336  <|@ instruction xmm0|V256_WORD = H [rcx|QWORD[.] + r11|QWORD * 2] nZ: YMM oh: VMOVDQU <|@ <|@
      nr 2338  <|@ instruction J (address: [rdx|QWORD[.] + r11|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr 2340  <|@ instruction r11|QWORD = LEA [r11|QWORD + 16] size: QWORD <|@ <|@
      nr 2342  <|@ instruction CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr 2344  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B227 -> B228 falseDestination: B227 -> B265 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B228"
    from_bci -1
    to_bci -1
    predecessors "B227" 
    successors "B229" 
    xhandlers
    flags 
    probability 4585056867508815770
    begin_IR
      LIR
      nr 2346  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2348  <|@ instruction JUMP ~[] destination: B228 -> B229 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B207"
    from_bci -1
    to_bci -1
    predecessors "B206" 
    successors "B208" "B209" 
    xhandlers
    flags 
    probability 4583674350779409410
    begin_IR
      LIR
      nr 2118  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2120  <|@ instruction TEST (x: r14|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr 2122  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B207 -> B208 falseDestination: B207 -> B209 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B209"
    from_bci -1
    to_bci -1
    predecessors "B207" 
    successors "B210" "B211" 
    xhandlers
    flags 
    probability 4583674350779409410
    begin_IR
      LIR
      nr 2132  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2134  <|@ instruction rax|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr 2136  <|@ instruction rsi|QWORD = LEA [rax|QWORD + 24] size: QWORD <|@ <|@
      nr 2138  <|@ instruction CMP (x: rsi|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr 2140  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B209 -> B210 falseDestination: B209 -> B211 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B211"
    from_bci -1
    to_bci -1
    predecessors "B209" 
    successors "B212" 
    xhandlers
    flags 
    probability 4583594179485699555
    begin_IR
      LIR
      nr 2160  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2162  <|@ instruction MOV (x: [r15|QWORD + 96], y: rsi|QWORD) size: QWORD <|@ <|@
      nr 2164  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 216] instr: 0 <|@ <|@
      nr 2166  <|@ instruction rax|QWORD[*] = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr 2168  <|@ instruction JUMP ~[] destination: B211 -> B212 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B212"
    from_bci -1
    to_bci -1
    predecessors "B211" "B210" 
    successors 
    xhandlers
    flags 
    probability 4583674350779409410
    begin_IR
      LIR
      nr 2170  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 2172  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[*] moveKind: QWORD <|@ <|@
      nr 2174  <|@ instruction rdx|QWORD = MOV [r10|QWORD + 168] size: QWORD <|@ <|@
      nr 2176  <|@ instruction MOV (x: [rax|QWORD[*]], y: rdx|QWORD) size: QWORD <|@ <|@
      nr 2178  <|@ instruction MOV [rax|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr 2180  <|@ instruction MOV [rax|QWORD[*] + 12] y: -559030611 size: DWORD c: NarrowOop[char[0]{}] <|@ <|@
      nr 2182  <|@ instruction MOV (x: [rax|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr 2184  <|@ instruction rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2186  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B220"
    from_bci -1
    to_bci -1
    predecessors "B216" 
    successors "B221" 
    xhandlers
    flags 
    probability 4583490895765258075
    begin_IR
      LIR
      nr 2272  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2274  <|@ instruction stack:72|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2276  <|@ instruction JUMP ~[] destination: B220 -> B221 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B221"
    from_bci -1
    to_bci -1
    predecessors "B220" "B218" 
    successors "B222" 
    xhandlers
    flags 
    probability 4584195926457373148
    begin_IR
      LIR
      nr 2278  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2280  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>} <|@ <|@
      nr 2282  <|@ instruction rdx|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr 2284  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 2286  <|@ instruction r13|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr 2288  <|@ st <@st|@reference-map: [stack:40, stack:56]
live-base-pointers: []
java.util.Formatter$FormatSpecifier.justify(Formatter.java:2927) [bci: 100]
locals: - - stack:88|QWORD[.] - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:100] <|@ <|@
      nr 2290  <|@ instruction JUMP ~[] destination: B221 -> B222 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B85" "B86" 
    xhandlers
    flags 
    probability 4581235090039285951
    begin_IR
      LIR
      nr  912  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  914  <|@ instruction r14|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  916  <|@ instruction r10|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  918  <|@ instruction r13|QWORD = MOVE rbx|QWORD moveKind: QWORD <|@ <|@
      nr  920  <|@ instruction stack:36|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  922  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  924  <|@ instruction rdx|QWORD = LEA [rsi|QWORD + 24] size: QWORD <|@ <|@
      nr  926  <|@ instruction CMP (x: rdx|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr  928  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B84 -> B85 falseDestination: B84 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B87" 
    xhandlers
    flags 
    probability 4581179311352977331
    begin_IR
      LIR
      nr  954  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  956  <|@ instruction MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  958  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 216] instr: 0 <|@ <|@
      nr  960  <|@ instruction rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  962  <|@ instruction stack:96|QWORD = MOVE r8|QWORD moveKind: QWORD <|@ <|@
      nr  964  <|@ instruction r10|DWORD = MOVE stack:76|DWORD moveKind: DWORD <|@ <|@
      nr  966  <|@ instruction JUMP ~[] destination: B86 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B86" "B85" 
    successors "B88" "B89" 
    xhandlers
    flags 
    probability 4581235090039285951
    begin_IR
      LIR
      nr  968  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  970  <|@ instruction rdi|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  972  <|@ instruction stack:104|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  974  <|@ instruction rax|QWORD = MOV [r13|QWORD + 168] size: QWORD <|@ <|@
      nr  976  <|@ instruction MOV (x: [rsi|QWORD[*]], y: rax|QWORD) size: QWORD <|@ <|@
      nr  978  <|@ instruction MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} <|@ <|@
      nr  980  <|@ instruction MOV (x: [rsi|QWORD[*] + 12], y: r10|DWORD) size: DWORD <|@ <|@
      nr  982  <|@ instruction MOV (x: [rsi|QWORD[*] + 16], y: r9|DWORD[.]) size: DWORD <|@ <|@
      nr  984  <|@ instruction rsi|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  986  <|@ instruction rdx|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  988  <|@ st <@st|@reference-map: [stack:24, stack:56, stack:96]
live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
stack: stack:104|QWORD[.] stack:72|QWORD[.] 
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
locals: stack:104|QWORD[.] stack:32|QWORD[.] stack:40|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
locals: stack:104|QWORD[.] - 
java.util.Formatter$FormatSpecifier.justify(Formatter.java:2924) [bci: 69]
locals: - - stack:104|QWORD[.] stack:52|DWORD stack:56|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractStringBuilder.newCapacity(int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:17, 21, 2, 69] <|@ <|@
      nr  990  <|@ instruction r13|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  992  <|@ instruction rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  994  <|@ instruction r14|DWORD[.] = MOV [rdx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  996  <|@ instruction r10|DWORD = MOVE stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  998  <|@ st <@st|@reference-map: [rdx:0, r14:0, stack:24, stack:56, stack:96]
live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
stack: stack:104|QWORD[.] stack:72|QWORD[.] r13|DWORD 
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
locals: stack:104|QWORD[.] rdx|QWORD[.] r10|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
locals: stack:104|QWORD[.] - 
java.util.Formatter$FormatSpecifier.justify(Formatter.java:2924) [bci: 69]
locals: - - stack:104|QWORD[.] stack:52|DWORD stack:56|DWORD - 
>@ <|@ instruction CMP (x: r10|DWORD, y: [r14|DWORD[.] * 8 + 12]) size: DWORD state [bci:20, 21, 2, 69] <|@ <|@
      nr 1000  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: |>| trueDestination: B87 -> B88 falseDestination: B87 -> B89 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B90" "B92" 
    xhandlers
    flags 
    probability 4581235090039285951
    begin_IR
      LIR
      nr 1012  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1014  <|@ instruction TEST (x: r13|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr 1016  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B89 -> B90 falseDestination: B89 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B89" 
    successors "B93" "B96" 
    xhandlers
    flags 
    probability 4581235090039285951
    begin_IR
      LIR
      nr 1036  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1038  <|@ instruction r11|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr 1040  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr 1042  <|@ instruction rcx|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr 1044  <|@ instruction CMP r13|DWORD y: 16777215 size: DWORD <|@ <|@
      nr 1046  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B92 -> B93 falseDestination: B92 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B94" "B95" 
    xhandlers
    flags 
    probability 4580677303176199750
    begin_IR
      LIR
      nr 1048  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1050  <|@ instruction r8|DWORD = SHL r13|DWORD size: DWORD <|@ <|@
      nr 1052  <|@ instruction r8|DWORD = LEA [r8|DWORD + 23] size: DWORD <|@ <|@
      nr 1054  <|@ instruction r8|DWORD = AND r8|DWORD y: -8 size: DWORD <|@ <|@
      nr 1056  <|@ instruction r8|QWORD = MOVSXD r8|DWORD size: QWORD <|@ <|@
      nr 1058  <|@ instruction r9|QWORD = ADD (x: r8|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1060  <|@ instruction CMP (x: r9|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr 1062  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B93 -> B94 falseDestination: B93 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B98" 
    xhandlers
    flags 
    probability 4580627102358521992
    begin_IR
      LIR
      nr 1070  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1072  <|@ instruction MOV (x: [r15|QWORD + 96], y: r9|QWORD) size: QWORD <|@ <|@
      nr 1074  <|@ instruction AMD64PREFETCH ~[r8|QWORD + rsi|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr 1076  <|@ instruction AMD64PREFETCH ~[r8|QWORD + rsi|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr 1078  <|@ instruction AMD64PREFETCH ~[r8|QWORD + rsi|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr 1080  <|@ instruction AMD64PREFETCH ~[r8|QWORD + rsi|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr 1082  <|@ instruction MOV (x: [rsi|QWORD + 12], y: r13|DWORD) size: DWORD <|@ <|@
      nr 1084  <|@ instruction MOV [rsi|QWORD] y: 1 size: QWORD <|@ <|@
      nr 1086  <|@ instruction MOV [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr 1088  <|@ instruction rsi|QWORD[.] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr 1090  <|@ instruction rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1092  <|@ instruction stack:76|DWORD[.] = MOVE r14|DWORD[.] moveKind: DWORD <|@ <|@
      nr 1094  <|@ instruction r14|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr 1096  <|@ instruction r11|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr 1098  <|@ instruction JUMP ~[] destination: B95 -> B98 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B95" "B97" 
    successors "B99" "B100" 
    xhandlers
    flags 
    probability 4581235090039285952
    begin_IR
      LIR
      nr 1122  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1124  <|@ instruction CMP (x: r13|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr 1126  <|@ instruction rdi|DWORD = CMOVE (falseValue: r13|DWORD, ~trueValue: r11|DWORD) condition: > <|@ <|@
      nr 1128  <|@ instruction rdi|QWORD = MOVSXD rdi|DWORD size: QWORD <|@ <|@
      nr 1130  <|@ instruction CMP rdi|QWORD y: 1 size: QWORD <|@ <|@
      nr 1132  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B98 -> B99 falseDestination: B98 -> B100 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B98" 
    successors "B101" "B102" 
    xhandlers
    flags 
    probability 4576731490411915456
    begin_IR
      LIR
      nr 1138  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1140  <|@ instruction r10|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1142  <|@ instruction rsi|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD <|@ <|@
      nr 1144  <|@ instruction rdx|QWORD[.] = LEA [r10|QWORD[.] + 16] size: QWORD <|@ <|@
      nr 1146  <|@ instruction r10|QWORD = LEA [rdi|QWORD - 16] size: QWORD <|@ <|@
      nr 1148  <|@ instruction TEST (x: r10|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr 1150  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B100 -> B101 falseDestination: B100 -> B102 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B105" 
    xhandlers
    flags 
    probability 4575016825099975968
    begin_IR
      LIR
      nr 1152  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1154  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1156  <|@ instruction JUMP ~[] destination: B101 -> B105 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B101" "B104" 
    successors "B106" "B107" 
    xhandlers
    flags 
    probability 4576731490411915456
    begin_IR
      LIR
      nr 1180  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1182  <|@ instruction r10|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr 1184  <|@ instruction CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr 1186  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B105 -> B106 falseDestination: B105 -> B107 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B105" 
    successors "B108" 
    xhandlers
    flags 
    probability 4575016825099975968
    begin_IR
      LIR
      nr 1192  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1194  <|@ instruction xmm0|V128_WORD = H [rdx|QWORD[.] + r11|QWORD * 2] nZ: XMM oh: VMOVDQU <|@ <|@
      nr 1196  <|@ instruction J (address: [rsi|QWORD[.] + r11|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr 1198  <|@ instruction r10|QWORD = LEA [r11|QWORD + 8] size: QWORD <|@ <|@
      nr 1200  <|@ instruction r11|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr 1202  <|@ instruction JUMP ~[] destination: B107 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B107" "B106" 
    successors "B109" "B110" 
    xhandlers
    flags 
    probability 4576731490411915456
    begin_IR
      LIR
      nr 1204  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1206  <|@ instruction r10|QWORD = LEA [rdi|QWORD - 4] size: QWORD <|@ <|@
      nr 1208  <|@ instruction CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr 1210  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B108 -> B109 falseDestination: B108 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B111" 
    xhandlers
    flags 
    probability 4575016825099975968
    begin_IR
      LIR
      nr 1216  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1218  <|@ instruction xmm0|V64_WORD = H [rdx|QWORD[.] + r11|QWORD * 2] nZ: XMM oh: VMOVQ <|@ <|@
      nr 1220  <|@ instruction J (address: [rsi|QWORD[.] + r11|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr 1222  <|@ instruction r10|QWORD = LEA [r11|QWORD + 4] size: QWORD <|@ <|@
      nr 1224  <|@ instruction r11|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr 1226  <|@ instruction JUMP ~[] destination: B110 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B110" "B109" 
    successors "B112" "B113" 
    xhandlers
    flags 
    probability 4576731490411915456
    begin_IR
      LIR
      nr 1228  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1230  <|@ instruction r10|QWORD = LEA [rdi|QWORD - 2] size: QWORD <|@ <|@
      nr 1232  <|@ instruction CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr 1234  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B111 -> B112 falseDestination: B111 -> B113 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B114" 
    xhandlers
    flags 
    probability 4575016825099975968
    begin_IR
      LIR
      nr 1240  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1242  <|@ instruction xmm0|V32_WORD = H [rdx|QWORD[.] + r11|QWORD * 2] nZ: XMM oh: VMOVD <|@ <|@
      nr 1244  <|@ instruction J (address: [rsi|QWORD[.] + r11|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr 1246  <|@ instruction r10|QWORD = LEA [r11|QWORD + 2] size: QWORD <|@ <|@
      nr 1248  <|@ instruction r11|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr 1250  <|@ instruction JUMP ~[] destination: B113 -> B114 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B113" "B112" 
    successors "B115" "B116" 
    xhandlers
    flags 
    probability 4576731490411915456
    begin_IR
      LIR
      nr 1252  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1254  <|@ instruction r10|QWORD = DEC rdi|QWORD size: QWORD <|@ <|@
      nr 1256  <|@ instruction CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr 1258  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B114 -> B115 falseDestination: B114 -> B116 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors "B117" 
    xhandlers
    flags 
    probability 4575016825099975968
    begin_IR
      LIR
      nr 1264  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1266  <|@ instruction rdx|DWORD = MOVSX [rdx|QWORD[.] + r11|QWORD * 2] size: DWORD <|@ <|@
      nr 1268  <|@ instruction MOV (x: [rsi|QWORD[.] + r11|QWORD * 2], y: rdx|DWORD) size: WORD <|@ <|@
      nr 1270  <|@ instruction JUMP ~[] destination: B116 -> B117 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B99" "B116" "B115" 
    successors "B118" "B136" 
    xhandlers
    flags 
    probability 4581235090039285952
    begin_IR
      LIR
      nr 1272  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1274  <|@ instruction rsi|QWORD = MOVSXD r13|DWORD size: QWORD <|@ <|@
      nr 1276  <|@ instruction CMP (x: rsi|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr 1278  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B117 -> B118 falseDestination: B117 -> B136 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B136"
    from_bci -1
    to_bci -1
    predecessors "B117" 
    successors "B137" 
    xhandlers
    flags 
    probability 4576731490411915456
    begin_IR
      LIR
      nr 1418  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1420  <|@ instruction rdi|QWORD[.] = MOVE stack:104|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1422  <|@ instruction JUMP ~[] destination: B136 -> B137 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B137"
    from_bci -1
    to_bci -1
    predecessors "B136" "B134" "B133" 
    successors "B138" "B139" 
    xhandlers
    flags 
    probability 4581235090039285952
    begin_IR
      LIR
      nr 1424  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1426  <|@ instruction rsi|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@1d28dd80 encoding: base: 0 shift: 3 <|@ <|@
      nr 1428  <|@ instruction MOV (x: [rdi|QWORD[.] + 16], y: rsi|DWORD[.]) size: DWORD <|@ <|@
      nr 1430  <|@ instruction rsi|QWORD[*] = SHR rdi|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr 1432  <|@ instruction MOVB (x: [rsi|QWORD[*] + r14|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr 1434  <|@ instruction r10|DWORD = MOV [rdi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr 1436  <|@ instruction TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr 1438  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B137 -> B138 falseDestination: B137 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B139"
    from_bci -1
    to_bci -1
    predecessors "B137" 
    successors "B140" "B142" 
    xhandlers
    flags 
    probability 4581179311352977332
    begin_IR
      LIR
      nr 1444  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1446  <|@ instruction r13|DWORD = SUB (x: r13|DWORD, ~y: stack:40|DWORD) size: DWORD <|@ <|@
      nr 1448  <|@ instruction CMP (x: r10|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr 1450  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B139 -> B140 falseDestination: B139 -> B142 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B142"
    from_bci -1
    to_bci -1
    predecessors "B139" 
    successors "B143" "B205" 
    xhandlers
    flags 
    probability 4581124090453531798
    begin_IR
      LIR
      nr 1464  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1466  <|@ instruction r11|DWORD[.] = MOVE stack:76|DWORD[.] moveKind: DWORD <|@ <|@
      nr 1468  <|@ instruction r14|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1d28dd80 encoding: base: 0 shift: 3 <|@ <|@
      nr 1470  <|@ instruction r14|QWORD[*] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1472  <|@ instruction rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1474  <|@ instruction rdx|QWORD = MOVSXD r10|DWORD size: QWORD <|@ <|@
      nr 1476  <|@ instruction rdi|QWORD = LEA [r14|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1478  <|@ instruction rsi|QWORD = LEA [rsi|QWORD[*] + rdx|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr 1480  <|@ instruction rdx|QWORD = MOVE stack:96|QWORD moveKind: QWORD <|@ <|@
      nr 1482  <|@ instruction stack:72|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1484  <|@ instruction stack:36|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr 1486  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charArraycopy(Word,Word,Word)void@0x106812d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr 1488  <|@ instruction r10|DWORD = ADD (x: stack:40|DWORD, y: stack:36|DWORD) size: DWORD <|@ <|@
      nr 1490  <|@ instruction rdi|QWORD[.] = MOVE stack:104|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1492  <|@ instruction MOV (x: [rdi|QWORD[.] + 12], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1494  <|@ instruction r9|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1496  <|@ instruction CMP (x: r9|DWORD, y: stack:48|DWORD) size: DWORD <|@ <|@
      nr 1498  <|@ instruction BRANCH trueDestinationProbability: 0.18579515065073993 condition: = trueDestination: B142 -> B143 falseDestination: B142 -> B205 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B205"
    from_bci -1
    to_bci -1
    predecessors "B142" 
    successors "B206" 
    xhandlers
    flags 
    probability 4580055924355621800
    begin_IR
      LIR
      nr 2100  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2102  <|@ instruction stack:88|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2104  <|@ instruction r14|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr 2106  <|@ instruction r13|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2108  <|@ instruction JUMP ~[] destination: B205 -> B206 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B98" 
    successors "B117" 
    xhandlers
    flags 
    probability 4576731490411915456
    begin_IR
      LIR
      nr 1134  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1136  <|@ instruction JUMP ~[] destination: B99 -> B117 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B117" 
    successors "B119" "B120" 
    xhandlers
    flags 
    probability 4576731490411915456
    begin_IR
      LIR
      nr 1280  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1282  <|@ instruction rdx|QWORD[.] = LEA [rax|QWORD[.] + rdi|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr 1284  <|@ instruction rsi|QWORD = SUB (x: rsi|QWORD, ~y: rdi|QWORD) size: QWORD <|@ <|@
      nr 1286  <|@ instruction rdi|QWORD = LEA [rsi|QWORD - 16] size: QWORD <|@ <|@
      nr 1288  <|@ instruction TEST (x: rdi|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr 1290  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B118 -> B119 falseDestination: B118 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B118" 
    successors "B123" 
    xhandlers
    flags 
    probability 4575016825099975968
    begin_IR
      LIR
      nr 1292  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1294  <|@ instruction r10|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1296  <|@ instruction JUMP ~[] destination: B119 -> B123 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B123"
    from_bci -1
    to_bci -1
    predecessors "B119" "B122" 
    successors "B124" "B125" 
    xhandlers
    flags 
    probability 4576731490411915456
    begin_IR
      LIR
      nr 1320  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1322  <|@ instruction rdi|QWORD = LEA [rsi|QWORD - 8] size: QWORD <|@ <|@
      nr 1324  <|@ instruction CMP (x: r10|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr 1326  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B123 -> B124 falseDestination: B123 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B125"
    from_bci -1
    to_bci -1
    predecessors "B123" 
    successors "B126" 
    xhandlers
    flags 
    probability 4575016825099975968
    begin_IR
      LIR
      nr 1332  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1334  <|@ instruction xmm0|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0> <|@ <|@
      nr 1336  <|@ instruction J (address: [rdx|QWORD[.] + r10|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr 1338  <|@ instruction rdi|QWORD = LEA [r10|QWORD + 8] size: QWORD <|@ <|@
      nr 1340  <|@ instruction r10|QWORD = MOVE rdi|QWORD moveKind: QWORD <|@ <|@
      nr 1342  <|@ instruction JUMP ~[] destination: B125 -> B126 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B126"
    from_bci -1
    to_bci -1
    predecessors "B125" "B124" 
    successors "B127" "B128" 
    xhandlers
    flags 
    probability 4576731490411915456
    begin_IR
      LIR
      nr 1344  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1346  <|@ instruction rdi|QWORD = LEA [rsi|QWORD - 4] size: QWORD <|@ <|@
      nr 1348  <|@ instruction CMP (x: r10|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr 1350  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B126 -> B127 falseDestination: B126 -> B128 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B128"
    from_bci -1
    to_bci -1
    predecessors "B126" 
    successors "B129" 
    xhandlers
    flags 
    probability 4575016825099975968
    begin_IR
      LIR
      nr 1356  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1358  <|@ instruction xmm0|V64_WORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr 1360  <|@ instruction J (address: [rdx|QWORD[.] + r10|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr 1362  <|@ instruction rdi|QWORD = LEA [r10|QWORD + 4] size: QWORD <|@ <|@
      nr 1364  <|@ instruction r10|QWORD = MOVE rdi|QWORD moveKind: QWORD <|@ <|@
      nr 1366  <|@ instruction JUMP ~[] destination: B128 -> B129 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B129"
    from_bci -1
    to_bci -1
    predecessors "B128" "B127" 
    successors "B130" "B131" 
    xhandlers
    flags 
    probability 4576731490411915456
    begin_IR
      LIR
      nr 1368  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1370  <|@ instruction rdi|QWORD = LEA [rsi|QWORD - 2] size: QWORD <|@ <|@
      nr 1372  <|@ instruction CMP (x: r10|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr 1374  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B129 -> B130 falseDestination: B129 -> B131 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B131"
    from_bci -1
    to_bci -1
    predecessors "B129" 
    successors "B132" 
    xhandlers
    flags 
    probability 4575016825099975968
    begin_IR
      LIR
      nr 1380  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1382  <|@ instruction xmm0|V32_WORD = L oc: SIMD<0,0> <|@ <|@
      nr 1384  <|@ instruction J (address: [rdx|QWORD[.] + r10|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr 1386  <|@ instruction rdi|QWORD = LEA [r10|QWORD + 2] size: QWORD <|@ <|@
      nr 1388  <|@ instruction r10|QWORD = MOVE rdi|QWORD moveKind: QWORD <|@ <|@
      nr 1390  <|@ instruction JUMP ~[] destination: B131 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B132"
    from_bci -1
    to_bci -1
    predecessors "B131" "B130" 
    successors "B133" "B134" 
    xhandlers
    flags 
    probability 4576731490411915456
    begin_IR
      LIR
      nr 1392  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1394  <|@ instruction rsi|QWORD = DEC rsi|QWORD size: QWORD <|@ <|@
      nr 1396  <|@ instruction CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1398  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B132 -> B133 falseDestination: B132 -> B134 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B134"
    from_bci -1
    to_bci -1
    predecessors "B132" 
    successors "B137" 
    xhandlers
    flags 
    probability 4575016825099975968
    begin_IR
      LIR
      nr 1406  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1408  <|@ instruction MOV (x: [rdx|QWORD[.] + r10|QWORD * 2], y: r12|ILLEGAL) size: WORD <|@ <|@
      nr 1410  <|@ instruction rdi|QWORD[.] = MOVE stack:104|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1412  <|@ instruction JUMP ~[] destination: B134 -> B137 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B143"
    from_bci -1
    to_bci -1
    predecessors "B142" 
    successors "B144" 
    xhandlers
    flags 
    probability 4570272164588901904
    begin_IR
      LIR
      nr 1500  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1502  <|@ instruction r14|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1504  <|@ instruction r13|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1506  <|@ instruction rcx|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr 1508  <|@ instruction JUMP ~[] destination: B143 -> B144 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4569166477141788452
    begin_IR
      LIR
      nr  144  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  146  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  148  <|@ instruction rdx|DWORD = MOVE input: int[8|0x8] <|@ <|@
      nr  150  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  152  <|@ st <@st|@reference-map: [r13:0, stack:92, stack:96]
live-base-pointers: []
java.util.Formatter$FormatSpecifier.justify(Formatter.java:2917) [bci: 0]
locals: r13|QWORD[.] stack:32|QWORD[.] - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr  154  <|@ instruction r13|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  156  <|@ instruction rsi|DWORD = MOVE stack:56|DWORD moveKind: DWORD <|@ <|@
      nr  158  <|@ instruction rbx|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  160  <|@ instruction rcx|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  162  <|@ instruction r9|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  164  <|@ instruction r10|DWORD = MOVE stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  166  <|@ instruction r14|DWORD[.] = MOVE stack:36|DWORD[.] moveKind: DWORD <|@ <|@
      nr  168  <|@ instruction rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  170  <|@ instruction JUMP ~[] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B81" 
    xhandlers
    flags 
    probability 4568617382837849976
    begin_IR
      LIR
      nr  836  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  838  <|@ instruction r13|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>} <|@ <|@
      nr  840  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  842  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr  844  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  846  <|@ st <@st|@reference-map: [stack:56, stack:68]
live-base-pointers: []
java.lang.String.getChars(String.java:827) [bci: 61]
locals: - - - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
locals: vobject:StringBuilder:0{count=stack:76|DWORD,value=stack:72|QWORD[.]} - stack:40|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
locals: vobject:StringBuilder:0{count=stack:76|DWORD,value=stack:72|QWORD[.]} - 
java.util.Formatter$FormatSpecifier.justify(Formatter.java:2924) [bci: 69]
locals: - - vobject:StringBuilder:0{count=stack:76|DWORD,value=stack:72|QWORD[.]} stack:52|DWORD stack:56|DWORD - 
vobject:StringBuilder:0{count=stack:76|DWORD,value=stack:72|QWORD[.]} Ljava/lang/StringBuilder; stack:76|DWORD stack:72|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:61, 35, 2, 69] <|@ <|@
      nr  848  <|@ instruction rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  850  <|@ instruction r14|DWORD = MOVE stack:80|DWORD moveKind: DWORD <|@ <|@
      nr  852  <|@ instruction r9|DWORD[.] = MOVE stack:60|DWORD[.] moveKind: DWORD <|@ <|@
      nr  854  <|@ instruction r10|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  856  <|@ instruction JUMP ~[] destination: B79 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B262"
    from_bci -1
    to_bci -1
    predecessors "B261" 
    successors "B264" 
    xhandlers
    flags 
    probability 4568413362011779766
    begin_IR
      LIR
      nr 2598  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2600  <|@ instruction r13|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2602  <|@ instruction r10|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr 2604  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr 2606  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr 2608  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 2610  <|@ instruction r14|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr 2612  <|@ st <@st|@reference-map: [r13:0, stack:40]
live-base-pointers: []
java.util.Formatter$FormatSpecifier.justify(Formatter.java:2927) [bci: 100]
locals: - - stack:88|QWORD[.] - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:100] <|@ <|@
      nr 2614  <|@ instruction rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2616  <|@ instruction rax|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2618  <|@ instruction r10|QWORD = MOVE r14|QWORD moveKind: QWORD <|@ <|@
      nr 2620  <|@ instruction JUMP ~[] destination: B262 -> B264 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B218"
    from_bci -1
    to_bci -1
    predecessors "B217" 
    successors "B221" 
    xhandlers
    flags 
    probability 4567786668063233035
    begin_IR
      LIR
      nr 2240  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2242  <|@ instruction stack:72|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2244  <|@ instruction JUMP ~[] destination: B218 -> B221 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B114" 
    xhandlers
    flags 
    probability 4567724291157174464
    begin_IR
      LIR
      nr 1236  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1238  <|@ instruction JUMP ~[] destination: B112 -> B114 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors "B117" 
    xhandlers
    flags 
    probability 4567724291157174464
    begin_IR
      LIR
      nr 1260  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1262  <|@ instruction JUMP ~[] destination: B115 -> B117 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B105" 
    successors "B108" 
    xhandlers
    flags 
    probability 4567724291157174464
    begin_IR
      LIR
      nr 1188  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1190  <|@ instruction JUMP ~[] destination: B106 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B111" 
    xhandlers
    flags 
    probability 4567724291157174464
    begin_IR
      LIR
      nr 1212  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1214  <|@ instruction JUMP ~[] destination: B109 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B103" 
    xhandlers
    flags 
    probability 4567724291157174464
    begin_IR
      LIR
      nr 1158  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1160  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1162  <|@ instruction JUMP ~[] destination: B102 -> B103 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B266"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B103" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4575016825099975968
    begin_IR
      LIR
      nr 2658  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr 2660  <|@ instruction JUMP ~[] destination: B266 -> B103 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B102" "B266" 
    successors "B104" "B266" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4576731490411915456
    begin_IR
      LIR
      nr 1164  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1166  <|@ instruction xmm0|V256_WORD = H [rdx|QWORD[.] + r11|QWORD * 2] nZ: YMM oh: VMOVDQU <|@ <|@
      nr 1168  <|@ instruction J (address: [rsi|QWORD[.] + r11|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr 1170  <|@ instruction r11|QWORD = LEA [r11|QWORD + 16] size: QWORD <|@ <|@
      nr 1172  <|@ instruction CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr 1174  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B103 -> B104 falseDestination: B103 -> B266 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B133"
    from_bci -1
    to_bci -1
    predecessors "B132" 
    successors "B137" 
    xhandlers
    flags 
    probability 4567724291157174464
    begin_IR
      LIR
      nr 1400  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1402  <|@ instruction rdi|QWORD[.] = MOVE stack:104|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1404  <|@ instruction JUMP ~[] destination: B133 -> B137 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B105" 
    xhandlers
    flags 
    probability 4567724291157174464
    begin_IR
      LIR
      nr 1176  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1178  <|@ instruction JUMP ~[] destination: B104 -> B105 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B130"
    from_bci -1
    to_bci -1
    predecessors "B129" 
    successors "B132" 
    xhandlers
    flags 
    probability 4567724291157174464
    begin_IR
      LIR
      nr 1376  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1378  <|@ instruction JUMP ~[] destination: B130 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B118" 
    successors "B121" 
    xhandlers
    flags 
    probability 4567724291157174464
    begin_IR
      LIR
      nr 1298  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1300  <|@ instruction xmm0|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0> <|@ <|@
      nr 1302  <|@ instruction r10|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1304  <|@ instruction JUMP ~[] destination: B120 -> B121 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B135"
    from_bci -1
    to_bci -1
    predecessors "B121" 
    successors "B121" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4575016825099975968
    begin_IR
      LIR
      nr 1414  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr 1416  <|@ instruction JUMP ~[] destination: B135 -> B121 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B120" "B135" 
    successors "B122" "B135" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4576731490411915456
    begin_IR
      LIR
      nr 1306  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1308  <|@ instruction J (address: [rdx|QWORD[.] + r10|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr 1310  <|@ instruction r10|QWORD = LEA [r10|QWORD + 16] size: QWORD <|@ <|@
      nr 1312  <|@ instruction CMP (x: r10|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr 1314  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B121 -> B122 falseDestination: B121 -> B135 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B127"
    from_bci -1
    to_bci -1
    predecessors "B126" 
    successors "B129" 
    xhandlers
    flags 
    probability 4567724291157174464
    begin_IR
      LIR
      nr 1352  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1354  <|@ instruction JUMP ~[] destination: B127 -> B129 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B121" 
    successors "B123" 
    xhandlers
    flags 
    probability 4567724291157174464
    begin_IR
      LIR
      nr 1316  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1318  <|@ instruction JUMP ~[] destination: B122 -> B123 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B124"
    from_bci -1
    to_bci -1
    predecessors "B123" 
    successors "B126" 
    xhandlers
    flags 
    probability 4567724291157174464
    begin_IR
      LIR
      nr 1328  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1330  <|@ instruction JUMP ~[] destination: B124 -> B126 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B97" 
    xhandlers
    flags 
    probability 4566567412708321174
    begin_IR
      LIR
      nr 1100  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1102  <|@ instruction stack:76|DWORD[.] = MOVE r14|DWORD[.] moveKind: DWORD <|@ <|@
      nr 1104  <|@ instruction JUMP ~[] destination: B96 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B96" "B94" 
    successors "B98" 
    xhandlers
    flags 
    probability 4567010323972424124
    begin_IR
      LIR
      nr 1106  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1108  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>} <|@ <|@
      nr 1110  <|@ instruction rdx|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr 1112  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1114  <|@ instruction r14|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr 1116  <|@ st <@st|@reference-map: [stack:24, stack:52, stack:56, stack:96]
live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
stack: stack:104|QWORD[.] stack:72|QWORD[.] r13|DWORD 
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
locals: stack:104|QWORD[.] stack:32|QWORD[.] stack:40|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
locals: stack:104|QWORD[.] - 
java.util.Formatter$FormatSpecifier.justify(Formatter.java:2924) [bci: 69]
locals: - - stack:104|QWORD[.] stack:52|DWORD stack:56|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:20, 21, 2, 69] <|@ <|@
      nr 1118  <|@ instruction r11|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr 1120  <|@ instruction JUMP ~[] destination: B97 -> B98 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4559557624972199865
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   90  <|@ instruction r9|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr   92  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   94  <|@ instruction rdx|DWORD = MOVE input: int[8|0x8] <|@ <|@
      nr   96  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   98  <|@ instruction r14|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  100  <|@ st <@st|@reference-map: [r13:0, stack:92, stack:96]
live-base-pointers: []
java.util.Formatter$FormatSpecifier.justify(Formatter.java:2917) [bci: 0]
locals: r13|QWORD[.] stack:32|QWORD[.] - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr  102  <|@ instruction rdi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  104  <|@ instruction JUMP ~[] destination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B210"
    from_bci -1
    to_bci -1
    predecessors "B209" 
    successors "B212" 
    xhandlers
    flags 
    probability 4553766586441631668
    begin_IR
      LIR
      nr 2142  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2144  <|@ instruction r13|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr 2146  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr 2148  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr 2150  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 2152  <|@ st <@st|@reference-map: [stack:40]
live-base-pointers: []
java.util.Formatter$FormatSpecifier.justify(Formatter.java:2927) [bci: 100]
locals: - - stack:88|QWORD[.] - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:100] <|@ <|@
      nr 2154  <|@ instruction rax|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2156  <|@ instruction r10|QWORD = MOVE r13|QWORD moveKind: QWORD <|@ <|@
      nr 2158  <|@ instruction JUMP ~[] destination: B210 -> B212 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B138"
    from_bci -1
    to_bci -1
    predecessors "B137" 
    successors "B141" 
    xhandlers
    flags 
    probability 4551271695864333851
    begin_IR
      LIR
      nr 1440  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1442  <|@ instruction JUMP ~[] destination: B138 -> B141 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B141"
    from_bci -1
    to_bci -1
    predecessors "B138" "B140" 
    successors 
    xhandlers
    flags 
    probability 4555739597132466830
    begin_IR
      LIR
      nr 1456  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1458  <|@ instruction MOV [r15|QWORD + 668] y: -224097 size: DWORD <|@ <|@
      nr 1460  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1462  <|@ st <@st|@reference-map: [rdi:0, stack:96]
live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:127) [bci: 26]
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
locals: rdi|QWORD[.] stack:32|QWORD[.] stack:40|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
locals: rdi|QWORD[.] - 
java.util.Formatter$FormatSpecifier.justify(Formatter.java:2924) [bci: 69]
locals: - - rdi|QWORD[.] stack:52|DWORD stack:56|DWORD - 
>@ <|@ instruction DEOPT info [bci:26, 21, 2, 69] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B87" 
    xhandlers
    flags 
    probability 4551271695864333850
    begin_IR
      LIR
      nr  930  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  932  <|@ instruction stack:96|QWORD = MOVE r8|QWORD moveKind: QWORD <|@ <|@
      nr  934  <|@ instruction r14|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  936  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  938  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr  940  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  942  <|@ st <@st|@reference-map: [stack:56, stack:68, stack:96]
live-base-pointers: []
java.util.Formatter$FormatSpecifier.justify(Formatter.java:2924) [bci: 67]
locals: - stack:32|QWORD[.] vobject:StringBuilder:0{count=stack:76|DWORD,value=stack:72|QWORD[.]} stack:52|DWORD stack:56|DWORD - 
vobject:StringBuilder:0{count=stack:76|DWORD,value=stack:72|QWORD[.]} Ljava/lang/StringBuilder; stack:76|DWORD stack:72|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:67] <|@ <|@
      nr  944  <|@ instruction rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  946  <|@ instruction r9|DWORD[.] = MOVE stack:60|DWORD[.] moveKind: DWORD <|@ <|@
      nr  948  <|@ instruction r10|DWORD = MOVE stack:76|DWORD moveKind: DWORD <|@ <|@
      nr  950  <|@ instruction r14|DWORD = MOVE stack:80|DWORD moveKind: DWORD <|@ <|@
      nr  952  <|@ instruction JUMP ~[] destination: B85 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B140"
    from_bci -1
    to_bci -1
    predecessors "B139" 
    successors "B141" 
    xhandlers
    flags 
    probability 4551200299145858817
    begin_IR
      LIR
      nr 1452  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1454  <|@ instruction JUMP ~[] destination: B140 -> B141 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B97" 
    xhandlers
    flags 
    probability 4550557728679583512
    begin_IR
      LIR
      nr 1064  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1066  <|@ instruction stack:76|DWORD[.] = MOVE r14|DWORD[.] moveKind: DWORD <|@ <|@
      nr 1068  <|@ instruction JUMP ~[] destination: B94 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  800  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  802  <|@ instruction MOV [r15|QWORD + 668] y: -208993 size: DWORD <|@ <|@
      nr  804  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  806  <|@ st <@st|@reference-map: [r13:0, stack:96]
live-base-pointers: []
java.util.Formatter$FormatSpecifier.justify(Formatter.java:2924) [bci: 67]
locals: - stack:32|QWORD[.] vobject:StringBuilder:0{count=r10|DWORD,value=r13|QWORD[.]} stack:52|DWORD stack:56|DWORD - 
vobject:StringBuilder:0{count=r10|DWORD,value=r13|QWORD[.]} Ljava/lang/StringBuilder; r10|DWORD r13|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:67] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B89" 
    successors "B91" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1018  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1020  <|@ instruction rdi|QWORD[.] = MOVE stack:104|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1022  <|@ instruction r11|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr 1024  <|@ instruction r10|DWORD = MOVE input: int[-317537|0xfffffffffffb279f] // MoveResolver resolve mapping <|@ <|@
      nr 1026  <|@ instruction JUMP ~[] destination: B90 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B88" "B90" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1028  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1030  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1032  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1034  <|@ st <@st|@reference-map: [rdi:0, stack:56, stack:96]
live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
stack: rdi|QWORD[.] stack:72|QWORD[.] r13|DWORD 
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
locals: rdi|QWORD[.] stack:32|QWORD[.] r11|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
locals: rdi|QWORD[.] - 
java.util.Formatter$FormatSpecifier.justify(Formatter.java:2924) [bci: 69]
locals: - - rdi|QWORD[.] stack:52|DWORD stack:56|DWORD - 
>@ <|@ instruction DEOPT info [bci:20, 21, 2, 69] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B202"
    from_bci -1
    to_bci -1
    predecessors "B154" 
    successors "B203" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2074  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2076  <|@ instruction r10|DWORD = MOVE input: int[-232219|0xfffffffffffc74e5] <|@ <|@
      nr 2078  <|@ instruction r11|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2080  <|@ instruction JUMP ~[] destination: B202 -> B203 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B203"
    from_bci -1
    to_bci -1
    predecessors "B149" "B151" "B153" "B202" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr 2082  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 2084  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr 2086  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 2088  <|@ st <@st|@reference-map: [r11:0]
live-base-pointers: []
java.util.Formatter$FormatSpecifier.justify(Formatter.java:2926) [bci: 80]
locals: - - r11|QWORD[.] - rsi|DWORD r13|DWORD 
>@ <|@ instruction DEOPT info [bci:80] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B91" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1002  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1004  <|@ instruction rdi|QWORD[.] = MOVE stack:104|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1006  <|@ instruction r11|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr 1008  <|@ instruction r10|DWORD = MOVE input: int[-215571|0xfffffffffffcb5ed] <|@ <|@
      nr 1010  <|@ instruction JUMP ~[] destination: B88 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   38  <|@ instruction MOV [r15|QWORD + 668] y: -193803 size: DWORD <|@ <|@
      nr   40  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   42  <|@ st <@st|@reference-map: [r13:0, stack:96]
live-base-pointers: []
java.util.Formatter$FormatSpecifier.justify(Formatter.java:2917) [bci: 0]
locals: r13|QWORD[.] stack:32|QWORD[.] - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B73" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  308  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  310  <|@ instruction r8|DWORD = MOVE input: int[-198163|0xfffffffffffcf9ed] <|@ <|@
      nr  312  <|@ instruction r11|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  314  <|@ instruction r10|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  316  <|@ instruction rbx|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  318  <|@ instruction rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  320  <|@ instruction JUMP ~[] destination: B23 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B19" "B21" "B23" "B72" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr  754  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  756  <|@ instruction MOV (x: [r15|QWORD + 668], y: r8|DWORD) size: DWORD <|@ <|@
      nr  758  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  760  <|@ st <@st|@reference-map: [rdx:0, r10:0]
live-base-pointers: []
java.util.Formatter$FormatSpecifier.justify(Formatter.java:2923) [bci: 47]
locals: - rdx|QWORD[.] vobject:StringBuilder:0{count=r11|DWORD,value=r10|QWORD[.]} rbx|DWORD stack:56|DWORD r11|DWORD 
vobject:StringBuilder:0{count=r11|DWORD,value=r10|QWORD[.]} Ljava/lang/StringBuilder; r11|DWORD r10|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:47] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B153"
    from_bci -1
    to_bci -1
    predecessors "B152" 
    successors "B203" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1604  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1606  <|@ instruction r10|DWORD = MOVE input: int[-230675|0xfffffffffffc7aed] <|@ <|@
      nr 1608  <|@ instruction r11|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1610  <|@ instruction JUMP ~[] destination: B153 -> B203 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B208"
    from_bci -1
    to_bci -1
    predecessors "B207" 
    successors "B215" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2124  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2126  <|@ instruction r10|DWORD = MOVE input: int[-234003|0xfffffffffffc6ded] <|@ <|@
      nr 2128  <|@ instruction r11|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2130  <|@ instruction JUMP ~[] destination: B208 -> B215 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B215"
    from_bci -1
    to_bci -1
    predecessors "B208" "B214" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 2206  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 2208  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr 2210  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 2212  <|@ st <@st|@reference-map: [r11:0]
live-base-pointers: []
java.util.Formatter$FormatSpecifier.justify(Formatter.java:2927) [bci: 100]
locals: - - r11|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:100] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B151"
    from_bci -1
    to_bci -1
    predecessors "B150" 
    successors "B203" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1586  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1588  <|@ instruction r10|DWORD = MOVE input: int[-230419|0xfffffffffffc7bed] <|@ <|@
      nr 1590  <|@ instruction r11|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1592  <|@ instruction JUMP ~[] destination: B151 -> B203 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B149"
    from_bci -1
    to_bci -1
    predecessors "B147" 
    successors "B203" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1562  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1564  <|@ instruction r10|DWORD = MOVE input: int[-228635|0xfffffffffffc82e5] <|@ <|@
      nr 1566  <|@ instruction r11|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1568  <|@ instruction JUMP ~[] destination: B149 -> B203 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B214"
    from_bci -1
    to_bci -1
    predecessors "B213" 
    successors "B215" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2198  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2200  <|@ instruction r10|DWORD = MOVE input: int[-235027|0xfffffffffffc69ed] <|@ <|@
      nr 2202  <|@ instruction r11|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2204  <|@ instruction JUMP ~[] destination: B214 -> B215 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B73" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  256  <|@ instruction r8|DWORD = MOVE input: int[-195867|0xfffffffffffd02e5] <|@ <|@
      nr  258  <|@ instruction r11|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  260  <|@ instruction r10|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  262  <|@ instruction rbx|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  264  <|@ instruction rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  266  <|@ instruction JUMP ~[] destination: B19 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B73" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  284  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  286  <|@ instruction r8|DWORD = MOVE input: int[-197907|0xfffffffffffcfaed] <|@ <|@
      nr  288  <|@ instruction r11|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  290  <|@ instruction r10|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  292  <|@ instruction rbx|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  294  <|@ instruction rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  296  <|@ instruction JUMP ~[] destination: B21 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B73" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  740  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  742  <|@ instruction r8|DWORD = MOVE input: int[-198683|0xfffffffffffcf7e5] <|@ <|@
      nr  744  <|@ instruction r11|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  746  <|@ instruction r10|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  748  <|@ instruction rbx|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  750  <|@ instruction rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  752  <|@ instruction JUMP ~[] destination: B72 -> B73 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #10         // width:int
     4: iconst_m1     
     5: if_icmpne     10
     8: aload_1       
     9: areturn       
    10: new           #125        // java.lang.StringBuilder
    13: dup           
    14: invokespecial #100        // java.lang.StringBuilder.<init>:()void
    17: astore_2      
    18: aload_0       
    19: getfield      #7          // f:java.util.Formatter$Flags
    22: getstatic     #101        // java.util.Formatter$Flags.LEFT_JUSTIFY:java.util.Formatter$Flags
    25: invokevirtual #9          // java.util.Formatter$Flags.contains:(java.util.Formatter$Flags)boolean
    28: istore_3      
    29: aload_0       
    30: getfield      #10         // width:int
    33: aload_1       
    34: invokevirtual #0          // java.lang.String.length:()int
    37: isub          
    38: istore        4
    40: iload_3       
    41: ifne          67
    44: iconst_0      
    45: istore        5
    47: iload         5
    49: iload         4
    51: if_icmpge     67
    54: aload_2       
    55: bipush        32
    57: invokevirtual #102        // java.lang.StringBuilder.append:(char)java.lang.StringBuilder
    60: pop           
    61: iinc          
    64: goto          47
    67: aload_2       
    68: aload_1       
    69: invokevirtual #103        // java.lang.StringBuilder.append:(java.lang.String)java.lang.StringBuilder
    72: pop           
    73: iload_3       
    74: ifeq          100
    77: iconst_0      
    78: istore        5
    80: iload         5
    82: iload         4
    84: if_icmpge     100
    87: aload_2       
    88: bipush        32
    90: invokevirtual #102        // java.lang.StringBuilder.append:(char)java.lang.StringBuilder
    93: pop           
    94: iinc          
    97: goto          80
   100: aload_2       
   101: invokevirtual #104        // java.lang.StringBuilder.toString:()java.lang.String
   104: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@4182771d slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction rsi|DWORD = MOV [r13|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   10  <|@ instruction CMP rsi|DWORD y: -1 size: DWORD <|@ <|@
      nr   12  <|@ instruction BRANCH trueDestinationProbability: 0.6259652107203015 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4603813412924770104
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   16  <|@ instruction rax|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   18  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4600409631668400528
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   22  <|@ instruction stack:32|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction rcx|DWORD[.] = MOV [r13|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   26  <|@ st <@st|@reference-map: [rcx:0, rdx:0, r13:0, stack:96]
live-base-pointers: []
java.util.Formatter$FormatSpecifier.justify(Formatter.java:2917) [bci: 0]
locals: r13|QWORD[.] rdx|QWORD[.] - - - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + rcx|DWORD[.] * 8] state [bci:0] <|@ <|@
      nr   28  <|@ st <@st|@reference-map: [rcx:0, rdx:0, r13:0, stack:96]
live-base-pointers: []
java.util.Formatter$FormatSpecifier.justify(Formatter.java:2917) [bci: 0]
locals: r13|QWORD[.] rdx|QWORD[.] - - - - 
>@ <|@ instruction r14|DWORD[.] = MOV [rdx|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   30  <|@ instruction stack:36|DWORD[.] = MOVE r14|DWORD[.] moveKind: DWORD <|@ <|@
      nr   32  <|@ instruction TEST (x: r14|DWORD[.], y: r14|DWORD[.]) size: DWORD <|@ <|@
      nr   34  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B9" 
    xhandlers
    flags 
    probability 4600409631668400528
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   46  <|@ instruction r10|DWORD = MOV [r14|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   48  <|@ instruction stack:40|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr   50  <|@ instruction r11|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   52  <|@ instruction r8|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   54  <|@ instruction rcx|DWORD = MOV [rcx|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   56  <|@ instruction r9|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Formatter.Flags@122446495] <|@ <|@
      nr   58  <|@ instruction r9|DWORD = MOV [r9|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   60  <|@ instruction stack:44|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr   62  <|@ instruction rcx|DWORD = AND (x: rcx|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr   64  <|@ instruction stack:48|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr   66  <|@ instruction CMP (x: r9|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr   68  <|@ instruction rbx|DWORD = SETCC condition: = <|@ <|@
      nr   70  <|@ instruction stack:52|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr   72  <|@ instruction rdi|QWORD = LEA [r11|QWORD + 48] size: QWORD <|@ <|@
      nr   74  <|@ instruction rsi|DWORD = SUB (x: rsi|DWORD, ~y: r10|DWORD) size: DWORD <|@ <|@
      nr   76  <|@ instruction stack:56|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr   78  <|@ instruction CMP (x: r9|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr   80  <|@ instruction BRANCH trueDestinationProbability: 0.18604807005003576 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4599156037586246543
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  140  <|@ instruction CMP (x: rdi|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr  142  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4599101193409563137
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  174  <|@ instruction MOV (x: [r15|QWORD + 96], y: rdi|QWORD) size: QWORD <|@ <|@
      nr  176  <|@ instruction AMD64PREFETCH ~[r11|QWORD + 240] instr: 0 <|@ <|@
      nr  178  <|@ instruction r13|QWORD[*] = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  180  <|@ instruction JUMP ~[] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4599156037586246543
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  184  <|@ instruction r11|QWORD[.] = MOVE r13|QWORD[*] moveKind: QWORD <|@ <|@
      nr  186  <|@ instruction MOV [r13|QWORD[*] + 12] y: 16 size: DWORD <|@ <|@
      nr  188  <|@ instruction MOV [r13|QWORD[*]] y: 1 size: QWORD <|@ <|@
      nr  190  <|@ instruction MOV [r13|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr  192  <|@ instruction CMP rsi|DWORD y: 1 size: DWORD <|@ <|@
      nr  194  <|@ instruction BRANCH trueDestinationProbability: 0.4177003898613192 condition: < trueDestination: B12 -> B13 falseDestination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4595555168830760299
    begin_IR
      LIR
      nr  210  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  212  <|@ instruction xmm0|V256_QWORD = A od: SIMD<32,0,0,0> oe: QWORD <|@ <|@
      nr  214  <|@ instruction J (address: [r13|QWORD[*] + 16], input: xmm0|V256_QWORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr  216  <|@ instruction r13|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  218  <|@ instruction r10|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  220  <|@ instruction JUMP ~[] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B70" "B18" 
    successors "B16" "B75" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4598072091713848228
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL numbPhis: 2 align: true label: ? <|@ <|@
      nr  224  <|@ instruction r8|DWORD = MOV [r13|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  226  <|@ instruction CMP (x: rsi|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  228  <|@ instruction BRANCH trueDestinationProbability: 0.5822996101386808 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B20" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4594352857608977439
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  232  <|@ instruction rdi|DWORD = INC r10|DWORD size: DWORD <|@ <|@
      nr  234  <|@ instruction rax|DWORD = SUB (x: rdi|DWORD, ~y: r8|DWORD) size: DWORD <|@ <|@
      nr  236  <|@ instruction CMP rax|DWORD y: 1 size: DWORD <|@ <|@
      nr  238  <|@ instruction BRANCH trueDestinationProbability: 0.9354897578252553 condition: < trueDestination: B16 -> B17 falseDestination: B16 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4594018382497928091
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  242  <|@ instruction CMP (x: r8|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  244  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B17 -> B18 falseDestination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B15" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4594018382497928091
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  248  <|@ instruction MOV [r13|QWORD[.] + r10|DWORD * 2 + 16] y: 32 size: WORD <|@ <|@
      nr  250  <|@ instruction r10|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  252  <|@ instruction JUMP ~[] destination: B18 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B21" "B22" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4576505223557843009
    begin_IR
      LIR
      nr  268  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  270  <|@ instruction rax|DWORD = SHL r8|DWORD size: DWORD <|@ <|@
      nr  272  <|@ instruction rax|DWORD = LEA [rax|DWORD + 2] size: DWORD <|@ <|@
      nr  274  <|@ instruction rbp|DWORD = SUB (x: rax|DWORD, ~y: rdi|DWORD) size: DWORD <|@ <|@
      nr  276  <|@ instruction TEST (x: rbp|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  278  <|@ instruction rax|DWORD = CMOVE (falseValue: rax|DWORD, ~trueValue: rdi|DWORD) condition: < <|@ <|@
      nr  280  <|@ instruction CMP rax|DWORD y: 1 size: DWORD <|@ <|@
      nr  282  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B20 -> B21 falseDestination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" "B24" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4576505223557843009
    begin_IR
      LIR
      nr  298  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  300  <|@ instruction rbp|DWORD = MOVE input: int[2147483639|0x7ffffff7] <|@ <|@
      nr  302  <|@ instruction rbp|DWORD = SUB (x: rbp|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr  304  <|@ instruction TEST (x: rbp|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  306  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B22 -> B23 falseDestination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" "B72" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4576505223557843009
    begin_IR
      LIR
      nr  322  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  324  <|@ instruction CMP (x: rax|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  326  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B24 -> B25 falseDestination: B24 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" "B29" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4576505223557843009
    begin_IR
      LIR
      nr  328  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  330  <|@ instruction stack:60|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  332  <|@ instruction rbp|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  334  <|@ instruction r14|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr  336  <|@ instruction CMP rax|DWORD y: 16777215 size: DWORD <|@ <|@
      nr  338  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B25 -> B26 falseDestination: B25 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" "B28" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4575970063380164052
    begin_IR
      LIR
      nr  340  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  342  <|@ instruction stack:72|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  344  <|@ instruction r13|DWORD = SHL rax|DWORD size: DWORD <|@ <|@
      nr  346  <|@ instruction r13|DWORD = LEA [r13|DWORD + 23] size: DWORD <|@ <|@
      nr  348  <|@ instruction r13|DWORD = AND r13|DWORD y: -8 size: DWORD <|@ <|@
      nr  350  <|@ instruction r13|QWORD = MOVSXD r13|DWORD size: QWORD <|@ <|@
      nr  352  <|@ instruction r10|QWORD = ADD (x: r13|QWORD, y: rbp|QWORD) size: QWORD <|@ <|@
      nr  354  <|@ instruction CMP (x: r10|QWORD, y: r14|QWORD) size: QWORD <|@ <|@
      nr  356  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B26 -> B27 falseDestination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B31" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4575921898964172946
    begin_IR
      LIR
      nr  366  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  368  <|@ instruction MOV (x: [r15|QWORD + 96], y: r10|QWORD) size: QWORD <|@ <|@
      nr  370  <|@ instruction AMD64PREFETCH ~[r13|QWORD + rbp|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr  372  <|@ instruction AMD64PREFETCH ~[r13|QWORD + rbp|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  374  <|@ instruction AMD64PREFETCH ~[r13|QWORD + rbp|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  376  <|@ instruction AMD64PREFETCH ~[r13|QWORD + rbp|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  378  <|@ instruction MOV (x: [rbp|QWORD + 12], y: rax|DWORD) size: DWORD <|@ <|@
      nr  380  <|@ instruction MOV [rbp|QWORD] y: 1 size: QWORD <|@ <|@
      nr  382  <|@ instruction MOV [rbp|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr  384  <|@ instruction rbp|QWORD[.] = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr  386  <|@ instruction r14|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  388  <|@ instruction stack:76|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  390  <|@ instruction r13|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  392  <|@ instruction rax|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  394  <|@ instruction JUMP ~[] destination: B28 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" 
    successors "B50" "B33" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4576505223557843009
    begin_IR
      LIR
      nr  422  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  424  <|@ instruction CMP (x: r14|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  426  <|@ instruction rdi|DWORD = CMOVE (falseValue: r14|DWORD, ~trueValue: r13|DWORD) condition: > <|@ <|@
      nr  428  <|@ instruction rdi|QWORD = MOVSXD rdi|DWORD size: QWORD <|@ <|@
      nr  430  <|@ instruction CMP rdi|QWORD y: 1 size: QWORD <|@ <|@
      nr  432  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B31 -> B50 falseDestination: B31 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B38" "B36" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4572001623930472513
    begin_IR
      LIR
      nr  438  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  440  <|@ instruction r10|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  442  <|@ instruction rsi|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  444  <|@ instruction rdx|QWORD[.] = LEA [r10|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  446  <|@ instruction r10|QWORD = LEA [rdi|QWORD - 16] size: QWORD <|@ <|@
      nr  448  <|@ instruction TEST (x: r10|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  454  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  450  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B33 -> B38 falseDestination: B33 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B33" "B36" 
    successors "B41" "B40" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4572001623930472513
    begin_IR
      LIR
      nr  480  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  482  <|@ instruction r10|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  484  <|@ instruction CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  486  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B38 -> B41 falseDestination: B38 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4570173825191496802
    begin_IR
      LIR
      nr  492  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  494  <|@ instruction xmm0|V128_WORD = H [rdx|QWORD[.] + r11|QWORD * 2] nZ: XMM oh: VMOVDQU <|@ <|@
      nr  496  <|@ instruction J (address: [rsi|QWORD[.] + r11|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr  498  <|@ instruction r10|QWORD = LEA [r11|QWORD + 8] size: QWORD <|@ <|@
      nr  500  <|@ instruction r11|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  502  <|@ instruction JUMP ~[] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" "B38" 
    successors "B44" "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4572001623930472513
    begin_IR
      LIR
      nr  504  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  506  <|@ instruction r10|QWORD = LEA [rdi|QWORD - 4] size: QWORD <|@ <|@
      nr  508  <|@ instruction CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  510  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B41 -> B44 falseDestination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4570173825191496802
    begin_IR
      LIR
      nr  516  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  518  <|@ instruction xmm0|V64_WORD = H [rdx|QWORD[.] + r11|QWORD * 2] nZ: XMM oh: VMOVQ <|@ <|@
      nr  520  <|@ instruction J (address: [rsi|QWORD[.] + r11|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr  522  <|@ instruction r10|QWORD = LEA [r11|QWORD + 4] size: QWORD <|@ <|@
      nr  524  <|@ instruction r11|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  526  <|@ instruction JUMP ~[] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" "B41" 
    successors "B47" "B46" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4572001623930472513
    begin_IR
      LIR
      nr  528  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  530  <|@ instruction r10|QWORD = LEA [rdi|QWORD - 2] size: QWORD <|@ <|@
      nr  532  <|@ instruction CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  534  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B44 -> B47 falseDestination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4570173825191496802
    begin_IR
      LIR
      nr  540  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  542  <|@ instruction xmm0|V32_WORD = H [rdx|QWORD[.] + r11|QWORD * 2] nZ: XMM oh: VMOVD <|@ <|@
      nr  544  <|@ instruction J (address: [rsi|QWORD[.] + r11|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr  546  <|@ instruction r10|QWORD = LEA [r11|QWORD + 2] size: QWORD <|@ <|@
      nr  548  <|@ instruction r11|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  550  <|@ instruction JUMP ~[] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" "B44" 
    successors "B50" "B49" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4572001623930472513
    begin_IR
      LIR
      nr  552  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  554  <|@ instruction r10|QWORD = DEC rdi|QWORD size: QWORD <|@ <|@
      nr  556  <|@ instruction CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  558  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B47 -> B50 falseDestination: B47 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4570173825191496802
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  566  <|@ instruction rdx|DWORD = MOVSX [rdx|QWORD[.] + r11|QWORD * 2] size: DWORD <|@ <|@
      nr  568  <|@ instruction MOV (x: [rsi|QWORD[.] + r11|QWORD * 2], y: rdx|DWORD) size: WORD <|@ <|@
      nr  570  <|@ instruction JUMP ~[] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B31" "B49" "B47" 
    successors "B51" "B70" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4576505223557843009
    begin_IR
      LIR
      nr  572  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  574  <|@ instruction rsi|QWORD = MOVSXD r14|DWORD size: QWORD <|@ <|@
      nr  576  <|@ instruction CMP (x: rsi|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr  578  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B50 -> B51 falseDestination: B50 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B50" "B67" "B65" 
    successors "B15" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576505223557843009
    begin_IR
      LIR
      nr  724  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  720  <|@ instruction r11|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr  726  <|@ instruction MOV [rax|QWORD[.] + r11|DWORD * 2 + 16] y: 32 size: WORD <|@ <|@
      nr  728  <|@ instruction r10|DWORD = MOVE stack:76|DWORD moveKind: DWORD <|@ <|@
      nr  730  <|@ instruction r13|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  732  <|@ instruction rsi|DWORD = MOVE stack:56|DWORD moveKind: DWORD <|@ <|@
      nr  734  <|@ instruction JUMP ~[] destination: B70 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B52" "B53" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4572001623930472513
    begin_IR
      LIR
      nr  580  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  582  <|@ instruction rdx|QWORD[.] = LEA [rax|QWORD[.] + rdi|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr  584  <|@ instruction rsi|QWORD = SUB (x: rsi|QWORD, ~y: rdi|QWORD) size: QWORD <|@ <|@
      nr  586  <|@ instruction rdi|QWORD = LEA [rsi|QWORD - 16] size: QWORD <|@ <|@
      nr  588  <|@ instruction TEST (x: rdi|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr  590  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B51 -> B52 falseDestination: B51 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B56" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4570173825191496802
    begin_IR
      LIR
      nr  592  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  594  <|@ instruction r10|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  596  <|@ instruction JUMP ~[] destination: B52 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B52" "B54" 
    successors "B59" "B58" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4572001623930472513
    begin_IR
      LIR
      nr  620  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  622  <|@ instruction rdi|QWORD = LEA [rsi|QWORD - 8] size: QWORD <|@ <|@
      nr  624  <|@ instruction CMP (x: r10|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr  626  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B56 -> B59 falseDestination: B56 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B59" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4570173825191496802
    begin_IR
      LIR
      nr  632  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  634  <|@ instruction xmm0|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0> <|@ <|@
      nr  636  <|@ instruction J (address: [rdx|QWORD[.] + r10|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr  638  <|@ instruction rdi|QWORD = LEA [r10|QWORD + 8] size: QWORD <|@ <|@
      nr  640  <|@ instruction r10|QWORD = MOVE rdi|QWORD moveKind: QWORD <|@ <|@
      nr  642  <|@ instruction JUMP ~[] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" "B56" 
    successors "B62" "B61" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4572001623930472513
    begin_IR
      LIR
      nr  644  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  646  <|@ instruction rdi|QWORD = LEA [rsi|QWORD - 4] size: QWORD <|@ <|@
      nr  648  <|@ instruction CMP (x: r10|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr  650  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B59 -> B62 falseDestination: B59 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4570173825191496802
    begin_IR
      LIR
      nr  656  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  658  <|@ instruction xmm0|V64_WORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr  660  <|@ instruction J (address: [rdx|QWORD[.] + r10|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr  662  <|@ instruction rdi|QWORD = LEA [r10|QWORD + 4] size: QWORD <|@ <|@
      nr  664  <|@ instruction r10|QWORD = MOVE rdi|QWORD moveKind: QWORD <|@ <|@
      nr  666  <|@ instruction JUMP ~[] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" "B59" 
    successors "B65" "B64" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4572001623930472513
    begin_IR
      LIR
      nr  668  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  670  <|@ instruction rdi|QWORD = LEA [rsi|QWORD - 2] size: QWORD <|@ <|@
      nr  672  <|@ instruction CMP (x: r10|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr  674  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B62 -> B65 falseDestination: B62 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B65" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4570173825191496802
    begin_IR
      LIR
      nr  680  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  682  <|@ instruction xmm0|V32_WORD = L oc: SIMD<0,0> <|@ <|@
      nr  684  <|@ instruction J (address: [rdx|QWORD[.] + r10|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr  686  <|@ instruction rdi|QWORD = LEA [r10|QWORD + 2] size: QWORD <|@ <|@
      nr  688  <|@ instruction r10|QWORD = MOVE rdi|QWORD moveKind: QWORD <|@ <|@
      nr  690  <|@ instruction JUMP ~[] destination: B64 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" "B62" 
    successors "B70" "B67" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4572001623930472513
    begin_IR
      LIR
      nr  692  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  694  <|@ instruction rsi|QWORD = DEC rsi|QWORD size: QWORD <|@ <|@
      nr  696  <|@ instruction CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  698  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B65 -> B70 falseDestination: B65 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B70" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4570173825191496802
    begin_IR
      LIR
      nr  706  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  708  <|@ instruction MOV (x: [rdx|QWORD[.] + r10|QWORD * 2], y: r12|ILLEGAL) size: WORD <|@ <|@
      nr  712  <|@ instruction JUMP ~[] destination: B67 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B33" "B36" 
    successors "B38" "B36" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 2
    probability 4572001623930472513
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  466  <|@ instruction xmm0|V256_WORD = H [rdx|QWORD[.] + r11|QWORD * 2] nZ: YMM oh: VMOVDQU <|@ <|@
      nr  468  <|@ instruction J (address: [rsi|QWORD[.] + r11|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr  470  <|@ instruction r11|QWORD = LEA [r11|QWORD + 16] size: QWORD <|@ <|@
      nr  472  <|@ instruction CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  474  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B36 -> B38 falseDestination: B36 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4562994424675731521
    begin_IR
      LIR
      nr  598  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  600  <|@ instruction xmm0|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0> <|@ <|@
      nr  602  <|@ instruction r10|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  604  <|@ instruction JUMP ~[] destination: B53 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" "B54" 
    successors "B56" "B54" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 2
    probability 4572001623930472513
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  608  <|@ instruction J (address: [rdx|QWORD[.] + r10|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr  610  <|@ instruction r10|QWORD = LEA [r10|QWORD + 16] size: QWORD <|@ <|@
      nr  612  <|@ instruction CMP (x: r10|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr  614  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B54 -> B56 falseDestination: B54 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B30" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4561701786114434764
    begin_IR
      LIR
      nr  396  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  398  <|@ instruction stack:76|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  400  <|@ instruction stack:72|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  404  <|@ instruction JUMP ~[] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" "B27" 
    successors "B31" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4562309419648302455
    begin_IR
      LIR
      nr  406  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  402  <|@ instruction r13|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  408  <|@ instruction r11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>} <|@ <|@
      nr  410  <|@ instruction rsi|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  412  <|@ instruction rdx|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  414  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  416  <|@ instruction r14|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  418  <|@ st <@st|@reference-map: [stack:56, stack:92, stack:96]
live-base-pointers: []
java.util.Formatter$FormatSpecifier.justify(Formatter.java:2923) [bci: 47]
locals: - stack:32|QWORD[.] vobject:StringBuilder:0{count=stack:60|DWORD,value=stack:72|QWORD[.]} stack:52|DWORD stack:56|DWORD stack:60|DWORD 
vobject:StringBuilder:0{count=stack:60|DWORD,value=stack:72|QWORD[.]} Ljava/lang/StringBuilder; stack:60|DWORD stack:72|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:47] <|@ <|@
      nr  420  <|@ instruction JUMP ~[] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B30" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4545793469636321557
    begin_IR
      LIR
      nr  358  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  360  <|@ instruction stack:76|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  364  <|@ instruction JUMP ~[] destination: B27 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B75" 
    xhandlers
    flags 
    probability 4593749707086991795
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  198  <|@ instruction xmm0|V256_QWORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr  200  <|@ instruction J (address: [r13|QWORD[*] + 16], input: xmm0|V256_QWORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr  202  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  204  <|@ instruction r8|DWORD = MOVE input: int[16|0x10] <|@ <|@
      nr  206  <|@ instruction r13|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  208  <|@ instruction JUMP ~[] destination: B13 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B8" "B13" "B15" 
    successors "B76" "B84" 
    xhandlers
    flags 
    probability 4599075674450723485
    begin_IR
      LIR
      nr  766  <|@ instruction [] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr  768  <|@ instruction stack:72|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  770  <|@ instruction stack:76|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  772  <|@ instruction r11|DWORD = MOV [r13|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  774  <|@ instruction r9|DWORD[.] = COMPRESSPOINTER (input: r13|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@1d28dd80 encoding: base: 0 shift: 3 <|@ <|@
      nr  776  <|@ instruction stack:60|DWORD[.] = MOVE r9|DWORD[.] moveKind: DWORD <|@ <|@
      nr  778  <|@ instruction rcx|DWORD = ADD (x: r10|DWORD, y: stack:40|DWORD) size: DWORD <|@ <|@
      nr  780  <|@ instruction stack:80|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  782  <|@ instruction rdi|DWORD = SUB (x: rcx|DWORD, ~y: r8|DWORD) size: DWORD <|@ <|@
      nr  784  <|@ instruction r8|QWORD = MOV stack:40|DWORD size: DWORD <|@ <|@
      nr  786  <|@ instruction rbx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>} <|@ <|@
      nr  788  <|@ instruction CMP rdi|DWORD y: 1 size: DWORD <|@ <|@
      nr  790  <|@ instruction BRANCH trueDestinationProbability: 0.9354897721124376 condition: < trueDestination: B75 -> B76 falseDestination: B75 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B77" "B78" 
    xhandlers
    flags 
    probability 4598727057661294609
    begin_IR
      LIR
      nr  792  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  794  <|@ instruction r11|DWORD = SUB (x: r11|DWORD, ~y: stack:40|DWORD) size: DWORD <|@ <|@
      nr  796  <|@ instruction CMP (x: r10|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  798  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B76 -> B77 falseDestination: B76 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" "B80" 
    xhandlers
    flags 
    probability 4598727057661294609
    begin_IR
      LIR
      nr  808  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  810  <|@ instruction r14|DWORD[.] = MOVE stack:36|DWORD[.] moveKind: DWORD <|@ <|@
      nr  812  <|@ instruction r14|QWORD[.] = UNCOMPRESSPOINTER (input: r14|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1d28dd80 encoding: base: 0 shift: 3 <|@ <|@
      nr  814  <|@ instruction r14|QWORD[*] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  816  <|@ instruction rsi|QWORD[*] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  818  <|@ instruction rdx|QWORD = MOVSXD r10|DWORD size: QWORD <|@ <|@
      nr  820  <|@ instruction rdi|QWORD = LEA [r14|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  822  <|@ instruction rsi|QWORD = LEA [rsi|QWORD[*] + rdx|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr  824  <|@ instruction rdx|QWORD = MOVE r8|QWORD moveKind: QWORD <|@ <|@
      nr  826  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charArraycopy(Word,Word,Word)void@0x106812d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  828  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  830  <|@ instruction rdx|QWORD = LEA [rsi|QWORD + 24] size: QWORD <|@ <|@
      nr  832  <|@ instruction CMP (x: rdx|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr  834  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B78 -> B79 falseDestination: B78 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B81" 
    xhandlers
    flags 
    probability 4598676503283860722
    begin_IR
      LIR
      nr  858  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  860  <|@ instruction MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  862  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 216] instr: 0 <|@ <|@
      nr  864  <|@ instruction rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  866  <|@ instruction r13|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>} <|@ <|@
      nr  874  <|@ instruction JUMP ~[] destination: B80 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" "B79" 
    successors "B82" "B83" 
    xhandlers
    flags 
    probability 4598727057661294609
    begin_IR
      LIR
      nr  876  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  868  <|@ instruction r14|DWORD = MOVE stack:80|DWORD moveKind: DWORD <|@ <|@
      nr  870  <|@ instruction r9|DWORD[.] = MOVE stack:60|DWORD[.] moveKind: DWORD <|@ <|@
      nr  872  <|@ instruction r10|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  878  <|@ instruction rdx|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  880  <|@ instruction rcx|QWORD = MOV [r13|QWORD + 168] size: QWORD <|@ <|@
      nr  882  <|@ instruction MOV (x: [rsi|QWORD[*]], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  884  <|@ instruction MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} <|@ <|@
      nr  886  <|@ instruction MOV (x: [rsi|QWORD[*] + 12], y: r14|DWORD) size: DWORD <|@ <|@
      nr  888  <|@ instruction MOV (x: [rsi|QWORD[*] + 16], y: r9|DWORD[.]) size: DWORD <|@ <|@
      nr  890  <|@ instruction CMP (x: r10|DWORD, y: stack:48|DWORD) size: DWORD <|@ <|@
      nr  892  <|@ instruction BRANCH trueDestinationProbability: 0.18579515065073993 condition: = trueDestination: B81 -> B82 falseDestination: B81 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors "B206" 
    xhandlers
    flags 
    probability 4597400344143036126
    begin_IR
      LIR
      nr  904  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  906  <|@ instruction stack:88|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  908  <|@ instruction r13|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  910  <|@ instruction JUMP ~[] destination: B83 -> B206 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B206"
    from_bci -1
    to_bci -1
    predecessors "B204" "B205" "B83" 
    successors "B207" "B213" 
    xhandlers
    flags 
    probability 4599068736976613850
    begin_IR
      LIR
      nr 2110  <|@ instruction [] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr 2112  <|@ instruction r10|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr 2114  <|@ instruction CMP r14|DWORD y: 1 size: DWORD <|@ <|@
      nr 2116  <|@ instruction BRANCH trueDestinationProbability: 0.09284041465770032 condition: < trueDestination: B206 -> B207 falseDestination: B206 -> B213 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B213"
    from_bci -1
    to_bci -1
    predecessors "B206" 
    successors "B214" "B216" 
    xhandlers
    flags 
    probability 4598567666390927258
    begin_IR
      LIR
      nr 2188  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2190  <|@ instruction r11|DWORD = MOV [r13|QWORD[.] + 12] size: DWORD <|@ <|@
      nr 2192  <|@ instruction rax|DWORD = SUB (x: r11|DWORD, ~y: r14|DWORD) size: DWORD <|@ <|@
      nr 2194  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr 2196  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B213 -> B214 falseDestination: B213 -> B216 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B216"
    from_bci -1
    to_bci -1
    predecessors "B213" 
    successors "B217" "B221" 
    xhandlers
    flags 
    probability 4598567666390927258
    begin_IR
      LIR
      nr 2214  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2216  <|@ instruction rax|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr 2218  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr 2220  <|@ instruction CMP r14|DWORD y: 16777215 size: DWORD <|@ <|@
      nr 2222  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B216 -> B217 falseDestination: B216 -> B221 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B217"
    from_bci -1
    to_bci -1
    predecessors "B216" 
    successors "B221" "B219" 
    xhandlers
    flags 
    probability 4597980903941973833
    begin_IR
      LIR
      nr 2224  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2226  <|@ instruction rcx|DWORD = SHL r14|DWORD size: DWORD <|@ <|@
      nr 2228  <|@ instruction rcx|DWORD = LEA [rcx|DWORD + 23] size: DWORD <|@ <|@
      nr 2230  <|@ instruction rcx|DWORD = AND rcx|DWORD y: -8 size: DWORD <|@ <|@
      nr 2232  <|@ instruction rcx|QWORD = MOVSXD rcx|DWORD size: QWORD <|@ <|@
      nr 2234  <|@ instruction r8|QWORD = ADD (x: rcx|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr 2236  <|@ instruction CMP (x: r8|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr 2238  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B217 -> B221 falseDestination: B217 -> B219 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B219"
    from_bci -1
    to_bci -1
    predecessors "B217" 
    successors "B222" 
    xhandlers
    flags 
    probability 4597892775105459449
    begin_IR
      LIR
      nr 2246  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2248  <|@ instruction MOV (x: [r15|QWORD + 96], y: r8|QWORD) size: QWORD <|@ <|@
      nr 2250  <|@ instruction AMD64PREFETCH ~[rcx|QWORD + rax|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr 2252  <|@ instruction AMD64PREFETCH ~[rcx|QWORD + rax|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr 2254  <|@ instruction AMD64PREFETCH ~[rcx|QWORD + rax|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr 2256  <|@ instruction AMD64PREFETCH ~[rcx|QWORD + rax|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr 2258  <|@ instruction MOV (x: [rax|QWORD + 12], y: r14|DWORD) size: DWORD <|@ <|@
      nr 2260  <|@ instruction MOV [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr 2262  <|@ instruction MOV [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr 2264  <|@ instruction rax|QWORD[.] = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr 2266  <|@ instruction stack:72|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2268  <|@ instruction r13|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr 2270  <|@ instruction JUMP ~[] destination: B219 -> B222 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B222"
    from_bci -1
    to_bci -1
    predecessors "B219" "B221" 
    successors "B241" "B224" 
    xhandlers
    flags 
    probability 4598567666390927258
    begin_IR
      LIR
      nr 2292  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 2294  <|@ instruction CMP (x: r14|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr 2296  <|@ instruction rsi|DWORD = CMOVE (falseValue: r14|DWORD, ~trueValue: r13|DWORD) condition: > <|@ <|@
      nr 2298  <|@ instruction rsi|QWORD = MOVSXD rsi|DWORD size: QWORD <|@ <|@
      nr 2300  <|@ instruction CMP rsi|QWORD y: 1 size: QWORD <|@ <|@
      nr 2302  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B222 -> B241 falseDestination: B222 -> B224 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B224"
    from_bci -1
    to_bci -1
    predecessors "B222" 
    successors "B229" "B227" 
    xhandlers
    flags 
    probability 4594064066763556762
    begin_IR
      LIR
      nr 2308  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2310  <|@ instruction r10|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2312  <|@ instruction rdx|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD <|@ <|@
      nr 2314  <|@ instruction rcx|QWORD[.] = LEA [r10|QWORD[.] + 16] size: QWORD <|@ <|@
      nr 2316  <|@ instruction r10|QWORD = LEA [rsi|QWORD - 16] size: QWORD <|@ <|@
      nr 2318  <|@ instruction TEST (x: r10|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr 2324  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 2320  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B224 -> B229 falseDestination: B224 -> B227 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B229"
    from_bci -1
    to_bci -1
    predecessors "B224" "B227" 
    successors "B232" "B231" 
    xhandlers
    flags 
    probability 4594064066763556762
    begin_IR
      LIR
      nr 2350  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 2352  <|@ instruction r10|QWORD = LEA [rsi|QWORD - 8] size: QWORD <|@ <|@
      nr 2354  <|@ instruction CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr 2356  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B229 -> B232 falseDestination: B229 -> B231 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B231"
    from_bci -1
    to_bci -1
    predecessors "B229" 
    successors "B232" 
    xhandlers
    flags 
    probability 4592008490372696935
    begin_IR
      LIR
      nr 2362  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2364  <|@ instruction xmm0|V128_WORD = H [rcx|QWORD[.] + r11|QWORD * 2] nZ: XMM oh: VMOVDQU <|@ <|@
      nr 2366  <|@ instruction J (address: [rdx|QWORD[.] + r11|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr 2368  <|@ instruction r10|QWORD = LEA [r11|QWORD + 8] size: QWORD <|@ <|@
      nr 2370  <|@ instruction r11|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr 2372  <|@ instruction JUMP ~[] destination: B231 -> B232 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B232"
    from_bci -1
    to_bci -1
    predecessors "B231" "B229" 
    successors "B235" "B234" 
    xhandlers
    flags 
    probability 4594064066763556762
    begin_IR
      LIR
      nr 2374  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 2376  <|@ instruction r10|QWORD = LEA [rsi|QWORD - 4] size: QWORD <|@ <|@
      nr 2378  <|@ instruction CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr 2380  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B232 -> B235 falseDestination: B232 -> B234 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B234"
    from_bci -1
    to_bci -1
    predecessors "B232" 
    successors "B235" 
    xhandlers
    flags 
    probability 4592008490372696935
    begin_IR
      LIR
      nr 2386  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2388  <|@ instruction xmm0|V64_WORD = H [rcx|QWORD[.] + r11|QWORD * 2] nZ: XMM oh: VMOVQ <|@ <|@
      nr 2390  <|@ instruction J (address: [rdx|QWORD[.] + r11|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr 2392  <|@ instruction r10|QWORD = LEA [r11|QWORD + 4] size: QWORD <|@ <|@
      nr 2394  <|@ instruction r11|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr 2396  <|@ instruction JUMP ~[] destination: B234 -> B235 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B235"
    from_bci -1
    to_bci -1
    predecessors "B234" "B232" 
    successors "B238" "B237" 
    xhandlers
    flags 
    probability 4594064066763556762
    begin_IR
      LIR
      nr 2398  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 2400  <|@ instruction r10|QWORD = LEA [rsi|QWORD - 2] size: QWORD <|@ <|@
      nr 2402  <|@ instruction CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr 2404  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B235 -> B238 falseDestination: B235 -> B237 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B237"
    from_bci -1
    to_bci -1
    predecessors "B235" 
    successors "B238" 
    xhandlers
    flags 
    probability 4592008490372696935
    begin_IR
      LIR
      nr 2410  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2412  <|@ instruction xmm0|V32_WORD = H [rcx|QWORD[.] + r11|QWORD * 2] nZ: XMM oh: VMOVD <|@ <|@
      nr 2414  <|@ instruction J (address: [rdx|QWORD[.] + r11|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr 2416  <|@ instruction r10|QWORD = LEA [r11|QWORD + 2] size: QWORD <|@ <|@
      nr 2418  <|@ instruction r11|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr 2420  <|@ instruction JUMP ~[] destination: B237 -> B238 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B238"
    from_bci -1
    to_bci -1
    predecessors "B237" "B235" 
    successors "B241" "B240" 
    xhandlers
    flags 
    probability 4594064066763556762
    begin_IR
      LIR
      nr 2422  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 2424  <|@ instruction r10|QWORD = DEC rsi|QWORD size: QWORD <|@ <|@
      nr 2426  <|@ instruction CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr 2428  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B238 -> B241 falseDestination: B238 -> B240 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B240"
    from_bci -1
    to_bci -1
    predecessors "B238" 
    successors "B241" 
    xhandlers
    flags 
    probability 4592008490372696935
    begin_IR
      LIR
      nr 2434  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2436  <|@ instruction rcx|DWORD = MOVSX [rcx|QWORD[.] + r11|QWORD * 2] size: DWORD <|@ <|@
      nr 2438  <|@ instruction MOV (x: [rdx|QWORD[.] + r11|QWORD * 2], y: rcx|DWORD) size: WORD <|@ <|@
      nr 2440  <|@ instruction JUMP ~[] destination: B240 -> B241 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B241"
    from_bci -1
    to_bci -1
    predecessors "B222" "B240" "B238" 
    successors "B242" "B261" 
    xhandlers
    flags 
    probability 4598567666390927258
    begin_IR
      LIR
      nr 2442  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2444  <|@ instruction rdx|QWORD = MOVSXD r14|DWORD size: QWORD <|@ <|@
      nr 2446  <|@ instruction CMP (x: rdx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr 2448  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B241 -> B242 falseDestination: B241 -> B261 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B261"
    from_bci -1
    to_bci -1
    predecessors "B241" "B258" "B256" 
    successors "B262" "B263" 
    xhandlers
    flags 
    probability 4598567666390927258
    begin_IR
      LIR
      nr 2588  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2590  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr 2592  <|@ instruction rdx|QWORD = LEA [rsi|QWORD + 24] size: QWORD <|@ <|@
      nr 2594  <|@ instruction CMP (x: rdx|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr 2596  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B261 -> B262 falseDestination: B261 -> B263 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B263"
    from_bci -1
    to_bci -1
    predecessors "B261" 
    successors "B264" 
    xhandlers
    flags 
    probability 4598518705926197045
    begin_IR
      LIR
      nr 2622  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2624  <|@ instruction MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD <|@ <|@
      nr 2626  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 216] instr: 0 <|@ <|@
      nr 2628  <|@ instruction rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr 2630  <|@ instruction r10|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr 2632  <|@ instruction JUMP ~[] destination: B263 -> B264 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B264"
    from_bci -1
    to_bci -1
    predecessors "B263" "B262" 
    successors 
    xhandlers
    flags 
    probability 4598567666390927258
    begin_IR
      LIR
      nr 2634  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 2636  <|@ instruction rdx|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr 2638  <|@ instruction rcx|QWORD = MOV [r10|QWORD + 168] size: QWORD <|@ <|@
      nr 2640  <|@ instruction MOV (x: [rsi|QWORD[*]], y: rcx|QWORD) size: QWORD <|@ <|@
      nr 2642  <|@ instruction MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr 2644  <|@ instruction rax|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@1d28dd80 encoding: base: 0 shift: 3 <|@ <|@
      nr 2646  <|@ instruction MOV (x: [rsi|QWORD[*] + 12], y: rax|DWORD[.]) size: DWORD <|@ <|@
      nr 2648  <|@ instruction MOV (x: [rsi|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr 2650  <|@ instruction rax|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2652  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B242"
    from_bci -1
    to_bci -1
    predecessors "B241" 
    successors "B243" "B244" 
    xhandlers
    flags 
    probability 4594064066763556762
    begin_IR
      LIR
      nr 2450  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2452  <|@ instruction rcx|QWORD[.] = LEA [rax|QWORD[.] + rsi|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr 2454  <|@ instruction rdx|QWORD = SUB (x: rdx|QWORD, ~y: rsi|QWORD) size: QWORD <|@ <|@
      nr 2456  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 16] size: QWORD <|@ <|@
      nr 2458  <|@ instruction TEST (x: rsi|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr 2460  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B242 -> B243 falseDestination: B242 -> B244 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B243"
    from_bci -1
    to_bci -1
    predecessors "B242" 
    successors "B247" 
    xhandlers
    flags 
    probability 4592008490372696935
    begin_IR
      LIR
      nr 2462  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2464  <|@ instruction r10|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 2466  <|@ instruction JUMP ~[] destination: B243 -> B247 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B247"
    from_bci -1
    to_bci -1
    predecessors "B243" "B245" 
    successors "B250" "B249" 
    xhandlers
    flags 
    probability 4594064066763556762
    begin_IR
      LIR
      nr 2490  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 2492  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 8] size: QWORD <|@ <|@
      nr 2494  <|@ instruction CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr 2496  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B247 -> B250 falseDestination: B247 -> B249 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B249"
    from_bci -1
    to_bci -1
    predecessors "B247" 
    successors "B250" 
    xhandlers
    flags 
    probability 4592008490372696935
    begin_IR
      LIR
      nr 2502  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2504  <|@ instruction xmm0|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0> <|@ <|@
      nr 2506  <|@ instruction J (address: [rcx|QWORD[.] + r10|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr 2508  <|@ instruction rsi|QWORD = LEA [r10|QWORD + 8] size: QWORD <|@ <|@
      nr 2510  <|@ instruction r10|QWORD = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr 2512  <|@ instruction JUMP ~[] destination: B249 -> B250 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B250"
    from_bci -1
    to_bci -1
    predecessors "B249" "B247" 
    successors "B253" "B252" 
    xhandlers
    flags 
    probability 4594064066763556762
    begin_IR
      LIR
      nr 2514  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 2516  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 4] size: QWORD <|@ <|@
      nr 2518  <|@ instruction CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr 2520  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B250 -> B253 falseDestination: B250 -> B252 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B252"
    from_bci -1
    to_bci -1
    predecessors "B250" 
    successors "B253" 
    xhandlers
    flags 
    probability 4592008490372696935
    begin_IR
      LIR
      nr 2526  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2528  <|@ instruction xmm0|V64_WORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr 2530  <|@ instruction J (address: [rcx|QWORD[.] + r10|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr 2532  <|@ instruction rsi|QWORD = LEA [r10|QWORD + 4] size: QWORD <|@ <|@
      nr 2534  <|@ instruction r10|QWORD = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr 2536  <|@ instruction JUMP ~[] destination: B252 -> B253 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B253"
    from_bci -1
    to_bci -1
    predecessors "B252" "B250" 
    successors "B256" "B255" 
    xhandlers
    flags 
    probability 4594064066763556762
    begin_IR
      LIR
      nr 2538  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 2540  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 2] size: QWORD <|@ <|@
      nr 2542  <|@ instruction CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr 2544  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B253 -> B256 falseDestination: B253 -> B255 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B255"
    from_bci -1
    to_bci -1
    predecessors "B253" 
    successors "B256" 
    xhandlers
    flags 
    probability 4592008490372696935
    begin_IR
      LIR
      nr 2550  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2552  <|@ instruction xmm0|V32_WORD = L oc: SIMD<0,0> <|@ <|@
      nr 2554  <|@ instruction J (address: [rcx|QWORD[.] + r10|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr 2556  <|@ instruction rsi|QWORD = LEA [r10|QWORD + 2] size: QWORD <|@ <|@
      nr 2558  <|@ instruction r10|QWORD = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr 2560  <|@ instruction JUMP ~[] destination: B255 -> B256 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B256"
    from_bci -1
    to_bci -1
    predecessors "B255" "B253" 
    successors "B261" "B258" 
    xhandlers
    flags 
    probability 4594064066763556762
    begin_IR
      LIR
      nr 2562  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 2564  <|@ instruction rdx|QWORD = DEC rdx|QWORD size: QWORD <|@ <|@
      nr 2566  <|@ instruction CMP (x: r10|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr 2568  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B256 -> B261 falseDestination: B256 -> B258 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B258"
    from_bci -1
    to_bci -1
    predecessors "B256" 
    successors "B261" 
    xhandlers
    flags 
    probability 4592008490372696935
    begin_IR
      LIR
      nr 2574  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2576  <|@ instruction MOV (x: [rcx|QWORD[.] + r10|QWORD * 2], y: r12|ILLEGAL) size: WORD <|@ <|@
      nr 2578  <|@ instruction JUMP ~[] destination: B258 -> B261 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4589678796991780868
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   84  <|@ instruction CMP (x: rdi|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr   86  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4589628653228494709
    begin_IR
      LIR
      nr  106  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  108  <|@ instruction MOV (x: [r15|QWORD + 96], y: rdi|QWORD) size: QWORD <|@ <|@
      nr  110  <|@ instruction AMD64PREFETCH ~[r11|QWORD + 240] instr: 0 <|@ <|@
      nr  112  <|@ instruction rdi|QWORD[*] = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  114  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B6" 
    successors "B75" 
    xhandlers
    flags 
    probability 4589678796991780868
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  118  <|@ instruction xmm0|V256_QWORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr  120  <|@ instruction rsi|QWORD[.] = MOVE rdi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  122  <|@ instruction MOV [rdi|QWORD[*] + 12] y: 16 size: DWORD <|@ <|@
      nr  124  <|@ instruction MOV [rdi|QWORD[*]] y: 1 size: QWORD <|@ <|@
      nr  126  <|@ instruction MOV [rdi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr  128  <|@ instruction J (address: [rdi|QWORD[*] + 16], input: xmm0|V256_QWORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr  130  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  132  <|@ instruction r8|DWORD = MOVE input: int[16|0x10] <|@ <|@
      nr  134  <|@ instruction r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  136  <|@ instruction JUMP ~[] destination: B8 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors "B144" 
    xhandlers
    flags 
    probability 4587675027572901137
    begin_IR
      LIR
      nr  894  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  896  <|@ instruction r13|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  898  <|@ instruction rcx|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  900  <|@ instruction r14|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  902  <|@ instruction JUMP ~[] destination: B82 -> B144 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B144"
    from_bci -1
    to_bci -1
    predecessors "B143" "B82" 
    successors "B145" 
    xhandlers
    flags 
    probability 4588182886451812978
    begin_IR
      LIR
      nr 1510  <|@ instruction [] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr 1512  <|@ instruction stack:112|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1514  <|@ instruction r11|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1516  <|@ instruction r10|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1518  <|@ instruction r13|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1520  <|@ instruction rsi|DWORD = MOVE stack:56|DWORD moveKind: DWORD <|@ <|@
      nr 1522  <|@ instruction JUMP ~[] destination: B144 -> B145 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B145"
    from_bci -1
    to_bci -1
    predecessors "B144" "B200" "B148" 
    successors "B146" "B204" 
    xhandlers
    flags "llh" 
    loop_index 5
    loop_depth 1
    probability 4602160059308521155
    begin_IR
      LIR
      nr 1524  <|@ instruction [] = LABEL numbPhis: 3 align: true label: ? <|@ <|@
      nr 1526  <|@ instruction CMP (x: rsi|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr 1528  <|@ instruction BRANCH trueDestinationProbability: 0.8818677814780699 condition: > trueDestination: B145 -> B146 falseDestination: B145 -> B204 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B146"
    from_bci -1
    to_bci -1
    predecessors "B145" 
    successors "B147" "B150" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4601157301131518837
    begin_IR
      LIR
      nr 1530  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1532  <|@ instruction r8|DWORD = MOV [r10|QWORD[.] + 12] size: DWORD <|@ <|@
      nr 1534  <|@ instruction r9|DWORD = INC r11|DWORD size: DWORD <|@ <|@
      nr 1536  <|@ instruction rdx|DWORD = SUB (x: r9|DWORD, ~y: r8|DWORD) size: DWORD <|@ <|@
      nr 1538  <|@ instruction rbx|DWORD = INC r13|DWORD size: DWORD <|@ <|@
      nr 1540  <|@ instruction CMP rdx|DWORD y: 1 size: DWORD <|@ <|@
      nr 1542  <|@ instruction BRANCH trueDestinationProbability: 0.9354897578252553 condition: < trueDestination: B146 -> B147 falseDestination: B146 -> B150 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B147"
    from_bci -1
    to_bci -1
    predecessors "B146" 
    successors "B148" "B149" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4600674398023585731
    begin_IR
      LIR
      nr 1544  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1546  <|@ instruction CMP (x: r8|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr 1548  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B147 -> B148 falseDestination: B147 -> B149 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B148"
    from_bci -1
    to_bci -1
    predecessors "B147" 
    successors "B145" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 1
    probability 4600674398023585731
    begin_IR
      LIR
      nr 1550  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1552  <|@ instruction MOV (x: [r14|QWORD[.] + 12], y: r9|DWORD) size: DWORD <|@ <|@
      nr 1554  <|@ instruction MOV [r10|QWORD[.] + r11|DWORD * 2 + 16] y: 32 size: WORD <|@ <|@
      nr 1556  <|@ instruction r11|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr 1558  <|@ instruction r13|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1560  <|@ instruction JUMP ~[] destination: B148 -> B145 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B150"
    from_bci -1
    to_bci -1
    predecessors "B146" 
    successors "B151" "B152" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4583383671135353628
    begin_IR
      LIR
      nr 1570  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1572  <|@ instruction rdx|DWORD = SHL r8|DWORD size: DWORD <|@ <|@
      nr 1574  <|@ instruction rdx|DWORD = LEA [rdx|DWORD + 2] size: DWORD <|@ <|@
      nr 1576  <|@ instruction rcx|DWORD = SUB (x: rdx|DWORD, ~y: r9|DWORD) size: DWORD <|@ <|@
      nr 1578  <|@ instruction TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1580  <|@ instruction rdx|DWORD = CMOVE (falseValue: rdx|DWORD, ~trueValue: r9|DWORD) condition: < <|@ <|@
      nr 1582  <|@ instruction CMP rdx|DWORD y: 1 size: DWORD <|@ <|@
      nr 1584  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B150 -> B151 falseDestination: B150 -> B152 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B152"
    from_bci -1
    to_bci -1
    predecessors "B150" 
    successors "B153" "B154" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4583383671135353628
    begin_IR
      LIR
      nr 1594  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1596  <|@ instruction rcx|DWORD = MOVE input: int[2147483639|0x7ffffff7] <|@ <|@
      nr 1598  <|@ instruction rcx|DWORD = SUB (x: rcx|DWORD, ~y: rdx|DWORD) size: DWORD <|@ <|@
      nr 1600  <|@ instruction TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1602  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B152 -> B153 falseDestination: B152 -> B154 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B154"
    from_bci -1
    to_bci -1
    predecessors "B152" 
    successors "B155" "B202" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4583383671135353628
    begin_IR
      LIR
      nr 1612  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1614  <|@ instruction CMP (x: rdx|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr 1616  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B154 -> B155 falseDestination: B154 -> B202 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B155"
    from_bci -1
    to_bci -1
    predecessors "B154" 
    successors "B156" "B160" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4583383671135353628
    begin_IR
      LIR
      nr 1618  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1620  <|@ instruction rcx|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr 1622  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr 1624  <|@ instruction CMP rdx|DWORD y: 16777215 size: DWORD <|@ <|@
      nr 1626  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B155 -> B156 falseDestination: B155 -> B160 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B156"
    from_bci -1
    to_bci -1
    predecessors "B155" 
    successors "B160" "B158" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4582611026162660659
    begin_IR
      LIR
      nr 1628  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1630  <|@ instruction rax|DWORD = SHL rdx|DWORD size: DWORD <|@ <|@
      nr 1632  <|@ instruction rax|DWORD = LEA [rax|DWORD + 23] size: DWORD <|@ <|@
      nr 1634  <|@ instruction rax|DWORD = AND rax|DWORD y: -8 size: DWORD <|@ <|@
      nr 1636  <|@ instruction rax|QWORD = MOVSXD rax|DWORD size: QWORD <|@ <|@
      nr 1638  <|@ instruction rbp|QWORD = ADD (x: rax|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr 1640  <|@ instruction CMP (x: rbp|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr 1642  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B156 -> B160 falseDestination: B156 -> B158 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B158"
    from_bci -1
    to_bci -1
    predecessors "B156" 
    successors "B161" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4582541488115118292
    begin_IR
      LIR
      nr 1658  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1660  <|@ instruction MOV (x: [r15|QWORD + 96], y: rbp|QWORD) size: QWORD <|@ <|@
      nr 1662  <|@ instruction AMD64PREFETCH ~[rax|QWORD + rcx|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr 1664  <|@ instruction AMD64PREFETCH ~[rax|QWORD + rcx|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr 1666  <|@ instruction AMD64PREFETCH ~[rax|QWORD + rcx|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr 1668  <|@ instruction AMD64PREFETCH ~[rax|QWORD + rcx|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr 1670  <|@ instruction MOV (x: [rcx|QWORD + 12], y: rdx|DWORD) size: DWORD <|@ <|@
      nr 1672  <|@ instruction MOV [rcx|QWORD] y: 1 size: QWORD <|@ <|@
      nr 1674  <|@ instruction MOV [rcx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr 1676  <|@ instruction rcx|QWORD[.] = MOVE rcx|QWORD moveKind: QWORD <|@ <|@
      nr 1678  <|@ instruction rax|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1680  <|@ instruction r13|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr 1682  <|@ instruction stack:36|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1684  <|@ instruction stack:80|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr 1686  <|@ instruction stack:60|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr 1688  <|@ instruction stack:120|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1690  <|@ instruction r14|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr 1692  <|@ instruction JUMP ~[] destination: B158 -> B161 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B161"
    from_bci -1
    to_bci -1
    predecessors "B158" "B160" 
    successors "B180" "B163" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4583383671135353628
    begin_IR
      LIR
      nr 1728  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1730  <|@ instruction CMP (x: r13|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr 1732  <|@ instruction rdx|DWORD = CMOVE (falseValue: r13|DWORD, ~trueValue: r14|DWORD) condition: > <|@ <|@
      nr 1734  <|@ instruction rsi|QWORD = MOVSXD rdx|DWORD size: QWORD <|@ <|@
      nr 1736  <|@ instruction CMP rsi|QWORD y: 1 size: QWORD <|@ <|@
      nr 1738  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B161 -> B180 falseDestination: B161 -> B163 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B163"
    from_bci -1
    to_bci -1
    predecessors "B161" 
    successors "B168" "B166" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4578880071507983132
    begin_IR
      LIR
      nr 1744  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1746  <|@ instruction r10|QWORD[.] = MOVE stack:120|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1748  <|@ instruction rdx|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD <|@ <|@
      nr 1750  <|@ instruction r10|QWORD[.] = LEA [r10|QWORD[.] + 16] size: QWORD <|@ <|@
      nr 1752  <|@ instruction r11|QWORD = LEA [rsi|QWORD - 16] size: QWORD <|@ <|@
      nr 1754  <|@ instruction TEST (x: r11|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr 1760  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1756  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B163 -> B168 falseDestination: B163 -> B166 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B168"
    from_bci -1
    to_bci -1
    predecessors "B163" "B166" 
    successors "B171" "B170" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4578880071507983132
    begin_IR
      LIR
      nr 1786  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1788  <|@ instruction r11|QWORD = LEA [rsi|QWORD - 8] size: QWORD <|@ <|@
      nr 1790  <|@ instruction CMP (x: r8|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr 1792  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B168 -> B171 falseDestination: B168 -> B170 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B170"
    from_bci -1
    to_bci -1
    predecessors "B168" 
    successors "B171" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4576948459076250709
    begin_IR
      LIR
      nr 1798  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1800  <|@ instruction xmm0|V128_WORD = H [r10|QWORD[.] + r8|QWORD * 2] nZ: XMM oh: VMOVDQU <|@ <|@
      nr 1802  <|@ instruction J (address: [rdx|QWORD[.] + r8|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr 1804  <|@ instruction r11|QWORD = LEA [r8|QWORD + 8] size: QWORD <|@ <|@
      nr 1806  <|@ instruction r8|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr 1808  <|@ instruction JUMP ~[] destination: B170 -> B171 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B171"
    from_bci -1
    to_bci -1
    predecessors "B170" "B168" 
    successors "B174" "B173" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4578880071507983132
    begin_IR
      LIR
      nr 1810  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1812  <|@ instruction r11|QWORD = LEA [rsi|QWORD - 4] size: QWORD <|@ <|@
      nr 1814  <|@ instruction CMP (x: r8|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr 1816  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B171 -> B174 falseDestination: B171 -> B173 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B173"
    from_bci -1
    to_bci -1
    predecessors "B171" 
    successors "B174" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4576948459076250709
    begin_IR
      LIR
      nr 1822  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1824  <|@ instruction xmm0|V64_WORD = H [r10|QWORD[.] + r8|QWORD * 2] nZ: XMM oh: VMOVQ <|@ <|@
      nr 1826  <|@ instruction J (address: [rdx|QWORD[.] + r8|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr 1828  <|@ instruction r11|QWORD = LEA [r8|QWORD + 4] size: QWORD <|@ <|@
      nr 1830  <|@ instruction r8|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr 1832  <|@ instruction JUMP ~[] destination: B173 -> B174 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B174"
    from_bci -1
    to_bci -1
    predecessors "B173" "B171" 
    successors "B177" "B176" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4578880071507983132
    begin_IR
      LIR
      nr 1834  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1836  <|@ instruction r11|QWORD = LEA [rsi|QWORD - 2] size: QWORD <|@ <|@
      nr 1838  <|@ instruction CMP (x: r8|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr 1840  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B174 -> B177 falseDestination: B174 -> B176 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B176"
    from_bci -1
    to_bci -1
    predecessors "B174" 
    successors "B177" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4576948459076250709
    begin_IR
      LIR
      nr 1846  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1848  <|@ instruction xmm0|V32_WORD = H [r10|QWORD[.] + r8|QWORD * 2] nZ: XMM oh: VMOVD <|@ <|@
      nr 1850  <|@ instruction J (address: [rdx|QWORD[.] + r8|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr 1852  <|@ instruction r11|QWORD = LEA [r8|QWORD + 2] size: QWORD <|@ <|@
      nr 1854  <|@ instruction r8|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr 1856  <|@ instruction JUMP ~[] destination: B176 -> B177 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B177"
    from_bci -1
    to_bci -1
    predecessors "B176" "B174" 
    successors "B180" "B179" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4578880071507983132
    begin_IR
      LIR
      nr 1858  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1860  <|@ instruction r11|QWORD = DEC rsi|QWORD size: QWORD <|@ <|@
      nr 1862  <|@ instruction CMP (x: r8|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr 1864  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B177 -> B180 falseDestination: B177 -> B179 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B179"
    from_bci -1
    to_bci -1
    predecessors "B177" 
    successors "B180" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4576948459076250709
    begin_IR
      LIR
      nr 1870  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1872  <|@ instruction r10|DWORD = MOVSX [r10|QWORD[.] + r8|QWORD * 2] size: DWORD <|@ <|@
      nr 1874  <|@ instruction MOV (x: [rdx|QWORD[.] + r8|QWORD * 2], y: r10|DWORD) size: WORD <|@ <|@
      nr 1876  <|@ instruction JUMP ~[] destination: B179 -> B180 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B180"
    from_bci -1
    to_bci -1
    predecessors "B161" "B179" "B177" 
    successors "B181" "B200" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4583383671135353628
    begin_IR
      LIR
      nr 1878  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1880  <|@ instruction rdx|QWORD = MOVSXD r13|DWORD size: QWORD <|@ <|@
      nr 1882  <|@ instruction CMP (x: rdx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1884  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B180 -> B181 falseDestination: B180 -> B200 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B200"
    from_bci -1
    to_bci -1
    predecessors "B180" "B197" "B195" 
    successors "B145" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 1
    probability 4583383671135353628
    begin_IR
      LIR
      nr 2042  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2034  <|@ instruction r9|DWORD = MOVE stack:80|DWORD moveKind: DWORD <|@ <|@
      nr 2036  <|@ instruction rsi|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr 2038  <|@ instruction r11|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2044  <|@ instruction rdx|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr 2046  <|@ instruction r10|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@1d28dd80 encoding: base: 0 shift: 3 <|@ <|@
      nr 2048  <|@ instruction MOV (x: [r11|QWORD[.] + 16], y: r10|DWORD[.]) size: DWORD <|@ <|@
      nr 2050  <|@ instruction r14|QWORD[*] = SHR r11|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr 2052  <|@ instruction MOVB (x: [r14|QWORD[*] + rdx|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr 2054  <|@ instruction MOV (x: [r11|QWORD[.] + 12], y: r9|DWORD) size: DWORD <|@ <|@
      nr 2056  <|@ instruction MOV [rax|QWORD[.] + rsi|DWORD * 2 + 16] y: 32 size: WORD <|@ <|@
      nr 2058  <|@ instruction r10|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2060  <|@ instruction r13|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr 2062  <|@ instruction r14|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2064  <|@ instruction rsi|DWORD = MOVE stack:56|DWORD moveKind: DWORD <|@ <|@
      nr 2066  <|@ instruction r11|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr 2068  <|@ instruction JUMP ~[] destination: B200 -> B145 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B181"
    from_bci -1
    to_bci -1
    predecessors "B180" 
    successors "B182" "B183" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4578880071507983132
    begin_IR
      LIR
      nr 1886  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1888  <|@ instruction r10|QWORD[.] = LEA [rax|QWORD[.] + rsi|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr 1890  <|@ instruction rdx|QWORD = SUB (x: rdx|QWORD, ~y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1892  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 16] size: QWORD <|@ <|@
      nr 1894  <|@ instruction TEST (x: rsi|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1896  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B181 -> B182 falseDestination: B181 -> B183 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B182"
    from_bci -1
    to_bci -1
    predecessors "B181" 
    successors "B186" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4576948459076250709
    begin_IR
      LIR
      nr 1898  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1900  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1902  <|@ instruction JUMP ~[] destination: B182 -> B186 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B186"
    from_bci -1
    to_bci -1
    predecessors "B182" "B184" 
    successors "B189" "B188" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4578880071507983132
    begin_IR
      LIR
      nr 1926  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1928  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 8] size: QWORD <|@ <|@
      nr 1930  <|@ instruction CMP (x: r11|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1932  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B186 -> B189 falseDestination: B186 -> B188 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B188"
    from_bci -1
    to_bci -1
    predecessors "B186" 
    successors "B189" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4576948459076250709
    begin_IR
      LIR
      nr 1938  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1940  <|@ instruction xmm0|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0> <|@ <|@
      nr 1942  <|@ instruction J (address: [r10|QWORD[.] + r11|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr 1944  <|@ instruction rsi|QWORD = LEA [r11|QWORD + 8] size: QWORD <|@ <|@
      nr 1946  <|@ instruction r11|QWORD = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr 1948  <|@ instruction JUMP ~[] destination: B188 -> B189 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B189"
    from_bci -1
    to_bci -1
    predecessors "B188" "B186" 
    successors "B192" "B191" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4578880071507983132
    begin_IR
      LIR
      nr 1950  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1952  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 4] size: QWORD <|@ <|@
      nr 1954  <|@ instruction CMP (x: r11|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1956  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B189 -> B192 falseDestination: B189 -> B191 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B191"
    from_bci -1
    to_bci -1
    predecessors "B189" 
    successors "B192" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4576948459076250709
    begin_IR
      LIR
      nr 1962  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1964  <|@ instruction xmm0|V64_WORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr 1966  <|@ instruction J (address: [r10|QWORD[.] + r11|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr 1968  <|@ instruction rsi|QWORD = LEA [r11|QWORD + 4] size: QWORD <|@ <|@
      nr 1970  <|@ instruction r11|QWORD = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr 1972  <|@ instruction JUMP ~[] destination: B191 -> B192 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B192"
    from_bci -1
    to_bci -1
    predecessors "B191" "B189" 
    successors "B195" "B194" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4578880071507983132
    begin_IR
      LIR
      nr 1974  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1976  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 2] size: QWORD <|@ <|@
      nr 1978  <|@ instruction CMP (x: r11|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1980  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B192 -> B195 falseDestination: B192 -> B194 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B194"
    from_bci -1
    to_bci -1
    predecessors "B192" 
    successors "B195" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4576948459076250709
    begin_IR
      LIR
      nr 1986  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1988  <|@ instruction xmm0|V32_WORD = L oc: SIMD<0,0> <|@ <|@
      nr 1990  <|@ instruction J (address: [r10|QWORD[.] + r11|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr 1992  <|@ instruction rsi|QWORD = LEA [r11|QWORD + 2] size: QWORD <|@ <|@
      nr 1994  <|@ instruction r11|QWORD = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr 1996  <|@ instruction JUMP ~[] destination: B194 -> B195 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B195"
    from_bci -1
    to_bci -1
    predecessors "B194" "B192" 
    successors "B200" "B197" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4578880071507983132
    begin_IR
      LIR
      nr 1998  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 2000  <|@ instruction rdx|QWORD = DEC rdx|QWORD size: QWORD <|@ <|@
      nr 2002  <|@ instruction CMP (x: r11|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr 2004  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B195 -> B200 falseDestination: B195 -> B197 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B197"
    from_bci -1
    to_bci -1
    predecessors "B195" 
    successors "B200" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4576948459076250709
    begin_IR
      LIR
      nr 2016  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2018  <|@ instruction MOV (x: [r10|QWORD[.] + r11|QWORD * 2], y: r12|ILLEGAL) size: WORD <|@ <|@
      nr 2026  <|@ instruction JUMP ~[] destination: B197 -> B200 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B166"
    from_bci -1
    to_bci -1
    predecessors "B163" "B166" 
    successors "B168" "B166" 
    xhandlers
    flags "llh" 
    loop_index 6
    loop_depth 2
    probability 4578880071507983132
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr 1772  <|@ instruction xmm0|V256_WORD = H [r10|QWORD[.] + r8|QWORD * 2] nZ: YMM oh: VMOVDQU <|@ <|@
      nr 1774  <|@ instruction J (address: [rdx|QWORD[.] + r8|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr 1776  <|@ instruction r8|QWORD = LEA [r8|QWORD + 16] size: QWORD <|@ <|@
      nr 1778  <|@ instruction CMP (x: r8|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr 1780  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B166 -> B168 falseDestination: B166 -> B166 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B183"
    from_bci -1
    to_bci -1
    predecessors "B181" 
    successors "B184" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4569872872253242140
    begin_IR
      LIR
      nr 1904  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1906  <|@ instruction xmm0|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0> <|@ <|@
      nr 1908  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1910  <|@ instruction JUMP ~[] destination: B183 -> B184 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B184"
    from_bci -1
    to_bci -1
    predecessors "B183" "B184" 
    successors "B186" "B184" 
    xhandlers
    flags "llh" 
    loop_index 7
    loop_depth 2
    probability 4578880071507983132
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr 1914  <|@ instruction J (address: [r10|QWORD[.] + r11|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr 1916  <|@ instruction r11|QWORD = LEA [r11|QWORD + 16] size: QWORD <|@ <|@
      nr 1918  <|@ instruction CMP (x: r11|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1920  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B184 -> B186 falseDestination: B184 -> B184 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B160"
    from_bci -1
    to_bci -1
    predecessors "B155" "B156" 
    successors "B161" 
    xhandlers
    flags 
    loop_index 5
    loop_depth 1
    probability 4568883886688195138
    begin_IR
      LIR
      nr 1708  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1696  <|@ instruction stack:36|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1698  <|@ instruction stack:80|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr 1700  <|@ instruction stack:60|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr 1702  <|@ instruction stack:120|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1704  <|@ instruction stack:124|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr 1710  <|@ instruction rcx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>} <|@ <|@
      nr 1712  <|@ instruction rsi|QWORD = MOVE rcx|QWORD moveKind: QWORD <|@ <|@
      nr 1714  <|@ instruction rax|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr 1718  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1720  <|@ instruction r14|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr 1722  <|@ instruction r13|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr 1724  <|@ st <@st|@reference-map: [stack:8, stack:16]
live-base-pointers: []
java.util.Formatter$FormatSpecifier.justify(Formatter.java:2926) [bci: 80]
locals: - - stack:112|QWORD[.] - stack:56|DWORD stack:124|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:80] <|@ <|@
      nr 1726  <|@ instruction JUMP ~[] destination: B160 -> B161 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B204"
    from_bci -1
    to_bci -1
    predecessors "B145" 
    successors "B206" 
    xhandlers
    flags 
    probability 4588182886451812978
    begin_IR
      LIR
      nr 2090  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2092  <|@ instruction stack:88|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2094  <|@ instruction r14|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr 2096  <|@ instruction r13|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2098  <|@ instruction JUMP ~[] destination: B204 -> B206 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B244"
    from_bci -1
    to_bci -1
    predecessors "B242" 
    successors "B245" 
    xhandlers
    flags 
    probability 4585056867508815770
    begin_IR
      LIR
      nr 2468  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2470  <|@ instruction xmm0|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0> <|@ <|@
      nr 2472  <|@ instruction r10|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 2474  <|@ instruction JUMP ~[] destination: B244 -> B245 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B245"
    from_bci -1
    to_bci -1
    predecessors "B244" "B245" 
    successors "B247" "B245" 
    xhandlers
    flags "llh" 
    loop_index 9
    loop_depth 1
    probability 4594064066763556762
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr 2478  <|@ instruction J (address: [rcx|QWORD[.] + r10|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr 2480  <|@ instruction r10|QWORD = LEA [r10|QWORD + 16] size: QWORD <|@ <|@
      nr 2482  <|@ instruction CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr 2484  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B245 -> B247 falseDestination: B245 -> B245 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B227"
    from_bci -1
    to_bci -1
    predecessors "B224" "B227" 
    successors "B229" "B227" 
    xhandlers
    flags "llh" 
    loop_index 8
    loop_depth 1
    probability 4594064066763556762
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr 2336  <|@ instruction xmm0|V256_WORD = H [rcx|QWORD[.] + r11|QWORD * 2] nZ: YMM oh: VMOVDQU <|@ <|@
      nr 2338  <|@ instruction J (address: [rdx|QWORD[.] + r11|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr 2340  <|@ instruction r11|QWORD = LEA [r11|QWORD + 16] size: QWORD <|@ <|@
      nr 2342  <|@ instruction CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr 2344  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B227 -> B229 falseDestination: B227 -> B227 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B207"
    from_bci -1
    to_bci -1
    predecessors "B206" 
    successors "B208" "B209" 
    xhandlers
    flags 
    probability 4583674350779409410
    begin_IR
      LIR
      nr 2118  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2120  <|@ instruction TEST (x: r14|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr 2122  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B207 -> B208 falseDestination: B207 -> B209 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B209"
    from_bci -1
    to_bci -1
    predecessors "B207" 
    successors "B210" "B211" 
    xhandlers
    flags 
    probability 4583674350779409410
    begin_IR
      LIR
      nr 2132  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2134  <|@ instruction rax|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr 2136  <|@ instruction rsi|QWORD = LEA [rax|QWORD + 24] size: QWORD <|@ <|@
      nr 2138  <|@ instruction CMP (x: rsi|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr 2140  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B209 -> B210 falseDestination: B209 -> B211 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B211"
    from_bci -1
    to_bci -1
    predecessors "B209" 
    successors "B212" 
    xhandlers
    flags 
    probability 4583594179485699555
    begin_IR
      LIR
      nr 2160  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2162  <|@ instruction MOV (x: [r15|QWORD + 96], y: rsi|QWORD) size: QWORD <|@ <|@
      nr 2164  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 216] instr: 0 <|@ <|@
      nr 2166  <|@ instruction rax|QWORD[*] = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr 2168  <|@ instruction JUMP ~[] destination: B211 -> B212 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B212"
    from_bci -1
    to_bci -1
    predecessors "B211" "B210" 
    successors 
    xhandlers
    flags 
    probability 4583674350779409410
    begin_IR
      LIR
      nr 2170  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 2172  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[*] moveKind: QWORD <|@ <|@
      nr 2174  <|@ instruction rdx|QWORD = MOV [r10|QWORD + 168] size: QWORD <|@ <|@
      nr 2176  <|@ instruction MOV (x: [rax|QWORD[*]], y: rdx|QWORD) size: QWORD <|@ <|@
      nr 2178  <|@ instruction MOV [rax|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr 2180  <|@ instruction MOV [rax|QWORD[*] + 12] y: -559030611 size: DWORD c: NarrowOop[char[0]{}] <|@ <|@
      nr 2182  <|@ instruction MOV (x: [rax|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr 2184  <|@ instruction rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2186  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B221"
    from_bci -1
    to_bci -1
    predecessors "B216" "B217" 
    successors "B222" 
    xhandlers
    flags 
    probability 4584195926457373148
    begin_IR
      LIR
      nr 2278  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2274  <|@ instruction stack:72|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2280  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>} <|@ <|@
      nr 2282  <|@ instruction rdx|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr 2284  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 2286  <|@ instruction r13|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr 2288  <|@ st <@st|@reference-map: [stack:40, stack:56]
live-base-pointers: []
java.util.Formatter$FormatSpecifier.justify(Formatter.java:2927) [bci: 100]
locals: - - stack:88|QWORD[.] - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:100] <|@ <|@
      nr 2290  <|@ instruction JUMP ~[] destination: B221 -> B222 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B85" "B86" 
    xhandlers
    flags 
    probability 4581235090039285951
    begin_IR
      LIR
      nr  912  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  914  <|@ instruction r14|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  916  <|@ instruction r10|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  918  <|@ instruction r13|QWORD = MOVE rbx|QWORD moveKind: QWORD <|@ <|@
      nr  920  <|@ instruction stack:36|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  922  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  924  <|@ instruction rdx|QWORD = LEA [rsi|QWORD + 24] size: QWORD <|@ <|@
      nr  926  <|@ instruction CMP (x: rdx|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr  928  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B84 -> B85 falseDestination: B84 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B87" 
    xhandlers
    flags 
    probability 4581179311352977331
    begin_IR
      LIR
      nr  954  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  956  <|@ instruction MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  958  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 216] instr: 0 <|@ <|@
      nr  960  <|@ instruction rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  962  <|@ instruction stack:96|QWORD = MOVE r8|QWORD moveKind: QWORD <|@ <|@
      nr  964  <|@ instruction r10|DWORD = MOVE stack:76|DWORD moveKind: DWORD <|@ <|@
      nr  966  <|@ instruction JUMP ~[] destination: B86 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B86" "B85" 
    successors "B88" "B89" 
    xhandlers
    flags 
    probability 4581235090039285951
    begin_IR
      LIR
      nr  968  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  970  <|@ instruction rdi|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  972  <|@ instruction stack:104|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  974  <|@ instruction rax|QWORD = MOV [r13|QWORD + 168] size: QWORD <|@ <|@
      nr  976  <|@ instruction MOV (x: [rsi|QWORD[*]], y: rax|QWORD) size: QWORD <|@ <|@
      nr  978  <|@ instruction MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} <|@ <|@
      nr  980  <|@ instruction MOV (x: [rsi|QWORD[*] + 12], y: r10|DWORD) size: DWORD <|@ <|@
      nr  982  <|@ instruction MOV (x: [rsi|QWORD[*] + 16], y: r9|DWORD[.]) size: DWORD <|@ <|@
      nr  984  <|@ instruction rsi|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  986  <|@ instruction rdx|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  988  <|@ st <@st|@reference-map: [stack:24, stack:56, stack:96]
live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
stack: stack:104|QWORD[.] stack:72|QWORD[.] 
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
locals: stack:104|QWORD[.] stack:32|QWORD[.] stack:40|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
locals: stack:104|QWORD[.] - 
java.util.Formatter$FormatSpecifier.justify(Formatter.java:2924) [bci: 69]
locals: - - stack:104|QWORD[.] stack:52|DWORD stack:56|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractStringBuilder.newCapacity(int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:17, 21, 2, 69] <|@ <|@
      nr  990  <|@ instruction r13|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  992  <|@ instruction rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  994  <|@ instruction r14|DWORD[.] = MOV [rdx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  996  <|@ instruction r10|DWORD = MOVE stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  998  <|@ st <@st|@reference-map: [rdx:0, r14:0, stack:24, stack:56, stack:96]
live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
stack: stack:104|QWORD[.] stack:72|QWORD[.] r13|DWORD 
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
locals: stack:104|QWORD[.] rdx|QWORD[.] r10|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
locals: stack:104|QWORD[.] - 
java.util.Formatter$FormatSpecifier.justify(Formatter.java:2924) [bci: 69]
locals: - - stack:104|QWORD[.] stack:52|DWORD stack:56|DWORD - 
>@ <|@ instruction CMP (x: r10|DWORD, y: [r14|DWORD[.] * 8 + 12]) size: DWORD state [bci:20, 21, 2, 69] <|@ <|@
      nr 1000  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: |>| trueDestination: B87 -> B88 falseDestination: B87 -> B89 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B90" "B92" 
    xhandlers
    flags 
    probability 4581235090039285951
    begin_IR
      LIR
      nr 1012  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1014  <|@ instruction TEST (x: r13|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr 1016  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B89 -> B90 falseDestination: B89 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B89" 
    successors "B93" "B97" 
    xhandlers
    flags 
    probability 4581235090039285951
    begin_IR
      LIR
      nr 1036  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1038  <|@ instruction r11|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr 1040  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr 1042  <|@ instruction rcx|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr 1044  <|@ instruction CMP r13|DWORD y: 16777215 size: DWORD <|@ <|@
      nr 1046  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B92 -> B93 falseDestination: B92 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B97" "B95" 
    xhandlers
    flags 
    probability 4580677303176199750
    begin_IR
      LIR
      nr 1048  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1050  <|@ instruction r8|DWORD = SHL r13|DWORD size: DWORD <|@ <|@
      nr 1052  <|@ instruction r8|DWORD = LEA [r8|DWORD + 23] size: DWORD <|@ <|@
      nr 1054  <|@ instruction r8|DWORD = AND r8|DWORD y: -8 size: DWORD <|@ <|@
      nr 1056  <|@ instruction r8|QWORD = MOVSXD r8|DWORD size: QWORD <|@ <|@
      nr 1058  <|@ instruction r9|QWORD = ADD (x: r8|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1060  <|@ instruction CMP (x: r9|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr 1062  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B93 -> B97 falseDestination: B93 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B98" 
    xhandlers
    flags 
    probability 4580627102358521992
    begin_IR
      LIR
      nr 1070  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1072  <|@ instruction MOV (x: [r15|QWORD + 96], y: r9|QWORD) size: QWORD <|@ <|@
      nr 1074  <|@ instruction AMD64PREFETCH ~[r8|QWORD + rsi|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr 1076  <|@ instruction AMD64PREFETCH ~[r8|QWORD + rsi|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr 1078  <|@ instruction AMD64PREFETCH ~[r8|QWORD + rsi|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr 1080  <|@ instruction AMD64PREFETCH ~[r8|QWORD + rsi|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr 1082  <|@ instruction MOV (x: [rsi|QWORD + 12], y: r13|DWORD) size: DWORD <|@ <|@
      nr 1084  <|@ instruction MOV [rsi|QWORD] y: 1 size: QWORD <|@ <|@
      nr 1086  <|@ instruction MOV [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr 1088  <|@ instruction rsi|QWORD[.] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr 1090  <|@ instruction rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1092  <|@ instruction stack:76|DWORD[.] = MOVE r14|DWORD[.] moveKind: DWORD <|@ <|@
      nr 1094  <|@ instruction r14|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr 1098  <|@ instruction JUMP ~[] destination: B95 -> B98 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B95" "B97" 
    successors "B117" "B100" 
    xhandlers
    flags 
    probability 4581235090039285952
    begin_IR
      LIR
      nr 1122  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1096  <|@ instruction r11|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr 1124  <|@ instruction CMP (x: r13|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr 1126  <|@ instruction rdi|DWORD = CMOVE (falseValue: r13|DWORD, ~trueValue: r11|DWORD) condition: > <|@ <|@
      nr 1128  <|@ instruction rdi|QWORD = MOVSXD rdi|DWORD size: QWORD <|@ <|@
      nr 1130  <|@ instruction CMP rdi|QWORD y: 1 size: QWORD <|@ <|@
      nr 1132  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B98 -> B117 falseDestination: B98 -> B100 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B98" 
    successors "B105" "B103" 
    xhandlers
    flags 
    probability 4576731490411915456
    begin_IR
      LIR
      nr 1138  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1140  <|@ instruction r10|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1142  <|@ instruction rsi|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD <|@ <|@
      nr 1144  <|@ instruction rdx|QWORD[.] = LEA [r10|QWORD[.] + 16] size: QWORD <|@ <|@
      nr 1146  <|@ instruction r10|QWORD = LEA [rdi|QWORD - 16] size: QWORD <|@ <|@
      nr 1148  <|@ instruction TEST (x: r10|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr 1154  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1150  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B100 -> B105 falseDestination: B100 -> B103 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B100" "B103" 
    successors "B108" "B107" 
    xhandlers
    flags 
    probability 4576731490411915456
    begin_IR
      LIR
      nr 1180  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1182  <|@ instruction r10|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr 1184  <|@ instruction CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr 1186  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B105 -> B108 falseDestination: B105 -> B107 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B105" 
    successors "B108" 
    xhandlers
    flags 
    probability 4575016825099975968
    begin_IR
      LIR
      nr 1192  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1194  <|@ instruction xmm0|V128_WORD = H [rdx|QWORD[.] + r11|QWORD * 2] nZ: XMM oh: VMOVDQU <|@ <|@
      nr 1196  <|@ instruction J (address: [rsi|QWORD[.] + r11|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr 1198  <|@ instruction r10|QWORD = LEA [r11|QWORD + 8] size: QWORD <|@ <|@
      nr 1200  <|@ instruction r11|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr 1202  <|@ instruction JUMP ~[] destination: B107 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B107" "B105" 
    successors "B111" "B110" 
    xhandlers
    flags 
    probability 4576731490411915456
    begin_IR
      LIR
      nr 1204  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1206  <|@ instruction r10|QWORD = LEA [rdi|QWORD - 4] size: QWORD <|@ <|@
      nr 1208  <|@ instruction CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr 1210  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B108 -> B111 falseDestination: B108 -> B110 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B111" 
    xhandlers
    flags 
    probability 4575016825099975968
    begin_IR
      LIR
      nr 1216  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1218  <|@ instruction xmm0|V64_WORD = H [rdx|QWORD[.] + r11|QWORD * 2] nZ: XMM oh: VMOVQ <|@ <|@
      nr 1220  <|@ instruction J (address: [rsi|QWORD[.] + r11|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr 1222  <|@ instruction r10|QWORD = LEA [r11|QWORD + 4] size: QWORD <|@ <|@
      nr 1224  <|@ instruction r11|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr 1226  <|@ instruction JUMP ~[] destination: B110 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B110" "B108" 
    successors "B114" "B113" 
    xhandlers
    flags 
    probability 4576731490411915456
    begin_IR
      LIR
      nr 1228  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1230  <|@ instruction r10|QWORD = LEA [rdi|QWORD - 2] size: QWORD <|@ <|@
      nr 1232  <|@ instruction CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr 1234  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B111 -> B114 falseDestination: B111 -> B113 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B114" 
    xhandlers
    flags 
    probability 4575016825099975968
    begin_IR
      LIR
      nr 1240  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1242  <|@ instruction xmm0|V32_WORD = H [rdx|QWORD[.] + r11|QWORD * 2] nZ: XMM oh: VMOVD <|@ <|@
      nr 1244  <|@ instruction J (address: [rsi|QWORD[.] + r11|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr 1246  <|@ instruction r10|QWORD = LEA [r11|QWORD + 2] size: QWORD <|@ <|@
      nr 1248  <|@ instruction r11|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr 1250  <|@ instruction JUMP ~[] destination: B113 -> B114 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B113" "B111" 
    successors "B117" "B116" 
    xhandlers
    flags 
    probability 4576731490411915456
    begin_IR
      LIR
      nr 1252  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1254  <|@ instruction r10|QWORD = DEC rdi|QWORD size: QWORD <|@ <|@
      nr 1256  <|@ instruction CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr 1258  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B114 -> B117 falseDestination: B114 -> B116 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors "B117" 
    xhandlers
    flags 
    probability 4575016825099975968
    begin_IR
      LIR
      nr 1264  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1266  <|@ instruction rdx|DWORD = MOVSX [rdx|QWORD[.] + r11|QWORD * 2] size: DWORD <|@ <|@
      nr 1268  <|@ instruction MOV (x: [rsi|QWORD[.] + r11|QWORD * 2], y: rdx|DWORD) size: WORD <|@ <|@
      nr 1270  <|@ instruction JUMP ~[] destination: B116 -> B117 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B98" "B116" "B114" 
    successors "B118" "B137" 
    xhandlers
    flags 
    probability 4581235090039285952
    begin_IR
      LIR
      nr 1272  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1274  <|@ instruction rsi|QWORD = MOVSXD r13|DWORD size: QWORD <|@ <|@
      nr 1276  <|@ instruction CMP (x: rsi|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr 1278  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B117 -> B118 falseDestination: B117 -> B137 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B137"
    from_bci -1
    to_bci -1
    predecessors "B117" "B134" "B132" 
    successors "B141" "B139" 
    xhandlers
    flags 
    probability 4581235090039285952
    begin_IR
      LIR
      nr 1424  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1420  <|@ instruction rdi|QWORD[.] = MOVE stack:104|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1426  <|@ instruction rsi|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@1d28dd80 encoding: base: 0 shift: 3 <|@ <|@
      nr 1428  <|@ instruction MOV (x: [rdi|QWORD[.] + 16], y: rsi|DWORD[.]) size: DWORD <|@ <|@
      nr 1430  <|@ instruction rsi|QWORD[*] = SHR rdi|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr 1432  <|@ instruction MOVB (x: [rsi|QWORD[*] + r14|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr 1434  <|@ instruction r10|DWORD = MOV [rdi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr 1436  <|@ instruction TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr 1438  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B137 -> B141 falseDestination: B137 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B139"
    from_bci -1
    to_bci -1
    predecessors "B137" 
    successors "B141" "B142" 
    xhandlers
    flags 
    probability 4581179311352977332
    begin_IR
      LIR
      nr 1444  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1446  <|@ instruction r13|DWORD = SUB (x: r13|DWORD, ~y: stack:40|DWORD) size: DWORD <|@ <|@
      nr 1448  <|@ instruction CMP (x: r10|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr 1450  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B139 -> B141 falseDestination: B139 -> B142 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B142"
    from_bci -1
    to_bci -1
    predecessors "B139" 
    successors "B143" "B205" 
    xhandlers
    flags 
    probability 4581124090453531798
    begin_IR
      LIR
      nr 1464  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1466  <|@ instruction r11|DWORD[.] = MOVE stack:76|DWORD[.] moveKind: DWORD <|@ <|@
      nr 1468  <|@ instruction r14|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1d28dd80 encoding: base: 0 shift: 3 <|@ <|@
      nr 1470  <|@ instruction r14|QWORD[*] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1472  <|@ instruction rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1474  <|@ instruction rdx|QWORD = MOVSXD r10|DWORD size: QWORD <|@ <|@
      nr 1476  <|@ instruction rdi|QWORD = LEA [r14|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1478  <|@ instruction rsi|QWORD = LEA [rsi|QWORD[*] + rdx|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr 1480  <|@ instruction rdx|QWORD = MOVE stack:96|QWORD moveKind: QWORD <|@ <|@
      nr 1482  <|@ instruction stack:72|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1484  <|@ instruction stack:36|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr 1486  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charArraycopy(Word,Word,Word)void@0x106812d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr 1488  <|@ instruction r10|DWORD = ADD (x: stack:40|DWORD, y: stack:36|DWORD) size: DWORD <|@ <|@
      nr 1490  <|@ instruction rdi|QWORD[.] = MOVE stack:104|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1492  <|@ instruction MOV (x: [rdi|QWORD[.] + 12], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1494  <|@ instruction r9|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1496  <|@ instruction CMP (x: r9|DWORD, y: stack:48|DWORD) size: DWORD <|@ <|@
      nr 1498  <|@ instruction BRANCH trueDestinationProbability: 0.18579515065073993 condition: = trueDestination: B142 -> B143 falseDestination: B142 -> B205 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B205"
    from_bci -1
    to_bci -1
    predecessors "B142" 
    successors "B206" 
    xhandlers
    flags 
    probability 4580055924355621800
    begin_IR
      LIR
      nr 2100  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2102  <|@ instruction stack:88|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2104  <|@ instruction r14|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr 2106  <|@ instruction r13|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2108  <|@ instruction JUMP ~[] destination: B205 -> B206 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B117" 
    successors "B119" "B120" 
    xhandlers
    flags 
    probability 4576731490411915456
    begin_IR
      LIR
      nr 1280  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1282  <|@ instruction rdx|QWORD[.] = LEA [rax|QWORD[.] + rdi|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr 1284  <|@ instruction rsi|QWORD = SUB (x: rsi|QWORD, ~y: rdi|QWORD) size: QWORD <|@ <|@
      nr 1286  <|@ instruction rdi|QWORD = LEA [rsi|QWORD - 16] size: QWORD <|@ <|@
      nr 1288  <|@ instruction TEST (x: rdi|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr 1290  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B118 -> B119 falseDestination: B118 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B118" 
    successors "B123" 
    xhandlers
    flags 
    probability 4575016825099975968
    begin_IR
      LIR
      nr 1292  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1294  <|@ instruction r10|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1296  <|@ instruction JUMP ~[] destination: B119 -> B123 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B123"
    from_bci -1
    to_bci -1
    predecessors "B119" "B121" 
    successors "B126" "B125" 
    xhandlers
    flags 
    probability 4576731490411915456
    begin_IR
      LIR
      nr 1320  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1322  <|@ instruction rdi|QWORD = LEA [rsi|QWORD - 8] size: QWORD <|@ <|@
      nr 1324  <|@ instruction CMP (x: r10|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr 1326  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B123 -> B126 falseDestination: B123 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B125"
    from_bci -1
    to_bci -1
    predecessors "B123" 
    successors "B126" 
    xhandlers
    flags 
    probability 4575016825099975968
    begin_IR
      LIR
      nr 1332  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1334  <|@ instruction xmm0|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0> <|@ <|@
      nr 1336  <|@ instruction J (address: [rdx|QWORD[.] + r10|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr 1338  <|@ instruction rdi|QWORD = LEA [r10|QWORD + 8] size: QWORD <|@ <|@
      nr 1340  <|@ instruction r10|QWORD = MOVE rdi|QWORD moveKind: QWORD <|@ <|@
      nr 1342  <|@ instruction JUMP ~[] destination: B125 -> B126 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B126"
    from_bci -1
    to_bci -1
    predecessors "B125" "B123" 
    successors "B129" "B128" 
    xhandlers
    flags 
    probability 4576731490411915456
    begin_IR
      LIR
      nr 1344  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1346  <|@ instruction rdi|QWORD = LEA [rsi|QWORD - 4] size: QWORD <|@ <|@
      nr 1348  <|@ instruction CMP (x: r10|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr 1350  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B126 -> B129 falseDestination: B126 -> B128 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B128"
    from_bci -1
    to_bci -1
    predecessors "B126" 
    successors "B129" 
    xhandlers
    flags 
    probability 4575016825099975968
    begin_IR
      LIR
      nr 1356  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1358  <|@ instruction xmm0|V64_WORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr 1360  <|@ instruction J (address: [rdx|QWORD[.] + r10|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr 1362  <|@ instruction rdi|QWORD = LEA [r10|QWORD + 4] size: QWORD <|@ <|@
      nr 1364  <|@ instruction r10|QWORD = MOVE rdi|QWORD moveKind: QWORD <|@ <|@
      nr 1366  <|@ instruction JUMP ~[] destination: B128 -> B129 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B129"
    from_bci -1
    to_bci -1
    predecessors "B128" "B126" 
    successors "B132" "B131" 
    xhandlers
    flags 
    probability 4576731490411915456
    begin_IR
      LIR
      nr 1368  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1370  <|@ instruction rdi|QWORD = LEA [rsi|QWORD - 2] size: QWORD <|@ <|@
      nr 1372  <|@ instruction CMP (x: r10|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr 1374  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B129 -> B132 falseDestination: B129 -> B131 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B131"
    from_bci -1
    to_bci -1
    predecessors "B129" 
    successors "B132" 
    xhandlers
    flags 
    probability 4575016825099975968
    begin_IR
      LIR
      nr 1380  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1382  <|@ instruction xmm0|V32_WORD = L oc: SIMD<0,0> <|@ <|@
      nr 1384  <|@ instruction J (address: [rdx|QWORD[.] + r10|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr 1386  <|@ instruction rdi|QWORD = LEA [r10|QWORD + 2] size: QWORD <|@ <|@
      nr 1388  <|@ instruction r10|QWORD = MOVE rdi|QWORD moveKind: QWORD <|@ <|@
      nr 1390  <|@ instruction JUMP ~[] destination: B131 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B132"
    from_bci -1
    to_bci -1
    predecessors "B131" "B129" 
    successors "B137" "B134" 
    xhandlers
    flags 
    probability 4576731490411915456
    begin_IR
      LIR
      nr 1392  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1394  <|@ instruction rsi|QWORD = DEC rsi|QWORD size: QWORD <|@ <|@
      nr 1396  <|@ instruction CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1398  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B132 -> B137 falseDestination: B132 -> B134 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B134"
    from_bci -1
    to_bci -1
    predecessors "B132" 
    successors "B137" 
    xhandlers
    flags 
    probability 4575016825099975968
    begin_IR
      LIR
      nr 1406  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1408  <|@ instruction MOV (x: [rdx|QWORD[.] + r10|QWORD * 2], y: r12|ILLEGAL) size: WORD <|@ <|@
      nr 1412  <|@ instruction JUMP ~[] destination: B134 -> B137 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B143"
    from_bci -1
    to_bci -1
    predecessors "B142" 
    successors "B144" 
    xhandlers
    flags 
    probability 4570272164588901904
    begin_IR
      LIR
      nr 1500  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1502  <|@ instruction r14|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1504  <|@ instruction r13|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1506  <|@ instruction rcx|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr 1508  <|@ instruction JUMP ~[] destination: B143 -> B144 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4569166477141788452
    begin_IR
      LIR
      nr  144  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  146  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  148  <|@ instruction rdx|DWORD = MOVE input: int[8|0x8] <|@ <|@
      nr  150  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  152  <|@ st <@st|@reference-map: [r13:0, stack:92, stack:96]
live-base-pointers: []
java.util.Formatter$FormatSpecifier.justify(Formatter.java:2917) [bci: 0]
locals: r13|QWORD[.] stack:32|QWORD[.] - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr  154  <|@ instruction r13|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  156  <|@ instruction rsi|DWORD = MOVE stack:56|DWORD moveKind: DWORD <|@ <|@
      nr  158  <|@ instruction rbx|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  160  <|@ instruction rcx|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  162  <|@ instruction r9|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  164  <|@ instruction r10|DWORD = MOVE stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  166  <|@ instruction r14|DWORD[.] = MOVE stack:36|DWORD[.] moveKind: DWORD <|@ <|@
      nr  168  <|@ instruction rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  170  <|@ instruction JUMP ~[] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B81" 
    xhandlers
    flags 
    probability 4568617382837849976
    begin_IR
      LIR
      nr  836  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  838  <|@ instruction r13|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>} <|@ <|@
      nr  840  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  842  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr  844  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  846  <|@ st <@st|@reference-map: [stack:56, stack:68]
live-base-pointers: []
java.lang.String.getChars(String.java:827) [bci: 61]
locals: - - - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
locals: vobject:StringBuilder:0{count=stack:76|DWORD,value=stack:72|QWORD[.]} - stack:40|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
locals: vobject:StringBuilder:0{count=stack:76|DWORD,value=stack:72|QWORD[.]} - 
java.util.Formatter$FormatSpecifier.justify(Formatter.java:2924) [bci: 69]
locals: - - vobject:StringBuilder:0{count=stack:76|DWORD,value=stack:72|QWORD[.]} stack:52|DWORD stack:56|DWORD - 
vobject:StringBuilder:0{count=stack:76|DWORD,value=stack:72|QWORD[.]} Ljava/lang/StringBuilder; stack:76|DWORD stack:72|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:61, 35, 2, 69] <|@ <|@
      nr  848  <|@ instruction rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  856  <|@ instruction JUMP ~[] destination: B79 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B262"
    from_bci -1
    to_bci -1
    predecessors "B261" 
    successors "B264" 
    xhandlers
    flags 
    probability 4568413362011779766
    begin_IR
      LIR
      nr 2598  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2600  <|@ instruction r13|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2602  <|@ instruction r10|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr 2604  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr 2606  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr 2608  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 2610  <|@ instruction r14|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr 2612  <|@ st <@st|@reference-map: [r13:0, stack:40]
live-base-pointers: []
java.util.Formatter$FormatSpecifier.justify(Formatter.java:2927) [bci: 100]
locals: - - stack:88|QWORD[.] - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:100] <|@ <|@
      nr 2614  <|@ instruction rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2616  <|@ instruction rax|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2618  <|@ instruction r10|QWORD = MOVE r14|QWORD moveKind: QWORD <|@ <|@
      nr 2620  <|@ instruction JUMP ~[] destination: B262 -> B264 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B100" "B103" 
    successors "B105" "B103" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4576731490411915456
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr 1166  <|@ instruction xmm0|V256_WORD = H [rdx|QWORD[.] + r11|QWORD * 2] nZ: YMM oh: VMOVDQU <|@ <|@
      nr 1168  <|@ instruction J (address: [rsi|QWORD[.] + r11|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr 1170  <|@ instruction r11|QWORD = LEA [r11|QWORD + 16] size: QWORD <|@ <|@
      nr 1172  <|@ instruction CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr 1174  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B103 -> B105 falseDestination: B103 -> B103 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B118" 
    successors "B121" 
    xhandlers
    flags 
    probability 4567724291157174464
    begin_IR
      LIR
      nr 1298  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1300  <|@ instruction xmm0|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0> <|@ <|@
      nr 1302  <|@ instruction r10|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1304  <|@ instruction JUMP ~[] destination: B120 -> B121 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B120" "B121" 
    successors "B123" "B121" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4576731490411915456
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr 1308  <|@ instruction J (address: [rdx|QWORD[.] + r10|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr 1310  <|@ instruction r10|QWORD = LEA [r10|QWORD + 16] size: QWORD <|@ <|@
      nr 1312  <|@ instruction CMP (x: r10|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr 1314  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B121 -> B123 falseDestination: B121 -> B121 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B92" "B93" 
    successors "B98" 
    xhandlers
    flags 
    probability 4567010323972424124
    begin_IR
      LIR
      nr 1106  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1102  <|@ instruction stack:76|DWORD[.] = MOVE r14|DWORD[.] moveKind: DWORD <|@ <|@
      nr 1108  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>} <|@ <|@
      nr 1110  <|@ instruction rdx|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr 1112  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1114  <|@ instruction r14|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr 1116  <|@ st <@st|@reference-map: [stack:24, stack:52, stack:56, stack:96]
live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
stack: stack:104|QWORD[.] stack:72|QWORD[.] r13|DWORD 
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
locals: stack:104|QWORD[.] stack:32|QWORD[.] stack:40|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
locals: stack:104|QWORD[.] - 
java.util.Formatter$FormatSpecifier.justify(Formatter.java:2924) [bci: 69]
locals: - - stack:104|QWORD[.] stack:52|DWORD stack:56|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:20, 21, 2, 69] <|@ <|@
      nr 1120  <|@ instruction JUMP ~[] destination: B97 -> B98 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4559557624972199865
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   92  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   94  <|@ instruction rdx|DWORD = MOVE input: int[8|0x8] <|@ <|@
      nr   96  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   98  <|@ instruction r14|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  100  <|@ st <@st|@reference-map: [r13:0, stack:92, stack:96]
live-base-pointers: []
java.util.Formatter$FormatSpecifier.justify(Formatter.java:2917) [bci: 0]
locals: r13|QWORD[.] stack:32|QWORD[.] - - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr  102  <|@ instruction rdi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  104  <|@ instruction JUMP ~[] destination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B210"
    from_bci -1
    to_bci -1
    predecessors "B209" 
    successors "B212" 
    xhandlers
    flags 
    probability 4553766586441631668
    begin_IR
      LIR
      nr 2142  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2144  <|@ instruction r13|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr 2146  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr 2148  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr 2150  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 2152  <|@ st <@st|@reference-map: [stack:40]
live-base-pointers: []
java.util.Formatter$FormatSpecifier.justify(Formatter.java:2927) [bci: 100]
locals: - - stack:88|QWORD[.] - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:100] <|@ <|@
      nr 2154  <|@ instruction rax|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2156  <|@ instruction r10|QWORD = MOVE r13|QWORD moveKind: QWORD <|@ <|@
      nr 2158  <|@ instruction JUMP ~[] destination: B210 -> B212 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B141"
    from_bci -1
    to_bci -1
    predecessors "B137" "B139" 
    successors 
    xhandlers
    flags 
    probability 4555739597132466830
    begin_IR
      LIR
      nr 1456  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1458  <|@ instruction MOV [r15|QWORD + 668] y: -224097 size: DWORD <|@ <|@
      nr 1460  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1462  <|@ st <@st|@reference-map: [rdi:0, stack:96]
live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:127) [bci: 26]
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
locals: rdi|QWORD[.] stack:32|QWORD[.] stack:40|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
locals: rdi|QWORD[.] - 
java.util.Formatter$FormatSpecifier.justify(Formatter.java:2924) [bci: 69]
locals: - - rdi|QWORD[.] stack:52|DWORD stack:56|DWORD - 
>@ <|@ instruction DEOPT info [bci:26, 21, 2, 69] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B87" 
    xhandlers
    flags 
    probability 4551271695864333850
    begin_IR
      LIR
      nr  930  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  932  <|@ instruction stack:96|QWORD = MOVE r8|QWORD moveKind: QWORD <|@ <|@
      nr  934  <|@ instruction r14|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  936  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  938  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr  940  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  942  <|@ st <@st|@reference-map: [stack:56, stack:68, stack:96]
live-base-pointers: []
java.util.Formatter$FormatSpecifier.justify(Formatter.java:2924) [bci: 67]
locals: - stack:32|QWORD[.] vobject:StringBuilder:0{count=stack:76|DWORD,value=stack:72|QWORD[.]} stack:52|DWORD stack:56|DWORD - 
vobject:StringBuilder:0{count=stack:76|DWORD,value=stack:72|QWORD[.]} Ljava/lang/StringBuilder; stack:76|DWORD stack:72|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:67] <|@ <|@
      nr  944  <|@ instruction rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  946  <|@ instruction r9|DWORD[.] = MOVE stack:60|DWORD[.] moveKind: DWORD <|@ <|@
      nr  948  <|@ instruction r10|DWORD = MOVE stack:76|DWORD moveKind: DWORD <|@ <|@
      nr  950  <|@ instruction r14|DWORD = MOVE stack:80|DWORD moveKind: DWORD <|@ <|@
      nr  952  <|@ instruction JUMP ~[] destination: B85 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  800  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  802  <|@ instruction MOV [r15|QWORD + 668] y: -208993 size: DWORD <|@ <|@
      nr  804  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  806  <|@ st <@st|@reference-map: [r13:0, stack:96]
live-base-pointers: []
java.util.Formatter$FormatSpecifier.justify(Formatter.java:2924) [bci: 67]
locals: - stack:32|QWORD[.] vobject:StringBuilder:0{count=r10|DWORD,value=r13|QWORD[.]} stack:52|DWORD stack:56|DWORD - 
vobject:StringBuilder:0{count=r10|DWORD,value=r13|QWORD[.]} Ljava/lang/StringBuilder; r10|DWORD r13|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:67] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B89" 
    successors "B91" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1018  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1020  <|@ instruction rdi|QWORD[.] = MOVE stack:104|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1022  <|@ instruction r11|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr 1024  <|@ instruction r10|DWORD = MOVE input: int[-317537|0xfffffffffffb279f] // MoveResolver resolve mapping <|@ <|@
      nr 1026  <|@ instruction JUMP ~[] destination: B90 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B88" "B90" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1028  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1030  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1032  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1034  <|@ st <@st|@reference-map: [rdi:0, stack:56, stack:96]
live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
stack: rdi|QWORD[.] stack:72|QWORD[.] r13|DWORD 
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
locals: rdi|QWORD[.] stack:32|QWORD[.] r11|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
locals: rdi|QWORD[.] - 
java.util.Formatter$FormatSpecifier.justify(Formatter.java:2924) [bci: 69]
locals: - - rdi|QWORD[.] stack:52|DWORD stack:56|DWORD - 
>@ <|@ instruction DEOPT info [bci:20, 21, 2, 69] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B202"
    from_bci -1
    to_bci -1
    predecessors "B154" 
    successors "B203" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2074  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2076  <|@ instruction r10|DWORD = MOVE input: int[-232219|0xfffffffffffc74e5] <|@ <|@
      nr 2080  <|@ instruction JUMP ~[] destination: B202 -> B203 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B203"
    from_bci -1
    to_bci -1
    predecessors "B149" "B151" "B153" "B202" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr 2082  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1566  <|@ instruction r11|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2084  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr 2086  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 2088  <|@ st <@st|@reference-map: [r11:0]
live-base-pointers: []
java.util.Formatter$FormatSpecifier.justify(Formatter.java:2926) [bci: 80]
locals: - - r11|QWORD[.] - rsi|DWORD r13|DWORD 
>@ <|@ instruction DEOPT info [bci:80] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B91" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1002  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1004  <|@ instruction rdi|QWORD[.] = MOVE stack:104|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1006  <|@ instruction r11|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr 1008  <|@ instruction r10|DWORD = MOVE input: int[-215571|0xfffffffffffcb5ed] <|@ <|@
      nr 1010  <|@ instruction JUMP ~[] destination: B88 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   38  <|@ instruction MOV [r15|QWORD + 668] y: -193803 size: DWORD <|@ <|@
      nr   40  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   42  <|@ st <@st|@reference-map: [r13:0, stack:96]
live-base-pointers: []
java.util.Formatter$FormatSpecifier.justify(Formatter.java:2917) [bci: 0]
locals: r13|QWORD[.] stack:32|QWORD[.] - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B73" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  308  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  310  <|@ instruction r8|DWORD = MOVE input: int[-198163|0xfffffffffffcf9ed] <|@ <|@
      nr  320  <|@ instruction JUMP ~[] destination: B23 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B19" "B21" "B23" "B72" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr  754  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  258  <|@ instruction r11|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  260  <|@ instruction r10|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  262  <|@ instruction rbx|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  264  <|@ instruction rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  756  <|@ instruction MOV (x: [r15|QWORD + 668], y: r8|DWORD) size: DWORD <|@ <|@
      nr  758  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  760  <|@ st <@st|@reference-map: [rdx:0, r10:0]
live-base-pointers: []
java.util.Formatter$FormatSpecifier.justify(Formatter.java:2923) [bci: 47]
locals: - rdx|QWORD[.] vobject:StringBuilder:0{count=r11|DWORD,value=r10|QWORD[.]} rbx|DWORD stack:56|DWORD r11|DWORD 
vobject:StringBuilder:0{count=r11|DWORD,value=r10|QWORD[.]} Ljava/lang/StringBuilder; r11|DWORD r10|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:47] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B153"
    from_bci -1
    to_bci -1
    predecessors "B152" 
    successors "B203" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1604  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1606  <|@ instruction r10|DWORD = MOVE input: int[-230675|0xfffffffffffc7aed] <|@ <|@
      nr 1610  <|@ instruction JUMP ~[] destination: B153 -> B203 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B208"
    from_bci -1
    to_bci -1
    predecessors "B207" 
    successors "B215" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2124  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2126  <|@ instruction r10|DWORD = MOVE input: int[-234003|0xfffffffffffc6ded] <|@ <|@
      nr 2130  <|@ instruction JUMP ~[] destination: B208 -> B215 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B215"
    from_bci -1
    to_bci -1
    predecessors "B208" "B214" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 2206  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 2128  <|@ instruction r11|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2208  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr 2210  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 2212  <|@ st <@st|@reference-map: [r11:0]
live-base-pointers: []
java.util.Formatter$FormatSpecifier.justify(Formatter.java:2927) [bci: 100]
locals: - - r11|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:100] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B151"
    from_bci -1
    to_bci -1
    predecessors "B150" 
    successors "B203" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1586  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1588  <|@ instruction r10|DWORD = MOVE input: int[-230419|0xfffffffffffc7bed] <|@ <|@
      nr 1592  <|@ instruction JUMP ~[] destination: B151 -> B203 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B149"
    from_bci -1
    to_bci -1
    predecessors "B147" 
    successors "B203" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1562  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1564  <|@ instruction r10|DWORD = MOVE input: int[-228635|0xfffffffffffc82e5] <|@ <|@
      nr 1568  <|@ instruction JUMP ~[] destination: B149 -> B203 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B214"
    from_bci -1
    to_bci -1
    predecessors "B213" 
    successors "B215" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2198  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2200  <|@ instruction r10|DWORD = MOVE input: int[-235027|0xfffffffffffc69ed] <|@ <|@
      nr 2204  <|@ instruction JUMP ~[] destination: B214 -> B215 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B73" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  256  <|@ instruction r8|DWORD = MOVE input: int[-195867|0xfffffffffffd02e5] <|@ <|@
      nr  266  <|@ instruction JUMP ~[] destination: B19 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B73" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  284  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  286  <|@ instruction r8|DWORD = MOVE input: int[-197907|0xfffffffffffcfaed] <|@ <|@
      nr  296  <|@ instruction JUMP ~[] destination: B21 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B73" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  740  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  742  <|@ instruction r8|DWORD = MOVE input: int[-198683|0xfffffffffffcf7e5] <|@ <|@
      nr  752  <|@ instruction JUMP ~[] destination: B72 -> B73 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #10         // width:int
     4: iconst_m1     
     5: if_icmpne     10
     8: aload_1       
     9: areturn       
    10: new           #125        // java.lang.StringBuilder
    13: dup           
    14: invokespecial #100        // java.lang.StringBuilder.<init>:()void
    17: astore_2      
    18: aload_0       
    19: getfield      #7          // f:java.util.Formatter$Flags
    22: getstatic     #101        // java.util.Formatter$Flags.LEFT_JUSTIFY:java.util.Formatter$Flags
    25: invokevirtual #9          // java.util.Formatter$Flags.contains:(java.util.Formatter$Flags)boolean
    28: istore_3      
    29: aload_0       
    30: getfield      #10         // width:int
    33: aload_1       
    34: invokevirtual #0          // java.lang.String.length:()int
    37: isub          
    38: istore        4
    40: iload_3       
    41: ifne          67
    44: iconst_0      
    45: istore        5
    47: iload         5
    49: iload         4
    51: if_icmpge     67
    54: aload_2       
    55: bipush        32
    57: invokevirtual #102        // java.lang.StringBuilder.append:(char)java.lang.StringBuilder
    60: pop           
    61: iinc          
    64: goto          47
    67: aload_2       
    68: aload_1       
    69: invokevirtual #103        // java.lang.StringBuilder.append:(java.lang.String)java.lang.StringBuilder
    72: pop           
    73: iload_3       
    74: ifeq          100
    77: iconst_0      
    78: istore        5
    80: iload         5
    82: iload         4
    84: if_icmpge     100
    87: aload_2       
    88: bipush        32
    90: invokevirtual #102        // java.lang.StringBuilder.append:(char)java.lang.StringBuilder
    93: pop           
    94: iinc          
    97: goto          80
   100: aload_2       
   101: invokevirtual #104        // java.lang.StringBuilder.toString:()java.lang.String
   104: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849c1e203493bc20f85efffffff900f1f80000000000f1f800000000089842400c0feff4883ec7848896c24704c8bee418b751083feff0f8516000000488bc2488b6c24704883c478850500000000c5f877c34889542460418b4d1c418504cc448b720c448974245c4585f60f8446100000468b14f50c00000044895424584d8b5f604d8b47708b0ccd0c00000049b9addeaddeaddeadde458b490c44894c24544123c9894c2450443bc90f94c30fb6db895c244c498d7b30412bf289742448443bc90f8458060000493bf80f87d40d000049897f60410f1883f00000004d8beb4d8bdd41c7450c1000000049c745000100000041c74508addeadde83fe010f8cf0020000c4c17d6f0500000000c4c17e7f45104d8beb41ba01000000458b450c413bf20f8ee4020000418bfaffc78bc7412bc083f8010f8d16000000453bc20f86f80f00006643c74455102000448bd7ebca418bc0d1e08d40028be82bef85ed0f4cc783f8010f8cd90f0000bdf7ffff7f2be885ed0f8c540f0000413bc20f86c90f00004489542444498b6f604d8b777081f8ffffff000f83230200004c896c2438448be841d1e5458d6d174183e5f84d63ed4d8bd54c03d54d3bd60f872c0200004d895760410f18842dc0000000410f18842d00010000410f18842d40010000410f18842d8001000089450c48c7450001000000c74508addeadde448bf0897c2434458be8488bc5453bf5418bfe410f4ffd4863ff4883ff010f8c9a0000004c8b542438488d7010498d52104c8d57f04d85d249c7c3000000000f8d3b0100004c8d57f84d3bda0f8f13000000c4a17a6f045ac4a17a7f045e4d8d53084d8bda4c8d57fc4d3bda0f8f13000000c4a1f96e045ac4a1f97e045e4d8d53044d8bda4c8d57fe4d3bda0f8f13000000c4a1796e045ac4a1797e045e4d8d53024d8bda4c8bd749ffca4d3bda0f8f0a000000420fbf145a664289145e4963f6483bf70f8f1e000000448b5c24446642c74458102000448b5424344c8be88b742448e938feffff488d547810482bf7488d7ef04885ff0f8d9d00000049c7c200000000488d7ef84c3bd70f8f11000000c5f9efc0c4a17a7f0452498d7a084c8bd7488d7efc4c3bd70f8f11000000c5f9efc0c4a1f97e0452498d7a044c8bd7488d7efe4c3bd70f8f11000000c5f9efc0c4a1797e0452498d7a024c8bd748ffce4c3bd60f8f60ffffff6646892452e956ffffff660f1f440000660f1f440000c4a17e6f045ac4a17e7f045e4d8d5b104d3bda7eebe9abfeffffc5f9efc049c7c2000000006666660f1f840000000000c4a17e7f04524d8d52104c3bd77ef1e940ffffff897c24344c896c2438458be849bbaddeaddeaddeadde498bf38bd0b900000000448bf0e80000000090e91bfeffff897c2434ebd5c5f9efc0c4c17e7f451041ba0000000041b8100000004d8beb4c896c24384489542434458b5d0c4d8bcd49c1e90344894c2444418bca034c2458894c24308bf9412bf8448b44245848bbaddeaddeaddeadde83ff010f8d47070000442b5c2458453bd30f8ff30b0000448b74245c49c1e603498bf54963d2498d7e10488d745610498bd0e80000000090498b7760488d5618493b57700f87570a0000498957600f1886d800000049bdaddeaddeaddeadde448b742430448b4c2444448b542454488bd6498b8da800000048890ec74608addeadde4489760c44894e10443b5424500f849202000048895424284c8b6c243849baaddeaddeaddeadde4183fe010f8c1d060000458b5d0c418bc3412bc685c00f8c2a0c0000498b4760498b77704181feffffff000f8351060000418bced1e18d491783e1f84863c94c8bc14c03c04c3bc60f87340600004d8947600f188401c00000000f188401000100000f188401400100000f188401800100004489700c48c70001000000c74008addeadde4c896c2438458beb453bf5418bf6410f4ff54863f64883fe010f8c9a0000004c8b542438488d5010498d4a104c8d56f04d85d249c7c3000000000f8d490500004c8d56f84d3bda0f8f13000000c4a17a6f0459c4a17a7f045a4d8d53084d8bda4c8d56fc4d3bda0f8f13000000c4a1f96e0459c4a1f97e045a4d8d53044d8bda4c8d56fe4d3bda0f8f13000000c4a1796e0459c4a1797e045a4d8d53024d8bda4c8bd649ffca4d3bda0f8f0a000000420fbf0c596642890c5a4963d6483bd60f8f5c000000498b7760488d5618493b57700f87c9080000498957600f1886d800000049baaddeaddeaddeadde488bd6498b8aa800000048890ec74608addeadde48c1e80389460c44896610488bc2488b6c24704883c478850500000000c5f877c3488d4c7010482bd6488d72f04885f60f8d2404000049c7c200000000488d72f84c3bd60f8f11000000c5f9efc0c4a17a7f0451498d72084c8bd6488d72fc4c3bd60f8f11000000c5f9efc0c4a1f97e0451498d72044c8bd6488d72fe4c3bd60f8f11000000c5f9efc0c4a1797e0451498d72024c8bd648ffca4c3bd20f8f22ffffff6646892451e918ffffff493bf80f878c08000049897f60410f1883f0000000498bfbc5f9efc0488bf7c7470c1000000048c70701000000c74708addeaddec5fe7f471041ba0000000041b8100000004c8beee9a0fcffff4c8b6c2438418bce4c8bf24c89742410448bd94d8bd541bd000000008b7424480f1f8400000000000f1f8000000000413bf50f8e18030000458b420c458bcb41ffc1418bd1412bd0418bddffc383fa010f8d1d000000453bc30f865e09000045894e0c6643c7445a102000458bd9448bebebbc418bd0d1e28d52028bca412bc985c9410f4cd183fa010f8c23090000b9f7ffff7f2bca85c90f8ced080000413bd30f8676080000498b4f60498b7f7081faffffff000f83580200008bc2d1e08d401783e0f84863c0488be84803e9483bef0f873c02000049896f600f188408c00000000f188408000100000f188408400100000f1884088001000089510c48c70101000000c74108addeadde488bc1448bea895c245c44894c243044895c24444c89542408458bf0453bee418bd5410f4fd64863f24883fe010f8c9a0000004c8b542408488d50104d8d52104c8d5ef04d85db49c7c0000000000f8d6f0100004c8d5ef84d3bc30f8f13000000c4817a6f0442c4a17a7f04424d8d58084d8bc34c8d5efc4d3bc30f8f13000000c481f96e0442c4a1f97e04424d8d58044d8bc34c8d5efe4d3bc30f8f13000000c481796e0442c4a1797e04424d8d58024d8bc34c8bde49ffcb4d3bc30f8f0a000000470fbf144266468914424963d5483bd60f8f50000000448b4c24308b7424444c8b5c241048ba00e01b17010000004c8bd049c1ea03458953104d8bf349c1ee094588241645894b0c66c744701020004c8bd0448b6c245c4d8bf38b742448458bd9e9fafdffff4c8d547010482bd6488d72f04885f60f8d9f00000049c7c300000000488d72f84c3bde0f8f11000000c5f9efc0c4817a7f045a498d73084c8bde488d72fc4c3bde0f8f11000000c5f9efc0c481f97e045a498d73044c8bde488d72fe4c3bde0f8f11000000c5f9efc0c481797e045a498d73024c8bde48ffca4c3bda0f8f2effffff664789245ae924ffffff0f1f80000000000f1f8000000000c4817e6f0442c4a17e7f04424d8d40104d3bc37eebe977feffffc5f9efc049c7c3000000006666660f1f840000000000c4817e7f045a4d8d5b104c3bde7ef1e93effffff895c245c44894c243044895c24444c8954240844896c240448b9addeaddeaddeadde488bf18bc2b900000000458bf0448be8e80000000090e9d8fdffff4c89742428458bf34d8beae918faffffc5f9efc049c7c2000000000f1f4000c4a17e7f04514d8d52104c3bd67ef1e9c0fbffff660f1f440000660f1f440000c4a17e6f0459c4a17e7f045a4d8d5b104d3bda7eebe99dfaffff4585f60f8ce1050000498b4760488d7018493b77700f87a9040000498977600f1880d8000000488bf0498b92a8000000488910c74008addeaddec7400caddeadde44896010488bc6488b6c24704883c478850500000000c5f877c34c896c243848beaddeaddeaddeadde418bd6b900000000458bebe80000000090e9e5f9ffff448bf1448b5424544c8beb44895c245c498b7760488d5618493b57700f875f040000498957600f1886d80000004c89442420448b542434488bfe48897c2418498b85a8000000488906c74608addeadde4489560c44894e10488bf7418bd60f1f8000000000e80000000090448be8488b542460448b720c448b542458463b14f50c0000000f87870400004585ed0f8c3f04000049bb00e01b1701000000498b7760498b4f704181fdffffff000f8348030000458bc541d1e0458d40174183e0f84d63c04d8bc84c03ce4c3bc90f87280300004d894f60410f188430c0000000410f18843000010000410f18843040010000410f1884308001000044896e0c48c70601000000c74608addeadde488bc644897424344d8bf3448b5c245c453beb418bfd410f4ffb4863ff4883ff010f8c9a0000004c8b542438488d7010498d52104c8d57f04d85d249c7c3000000000f8d620200004c8d57f84d3bda0f8f13000000c4a17a6f045ac4a17a7f045e4d8d53084d8bda4c8d57fc4d3bda0f8f13000000c4a1f96e045ac4a1f97e045e4d8d53044d8bda4c8d57fe4d3bda0f8f13000000c4a1796e045ac4a1797e045e4d8d53024d8bda4c8bd749ffca4d3bda0f8f0a000000420fbf145a664289145e4963f5483bf70f8f9a000000488b7c2418488bf048c1ee03897710488bf748c1ee0946882436448b570c4585d20f8c69020000442b6c2458453bd50f8f5b020000448b5c2434458bf349c1e603488bf04963d2498d7e10488d745610488b5424204889442438448954245ce80000000090448b542458440354245c488b7c24184489570c448b4c2454443b4c24500f849e00000048897c2428458bf24c8b6c2438e9dcf6ffff488d547810482bf7488d7ef04885ff0f8d4801000049c7c200000000488d7ef84c3bd70f8f11000000c5f9efc0c4a17a7f0452498d7a084c8bd7488d7efc4c3bd70f8f11000000c5f9efc0c4a1f97e0452498d7a044c8bd7488d7efe4c3bd70f8f11000000c5f9efc0c4a1797e0452498d7a024c8bd748ffce4c3bd60f8fe4feffff6646892452e9dafeffff4c8bf74c8b6c2438418bcae9d3f8ffff48beaddeaddeaddeaddeba08000000b901000000e800000000904c8be88b7424488b5c244c8b4c2450448b4c2454448b542458448b74245c488b542460e9f9f1ffff49bdaddeaddeaddeadde48beaddeaddeaddeaddeba02000000b901000000e80000000090488bf0e992f5ffff4c8be849baaddeaddeaddeadde48beaddeaddeaddeaddeba02000000b9010000004d8bf2e80000000090488bf0498bc54d8bd6e914f7ffff90c4a17e6f045ac4a17e7f045e4d8d5b104d3bda7eebe984fdffffc5f9efc049c7c2000000006666660f1f840000000000c4a17e7f04524d8d52104c3bd77ef1e995feffff448974243448beaddeaddeaddeadde418bd5b9000000004d8bf3e80000000090e9f8fcffff48beaddeaddeaddeaddeba08000000b901000000458bf1e80000000090488bf8e95ef7ffff4d8bea48beaddeaddeaddeaddeba02000000b901000000e800000000904d8bd5e93dfbffff41c7879c0200009f94fcff4d89a7a8020000e800000000904c89442420458bf248beaddeaddeaddeaddeba02000000b901000000e80000000090488bf0448b4c2444448b542434448b742430e97dfbffff41c7879c0200009fcffcff4d89a7a8020000e80000000090488b7c2418458bda41ba9f27fbff4589979c0200004d89a7a8020000e8000000009041bae574fcff4d8bde4589979c0200004d89a7a8020000e80000000090488b7c2418458bda41baedb5fcffebbf41c7879c020000f50afdff4d89a7a8020000e8000000009041b8edf9fcff458bda4d8bd58b5c244c488b5424604589879c0200004d89a7a8020000e8000000009041baed7afcffeb9041baed6dfcff4c8b5c24284589979c0200004d89a7a8020000e8000000009041baed7bfcffe966ffffff41bae582fcffe95bffffff41baed69fcffebc941b8e502fdffeb9041b8edfafcffeb8841b8e5f7fcffeb80e80000000090e80000000090  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@4182771d slotKind: QWORD  <||@
  Comment 48 6 r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 51 8 rsi|DWORD = MOV [r13|QWORD[.] + 16] size: DWORD  <||@
  Comment 55 10 CMP rsi|DWORD y: -1 size: DWORD  <||@
  Comment 58 12 BRANCH trueDestinationProbability: 0.6259652107203015 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2  <||@
  Comment 64 block B1 null  <||@
  Comment 64 14 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 64 16 rax|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 67 18 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 76 12  <||@
  Comment 86 block B2 null  <||@
  Comment 86 20 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 86 22 stack:32|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 91 24 rcx|DWORD[.] = MOV [r13|QWORD[.] + 28] size: DWORD  <||@
  Comment 95 26 NULLCHECK [r12|QWORD[*] + rcx|DWORD[.] * 8] state [bci:0]  <||@
  Comment 95 [rcx:0, rdx:0, r13:0, stack:96]at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2917) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2  |3  |4  |5 
     locals:  |r13|QWORD[.]  |rdx|QWORD[.]  |-  |-  |-  |-   <||@
  Comment 95 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 99 28 r14|DWORD[.] = MOV [rdx|QWORD[.] + 12] size: DWORD state [bci:0]  <||@
  Comment 99 [rcx:0, rdx:0, r13:0, stack:96]at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2917) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2  |3  |4  |5 
     locals:  |r13|QWORD[.]  |rdx|QWORD[.]  |-  |-  |-  |-   <||@
  Comment 99 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 103 30 stack:36|DWORD[.] = MOVE r14|DWORD[.] moveKind: DWORD  <||@
  Comment 108 32 TEST (x: r14|DWORD[.], y: r14|DWORD[.]) size: DWORD  <||@
  Comment 111 34 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4  <||@
  Comment 117 block B4 null  <||@
  Comment 117 44 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 117 46 r10|DWORD = MOV [r14|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 125 48 stack:40|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 130 50 r11|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 134 52 r8|QWORD = MOV [r15|QWORD + 112] size: QWORD  <||@
  Comment 138 54 rcx|DWORD = MOV [rcx|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 145 56 r9|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Formatter.Flags@122446495]  <||@
  Comment 145 {Object[Formatter.Flags@122446495]}  <||@
  Comment 155 58 r9|DWORD = MOV [r9|QWORD[.] + 12] size: DWORD  <||@
  Comment 159 60 stack:44|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 164 62 rcx|DWORD = AND (x: rcx|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 167 64 stack:48|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 171 66 CMP (x: r9|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 174 68 rbx|DWORD = SETCC condition: =  <||@
  Comment 180 70 stack:52|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 184 72 rdi|QWORD = LEA [r11|QWORD + 48] size: QWORD  <||@
  Comment 188 74 rsi|DWORD = SUB (x: rsi|DWORD, ~y: r10|DWORD) size: DWORD  <||@
  Comment 191 76 stack:56|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 195 78 CMP (x: r9|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 198 80 BRANCH trueDestinationProbability: 0.18604807005003576 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B9  <||@
  Comment 204 block B9 null  <||@
  Comment 204 138 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 204 140 CMP (x: rdi|QWORD, y: r8|QWORD) size: QWORD  <||@
  Comment 207 142 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11  <||@
  Comment 213 block B11 null  <||@
  Comment 213 172 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 213 174 MOV (x: [r15|QWORD + 96], y: rdi|QWORD) size: QWORD  <||@
  Comment 217 176 AMD64PREFETCH ~[r11|QWORD + 240] instr: 0  <||@
  Comment 225 178 r13|QWORD[*] = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 228 180 JUMP ~[] destination: B11 -> B12  <||@
  Comment 228 block B12 null  <||@
  Comment 228 182 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 228 184 r11|QWORD[.] = MOVE r13|QWORD[*] moveKind: QWORD  <||@
  Comment 231 186 MOV [r13|QWORD[*] + 12] y: 16 size: DWORD  <||@
  Comment 239 188 MOV [r13|QWORD[*]] y: 1 size: QWORD  <||@
  Comment 247 190 MOV [r13|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed}  <||@
  Comment 247 {meta{HotSpotType<[C, resolved>;compressed}}  <||@
  Comment 255 192 CMP rsi|DWORD y: 1 size: DWORD  <||@
  Comment 258 194 BRANCH trueDestinationProbability: 0.4177003898613192 condition: < trueDestination: B12 -> B13 falseDestination: B12 -> B14  <||@
  Comment 264 block B14 null  <||@
  Comment 264 210 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 264 212 xmm0|V256_QWORD = A od: SIMD<32,0,0,0> oe: QWORD  <||@
  Comment 264 {DataSection[0x0]}  <||@
  Comment 273 214 J (address: [r13|QWORD[*] + 16], input: xmm0|V256_QWORD) nZ: YMM oh: VMOVDQU  <||@
  Comment 279 216 r13|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 282 218 r10|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 288 220 JUMP ~[] destination: B14 -> B15  <||@
  Comment 288 block B15 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 288 222 [] = LABEL numbPhis: 2 align: true label: ?  <||@
  Comment 288 224 r8|DWORD = MOV [r13|QWORD[.] + 12] size: DWORD  <||@
  Comment 292 226 CMP (x: rsi|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 295 228 BRANCH trueDestinationProbability: 0.5822996101386808 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B75  <||@
  Comment 301 block B16 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 301 230 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 301 232 rdi|DWORD = INC r10|DWORD size: DWORD  <||@
  Comment 306 234 rax|DWORD = SUB (x: rdi|DWORD, ~y: r8|DWORD) size: DWORD  <||@
  Comment 311 236 CMP rax|DWORD y: 1 size: DWORD  <||@
  Comment 314 238 BRANCH trueDestinationProbability: 0.9354897578252553 condition: < trueDestination: B16 -> B17 falseDestination: B16 -> B20  <||@
  Comment 320 block B17 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 320 240 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 320 242 CMP (x: r8|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 323 244 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B17 -> B18 falseDestination: B17 -> B19  <||@
  Comment 329 block B18 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 329 246 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 329 248 MOV [r13|QWORD[.] + r10|DWORD * 2 + 16] y: 32 size: WORD  <||@
  Comment 337 250 r10|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 340 252 JUMP ~[] destination: B18 -> B15  <||@
  Comment 342 block B20 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 342 268 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 342 270 rax|DWORD = SHL r8|DWORD size: DWORD  <||@
  Comment 347 272 rax|DWORD = LEA [rax|DWORD + 2] size: DWORD  <||@
  Comment 350 274 rbp|DWORD = SUB (x: rax|DWORD, ~y: rdi|DWORD) size: DWORD  <||@
  Comment 354 276 TEST (x: rbp|DWORD, y: rbp|DWORD) size: DWORD  <||@
  Comment 356 278 rax|DWORD = CMOVE (falseValue: rax|DWORD, ~trueValue: rdi|DWORD) condition: <  <||@
  Comment 359 280 CMP rax|DWORD y: 1 size: DWORD  <||@
  Comment 362 282 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B20 -> B21 falseDestination: B20 -> B22  <||@
  Comment 368 block B22 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 368 298 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 368 300 rbp|DWORD = MOVE input: int[2147483639|0x7ffffff7]  <||@
  Comment 373 302 rbp|DWORD = SUB (x: rbp|DWORD, ~y: rax|DWORD) size: DWORD  <||@
  Comment 375 304 TEST (x: rbp|DWORD, y: rbp|DWORD) size: DWORD  <||@
  Comment 377 306 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B22 -> B23 falseDestination: B22 -> B24  <||@
  Comment 383 block B24 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 383 322 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 383 324 CMP (x: rax|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 386 326 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B24 -> B25 falseDestination: B24 -> B72  <||@
  Comment 392 block B25 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 392 328 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 392 330 stack:60|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 397 332 rbp|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 401 334 r14|QWORD = MOV [r15|QWORD + 112] size: QWORD  <||@
  Comment 405 336 CMP rax|DWORD y: 16777215 size: DWORD  <||@
  Comment 411 338 BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B25 -> B26 falseDestination: B25 -> B29  <||@
  Comment 417 block B26 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 417 340 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 417 342 stack:72|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 422 344 r13|DWORD = SHL rax|DWORD size: DWORD  <||@
  Comment 428 346 r13|DWORD = LEA [r13|DWORD + 23] size: DWORD  <||@
  Comment 432 348 r13|DWORD = AND r13|DWORD y: -8 size: DWORD  <||@
  Comment 436 350 r13|QWORD = MOVSXD r13|DWORD size: QWORD  <||@
  Comment 439 352 r10|QWORD = ADD (x: r13|QWORD, y: rbp|QWORD) size: QWORD  <||@
  Comment 445 354 CMP (x: r10|QWORD, y: r14|QWORD) size: QWORD  <||@
  Comment 448 356 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B26 -> B27 falseDestination: B26 -> B28  <||@
  Comment 454 block B28 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 454 366 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 454 368 MOV (x: [r15|QWORD + 96], y: r10|QWORD) size: QWORD  <||@
  Comment 458 370 AMD64PREFETCH ~[r13|QWORD + rbp|QWORD * 1 + 192] instr: 0  <||@
  Comment 467 372 AMD64PREFETCH ~[r13|QWORD + rbp|QWORD * 1 + 256] instr: 0  <||@
  Comment 476 374 AMD64PREFETCH ~[r13|QWORD + rbp|QWORD * 1 + 320] instr: 0  <||@
  Comment 485 376 AMD64PREFETCH ~[r13|QWORD + rbp|QWORD * 1 + 384] instr: 0  <||@
  Comment 494 378 MOV (x: [rbp|QWORD + 12], y: rax|DWORD) size: DWORD  <||@
  Comment 497 380 MOV [rbp|QWORD] y: 1 size: QWORD  <||@
  Comment 505 382 MOV [rbp|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed}  <||@
  Comment 505 {meta{HotSpotType<[C, resolved>;compressed}}  <||@
  Comment 512 384 rbp|QWORD[.] = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 512 386 r14|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 515 388 stack:76|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 519 390 r13|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 522 392 rax|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD  <||@
  Comment 525 394 JUMP ~[] destination: B28 -> B31  <||@
  Comment 525 block B31 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 525 422 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 525 424 CMP (x: r14|DWORD, y: r13|DWORD) size: DWORD  <||@
  Comment 528 426 rdi|DWORD = CMOVE (falseValue: r14|DWORD, ~trueValue: r13|DWORD) condition: >  <||@
  Comment 535 428 rdi|QWORD = MOVSXD rdi|DWORD size: QWORD  <||@
  Comment 538 430 CMP rdi|QWORD y: 1 size: QWORD  <||@
  Comment 542 432 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B31 -> B50 falseDestination: B31 -> B33  <||@
  Comment 548 block B33 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 548 438 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 548 440 r10|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 553 442 rsi|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD  <||@
  Comment 557 444 rdx|QWORD[.] = LEA [r10|QWORD[.] + 16] size: QWORD  <||@
  Comment 561 446 r10|QWORD = LEA [rdi|QWORD - 16] size: QWORD  <||@
  Comment 565 448 TEST (x: r10|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 568 454 r11|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 575 450 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B33 -> B38 falseDestination: B33 -> B36  <||@
  Comment 581 block B38 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 581 480 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 581 482 r10|QWORD = LEA [rdi|QWORD - 8] size: QWORD  <||@
  Comment 585 484 CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 588 486 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B38 -> B41 falseDestination: B38 -> B40  <||@
  Comment 594 block B40 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 594 492 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 594 494 xmm0|V128_WORD = H [rdx|QWORD[.] + r11|QWORD * 2] nZ: XMM oh: VMOVDQU  <||@
  Comment 600 496 J (address: [rsi|QWORD[.] + r11|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU  <||@
  Comment 606 498 r10|QWORD = LEA [r11|QWORD + 8] size: QWORD  <||@
  Comment 610 500 r11|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 613 502 JUMP ~[] destination: B40 -> B41  <||@
  Comment 613 block B41 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 613 504 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 613 506 r10|QWORD = LEA [rdi|QWORD - 4] size: QWORD  <||@
  Comment 617 508 CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 620 510 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B41 -> B44 falseDestination: B41 -> B43  <||@
  Comment 626 block B43 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 626 516 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 626 518 xmm0|V64_WORD = H [rdx|QWORD[.] + r11|QWORD * 2] nZ: XMM oh: VMOVQ  <||@
  Comment 632 520 J (address: [rsi|QWORD[.] + r11|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ  <||@
  Comment 638 522 r10|QWORD = LEA [r11|QWORD + 4] size: QWORD  <||@
  Comment 642 524 r11|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 645 526 JUMP ~[] destination: B43 -> B44  <||@
  Comment 645 block B44 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 645 528 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 645 530 r10|QWORD = LEA [rdi|QWORD - 2] size: QWORD  <||@
  Comment 649 532 CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 652 534 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B44 -> B47 falseDestination: B44 -> B46  <||@
  Comment 658 block B46 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 658 540 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 658 542 xmm0|V32_WORD = H [rdx|QWORD[.] + r11|QWORD * 2] nZ: XMM oh: VMOVD  <||@
  Comment 664 544 J (address: [rsi|QWORD[.] + r11|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD  <||@
  Comment 670 546 r10|QWORD = LEA [r11|QWORD + 2] size: QWORD  <||@
  Comment 674 548 r11|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 677 550 JUMP ~[] destination: B46 -> B47  <||@
  Comment 677 block B47 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 677 552 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 677 554 r10|QWORD = DEC rdi|QWORD size: QWORD  <||@
  Comment 683 556 CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 686 558 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B47 -> B50 falseDestination: B47 -> B49  <||@
  Comment 692 block B49 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 692 564 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 692 566 rdx|DWORD = MOVSX [rdx|QWORD[.] + r11|QWORD * 2] size: DWORD  <||@
  Comment 697 568 MOV (x: [rsi|QWORD[.] + r11|QWORD * 2], y: rdx|DWORD) size: WORD  <||@
  Comment 702 570 JUMP ~[] destination: B49 -> B50  <||@
  Comment 702 block B50 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 702 572 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 702 574 rsi|QWORD = MOVSXD r14|DWORD size: QWORD  <||@
  Comment 705 576 CMP (x: rsi|QWORD, y: rdi|QWORD) size: QWORD  <||@
  Comment 708 578 BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B50 -> B51 falseDestination: B50 -> B70  <||@
  Comment 714 block B70 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 714 724 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 714 720 r11|DWORD = MOVE stack:60|DWORD moveKind: DWORD  <||@
  Comment 719 726 MOV [rax|QWORD[.] + r11|DWORD * 2 + 16] y: 32 size: WORD  <||@
  Comment 727 728 r10|DWORD = MOVE stack:76|DWORD moveKind: DWORD  <||@
  Comment 732 730 r13|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 735 732 rsi|DWORD = MOVE stack:56|DWORD moveKind: DWORD  <||@
  Comment 739 734 JUMP ~[] destination: B70 -> B15  <||@
  Comment 744 block B51 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 744 580 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 744 582 rdx|QWORD[.] = LEA [rax|QWORD[.] + rdi|QWORD * 2 + 16] size: QWORD  <||@
  Comment 749 584 rsi|QWORD = SUB (x: rsi|QWORD, ~y: rdi|QWORD) size: QWORD  <||@
  Comment 752 586 rdi|QWORD = LEA [rsi|QWORD - 16] size: QWORD  <||@
  Comment 756 588 TEST (x: rdi|QWORD, y: rdi|QWORD) size: QWORD  <||@
  Comment 759 590 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B51 -> B52 falseDestination: B51 -> B53  <||@
  Comment 765 block B52 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 765 592 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 765 594 r10|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 772 596 JUMP ~[] destination: B52 -> B56  <||@
  Comment 772 block B56 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 772 620 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 772 622 rdi|QWORD = LEA [rsi|QWORD - 8] size: QWORD  <||@
  Comment 776 624 CMP (x: r10|QWORD, y: rdi|QWORD) size: QWORD  <||@
  Comment 779 626 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B56 -> B59 falseDestination: B56 -> B58  <||@
  Comment 785 block B58 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 785 632 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 785 634 xmm0|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0>  <||@
  Comment 789 636 J (address: [rdx|QWORD[.] + r10|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU  <||@
  Comment 795 638 rdi|QWORD = LEA [r10|QWORD + 8] size: QWORD  <||@
  Comment 799 640 r10|QWORD = MOVE rdi|QWORD moveKind: QWORD  <||@
  Comment 802 642 JUMP ~[] destination: B58 -> B59  <||@
  Comment 802 block B59 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 802 644 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 802 646 rdi|QWORD = LEA [rsi|QWORD - 4] size: QWORD  <||@
  Comment 806 648 CMP (x: r10|QWORD, y: rdi|QWORD) size: QWORD  <||@
  Comment 809 650 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B59 -> B62 falseDestination: B59 -> B61  <||@
  Comment 815 block B61 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 815 656 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 815 658 xmm0|V64_WORD = L oc: SIMD<0,0,0,0>  <||@
  Comment 819 660 J (address: [rdx|QWORD[.] + r10|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ  <||@
  Comment 825 662 rdi|QWORD = LEA [r10|QWORD + 4] size: QWORD  <||@
  Comment 829 664 r10|QWORD = MOVE rdi|QWORD moveKind: QWORD  <||@
  Comment 832 666 JUMP ~[] destination: B61 -> B62  <||@
  Comment 832 block B62 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 832 668 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 832 670 rdi|QWORD = LEA [rsi|QWORD - 2] size: QWORD  <||@
  Comment 836 672 CMP (x: r10|QWORD, y: rdi|QWORD) size: QWORD  <||@
  Comment 839 674 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B62 -> B65 falseDestination: B62 -> B64  <||@
  Comment 845 block B64 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 845 680 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 845 682 xmm0|V32_WORD = L oc: SIMD<0,0>  <||@
  Comment 849 684 J (address: [rdx|QWORD[.] + r10|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD  <||@
  Comment 855 686 rdi|QWORD = LEA [r10|QWORD + 2] size: QWORD  <||@
  Comment 859 688 r10|QWORD = MOVE rdi|QWORD moveKind: QWORD  <||@
  Comment 862 690 JUMP ~[] destination: B64 -> B65  <||@
  Comment 862 block B65 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 862 692 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 862 694 rsi|QWORD = DEC rsi|QWORD size: QWORD  <||@
  Comment 865 696 CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 868 698 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B65 -> B70 falseDestination: B65 -> B67  <||@
  Comment 874 block B67 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 874 706 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 874 708 MOV (x: [rdx|QWORD[.] + r10|QWORD * 2], y: r12|ILLEGAL) size: WORD  <||@
  Comment 879 712 JUMP ~[] destination: B67 -> B70  <||@
  Comment 884 block B36 loop 1 depth 2 outer 0 header:2233|LoopBegin  <||@
  Comment 884 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 896 466 xmm0|V256_WORD = H [rdx|QWORD[.] + r11|QWORD * 2] nZ: YMM oh: VMOVDQU  <||@
  Comment 902 468 J (address: [rsi|QWORD[.] + r11|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU  <||@
  Comment 908 470 r11|QWORD = LEA [r11|QWORD + 16] size: QWORD  <||@
  Comment 912 472 CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 915 474 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B36 -> B38 falseDestination: B36 -> B36  <||@
  Comment 922 block B53 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 922 598 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 922 600 xmm0|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>  <||@
  Comment 926 602 r10|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 933 604 JUMP ~[] destination: B53 -> B54  <||@
  Comment 933 block B54 loop 2 depth 2 outer 0 header:2296|LoopBegin  <||@
  Comment 933 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 944 608 J (address: [rdx|QWORD[.] + r10|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU  <||@
  Comment 950 610 r10|QWORD = LEA [r10|QWORD + 16] size: QWORD  <||@
  Comment 954 612 CMP (x: r10|QWORD, y: rdi|QWORD) size: QWORD  <||@
  Comment 957 614 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B54 -> B56 falseDestination: B54 -> B54  <||@
  Comment 964 block B29 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 964 396 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 964 398 stack:76|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 968 400 stack:72|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 973 404 JUMP ~[] destination: B29 -> B30  <||@
  Comment 973 block B30 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 973 406 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 973 402 r13|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 976 408 r11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>}  <||@
  Comment 976 {meta{HotSpotType<[C, resolved>}}  <||@
  Comment 986 410 rsi|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 989 412 rdx|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 991 414 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 996 416 r14|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 999 418 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:47]  <||@
  Comment 999 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 1004 [stack:56, stack:92, stack:96]at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2923) [bci: 47, duringCall: false, rethrow: false]
              |0  |1                  |2                                                                      |3               |4               |5              
     locals:  |-  |stack:32|QWORD[.]  |vobject:StringBuilder:0{count=stack:60|DWORD,value=stack:72|QWORD[.]}  |stack:52|DWORD  |stack:56|DWORD  |stack:60|DWORD   <||@
  Comment 1005 420 JUMP ~[] destination: B30 -> B31  <||@
  Comment 1010 block B27 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 1010 358 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1010 360 stack:76|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 1014 364 JUMP ~[] destination: B27 -> B30  <||@
  Comment 1016 block B13 null  <||@
  Comment 1016 196 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1016 198 xmm0|V256_QWORD = L oc: SIMD<0,0,0,0>  <||@
  Comment 1020 200 J (address: [r13|QWORD[*] + 16], input: xmm0|V256_QWORD) nZ: YMM oh: VMOVDQU  <||@
  Comment 1026 202 r10|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1032 204 r8|DWORD = MOVE input: int[16|0x10]  <||@
  Comment 1038 206 r13|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 1041 208 JUMP ~[] destination: B13 -> B75  <||@
  Comment 1041 block B75 null  <||@
  Comment 1041 766 [] = LABEL numbPhis: 3 align: false label: ?  <||@
  Comment 1041 768 stack:72|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 1046 770 stack:76|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1051 772 r11|DWORD = MOV [r13|QWORD[.] + 12] size: DWORD  <||@
  Comment 1055 774 r9|DWORD[.] = COMPRESSPOINTER (input: r13|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@1d28dd80 encoding: base: 0 shift: 3  <||@
  Comment 1062 776 stack:60|DWORD[.] = MOVE r9|DWORD[.] moveKind: DWORD  <||@
  Comment 1067 778 rcx|DWORD = ADD (x: r10|DWORD, y: stack:40|DWORD) size: DWORD  <||@
  Comment 1074 780 stack:80|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 1078 782 rdi|DWORD = SUB (x: rcx|DWORD, ~y: r8|DWORD) size: DWORD  <||@
  Comment 1083 784 r8|QWORD = MOV stack:40|DWORD size: DWORD  <||@
  Comment 1088 786 rbx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>}  <||@
  Comment 1088 {meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>}}  <||@
  Comment 1098 788 CMP rdi|DWORD y: 1 size: DWORD  <||@
  Comment 1101 790 BRANCH trueDestinationProbability: 0.9354897721124376 condition: < trueDestination: B75 -> B76 falseDestination: B75 -> B84  <||@
  Comment 1107 block B76 null  <||@
  Comment 1107 792 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1107 794 r11|DWORD = SUB (x: r11|DWORD, ~y: stack:40|DWORD) size: DWORD  <||@
  Comment 1112 796 CMP (x: r10|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 1115 798 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B76 -> B77 falseDestination: B76 -> B78  <||@
  Comment 1121 block B78 null  <||@
  Comment 1121 808 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1121 810 r14|DWORD[.] = MOVE stack:36|DWORD[.] moveKind: DWORD  <||@
  Comment 1126 812 r14|QWORD[.] = UNCOMPRESSPOINTER (input: r14|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1d28dd80 encoding: base: 0 shift: 3  <||@
  Comment 1130 814 r14|QWORD[*] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 1130 816 rsi|QWORD[*] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 1133 818 rdx|QWORD = MOVSXD r10|DWORD size: QWORD  <||@
  Comment 1136 820 rdi|QWORD = LEA [r14|QWORD[*] + 16] size: QWORD  <||@
  Comment 1140 822 rsi|QWORD = LEA [rsi|QWORD[*] + rdx|QWORD * 2 + 16] size: QWORD  <||@
  Comment 1145 824 rdx|QWORD = MOVE r8|QWORD moveKind: QWORD  <||@
  Comment 1148 826 - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charArraycopy(Word,Word,Word)void@0x106812d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL  <||@
  Comment 1148 {Field[name=StubRoutines::_jshort_arraycopy, type=address, offset=0, address=0x105a7dc78, value=0x106812d40]:0x106812d40}  <||@
  Comment 1154 828 rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 1158 830 rdx|QWORD = LEA [rsi|QWORD + 24] size: QWORD  <||@
  Comment 1162 832 CMP (x: rdx|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 1166 834 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B78 -> B79 falseDestination: B78 -> B80  <||@
  Comment 1172 block B80 null  <||@
  Comment 1172 858 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1172 860 MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD  <||@
  Comment 1176 862 AMD64PREFETCH ~[rsi|QWORD + 216] instr: 0  <||@
  Comment 1183 864 rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 1183 866 r13|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>}  <||@
  Comment 1183 {meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>}}  <||@
  Comment 1193 874 JUMP ~[] destination: B80 -> B81  <||@
  Comment 1193 block B81 null  <||@
  Comment 1193 876 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1193 868 r14|DWORD = MOVE stack:80|DWORD moveKind: DWORD  <||@
  Comment 1198 870 r9|DWORD[.] = MOVE stack:60|DWORD[.] moveKind: DWORD  <||@
  Comment 1203 872 r10|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 1208 878 rdx|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD  <||@
  Comment 1211 880 rcx|QWORD = MOV [r13|QWORD + 168] size: QWORD  <||@
  Comment 1218 882 MOV (x: [rsi|QWORD[*]], y: rcx|QWORD) size: QWORD  <||@
  Comment 1221 884 MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed}  <||@
  Comment 1221 {meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed}}  <||@
  Comment 1228 886 MOV (x: [rsi|QWORD[*] + 12], y: r14|DWORD) size: DWORD  <||@
  Comment 1232 888 MOV (x: [rsi|QWORD[*] + 16], y: r9|DWORD[.]) size: DWORD  <||@
  Comment 1236 890 CMP (x: r10|DWORD, y: stack:48|DWORD) size: DWORD  <||@
  Comment 1241 892 BRANCH trueDestinationProbability: 0.18579515065073993 condition: = trueDestination: B81 -> B82 falseDestination: B81 -> B83  <||@
  Comment 1247 block B83 null  <||@
  Comment 1247 904 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1247 906 stack:88|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1252 908 r13|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 1257 910 JUMP ~[] destination: B83 -> B206  <||@
  Comment 1257 block B206 null  <||@
  Comment 1257 2110 [] = LABEL numbPhis: 3 align: false label: ?  <||@
  Comment 1257 2112 r10|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>}  <||@
  Comment 1257 {meta{HotSpotType<Ljava/lang/String;, resolved>}}  <||@
  Comment 1267 2114 CMP r14|DWORD y: 1 size: DWORD  <||@
  Comment 1271 2116 BRANCH trueDestinationProbability: 0.09284041465770032 condition: < trueDestination: B206 -> B207 falseDestination: B206 -> B213  <||@
  Comment 1277 block B213 null  <||@
  Comment 1277 2188 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1277 2190 r11|DWORD = MOV [r13|QWORD[.] + 12] size: DWORD  <||@
  Comment 1281 2192 rax|DWORD = SUB (x: r11|DWORD, ~y: r14|DWORD) size: DWORD  <||@
  Comment 1287 2194 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 1289 2196 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B213 -> B214 falseDestination: B213 -> B216  <||@
  Comment 1295 block B216 null  <||@
  Comment 1295 2214 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1295 2216 rax|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 1299 2218 rsi|QWORD = MOV [r15|QWORD + 112] size: QWORD  <||@
  Comment 1303 2220 CMP r14|DWORD y: 16777215 size: DWORD  <||@
  Comment 1310 2222 BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B216 -> B217 falseDestination: B216 -> B221  <||@
  Comment 1316 block B217 null  <||@
  Comment 1316 2224 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1316 2226 rcx|DWORD = SHL r14|DWORD size: DWORD  <||@
  Comment 1321 2228 rcx|DWORD = LEA [rcx|DWORD + 23] size: DWORD  <||@
  Comment 1324 2230 rcx|DWORD = AND rcx|DWORD y: -8 size: DWORD  <||@
  Comment 1327 2232 rcx|QWORD = MOVSXD rcx|DWORD size: QWORD  <||@
  Comment 1330 2234 r8|QWORD = ADD (x: rcx|QWORD, y: rax|QWORD) size: QWORD  <||@
  Comment 1336 2236 CMP (x: r8|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 1339 2238 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B217 -> B221 falseDestination: B217 -> B219  <||@
  Comment 1345 block B219 null  <||@
  Comment 1345 2246 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1345 2248 MOV (x: [r15|QWORD + 96], y: r8|QWORD) size: QWORD  <||@
  Comment 1349 2250 AMD64PREFETCH ~[rcx|QWORD + rax|QWORD * 1 + 192] instr: 0  <||@
  Comment 1357 2252 AMD64PREFETCH ~[rcx|QWORD + rax|QWORD * 1 + 256] instr: 0  <||@
  Comment 1365 2254 AMD64PREFETCH ~[rcx|QWORD + rax|QWORD * 1 + 320] instr: 0  <||@
  Comment 1373 2256 AMD64PREFETCH ~[rcx|QWORD + rax|QWORD * 1 + 384] instr: 0  <||@
  Comment 1381 2258 MOV (x: [rax|QWORD + 12], y: r14|DWORD) size: DWORD  <||@
  Comment 1385 2260 MOV [rax|QWORD] y: 1 size: QWORD  <||@
  Comment 1392 2262 MOV [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed}  <||@
  Comment 1392 {meta{HotSpotType<[C, resolved>;compressed}}  <||@
  Comment 1399 2264 rax|QWORD[.] = MOVE rax|QWORD moveKind: QWORD  <||@
  Comment 1399 2266 stack:72|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 1404 2268 r13|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 1407 2270 JUMP ~[] destination: B219 -> B222  <||@
  Comment 1407 block B222 null  <||@
  Comment 1407 2292 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1407 2294 CMP (x: r14|DWORD, y: r13|DWORD) size: DWORD  <||@
  Comment 1410 2296 rsi|DWORD = CMOVE (falseValue: r14|DWORD, ~trueValue: r13|DWORD) condition: >  <||@
  Comment 1417 2298 rsi|QWORD = MOVSXD rsi|DWORD size: QWORD  <||@
  Comment 1420 2300 CMP rsi|QWORD y: 1 size: QWORD  <||@
  Comment 1424 2302 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B222 -> B241 falseDestination: B222 -> B224  <||@
  Comment 1430 block B224 null  <||@
  Comment 1430 2308 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1430 2310 r10|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 1435 2312 rdx|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD  <||@
  Comment 1439 2314 rcx|QWORD[.] = LEA [r10|QWORD[.] + 16] size: QWORD  <||@
  Comment 1443 2316 r10|QWORD = LEA [rsi|QWORD - 16] size: QWORD  <||@
  Comment 1447 2318 TEST (x: r10|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 1450 2324 r11|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1457 2320 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B224 -> B229 falseDestination: B224 -> B227  <||@
  Comment 1463 block B229 null  <||@
  Comment 1463 2350 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1463 2352 r10|QWORD = LEA [rsi|QWORD - 8] size: QWORD  <||@
  Comment 1467 2354 CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 1470 2356 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B229 -> B232 falseDestination: B229 -> B231  <||@
  Comment 1476 block B231 null  <||@
  Comment 1476 2362 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1476 2364 xmm0|V128_WORD = H [rcx|QWORD[.] + r11|QWORD * 2] nZ: XMM oh: VMOVDQU  <||@
  Comment 1482 2366 J (address: [rdx|QWORD[.] + r11|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU  <||@
  Comment 1488 2368 r10|QWORD = LEA [r11|QWORD + 8] size: QWORD  <||@
  Comment 1492 2370 r11|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 1495 2372 JUMP ~[] destination: B231 -> B232  <||@
  Comment 1495 block B232 null  <||@
  Comment 1495 2374 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1495 2376 r10|QWORD = LEA [rsi|QWORD - 4] size: QWORD  <||@
  Comment 1499 2378 CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 1502 2380 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B232 -> B235 falseDestination: B232 -> B234  <||@
  Comment 1508 block B234 null  <||@
  Comment 1508 2386 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1508 2388 xmm0|V64_WORD = H [rcx|QWORD[.] + r11|QWORD * 2] nZ: XMM oh: VMOVQ  <||@
  Comment 1514 2390 J (address: [rdx|QWORD[.] + r11|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ  <||@
  Comment 1520 2392 r10|QWORD = LEA [r11|QWORD + 4] size: QWORD  <||@
  Comment 1524 2394 r11|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 1527 2396 JUMP ~[] destination: B234 -> B235  <||@
  Comment 1527 block B235 null  <||@
  Comment 1527 2398 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1527 2400 r10|QWORD = LEA [rsi|QWORD - 2] size: QWORD  <||@
  Comment 1531 2402 CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 1534 2404 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B235 -> B238 falseDestination: B235 -> B237  <||@
  Comment 1540 block B237 null  <||@
  Comment 1540 2410 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1540 2412 xmm0|V32_WORD = H [rcx|QWORD[.] + r11|QWORD * 2] nZ: XMM oh: VMOVD  <||@
  Comment 1546 2414 J (address: [rdx|QWORD[.] + r11|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD  <||@
  Comment 1552 2416 r10|QWORD = LEA [r11|QWORD + 2] size: QWORD  <||@
  Comment 1556 2418 r11|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 1559 2420 JUMP ~[] destination: B237 -> B238  <||@
  Comment 1559 block B238 null  <||@
  Comment 1559 2422 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1559 2424 r10|QWORD = DEC rsi|QWORD size: QWORD  <||@
  Comment 1565 2426 CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 1568 2428 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B238 -> B241 falseDestination: B238 -> B240  <||@
  Comment 1574 block B240 null  <||@
  Comment 1574 2434 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1574 2436 rcx|DWORD = MOVSX [rcx|QWORD[.] + r11|QWORD * 2] size: DWORD  <||@
  Comment 1579 2438 MOV (x: [rdx|QWORD[.] + r11|QWORD * 2], y: rcx|DWORD) size: WORD  <||@
  Comment 1584 2440 JUMP ~[] destination: B240 -> B241  <||@
  Comment 1584 block B241 null  <||@
  Comment 1584 2442 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1584 2444 rdx|QWORD = MOVSXD r14|DWORD size: QWORD  <||@
  Comment 1587 2446 CMP (x: rdx|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 1590 2448 BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B241 -> B242 falseDestination: B241 -> B261  <||@
  Comment 1596 block B261 null  <||@
  Comment 1596 2588 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1596 2590 rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 1600 2592 rdx|QWORD = LEA [rsi|QWORD + 24] size: QWORD  <||@
  Comment 1604 2594 CMP (x: rdx|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 1608 2596 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B261 -> B262 falseDestination: B261 -> B263  <||@
  Comment 1614 block B263 null  <||@
  Comment 1614 2622 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1614 2624 MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD  <||@
  Comment 1618 2626 AMD64PREFETCH ~[rsi|QWORD + 216] instr: 0  <||@
  Comment 1625 2628 rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 1625 2630 r10|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>}  <||@
  Comment 1625 {meta{HotSpotType<Ljava/lang/String;, resolved>}}  <||@
  Comment 1635 2632 JUMP ~[] destination: B263 -> B264  <||@
  Comment 1635 block B264 null  <||@
  Comment 1635 2634 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1635 2636 rdx|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD  <||@
  Comment 1638 2638 rcx|QWORD = MOV [r10|QWORD + 168] size: QWORD  <||@
  Comment 1645 2640 MOV (x: [rsi|QWORD[*]], y: rcx|QWORD) size: QWORD  <||@
  Comment 1648 2642 MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}  <||@
  Comment 1648 {meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}}  <||@
  Comment 1655 2644 rax|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@1d28dd80 encoding: base: 0 shift: 3  <||@
  Comment 1659 2646 MOV (x: [rsi|QWORD[*] + 12], y: rax|DWORD[.]) size: DWORD  <||@
  Comment 1662 2648 MOV (x: [rsi|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 1666 2650 rax|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1669 2652 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 1678 12  <||@
  Comment 1688 block B242 null  <||@
  Comment 1688 2450 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1688 2452 rcx|QWORD[.] = LEA [rax|QWORD[.] + rsi|QWORD * 2 + 16] size: QWORD  <||@
  Comment 1693 2454 rdx|QWORD = SUB (x: rdx|QWORD, ~y: rsi|QWORD) size: QWORD  <||@
  Comment 1696 2456 rsi|QWORD = LEA [rdx|QWORD - 16] size: QWORD  <||@
  Comment 1700 2458 TEST (x: rsi|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 1703 2460 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B242 -> B243 falseDestination: B242 -> B244  <||@
  Comment 1709 block B243 null  <||@
  Comment 1709 2462 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1709 2464 r10|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1716 2466 JUMP ~[] destination: B243 -> B247  <||@
  Comment 1716 block B247 null  <||@
  Comment 1716 2490 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1716 2492 rsi|QWORD = LEA [rdx|QWORD - 8] size: QWORD  <||@
  Comment 1720 2494 CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 1723 2496 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B247 -> B250 falseDestination: B247 -> B249  <||@
  Comment 1729 block B249 null  <||@
  Comment 1729 2502 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1729 2504 xmm0|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0>  <||@
  Comment 1733 2506 J (address: [rcx|QWORD[.] + r10|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU  <||@
  Comment 1739 2508 rsi|QWORD = LEA [r10|QWORD + 8] size: QWORD  <||@
  Comment 1743 2510 r10|QWORD = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 1746 2512 JUMP ~[] destination: B249 -> B250  <||@
  Comment 1746 block B250 null  <||@
  Comment 1746 2514 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1746 2516 rsi|QWORD = LEA [rdx|QWORD - 4] size: QWORD  <||@
  Comment 1750 2518 CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 1753 2520 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B250 -> B253 falseDestination: B250 -> B252  <||@
  Comment 1759 block B252 null  <||@
  Comment 1759 2526 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1759 2528 xmm0|V64_WORD = L oc: SIMD<0,0,0,0>  <||@
  Comment 1763 2530 J (address: [rcx|QWORD[.] + r10|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ  <||@
  Comment 1769 2532 rsi|QWORD = LEA [r10|QWORD + 4] size: QWORD  <||@
  Comment 1773 2534 r10|QWORD = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 1776 2536 JUMP ~[] destination: B252 -> B253  <||@
  Comment 1776 block B253 null  <||@
  Comment 1776 2538 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1776 2540 rsi|QWORD = LEA [rdx|QWORD - 2] size: QWORD  <||@
  Comment 1780 2542 CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 1783 2544 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B253 -> B256 falseDestination: B253 -> B255  <||@
  Comment 1789 block B255 null  <||@
  Comment 1789 2550 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1789 2552 xmm0|V32_WORD = L oc: SIMD<0,0>  <||@
  Comment 1793 2554 J (address: [rcx|QWORD[.] + r10|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD  <||@
  Comment 1799 2556 rsi|QWORD = LEA [r10|QWORD + 2] size: QWORD  <||@
  Comment 1803 2558 r10|QWORD = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 1806 2560 JUMP ~[] destination: B255 -> B256  <||@
  Comment 1806 block B256 null  <||@
  Comment 1806 2562 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1806 2564 rdx|QWORD = DEC rdx|QWORD size: QWORD  <||@
  Comment 1809 2566 CMP (x: r10|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 1812 2568 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B256 -> B261 falseDestination: B256 -> B258  <||@
  Comment 1818 block B258 null  <||@
  Comment 1818 2574 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1818 2576 MOV (x: [rcx|QWORD[.] + r10|QWORD * 2], y: r12|ILLEGAL) size: WORD  <||@
  Comment 1823 2578 JUMP ~[] destination: B258 -> B261  <||@
  Comment 1828 block B5 null  <||@
  Comment 1828 82 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1828 84 CMP (x: rdi|QWORD, y: r8|QWORD) size: QWORD  <||@
  Comment 1831 86 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B7  <||@
  Comment 1837 block B7 null  <||@
  Comment 1837 106 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1837 108 MOV (x: [r15|QWORD + 96], y: rdi|QWORD) size: QWORD  <||@
  Comment 1841 110 AMD64PREFETCH ~[r11|QWORD + 240] instr: 0  <||@
  Comment 1849 112 rdi|QWORD[*] = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 1852 114 JUMP ~[] destination: B7 -> B8  <||@
  Comment 1852 block B8 null  <||@
  Comment 1852 116 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1852 118 xmm0|V256_QWORD = L oc: SIMD<0,0,0,0>  <||@
  Comment 1856 120 rsi|QWORD[.] = MOVE rdi|QWORD[*] moveKind: QWORD  <||@
  Comment 1859 122 MOV [rdi|QWORD[*] + 12] y: 16 size: DWORD  <||@
  Comment 1866 124 MOV [rdi|QWORD[*]] y: 1 size: QWORD  <||@
  Comment 1873 126 MOV [rdi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed}  <||@
  Comment 1873 {meta{HotSpotType<[C, resolved>;compressed}}  <||@
  Comment 1880 128 J (address: [rdi|QWORD[*] + 16], input: xmm0|V256_QWORD) nZ: YMM oh: VMOVDQU  <||@
  Comment 1885 130 r10|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1891 132 r8|DWORD = MOVE input: int[16|0x10]  <||@
  Comment 1897 134 r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1900 136 JUMP ~[] destination: B8 -> B75  <||@
  Comment 1905 block B82 null  <||@
  Comment 1905 894 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1905 896 r13|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 1910 898 rcx|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 1913 900 r14|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1916 902 JUMP ~[] destination: B82 -> B144  <||@
  Comment 1916 block B144 null  <||@
  Comment 1916 1510 [] = LABEL numbPhis: 3 align: false label: ?  <||@
  Comment 1916 1512 stack:112|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 1921 1514 r11|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 1924 1516 r10|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 1927 1518 r13|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1933 1520 rsi|DWORD = MOVE stack:56|DWORD moveKind: DWORD  <||@
  Comment 1937 1522 JUMP ~[] destination: B144 -> B145  <||@
  Comment 1937 block B145 loop 5 depth 1 header:58|LoopBegin  <||@
  Comment 1937 1524 [] = LABEL numbPhis: 3 align: true label: ?  <||@
  Comment 1952 1526 CMP (x: rsi|DWORD, y: r13|DWORD) size: DWORD  <||@
  Comment 1955 1528 BRANCH trueDestinationProbability: 0.8818677814780699 condition: > trueDestination: B145 -> B146 falseDestination: B145 -> B204  <||@
  Comment 1961 block B146 loop 5 depth 1 header:58|LoopBegin  <||@
  Comment 1961 1530 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1961 1532 r8|DWORD = MOV [r10|QWORD[.] + 12] size: DWORD  <||@
  Comment 1965 1534 r9|DWORD = INC r11|DWORD size: DWORD  <||@
  Comment 1971 1536 rdx|DWORD = SUB (x: r9|DWORD, ~y: r8|DWORD) size: DWORD  <||@
  Comment 1977 1538 rbx|DWORD = INC r13|DWORD size: DWORD  <||@
  Comment 1982 1540 CMP rdx|DWORD y: 1 size: DWORD  <||@
  Comment 1985 1542 BRANCH trueDestinationProbability: 0.9354897578252553 condition: < trueDestination: B146 -> B147 falseDestination: B146 -> B150  <||@
  Comment 1991 block B147 loop 5 depth 1 header:58|LoopBegin  <||@
  Comment 1991 1544 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1991 1546 CMP (x: r8|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 1994 1548 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B147 -> B148 falseDestination: B147 -> B149  <||@
  Comment 2000 block B148 loop 5 depth 1 header:58|LoopBegin  <||@
  Comment 2000 1550 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2000 1552 MOV (x: [r14|QWORD[.] + 12], y: r9|DWORD) size: DWORD  <||@
  Comment 2004 1554 MOV [r10|QWORD[.] + r11|DWORD * 2 + 16] y: 32 size: WORD  <||@
  Comment 2012 1556 r11|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 2015 1558 r13|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 2018 1560 JUMP ~[] destination: B148 -> B145  <||@
  Comment 2020 block B150 loop 5 depth 1 header:58|LoopBegin  <||@
  Comment 2020 1570 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2020 1572 rdx|DWORD = SHL r8|DWORD size: DWORD  <||@
  Comment 2025 1574 rdx|DWORD = LEA [rdx|DWORD + 2] size: DWORD  <||@
  Comment 2028 1576 rcx|DWORD = SUB (x: rdx|DWORD, ~y: r9|DWORD) size: DWORD  <||@
  Comment 2033 1578 TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 2035 1580 rdx|DWORD = CMOVE (falseValue: rdx|DWORD, ~trueValue: r9|DWORD) condition: <  <||@
  Comment 2039 1582 CMP rdx|DWORD y: 1 size: DWORD  <||@
  Comment 2042 1584 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B150 -> B151 falseDestination: B150 -> B152  <||@
  Comment 2048 block B152 loop 5 depth 1 header:58|LoopBegin  <||@
  Comment 2048 1594 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2048 1596 rcx|DWORD = MOVE input: int[2147483639|0x7ffffff7]  <||@
  Comment 2053 1598 rcx|DWORD = SUB (x: rcx|DWORD, ~y: rdx|DWORD) size: DWORD  <||@
  Comment 2055 1600 TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 2057 1602 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B152 -> B153 falseDestination: B152 -> B154  <||@
  Comment 2063 block B154 loop 5 depth 1 header:58|LoopBegin  <||@
  Comment 2063 1612 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2063 1614 CMP (x: rdx|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 2066 1616 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B154 -> B155 falseDestination: B154 -> B202  <||@
  Comment 2072 block B155 loop 5 depth 1 header:58|LoopBegin  <||@
  Comment 2072 1618 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2072 1620 rcx|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 2076 1622 rdi|QWORD = MOV [r15|QWORD + 112] size: QWORD  <||@
  Comment 2080 1624 CMP rdx|DWORD y: 16777215 size: DWORD  <||@
  Comment 2086 1626 BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B155 -> B156 falseDestination: B155 -> B160  <||@
  Comment 2092 block B156 loop 5 depth 1 header:58|LoopBegin  <||@
  Comment 2092 1628 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2092 1630 rax|DWORD = SHL rdx|DWORD size: DWORD  <||@
  Comment 2096 1632 rax|DWORD = LEA [rax|DWORD + 23] size: DWORD  <||@
  Comment 2099 1634 rax|DWORD = AND rax|DWORD y: -8 size: DWORD  <||@
  Comment 2102 1636 rax|QWORD = MOVSXD rax|DWORD size: QWORD  <||@
  Comment 2105 1638 rbp|QWORD = ADD (x: rax|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 2111 1640 CMP (x: rbp|QWORD, y: rdi|QWORD) size: QWORD  <||@
  Comment 2114 1642 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B156 -> B160 falseDestination: B156 -> B158  <||@
  Comment 2120 block B158 loop 5 depth 1 header:58|LoopBegin  <||@
  Comment 2120 1658 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2120 1660 MOV (x: [r15|QWORD + 96], y: rbp|QWORD) size: QWORD  <||@
  Comment 2124 1662 AMD64PREFETCH ~[rax|QWORD + rcx|QWORD * 1 + 192] instr: 0  <||@
  Comment 2132 1664 AMD64PREFETCH ~[rax|QWORD + rcx|QWORD * 1 + 256] instr: 0  <||@
  Comment 2140 1666 AMD64PREFETCH ~[rax|QWORD + rcx|QWORD * 1 + 320] instr: 0  <||@
  Comment 2148 1668 AMD64PREFETCH ~[rax|QWORD + rcx|QWORD * 1 + 384] instr: 0  <||@
  Comment 2156 1670 MOV (x: [rcx|QWORD + 12], y: rdx|DWORD) size: DWORD  <||@
  Comment 2159 1672 MOV [rcx|QWORD] y: 1 size: QWORD  <||@
  Comment 2166 1674 MOV [rcx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed}  <||@
  Comment 2166 {meta{HotSpotType<[C, resolved>;compressed}}  <||@
  Comment 2173 1676 rcx|QWORD[.] = MOVE rcx|QWORD moveKind: QWORD  <||@
  Comment 2173 1678 rax|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 2176 1680 r13|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 2179 1682 stack:36|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 2183 1684 stack:80|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 2188 1686 stack:60|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 2193 1688 stack:120|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 2198 1690 r14|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 2201 1692 JUMP ~[] destination: B158 -> B161  <||@
  Comment 2201 block B161 loop 5 depth 1 header:58|LoopBegin  <||@
  Comment 2201 1728 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2201 1730 CMP (x: r13|DWORD, y: r14|DWORD) size: DWORD  <||@
  Comment 2204 1732 rdx|DWORD = CMOVE (falseValue: r13|DWORD, ~trueValue: r14|DWORD) condition: >  <||@
  Comment 2211 1734 rsi|QWORD = MOVSXD rdx|DWORD size: QWORD  <||@
  Comment 2214 1736 CMP rsi|QWORD y: 1 size: QWORD  <||@
  Comment 2218 1738 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B161 -> B180 falseDestination: B161 -> B163  <||@
  Comment 2224 block B163 loop 5 depth 1 header:58|LoopBegin  <||@
  Comment 2224 1744 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2224 1746 r10|QWORD[.] = MOVE stack:120|QWORD[.] moveKind: QWORD  <||@
  Comment 2229 1748 rdx|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD  <||@
  Comment 2233 1750 r10|QWORD[.] = LEA [r10|QWORD[.] + 16] size: QWORD  <||@
  Comment 2237 1752 r11|QWORD = LEA [rsi|QWORD - 16] size: QWORD  <||@
  Comment 2241 1754 TEST (x: r11|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 2244 1760 r8|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 2251 1756 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B163 -> B168 falseDestination: B163 -> B166  <||@
  Comment 2257 block B168 loop 5 depth 1 header:58|LoopBegin  <||@
  Comment 2257 1786 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2257 1788 r11|QWORD = LEA [rsi|QWORD - 8] size: QWORD  <||@
  Comment 2261 1790 CMP (x: r8|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 2264 1792 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B168 -> B171 falseDestination: B168 -> B170  <||@
  Comment 2270 block B170 loop 5 depth 1 header:58|LoopBegin  <||@
  Comment 2270 1798 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2270 1800 xmm0|V128_WORD = H [r10|QWORD[.] + r8|QWORD * 2] nZ: XMM oh: VMOVDQU  <||@
  Comment 2276 1802 J (address: [rdx|QWORD[.] + r8|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU  <||@
  Comment 2282 1804 r11|QWORD = LEA [r8|QWORD + 8] size: QWORD  <||@
  Comment 2286 1806 r8|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 2289 1808 JUMP ~[] destination: B170 -> B171  <||@
  Comment 2289 block B171 loop 5 depth 1 header:58|LoopBegin  <||@
  Comment 2289 1810 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2289 1812 r11|QWORD = LEA [rsi|QWORD - 4] size: QWORD  <||@
  Comment 2293 1814 CMP (x: r8|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 2296 1816 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B171 -> B174 falseDestination: B171 -> B173  <||@
  Comment 2302 block B173 loop 5 depth 1 header:58|LoopBegin  <||@
  Comment 2302 1822 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2302 1824 xmm0|V64_WORD = H [r10|QWORD[.] + r8|QWORD * 2] nZ: XMM oh: VMOVQ  <||@
  Comment 2308 1826 J (address: [rdx|QWORD[.] + r8|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ  <||@
  Comment 2314 1828 r11|QWORD = LEA [r8|QWORD + 4] size: QWORD  <||@
  Comment 2318 1830 r8|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 2321 1832 JUMP ~[] destination: B173 -> B174  <||@
  Comment 2321 block B174 loop 5 depth 1 header:58|LoopBegin  <||@
  Comment 2321 1834 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2321 1836 r11|QWORD = LEA [rsi|QWORD - 2] size: QWORD  <||@
  Comment 2325 1838 CMP (x: r8|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 2328 1840 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B174 -> B177 falseDestination: B174 -> B176  <||@
  Comment 2334 block B176 loop 5 depth 1 header:58|LoopBegin  <||@
  Comment 2334 1846 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2334 1848 xmm0|V32_WORD = H [r10|QWORD[.] + r8|QWORD * 2] nZ: XMM oh: VMOVD  <||@
  Comment 2340 1850 J (address: [rdx|QWORD[.] + r8|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD  <||@
  Comment 2346 1852 r11|QWORD = LEA [r8|QWORD + 2] size: QWORD  <||@
  Comment 2350 1854 r8|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 2353 1856 JUMP ~[] destination: B176 -> B177  <||@
  Comment 2353 block B177 loop 5 depth 1 header:58|LoopBegin  <||@
  Comment 2353 1858 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2353 1860 r11|QWORD = DEC rsi|QWORD size: QWORD  <||@
  Comment 2359 1862 CMP (x: r8|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 2362 1864 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B177 -> B180 falseDestination: B177 -> B179  <||@
  Comment 2368 block B179 loop 5 depth 1 header:58|LoopBegin  <||@
  Comment 2368 1870 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2368 1872 r10|DWORD = MOVSX [r10|QWORD[.] + r8|QWORD * 2] size: DWORD  <||@
  Comment 2373 1874 MOV (x: [rdx|QWORD[.] + r8|QWORD * 2], y: r10|DWORD) size: WORD  <||@
  Comment 2378 1876 JUMP ~[] destination: B179 -> B180  <||@
  Comment 2378 block B180 loop 5 depth 1 header:58|LoopBegin  <||@
  Comment 2378 1878 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2378 1880 rdx|QWORD = MOVSXD r13|DWORD size: QWORD  <||@
  Comment 2381 1882 CMP (x: rdx|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 2384 1884 BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B180 -> B181 falseDestination: B180 -> B200  <||@
  Comment 2390 block B200 loop 5 depth 1 header:58|LoopBegin  <||@
  Comment 2390 2042 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2390 2034 r9|DWORD = MOVE stack:80|DWORD moveKind: DWORD  <||@
  Comment 2395 2036 rsi|DWORD = MOVE stack:60|DWORD moveKind: DWORD  <||@
  Comment 2399 2038 r11|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD  <||@
  Comment 2404 2044 rdx|QWORD = MOVE input: long[4682670080|0x1171be000]  <||@
  Comment 2414 2046 r10|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@1d28dd80 encoding: base: 0 shift: 3  <||@
  Comment 2421 2048 MOV (x: [r11|QWORD[.] + 16], y: r10|DWORD[.]) size: DWORD  <||@
  Comment 2425 2050 r14|QWORD[*] = SHR r11|QWORD[.] y: 9 size: QWORD  <||@
  Comment 2432 2052 MOVB (x: [r14|QWORD[*] + rdx|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 2436 2054 MOV (x: [r11|QWORD[.] + 12], y: r9|DWORD) size: DWORD  <||@
  Comment 2440 2056 MOV [rax|QWORD[.] + rsi|DWORD * 2 + 16] y: 32 size: WORD  <||@
  Comment 2447 2058 r10|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 2450 2060 r13|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 2455 2062 r14|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 2458 2064 rsi|DWORD = MOVE stack:56|DWORD moveKind: DWORD  <||@
  Comment 2462 2066 r11|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 2465 2068 JUMP ~[] destination: B200 -> B145  <||@
  Comment 2470 block B181 loop 5 depth 1 header:58|LoopBegin  <||@
  Comment 2470 1886 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2470 1888 r10|QWORD[.] = LEA [rax|QWORD[.] + rsi|QWORD * 2 + 16] size: QWORD  <||@
  Comment 2475 1890 rdx|QWORD = SUB (x: rdx|QWORD, ~y: rsi|QWORD) size: QWORD  <||@
  Comment 2478 1892 rsi|QWORD = LEA [rdx|QWORD - 16] size: QWORD  <||@
  Comment 2482 1894 TEST (x: rsi|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 2485 1896 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B181 -> B182 falseDestination: B181 -> B183  <||@
  Comment 2491 block B182 loop 5 depth 1 header:58|LoopBegin  <||@
  Comment 2491 1898 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2491 1900 r11|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 2498 1902 JUMP ~[] destination: B182 -> B186  <||@
  Comment 2498 block B186 loop 5 depth 1 header:58|LoopBegin  <||@
  Comment 2498 1926 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2498 1928 rsi|QWORD = LEA [rdx|QWORD - 8] size: QWORD  <||@
  Comment 2502 1930 CMP (x: r11|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 2505 1932 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B186 -> B189 falseDestination: B186 -> B188  <||@
  Comment 2511 block B188 loop 5 depth 1 header:58|LoopBegin  <||@
  Comment 2511 1938 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2511 1940 xmm0|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0>  <||@
  Comment 2515 1942 J (address: [r10|QWORD[.] + r11|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU  <||@
  Comment 2521 1944 rsi|QWORD = LEA [r11|QWORD + 8] size: QWORD  <||@
  Comment 2525 1946 r11|QWORD = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 2528 1948 JUMP ~[] destination: B188 -> B189  <||@
  Comment 2528 block B189 loop 5 depth 1 header:58|LoopBegin  <||@
  Comment 2528 1950 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2528 1952 rsi|QWORD = LEA [rdx|QWORD - 4] size: QWORD  <||@
  Comment 2532 1954 CMP (x: r11|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 2535 1956 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B189 -> B192 falseDestination: B189 -> B191  <||@
  Comment 2541 block B191 loop 5 depth 1 header:58|LoopBegin  <||@
  Comment 2541 1962 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2541 1964 xmm0|V64_WORD = L oc: SIMD<0,0,0,0>  <||@
  Comment 2545 1966 J (address: [r10|QWORD[.] + r11|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ  <||@
  Comment 2551 1968 rsi|QWORD = LEA [r11|QWORD + 4] size: QWORD  <||@
  Comment 2555 1970 r11|QWORD = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 2558 1972 JUMP ~[] destination: B191 -> B192  <||@
  Comment 2558 block B192 loop 5 depth 1 header:58|LoopBegin  <||@
  Comment 2558 1974 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2558 1976 rsi|QWORD = LEA [rdx|QWORD - 2] size: QWORD  <||@
  Comment 2562 1978 CMP (x: r11|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 2565 1980 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B192 -> B195 falseDestination: B192 -> B194  <||@
  Comment 2571 block B194 loop 5 depth 1 header:58|LoopBegin  <||@
  Comment 2571 1986 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2571 1988 xmm0|V32_WORD = L oc: SIMD<0,0>  <||@
  Comment 2575 1990 J (address: [r10|QWORD[.] + r11|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD  <||@
  Comment 2581 1992 rsi|QWORD = LEA [r11|QWORD + 2] size: QWORD  <||@
  Comment 2585 1994 r11|QWORD = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 2588 1996 JUMP ~[] destination: B194 -> B195  <||@
  Comment 2588 block B195 loop 5 depth 1 header:58|LoopBegin  <||@
  Comment 2588 1998 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2588 2000 rdx|QWORD = DEC rdx|QWORD size: QWORD  <||@
  Comment 2591 2002 CMP (x: r11|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 2594 2004 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B195 -> B200 falseDestination: B195 -> B197  <||@
  Comment 2600 block B197 loop 5 depth 1 header:58|LoopBegin  <||@
  Comment 2600 2016 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2600 2018 MOV (x: [r10|QWORD[.] + r11|QWORD * 2], y: r12|ILLEGAL) size: WORD  <||@
  Comment 2605 2026 JUMP ~[] destination: B197 -> B200  <||@
  Comment 2610 block B166 loop 6 depth 2 outer 5 header:1980|LoopBegin  <||@
  Comment 2610 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 2624 1772 xmm0|V256_WORD = H [r10|QWORD[.] + r8|QWORD * 2] nZ: YMM oh: VMOVDQU  <||@
  Comment 2630 1774 J (address: [rdx|QWORD[.] + r8|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU  <||@
  Comment 2636 1776 r8|QWORD = LEA [r8|QWORD + 16] size: QWORD  <||@
  Comment 2640 1778 CMP (x: r8|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 2643 1780 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B166 -> B168 falseDestination: B166 -> B166  <||@
  Comment 2650 block B183 loop 5 depth 1 header:58|LoopBegin  <||@
  Comment 2650 1904 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2650 1906 xmm0|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>  <||@
  Comment 2654 1908 r11|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 2661 1910 JUMP ~[] destination: B183 -> B184  <||@
  Comment 2661 block B184 loop 7 depth 2 outer 5 header:2044|LoopBegin  <||@
  Comment 2661 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 2672 1914 J (address: [r10|QWORD[.] + r11|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU  <||@
  Comment 2678 1916 r11|QWORD = LEA [r11|QWORD + 16] size: QWORD  <||@
  Comment 2682 1918 CMP (x: r11|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 2685 1920 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B184 -> B186 falseDestination: B184 -> B184  <||@
  Comment 2692 block B160 loop 5 depth 1 header:58|LoopBegin  <||@
  Comment 2692 1708 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2692 1696 stack:36|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 2696 1698 stack:80|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 2701 1700 stack:60|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 2706 1702 stack:120|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 2711 1704 stack:124|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 2716 1710 rcx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>}  <||@
  Comment 2716 {meta{HotSpotType<[C, resolved>}}  <||@
  Comment 2726 1712 rsi|QWORD = MOVE rcx|QWORD moveKind: QWORD  <||@
  Comment 2729 1714 rax|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 2731 1718 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 2736 1720 r14|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 2739 1722 r13|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 2742 1724 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:80]  <||@
  Comment 2742 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 2747 [stack:8, stack:16]at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2926) [bci: 80, duringCall: false, rethrow: false]
              |0  |1  |2                   |3  |4               |5               
     locals:  |-  |-  |stack:112|QWORD[.]  |-  |stack:56|DWORD  |stack:124|DWORD   <||@
  Comment 2748 1726 JUMP ~[] destination: B160 -> B161  <||@
  Comment 2753 block B204 null  <||@
  Comment 2753 2090 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2753 2092 stack:88|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 2758 2094 r14|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 2761 2096 r13|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 2764 2098 JUMP ~[] destination: B204 -> B206  <||@
  Comment 2769 block B244 null  <||@
  Comment 2769 2468 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2769 2470 xmm0|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>  <||@
  Comment 2773 2472 r10|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 2780 2474 JUMP ~[] destination: B244 -> B245  <||@
  Comment 2780 block B245 loop 9 depth 1 header:2170|LoopBegin  <||@
  Comment 2780 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 2784 2478 J (address: [rcx|QWORD[.] + r10|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU  <||@
  Comment 2790 2480 r10|QWORD = LEA [r10|QWORD + 16] size: QWORD  <||@
  Comment 2794 2482 CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 2797 2484 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B245 -> B247 falseDestination: B245 -> B245  <||@
  Comment 2804 block B227 loop 8 depth 1 header:2107|LoopBegin  <||@
  Comment 2804 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 2816 2336 xmm0|V256_WORD = H [rcx|QWORD[.] + r11|QWORD * 2] nZ: YMM oh: VMOVDQU  <||@
  Comment 2822 2338 J (address: [rdx|QWORD[.] + r11|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU  <||@
  Comment 2828 2340 r11|QWORD = LEA [r11|QWORD + 16] size: QWORD  <||@
  Comment 2832 2342 CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 2835 2344 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B227 -> B229 falseDestination: B227 -> B227  <||@
  Comment 2842 block B207 null  <||@
  Comment 2842 2118 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2842 2120 TEST (x: r14|DWORD, y: r14|DWORD) size: DWORD  <||@
  Comment 2845 2122 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B207 -> B208 falseDestination: B207 -> B209  <||@
  Comment 2851 block B209 null  <||@
  Comment 2851 2132 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2851 2134 rax|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 2855 2136 rsi|QWORD = LEA [rax|QWORD + 24] size: QWORD  <||@
  Comment 2859 2138 CMP (x: rsi|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 2863 2140 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B209 -> B210 falseDestination: B209 -> B211  <||@
  Comment 2869 block B211 null  <||@
  Comment 2869 2160 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2869 2162 MOV (x: [r15|QWORD + 96], y: rsi|QWORD) size: QWORD  <||@
  Comment 2873 2164 AMD64PREFETCH ~[rax|QWORD + 216] instr: 0  <||@
  Comment 2880 2166 rax|QWORD[*] = MOVE rax|QWORD moveKind: QWORD  <||@
  Comment 2880 2168 JUMP ~[] destination: B211 -> B212  <||@
  Comment 2880 block B212 null  <||@
  Comment 2880 2170 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2880 2172 rsi|QWORD[.] = MOVE rax|QWORD[*] moveKind: QWORD  <||@
  Comment 2883 2174 rdx|QWORD = MOV [r10|QWORD + 168] size: QWORD  <||@
  Comment 2890 2176 MOV (x: [rax|QWORD[*]], y: rdx|QWORD) size: QWORD  <||@
  Comment 2893 2178 MOV [rax|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}  <||@
  Comment 2893 {meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}}  <||@
  Comment 2900 2180 MOV [rax|QWORD[*] + 12] y: -559030611 size: DWORD c: NarrowOop[char[0]{}]  <||@
  Comment 2900 {NarrowOop[char[0]{}]}  <||@
  Comment 2907 2182 MOV (x: [rax|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 2911 2184 rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 2914 2186 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 2923 12  <||@
  Comment 2933 block B221 null  <||@
  Comment 2933 2278 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2933 2274 stack:72|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 2938 2280 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>}  <||@
  Comment 2938 {meta{HotSpotType<[C, resolved>}}  <||@
  Comment 2948 2282 rdx|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 2951 2284 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 2956 2286 r13|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 2959 2288 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:100]  <||@
  Comment 2959 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 2964 [stack:40, stack:56]at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2927) [bci: 100, duringCall: false, rethrow: false]
              |0  |1  |2                  |3  |4  |5 
     locals:  |-  |-  |stack:88|QWORD[.]  |-  |-  |-   <||@
  Comment 2965 2290 JUMP ~[] destination: B221 -> B222  <||@
  Comment 2970 block B84 null  <||@
  Comment 2970 912 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2970 914 r14|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 2973 916 r10|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 2978 918 r13|QWORD = MOVE rbx|QWORD moveKind: QWORD  <||@
  Comment 2981 920 stack:36|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 2986 922 rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 2990 924 rdx|QWORD = LEA [rsi|QWORD + 24] size: QWORD  <||@
  Comment 2994 926 CMP (x: rdx|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 2998 928 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B84 -> B85 falseDestination: B84 -> B86  <||@
  Comment 3004 block B86 null  <||@
  Comment 3004 954 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3004 956 MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD  <||@
  Comment 3008 958 AMD64PREFETCH ~[rsi|QWORD + 216] instr: 0  <||@
  Comment 3015 960 rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 3015 962 stack:96|QWORD = MOVE r8|QWORD moveKind: QWORD  <||@
  Comment 3020 964 r10|DWORD = MOVE stack:76|DWORD moveKind: DWORD  <||@
  Comment 3025 966 JUMP ~[] destination: B86 -> B87  <||@
  Comment 3025 block B87 null  <||@
  Comment 3025 968 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 3025 970 rdi|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD  <||@
  Comment 3028 972 stack:104|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD  <||@
  Comment 3033 974 rax|QWORD = MOV [r13|QWORD + 168] size: QWORD  <||@
  Comment 3040 976 MOV (x: [rsi|QWORD[*]], y: rax|QWORD) size: QWORD  <||@
  Comment 3043 978 MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed}  <||@
  Comment 3043 {meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed}}  <||@
  Comment 3050 980 MOV (x: [rsi|QWORD[*] + 12], y: r10|DWORD) size: DWORD  <||@
  Comment 3054 982 MOV (x: [rsi|QWORD[*] + 16], y: r9|DWORD[.]) size: DWORD  <||@
  Comment 3058 984 rsi|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD  <||@
  Comment 3061 986 rdx|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 3064 988 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractStringBuilder.newCapacity(int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:17, 21, 2, 69]  <||@
  Comment 3064 9  <||@
  Comment 3071 {HotSpotMethod<AbstractStringBuilder.newCapacity(int)>}  <||@
  Comment 3076 [stack:24, stack:56, stack:96]at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17, duringCall: true, rethrow: false]
              |0                   |1                 
     locals:  |-                   |-                 
     stack:   |stack:104|QWORD[.]  |stack:72|QWORD[.] 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21, duringCall: true, rethrow: false]
              |0                   |1                  |2              
     locals:  |stack:104|QWORD[.]  |stack:32|QWORD[.]  |stack:40|DWORD 
  at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2, duringCall: true, rethrow: false]
              |0                   |1 
     locals:  |stack:104|QWORD[.]  |- 
  at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2924) [bci: 69, duringCall: true, rethrow: false]
              |0  |1  |2                   |3               |4               |5 
     locals:  |-  |-  |stack:104|QWORD[.]  |stack:52|DWORD  |stack:56|DWORD  |-   <||@
  Comment 3077 990 r13|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 3080 992 rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 3085 994 r14|DWORD[.] = MOV [rdx|QWORD[.] + 12] size: DWORD  <||@
  Comment 3089 996 r10|DWORD = MOVE stack:40|DWORD moveKind: DWORD  <||@
  Comment 3094 998 CMP (x: r10|DWORD, y: [r14|DWORD[.] * 8 + 12]) size: DWORD state [bci:20, 21, 2, 69]  <||@
  Comment 3094 [rdx:0, r14:0, stack:24, stack:56, stack:96]at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20, duringCall: false, rethrow: false]
              |0                   |1                  |2         
     locals:  |-                   |-                  |          
     stack:   |stack:104|QWORD[.]  |stack:72|QWORD[.]  |r13|DWORD 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21, duringCall: true, rethrow: false]
              |0                   |1             |2         
     locals:  |stack:104|QWORD[.]  |rdx|QWORD[.]  |r10|DWORD 
  at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2, duringCall: true, rethrow: false]
              |0                   |1 
     locals:  |stack:104|QWORD[.]  |- 
  at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2924) [bci: 69, duringCall: true, rethrow: false]
              |0  |1  |2                   |3               |4               |5 
     locals:  |-  |-  |stack:104|QWORD[.]  |stack:52|DWORD  |stack:56|DWORD  |-   <||@
  Comment 3094 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 3102 1000 BRANCH trueDestinationProbability: 0.0 condition: |>| trueDestination: B87 -> B88 falseDestination: B87 -> B89  <||@
  Comment 3108 block B89 null  <||@
  Comment 3108 1012 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3108 1014 TEST (x: r13|DWORD, y: r13|DWORD) size: DWORD  <||@
  Comment 3111 1016 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B89 -> B90 falseDestination: B89 -> B92  <||@
  Comment 3117 block B92 null  <||@
  Comment 3117 1036 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3117 1038 r11|QWORD = MOVE input: long[4682670080|0x1171be000]  <||@
  Comment 3127 1040 rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 3131 1042 rcx|QWORD = MOV [r15|QWORD + 112] size: QWORD  <||@
  Comment 3135 1044 CMP r13|DWORD y: 16777215 size: DWORD  <||@
  Comment 3142 1046 BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B92 -> B93 falseDestination: B92 -> B97  <||@
  Comment 3148 block B93 null  <||@
  Comment 3148 1048 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3148 1050 r8|DWORD = SHL r13|DWORD size: DWORD  <||@
  Comment 3154 1052 r8|DWORD = LEA [r8|DWORD + 23] size: DWORD  <||@
  Comment 3158 1054 r8|DWORD = AND r8|DWORD y: -8 size: DWORD  <||@
  Comment 3162 1056 r8|QWORD = MOVSXD r8|DWORD size: QWORD  <||@
  Comment 3165 1058 r9|QWORD = ADD (x: r8|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 3171 1060 CMP (x: r9|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 3174 1062 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B93 -> B97 falseDestination: B93 -> B95  <||@
  Comment 3180 block B95 null  <||@
  Comment 3180 1070 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3180 1072 MOV (x: [r15|QWORD + 96], y: r9|QWORD) size: QWORD  <||@
  Comment 3184 1074 AMD64PREFETCH ~[r8|QWORD + rsi|QWORD * 1 + 192] instr: 0  <||@
  Comment 3193 1076 AMD64PREFETCH ~[r8|QWORD + rsi|QWORD * 1 + 256] instr: 0  <||@
  Comment 3202 1078 AMD64PREFETCH ~[r8|QWORD + rsi|QWORD * 1 + 320] instr: 0  <||@
  Comment 3211 1080 AMD64PREFETCH ~[r8|QWORD + rsi|QWORD * 1 + 384] instr: 0  <||@
  Comment 3220 1082 MOV (x: [rsi|QWORD + 12], y: r13|DWORD) size: DWORD  <||@
  Comment 3224 1084 MOV [rsi|QWORD] y: 1 size: QWORD  <||@
  Comment 3231 1086 MOV [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed}  <||@
  Comment 3231 {meta{HotSpotType<[C, resolved>;compressed}}  <||@
  Comment 3238 1088 rsi|QWORD[.] = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 3238 1090 rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 3241 1092 stack:76|DWORD[.] = MOVE r14|DWORD[.] moveKind: DWORD  <||@
  Comment 3246 1094 r14|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 3249 1098 JUMP ~[] destination: B95 -> B98  <||@
  Comment 3249 block B98 null  <||@
  Comment 3249 1122 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 3249 1096 r11|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 3254 1124 CMP (x: r13|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 3257 1126 rdi|DWORD = CMOVE (falseValue: r13|DWORD, ~trueValue: r11|DWORD) condition: >  <||@
  Comment 3264 1128 rdi|QWORD = MOVSXD rdi|DWORD size: QWORD  <||@
  Comment 3267 1130 CMP rdi|QWORD y: 1 size: QWORD  <||@
  Comment 3271 1132 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B98 -> B117 falseDestination: B98 -> B100  <||@
  Comment 3277 block B100 null  <||@
  Comment 3277 1138 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3277 1140 r10|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 3282 1142 rsi|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD  <||@
  Comment 3286 1144 rdx|QWORD[.] = LEA [r10|QWORD[.] + 16] size: QWORD  <||@
  Comment 3290 1146 r10|QWORD = LEA [rdi|QWORD - 16] size: QWORD  <||@
  Comment 3294 1148 TEST (x: r10|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 3297 1154 r11|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 3304 1150 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B100 -> B105 falseDestination: B100 -> B103  <||@
  Comment 3310 block B105 null  <||@
  Comment 3310 1180 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 3310 1182 r10|QWORD = LEA [rdi|QWORD - 8] size: QWORD  <||@
  Comment 3314 1184 CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 3317 1186 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B105 -> B108 falseDestination: B105 -> B107  <||@
  Comment 3323 block B107 null  <||@
  Comment 3323 1192 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3323 1194 xmm0|V128_WORD = H [rdx|QWORD[.] + r11|QWORD * 2] nZ: XMM oh: VMOVDQU  <||@
  Comment 3329 1196 J (address: [rsi|QWORD[.] + r11|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU  <||@
  Comment 3335 1198 r10|QWORD = LEA [r11|QWORD + 8] size: QWORD  <||@
  Comment 3339 1200 r11|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 3342 1202 JUMP ~[] destination: B107 -> B108  <||@
  Comment 3342 block B108 null  <||@
  Comment 3342 1204 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 3342 1206 r10|QWORD = LEA [rdi|QWORD - 4] size: QWORD  <||@
  Comment 3346 1208 CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 3349 1210 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B108 -> B111 falseDestination: B108 -> B110  <||@
  Comment 3355 block B110 null  <||@
  Comment 3355 1216 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3355 1218 xmm0|V64_WORD = H [rdx|QWORD[.] + r11|QWORD * 2] nZ: XMM oh: VMOVQ  <||@
  Comment 3361 1220 J (address: [rsi|QWORD[.] + r11|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ  <||@
  Comment 3367 1222 r10|QWORD = LEA [r11|QWORD + 4] size: QWORD  <||@
  Comment 3371 1224 r11|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 3374 1226 JUMP ~[] destination: B110 -> B111  <||@
  Comment 3374 block B111 null  <||@
  Comment 3374 1228 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 3374 1230 r10|QWORD = LEA [rdi|QWORD - 2] size: QWORD  <||@
  Comment 3378 1232 CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 3381 1234 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B111 -> B114 falseDestination: B111 -> B113  <||@
  Comment 3387 block B113 null  <||@
  Comment 3387 1240 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3387 1242 xmm0|V32_WORD = H [rdx|QWORD[.] + r11|QWORD * 2] nZ: XMM oh: VMOVD  <||@
  Comment 3393 1244 J (address: [rsi|QWORD[.] + r11|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD  <||@
  Comment 3399 1246 r10|QWORD = LEA [r11|QWORD + 2] size: QWORD  <||@
  Comment 3403 1248 r11|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 3406 1250 JUMP ~[] destination: B113 -> B114  <||@
  Comment 3406 block B114 null  <||@
  Comment 3406 1252 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 3406 1254 r10|QWORD = DEC rdi|QWORD size: QWORD  <||@
  Comment 3412 1256 CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 3415 1258 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B114 -> B117 falseDestination: B114 -> B116  <||@
  Comment 3421 block B116 null  <||@
  Comment 3421 1264 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3421 1266 rdx|DWORD = MOVSX [rdx|QWORD[.] + r11|QWORD * 2] size: DWORD  <||@
  Comment 3426 1268 MOV (x: [rsi|QWORD[.] + r11|QWORD * 2], y: rdx|DWORD) size: WORD  <||@
  Comment 3431 1270 JUMP ~[] destination: B116 -> B117  <||@
  Comment 3431 block B117 null  <||@
  Comment 3431 1272 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3431 1274 rsi|QWORD = MOVSXD r13|DWORD size: QWORD  <||@
  Comment 3434 1276 CMP (x: rsi|QWORD, y: rdi|QWORD) size: QWORD  <||@
  Comment 3437 1278 BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B117 -> B118 falseDestination: B117 -> B137  <||@
  Comment 3443 block B137 null  <||@
  Comment 3443 1424 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3443 1420 rdi|QWORD[.] = MOVE stack:104|QWORD[.] moveKind: QWORD  <||@
  Comment 3448 1426 rsi|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@1d28dd80 encoding: base: 0 shift: 3  <||@
  Comment 3455 1428 MOV (x: [rdi|QWORD[.] + 16], y: rsi|DWORD[.]) size: DWORD  <||@
  Comment 3458 1430 rsi|QWORD[*] = SHR rdi|QWORD[.] y: 9 size: QWORD  <||@
  Comment 3465 1432 MOVB (x: [rsi|QWORD[*] + r14|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 3469 1434 r10|DWORD = MOV [rdi|QWORD[.] + 12] size: DWORD  <||@
  Comment 3473 1436 TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 3476 1438 BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B137 -> B141 falseDestination: B137 -> B139  <||@
  Comment 3482 block B139 null  <||@
  Comment 3482 1444 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3482 1446 r13|DWORD = SUB (x: r13|DWORD, ~y: stack:40|DWORD) size: DWORD  <||@
  Comment 3487 1448 CMP (x: r10|DWORD, y: r13|DWORD) size: DWORD  <||@
  Comment 3490 1450 BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B139 -> B141 falseDestination: B139 -> B142  <||@
  Comment 3496 block B142 null  <||@
  Comment 3496 1464 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3496 1466 r11|DWORD[.] = MOVE stack:76|DWORD[.] moveKind: DWORD  <||@
  Comment 3501 1468 r14|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1d28dd80 encoding: base: 0 shift: 3  <||@
  Comment 3508 1470 r14|QWORD[*] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 3508 1472 rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 3511 1474 rdx|QWORD = MOVSXD r10|DWORD size: QWORD  <||@
  Comment 3514 1476 rdi|QWORD = LEA [r14|QWORD[*] + 16] size: QWORD  <||@
  Comment 3518 1478 rsi|QWORD = LEA [rsi|QWORD[*] + rdx|QWORD * 2 + 16] size: QWORD  <||@
  Comment 3523 1480 rdx|QWORD = MOVE stack:96|QWORD moveKind: QWORD  <||@
  Comment 3528 1482 stack:72|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 3533 1484 stack:36|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 3538 1486 - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charArraycopy(Word,Word,Word)void@0x106812d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL  <||@
  Comment 3538 {Field[name=StubRoutines::_jshort_arraycopy, type=address, offset=0, address=0x105a7dc78, value=0x106812d40]:0x106812d40}  <||@
  Comment 3544 1488 r10|DWORD = ADD (x: stack:40|DWORD, y: stack:36|DWORD) size: DWORD  <||@
  Comment 3554 1490 rdi|QWORD[.] = MOVE stack:104|QWORD[.] moveKind: QWORD  <||@
  Comment 3559 1492 MOV (x: [rdi|QWORD[.] + 12], y: r10|DWORD) size: DWORD  <||@
  Comment 3563 1494 r9|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 3568 1496 CMP (x: r9|DWORD, y: stack:48|DWORD) size: DWORD  <||@
  Comment 3573 1498 BRANCH trueDestinationProbability: 0.18579515065073993 condition: = trueDestination: B142 -> B143 falseDestination: B142 -> B205  <||@
  Comment 3579 block B205 null  <||@
  Comment 3579 2100 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3579 2102 stack:88|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD  <||@
  Comment 3584 2104 r14|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 3587 2106 r13|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 3592 2108 JUMP ~[] destination: B205 -> B206  <||@
  Comment 3597 block B118 null  <||@
  Comment 3597 1280 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3597 1282 rdx|QWORD[.] = LEA [rax|QWORD[.] + rdi|QWORD * 2 + 16] size: QWORD  <||@
  Comment 3602 1284 rsi|QWORD = SUB (x: rsi|QWORD, ~y: rdi|QWORD) size: QWORD  <||@
  Comment 3605 1286 rdi|QWORD = LEA [rsi|QWORD - 16] size: QWORD  <||@
  Comment 3609 1288 TEST (x: rdi|QWORD, y: rdi|QWORD) size: QWORD  <||@
  Comment 3612 1290 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B118 -> B119 falseDestination: B118 -> B120  <||@
  Comment 3618 block B119 null  <||@
  Comment 3618 1292 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3618 1294 r10|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 3625 1296 JUMP ~[] destination: B119 -> B123  <||@
  Comment 3625 block B123 null  <||@
  Comment 3625 1320 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 3625 1322 rdi|QWORD = LEA [rsi|QWORD - 8] size: QWORD  <||@
  Comment 3629 1324 CMP (x: r10|QWORD, y: rdi|QWORD) size: QWORD  <||@
  Comment 3632 1326 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B123 -> B126 falseDestination: B123 -> B125  <||@
  Comment 3638 block B125 null  <||@
  Comment 3638 1332 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3638 1334 xmm0|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0>  <||@
  Comment 3642 1336 J (address: [rdx|QWORD[.] + r10|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU  <||@
  Comment 3648 1338 rdi|QWORD = LEA [r10|QWORD + 8] size: QWORD  <||@
  Comment 3652 1340 r10|QWORD = MOVE rdi|QWORD moveKind: QWORD  <||@
  Comment 3655 1342 JUMP ~[] destination: B125 -> B126  <||@
  Comment 3655 block B126 null  <||@
  Comment 3655 1344 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 3655 1346 rdi|QWORD = LEA [rsi|QWORD - 4] size: QWORD  <||@
  Comment 3659 1348 CMP (x: r10|QWORD, y: rdi|QWORD) size: QWORD  <||@
  Comment 3662 1350 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B126 -> B129 falseDestination: B126 -> B128  <||@
  Comment 3668 block B128 null  <||@
  Comment 3668 1356 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3668 1358 xmm0|V64_WORD = L oc: SIMD<0,0,0,0>  <||@
  Comment 3672 1360 J (address: [rdx|QWORD[.] + r10|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ  <||@
  Comment 3678 1362 rdi|QWORD = LEA [r10|QWORD + 4] size: QWORD  <||@
  Comment 3682 1364 r10|QWORD = MOVE rdi|QWORD moveKind: QWORD  <||@
  Comment 3685 1366 JUMP ~[] destination: B128 -> B129  <||@
  Comment 3685 block B129 null  <||@
  Comment 3685 1368 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 3685 1370 rdi|QWORD = LEA [rsi|QWORD - 2] size: QWORD  <||@
  Comment 3689 1372 CMP (x: r10|QWORD, y: rdi|QWORD) size: QWORD  <||@
  Comment 3692 1374 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B129 -> B132 falseDestination: B129 -> B131  <||@
  Comment 3698 block B131 null  <||@
  Comment 3698 1380 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3698 1382 xmm0|V32_WORD = L oc: SIMD<0,0>  <||@
  Comment 3702 1384 J (address: [rdx|QWORD[.] + r10|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD  <||@
  Comment 3708 1386 rdi|QWORD = LEA [r10|QWORD + 2] size: QWORD  <||@
  Comment 3712 1388 r10|QWORD = MOVE rdi|QWORD moveKind: QWORD  <||@
  Comment 3715 1390 JUMP ~[] destination: B131 -> B132  <||@
  Comment 3715 block B132 null  <||@
  Comment 3715 1392 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 3715 1394 rsi|QWORD = DEC rsi|QWORD size: QWORD  <||@
  Comment 3718 1396 CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 3721 1398 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B132 -> B137 falseDestination: B132 -> B134  <||@
  Comment 3727 block B134 null  <||@
  Comment 3727 1406 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3727 1408 MOV (x: [rdx|QWORD[.] + r10|QWORD * 2], y: r12|ILLEGAL) size: WORD  <||@
  Comment 3732 1412 JUMP ~[] destination: B134 -> B137  <||@
  Comment 3737 block B143 null  <||@
  Comment 3737 1500 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3737 1502 r14|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD  <||@
  Comment 3740 1504 r13|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 3745 1506 rcx|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 3748 1508 JUMP ~[] destination: B143 -> B144  <||@
  Comment 3753 block B10 null  <||@
  Comment 3753 144 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3753 146 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 3753 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 3763 148 rdx|DWORD = MOVE input: int[8|0x8]  <||@
  Comment 3768 150 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 3773 152 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0]  <||@
  Comment 3773 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 3778 [r13:0, stack:92, stack:96]at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2917) [bci: 0, duringCall: false, rethrow: false]
              |0             |1                  |2  |3  |4  |5 
     locals:  |r13|QWORD[.]  |stack:32|QWORD[.]  |-  |-  |-  |-   <||@
  Comment 3779 154 r13|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 3782 156 rsi|DWORD = MOVE stack:56|DWORD moveKind: DWORD  <||@
  Comment 3786 158 rbx|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 3790 160 rcx|DWORD = MOVE stack:48|DWORD moveKind: DWORD  <||@
  Comment 3794 162 r9|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 3799 164 r10|DWORD = MOVE stack:40|DWORD moveKind: DWORD  <||@
  Comment 3804 166 r14|DWORD[.] = MOVE stack:36|DWORD[.] moveKind: DWORD  <||@
  Comment 3809 168 rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 3814 170 JUMP ~[] destination: B10 -> B12  <||@
  Comment 3819 block B79 null  <||@
  Comment 3819 836 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3819 838 r13|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>}  <||@
  Comment 3819 {meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>}}  <||@
  Comment 3829 840 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 3829 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 3839 842 rdx|DWORD = MOVE input: int[2|0x2]  <||@
  Comment 3844 844 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 3849 846 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:61, 35, 2, 69]  <||@
  Comment 3849 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 3854 [stack:56, stack:68]at java.lang.String.getChars(String.java:827) [bci: 61, duringCall: false, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |- 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35, duringCall: true, rethrow: false]
              |0                                                                      |1  |2              
     locals:  |vobject:StringBuilder:0{count=stack:76|DWORD,value=stack:72|QWORD[.]}  |-  |stack:40|DWORD 
  at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2, duringCall: true, rethrow: false]
              |0                                                                      |1 
     locals:  |vobject:StringBuilder:0{count=stack:76|DWORD,value=stack:72|QWORD[.]}  |- 
  at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2924) [bci: 69, duringCall: true, rethrow: false]
              |0  |1  |2                                                                      |3               |4               |5 
     locals:  |-  |-  |vobject:StringBuilder:0{count=stack:76|DWORD,value=stack:72|QWORD[.]}  |stack:52|DWORD  |stack:56|DWORD  |-   <||@
  Comment 3855 848 rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 3858 856 JUMP ~[] destination: B79 -> B81  <||@
  Comment 3863 block B262 null  <||@
  Comment 3863 2598 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3863 2600 r13|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 3866 2602 r10|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>}  <||@
  Comment 3866 {meta{HotSpotType<Ljava/lang/String;, resolved>}}  <||@
  Comment 3876 2604 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 3876 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 3886 2606 rdx|DWORD = MOVE input: int[2|0x2]  <||@
  Comment 3891 2608 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 3896 2610 r14|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 3899 2612 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:100]  <||@
  Comment 3899 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 3904 [r13:0, stack:40]at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2927) [bci: 100, duringCall: false, rethrow: false]
              |0  |1  |2                  |3  |4  |5 
     locals:  |-  |-  |stack:88|QWORD[.]  |-  |-  |-   <||@
  Comment 3905 2614 rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 3908 2616 rax|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 3911 2618 r10|QWORD = MOVE r14|QWORD moveKind: QWORD  <||@
  Comment 3914 2620 JUMP ~[] destination: B262 -> B264  <||@
  Comment 3919 block B103 loop 3 depth 1 header:2359|LoopBegin  <||@
  Comment 3919 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 3920 1166 xmm0|V256_WORD = H [rdx|QWORD[.] + r11|QWORD * 2] nZ: YMM oh: VMOVDQU  <||@
  Comment 3926 1168 J (address: [rsi|QWORD[.] + r11|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU  <||@
  Comment 3932 1170 r11|QWORD = LEA [r11|QWORD + 16] size: QWORD  <||@
  Comment 3936 1172 CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 3939 1174 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B103 -> B105 falseDestination: B103 -> B103  <||@
  Comment 3946 block B120 null  <||@
  Comment 3946 1298 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3946 1300 xmm0|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>  <||@
  Comment 3950 1302 r10|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 3957 1304 JUMP ~[] destination: B120 -> B121  <||@
  Comment 3957 block B121 loop 4 depth 1 header:2422|LoopBegin  <||@
  Comment 3957 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 3968 1308 J (address: [rdx|QWORD[.] + r10|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU  <||@
  Comment 3974 1310 r10|QWORD = LEA [r10|QWORD + 16] size: QWORD  <||@
  Comment 3978 1312 CMP (x: r10|QWORD, y: rdi|QWORD) size: QWORD  <||@
  Comment 3981 1314 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B121 -> B123 falseDestination: B121 -> B121  <||@
  Comment 3988 block B97 null  <||@
  Comment 3988 1106 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3988 1102 stack:76|DWORD[.] = MOVE r14|DWORD[.] moveKind: DWORD  <||@
  Comment 3993 1108 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>}  <||@
  Comment 3993 {meta{HotSpotType<[C, resolved>}}  <||@
  Comment 4003 1110 rdx|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 4006 1112 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 4011 1114 r14|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 4014 1116 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:20, 21, 2, 69]  <||@
  Comment 4014 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 4019 [stack:24, stack:52, stack:56, stack:96]at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20, duringCall: false, rethrow: false]
              |0                   |1                  |2         
     locals:  |-                   |-                  |          
     stack:   |stack:104|QWORD[.]  |stack:72|QWORD[.]  |r13|DWORD 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21, duringCall: true, rethrow: false]
              |0                   |1                  |2              
     locals:  |stack:104|QWORD[.]  |stack:32|QWORD[.]  |stack:40|DWORD 
  at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2, duringCall: true, rethrow: false]
              |0                   |1 
     locals:  |stack:104|QWORD[.]  |- 
  at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2924) [bci: 69, duringCall: true, rethrow: false]
              |0  |1  |2                   |3               |4               |5 
     locals:  |-  |-  |stack:104|QWORD[.]  |stack:52|DWORD  |stack:56|DWORD  |-   <||@
  Comment 4020 1120 JUMP ~[] destination: B97 -> B98  <||@
  Comment 4025 block B6 null  <||@
  Comment 4025 88 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4025 92 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 4025 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 4035 94 rdx|DWORD = MOVE input: int[8|0x8]  <||@
  Comment 4040 96 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 4045 98 r14|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 4048 100 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0]  <||@
  Comment 4048 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 4053 [r13:0, stack:92, stack:96]at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2917) [bci: 0, duringCall: false, rethrow: false]
              |0             |1                  |2  |3  |4  |5 
     locals:  |r13|QWORD[.]  |stack:32|QWORD[.]  |-  |-  |-  |-   <||@
  Comment 4054 102 rdi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 4057 104 JUMP ~[] destination: B6 -> B8  <||@
  Comment 4062 block B210 null  <||@
  Comment 4062 2142 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4062 2144 r13|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 4065 2146 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 4065 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 4075 2148 rdx|DWORD = MOVE input: int[2|0x2]  <||@
  Comment 4080 2150 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 4085 2152 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:100]  <||@
  Comment 4085 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 4090 [stack:40]at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2927) [bci: 100, duringCall: false, rethrow: false]
              |0  |1  |2                  |3  |4  |5 
     locals:  |-  |-  |stack:88|QWORD[.]  |-  |-  |-   <||@
  Comment 4091 2154 rax|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 4091 2156 r10|QWORD = MOVE r13|QWORD moveKind: QWORD  <||@
  Comment 4094 2158 JUMP ~[] destination: B210 -> B212  <||@
  Comment 4099 block B141 null  <||@
  Comment 4099 1456 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4099 1458 MOV [r15|QWORD + 668] y: -224097 size: DWORD  <||@
  Comment 4110 1460 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 4117 1462 DEOPT info [bci:26, 21, 2, 69]  <||@
  Comment 4117 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 4122 [rdi:0, stack:96]at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:127) [bci: 26, duringCall: false, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21, duringCall: true, rethrow: false]
              |0             |1                  |2              
     locals:  |rdi|QWORD[.]  |stack:32|QWORD[.]  |stack:40|DWORD 
  at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |rdi|QWORD[.]  |- 
  at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2924) [bci: 69, duringCall: true, rethrow: false]
              |0  |1  |2             |3               |4               |5 
     locals:  |-  |-  |rdi|QWORD[.]  |stack:52|DWORD  |stack:56|DWORD  |-   <||@
  Comment 4123 block B85 null  <||@
  Comment 4123 930 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4123 932 stack:96|QWORD = MOVE r8|QWORD moveKind: QWORD  <||@
  Comment 4128 934 r14|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 4131 936 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 4131 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 4141 938 rdx|DWORD = MOVE input: int[2|0x2]  <||@
  Comment 4146 940 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 4151 942 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:67]  <||@
  Comment 4151 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 4156 [stack:56, stack:68, stack:96]at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2924) [bci: 67, duringCall: false, rethrow: false]
              |0  |1                  |2                                                                      |3               |4               |5 
     locals:  |-  |stack:32|QWORD[.]  |vobject:StringBuilder:0{count=stack:76|DWORD,value=stack:72|QWORD[.]}  |stack:52|DWORD  |stack:56|DWORD  |-   <||@
  Comment 4157 944 rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 4160 946 r9|DWORD[.] = MOVE stack:60|DWORD[.] moveKind: DWORD  <||@
  Comment 4165 948 r10|DWORD = MOVE stack:76|DWORD moveKind: DWORD  <||@
  Comment 4170 950 r14|DWORD = MOVE stack:80|DWORD moveKind: DWORD  <||@
  Comment 4175 952 JUMP ~[] destination: B85 -> B87  <||@
  Comment 4180 block B77 null  <||@
  Comment 4180 800 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4180 802 MOV [r15|QWORD + 668] y: -208993 size: DWORD  <||@
  Comment 4191 804 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 4198 806 DEOPT info [bci:67]  <||@
  Comment 4198 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 4203 [r13:0, stack:96]at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2924) [bci: 67, duringCall: false, rethrow: false]
              |0  |1                  |2                                                            |3               |4               |5 
     locals:  |-  |stack:32|QWORD[.]  |vobject:StringBuilder:0{count=r10|DWORD,value=r13|QWORD[.]}  |stack:52|DWORD  |stack:56|DWORD  |-   <||@
  Comment 4204 block B90 null  <||@
  Comment 4204 1018 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4204 1020 rdi|QWORD[.] = MOVE stack:104|QWORD[.] moveKind: QWORD  <||@
  Comment 4209 1022 r11|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 4212 1024 r10|DWORD = MOVE input: int[-317537|0xfffffffffffb279f]  <||@
  Comment 4218 1026 JUMP ~[] destination: B90 -> B91  <||@
  Comment 4218 block B91 null  <||@
  Comment 4218 1028 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 4218 1030 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 4225 1032 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 4232 1034 DEOPT info [bci:20, 21, 2, 69]  <||@
  Comment 4232 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 4237 [rdi:0, stack:56, stack:96]at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20, duringCall: false, rethrow: false]
              |0             |1                  |2         
     locals:  |-             |-                  |          
     stack:   |rdi|QWORD[.]  |stack:72|QWORD[.]  |r13|DWORD 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21, duringCall: true, rethrow: false]
              |0             |1                  |2         
     locals:  |rdi|QWORD[.]  |stack:32|QWORD[.]  |r11|DWORD 
  at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |rdi|QWORD[.]  |- 
  at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2924) [bci: 69, duringCall: true, rethrow: false]
              |0  |1  |2             |3               |4               |5 
     locals:  |-  |-  |rdi|QWORD[.]  |stack:52|DWORD  |stack:56|DWORD  |-   <||@
  Comment 4238 block B202 null  <||@
  Comment 4238 2074 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4238 2076 r10|DWORD = MOVE input: int[-232219|0xfffffffffffc74e5]  <||@
  Comment 4244 2080 JUMP ~[] destination: B202 -> B203  <||@
  Comment 4244 block B203 null  <||@
  Comment 4244 2082 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 4244 1566 r11|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 4247 2084 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 4254 2086 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 4261 2088 DEOPT info [bci:80]  <||@
  Comment 4261 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 4266 [r11:0]at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2926) [bci: 80, duringCall: false, rethrow: false]
              |0  |1  |2             |3  |4          |5         
     locals:  |-  |-  |r11|QWORD[.]  |-  |rsi|DWORD  |r13|DWORD   <||@
  Comment 4267 block B88 null  <||@
  Comment 4267 1002 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4267 1004 rdi|QWORD[.] = MOVE stack:104|QWORD[.] moveKind: QWORD  <||@
  Comment 4272 1006 r11|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 4275 1008 r10|DWORD = MOVE input: int[-215571|0xfffffffffffcb5ed]  <||@
  Comment 4281 1010 JUMP ~[] destination: B88 -> B91  <||@
  Comment 4283 block B3 null  <||@
  Comment 4283 36 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4283 38 MOV [r15|QWORD + 668] y: -193803 size: DWORD  <||@
  Comment 4294 40 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 4301 42 DEOPT info [bci:0]  <||@
  Comment 4301 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 4306 [r13:0, stack:96]at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2917) [bci: 0, duringCall: false, rethrow: false]
              |0             |1                  |2  |3  |4  |5 
     locals:  |r13|QWORD[.]  |stack:32|QWORD[.]  |-  |-  |-  |-   <||@
  Comment 4307 block B23 null  <||@
  Comment 4307 308 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4307 310 r8|DWORD = MOVE input: int[-198163|0xfffffffffffcf9ed]  <||@
  Comment 4313 320 JUMP ~[] destination: B23 -> B73  <||@
  Comment 4313 block B73 null  <||@
  Comment 4313 754 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 4313 258 r11|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 4316 260 r10|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 4319 262 rbx|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 4323 264 rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 4328 756 MOV (x: [r15|QWORD + 668], y: r8|DWORD) size: DWORD  <||@
  Comment 4335 758 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 4342 760 DEOPT info [bci:47]  <||@
  Comment 4342 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 4347 [rdx:0, r10:0]at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2923) [bci: 47, duringCall: false, rethrow: false]
              |0  |1             |2                                                            |3          |4               |5         
     locals:  |-  |rdx|QWORD[.]  |vobject:StringBuilder:0{count=r11|DWORD,value=r10|QWORD[.]}  |rbx|DWORD  |stack:56|DWORD  |r11|DWORD   <||@
  Comment 4348 block B153 null  <||@
  Comment 4348 1604 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4348 1606 r10|DWORD = MOVE input: int[-230675|0xfffffffffffc7aed]  <||@
  Comment 4354 1610 JUMP ~[] destination: B153 -> B203  <||@
  Comment 4356 block B208 null  <||@
  Comment 4356 2124 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4356 2126 r10|DWORD = MOVE input: int[-234003|0xfffffffffffc6ded]  <||@
  Comment 4362 2130 JUMP ~[] destination: B208 -> B215  <||@
  Comment 4362 block B215 null  <||@
  Comment 4362 2206 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 4362 2128 r11|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD  <||@
  Comment 4367 2208 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 4374 2210 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 4381 2212 DEOPT info [bci:100]  <||@
  Comment 4381 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 4386 [r11:0]at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2927) [bci: 100, duringCall: false, rethrow: false]
              |0  |1  |2             |3  |4  |5 
     locals:  |-  |-  |r11|QWORD[.]  |-  |-  |-   <||@
  Comment 4387 block B151 null  <||@
  Comment 4387 1586 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4387 1588 r10|DWORD = MOVE input: int[-230419|0xfffffffffffc7bed]  <||@
  Comment 4393 1592 JUMP ~[] destination: B151 -> B203  <||@
  Comment 4398 block B149 null  <||@
  Comment 4398 1562 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4398 1564 r10|DWORD = MOVE input: int[-228635|0xfffffffffffc82e5]  <||@
  Comment 4404 1568 JUMP ~[] destination: B149 -> B203  <||@
  Comment 4409 block B214 null  <||@
  Comment 4409 2198 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4409 2200 r10|DWORD = MOVE input: int[-235027|0xfffffffffffc69ed]  <||@
  Comment 4415 2204 JUMP ~[] destination: B214 -> B215  <||@
  Comment 4417 block B19 null  <||@
  Comment 4417 254 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4417 256 r8|DWORD = MOVE input: int[-195867|0xfffffffffffd02e5]  <||@
  Comment 4423 266 JUMP ~[] destination: B19 -> B73  <||@
  Comment 4425 block B21 null  <||@
  Comment 4425 284 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4425 286 r8|DWORD = MOVE input: int[-197907|0xfffffffffffcfaed]  <||@
  Comment 4431 296 JUMP ~[] destination: B21 -> B73  <||@
  Comment 4433 block B72 null  <||@
  Comment 4433 740 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4433 742 r8|DWORD = MOVE input: int[-198683|0xfffffffffffcf7e5]  <||@
  Comment 4439 752 JUMP ~[] destination: B72 -> B73  <||@
  Comment 4441 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 4441 4  <||@
  Comment 4447 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 4447 5  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-5574[java.util.Formatter$FormatSpecifier.justify(String)]"
  method "HotSpotCompilation-5574[java.util.Formatter$FormatSpecifier.justify(String)]"
  date 1527005113698
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 1074164e0   <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@4182771d slotKind: QWORD  <||@
  Comment 48 6 r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 51 8 rsi|DWORD = MOV [r13|QWORD[.] + 16] size: DWORD  <||@
  Comment 55 10 CMP rsi|DWORD y: -1 size: DWORD  <||@
  Comment 58 12 BRANCH trueDestinationProbability: 0.6259652107203015 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2  <||@
  Comment 64 block B1 null  <||@
  Comment 64 14 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 64 16 rax|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 67 18 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 76 12  <||@
  Comment 86 block B2 null  <||@
  Comment 86 20 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 86 22 stack:32|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 91 24 rcx|DWORD[.] = MOV [r13|QWORD[.] + 28] size: DWORD  <||@
  Comment 95 26 NULLCHECK [r12|QWORD[*] + rcx|DWORD[.] * 8] state [bci:0]  <||@
  Comment 95 [rcx:0, rdx:0, r13:0, stack:96]at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2917) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2  |3  |4  |5 
     locals:  |r13|QWORD[.]  |rdx|QWORD[.]  |-  |-  |-  |-   <||@
  Comment 95 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 99 28 r14|DWORD[.] = MOV [rdx|QWORD[.] + 12] size: DWORD state [bci:0]  <||@
  Comment 99 [rcx:0, rdx:0, r13:0, stack:96]at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2917) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2  |3  |4  |5 
     locals:  |r13|QWORD[.]  |rdx|QWORD[.]  |-  |-  |-  |-   <||@
  Comment 99 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 103 30 stack:36|DWORD[.] = MOVE r14|DWORD[.] moveKind: DWORD  <||@
  Comment 108 32 TEST (x: r14|DWORD[.], y: r14|DWORD[.]) size: DWORD  <||@
  Comment 111 34 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4  <||@
  Comment 117 block B4 null  <||@
  Comment 117 44 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 117 46 r10|DWORD = MOV [r14|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 125 48 stack:40|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 130 50 r11|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 134 52 r8|QWORD = MOV [r15|QWORD + 112] size: QWORD  <||@
  Comment 138 54 rcx|DWORD = MOV [rcx|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 145 56 r9|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Formatter.Flags@122446495]  <||@
  Comment 145 {Object[Formatter.Flags@122446495]}  <||@
  Comment 155 58 r9|DWORD = MOV [r9|QWORD[.] + 12] size: DWORD  <||@
  Comment 159 60 stack:44|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 164 62 rcx|DWORD = AND (x: rcx|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 167 64 stack:48|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 171 66 CMP (x: r9|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 174 68 rbx|DWORD = SETCC condition: =  <||@
  Comment 180 70 stack:52|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 184 72 rdi|QWORD = LEA [r11|QWORD + 48] size: QWORD  <||@
  Comment 188 74 rsi|DWORD = SUB (x: rsi|DWORD, ~y: r10|DWORD) size: DWORD  <||@
  Comment 191 76 stack:56|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 195 78 CMP (x: r9|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 198 80 BRANCH trueDestinationProbability: 0.18604807005003576 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B9  <||@
  Comment 204 block B9 null  <||@
  Comment 204 138 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 204 140 CMP (x: rdi|QWORD, y: r8|QWORD) size: QWORD  <||@
  Comment 207 142 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11  <||@
  Comment 213 block B11 null  <||@
  Comment 213 172 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 213 174 MOV (x: [r15|QWORD + 96], y: rdi|QWORD) size: QWORD  <||@
  Comment 217 176 AMD64PREFETCH ~[r11|QWORD + 240] instr: 0  <||@
  Comment 225 178 r13|QWORD[*] = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 228 180 JUMP ~[] destination: B11 -> B12  <||@
  Comment 228 block B12 null  <||@
  Comment 228 182 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 228 184 r11|QWORD[.] = MOVE r13|QWORD[*] moveKind: QWORD  <||@
  Comment 231 186 MOV [r13|QWORD[*] + 12] y: 16 size: DWORD  <||@
  Comment 239 188 MOV [r13|QWORD[*]] y: 1 size: QWORD  <||@
  Comment 247 190 MOV [r13|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed}  <||@
  Comment 247 {meta{HotSpotType<[C, resolved>;compressed}}  <||@
  Comment 255 192 CMP rsi|DWORD y: 1 size: DWORD  <||@
  Comment 258 194 BRANCH trueDestinationProbability: 0.4177003898613192 condition: < trueDestination: B12 -> B13 falseDestination: B12 -> B14  <||@
  Comment 264 block B14 null  <||@
  Comment 264 210 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 264 212 xmm0|V256_QWORD = A od: SIMD<32,0,0,0> oe: QWORD  <||@
  Comment 264 {DataSection[0x0]}  <||@
  Comment 273 214 J (address: [r13|QWORD[*] + 16], input: xmm0|V256_QWORD) nZ: YMM oh: VMOVDQU  <||@
  Comment 279 216 r13|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 282 218 r10|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 288 220 JUMP ~[] destination: B14 -> B15  <||@
  Comment 288 block B15 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 288 222 [] = LABEL numbPhis: 2 align: true label: ?  <||@
  Comment 288 224 r8|DWORD = MOV [r13|QWORD[.] + 12] size: DWORD  <||@
  Comment 292 226 CMP (x: rsi|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 295 228 BRANCH trueDestinationProbability: 0.5822996101386808 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B75  <||@
  Comment 301 block B16 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 301 230 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 301 232 rdi|DWORD = INC r10|DWORD size: DWORD  <||@
  Comment 306 234 rax|DWORD = SUB (x: rdi|DWORD, ~y: r8|DWORD) size: DWORD  <||@
  Comment 311 236 CMP rax|DWORD y: 1 size: DWORD  <||@
  Comment 314 238 BRANCH trueDestinationProbability: 0.9354897578252553 condition: < trueDestination: B16 -> B17 falseDestination: B16 -> B20  <||@
  Comment 320 block B17 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 320 240 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 320 242 CMP (x: r8|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 323 244 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B17 -> B18 falseDestination: B17 -> B19  <||@
  Comment 329 block B18 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 329 246 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 329 248 MOV [r13|QWORD[.] + r10|DWORD * 2 + 16] y: 32 size: WORD  <||@
  Comment 337 250 r10|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 340 252 JUMP ~[] destination: B18 -> B15  <||@
  Comment 342 block B20 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 342 268 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 342 270 rax|DWORD = SHL r8|DWORD size: DWORD  <||@
  Comment 347 272 rax|DWORD = LEA [rax|DWORD + 2] size: DWORD  <||@
  Comment 350 274 rbp|DWORD = SUB (x: rax|DWORD, ~y: rdi|DWORD) size: DWORD  <||@
  Comment 354 276 TEST (x: rbp|DWORD, y: rbp|DWORD) size: DWORD  <||@
  Comment 356 278 rax|DWORD = CMOVE (falseValue: rax|DWORD, ~trueValue: rdi|DWORD) condition: <  <||@
  Comment 359 280 CMP rax|DWORD y: 1 size: DWORD  <||@
  Comment 362 282 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B20 -> B21 falseDestination: B20 -> B22  <||@
  Comment 368 block B22 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 368 298 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 368 300 rbp|DWORD = MOVE input: int[2147483639|0x7ffffff7]  <||@
  Comment 373 302 rbp|DWORD = SUB (x: rbp|DWORD, ~y: rax|DWORD) size: DWORD  <||@
  Comment 375 304 TEST (x: rbp|DWORD, y: rbp|DWORD) size: DWORD  <||@
  Comment 377 306 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B22 -> B23 falseDestination: B22 -> B24  <||@
  Comment 383 block B24 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 383 322 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 383 324 CMP (x: rax|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 386 326 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B24 -> B25 falseDestination: B24 -> B72  <||@
  Comment 392 block B25 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 392 328 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 392 330 stack:60|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 397 332 rbp|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 401 334 r14|QWORD = MOV [r15|QWORD + 112] size: QWORD  <||@
  Comment 405 336 CMP rax|DWORD y: 16777215 size: DWORD  <||@
  Comment 411 338 BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B25 -> B26 falseDestination: B25 -> B29  <||@
  Comment 417 block B26 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 417 340 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 417 342 stack:72|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 422 344 r13|DWORD = SHL rax|DWORD size: DWORD  <||@
  Comment 428 346 r13|DWORD = LEA [r13|DWORD + 23] size: DWORD  <||@
  Comment 432 348 r13|DWORD = AND r13|DWORD y: -8 size: DWORD  <||@
  Comment 436 350 r13|QWORD = MOVSXD r13|DWORD size: QWORD  <||@
  Comment 439 352 r10|QWORD = ADD (x: r13|QWORD, y: rbp|QWORD) size: QWORD  <||@
  Comment 445 354 CMP (x: r10|QWORD, y: r14|QWORD) size: QWORD  <||@
  Comment 448 356 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B26 -> B27 falseDestination: B26 -> B28  <||@
  Comment 454 block B28 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 454 366 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 454 368 MOV (x: [r15|QWORD + 96], y: r10|QWORD) size: QWORD  <||@
  Comment 458 370 AMD64PREFETCH ~[r13|QWORD + rbp|QWORD * 1 + 192] instr: 0  <||@
  Comment 467 372 AMD64PREFETCH ~[r13|QWORD + rbp|QWORD * 1 + 256] instr: 0  <||@
  Comment 476 374 AMD64PREFETCH ~[r13|QWORD + rbp|QWORD * 1 + 320] instr: 0  <||@
  Comment 485 376 AMD64PREFETCH ~[r13|QWORD + rbp|QWORD * 1 + 384] instr: 0  <||@
  Comment 494 378 MOV (x: [rbp|QWORD + 12], y: rax|DWORD) size: DWORD  <||@
  Comment 497 380 MOV [rbp|QWORD] y: 1 size: QWORD  <||@
  Comment 505 382 MOV [rbp|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed}  <||@
  Comment 505 {meta{HotSpotType<[C, resolved>;compressed}}  <||@
  Comment 512 384 rbp|QWORD[.] = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 512 386 r14|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 515 388 stack:76|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 519 390 r13|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 522 392 rax|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD  <||@
  Comment 525 394 JUMP ~[] destination: B28 -> B31  <||@
  Comment 525 block B31 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 525 422 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 525 424 CMP (x: r14|DWORD, y: r13|DWORD) size: DWORD  <||@
  Comment 528 426 rdi|DWORD = CMOVE (falseValue: r14|DWORD, ~trueValue: r13|DWORD) condition: >  <||@
  Comment 535 428 rdi|QWORD = MOVSXD rdi|DWORD size: QWORD  <||@
  Comment 538 430 CMP rdi|QWORD y: 1 size: QWORD  <||@
  Comment 542 432 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B31 -> B50 falseDestination: B31 -> B33  <||@
  Comment 548 block B33 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 548 438 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 548 440 r10|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 553 442 rsi|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD  <||@
  Comment 557 444 rdx|QWORD[.] = LEA [r10|QWORD[.] + 16] size: QWORD  <||@
  Comment 561 446 r10|QWORD = LEA [rdi|QWORD - 16] size: QWORD  <||@
  Comment 565 448 TEST (x: r10|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 568 454 r11|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 575 450 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B33 -> B38 falseDestination: B33 -> B36  <||@
  Comment 581 block B38 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 581 480 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 581 482 r10|QWORD = LEA [rdi|QWORD - 8] size: QWORD  <||@
  Comment 585 484 CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 588 486 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B38 -> B41 falseDestination: B38 -> B40  <||@
  Comment 594 block B40 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 594 492 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 594 494 xmm0|V128_WORD = H [rdx|QWORD[.] + r11|QWORD * 2] nZ: XMM oh: VMOVDQU  <||@
  Comment 600 496 J (address: [rsi|QWORD[.] + r11|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU  <||@
  Comment 606 498 r10|QWORD = LEA [r11|QWORD + 8] size: QWORD  <||@
  Comment 610 500 r11|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 613 502 JUMP ~[] destination: B40 -> B41  <||@
  Comment 613 block B41 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 613 504 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 613 506 r10|QWORD = LEA [rdi|QWORD - 4] size: QWORD  <||@
  Comment 617 508 CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 620 510 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B41 -> B44 falseDestination: B41 -> B43  <||@
  Comment 626 block B43 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 626 516 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 626 518 xmm0|V64_WORD = H [rdx|QWORD[.] + r11|QWORD * 2] nZ: XMM oh: VMOVQ  <||@
  Comment 632 520 J (address: [rsi|QWORD[.] + r11|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ  <||@
  Comment 638 522 r10|QWORD = LEA [r11|QWORD + 4] size: QWORD  <||@
  Comment 642 524 r11|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 645 526 JUMP ~[] destination: B43 -> B44  <||@
  Comment 645 block B44 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 645 528 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 645 530 r10|QWORD = LEA [rdi|QWORD - 2] size: QWORD  <||@
  Comment 649 532 CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 652 534 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B44 -> B47 falseDestination: B44 -> B46  <||@
  Comment 658 block B46 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 658 540 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 658 542 xmm0|V32_WORD = H [rdx|QWORD[.] + r11|QWORD * 2] nZ: XMM oh: VMOVD  <||@
  Comment 664 544 J (address: [rsi|QWORD[.] + r11|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD  <||@
  Comment 670 546 r10|QWORD = LEA [r11|QWORD + 2] size: QWORD  <||@
  Comment 674 548 r11|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 677 550 JUMP ~[] destination: B46 -> B47  <||@
  Comment 677 block B47 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 677 552 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 677 554 r10|QWORD = DEC rdi|QWORD size: QWORD  <||@
  Comment 683 556 CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 686 558 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B47 -> B50 falseDestination: B47 -> B49  <||@
  Comment 692 block B49 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 692 564 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 692 566 rdx|DWORD = MOVSX [rdx|QWORD[.] + r11|QWORD * 2] size: DWORD  <||@
  Comment 697 568 MOV (x: [rsi|QWORD[.] + r11|QWORD * 2], y: rdx|DWORD) size: WORD  <||@
  Comment 702 570 JUMP ~[] destination: B49 -> B50  <||@
  Comment 702 block B50 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 702 572 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 702 574 rsi|QWORD = MOVSXD r14|DWORD size: QWORD  <||@
  Comment 705 576 CMP (x: rsi|QWORD, y: rdi|QWORD) size: QWORD  <||@
  Comment 708 578 BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B50 -> B51 falseDestination: B50 -> B70  <||@
  Comment 714 block B70 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 714 724 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 714 720 r11|DWORD = MOVE stack:60|DWORD moveKind: DWORD  <||@
  Comment 719 726 MOV [rax|QWORD[.] + r11|DWORD * 2 + 16] y: 32 size: WORD  <||@
  Comment 727 728 r10|DWORD = MOVE stack:76|DWORD moveKind: DWORD  <||@
  Comment 732 730 r13|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 735 732 rsi|DWORD = MOVE stack:56|DWORD moveKind: DWORD  <||@
  Comment 739 734 JUMP ~[] destination: B70 -> B15  <||@
  Comment 744 block B51 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 744 580 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 744 582 rdx|QWORD[.] = LEA [rax|QWORD[.] + rdi|QWORD * 2 + 16] size: QWORD  <||@
  Comment 749 584 rsi|QWORD = SUB (x: rsi|QWORD, ~y: rdi|QWORD) size: QWORD  <||@
  Comment 752 586 rdi|QWORD = LEA [rsi|QWORD - 16] size: QWORD  <||@
  Comment 756 588 TEST (x: rdi|QWORD, y: rdi|QWORD) size: QWORD  <||@
  Comment 759 590 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B51 -> B52 falseDestination: B51 -> B53  <||@
  Comment 765 block B52 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 765 592 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 765 594 r10|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 772 596 JUMP ~[] destination: B52 -> B56  <||@
  Comment 772 block B56 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 772 620 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 772 622 rdi|QWORD = LEA [rsi|QWORD - 8] size: QWORD  <||@
  Comment 776 624 CMP (x: r10|QWORD, y: rdi|QWORD) size: QWORD  <||@
  Comment 779 626 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B56 -> B59 falseDestination: B56 -> B58  <||@
  Comment 785 block B58 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 785 632 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 785 634 xmm0|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0>  <||@
  Comment 789 636 J (address: [rdx|QWORD[.] + r10|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU  <||@
  Comment 795 638 rdi|QWORD = LEA [r10|QWORD + 8] size: QWORD  <||@
  Comment 799 640 r10|QWORD = MOVE rdi|QWORD moveKind: QWORD  <||@
  Comment 802 642 JUMP ~[] destination: B58 -> B59  <||@
  Comment 802 block B59 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 802 644 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 802 646 rdi|QWORD = LEA [rsi|QWORD - 4] size: QWORD  <||@
  Comment 806 648 CMP (x: r10|QWORD, y: rdi|QWORD) size: QWORD  <||@
  Comment 809 650 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B59 -> B62 falseDestination: B59 -> B61  <||@
  Comment 815 block B61 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 815 656 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 815 658 xmm0|V64_WORD = L oc: SIMD<0,0,0,0>  <||@
  Comment 819 660 J (address: [rdx|QWORD[.] + r10|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ  <||@
  Comment 825 662 rdi|QWORD = LEA [r10|QWORD + 4] size: QWORD  <||@
  Comment 829 664 r10|QWORD = MOVE rdi|QWORD moveKind: QWORD  <||@
  Comment 832 666 JUMP ~[] destination: B61 -> B62  <||@
  Comment 832 block B62 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 832 668 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 832 670 rdi|QWORD = LEA [rsi|QWORD - 2] size: QWORD  <||@
  Comment 836 672 CMP (x: r10|QWORD, y: rdi|QWORD) size: QWORD  <||@
  Comment 839 674 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B62 -> B65 falseDestination: B62 -> B64  <||@
  Comment 845 block B64 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 845 680 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 845 682 xmm0|V32_WORD = L oc: SIMD<0,0>  <||@
  Comment 849 684 J (address: [rdx|QWORD[.] + r10|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD  <||@
  Comment 855 686 rdi|QWORD = LEA [r10|QWORD + 2] size: QWORD  <||@
  Comment 859 688 r10|QWORD = MOVE rdi|QWORD moveKind: QWORD  <||@
  Comment 862 690 JUMP ~[] destination: B64 -> B65  <||@
  Comment 862 block B65 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 862 692 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 862 694 rsi|QWORD = DEC rsi|QWORD size: QWORD  <||@
  Comment 865 696 CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 868 698 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B65 -> B70 falseDestination: B65 -> B67  <||@
  Comment 874 block B67 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 874 706 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 874 708 MOV (x: [rdx|QWORD[.] + r10|QWORD * 2], y: r12|ILLEGAL) size: WORD  <||@
  Comment 879 712 JUMP ~[] destination: B67 -> B70  <||@
  Comment 884 block B36 loop 1 depth 2 outer 0 header:2233|LoopBegin  <||@
  Comment 884 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 896 466 xmm0|V256_WORD = H [rdx|QWORD[.] + r11|QWORD * 2] nZ: YMM oh: VMOVDQU  <||@
  Comment 902 468 J (address: [rsi|QWORD[.] + r11|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU  <||@
  Comment 908 470 r11|QWORD = LEA [r11|QWORD + 16] size: QWORD  <||@
  Comment 912 472 CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 915 474 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B36 -> B38 falseDestination: B36 -> B36  <||@
  Comment 922 block B53 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 922 598 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 922 600 xmm0|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>  <||@
  Comment 926 602 r10|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 933 604 JUMP ~[] destination: B53 -> B54  <||@
  Comment 933 block B54 loop 2 depth 2 outer 0 header:2296|LoopBegin  <||@
  Comment 933 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 944 608 J (address: [rdx|QWORD[.] + r10|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU  <||@
  Comment 950 610 r10|QWORD = LEA [r10|QWORD + 16] size: QWORD  <||@
  Comment 954 612 CMP (x: r10|QWORD, y: rdi|QWORD) size: QWORD  <||@
  Comment 957 614 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B54 -> B56 falseDestination: B54 -> B54  <||@
  Comment 964 block B29 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 964 396 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 964 398 stack:76|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 968 400 stack:72|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 973 404 JUMP ~[] destination: B29 -> B30  <||@
  Comment 973 block B30 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 973 406 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 973 402 r13|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 976 408 r11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>}  <||@
  Comment 976 {meta{HotSpotType<[C, resolved>}}  <||@
  Comment 986 410 rsi|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 989 412 rdx|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 991 414 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 996 416 r14|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 999 418 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:47]  <||@
  Comment 999 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 1004 [stack:56, stack:92, stack:96]at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2923) [bci: 47, duringCall: false, rethrow: false]
              |0  |1                  |2                                                                      |3               |4               |5              
     locals:  |-  |stack:32|QWORD[.]  |vobject:StringBuilder:0{count=stack:60|DWORD,value=stack:72|QWORD[.]}  |stack:52|DWORD  |stack:56|DWORD  |stack:60|DWORD   <||@
  Comment 1005 420 JUMP ~[] destination: B30 -> B31  <||@
  Comment 1010 block B27 loop 0 depth 1 header:33|LoopBegin  <||@
  Comment 1010 358 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1010 360 stack:76|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 1014 364 JUMP ~[] destination: B27 -> B30  <||@
  Comment 1016 block B13 null  <||@
  Comment 1016 196 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1016 198 xmm0|V256_QWORD = L oc: SIMD<0,0,0,0>  <||@
  Comment 1020 200 J (address: [r13|QWORD[*] + 16], input: xmm0|V256_QWORD) nZ: YMM oh: VMOVDQU  <||@
  Comment 1026 202 r10|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1032 204 r8|DWORD = MOVE input: int[16|0x10]  <||@
  Comment 1038 206 r13|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 1041 208 JUMP ~[] destination: B13 -> B75  <||@
  Comment 1041 block B75 null  <||@
  Comment 1041 766 [] = LABEL numbPhis: 3 align: false label: ?  <||@
  Comment 1041 768 stack:72|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 1046 770 stack:76|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1051 772 r11|DWORD = MOV [r13|QWORD[.] + 12] size: DWORD  <||@
  Comment 1055 774 r9|DWORD[.] = COMPRESSPOINTER (input: r13|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@1d28dd80 encoding: base: 0 shift: 3  <||@
  Comment 1062 776 stack:60|DWORD[.] = MOVE r9|DWORD[.] moveKind: DWORD  <||@
  Comment 1067 778 rcx|DWORD = ADD (x: r10|DWORD, y: stack:40|DWORD) size: DWORD  <||@
  Comment 1074 780 stack:80|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 1078 782 rdi|DWORD = SUB (x: rcx|DWORD, ~y: r8|DWORD) size: DWORD  <||@
  Comment 1083 784 r8|QWORD = MOV stack:40|DWORD size: DWORD  <||@
  Comment 1088 786 rbx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>}  <||@
  Comment 1088 {meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>}}  <||@
  Comment 1098 788 CMP rdi|DWORD y: 1 size: DWORD  <||@
  Comment 1101 790 BRANCH trueDestinationProbability: 0.9354897721124376 condition: < trueDestination: B75 -> B76 falseDestination: B75 -> B84  <||@
  Comment 1107 block B76 null  <||@
  Comment 1107 792 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1107 794 r11|DWORD = SUB (x: r11|DWORD, ~y: stack:40|DWORD) size: DWORD  <||@
  Comment 1112 796 CMP (x: r10|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 1115 798 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B76 -> B77 falseDestination: B76 -> B78  <||@
  Comment 1121 block B78 null  <||@
  Comment 1121 808 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1121 810 r14|DWORD[.] = MOVE stack:36|DWORD[.] moveKind: DWORD  <||@
  Comment 1126 812 r14|QWORD[.] = UNCOMPRESSPOINTER (input: r14|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1d28dd80 encoding: base: 0 shift: 3  <||@
  Comment 1130 814 r14|QWORD[*] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 1130 816 rsi|QWORD[*] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 1133 818 rdx|QWORD = MOVSXD r10|DWORD size: QWORD  <||@
  Comment 1136 820 rdi|QWORD = LEA [r14|QWORD[*] + 16] size: QWORD  <||@
  Comment 1140 822 rsi|QWORD = LEA [rsi|QWORD[*] + rdx|QWORD * 2 + 16] size: QWORD  <||@
  Comment 1145 824 rdx|QWORD = MOVE r8|QWORD moveKind: QWORD  <||@
  Comment 1148 826 - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charArraycopy(Word,Word,Word)void@0x106812d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL  <||@
  Comment 1148 {Field[name=StubRoutines::_jshort_arraycopy, type=address, offset=0, address=0x105a7dc78, value=0x106812d40]:0x106812d40}  <||@
  Comment 1154 828 rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 1158 830 rdx|QWORD = LEA [rsi|QWORD + 24] size: QWORD  <||@
  Comment 1162 832 CMP (x: rdx|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 1166 834 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B78 -> B79 falseDestination: B78 -> B80  <||@
  Comment 1172 block B80 null  <||@
  Comment 1172 858 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1172 860 MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD  <||@
  Comment 1176 862 AMD64PREFETCH ~[rsi|QWORD + 216] instr: 0  <||@
  Comment 1183 864 rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 1183 866 r13|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>}  <||@
  Comment 1183 {meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>}}  <||@
  Comment 1193 874 JUMP ~[] destination: B80 -> B81  <||@
  Comment 1193 block B81 null  <||@
  Comment 1193 876 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1193 868 r14|DWORD = MOVE stack:80|DWORD moveKind: DWORD  <||@
  Comment 1198 870 r9|DWORD[.] = MOVE stack:60|DWORD[.] moveKind: DWORD  <||@
  Comment 1203 872 r10|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 1208 878 rdx|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD  <||@
  Comment 1211 880 rcx|QWORD = MOV [r13|QWORD + 168] size: QWORD  <||@
  Comment 1218 882 MOV (x: [rsi|QWORD[*]], y: rcx|QWORD) size: QWORD  <||@
  Comment 1221 884 MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed}  <||@
  Comment 1221 {meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed}}  <||@
  Comment 1228 886 MOV (x: [rsi|QWORD[*] + 12], y: r14|DWORD) size: DWORD  <||@
  Comment 1232 888 MOV (x: [rsi|QWORD[*] + 16], y: r9|DWORD[.]) size: DWORD  <||@
  Comment 1236 890 CMP (x: r10|DWORD, y: stack:48|DWORD) size: DWORD  <||@
  Comment 1241 892 BRANCH trueDestinationProbability: 0.18579515065073993 condition: = trueDestination: B81 -> B82 falseDestination: B81 -> B83  <||@
  Comment 1247 block B83 null  <||@
  Comment 1247 904 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1247 906 stack:88|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1252 908 r13|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 1257 910 JUMP ~[] destination: B83 -> B206  <||@
  Comment 1257 block B206 null  <||@
  Comment 1257 2110 [] = LABEL numbPhis: 3 align: false label: ?  <||@
  Comment 1257 2112 r10|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>}  <||@
  Comment 1257 {meta{HotSpotType<Ljava/lang/String;, resolved>}}  <||@
  Comment 1267 2114 CMP r14|DWORD y: 1 size: DWORD  <||@
  Comment 1271 2116 BRANCH trueDestinationProbability: 0.09284041465770032 condition: < trueDestination: B206 -> B207 falseDestination: B206 -> B213  <||@
  Comment 1277 block B213 null  <||@
  Comment 1277 2188 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1277 2190 r11|DWORD = MOV [r13|QWORD[.] + 12] size: DWORD  <||@
  Comment 1281 2192 rax|DWORD = SUB (x: r11|DWORD, ~y: r14|DWORD) size: DWORD  <||@
  Comment 1287 2194 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 1289 2196 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B213 -> B214 falseDestination: B213 -> B216  <||@
  Comment 1295 block B216 null  <||@
  Comment 1295 2214 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1295 2216 rax|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 1299 2218 rsi|QWORD = MOV [r15|QWORD + 112] size: QWORD  <||@
  Comment 1303 2220 CMP r14|DWORD y: 16777215 size: DWORD  <||@
  Comment 1310 2222 BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B216 -> B217 falseDestination: B216 -> B221  <||@
  Comment 1316 block B217 null  <||@
  Comment 1316 2224 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1316 2226 rcx|DWORD = SHL r14|DWORD size: DWORD  <||@
  Comment 1321 2228 rcx|DWORD = LEA [rcx|DWORD + 23] size: DWORD  <||@
  Comment 1324 2230 rcx|DWORD = AND rcx|DWORD y: -8 size: DWORD  <||@
  Comment 1327 2232 rcx|QWORD = MOVSXD rcx|DWORD size: QWORD  <||@
  Comment 1330 2234 r8|QWORD = ADD (x: rcx|QWORD, y: rax|QWORD) size: QWORD  <||@
  Comment 1336 2236 CMP (x: r8|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 1339 2238 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B217 -> B221 falseDestination: B217 -> B219  <||@
  Comment 1345 block B219 null  <||@
  Comment 1345 2246 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1345 2248 MOV (x: [r15|QWORD + 96], y: r8|QWORD) size: QWORD  <||@
  Comment 1349 2250 AMD64PREFETCH ~[rcx|QWORD + rax|QWORD * 1 + 192] instr: 0  <||@
  Comment 1357 2252 AMD64PREFETCH ~[rcx|QWORD + rax|QWORD * 1 + 256] instr: 0  <||@
  Comment 1365 2254 AMD64PREFETCH ~[rcx|QWORD + rax|QWORD * 1 + 320] instr: 0  <||@
  Comment 1373 2256 AMD64PREFETCH ~[rcx|QWORD + rax|QWORD * 1 + 384] instr: 0  <||@
  Comment 1381 2258 MOV (x: [rax|QWORD + 12], y: r14|DWORD) size: DWORD  <||@
  Comment 1385 2260 MOV [rax|QWORD] y: 1 size: QWORD  <||@
  Comment 1392 2262 MOV [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed}  <||@
  Comment 1392 {meta{HotSpotType<[C, resolved>;compressed}}  <||@
  Comment 1399 2264 rax|QWORD[.] = MOVE rax|QWORD moveKind: QWORD  <||@
  Comment 1399 2266 stack:72|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 1404 2268 r13|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 1407 2270 JUMP ~[] destination: B219 -> B222  <||@
  Comment 1407 block B222 null  <||@
  Comment 1407 2292 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1407 2294 CMP (x: r14|DWORD, y: r13|DWORD) size: DWORD  <||@
  Comment 1410 2296 rsi|DWORD = CMOVE (falseValue: r14|DWORD, ~trueValue: r13|DWORD) condition: >  <||@
  Comment 1417 2298 rsi|QWORD = MOVSXD rsi|DWORD size: QWORD  <||@
  Comment 1420 2300 CMP rsi|QWORD y: 1 size: QWORD  <||@
  Comment 1424 2302 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B222 -> B241 falseDestination: B222 -> B224  <||@
  Comment 1430 block B224 null  <||@
  Comment 1430 2308 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1430 2310 r10|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 1435 2312 rdx|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD  <||@
  Comment 1439 2314 rcx|QWORD[.] = LEA [r10|QWORD[.] + 16] size: QWORD  <||@
  Comment 1443 2316 r10|QWORD = LEA [rsi|QWORD - 16] size: QWORD  <||@
  Comment 1447 2318 TEST (x: r10|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 1450 2324 r11|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1457 2320 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B224 -> B229 falseDestination: B224 -> B227  <||@
  Comment 1463 block B229 null  <||@
  Comment 1463 2350 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1463 2352 r10|QWORD = LEA [rsi|QWORD - 8] size: QWORD  <||@
  Comment 1467 2354 CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 1470 2356 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B229 -> B232 falseDestination: B229 -> B231  <||@
  Comment 1476 block B231 null  <||@
  Comment 1476 2362 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1476 2364 xmm0|V128_WORD = H [rcx|QWORD[.] + r11|QWORD * 2] nZ: XMM oh: VMOVDQU  <||@
  Comment 1482 2366 J (address: [rdx|QWORD[.] + r11|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU  <||@
  Comment 1488 2368 r10|QWORD = LEA [r11|QWORD + 8] size: QWORD  <||@
  Comment 1492 2370 r11|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 1495 2372 JUMP ~[] destination: B231 -> B232  <||@
  Comment 1495 block B232 null  <||@
  Comment 1495 2374 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1495 2376 r10|QWORD = LEA [rsi|QWORD - 4] size: QWORD  <||@
  Comment 1499 2378 CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 1502 2380 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B232 -> B235 falseDestination: B232 -> B234  <||@
  Comment 1508 block B234 null  <||@
  Comment 1508 2386 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1508 2388 xmm0|V64_WORD = H [rcx|QWORD[.] + r11|QWORD * 2] nZ: XMM oh: VMOVQ  <||@
  Comment 1514 2390 J (address: [rdx|QWORD[.] + r11|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ  <||@
  Comment 1520 2392 r10|QWORD = LEA [r11|QWORD + 4] size: QWORD  <||@
  Comment 1524 2394 r11|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 1527 2396 JUMP ~[] destination: B234 -> B235  <||@
  Comment 1527 block B235 null  <||@
  Comment 1527 2398 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1527 2400 r10|QWORD = LEA [rsi|QWORD - 2] size: QWORD  <||@
  Comment 1531 2402 CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 1534 2404 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B235 -> B238 falseDestination: B235 -> B237  <||@
  Comment 1540 block B237 null  <||@
  Comment 1540 2410 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1540 2412 xmm0|V32_WORD = H [rcx|QWORD[.] + r11|QWORD * 2] nZ: XMM oh: VMOVD  <||@
  Comment 1546 2414 J (address: [rdx|QWORD[.] + r11|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD  <||@
  Comment 1552 2416 r10|QWORD = LEA [r11|QWORD + 2] size: QWORD  <||@
  Comment 1556 2418 r11|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 1559 2420 JUMP ~[] destination: B237 -> B238  <||@
  Comment 1559 block B238 null  <||@
  Comment 1559 2422 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1559 2424 r10|QWORD = DEC rsi|QWORD size: QWORD  <||@
  Comment 1565 2426 CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 1568 2428 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B238 -> B241 falseDestination: B238 -> B240  <||@
  Comment 1574 block B240 null  <||@
  Comment 1574 2434 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1574 2436 rcx|DWORD = MOVSX [rcx|QWORD[.] + r11|QWORD * 2] size: DWORD  <||@
  Comment 1579 2438 MOV (x: [rdx|QWORD[.] + r11|QWORD * 2], y: rcx|DWORD) size: WORD  <||@
  Comment 1584 2440 JUMP ~[] destination: B240 -> B241  <||@
  Comment 1584 block B241 null  <||@
  Comment 1584 2442 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1584 2444 rdx|QWORD = MOVSXD r14|DWORD size: QWORD  <||@
  Comment 1587 2446 CMP (x: rdx|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 1590 2448 BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B241 -> B242 falseDestination: B241 -> B261  <||@
  Comment 1596 block B261 null  <||@
  Comment 1596 2588 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1596 2590 rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 1600 2592 rdx|QWORD = LEA [rsi|QWORD + 24] size: QWORD  <||@
  Comment 1604 2594 CMP (x: rdx|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 1608 2596 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B261 -> B262 falseDestination: B261 -> B263  <||@
  Comment 1614 block B263 null  <||@
  Comment 1614 2622 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1614 2624 MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD  <||@
  Comment 1618 2626 AMD64PREFETCH ~[rsi|QWORD + 216] instr: 0  <||@
  Comment 1625 2628 rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 1625 2630 r10|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>}  <||@
  Comment 1625 {meta{HotSpotType<Ljava/lang/String;, resolved>}}  <||@
  Comment 1635 2632 JUMP ~[] destination: B263 -> B264  <||@
  Comment 1635 block B264 null  <||@
  Comment 1635 2634 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1635 2636 rdx|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD  <||@
  Comment 1638 2638 rcx|QWORD = MOV [r10|QWORD + 168] size: QWORD  <||@
  Comment 1645 2640 MOV (x: [rsi|QWORD[*]], y: rcx|QWORD) size: QWORD  <||@
  Comment 1648 2642 MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}  <||@
  Comment 1648 {meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}}  <||@
  Comment 1655 2644 rax|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@1d28dd80 encoding: base: 0 shift: 3  <||@
  Comment 1659 2646 MOV (x: [rsi|QWORD[*] + 12], y: rax|DWORD[.]) size: DWORD  <||@
  Comment 1662 2648 MOV (x: [rsi|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 1666 2650 rax|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1669 2652 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 1678 12  <||@
  Comment 1688 block B242 null  <||@
  Comment 1688 2450 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1688 2452 rcx|QWORD[.] = LEA [rax|QWORD[.] + rsi|QWORD * 2 + 16] size: QWORD  <||@
  Comment 1693 2454 rdx|QWORD = SUB (x: rdx|QWORD, ~y: rsi|QWORD) size: QWORD  <||@
  Comment 1696 2456 rsi|QWORD = LEA [rdx|QWORD - 16] size: QWORD  <||@
  Comment 1700 2458 TEST (x: rsi|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 1703 2460 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B242 -> B243 falseDestination: B242 -> B244  <||@
  Comment 1709 block B243 null  <||@
  Comment 1709 2462 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1709 2464 r10|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1716 2466 JUMP ~[] destination: B243 -> B247  <||@
  Comment 1716 block B247 null  <||@
  Comment 1716 2490 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1716 2492 rsi|QWORD = LEA [rdx|QWORD - 8] size: QWORD  <||@
  Comment 1720 2494 CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 1723 2496 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B247 -> B250 falseDestination: B247 -> B249  <||@
  Comment 1729 block B249 null  <||@
  Comment 1729 2502 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1729 2504 xmm0|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0>  <||@
  Comment 1733 2506 J (address: [rcx|QWORD[.] + r10|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU  <||@
  Comment 1739 2508 rsi|QWORD = LEA [r10|QWORD + 8] size: QWORD  <||@
  Comment 1743 2510 r10|QWORD = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 1746 2512 JUMP ~[] destination: B249 -> B250  <||@
  Comment 1746 block B250 null  <||@
  Comment 1746 2514 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1746 2516 rsi|QWORD = LEA [rdx|QWORD - 4] size: QWORD  <||@
  Comment 1750 2518 CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 1753 2520 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B250 -> B253 falseDestination: B250 -> B252  <||@
  Comment 1759 block B252 null  <||@
  Comment 1759 2526 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1759 2528 xmm0|V64_WORD = L oc: SIMD<0,0,0,0>  <||@
  Comment 1763 2530 J (address: [rcx|QWORD[.] + r10|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ  <||@
  Comment 1769 2532 rsi|QWORD = LEA [r10|QWORD + 4] size: QWORD  <||@
  Comment 1773 2534 r10|QWORD = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 1776 2536 JUMP ~[] destination: B252 -> B253  <||@
  Comment 1776 block B253 null  <||@
  Comment 1776 2538 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1776 2540 rsi|QWORD = LEA [rdx|QWORD - 2] size: QWORD  <||@
  Comment 1780 2542 CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 1783 2544 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B253 -> B256 falseDestination: B253 -> B255  <||@
  Comment 1789 block B255 null  <||@
  Comment 1789 2550 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1789 2552 xmm0|V32_WORD = L oc: SIMD<0,0>  <||@
  Comment 1793 2554 J (address: [rcx|QWORD[.] + r10|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD  <||@
  Comment 1799 2556 rsi|QWORD = LEA [r10|QWORD + 2] size: QWORD  <||@
  Comment 1803 2558 r10|QWORD = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 1806 2560 JUMP ~[] destination: B255 -> B256  <||@
  Comment 1806 block B256 null  <||@
  Comment 1806 2562 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1806 2564 rdx|QWORD = DEC rdx|QWORD size: QWORD  <||@
  Comment 1809 2566 CMP (x: r10|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 1812 2568 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B256 -> B261 falseDestination: B256 -> B258  <||@
  Comment 1818 block B258 null  <||@
  Comment 1818 2574 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1818 2576 MOV (x: [rcx|QWORD[.] + r10|QWORD * 2], y: r12|ILLEGAL) size: WORD  <||@
  Comment 1823 2578 JUMP ~[] destination: B258 -> B261  <||@
  Comment 1828 block B5 null  <||@
  Comment 1828 82 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1828 84 CMP (x: rdi|QWORD, y: r8|QWORD) size: QWORD  <||@
  Comment 1831 86 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B7  <||@
  Comment 1837 block B7 null  <||@
  Comment 1837 106 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1837 108 MOV (x: [r15|QWORD + 96], y: rdi|QWORD) size: QWORD  <||@
  Comment 1841 110 AMD64PREFETCH ~[r11|QWORD + 240] instr: 0  <||@
  Comment 1849 112 rdi|QWORD[*] = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 1852 114 JUMP ~[] destination: B7 -> B8  <||@
  Comment 1852 block B8 null  <||@
  Comment 1852 116 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1852 118 xmm0|V256_QWORD = L oc: SIMD<0,0,0,0>  <||@
  Comment 1856 120 rsi|QWORD[.] = MOVE rdi|QWORD[*] moveKind: QWORD  <||@
  Comment 1859 122 MOV [rdi|QWORD[*] + 12] y: 16 size: DWORD  <||@
  Comment 1866 124 MOV [rdi|QWORD[*]] y: 1 size: QWORD  <||@
  Comment 1873 126 MOV [rdi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed}  <||@
  Comment 1873 {meta{HotSpotType<[C, resolved>;compressed}}  <||@
  Comment 1880 128 J (address: [rdi|QWORD[*] + 16], input: xmm0|V256_QWORD) nZ: YMM oh: VMOVDQU  <||@
  Comment 1885 130 r10|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1891 132 r8|DWORD = MOVE input: int[16|0x10]  <||@
  Comment 1897 134 r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1900 136 JUMP ~[] destination: B8 -> B75  <||@
  Comment 1905 block B82 null  <||@
  Comment 1905 894 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1905 896 r13|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 1910 898 rcx|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 1913 900 r14|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1916 902 JUMP ~[] destination: B82 -> B144  <||@
  Comment 1916 block B144 null  <||@
  Comment 1916 1510 [] = LABEL numbPhis: 3 align: false label: ?  <||@
  Comment 1916 1512 stack:112|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 1921 1514 r11|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 1924 1516 r10|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 1927 1518 r13|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1933 1520 rsi|DWORD = MOVE stack:56|DWORD moveKind: DWORD  <||@
  Comment 1937 1522 JUMP ~[] destination: B144 -> B145  <||@
  Comment 1937 block B145 loop 5 depth 1 header:58|LoopBegin  <||@
  Comment 1937 1524 [] = LABEL numbPhis: 3 align: true label: ?  <||@
  Comment 1952 1526 CMP (x: rsi|DWORD, y: r13|DWORD) size: DWORD  <||@
  Comment 1955 1528 BRANCH trueDestinationProbability: 0.8818677814780699 condition: > trueDestination: B145 -> B146 falseDestination: B145 -> B204  <||@
  Comment 1961 block B146 loop 5 depth 1 header:58|LoopBegin  <||@
  Comment 1961 1530 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1961 1532 r8|DWORD = MOV [r10|QWORD[.] + 12] size: DWORD  <||@
  Comment 1965 1534 r9|DWORD = INC r11|DWORD size: DWORD  <||@
  Comment 1971 1536 rdx|DWORD = SUB (x: r9|DWORD, ~y: r8|DWORD) size: DWORD  <||@
  Comment 1977 1538 rbx|DWORD = INC r13|DWORD size: DWORD  <||@
  Comment 1982 1540 CMP rdx|DWORD y: 1 size: DWORD  <||@
  Comment 1985 1542 BRANCH trueDestinationProbability: 0.9354897578252553 condition: < trueDestination: B146 -> B147 falseDestination: B146 -> B150  <||@
  Comment 1991 block B147 loop 5 depth 1 header:58|LoopBegin  <||@
  Comment 1991 1544 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1991 1546 CMP (x: r8|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 1994 1548 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B147 -> B148 falseDestination: B147 -> B149  <||@
  Comment 2000 block B148 loop 5 depth 1 header:58|LoopBegin  <||@
  Comment 2000 1550 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2000 1552 MOV (x: [r14|QWORD[.] + 12], y: r9|DWORD) size: DWORD  <||@
  Comment 2004 1554 MOV [r10|QWORD[.] + r11|DWORD * 2 + 16] y: 32 size: WORD  <||@
  Comment 2012 1556 r11|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 2015 1558 r13|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 2018 1560 JUMP ~[] destination: B148 -> B145  <||@
  Comment 2020 block B150 loop 5 depth 1 header:58|LoopBegin  <||@
  Comment 2020 1570 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2020 1572 rdx|DWORD = SHL r8|DWORD size: DWORD  <||@
  Comment 2025 1574 rdx|DWORD = LEA [rdx|DWORD + 2] size: DWORD  <||@
  Comment 2028 1576 rcx|DWORD = SUB (x: rdx|DWORD, ~y: r9|DWORD) size: DWORD  <||@
  Comment 2033 1578 TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 2035 1580 rdx|DWORD = CMOVE (falseValue: rdx|DWORD, ~trueValue: r9|DWORD) condition: <  <||@
  Comment 2039 1582 CMP rdx|DWORD y: 1 size: DWORD  <||@
  Comment 2042 1584 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B150 -> B151 falseDestination: B150 -> B152  <||@
  Comment 2048 block B152 loop 5 depth 1 header:58|LoopBegin  <||@
  Comment 2048 1594 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2048 1596 rcx|DWORD = MOVE input: int[2147483639|0x7ffffff7]  <||@
  Comment 2053 1598 rcx|DWORD = SUB (x: rcx|DWORD, ~y: rdx|DWORD) size: DWORD  <||@
  Comment 2055 1600 TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 2057 1602 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B152 -> B153 falseDestination: B152 -> B154  <||@
  Comment 2063 block B154 loop 5 depth 1 header:58|LoopBegin  <||@
  Comment 2063 1612 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2063 1614 CMP (x: rdx|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 2066 1616 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B154 -> B155 falseDestination: B154 -> B202  <||@
  Comment 2072 block B155 loop 5 depth 1 header:58|LoopBegin  <||@
  Comment 2072 1618 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2072 1620 rcx|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 2076 1622 rdi|QWORD = MOV [r15|QWORD + 112] size: QWORD  <||@
  Comment 2080 1624 CMP rdx|DWORD y: 16777215 size: DWORD  <||@
  Comment 2086 1626 BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B155 -> B156 falseDestination: B155 -> B160  <||@
  Comment 2092 block B156 loop 5 depth 1 header:58|LoopBegin  <||@
  Comment 2092 1628 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2092 1630 rax|DWORD = SHL rdx|DWORD size: DWORD  <||@
  Comment 2096 1632 rax|DWORD = LEA [rax|DWORD + 23] size: DWORD  <||@
  Comment 2099 1634 rax|DWORD = AND rax|DWORD y: -8 size: DWORD  <||@
  Comment 2102 1636 rax|QWORD = MOVSXD rax|DWORD size: QWORD  <||@
  Comment 2105 1638 rbp|QWORD = ADD (x: rax|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 2111 1640 CMP (x: rbp|QWORD, y: rdi|QWORD) size: QWORD  <||@
  Comment 2114 1642 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B156 -> B160 falseDestination: B156 -> B158  <||@
  Comment 2120 block B158 loop 5 depth 1 header:58|LoopBegin  <||@
  Comment 2120 1658 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2120 1660 MOV (x: [r15|QWORD + 96], y: rbp|QWORD) size: QWORD  <||@
  Comment 2124 1662 AMD64PREFETCH ~[rax|QWORD + rcx|QWORD * 1 + 192] instr: 0  <||@
  Comment 2132 1664 AMD64PREFETCH ~[rax|QWORD + rcx|QWORD * 1 + 256] instr: 0  <||@
  Comment 2140 1666 AMD64PREFETCH ~[rax|QWORD + rcx|QWORD * 1 + 320] instr: 0  <||@
  Comment 2148 1668 AMD64PREFETCH ~[rax|QWORD + rcx|QWORD * 1 + 384] instr: 0  <||@
  Comment 2156 1670 MOV (x: [rcx|QWORD + 12], y: rdx|DWORD) size: DWORD  <||@
  Comment 2159 1672 MOV [rcx|QWORD] y: 1 size: QWORD  <||@
  Comment 2166 1674 MOV [rcx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed}  <||@
  Comment 2166 {meta{HotSpotType<[C, resolved>;compressed}}  <||@
  Comment 2173 1676 rcx|QWORD[.] = MOVE rcx|QWORD moveKind: QWORD  <||@
  Comment 2173 1678 rax|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 2176 1680 r13|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 2179 1682 stack:36|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 2183 1684 stack:80|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 2188 1686 stack:60|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 2193 1688 stack:120|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 2198 1690 r14|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 2201 1692 JUMP ~[] destination: B158 -> B161  <||@
  Comment 2201 block B161 loop 5 depth 1 header:58|LoopBegin  <||@
  Comment 2201 1728 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2201 1730 CMP (x: r13|DWORD, y: r14|DWORD) size: DWORD  <||@
  Comment 2204 1732 rdx|DWORD = CMOVE (falseValue: r13|DWORD, ~trueValue: r14|DWORD) condition: >  <||@
  Comment 2211 1734 rsi|QWORD = MOVSXD rdx|DWORD size: QWORD  <||@
  Comment 2214 1736 CMP rsi|QWORD y: 1 size: QWORD  <||@
  Comment 2218 1738 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B161 -> B180 falseDestination: B161 -> B163  <||@
  Comment 2224 block B163 loop 5 depth 1 header:58|LoopBegin  <||@
  Comment 2224 1744 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2224 1746 r10|QWORD[.] = MOVE stack:120|QWORD[.] moveKind: QWORD  <||@
  Comment 2229 1748 rdx|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD  <||@
  Comment 2233 1750 r10|QWORD[.] = LEA [r10|QWORD[.] + 16] size: QWORD  <||@
  Comment 2237 1752 r11|QWORD = LEA [rsi|QWORD - 16] size: QWORD  <||@
  Comment 2241 1754 TEST (x: r11|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 2244 1760 r8|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 2251 1756 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B163 -> B168 falseDestination: B163 -> B166  <||@
  Comment 2257 block B168 loop 5 depth 1 header:58|LoopBegin  <||@
  Comment 2257 1786 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2257 1788 r11|QWORD = LEA [rsi|QWORD - 8] size: QWORD  <||@
  Comment 2261 1790 CMP (x: r8|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 2264 1792 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B168 -> B171 falseDestination: B168 -> B170  <||@
  Comment 2270 block B170 loop 5 depth 1 header:58|LoopBegin  <||@
  Comment 2270 1798 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2270 1800 xmm0|V128_WORD = H [r10|QWORD[.] + r8|QWORD * 2] nZ: XMM oh: VMOVDQU  <||@
  Comment 2276 1802 J (address: [rdx|QWORD[.] + r8|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU  <||@
  Comment 2282 1804 r11|QWORD = LEA [r8|QWORD + 8] size: QWORD  <||@
  Comment 2286 1806 r8|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 2289 1808 JUMP ~[] destination: B170 -> B171  <||@
  Comment 2289 block B171 loop 5 depth 1 header:58|LoopBegin  <||@
  Comment 2289 1810 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2289 1812 r11|QWORD = LEA [rsi|QWORD - 4] size: QWORD  <||@
  Comment 2293 1814 CMP (x: r8|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 2296 1816 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B171 -> B174 falseDestination: B171 -> B173  <||@
  Comment 2302 block B173 loop 5 depth 1 header:58|LoopBegin  <||@
  Comment 2302 1822 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2302 1824 xmm0|V64_WORD = H [r10|QWORD[.] + r8|QWORD * 2] nZ: XMM oh: VMOVQ  <||@
  Comment 2308 1826 J (address: [rdx|QWORD[.] + r8|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ  <||@
  Comment 2314 1828 r11|QWORD = LEA [r8|QWORD + 4] size: QWORD  <||@
  Comment 2318 1830 r8|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 2321 1832 JUMP ~[] destination: B173 -> B174  <||@
  Comment 2321 block B174 loop 5 depth 1 header:58|LoopBegin  <||@
  Comment 2321 1834 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2321 1836 r11|QWORD = LEA [rsi|QWORD - 2] size: QWORD  <||@
  Comment 2325 1838 CMP (x: r8|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 2328 1840 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B174 -> B177 falseDestination: B174 -> B176  <||@
  Comment 2334 block B176 loop 5 depth 1 header:58|LoopBegin  <||@
  Comment 2334 1846 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2334 1848 xmm0|V32_WORD = H [r10|QWORD[.] + r8|QWORD * 2] nZ: XMM oh: VMOVD  <||@
  Comment 2340 1850 J (address: [rdx|QWORD[.] + r8|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD  <||@
  Comment 2346 1852 r11|QWORD = LEA [r8|QWORD + 2] size: QWORD  <||@
  Comment 2350 1854 r8|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 2353 1856 JUMP ~[] destination: B176 -> B177  <||@
  Comment 2353 block B177 loop 5 depth 1 header:58|LoopBegin  <||@
  Comment 2353 1858 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2353 1860 r11|QWORD = DEC rsi|QWORD size: QWORD  <||@
  Comment 2359 1862 CMP (x: r8|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 2362 1864 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B177 -> B180 falseDestination: B177 -> B179  <||@
  Comment 2368 block B179 loop 5 depth 1 header:58|LoopBegin  <||@
  Comment 2368 1870 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2368 1872 r10|DWORD = MOVSX [r10|QWORD[.] + r8|QWORD * 2] size: DWORD  <||@
  Comment 2373 1874 MOV (x: [rdx|QWORD[.] + r8|QWORD * 2], y: r10|DWORD) size: WORD  <||@
  Comment 2378 1876 JUMP ~[] destination: B179 -> B180  <||@
  Comment 2378 block B180 loop 5 depth 1 header:58|LoopBegin  <||@
  Comment 2378 1878 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2378 1880 rdx|QWORD = MOVSXD r13|DWORD size: QWORD  <||@
  Comment 2381 1882 CMP (x: rdx|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 2384 1884 BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B180 -> B181 falseDestination: B180 -> B200  <||@
  Comment 2390 block B200 loop 5 depth 1 header:58|LoopBegin  <||@
  Comment 2390 2042 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2390 2034 r9|DWORD = MOVE stack:80|DWORD moveKind: DWORD  <||@
  Comment 2395 2036 rsi|DWORD = MOVE stack:60|DWORD moveKind: DWORD  <||@
  Comment 2399 2038 r11|QWORD[.] = MOVE stack:112|QWORD[.] moveKind: QWORD  <||@
  Comment 2404 2044 rdx|QWORD = MOVE input: long[4682670080|0x1171be000]  <||@
  Comment 2414 2046 r10|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@1d28dd80 encoding: base: 0 shift: 3  <||@
  Comment 2421 2048 MOV (x: [r11|QWORD[.] + 16], y: r10|DWORD[.]) size: DWORD  <||@
  Comment 2425 2050 r14|QWORD[*] = SHR r11|QWORD[.] y: 9 size: QWORD  <||@
  Comment 2432 2052 MOVB (x: [r14|QWORD[*] + rdx|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 2436 2054 MOV (x: [r11|QWORD[.] + 12], y: r9|DWORD) size: DWORD  <||@
  Comment 2440 2056 MOV [rax|QWORD[.] + rsi|DWORD * 2 + 16] y: 32 size: WORD  <||@
  Comment 2447 2058 r10|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 2450 2060 r13|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 2455 2062 r14|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 2458 2064 rsi|DWORD = MOVE stack:56|DWORD moveKind: DWORD  <||@
  Comment 2462 2066 r11|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 2465 2068 JUMP ~[] destination: B200 -> B145  <||@
  Comment 2470 block B181 loop 5 depth 1 header:58|LoopBegin  <||@
  Comment 2470 1886 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2470 1888 r10|QWORD[.] = LEA [rax|QWORD[.] + rsi|QWORD * 2 + 16] size: QWORD  <||@
  Comment 2475 1890 rdx|QWORD = SUB (x: rdx|QWORD, ~y: rsi|QWORD) size: QWORD  <||@
  Comment 2478 1892 rsi|QWORD = LEA [rdx|QWORD - 16] size: QWORD  <||@
  Comment 2482 1894 TEST (x: rsi|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 2485 1896 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B181 -> B182 falseDestination: B181 -> B183  <||@
  Comment 2491 block B182 loop 5 depth 1 header:58|LoopBegin  <||@
  Comment 2491 1898 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2491 1900 r11|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 2498 1902 JUMP ~[] destination: B182 -> B186  <||@
  Comment 2498 block B186 loop 5 depth 1 header:58|LoopBegin  <||@
  Comment 2498 1926 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2498 1928 rsi|QWORD = LEA [rdx|QWORD - 8] size: QWORD  <||@
  Comment 2502 1930 CMP (x: r11|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 2505 1932 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B186 -> B189 falseDestination: B186 -> B188  <||@
  Comment 2511 block B188 loop 5 depth 1 header:58|LoopBegin  <||@
  Comment 2511 1938 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2511 1940 xmm0|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0>  <||@
  Comment 2515 1942 J (address: [r10|QWORD[.] + r11|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU  <||@
  Comment 2521 1944 rsi|QWORD = LEA [r11|QWORD + 8] size: QWORD  <||@
  Comment 2525 1946 r11|QWORD = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 2528 1948 JUMP ~[] destination: B188 -> B189  <||@
  Comment 2528 block B189 loop 5 depth 1 header:58|LoopBegin  <||@
  Comment 2528 1950 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2528 1952 rsi|QWORD = LEA [rdx|QWORD - 4] size: QWORD  <||@
  Comment 2532 1954 CMP (x: r11|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 2535 1956 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B189 -> B192 falseDestination: B189 -> B191  <||@
  Comment 2541 block B191 loop 5 depth 1 header:58|LoopBegin  <||@
  Comment 2541 1962 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2541 1964 xmm0|V64_WORD = L oc: SIMD<0,0,0,0>  <||@
  Comment 2545 1966 J (address: [r10|QWORD[.] + r11|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ  <||@
  Comment 2551 1968 rsi|QWORD = LEA [r11|QWORD + 4] size: QWORD  <||@
  Comment 2555 1970 r11|QWORD = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 2558 1972 JUMP ~[] destination: B191 -> B192  <||@
  Comment 2558 block B192 loop 5 depth 1 header:58|LoopBegin  <||@
  Comment 2558 1974 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2558 1976 rsi|QWORD = LEA [rdx|QWORD - 2] size: QWORD  <||@
  Comment 2562 1978 CMP (x: r11|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 2565 1980 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B192 -> B195 falseDestination: B192 -> B194  <||@
  Comment 2571 block B194 loop 5 depth 1 header:58|LoopBegin  <||@
  Comment 2571 1986 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2571 1988 xmm0|V32_WORD = L oc: SIMD<0,0>  <||@
  Comment 2575 1990 J (address: [r10|QWORD[.] + r11|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD  <||@
  Comment 2581 1992 rsi|QWORD = LEA [r11|QWORD + 2] size: QWORD  <||@
  Comment 2585 1994 r11|QWORD = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 2588 1996 JUMP ~[] destination: B194 -> B195  <||@
  Comment 2588 block B195 loop 5 depth 1 header:58|LoopBegin  <||@
  Comment 2588 1998 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2588 2000 rdx|QWORD = DEC rdx|QWORD size: QWORD  <||@
  Comment 2591 2002 CMP (x: r11|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 2594 2004 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B195 -> B200 falseDestination: B195 -> B197  <||@
  Comment 2600 block B197 loop 5 depth 1 header:58|LoopBegin  <||@
  Comment 2600 2016 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2600 2018 MOV (x: [r10|QWORD[.] + r11|QWORD * 2], y: r12|ILLEGAL) size: WORD  <||@
  Comment 2605 2026 JUMP ~[] destination: B197 -> B200  <||@
  Comment 2610 block B166 loop 6 depth 2 outer 5 header:1980|LoopBegin  <||@
  Comment 2610 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 2624 1772 xmm0|V256_WORD = H [r10|QWORD[.] + r8|QWORD * 2] nZ: YMM oh: VMOVDQU  <||@
  Comment 2630 1774 J (address: [rdx|QWORD[.] + r8|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU  <||@
  Comment 2636 1776 r8|QWORD = LEA [r8|QWORD + 16] size: QWORD  <||@
  Comment 2640 1778 CMP (x: r8|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 2643 1780 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B166 -> B168 falseDestination: B166 -> B166  <||@
  Comment 2650 block B183 loop 5 depth 1 header:58|LoopBegin  <||@
  Comment 2650 1904 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2650 1906 xmm0|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>  <||@
  Comment 2654 1908 r11|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 2661 1910 JUMP ~[] destination: B183 -> B184  <||@
  Comment 2661 block B184 loop 7 depth 2 outer 5 header:2044|LoopBegin  <||@
  Comment 2661 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 2672 1914 J (address: [r10|QWORD[.] + r11|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU  <||@
  Comment 2678 1916 r11|QWORD = LEA [r11|QWORD + 16] size: QWORD  <||@
  Comment 2682 1918 CMP (x: r11|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 2685 1920 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B184 -> B186 falseDestination: B184 -> B184  <||@
  Comment 2692 block B160 loop 5 depth 1 header:58|LoopBegin  <||@
  Comment 2692 1708 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2692 1696 stack:36|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 2696 1698 stack:80|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 2701 1700 stack:60|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 2706 1702 stack:120|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 2711 1704 stack:124|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 2716 1710 rcx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>}  <||@
  Comment 2716 {meta{HotSpotType<[C, resolved>}}  <||@
  Comment 2726 1712 rsi|QWORD = MOVE rcx|QWORD moveKind: QWORD  <||@
  Comment 2729 1714 rax|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 2731 1718 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 2736 1720 r14|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 2739 1722 r13|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 2742 1724 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:80]  <||@
  Comment 2742 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 2747 [stack:8, stack:16]at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2926) [bci: 80, duringCall: false, rethrow: false]
              |0  |1  |2                   |3  |4               |5               
     locals:  |-  |-  |stack:112|QWORD[.]  |-  |stack:56|DWORD  |stack:124|DWORD   <||@
  Comment 2748 1726 JUMP ~[] destination: B160 -> B161  <||@
  Comment 2753 block B204 null  <||@
  Comment 2753 2090 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2753 2092 stack:88|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 2758 2094 r14|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 2761 2096 r13|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 2764 2098 JUMP ~[] destination: B204 -> B206  <||@
  Comment 2769 block B244 null  <||@
  Comment 2769 2468 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2769 2470 xmm0|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>  <||@
  Comment 2773 2472 r10|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 2780 2474 JUMP ~[] destination: B244 -> B245  <||@
  Comment 2780 block B245 loop 9 depth 1 header:2170|LoopBegin  <||@
  Comment 2780 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 2784 2478 J (address: [rcx|QWORD[.] + r10|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU  <||@
  Comment 2790 2480 r10|QWORD = LEA [r10|QWORD + 16] size: QWORD  <||@
  Comment 2794 2482 CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 2797 2484 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B245 -> B247 falseDestination: B245 -> B245  <||@
  Comment 2804 block B227 loop 8 depth 1 header:2107|LoopBegin  <||@
  Comment 2804 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 2816 2336 xmm0|V256_WORD = H [rcx|QWORD[.] + r11|QWORD * 2] nZ: YMM oh: VMOVDQU  <||@
  Comment 2822 2338 J (address: [rdx|QWORD[.] + r11|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU  <||@
  Comment 2828 2340 r11|QWORD = LEA [r11|QWORD + 16] size: QWORD  <||@
  Comment 2832 2342 CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 2835 2344 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B227 -> B229 falseDestination: B227 -> B227  <||@
  Comment 2842 block B207 null  <||@
  Comment 2842 2118 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2842 2120 TEST (x: r14|DWORD, y: r14|DWORD) size: DWORD  <||@
  Comment 2845 2122 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B207 -> B208 falseDestination: B207 -> B209  <||@
  Comment 2851 block B209 null  <||@
  Comment 2851 2132 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2851 2134 rax|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 2855 2136 rsi|QWORD = LEA [rax|QWORD + 24] size: QWORD  <||@
  Comment 2859 2138 CMP (x: rsi|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 2863 2140 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B209 -> B210 falseDestination: B209 -> B211  <||@
  Comment 2869 block B211 null  <||@
  Comment 2869 2160 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2869 2162 MOV (x: [r15|QWORD + 96], y: rsi|QWORD) size: QWORD  <||@
  Comment 2873 2164 AMD64PREFETCH ~[rax|QWORD + 216] instr: 0  <||@
  Comment 2880 2166 rax|QWORD[*] = MOVE rax|QWORD moveKind: QWORD  <||@
  Comment 2880 2168 JUMP ~[] destination: B211 -> B212  <||@
  Comment 2880 block B212 null  <||@
  Comment 2880 2170 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2880 2172 rsi|QWORD[.] = MOVE rax|QWORD[*] moveKind: QWORD  <||@
  Comment 2883 2174 rdx|QWORD = MOV [r10|QWORD + 168] size: QWORD  <||@
  Comment 2890 2176 MOV (x: [rax|QWORD[*]], y: rdx|QWORD) size: QWORD  <||@
  Comment 2893 2178 MOV [rax|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}  <||@
  Comment 2893 {meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}}  <||@
  Comment 2900 2180 MOV [rax|QWORD[*] + 12] y: -559030611 size: DWORD c: NarrowOop[char[0]{}]  <||@
  Comment 2900 {NarrowOop[char[0]{}]}  <||@
  Comment 2907 2182 MOV (x: [rax|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 2911 2184 rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 2914 2186 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 2923 12  <||@
  Comment 2933 block B221 null  <||@
  Comment 2933 2278 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2933 2274 stack:72|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 2938 2280 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>}  <||@
  Comment 2938 {meta{HotSpotType<[C, resolved>}}  <||@
  Comment 2948 2282 rdx|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 2951 2284 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 2956 2286 r13|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 2959 2288 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:100]  <||@
  Comment 2959 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 2964 [stack:40, stack:56]at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2927) [bci: 100, duringCall: false, rethrow: false]
              |0  |1  |2                  |3  |4  |5 
     locals:  |-  |-  |stack:88|QWORD[.]  |-  |-  |-   <||@
  Comment 2965 2290 JUMP ~[] destination: B221 -> B222  <||@
  Comment 2970 block B84 null  <||@
  Comment 2970 912 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2970 914 r14|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 2973 916 r10|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 2978 918 r13|QWORD = MOVE rbx|QWORD moveKind: QWORD  <||@
  Comment 2981 920 stack:36|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 2986 922 rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 2990 924 rdx|QWORD = LEA [rsi|QWORD + 24] size: QWORD  <||@
  Comment 2994 926 CMP (x: rdx|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 2998 928 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B84 -> B85 falseDestination: B84 -> B86  <||@
  Comment 3004 block B86 null  <||@
  Comment 3004 954 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3004 956 MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD  <||@
  Comment 3008 958 AMD64PREFETCH ~[rsi|QWORD + 216] instr: 0  <||@
  Comment 3015 960 rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 3015 962 stack:96|QWORD = MOVE r8|QWORD moveKind: QWORD  <||@
  Comment 3020 964 r10|DWORD = MOVE stack:76|DWORD moveKind: DWORD  <||@
  Comment 3025 966 JUMP ~[] destination: B86 -> B87  <||@
  Comment 3025 block B87 null  <||@
  Comment 3025 968 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 3025 970 rdi|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD  <||@
  Comment 3028 972 stack:104|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD  <||@
  Comment 3033 974 rax|QWORD = MOV [r13|QWORD + 168] size: QWORD  <||@
  Comment 3040 976 MOV (x: [rsi|QWORD[*]], y: rax|QWORD) size: QWORD  <||@
  Comment 3043 978 MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed}  <||@
  Comment 3043 {meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed}}  <||@
  Comment 3050 980 MOV (x: [rsi|QWORD[*] + 12], y: r10|DWORD) size: DWORD  <||@
  Comment 3054 982 MOV (x: [rsi|QWORD[*] + 16], y: r9|DWORD[.]) size: DWORD  <||@
  Comment 3058 984 rsi|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD  <||@
  Comment 3061 986 rdx|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 3064 988 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractStringBuilder.newCapacity(int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:17, 21, 2, 69]  <||@
  Comment 3064 9  <||@
  Comment 3071 {HotSpotMethod<AbstractStringBuilder.newCapacity(int)>}  <||@
  Comment 3076 [stack:24, stack:56, stack:96]at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17, duringCall: true, rethrow: false]
              |0                   |1                 
     locals:  |-                   |-                 
     stack:   |stack:104|QWORD[.]  |stack:72|QWORD[.] 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21, duringCall: true, rethrow: false]
              |0                   |1                  |2              
     locals:  |stack:104|QWORD[.]  |stack:32|QWORD[.]  |stack:40|DWORD 
  at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2, duringCall: true, rethrow: false]
              |0                   |1 
     locals:  |stack:104|QWORD[.]  |- 
  at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2924) [bci: 69, duringCall: true, rethrow: false]
              |0  |1  |2                   |3               |4               |5 
     locals:  |-  |-  |stack:104|QWORD[.]  |stack:52|DWORD  |stack:56|DWORD  |-   <||@
  Comment 3077 990 r13|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 3080 992 rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 3085 994 r14|DWORD[.] = MOV [rdx|QWORD[.] + 12] size: DWORD  <||@
  Comment 3089 996 r10|DWORD = MOVE stack:40|DWORD moveKind: DWORD  <||@
  Comment 3094 998 CMP (x: r10|DWORD, y: [r14|DWORD[.] * 8 + 12]) size: DWORD state [bci:20, 21, 2, 69]  <||@
  Comment 3094 [rdx:0, r14:0, stack:24, stack:56, stack:96]at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20, duringCall: false, rethrow: false]
              |0                   |1                  |2         
     locals:  |-                   |-                  |          
     stack:   |stack:104|QWORD[.]  |stack:72|QWORD[.]  |r13|DWORD 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21, duringCall: true, rethrow: false]
              |0                   |1             |2         
     locals:  |stack:104|QWORD[.]  |rdx|QWORD[.]  |r10|DWORD 
  at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2, duringCall: true, rethrow: false]
              |0                   |1 
     locals:  |stack:104|QWORD[.]  |- 
  at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2924) [bci: 69, duringCall: true, rethrow: false]
              |0  |1  |2                   |3               |4               |5 
     locals:  |-  |-  |stack:104|QWORD[.]  |stack:52|DWORD  |stack:56|DWORD  |-   <||@
  Comment 3094 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 3102 1000 BRANCH trueDestinationProbability: 0.0 condition: |>| trueDestination: B87 -> B88 falseDestination: B87 -> B89  <||@
  Comment 3108 block B89 null  <||@
  Comment 3108 1012 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3108 1014 TEST (x: r13|DWORD, y: r13|DWORD) size: DWORD  <||@
  Comment 3111 1016 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B89 -> B90 falseDestination: B89 -> B92  <||@
  Comment 3117 block B92 null  <||@
  Comment 3117 1036 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3117 1038 r11|QWORD = MOVE input: long[4682670080|0x1171be000]  <||@
  Comment 3127 1040 rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 3131 1042 rcx|QWORD = MOV [r15|QWORD + 112] size: QWORD  <||@
  Comment 3135 1044 CMP r13|DWORD y: 16777215 size: DWORD  <||@
  Comment 3142 1046 BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B92 -> B93 falseDestination: B92 -> B97  <||@
  Comment 3148 block B93 null  <||@
  Comment 3148 1048 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3148 1050 r8|DWORD = SHL r13|DWORD size: DWORD  <||@
  Comment 3154 1052 r8|DWORD = LEA [r8|DWORD + 23] size: DWORD  <||@
  Comment 3158 1054 r8|DWORD = AND r8|DWORD y: -8 size: DWORD  <||@
  Comment 3162 1056 r8|QWORD = MOVSXD r8|DWORD size: QWORD  <||@
  Comment 3165 1058 r9|QWORD = ADD (x: r8|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 3171 1060 CMP (x: r9|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 3174 1062 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B93 -> B97 falseDestination: B93 -> B95  <||@
  Comment 3180 block B95 null  <||@
  Comment 3180 1070 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3180 1072 MOV (x: [r15|QWORD + 96], y: r9|QWORD) size: QWORD  <||@
  Comment 3184 1074 AMD64PREFETCH ~[r8|QWORD + rsi|QWORD * 1 + 192] instr: 0  <||@
  Comment 3193 1076 AMD64PREFETCH ~[r8|QWORD + rsi|QWORD * 1 + 256] instr: 0  <||@
  Comment 3202 1078 AMD64PREFETCH ~[r8|QWORD + rsi|QWORD * 1 + 320] instr: 0  <||@
  Comment 3211 1080 AMD64PREFETCH ~[r8|QWORD + rsi|QWORD * 1 + 384] instr: 0  <||@
  Comment 3220 1082 MOV (x: [rsi|QWORD + 12], y: r13|DWORD) size: DWORD  <||@
  Comment 3224 1084 MOV [rsi|QWORD] y: 1 size: QWORD  <||@
  Comment 3231 1086 MOV [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed}  <||@
  Comment 3231 {meta{HotSpotType<[C, resolved>;compressed}}  <||@
  Comment 3238 1088 rsi|QWORD[.] = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 3238 1090 rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 3241 1092 stack:76|DWORD[.] = MOVE r14|DWORD[.] moveKind: DWORD  <||@
  Comment 3246 1094 r14|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 3249 1098 JUMP ~[] destination: B95 -> B98  <||@
  Comment 3249 block B98 null  <||@
  Comment 3249 1122 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 3249 1096 r11|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 3254 1124 CMP (x: r13|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 3257 1126 rdi|DWORD = CMOVE (falseValue: r13|DWORD, ~trueValue: r11|DWORD) condition: >  <||@
  Comment 3264 1128 rdi|QWORD = MOVSXD rdi|DWORD size: QWORD  <||@
  Comment 3267 1130 CMP rdi|QWORD y: 1 size: QWORD  <||@
  Comment 3271 1132 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B98 -> B117 falseDestination: B98 -> B100  <||@
  Comment 3277 block B100 null  <||@
  Comment 3277 1138 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3277 1140 r10|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 3282 1142 rsi|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD  <||@
  Comment 3286 1144 rdx|QWORD[.] = LEA [r10|QWORD[.] + 16] size: QWORD  <||@
  Comment 3290 1146 r10|QWORD = LEA [rdi|QWORD - 16] size: QWORD  <||@
  Comment 3294 1148 TEST (x: r10|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 3297 1154 r11|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 3304 1150 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B100 -> B105 falseDestination: B100 -> B103  <||@
  Comment 3310 block B105 null  <||@
  Comment 3310 1180 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 3310 1182 r10|QWORD = LEA [rdi|QWORD - 8] size: QWORD  <||@
  Comment 3314 1184 CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 3317 1186 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B105 -> B108 falseDestination: B105 -> B107  <||@
  Comment 3323 block B107 null  <||@
  Comment 3323 1192 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3323 1194 xmm0|V128_WORD = H [rdx|QWORD[.] + r11|QWORD * 2] nZ: XMM oh: VMOVDQU  <||@
  Comment 3329 1196 J (address: [rsi|QWORD[.] + r11|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU  <||@
  Comment 3335 1198 r10|QWORD = LEA [r11|QWORD + 8] size: QWORD  <||@
  Comment 3339 1200 r11|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 3342 1202 JUMP ~[] destination: B107 -> B108  <||@
  Comment 3342 block B108 null  <||@
  Comment 3342 1204 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 3342 1206 r10|QWORD = LEA [rdi|QWORD - 4] size: QWORD  <||@
  Comment 3346 1208 CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 3349 1210 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B108 -> B111 falseDestination: B108 -> B110  <||@
  Comment 3355 block B110 null  <||@
  Comment 3355 1216 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3355 1218 xmm0|V64_WORD = H [rdx|QWORD[.] + r11|QWORD * 2] nZ: XMM oh: VMOVQ  <||@
  Comment 3361 1220 J (address: [rsi|QWORD[.] + r11|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ  <||@
  Comment 3367 1222 r10|QWORD = LEA [r11|QWORD + 4] size: QWORD  <||@
  Comment 3371 1224 r11|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 3374 1226 JUMP ~[] destination: B110 -> B111  <||@
  Comment 3374 block B111 null  <||@
  Comment 3374 1228 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 3374 1230 r10|QWORD = LEA [rdi|QWORD - 2] size: QWORD  <||@
  Comment 3378 1232 CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 3381 1234 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B111 -> B114 falseDestination: B111 -> B113  <||@
  Comment 3387 block B113 null  <||@
  Comment 3387 1240 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3387 1242 xmm0|V32_WORD = H [rdx|QWORD[.] + r11|QWORD * 2] nZ: XMM oh: VMOVD  <||@
  Comment 3393 1244 J (address: [rsi|QWORD[.] + r11|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD  <||@
  Comment 3399 1246 r10|QWORD = LEA [r11|QWORD + 2] size: QWORD  <||@
  Comment 3403 1248 r11|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 3406 1250 JUMP ~[] destination: B113 -> B114  <||@
  Comment 3406 block B114 null  <||@
  Comment 3406 1252 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 3406 1254 r10|QWORD = DEC rdi|QWORD size: QWORD  <||@
  Comment 3412 1256 CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 3415 1258 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B114 -> B117 falseDestination: B114 -> B116  <||@
  Comment 3421 block B116 null  <||@
  Comment 3421 1264 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3421 1266 rdx|DWORD = MOVSX [rdx|QWORD[.] + r11|QWORD * 2] size: DWORD  <||@
  Comment 3426 1268 MOV (x: [rsi|QWORD[.] + r11|QWORD * 2], y: rdx|DWORD) size: WORD  <||@
  Comment 3431 1270 JUMP ~[] destination: B116 -> B117  <||@
  Comment 3431 block B117 null  <||@
  Comment 3431 1272 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3431 1274 rsi|QWORD = MOVSXD r13|DWORD size: QWORD  <||@
  Comment 3434 1276 CMP (x: rsi|QWORD, y: rdi|QWORD) size: QWORD  <||@
  Comment 3437 1278 BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B117 -> B118 falseDestination: B117 -> B137  <||@
  Comment 3443 block B137 null  <||@
  Comment 3443 1424 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3443 1420 rdi|QWORD[.] = MOVE stack:104|QWORD[.] moveKind: QWORD  <||@
  Comment 3448 1426 rsi|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@1d28dd80 encoding: base: 0 shift: 3  <||@
  Comment 3455 1428 MOV (x: [rdi|QWORD[.] + 16], y: rsi|DWORD[.]) size: DWORD  <||@
  Comment 3458 1430 rsi|QWORD[*] = SHR rdi|QWORD[.] y: 9 size: QWORD  <||@
  Comment 3465 1432 MOVB (x: [rsi|QWORD[*] + r14|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 3469 1434 r10|DWORD = MOV [rdi|QWORD[.] + 12] size: DWORD  <||@
  Comment 3473 1436 TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 3476 1438 BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B137 -> B141 falseDestination: B137 -> B139  <||@
  Comment 3482 block B139 null  <||@
  Comment 3482 1444 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3482 1446 r13|DWORD = SUB (x: r13|DWORD, ~y: stack:40|DWORD) size: DWORD  <||@
  Comment 3487 1448 CMP (x: r10|DWORD, y: r13|DWORD) size: DWORD  <||@
  Comment 3490 1450 BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B139 -> B141 falseDestination: B139 -> B142  <||@
  Comment 3496 block B142 null  <||@
  Comment 3496 1464 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3496 1466 r11|DWORD[.] = MOVE stack:76|DWORD[.] moveKind: DWORD  <||@
  Comment 3501 1468 r14|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@1d28dd80 encoding: base: 0 shift: 3  <||@
  Comment 3508 1470 r14|QWORD[*] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 3508 1472 rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 3511 1474 rdx|QWORD = MOVSXD r10|DWORD size: QWORD  <||@
  Comment 3514 1476 rdi|QWORD = LEA [r14|QWORD[*] + 16] size: QWORD  <||@
  Comment 3518 1478 rsi|QWORD = LEA [rsi|QWORD[*] + rdx|QWORD * 2 + 16] size: QWORD  <||@
  Comment 3523 1480 rdx|QWORD = MOVE stack:96|QWORD moveKind: QWORD  <||@
  Comment 3528 1482 stack:72|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 3533 1484 stack:36|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 3538 1486 - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charArraycopy(Word,Word,Word)void@0x106812d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL  <||@
  Comment 3538 {Field[name=StubRoutines::_jshort_arraycopy, type=address, offset=0, address=0x105a7dc78, value=0x106812d40]:0x106812d40}  <||@
  Comment 3544 1488 r10|DWORD = ADD (x: stack:40|DWORD, y: stack:36|DWORD) size: DWORD  <||@
  Comment 3554 1490 rdi|QWORD[.] = MOVE stack:104|QWORD[.] moveKind: QWORD  <||@
  Comment 3559 1492 MOV (x: [rdi|QWORD[.] + 12], y: r10|DWORD) size: DWORD  <||@
  Comment 3563 1494 r9|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 3568 1496 CMP (x: r9|DWORD, y: stack:48|DWORD) size: DWORD  <||@
  Comment 3573 1498 BRANCH trueDestinationProbability: 0.18579515065073993 condition: = trueDestination: B142 -> B143 falseDestination: B142 -> B205  <||@
  Comment 3579 block B205 null  <||@
  Comment 3579 2100 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3579 2102 stack:88|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD  <||@
  Comment 3584 2104 r14|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 3587 2106 r13|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 3592 2108 JUMP ~[] destination: B205 -> B206  <||@
  Comment 3597 block B118 null  <||@
  Comment 3597 1280 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3597 1282 rdx|QWORD[.] = LEA [rax|QWORD[.] + rdi|QWORD * 2 + 16] size: QWORD  <||@
  Comment 3602 1284 rsi|QWORD = SUB (x: rsi|QWORD, ~y: rdi|QWORD) size: QWORD  <||@
  Comment 3605 1286 rdi|QWORD = LEA [rsi|QWORD - 16] size: QWORD  <||@
  Comment 3609 1288 TEST (x: rdi|QWORD, y: rdi|QWORD) size: QWORD  <||@
  Comment 3612 1290 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B118 -> B119 falseDestination: B118 -> B120  <||@
  Comment 3618 block B119 null  <||@
  Comment 3618 1292 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3618 1294 r10|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 3625 1296 JUMP ~[] destination: B119 -> B123  <||@
  Comment 3625 block B123 null  <||@
  Comment 3625 1320 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 3625 1322 rdi|QWORD = LEA [rsi|QWORD - 8] size: QWORD  <||@
  Comment 3629 1324 CMP (x: r10|QWORD, y: rdi|QWORD) size: QWORD  <||@
  Comment 3632 1326 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B123 -> B126 falseDestination: B123 -> B125  <||@
  Comment 3638 block B125 null  <||@
  Comment 3638 1332 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3638 1334 xmm0|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0>  <||@
  Comment 3642 1336 J (address: [rdx|QWORD[.] + r10|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU  <||@
  Comment 3648 1338 rdi|QWORD = LEA [r10|QWORD + 8] size: QWORD  <||@
  Comment 3652 1340 r10|QWORD = MOVE rdi|QWORD moveKind: QWORD  <||@
  Comment 3655 1342 JUMP ~[] destination: B125 -> B126  <||@
  Comment 3655 block B126 null  <||@
  Comment 3655 1344 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 3655 1346 rdi|QWORD = LEA [rsi|QWORD - 4] size: QWORD  <||@
  Comment 3659 1348 CMP (x: r10|QWORD, y: rdi|QWORD) size: QWORD  <||@
  Comment 3662 1350 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B126 -> B129 falseDestination: B126 -> B128  <||@
  Comment 3668 block B128 null  <||@
  Comment 3668 1356 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3668 1358 xmm0|V64_WORD = L oc: SIMD<0,0,0,0>  <||@
  Comment 3672 1360 J (address: [rdx|QWORD[.] + r10|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ  <||@
  Comment 3678 1362 rdi|QWORD = LEA [r10|QWORD + 4] size: QWORD  <||@
  Comment 3682 1364 r10|QWORD = MOVE rdi|QWORD moveKind: QWORD  <||@
  Comment 3685 1366 JUMP ~[] destination: B128 -> B129  <||@
  Comment 3685 block B129 null  <||@
  Comment 3685 1368 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 3685 1370 rdi|QWORD = LEA [rsi|QWORD - 2] size: QWORD  <||@
  Comment 3689 1372 CMP (x: r10|QWORD, y: rdi|QWORD) size: QWORD  <||@
  Comment 3692 1374 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B129 -> B132 falseDestination: B129 -> B131  <||@
  Comment 3698 block B131 null  <||@
  Comment 3698 1380 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3698 1382 xmm0|V32_WORD = L oc: SIMD<0,0>  <||@
  Comment 3702 1384 J (address: [rdx|QWORD[.] + r10|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD  <||@
  Comment 3708 1386 rdi|QWORD = LEA [r10|QWORD + 2] size: QWORD  <||@
  Comment 3712 1388 r10|QWORD = MOVE rdi|QWORD moveKind: QWORD  <||@
  Comment 3715 1390 JUMP ~[] destination: B131 -> B132  <||@
  Comment 3715 block B132 null  <||@
  Comment 3715 1392 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 3715 1394 rsi|QWORD = DEC rsi|QWORD size: QWORD  <||@
  Comment 3718 1396 CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 3721 1398 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B132 -> B137 falseDestination: B132 -> B134  <||@
  Comment 3727 block B134 null  <||@
  Comment 3727 1406 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3727 1408 MOV (x: [rdx|QWORD[.] + r10|QWORD * 2], y: r12|ILLEGAL) size: WORD  <||@
  Comment 3732 1412 JUMP ~[] destination: B134 -> B137  <||@
  Comment 3737 block B143 null  <||@
  Comment 3737 1500 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3737 1502 r14|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD  <||@
  Comment 3740 1504 r13|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 3745 1506 rcx|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 3748 1508 JUMP ~[] destination: B143 -> B144  <||@
  Comment 3753 block B10 null  <||@
  Comment 3753 144 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3753 146 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 3753 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 3763 148 rdx|DWORD = MOVE input: int[8|0x8]  <||@
  Comment 3768 150 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 3773 152 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0]  <||@
  Comment 3773 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 3778 [r13:0, stack:92, stack:96]at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2917) [bci: 0, duringCall: false, rethrow: false]
              |0             |1                  |2  |3  |4  |5 
     locals:  |r13|QWORD[.]  |stack:32|QWORD[.]  |-  |-  |-  |-   <||@
  Comment 3779 154 r13|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 3782 156 rsi|DWORD = MOVE stack:56|DWORD moveKind: DWORD  <||@
  Comment 3786 158 rbx|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 3790 160 rcx|DWORD = MOVE stack:48|DWORD moveKind: DWORD  <||@
  Comment 3794 162 r9|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 3799 164 r10|DWORD = MOVE stack:40|DWORD moveKind: DWORD  <||@
  Comment 3804 166 r14|DWORD[.] = MOVE stack:36|DWORD[.] moveKind: DWORD  <||@
  Comment 3809 168 rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 3814 170 JUMP ~[] destination: B10 -> B12  <||@
  Comment 3819 block B79 null  <||@
  Comment 3819 836 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3819 838 r13|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>}  <||@
  Comment 3819 {meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>}}  <||@
  Comment 3829 840 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 3829 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 3839 842 rdx|DWORD = MOVE input: int[2|0x2]  <||@
  Comment 3844 844 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 3849 846 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:61, 35, 2, 69]  <||@
  Comment 3849 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 3854 [stack:56, stack:68]at java.lang.String.getChars(String.java:827) [bci: 61, duringCall: false, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |- 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35, duringCall: true, rethrow: false]
              |0                                                                      |1  |2              
     locals:  |vobject:StringBuilder:0{count=stack:76|DWORD,value=stack:72|QWORD[.]}  |-  |stack:40|DWORD 
  at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2, duringCall: true, rethrow: false]
              |0                                                                      |1 
     locals:  |vobject:StringBuilder:0{count=stack:76|DWORD,value=stack:72|QWORD[.]}  |- 
  at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2924) [bci: 69, duringCall: true, rethrow: false]
              |0  |1  |2                                                                      |3               |4               |5 
     locals:  |-  |-  |vobject:StringBuilder:0{count=stack:76|DWORD,value=stack:72|QWORD[.]}  |stack:52|DWORD  |stack:56|DWORD  |-   <||@
  Comment 3855 848 rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 3858 856 JUMP ~[] destination: B79 -> B81  <||@
  Comment 3863 block B262 null  <||@
  Comment 3863 2598 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3863 2600 r13|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 3866 2602 r10|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>}  <||@
  Comment 3866 {meta{HotSpotType<Ljava/lang/String;, resolved>}}  <||@
  Comment 3876 2604 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 3876 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 3886 2606 rdx|DWORD = MOVE input: int[2|0x2]  <||@
  Comment 3891 2608 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 3896 2610 r14|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 3899 2612 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:100]  <||@
  Comment 3899 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 3904 [r13:0, stack:40]at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2927) [bci: 100, duringCall: false, rethrow: false]
              |0  |1  |2                  |3  |4  |5 
     locals:  |-  |-  |stack:88|QWORD[.]  |-  |-  |-   <||@
  Comment 3905 2614 rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 3908 2616 rax|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 3911 2618 r10|QWORD = MOVE r14|QWORD moveKind: QWORD  <||@
  Comment 3914 2620 JUMP ~[] destination: B262 -> B264  <||@
  Comment 3919 block B103 loop 3 depth 1 header:2359|LoopBegin  <||@
  Comment 3919 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 3920 1166 xmm0|V256_WORD = H [rdx|QWORD[.] + r11|QWORD * 2] nZ: YMM oh: VMOVDQU  <||@
  Comment 3926 1168 J (address: [rsi|QWORD[.] + r11|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU  <||@
  Comment 3932 1170 r11|QWORD = LEA [r11|QWORD + 16] size: QWORD  <||@
  Comment 3936 1172 CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 3939 1174 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B103 -> B105 falseDestination: B103 -> B103  <||@
  Comment 3946 block B120 null  <||@
  Comment 3946 1298 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3946 1300 xmm0|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>  <||@
  Comment 3950 1302 r10|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 3957 1304 JUMP ~[] destination: B120 -> B121  <||@
  Comment 3957 block B121 loop 4 depth 1 header:2422|LoopBegin  <||@
  Comment 3957 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 3968 1308 J (address: [rdx|QWORD[.] + r10|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU  <||@
  Comment 3974 1310 r10|QWORD = LEA [r10|QWORD + 16] size: QWORD  <||@
  Comment 3978 1312 CMP (x: r10|QWORD, y: rdi|QWORD) size: QWORD  <||@
  Comment 3981 1314 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B121 -> B123 falseDestination: B121 -> B121  <||@
  Comment 3988 block B97 null  <||@
  Comment 3988 1106 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3988 1102 stack:76|DWORD[.] = MOVE r14|DWORD[.] moveKind: DWORD  <||@
  Comment 3993 1108 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>}  <||@
  Comment 3993 {meta{HotSpotType<[C, resolved>}}  <||@
  Comment 4003 1110 rdx|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 4006 1112 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 4011 1114 r14|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 4014 1116 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:20, 21, 2, 69]  <||@
  Comment 4014 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 4019 [stack:24, stack:52, stack:56, stack:96]at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20, duringCall: false, rethrow: false]
              |0                   |1                  |2         
     locals:  |-                   |-                  |          
     stack:   |stack:104|QWORD[.]  |stack:72|QWORD[.]  |r13|DWORD 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21, duringCall: true, rethrow: false]
              |0                   |1                  |2              
     locals:  |stack:104|QWORD[.]  |stack:32|QWORD[.]  |stack:40|DWORD 
  at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2, duringCall: true, rethrow: false]
              |0                   |1 
     locals:  |stack:104|QWORD[.]  |- 
  at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2924) [bci: 69, duringCall: true, rethrow: false]
              |0  |1  |2                   |3               |4               |5 
     locals:  |-  |-  |stack:104|QWORD[.]  |stack:52|DWORD  |stack:56|DWORD  |-   <||@
  Comment 4020 1120 JUMP ~[] destination: B97 -> B98  <||@
  Comment 4025 block B6 null  <||@
  Comment 4025 88 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4025 92 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 4025 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 4035 94 rdx|DWORD = MOVE input: int[8|0x8]  <||@
  Comment 4040 96 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 4045 98 r14|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 4048 100 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0]  <||@
  Comment 4048 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 4053 [r13:0, stack:92, stack:96]at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2917) [bci: 0, duringCall: false, rethrow: false]
              |0             |1                  |2  |3  |4  |5 
     locals:  |r13|QWORD[.]  |stack:32|QWORD[.]  |-  |-  |-  |-   <||@
  Comment 4054 102 rdi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 4057 104 JUMP ~[] destination: B6 -> B8  <||@
  Comment 4062 block B210 null  <||@
  Comment 4062 2142 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4062 2144 r13|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 4065 2146 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 4065 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 4075 2148 rdx|DWORD = MOVE input: int[2|0x2]  <||@
  Comment 4080 2150 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 4085 2152 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:100]  <||@
  Comment 4085 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 4090 [stack:40]at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2927) [bci: 100, duringCall: false, rethrow: false]
              |0  |1  |2                  |3  |4  |5 
     locals:  |-  |-  |stack:88|QWORD[.]  |-  |-  |-   <||@
  Comment 4091 2154 rax|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 4091 2156 r10|QWORD = MOVE r13|QWORD moveKind: QWORD  <||@
  Comment 4094 2158 JUMP ~[] destination: B210 -> B212  <||@
  Comment 4099 block B141 null  <||@
  Comment 4099 1456 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4099 1458 MOV [r15|QWORD + 668] y: -224097 size: DWORD  <||@
  Comment 4110 1460 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 4117 1462 DEOPT info [bci:26, 21, 2, 69]  <||@
  Comment 4117 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 4122 [rdi:0, stack:96]at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:127) [bci: 26, duringCall: false, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21, duringCall: true, rethrow: false]
              |0             |1                  |2              
     locals:  |rdi|QWORD[.]  |stack:32|QWORD[.]  |stack:40|DWORD 
  at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |rdi|QWORD[.]  |- 
  at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2924) [bci: 69, duringCall: true, rethrow: false]
              |0  |1  |2             |3               |4               |5 
     locals:  |-  |-  |rdi|QWORD[.]  |stack:52|DWORD  |stack:56|DWORD  |-   <||@
  Comment 4123 block B85 null  <||@
  Comment 4123 930 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4123 932 stack:96|QWORD = MOVE r8|QWORD moveKind: QWORD  <||@
  Comment 4128 934 r14|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 4131 936 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 4131 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 4141 938 rdx|DWORD = MOVE input: int[2|0x2]  <||@
  Comment 4146 940 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 4151 942 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:67]  <||@
  Comment 4151 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 4156 [stack:56, stack:68, stack:96]at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2924) [bci: 67, duringCall: false, rethrow: false]
              |0  |1                  |2                                                                      |3               |4               |5 
     locals:  |-  |stack:32|QWORD[.]  |vobject:StringBuilder:0{count=stack:76|DWORD,value=stack:72|QWORD[.]}  |stack:52|DWORD  |stack:56|DWORD  |-   <||@
  Comment 4157 944 rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 4160 946 r9|DWORD[.] = MOVE stack:60|DWORD[.] moveKind: DWORD  <||@
  Comment 4165 948 r10|DWORD = MOVE stack:76|DWORD moveKind: DWORD  <||@
  Comment 4170 950 r14|DWORD = MOVE stack:80|DWORD moveKind: DWORD  <||@
  Comment 4175 952 JUMP ~[] destination: B85 -> B87  <||@
  Comment 4180 block B77 null  <||@
  Comment 4180 800 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4180 802 MOV [r15|QWORD + 668] y: -208993 size: DWORD  <||@
  Comment 4191 804 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 4198 806 DEOPT info [bci:67]  <||@
  Comment 4198 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 4203 [r13:0, stack:96]at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2924) [bci: 67, duringCall: false, rethrow: false]
              |0  |1                  |2                                                            |3               |4               |5 
     locals:  |-  |stack:32|QWORD[.]  |vobject:StringBuilder:0{count=r10|DWORD,value=r13|QWORD[.]}  |stack:52|DWORD  |stack:56|DWORD  |-   <||@
  Comment 4204 block B90 null  <||@
  Comment 4204 1018 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4204 1020 rdi|QWORD[.] = MOVE stack:104|QWORD[.] moveKind: QWORD  <||@
  Comment 4209 1022 r11|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 4212 1024 r10|DWORD = MOVE input: int[-317537|0xfffffffffffb279f]  <||@
  Comment 4218 1026 JUMP ~[] destination: B90 -> B91  <||@
  Comment 4218 block B91 null  <||@
  Comment 4218 1028 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 4218 1030 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 4225 1032 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 4232 1034 DEOPT info [bci:20, 21, 2, 69]  <||@
  Comment 4232 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 4237 [rdi:0, stack:56, stack:96]at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20, duringCall: false, rethrow: false]
              |0             |1                  |2         
     locals:  |-             |-                  |          
     stack:   |rdi|QWORD[.]  |stack:72|QWORD[.]  |r13|DWORD 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21, duringCall: true, rethrow: false]
              |0             |1                  |2         
     locals:  |rdi|QWORD[.]  |stack:32|QWORD[.]  |r11|DWORD 
  at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |rdi|QWORD[.]  |- 
  at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2924) [bci: 69, duringCall: true, rethrow: false]
              |0  |1  |2             |3               |4               |5 
     locals:  |-  |-  |rdi|QWORD[.]  |stack:52|DWORD  |stack:56|DWORD  |-   <||@
  Comment 4238 block B202 null  <||@
  Comment 4238 2074 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4238 2076 r10|DWORD = MOVE input: int[-232219|0xfffffffffffc74e5]  <||@
  Comment 4244 2080 JUMP ~[] destination: B202 -> B203  <||@
  Comment 4244 block B203 null  <||@
  Comment 4244 2082 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 4244 1566 r11|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 4247 2084 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 4254 2086 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 4261 2088 DEOPT info [bci:80]  <||@
  Comment 4261 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 4266 [r11:0]at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2926) [bci: 80, duringCall: false, rethrow: false]
              |0  |1  |2             |3  |4          |5         
     locals:  |-  |-  |r11|QWORD[.]  |-  |rsi|DWORD  |r13|DWORD   <||@
  Comment 4267 block B88 null  <||@
  Comment 4267 1002 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4267 1004 rdi|QWORD[.] = MOVE stack:104|QWORD[.] moveKind: QWORD  <||@
  Comment 4272 1006 r11|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 4275 1008 r10|DWORD = MOVE input: int[-215571|0xfffffffffffcb5ed]  <||@
  Comment 4281 1010 JUMP ~[] destination: B88 -> B91  <||@
  Comment 4283 block B3 null  <||@
  Comment 4283 36 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4283 38 MOV [r15|QWORD + 668] y: -193803 size: DWORD  <||@
  Comment 4294 40 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 4301 42 DEOPT info [bci:0]  <||@
  Comment 4301 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 4306 [r13:0, stack:96]at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2917) [bci: 0, duringCall: false, rethrow: false]
              |0             |1                  |2  |3  |4  |5 
     locals:  |r13|QWORD[.]  |stack:32|QWORD[.]  |-  |-  |-  |-   <||@
  Comment 4307 block B23 null  <||@
  Comment 4307 308 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4307 310 r8|DWORD = MOVE input: int[-198163|0xfffffffffffcf9ed]  <||@
  Comment 4313 320 JUMP ~[] destination: B23 -> B73  <||@
  Comment 4313 block B73 null  <||@
  Comment 4313 754 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 4313 258 r11|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 4316 260 r10|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 4319 262 rbx|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 4323 264 rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 4328 756 MOV (x: [r15|QWORD + 668], y: r8|DWORD) size: DWORD  <||@
  Comment 4335 758 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 4342 760 DEOPT info [bci:47]  <||@
  Comment 4342 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 4347 [rdx:0, r10:0]at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2923) [bci: 47, duringCall: false, rethrow: false]
              |0  |1             |2                                                            |3          |4               |5         
     locals:  |-  |rdx|QWORD[.]  |vobject:StringBuilder:0{count=r11|DWORD,value=r10|QWORD[.]}  |rbx|DWORD  |stack:56|DWORD  |r11|DWORD   <||@
  Comment 4348 block B153 null  <||@
  Comment 4348 1604 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4348 1606 r10|DWORD = MOVE input: int[-230675|0xfffffffffffc7aed]  <||@
  Comment 4354 1610 JUMP ~[] destination: B153 -> B203  <||@
  Comment 4356 block B208 null  <||@
  Comment 4356 2124 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4356 2126 r10|DWORD = MOVE input: int[-234003|0xfffffffffffc6ded]  <||@
  Comment 4362 2130 JUMP ~[] destination: B208 -> B215  <||@
  Comment 4362 block B215 null  <||@
  Comment 4362 2206 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 4362 2128 r11|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD  <||@
  Comment 4367 2208 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 4374 2210 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 4381 2212 DEOPT info [bci:100]  <||@
  Comment 4381 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 4386 [r11:0]at java.util.Formatter$FormatSpecifier.justify(Formatter.java:2927) [bci: 100, duringCall: false, rethrow: false]
              |0  |1  |2             |3  |4  |5 
     locals:  |-  |-  |r11|QWORD[.]  |-  |-  |-   <||@
  Comment 4387 block B151 null  <||@
  Comment 4387 1586 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4387 1588 r10|DWORD = MOVE input: int[-230419|0xfffffffffffc7bed]  <||@
  Comment 4393 1592 JUMP ~[] destination: B151 -> B203  <||@
  Comment 4398 block B149 null  <||@
  Comment 4398 1562 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4398 1564 r10|DWORD = MOVE input: int[-228635|0xfffffffffffc82e5]  <||@
  Comment 4404 1568 JUMP ~[] destination: B149 -> B203  <||@
  Comment 4409 block B214 null  <||@
  Comment 4409 2198 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4409 2200 r10|DWORD = MOVE input: int[-235027|0xfffffffffffc69ed]  <||@
  Comment 4415 2204 JUMP ~[] destination: B214 -> B215  <||@
  Comment 4417 block B19 null  <||@
  Comment 4417 254 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4417 256 r8|DWORD = MOVE input: int[-195867|0xfffffffffffd02e5]  <||@
  Comment 4423 266 JUMP ~[] destination: B19 -> B73  <||@
  Comment 4425 block B21 null  <||@
  Comment 4425 284 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4425 286 r8|DWORD = MOVE input: int[-197907|0xfffffffffffcfaed]  <||@
  Comment 4431 296 JUMP ~[] destination: B21 -> B73  <||@
  Comment 4433 block B72 null  <||@
  Comment 4433 740 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4433 742 r8|DWORD = MOVE input: int[-198683|0xfffffffffffcf7e5]  <||@
  Comment 4439 752 JUMP ~[] destination: B72 -> B73  <||@
  Comment 4441 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 4441 4  <||@
  Comment 4447 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 4447 5  <||@
  HexCodeFile>>> <|@
end_nmethod
