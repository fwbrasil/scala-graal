begin_compilation
  name " HotSpotCompilation-5976[java.util.ArrayDeque$DeqIterator.next()]"
  method "HotSpotCompilation-5976[java.util.ArrayDeque$DeqIterator.next()]"
  date 1527005170952
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: i125 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: i125  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Ljava/util/ArrayDeque$DeqIterator;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?2 v132 v133 v134 v139 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v132 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i125 v74 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i125 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayDeque$DeqIterator.cursor
nodeSourcePosition: at java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:641) [bci: 1]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v132 
=== Succesors ===
next: i126 
=== Usages ===
v5 v137 v72 i24 v57 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v132 #next: i126  <|@  <|@
f <@~|@floating>@ <|@
tid v133 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i126 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i126 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayDeque$DeqIterator.fence
nodeSourcePosition: at java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:641) [bci: 5]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v133 
=== Succesors ===
next: v87 
=== Usages ===
v5 v14 
=== Predecessor ===
i125 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v133 #next: v87  <|@  <|@
f <@~|@floating>@ <|@
tid v5 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:641) [bci: 8]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i125 
y: i126 
=== Succesors ===
=== Usages ===
v87 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i125 y: i126  <|@  <|@
tid ?2 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<ArrayDeque$DeqIterator.next()>
duringCall: false
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: ArrayDeque.java
sourceLine: 641
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - 
=== Succesors ===
=== Usages ===
v114 a128 i129 v140 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 -  <|@  <|@
f <@*|@fixed>@ <|@
tid v87 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:641) [bci: 8]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v5 
=== Succesors ===
trueSuccessor: v86 
falseSuccessor: v84 
=== Usages ===
=== Predecessor ===
i126 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v5 #trueSuccessor: v86 #falseSuccessor: v84  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v86 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:641) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v109 
=== Usages ===
=== Predecessor ===
v87 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v109  <|@  <|@
f <@~|@floating>@ <|@
tid i110 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -10259
stableDimension: 0
stamp: i32 [-10259] ⇊00000000ffffd7ed ⇈00000000ffffd7ed
stampKind: i32
value: int[-10259|0xffffffffffffd7ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i112 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v109 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v108 
=== Predecessor ===
v86 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v84 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:641) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: a127 
=== Usages ===
=== Predecessor ===
v87 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a127  <|@  <|@
f <@~|@floating>@ <|@
tid v134 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a127 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a127 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayDeque$DeqIterator.this$0
nodeSourcePosition: at java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:644) [bci: 20]
nullCheck: false
stamp: n Ljava/util/ArrayDeque;
=== Inputs ===
stateBefore: - 
guard: - 
address: v134 
=== Succesors ===
next: a128 
=== Usages ===
v138 v135 
=== Predecessor ===
v84 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v134 #next: a128  <|@  <|@
f <@~|@floating>@ <|@
tid v135 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a127 
=== Succesors ===
=== Usages ===
a128 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a127  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a128 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayDeque.elements
nodeSourcePosition: at java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:644) [bci: 23]
nullCheck: true
stamp: n [Ljava/lang/Object;
=== Inputs ===
stateBefore: ?2 
guard: - 
address: v135 
=== Succesors ===
next: i129 
=== Usages ===
a51 v136 
=== Predecessor ===
a127 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?2 guard: - address: v135 #next: i129  <|@  <|@
f <@~|@floating>@ <|@
tid v136 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a128 
=== Succesors ===
=== Usages ===
i129 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a128  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i129 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:644) [bci: 30]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?2 
guard: - 
address: v136 
=== Succesors ===
next: v99 
=== Usages ===
v57 i29 
=== Predecessor ===
a128 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?2 guard: - address: v136 #next: v99  <|@  <|@
f <@~|@floating>@ <|@
tid v57 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:644) [bci: 30]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i125 
y: i129 
=== Succesors ===
=== Usages ===
v99 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i125 y: i129  <|@  <|@
f <@*|@fixed>@ <|@
tid v99 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:644) [bci: 30]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v57 
=== Succesors ===
trueSuccessor: v96 
falseSuccessor: v98 
=== Usages ===
=== Predecessor ===
i129 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v57 #trueSuccessor: v96 #falseSuccessor: v98  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v96 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:644) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
next: i130 
=== Usages ===
a131 
=== Predecessor ===
v99 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i130  <|@  <|@
f <@~|@floating>@ <|@
tid v138 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a127 
=== Succesors ===
=== Usages ===
i130 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a127  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i130 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayDeque.tail
nodeSourcePosition: at java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:647) [bci: 36]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v138 
=== Succesors ===
next: v103 
=== Usages ===
v14 
=== Predecessor ===
v96 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v138 #next: v103  <|@  <|@
f <@~|@floating>@ <|@
tid v14 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:647) [bci: 43]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i126 
y: i130 
=== Succesors ===
=== Usages ===
v103 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i126 y: i130  <|@  <|@
f <@*|@fixed>@ <|@
tid v103 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:647) [bci: 43]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v14 
=== Succesors ===
trueSuccessor: v100 
falseSuccessor: v102 
=== Usages ===
=== Predecessor ===
i130 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v14 #trueSuccessor: v100 #falseSuccessor: v102  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v100 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:647) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: a131 
=== Usages ===
=== Predecessor ===
v103 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a131  <|@  <|@
f <@~|@floating>@ <|@
tid a51 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:644) [bci: 23]
op: Uncompress
stamp: a [Ljava/lang/Object;
=== Inputs ===
value: a128 
=== Succesors ===
=== Usages ===
v137 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a128  <|@  <|@
f <@~|@floating>@ <|@
tid v137 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a51 
index: i125 
=== Succesors ===
=== Usages ===
a131 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a51 index: i125  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a131 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nodeSourcePosition: at java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:644) [bci: 30]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: v96 
address: v137 
=== Succesors ===
next: v140 
=== Usages ===
a66 v140 
=== Predecessor ===
v100 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v96 address: v137 #next: v140  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v140 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?2 
object: a131 
=== Succesors ===
next: v72 
=== Usages ===
=== Predecessor ===
a131 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?2 object: a131 #next: v72  <|@  <|@
f <@~|@floating>@ <|@
tid v139 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v72 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v72 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: ArrayDeque$DeqIterator.lastRet
nodeSourcePosition: at java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:649) [bci: 63]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v139 
value: i125 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v74 
=== Usages ===
=== Predecessor ===
v140 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v139 value: i125 stateAfter: - lastLocationAccess: - #next: v74  <|@  <|@
f <@~|@floating>@ <|@
tid i23 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:650) [bci: 71]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i24 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i24 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:650) [bci: 72]
stamp: i32
=== Inputs ===
x: i125 
y: i23 
=== Succesors ===
=== Usages ===
i30 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i125 y: i23  <|@  <|@
f <@~|@floating>@ <|@
tid i28 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:650) [bci: 82]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1] ⇊00000000ffffffff
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i29 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i29 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:650) [bci: 82]
stamp: i32 [-1 - 2147483646]
=== Inputs ===
x: i129 
y: i28 
=== Succesors ===
=== Usages ===
i30 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i129 y: i28  <|@  <|@
f <@~|@floating>@ <|@
tid i30 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:650) [bci: 83]
stamp: i32
=== Inputs ===
x: i24 
y: i29 
=== Succesors ===
=== Usages ===
v74 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i24 y: i29  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v74 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: ArrayDeque$DeqIterator.cursor
nodeSourcePosition: at java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:650) [bci: 84]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v132 
value: i30 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v33 
=== Usages ===
=== Predecessor ===
v72 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v132 value: i30 stateAfter: - lastLocationAccess: - #next: v33  <|@  <|@
f <@~|@floating>@ <|@
tid a66 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:644) [bci: 30]
op: Uncompress
stamp: a Ljava/lang/Object;
=== Inputs ===
value: a131 
=== Succesors ===
=== Usages ===
v33 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a131  <|@  <|@
f <@*|@fixed>@ <|@
tid v33 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:651) [bci: 88]
stamp: void
=== Inputs ===
result: a66 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v74 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a66 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v102 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:647) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: v123 
=== Usages ===
=== Predecessor ===
v103 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v123  <|@  <|@
f <@~|@floating>@ <|@
tid i124 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -17683
stableDimension: 0
stamp: i32 [-17683] ⇊00000000ffffbaed ⇈00000000ffffbaed
stampKind: i32
value: int[-17683|0xffffffffffffbaed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i112 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v123 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v108 
=== Predecessor ===
v102 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v98 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:644) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
next: v121 
=== Usages ===
=== Predecessor ===
v99 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v121  <|@  <|@
f <@~|@floating>@ <|@
tid i122 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -14875
stableDimension: 0
stamp: i32 [-14875] ⇊00000000ffffc5e5 ⇈00000000ffffc5e5
stampKind: i32
value: int[-14875|0xffffffffffffc5e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i112 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v121 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v108 
=== Predecessor ===
v98 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B1" "B6" "B5" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i112 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-17939 - -10259] ⇊00000000ffff80e5 ⇈00000000fffffffd
valueDescription: i32
=== Inputs ===
merge: v108 
values: i110 i122 i124 
=== Succesors ===
=== Usages ===
v114 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v108 values: i110 i122 i124  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v108 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v109 v121 v123 
=== Succesors ===
next: v114 
=== Usages ===
i112 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v109 v121 v123 #next: v114  <|@  <|@
f <@~|@floating>@ <|@
tid a111 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v114 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v114 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?2 
actionAndReason: i112 
speculation: a111 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v108 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?2 actionAndReason: i112 speculation: a111  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: i125 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: i125  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Ljava/util/ArrayDeque$DeqIterator;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?2 v132 v133 v134 v139 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v132 <|@
result [v0|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i125 v74 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i125 <|@
result v1|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayDeque$DeqIterator.cursor
nodeSourcePosition: at java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:641) [bci: 1]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v132 
=== Succesors ===
next: i126 
=== Usages ===
v5 v137 v72 i24 v57 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v132 #next: i126  <|@  <|@
f <@~|@floating>@ <|@
tid v133 <|@
result [v0|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i126 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i126 <|@
result v2|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayDeque$DeqIterator.fence
nodeSourcePosition: at java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:641) [bci: 5]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v133 
=== Succesors ===
next: v87 
=== Usages ===
v5 v14 
=== Predecessor ===
i125 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v133 #next: v87  <|@  <|@
f <@~|@floating>@ <|@
tid v5 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:641) [bci: 8]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i125 
y: i126 
=== Succesors ===
=== Usages ===
v87 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i125 y: i126  <|@  <|@
tid ?2 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<ArrayDeque$DeqIterator.next()>
duringCall: false
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: ArrayDeque.java
sourceLine: 641
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - 
=== Succesors ===
=== Usages ===
v114 a128 i129 v140 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 -  <|@  <|@
f <@*|@fixed>@ <|@
tid v87 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:641) [bci: 8]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v5 
=== Succesors ===
trueSuccessor: v86 
falseSuccessor: v84 
=== Usages ===
=== Predecessor ===
i126 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v5 #trueSuccessor: v86 #falseSuccessor: v84  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@2b85326b slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOV [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v2|DWORD, y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v86 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:641) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v109 
=== Usages ===
=== Predecessor ===
v87 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v109  <|@  <|@
f <@~|@floating>@ <|@
tid i110 <|@
result int[-10259|0xffffffffffffd7ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -10259
stableDimension: 0
stamp: i32 [-10259] ⇊00000000ffffd7ed ⇈00000000ffffd7ed
stampKind: i32
value: int[-10259|0xffffffffffffd7ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i112 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v109 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v108 
=== Predecessor ===
v86 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-10259|0xffffffffffffd7ed]] destination: B1 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v84 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:641) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: a127 
=== Usages ===
=== Predecessor ===
v87 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a127  <|@  <|@
f <@~|@floating>@ <|@
tid v134 <|@
result [v0|QWORD[.] + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a127 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a127 <|@
result v3|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayDeque$DeqIterator.this$0
nodeSourcePosition: at java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:644) [bci: 20]
nullCheck: false
stamp: n Ljava/util/ArrayDeque;
=== Inputs ===
stateBefore: - 
guard: - 
address: v134 
=== Succesors ===
next: a128 
=== Usages ===
v138 v135 
=== Predecessor ===
v84 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v134 #next: a128  <|@  <|@
f <@~|@floating>@ <|@
tid v135 <|@
result [v3|DWORD[.] * 8 + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a127 
=== Succesors ===
=== Usages ===
a128 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a127  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a128 <|@
result v4|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayDeque.elements
nodeSourcePosition: at java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:644) [bci: 23]
nullCheck: true
stamp: n [Ljava/lang/Object;
=== Inputs ===
stateBefore: ?2 
guard: - 
address: v135 
=== Succesors ===
next: i129 
=== Usages ===
a51 v136 
=== Predecessor ===
a127 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?2 guard: - address: v135 #next: i129  <|@  <|@
f <@~|@floating>@ <|@
tid v136 <|@
result [v4|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a128 
=== Succesors ===
=== Usages ===
i129 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a128  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i129 <|@
result v5|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:644) [bci: 30]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?2 
guard: - 
address: v136 
=== Succesors ===
next: v99 
=== Usages ===
v57 i29 
=== Predecessor ===
a128 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?2 guard: - address: v136 #next: v99  <|@  <|@
f <@~|@floating>@ <|@
tid v57 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:644) [bci: 30]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i125 
y: i129 
=== Succesors ===
=== Usages ===
v99 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i125 y: i129  <|@  <|@
f <@*|@fixed>@ <|@
tid v99 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:644) [bci: 30]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v57 
=== Succesors ===
trueSuccessor: v96 
falseSuccessor: v98 
=== Usages ===
=== Predecessor ===
i129 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v57 #trueSuccessor: v96 #falseSuccessor: v98  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v3|DWORD[.] = MOV [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:641) [bci: 0]
locals: v0|QWORD[.] - 
>@ <|@ instruction v4|DWORD[.] = MOV [v3|DWORD[.] * 8 + 20] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:641) [bci: 0]
locals: v0|QWORD[.] - 
>@ <|@ instruction v5|DWORD = MOV [v4|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v5|DWORD, y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v96 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:644) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
next: i130 
=== Usages ===
a131 
=== Predecessor ===
v99 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i130  <|@  <|@
f <@~|@floating>@ <|@
tid v138 <|@
result [v3|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a127 
=== Succesors ===
=== Usages ===
i130 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a127  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i130 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayDeque.tail
nodeSourcePosition: at java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:647) [bci: 36]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v138 
=== Succesors ===
next: v103 
=== Usages ===
v14 
=== Predecessor ===
v96 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v138 #next: v103  <|@  <|@
f <@~|@floating>@ <|@
tid v14 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:647) [bci: 43]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i126 
y: i130 
=== Succesors ===
=== Usages ===
v103 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i126 y: i130  <|@  <|@
f <@*|@fixed>@ <|@
tid v103 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:647) [bci: 43]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v14 
=== Succesors ===
trueSuccessor: v100 
falseSuccessor: v102 
=== Usages ===
=== Predecessor ===
i130 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v14 #trueSuccessor: v100 #falseSuccessor: v102  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v2|DWORD, y: [v3|DWORD[.] * 8 + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v100 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:647) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: a131 
=== Usages ===
=== Predecessor ===
v103 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a131  <|@  <|@
f <@~|@floating>@ <|@
tid a51 <|@
result v6|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:644) [bci: 23]
op: Uncompress
stamp: a [Ljava/lang/Object;
=== Inputs ===
value: a128 
=== Succesors ===
=== Usages ===
v137 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a128  <|@  <|@
f <@~|@floating>@ <|@
tid v137 <|@
result [v6|QWORD[.] + v1|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a51 
index: i125 
=== Succesors ===
=== Usages ===
a131 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a51 index: i125  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a131 <|@
result v7|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nodeSourcePosition: at java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:644) [bci: 30]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: v96 
address: v137 
=== Succesors ===
next: v140 
=== Usages ===
a66 v140 
=== Predecessor ===
v100 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v96 address: v137 #next: v140  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v140 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?2 
object: a131 
=== Succesors ===
next: v72 
=== Usages ===
=== Predecessor ===
a131 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?2 object: a131 #next: v72  <|@  <|@
f <@~|@floating>@ <|@
tid v139 <|@
result [v0|QWORD[.] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v72 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v72 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: ArrayDeque$DeqIterator.lastRet
nodeSourcePosition: at java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:649) [bci: 63]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v139 
value: i125 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v74 
=== Usages ===
=== Predecessor ===
v140 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v139 value: i125 stateAfter: - lastLocationAccess: - #next: v74  <|@  <|@
f <@~|@floating>@ <|@
tid i23 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:650) [bci: 71]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i24 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i24 <|@
result v8|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:650) [bci: 72]
stamp: i32
=== Inputs ===
x: i125 
y: i23 
=== Succesors ===
=== Usages ===
i30 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i125 y: i23  <|@  <|@
f <@~|@floating>@ <|@
tid i28 <|@
result int[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:650) [bci: 82]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1] ⇊00000000ffffffff
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i29 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i29 <|@
result v9|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:650) [bci: 82]
stamp: i32 [-1 - 2147483646]
=== Inputs ===
x: i129 
y: i28 
=== Succesors ===
=== Usages ===
i30 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i129 y: i28  <|@  <|@
f <@~|@floating>@ <|@
tid i30 <|@
result v10|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:650) [bci: 83]
stamp: i32
=== Inputs ===
x: i24 
y: i29 
=== Succesors ===
=== Usages ===
v74 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i24 y: i29  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v74 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: ArrayDeque$DeqIterator.cursor
nodeSourcePosition: at java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:650) [bci: 84]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v132 
value: i30 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v33 
=== Usages ===
=== Predecessor ===
v72 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v132 value: i30 stateAfter: - lastLocationAccess: - #next: v33  <|@  <|@
f <@~|@floating>@ <|@
tid a66 <|@
result v11|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:644) [bci: 30]
op: Uncompress
stamp: a Ljava/lang/Object;
=== Inputs ===
value: a131 
=== Succesors ===
=== Usages ===
v33 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a131  <|@  <|@
f <@*|@fixed>@ <|@
tid v33 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:651) [bci: 88]
stamp: void
=== Inputs ===
result: a66 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v74 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a66 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v6|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4c57ca29 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v7|DWORD[.] = MOV [v6|QWORD[.] + v1|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:641) [bci: 0]
locals: v0|QWORD[.] - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v7|DWORD[.] * 8] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = INC v1|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = DEC v5|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = AND (x: v8|DWORD, y: v9|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v10|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD[.] = UNCOMPRESSPOINTER (input: v7|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4c57ca29 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v102 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:647) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: v123 
=== Usages ===
=== Predecessor ===
v103 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v123  <|@  <|@
f <@~|@floating>@ <|@
tid i124 <|@
result int[-17683|0xffffffffffffbaed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -17683
stableDimension: 0
stamp: i32 [-17683] ⇊00000000ffffbaed ⇈00000000ffffbaed
stampKind: i32
value: int[-17683|0xffffffffffffbaed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i112 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v123 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v108 
=== Predecessor ===
v102 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-17683|0xffffffffffffbaed]] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v98 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:644) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
next: v121 
=== Usages ===
=== Predecessor ===
v99 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v121  <|@  <|@
f <@~|@floating>@ <|@
tid i122 <|@
result int[-14875|0xffffffffffffc5e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -14875
stableDimension: 0
stamp: i32 [-14875] ⇊00000000ffffc5e5 ⇈00000000ffffc5e5
stampKind: i32
value: int[-14875|0xffffffffffffc5e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i112 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v121 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v108 
=== Predecessor ===
v98 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-14875|0xffffffffffffc5e5]] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B1" "B6" "B5" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i112 <|@
result v12|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-17939 - -10259] ⇊00000000ffff80e5 ⇈00000000fffffffd
valueDescription: i32
=== Inputs ===
merge: v108 
values: i110 i122 i124 
=== Succesors ===
=== Usages ===
v114 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v108 values: i110 i122 i124  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v108 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v109 v121 v123 
=== Succesors ===
next: v114 
=== Usages ===
i112 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v109 v121 v123 #next: v114  <|@  <|@
f <@~|@floating>@ <|@
tid a111 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v114 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v114 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?2 
actionAndReason: i112 
speculation: a111 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v108 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?2 actionAndReason: i112 speculation: a111  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v12|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v12|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:641) [bci: 0]
locals: v0|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@2b85326b slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOV [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v2|DWORD, y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v3|DWORD[.] = MOV [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:641) [bci: 0]
locals: v0|QWORD[.] - 
>@ <|@ instruction v4|DWORD[.] = MOV [v3|DWORD[.] * 8 + 20] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:641) [bci: 0]
locals: v0|QWORD[.] - 
>@ <|@ instruction v5|DWORD = MOV [v4|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v5|DWORD, y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v2|DWORD, y: [v3|DWORD[.] * 8 + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v6|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4c57ca29 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v7|DWORD[.] = MOV [v6|QWORD[.] + v1|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:641) [bci: 0]
locals: v0|QWORD[.] - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v7|DWORD[.] * 8] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = INC v1|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = DEC v5|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = AND (x: v8|DWORD, y: v9|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v10|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD[.] = UNCOMPRESSPOINTER (input: v7|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4c57ca29 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-10259|0xffffffffffffd7ed]] destination: B1 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B1" "B6" "B5" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   -1  <|@ instruction [v12|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v12|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:641) [bci: 0]
locals: v0|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-14875|0xffffffffffffc5e5]] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-17683|0xffffffffffffbaed]] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #4          // cursor:int
     4: aload_0       
     5: getfield      #6          // fence:int
     8: if_icmpne     19
    11: new           #9          // java.util.NoSuchElementException
    14: dup           
    15: invokespecial #8          // java.util.NoSuchElementException.<init>:()void
    18: athrow        
    19: aload_0       
    20: getfield      #1          // this$0:java.util.ArrayDeque
    23: getfield      #9          // java.util.ArrayDeque.elements:java.lang.Object[]
    26: aload_0       
    27: getfield      #4          // cursor:int
    30: aaload        
    31: astore_1      
    32: aload_0       
    33: getfield      #1          // this$0:java.util.ArrayDeque
    36: getfield      #5          // java.util.ArrayDeque.tail:int
    39: aload_0       
    40: getfield      #6          // fence:int
    43: if_icmpne     50
    46: aload_1       
    47: ifnonnull     58
    50: new           #12         // java.util.ConcurrentModificationException
    53: dup           
    54: invokespecial #10         // java.util.ConcurrentModificationException.<init>:()void
    57: athrow        
    58: aload_0       
    59: aload_0       
    60: getfield      #4          // cursor:int
    63: putfield      #7          // lastRet:int
    66: aload_0       
    67: aload_0       
    68: getfield      #4          // cursor:int
    71: iconst_1      
    72: iadd          
    73: aload_0       
    74: getfield      #1          // this$0:java.util.ArrayDeque
    77: getfield      #9          // java.util.ArrayDeque.elements:java.lang.Object[]
    80: arraylength   
    81: iconst_1      
    82: isub          
    83: iand          
    84: putfield      #4          // cursor:int
    87: aload_1       
    88: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@2b85326b slotKind: QWORD <|@ <|@
      nr    8  <|@ instruction rax|DWORD = MOV [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   10  <|@ instruction r10|DWORD = MOV [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   12  <|@ instruction CMP (x: r10|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr   14  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   16  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   18  <|@ instruction r11|DWORD[.] = MOV [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   20  <|@ st <@st|@reference-map: [rsi:0, r11:0]
live-base-pointers: []
java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:641) [bci: 0]
locals: rsi|QWORD[.] - 
>@ <|@ instruction r8|DWORD[.] = MOV [r11|DWORD[.] * 8 + 20] size: DWORD state [bci:0] <|@ <|@
      nr   22  <|@ st <@st|@reference-map: [rsi:0, r8:0, r11:0]
live-base-pointers: []
java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:641) [bci: 0]
locals: rsi|QWORD[.] - 
>@ <|@ instruction r9|DWORD = MOV [r8|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   24  <|@ instruction CMP (x: r9|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr   26  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   30  <|@ instruction CMP (x: r10|DWORD, y: [r11|DWORD[.] * 8 + 16]) size: DWORD <|@ <|@
      nr   32  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   34  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   36  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4c57ca29 encoding: base: 0 shift: 3 <|@ <|@
      nr   38  <|@ instruction r10|DWORD[.] = MOV [r8|QWORD[.] + rax|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   40  <|@ st <@st|@reference-map: [rsi:0, r10:0]
live-base-pointers: []
java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:641) [bci: 0]
locals: rsi|QWORD[.] - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + r10|DWORD[.] * 8] state [bci:0] <|@ <|@
      nr   42  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: rax|DWORD) size: DWORD <|@ <|@
      nr   44  <|@ instruction rax|DWORD = INC rax|DWORD size: DWORD <|@ <|@
      nr   46  <|@ instruction r9|DWORD = DEC r9|DWORD size: DWORD <|@ <|@
      nr   48  <|@ instruction rax|DWORD = AND (x: rax|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr   50  <|@ instruction MOV (x: [rsi|QWORD[.] + 12], y: rax|DWORD) size: DWORD <|@ <|@
      nr   52  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4c57ca29 encoding: base: 0 shift: 3 <|@ <|@
      nr   54  <|@ instruction rax|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   56  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-10259|0xffffffffffffd7ed] // MoveResolver resolve mapping <|@ <|@
      nr   60  <|@ instruction JUMP ~[] destination: B1 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B1" "B6" "B5" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   72  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr   74  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   76  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:641) [bci: 0]
locals: rsi|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-14875|0xffffffffffffc5e5] // MoveResolver resolve mapping <|@ <|@
      nr   64  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-17683|0xffffffffffffbaed] // MoveResolver resolve mapping <|@ <|@
      nr   68  <|@ instruction JUMP ~[] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #4          // cursor:int
     4: aload_0       
     5: getfield      #6          // fence:int
     8: if_icmpne     19
    11: new           #9          // java.util.NoSuchElementException
    14: dup           
    15: invokespecial #8          // java.util.NoSuchElementException.<init>:()void
    18: athrow        
    19: aload_0       
    20: getfield      #1          // this$0:java.util.ArrayDeque
    23: getfield      #9          // java.util.ArrayDeque.elements:java.lang.Object[]
    26: aload_0       
    27: getfield      #4          // cursor:int
    30: aaload        
    31: astore_1      
    32: aload_0       
    33: getfield      #1          // this$0:java.util.ArrayDeque
    36: getfield      #5          // java.util.ArrayDeque.tail:int
    39: aload_0       
    40: getfield      #6          // fence:int
    43: if_icmpne     50
    46: aload_1       
    47: ifnonnull     58
    50: new           #12         // java.util.ConcurrentModificationException
    53: dup           
    54: invokespecial #10         // java.util.ConcurrentModificationException.<init>:()void
    57: athrow        
    58: aload_0       
    59: aload_0       
    60: getfield      #4          // cursor:int
    63: putfield      #7          // lastRet:int
    66: aload_0       
    67: aload_0       
    68: getfield      #4          // cursor:int
    71: iconst_1      
    72: iadd          
    73: aload_0       
    74: getfield      #1          // this$0:java.util.ArrayDeque
    77: getfield      #9          // java.util.ArrayDeque.elements:java.lang.Object[]
    80: arraylength   
    81: iconst_1      
    82: isub          
    83: iand          
    84: putfield      #4          // cursor:int
    87: aload_1       
    88: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@2b85326b slotKind: QWORD <|@ <|@
      nr    8  <|@ instruction rax|DWORD = MOV [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   10  <|@ instruction r10|DWORD = MOV [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   12  <|@ instruction CMP (x: r10|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr   14  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   16  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   18  <|@ instruction r11|DWORD[.] = MOV [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   20  <|@ st <@st|@reference-map: [rsi:0, r11:0]
live-base-pointers: []
java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:641) [bci: 0]
locals: rsi|QWORD[.] - 
>@ <|@ instruction r8|DWORD[.] = MOV [r11|DWORD[.] * 8 + 20] size: DWORD state [bci:0] <|@ <|@
      nr   22  <|@ st <@st|@reference-map: [rsi:0, r8:0, r11:0]
live-base-pointers: []
java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:641) [bci: 0]
locals: rsi|QWORD[.] - 
>@ <|@ instruction r9|DWORD = MOV [r8|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   24  <|@ instruction CMP (x: r9|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr   26  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   30  <|@ instruction CMP (x: r10|DWORD, y: [r11|DWORD[.] * 8 + 16]) size: DWORD <|@ <|@
      nr   32  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   34  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   36  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4c57ca29 encoding: base: 0 shift: 3 <|@ <|@
      nr   38  <|@ instruction r10|DWORD[.] = MOV [r8|QWORD[.] + rax|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   40  <|@ st <@st|@reference-map: [rsi:0, r10:0]
live-base-pointers: []
java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:641) [bci: 0]
locals: rsi|QWORD[.] - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + r10|DWORD[.] * 8] state [bci:0] <|@ <|@
      nr   42  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: rax|DWORD) size: DWORD <|@ <|@
      nr   44  <|@ instruction rax|DWORD = INC rax|DWORD size: DWORD <|@ <|@
      nr   46  <|@ instruction r9|DWORD = DEC r9|DWORD size: DWORD <|@ <|@
      nr   48  <|@ instruction rax|DWORD = AND (x: rax|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr   50  <|@ instruction MOV (x: [rsi|QWORD[.] + 12], y: rax|DWORD) size: DWORD <|@ <|@
      nr   52  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4c57ca29 encoding: base: 0 shift: 3 <|@ <|@
      nr   54  <|@ instruction rax|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   56  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-10259|0xffffffffffffd7ed] // MoveResolver resolve mapping <|@ <|@
      nr   60  <|@ instruction JUMP ~[] destination: B1 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B1" "B6" "B5" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   72  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr   74  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   76  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:641) [bci: 0]
locals: rsi|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-14875|0xffffffffffffc5e5] // MoveResolver resolve mapping <|@ <|@
      nr   64  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-17683|0xffffffffffffbaed] // MoveResolver resolve mapping <|@ <|@
      nr   68  <|@ instruction JUMP ~[] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #4          // cursor:int
     4: aload_0       
     5: getfield      #6          // fence:int
     8: if_icmpne     19
    11: new           #9          // java.util.NoSuchElementException
    14: dup           
    15: invokespecial #8          // java.util.NoSuchElementException.<init>:()void
    18: athrow        
    19: aload_0       
    20: getfield      #1          // this$0:java.util.ArrayDeque
    23: getfield      #9          // java.util.ArrayDeque.elements:java.lang.Object[]
    26: aload_0       
    27: getfield      #4          // cursor:int
    30: aaload        
    31: astore_1      
    32: aload_0       
    33: getfield      #1          // this$0:java.util.ArrayDeque
    36: getfield      #5          // java.util.ArrayDeque.tail:int
    39: aload_0       
    40: getfield      #6          // fence:int
    43: if_icmpne     50
    46: aload_1       
    47: ifnonnull     58
    50: new           #12         // java.util.ConcurrentModificationException
    53: dup           
    54: invokespecial #10         // java.util.ConcurrentModificationException.<init>:()void
    57: athrow        
    58: aload_0       
    59: aload_0       
    60: getfield      #4          // cursor:int
    63: putfield      #7          // lastRet:int
    66: aload_0       
    67: aload_0       
    68: getfield      #4          // cursor:int
    71: iconst_1      
    72: iadd          
    73: aload_0       
    74: getfield      #1          // this$0:java.util.ArrayDeque
    77: getfield      #9          // java.util.ArrayDeque.elements:java.lang.Object[]
    80: arraylength   
    81: iconst_1      
    82: isub          
    83: iand          
    84: putfield      #4          // cursor:int
    87: aload_1       
    88: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849c1e203493bc20f85efffffff900f1f80000000000f1f800000000089842400c0feff4883ec1848896c24108b460c448b5610443bd00f8460000000448b5e18468b04dd14000000468b0cc50c000000443bc80f865d000000463b14dd100000000f855700000049c1e003458b548010438504d4894614ffc041ffc94123c189460c49c1e203498bc2488b6c24104883c418850500000000c5f877c341baedd7ffff4589979c0200004d89a7a8020000e8000000009041bae5c5ffffebe441baedbaffffebdce80000000090e80000000090  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@2b85326b slotKind: QWORD  <||@
  Comment 48 8 rax|DWORD = MOV [rsi|QWORD[.] + 12] size: DWORD  <||@
  Comment 51 10 r10|DWORD = MOV [rsi|QWORD[.] + 16] size: DWORD  <||@
  Comment 55 12 CMP (x: r10|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 58 14 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2  <||@
  Comment 64 block B2 null  <||@
  Comment 64 16 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 64 18 r11|DWORD[.] = MOV [rsi|QWORD[.] + 24] size: DWORD  <||@
  Comment 68 20 r8|DWORD[.] = MOV [r11|DWORD[.] * 8 + 20] size: DWORD state [bci:0]  <||@
  Comment 68 [rsi:0, r11:0]at java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:641) [bci: 0, duringCall: false, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |-   <||@
  Comment 68 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 76 22 r9|DWORD = MOV [r8|DWORD[.] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 76 [rsi:0, r8:0, r11:0]at java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:641) [bci: 0, duringCall: false, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |-   <||@
  Comment 76 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 84 24 CMP (x: r9|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 87 26 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B6  <||@
  Comment 93 block B3 null  <||@
  Comment 93 28 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 93 30 CMP (x: r10|DWORD, y: [r11|DWORD[.] * 8 + 16]) size: DWORD  <||@
  Comment 101 32 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5  <||@
  Comment 107 block B4 null  <||@
  Comment 107 34 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 107 36 r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4c57ca29 encoding: base: 0 shift: 3  <||@
  Comment 111 38 r10|DWORD[.] = MOV [r8|QWORD[.] + rax|DWORD * 4 + 16] size: DWORD  <||@
  Comment 116 40 NULLCHECK [r12|QWORD[*] + r10|DWORD[.] * 8] state [bci:0]  <||@
  Comment 116 [rsi:0, r10:0]at java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:641) [bci: 0, duringCall: false, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |-   <||@
  Comment 116 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 120 42 MOV (x: [rsi|QWORD[.] + 20], y: rax|DWORD) size: DWORD  <||@
  Comment 123 44 rax|DWORD = INC rax|DWORD size: DWORD  <||@
  Comment 125 46 r9|DWORD = DEC r9|DWORD size: DWORD  <||@
  Comment 128 48 rax|DWORD = AND (x: rax|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 131 50 MOV (x: [rsi|QWORD[.] + 12], y: rax|DWORD) size: DWORD  <||@
  Comment 134 52 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4c57ca29 encoding: base: 0 shift: 3  <||@
  Comment 138 54 rax|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 141 56 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 150 12  <||@
  Comment 160 block B1 null  <||@
  Comment 160 58 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 160 -1 r10|DWORD = MOVE input: int[-10259|0xffffffffffffd7ed]  <||@
  Comment 166 60 JUMP ~[] destination: B1 -> B7  <||@
  Comment 166 block B7 null  <||@
  Comment 166 70 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 166 72 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 173 74 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 180 76 DEOPT info [bci:0]  <||@
  Comment 180 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 185 [rsi:0]at java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:641) [bci: 0, duringCall: false, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |-   <||@
  Comment 186 block B6 null  <||@
  Comment 186 62 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 186 -1 r10|DWORD = MOVE input: int[-14875|0xffffffffffffc5e5]  <||@
  Comment 192 64 JUMP ~[] destination: B6 -> B7  <||@
  Comment 194 block B5 null  <||@
  Comment 194 66 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 194 -1 r10|DWORD = MOVE input: int[-17683|0xffffffffffffbaed]  <||@
  Comment 200 68 JUMP ~[] destination: B5 -> B7  <||@
  Comment 202 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 202 4  <||@
  Comment 208 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 208 5  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-5976[java.util.ArrayDeque$DeqIterator.next()]"
  method "HotSpotCompilation-5976[java.util.ArrayDeque$DeqIterator.next()]"
  date 1527005171002
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 106bb8720 448b560849c1e203493bc20f852fd7c4ff900f1f80000000000f1f800000000089842400c0feff4883ec1848896c24108b460c448b5610443bd00f8460000000448b5e18468b04dd14000000468b0cc50c000000443bc80f865d000000463b14dd100000000f855700000049c1e003458b548010438504d4894614ffc041ffc94123c189460c49c1e203498bc2488b6c24104883c41885054a68cdfdc5f877c341baedd7ffff4589979c0200004d89a7a8020000e825eec4ff9041bae5c5ffffebe441baedbaffffebdce8311e090090e80bedc4ff90f4f4  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@2b85326b slotKind: QWORD  <||@
  Comment 48 8 rax|DWORD = MOV [rsi|QWORD[.] + 12] size: DWORD  <||@
  Comment 51 10 r10|DWORD = MOV [rsi|QWORD[.] + 16] size: DWORD  <||@
  Comment 55 12 CMP (x: r10|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 58 14 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2  <||@
  Comment 64 block B2 null  <||@
  Comment 64 16 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 64 18 r11|DWORD[.] = MOV [rsi|QWORD[.] + 24] size: DWORD  <||@
  Comment 68 20 r8|DWORD[.] = MOV [r11|DWORD[.] * 8 + 20] size: DWORD state [bci:0]  <||@
  Comment 68 [rsi:0, r11:0]at java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:641) [bci: 0, duringCall: false, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |-   <||@
  Comment 68 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 76 22 r9|DWORD = MOV [r8|DWORD[.] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 76 [rsi:0, r8:0, r11:0]at java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:641) [bci: 0, duringCall: false, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |-   <||@
  Comment 76 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 84 24 CMP (x: r9|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 87 26 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B6  <||@
  Comment 93 block B3 null  <||@
  Comment 93 28 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 93 30 CMP (x: r10|DWORD, y: [r11|DWORD[.] * 8 + 16]) size: DWORD  <||@
  Comment 101 32 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5  <||@
  Comment 107 block B4 null  <||@
  Comment 107 34 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 107 36 r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4c57ca29 encoding: base: 0 shift: 3  <||@
  Comment 111 38 r10|DWORD[.] = MOV [r8|QWORD[.] + rax|DWORD * 4 + 16] size: DWORD  <||@
  Comment 116 40 NULLCHECK [r12|QWORD[*] + r10|DWORD[.] * 8] state [bci:0]  <||@
  Comment 116 [rsi:0, r10:0]at java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:641) [bci: 0, duringCall: false, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |-   <||@
  Comment 116 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 120 42 MOV (x: [rsi|QWORD[.] + 20], y: rax|DWORD) size: DWORD  <||@
  Comment 123 44 rax|DWORD = INC rax|DWORD size: DWORD  <||@
  Comment 125 46 r9|DWORD = DEC r9|DWORD size: DWORD  <||@
  Comment 128 48 rax|DWORD = AND (x: rax|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 131 50 MOV (x: [rsi|QWORD[.] + 12], y: rax|DWORD) size: DWORD  <||@
  Comment 134 52 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4c57ca29 encoding: base: 0 shift: 3  <||@
  Comment 138 54 rax|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 141 56 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 150 12  <||@
  Comment 160 block B1 null  <||@
  Comment 160 58 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 160 -1 r10|DWORD = MOVE input: int[-10259|0xffffffffffffd7ed]  <||@
  Comment 166 60 JUMP ~[] destination: B1 -> B7  <||@
  Comment 166 block B7 null  <||@
  Comment 166 70 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 166 72 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 173 74 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 180 76 DEOPT info [bci:0]  <||@
  Comment 180 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 185 [rsi:0]at java.util.ArrayDeque$DeqIterator.next(ArrayDeque.java:641) [bci: 0, duringCall: false, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |-   <||@
  Comment 186 block B6 null  <||@
  Comment 186 62 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 186 -1 r10|DWORD = MOVE input: int[-14875|0xffffffffffffc5e5]  <||@
  Comment 192 64 JUMP ~[] destination: B6 -> B7  <||@
  Comment 194 block B5 null  <||@
  Comment 194 66 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 194 -1 r10|DWORD = MOVE input: int[-17683|0xffffffffffffbaed]  <||@
  Comment 200 68 JUMP ~[] destination: B5 -> B7  <||@
  Comment 202 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 202 4  <||@
  Comment 208 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 208 5  <||@
  HexCodeFile>>> <|@
end_nmethod
