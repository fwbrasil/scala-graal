begin_compilation
  name " HotSpotCompilation-9355[org.graalvm.collections.EconomicMapImpl.<init>(Equivalence, UnmodifiableEconomicMap, boolean)]"
  method "HotSpotCompilation-9355[org.graalvm.collections.EconomicMapImpl.<init>(Equivalence, UnmodifiableEconomicMap, boolean)]"
  date 1527005205466
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B51" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v701 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: v701  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Lorg/graalvm/collections/EconomicMapImpl;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 ?102 ?34 ?87 v717 v718 ?70 v727 ?243 v721 v719 ?31 ?243 v720 j373 j500 j569 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a Lorg/graalvm/collections/Equivalence;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 a204 v17 v116 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a3 <|@
d <@d|@=== Debug Properties ===
index: 2
stamp: a -
uncheckedStamp: a Lorg/graalvm/collections/UnmodifiableEconomicMap;
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 ?34 ?87 v715 v729 ?102 v722 v723 v724 v725 ?70 ?243 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i4 <|@
d <@d|@=== Debug Properties ===
index: 3
stamp: i32 [0 - 1] ⇈0000000000000001
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 ?31 i178 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?5 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<EconomicMapImpl.<init>(Equivalence, UnmodifiableEconomicMap, boolean)>
duringCall: false
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 164
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 a3 i4 
=== Succesors ===
=== Usages ===
v276 v701 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 a3 i4  <|@  <|@
f <@~|@floating>@ <|@
tid v729 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a3 
index: - 
=== Succesors ===
=== Usages ===
v701 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v701 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:181) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?5 
guard: - 
address: v729 
=== Succesors ===
next: v360 
=== Usages ===
v577 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?5 guard: - address: v729 #next: v360  <|@  <|@
f <@~|@floating>@ <|@
tid v576 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:181) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
rawvalue: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v577 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v577 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:181) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v701 
y: v576 
=== Succesors ===
=== Usages ===
v360 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v701 y: v576  <|@  <|@
f <@*|@fixed>@ <|@
tid v360 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:181) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v577 
=== Succesors ===
trueSuccessor: v358 
falseSuccessor: v357 
=== Usages ===
=== Predecessor ===
v701 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v577 #trueSuccessor: v358 #falseSuccessor: v357  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v358 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:181) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v20 
=== Usages ===
=== Predecessor ===
v360 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v20  <|@  <|@
f <@~|@floating>@ <|@
tid j386 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:138) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 18]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
rawvalue: 1
stableDimension: 0
stamp: i64 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v446 j471 v477 v550 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i156 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 2]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:71) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 72]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
a416 a530 v457 v482 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
tid ?87 <|@
d <@d|@=== Debug Properties ===
bci: 8
code: ResolvedJavaMethodBytecode<EconomicMapImpl.<init>(Equivalence, UnmodifiableEconomicMap, boolean)>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 165
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - a3 - 
=== Succesors ===
=== Usages ===
?70 ?102 ?243 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - a3 -  <|@  <|@
f <@~|@floating>@ <|@
tid i423 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:138) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 18]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
rawvalue: 23
stableDimension: 0
stamp: i32 [23] ⇊0000000000000017 ⇈0000000000000017
stampKind: i32
value: int[23|0x17]
=== Inputs ===
=== Succesors ===
=== Usages ===
i424 i537 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i401 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:603) [bci: 23]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:138) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 18]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
rawvalue: -8
stableDimension: 0
stamp: i32 [-8] ⇊00000000fffffff8 ⇈00000000fffffff8
stampKind: i32
value: int[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
i402 i508 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i168 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:71) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 72]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
rawvalue: 0
stableDimension: 0
stamp: i8 [0] ⇈0000000000000000
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v504 v379 v573 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i374 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.cardTableShift(GraalHotSpotVMConfig) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:153) [bci: 21]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:164) [bci: 3]
rawvalue: 9
stableDimension: 0
stamp: i32 [9] ⇊0000000000000009 ⇈0000000000000009
stampKind: i32
value: int[9|0x9]
=== Inputs ===
=== Succesors ===
=== Usages ===
j375 j462 j469 j501 j570 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j378 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.loadLongConfigValue(int) [bci: -1]
at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.cardTableAddress(GraalHotSpotVMConfigNode.java:114) [bci: 6]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:133) [bci: 7]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:153) [bci: 21]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:164) [bci: 3]
rawvalue: 4682670080
stableDimension: 0
stamp: i64 [4682670080] ⇊00000001171be000 ⇈00000001171be000
stampKind: i64
value: long[4682670080|0x1171be000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v730 j484 v744 v756 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v725 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a3 
index: - 
=== Succesors ===
=== Usages ===
a709 a705 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v721 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v199 v220 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v724 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a3 
index: - 
=== Succesors ===
=== Usages ===
i708 i704 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v720 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v194 v217 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v723 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a3 
index: - 
=== Succesors ===
=== Usages ===
i707 i703 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v722 <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times1
stamp: void*
=== Inputs ===
base: a3 
index: - 
=== Succesors ===
=== Usages ===
a706 a702 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid i178 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 32
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:155) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:164) [bci: 3]
resultBits: 8
stamp: i8 [0 - 1] ⇈0000000000000001
=== Inputs ===
value: i4 
=== Succesors ===
=== Usages ===
v181 v206 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i4  <|@  <|@
f <@~|@floating>@ <|@
tid v719 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v181 v206 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a241 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:138) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 18]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
rawvalue: null
stableDimension: 0
stamp: n - NULL
stampKind: n -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v177 v692 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v718 <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v177 v205 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a16 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:150) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:164) [bci: 3]
rawvalue: Equivalence$2@812065084
stableDimension: 0
stamp: a!# Lorg/graalvm/collections/Equivalence$2;
stampKind: a -
value: Object[Equivalence$2@812065084]
=== Inputs ===
=== Succesors ===
=== Usages ===
v17 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v17 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:150) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:164) [bci: 3]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a2 
y: a16 
=== Succesors ===
=== Usages ===
v20 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.ObjectEqualsNode>@ x: a2 y: a16  <|@  <|@
f <@*|@fixed>@ <|@
tid v20 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:150) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:164) [bci: 3]
stamp: void
trueSuccessorProbability: 0.28618472457813726
=== Inputs ===
condition: v17 
=== Succesors ===
trueSuccessor: v18 
falseSuccessor: v19 
=== Usages ===
=== Predecessor ===
v358 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v17 #trueSuccessor: v18 #falseSuccessor: v19  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B6" 
    xhandlers
    flags 
    probability 4598827065593782828
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v18 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:151) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:164) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v177 
=== Usages ===
=== Predecessor ===
v20 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v177  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v177 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: EconomicMapImpl.strategy
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:151) [bci: 13]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:164) [bci: 3]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v718 
value: a241 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v181 
=== Usages ===
=== Predecessor ===
v18 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v718 value: a241 stateAfter: - lastLocationAccess: - #next: v181  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v181 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: EconomicMapImpl.isSet
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:155) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:164) [bci: 3]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v719 
value: i178 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v182 
=== Usages ===
=== Predecessor ===
v177 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v719 value: i178 stateAfter: - lastLocationAccess: - #next: v182  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v182 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: ANY_LOCATION
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:156) [bci: 29]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:164) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: a702 
=== Usages ===
=== Predecessor ===
v181 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a702  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a702 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.strategy
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:184) [bci: 17]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
nullCheck: false
stamp: n Lorg/graalvm/collections/Equivalence;
=== Inputs ===
stateBefore: - 
guard: - 
address: v722 
=== Succesors ===
next: v282 
=== Usages ===
v250 
=== Predecessor ===
v182 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v722 #next: v282  <|@  <|@
f <@~|@floating>@ <|@
tid v250 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:184) [bci: 20]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
stamp: void
=== Inputs ===
value: a702 
=== Succesors ===
=== Usages ===
v282 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a702  <|@  <|@
f <@*|@fixed>@ <|@
tid v282 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:184) [bci: 20]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v250 
=== Succesors ===
trueSuccessor: v279 
falseSuccessor: v281 
=== Usages ===
=== Predecessor ===
a702 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v250 #trueSuccessor: v279 #falseSuccessor: v281  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4598827065593782828
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v279 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:184) [bci: 20]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: i703 
=== Usages ===
=== Predecessor ===
v282 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i703  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i703 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.totalEntries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:185) [bci: 25]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v723 
=== Succesors ===
next: v194 
=== Usages ===
v194 
=== Predecessor ===
v279 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v723 #next: v194  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v194 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: EconomicMapImpl.totalEntries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:185) [bci: 28]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v720 
value: i703 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: i704 
=== Usages ===
=== Predecessor ===
i703 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v720 value: i703 stateAfter: - lastLocationAccess: - #next: i704  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i704 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.deletedEntries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:186) [bci: 33]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v724 
=== Succesors ===
next: v199 
=== Usages ===
v199 
=== Predecessor ===
v194 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v724 #next: v199  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v199 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: EconomicMapImpl.deletedEntries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:186) [bci: 36]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v721 
value: i704 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a705 
=== Usages ===
=== Predecessor ===
i704 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v721 value: i704 stateAfter: - lastLocationAccess: - #next: a705  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a705 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.entries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:187) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
nullCheck: false
stamp: n [Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v725 
=== Succesors ===
next: v54 
=== Usages ===
a336 v251 
=== Predecessor ===
v199 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v725 #next: v54  <|@  <|@
f <@~|@floating>@ <|@
tid v251 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:187) [bci: 43]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
stamp: void
=== Inputs ===
value: a705 
=== Succesors ===
=== Usages ===
v54 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a705  <|@  <|@
f <@*|@fixed>@ <|@
tid v54 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:187) [bci: 43]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
stamp: void
trueSuccessorProbability: 0.43505536670411277
=== Inputs ===
condition: v251 
=== Succesors ===
trueSuccessor: v52 
falseSuccessor: v53 
=== Usages ===
=== Predecessor ===
a705 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v251 #trueSuccessor: v52 #falseSuccessor: v53  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B37" 
    xhandlers
    flags 
    probability 4593636037899331971
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v52 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:190) [bci: 60]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v67 
=== Usages ===
=== Predecessor ===
v54 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v67  <|@  <|@
f <@*|@fixed>@ <|@
tid v67 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:190) [bci: 60]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v68 
=== Predecessor ===
v52 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B11" 
    xhandlers
    flags 
    probability 4594993103024205718
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v53 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v101 
=== Usages ===
=== Predecessor ===
v54 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v101  <|@  <|@
f <@*|@fixed>@ <|@
tid v101 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v100 
=== Predecessor ===
v53 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v281 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:184) [bci: 20]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v347 
=== Usages ===
=== Predecessor ===
v282 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v347  <|@  <|@
f <@~|@floating>@ <|@
tid i348 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -48659
stableDimension: 0
stamp: i32 [-48659] ⇊00000000ffff41ed ⇈00000000ffff41ed
stampKind: i32
value: int[-48659|0xffffffffffff41ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i350 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v347 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v346 
=== Predecessor ===
v281 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B8" "B49" 
    xhandlers
    flags 
    probability 4604604695962078954
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v19 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:153) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:164) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v205 
=== Usages ===
=== Predecessor ===
v20 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v205  <|@  <|@
f <@~|@floating>@ <|@
tid a204 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:153) [bci: 21]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:164) [bci: 3]
op: Compress
stamp: n Lorg/graalvm/collections/Equivalence;
=== Inputs ===
value: a2 
=== Succesors ===
=== Usages ===
v205 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v205 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: EconomicMapImpl.strategy
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:153) [bci: 21]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:164) [bci: 3]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v718 
value: a204 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j373 
=== Usages ===
=== Predecessor ===
v19 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v718 value: a204 stateAfter: - lastLocationAccess: - #next: j373  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j373 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:153) [bci: 21]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:164) [bci: 3]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1 
=== Succesors ===
next: v379 
=== Usages ===
j375 
=== Predecessor ===
v205 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a1 #next: v379  <|@  <|@
f <@~|@floating>@ <|@
tid j375 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:153) [bci: 21]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:164) [bci: 3]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j373 
y: i374 
=== Succesors ===
=== Usages ===
v730 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j373 y: i374  <|@  <|@
f <@~|@floating>@ <|@
tid v730 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j375 
index: j378 
=== Succesors ===
=== Usages ===
v379 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j375 index: j378  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v379 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:153) [bci: 21]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:164) [bci: 3]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v730 
value: i168 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v206 
=== Usages ===
=== Predecessor ===
j373 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v730 value: i168 stateAfter: - lastLocationAccess: - #next: v206  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v206 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: EconomicMapImpl.isSet
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:155) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:164) [bci: 3]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v719 
value: i178 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v207 
=== Usages ===
=== Predecessor ===
v379 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v719 value: i178 stateAfter: - lastLocationAccess: - #next: v207  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v207 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: ANY_LOCATION
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:156) [bci: 29]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:164) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: a706 
=== Usages ===
=== Predecessor ===
v206 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a706  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a706 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.strategy
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:184) [bci: 17]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
nullCheck: false
stamp: n Lorg/graalvm/collections/Equivalence;
=== Inputs ===
stateBefore: - 
guard: - 
address: v722 
=== Succesors ===
next: v286 
=== Usages ===
a213 
=== Predecessor ===
v207 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v722 #next: v286  <|@  <|@
f <@~|@floating>@ <|@
tid a213 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:184) [bci: 17]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
op: Uncompress
stamp: a Lorg/graalvm/collections/Equivalence;
=== Inputs ===
value: a706 
=== Succesors ===
=== Usages ===
v116 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a706  <|@  <|@
f <@~|@floating>@ <|@
tid v116 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:184) [bci: 20]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a2 
y: a213 
=== Succesors ===
=== Usages ===
v286 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.ObjectEqualsNode>@ x: a2 y: a213  <|@  <|@
f <@*|@fixed>@ <|@
tid v286 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:184) [bci: 20]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v116 
=== Succesors ===
trueSuccessor: v283 
falseSuccessor: v285 
=== Usages ===
=== Predecessor ===
a706 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v116 #trueSuccessor: v283 #falseSuccessor: v285  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4604604695962078954
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v283 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:184) [bci: 20]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: i707 
=== Usages ===
=== Predecessor ===
v286 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i707  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i707 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.totalEntries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:185) [bci: 25]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v723 
=== Succesors ===
next: v217 
=== Usages ===
v217 
=== Predecessor ===
v283 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v723 #next: v217  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v217 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: EconomicMapImpl.totalEntries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:185) [bci: 28]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v720 
value: i707 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: i708 
=== Usages ===
=== Predecessor ===
i707 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v720 value: i707 stateAfter: - lastLocationAccess: - #next: i708  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i708 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.deletedEntries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:186) [bci: 33]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v724 
=== Succesors ===
next: v220 
=== Usages ===
v220 
=== Predecessor ===
v217 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v724 #next: v220  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v220 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: EconomicMapImpl.deletedEntries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:186) [bci: 36]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v721 
value: i708 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a709 
=== Usages ===
=== Predecessor ===
i708 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v721 value: i708 stateAfter: - lastLocationAccess: - #next: a709  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a709 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.entries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:187) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
nullCheck: false
stamp: n [Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v725 
=== Succesors ===
next: v128 
=== Usages ===
a336 v252 
=== Predecessor ===
v220 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v725 #next: v128  <|@  <|@
f <@~|@floating>@ <|@
tid v252 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:187) [bci: 43]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
stamp: void
=== Inputs ===
value: a709 
=== Succesors ===
=== Usages ===
v128 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a709  <|@  <|@
f <@*|@fixed>@ <|@
tid v128 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:187) [bci: 43]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
stamp: void
trueSuccessorProbability: 0.43505536670411277
=== Inputs ===
condition: v252 
=== Succesors ===
trueSuccessor: v126 
falseSuccessor: v127 
=== Usages ===
=== Predecessor ===
a709 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v252 #trueSuccessor: v126 #falseSuccessor: v127  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B37" 
    xhandlers
    flags 
    probability 4599265976358360866
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v126 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:190) [bci: 60]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v129 
=== Usages ===
=== Predecessor ===
v128 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v129  <|@  <|@
f <@*|@fixed>@ <|@
tid v129 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v68 
=== Predecessor ===
v126 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4600936216311056049
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v127 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v103 
=== Usages ===
=== Predecessor ===
v128 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v103  <|@  <|@
f <@*|@fixed>@ <|@
tid v103 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v100 
=== Predecessor ===
v127 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B5" "B10" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4603263788425269054
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a336 <|@
d <@d|@=== Debug Properties ===
stamp: n [Ljava/lang/Object;
valueDescription: n -
=== Inputs ===
merge: v100 
values: a705 a709 
=== Succesors ===
=== Usages ===
a337 v726 v731 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v100 values: a705 a709  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v100 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v101 v103 
=== Succesors ===
next: j403 
=== Usages ===
a336 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v101 v103 #next: j403  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j403 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:772) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:319) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:138) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 18]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j442 
=== Usages ===
v732 v733 
=== Predecessor ===
v100 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j442  <|@  <|@
f <@~|@floating>@ <|@
tid v732 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j403 
index: - 
=== Succesors ===
=== Usages ===
j442 v444 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j403 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j442 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:245) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:320) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:138) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 18]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v732 
=== Succesors ===
next: j443 
=== Usages ===
j407 v734 v735 a415 v740 v736 v737 v738 v739 
=== Predecessor ===
j403 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v732 #next: j443  <|@  <|@
f <@~|@floating>@ <|@
tid v733 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j403 
index: - 
=== Succesors ===
=== Usages ===
j443 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j403 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j443 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:249) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:321) [bci: 25]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:138) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 18]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v733 
=== Succesors ===
next: i710 
=== Usages ===
v408 
=== Predecessor ===
j442 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v733 #next: i710  <|@  <|@
f <@~|@floating>@ <|@
tid v726 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a336 
=== Succesors ===
=== Usages ===
i710 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a336  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i710 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 14]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v726 
=== Succesors ===
next: v711 
=== Usages ===
a416 j495 v445 i465 v457 i400 
=== Predecessor ===
j443 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v726 #next: v711  <|@  <|@
f <@~|@floating>@ <|@
tid v731 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a336 
=== Succesors ===
=== Usages ===
v711 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a336  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v711 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.ClassGetHubNode.readClass(Class) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotClassSubstitutions.getComponentType(HotSpotClassSubstitutions.java:120) [bci: 1]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 4]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v731 
=== Succesors ===
next: v411 
=== Usages ===
v384 v449 
=== Predecessor ===
i710 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v731 #next: v411  <|@  <|@
f <@~|@floating>@ <|@
tid i399 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:403) [bci: 191]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:138) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 18]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
rawvalue: 2
stableDimension: 0
stamp: i32 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
i400 i466 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i400 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 8]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:138) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 18]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
stamp: i32 [-2147483648 - 2147483644] ⇈00000000fffffffc
=== Inputs ===
x: i710 
y: i399 
=== Succesors ===
=== Usages ===
i424 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i710 y: i399  <|@  <|@
f <@~|@floating>@ <|@
tid i424 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:138) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 18]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
stamp: i32 [-2147483645 - 2147483647] ⇊0000000000000003
=== Inputs ===
x: i400 
y: i423 
=== Succesors ===
=== Usages ===
i402 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i400 y: i423  <|@  <|@
f <@~|@floating>@ <|@
tid i402 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:604) [bci: 30]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:138) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 18]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i424 
y: i401 
=== Succesors ===
=== Usages ===
j406 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i424 y: i401  <|@  <|@
f <@~|@floating>@ <|@
tid j406 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:138) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 18]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
resultBits: 64
stamp: i64 [-2147483648 - 2147483640] ⇈fffffffffffffff8
=== Inputs ===
value: i402 
=== Succesors ===
=== Usages ===
j407 v736 v737 v738 v739 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i402  <|@  <|@
f <@~|@floating>@ <|@
tid j407 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:138) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 18]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
stamp: i64
=== Inputs ===
x: j406 
y: j442 
=== Succesors ===
=== Usages ===
v408 v444 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j406 y: j442  <|@  <|@
f <@~|@floating>@ <|@
tid v408 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 83]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:138) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 18]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j443 
y: j407 
=== Succesors ===
=== Usages ===
v411 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j443 y: j407  <|@  <|@
f <@*|@fixed>@ <|@
tid v411 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 89]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:138) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 18]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v408 
=== Succesors ===
trueSuccessor: v409 
falseSuccessor: v410 
=== Usages ===
=== Predecessor ===
v711 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v408 #trueSuccessor: v409 #falseSuccessor: v410  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" 
    xhandlers
    flags 
    probability 4573163390320073526
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v409 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:138) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 18]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: a416 
=== Usages ===
=== Predecessor ===
v411 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a416  <|@  <|@
tid ?102 <|@
d <@d|@=== Debug Properties ===
bci: 39
code: ResolvedJavaMethodBytecode<EconomicMapImpl.initFrom(Object)>
duringCall: false
localsSize: 3
locksSize: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:186) [bci: 36]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 187
stackSize: 0
=== Inputs ===
outerFrameState: ?87 
values: a1 - a3 
=== Succesors ===
=== Usages ===
a416 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?87 values: a1 - a3  <|@  <|@
f <@~|@floating>@ <|@
tid v384 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.ClassGetHubNode.readClass(Class) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotClassSubstitutions.getComponentType(HotSpotClassSubstitutions.java:120) [bci: 1]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 4]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
op: Uncompress
stamp: Klass*!
=== Inputs ===
value: v711 
=== Succesors ===
=== Usages ===
a416 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: v711  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a416 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.newArray(ForeignCallDescriptor, KlassPointer, int, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 155]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:138) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 18]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?102 
arguments: v384 i710 i156 
=== Succesors ===
next: v419 
=== Usages ===
a420 
=== Predecessor ===
v409 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?102 arguments: v384 i710 i156 #next: v419  <|@  <|@
f <@*|@fixed>@ <|@
tid v419 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:138) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 18]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v418 
=== Predecessor ===
a416 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" 
    xhandlers
    flags 
    probability 4603212902736469128
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v410 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 92]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:138) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 18]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v444 
=== Usages ===
=== Predecessor ===
v411 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v444  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v444 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:257) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 96]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:138) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 18]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v732 
value: j407 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v429 
=== Usages ===
=== Predecessor ===
v410 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v732 value: j407 stateAfter: - lastLocationAccess: - #next: v429  <|@  <|@
f <@~|@floating>@ <|@
tid v736 <|@
d <@d|@=== Debug Properties ===
displacement: 192
scale: Times1
stamp: void*
=== Inputs ===
base: j406 
index: j442 
=== Succesors ===
=== Usages ===
v429 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j406 index: j442  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v429 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:138) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 18]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
stamp: void
=== Inputs ===
address: v736 
=== Succesors ===
next: v432 
=== Usages ===
=== Predecessor ===
v444 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v736 #next: v432  <|@  <|@
f <@~|@floating>@ <|@
tid v737 <|@
d <@d|@=== Debug Properties ===
displacement: 256
scale: Times1
stamp: void*
=== Inputs ===
base: j406 
index: j442 
=== Succesors ===
=== Usages ===
v432 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j406 index: j442  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v432 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:138) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 18]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
stamp: void
=== Inputs ===
address: v737 
=== Succesors ===
next: v435 
=== Usages ===
=== Predecessor ===
v429 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v737 #next: v435  <|@  <|@
f <@~|@floating>@ <|@
tid v738 <|@
d <@d|@=== Debug Properties ===
displacement: 320
scale: Times1
stamp: void*
=== Inputs ===
base: j406 
index: j442 
=== Succesors ===
=== Usages ===
v435 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j406 index: j442  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v435 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:138) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 18]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
stamp: void
=== Inputs ===
address: v738 
=== Succesors ===
next: v438 
=== Usages ===
=== Predecessor ===
v432 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v738 #next: v438  <|@  <|@
f <@~|@floating>@ <|@
tid v739 <|@
d <@d|@=== Debug Properties ===
displacement: 384
scale: Times1
stamp: void*
=== Inputs ===
base: j406 
index: j442 
=== Succesors ===
=== Usages ===
v438 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j406 index: j442  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v438 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:138) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 18]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
stamp: void
=== Inputs ===
address: v739 
=== Succesors ===
next: v445 
=== Usages ===
=== Predecessor ===
v435 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v739 #next: v445  <|@  <|@
f <@~|@floating>@ <|@
tid v734 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j442 
index: - 
=== Succesors ===
=== Usages ===
v445 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j442 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v445 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:549) [bci: 12]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:138) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 18]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v734 
value: i710 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v446 
=== Usages ===
=== Predecessor ===
v438 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v734 value: i710 stateAfter: - lastLocationAccess: - #next: v446  <|@  <|@
f <@~|@floating>@ <|@
tid v735 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j442 
index: - 
=== Succesors ===
=== Usages ===
v446 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j442 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v446 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:469) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:138) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 18]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v735 
value: j386 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v449 
=== Usages ===
=== Predecessor ===
v445 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v735 value: j386 stateAfter: - lastLocationAccess: - #next: v449  <|@  <|@
f <@~|@floating>@ <|@
tid v740 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j442 
index: - 
=== Succesors ===
=== Usages ===
v449 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j442 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v449 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:138) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 18]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v740 
value: v711 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v414 
=== Usages ===
=== Predecessor ===
v446 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v740 value: v711 stateAfter: - lastLocationAccess: - #next: v414  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v414 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.MembarNode.memoryBarrier(int, LocationIdentity) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:560) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:138) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 18]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: a415 
=== Usages ===
=== Predecessor ===
v449 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a415  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a415 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:561) [bci: 71]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:138) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 18]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
stamp: a! -
trackedPointer: true
=== Inputs ===
input: j442 
=== Succesors ===
next: v417 
=== Usages ===
a420 
=== Predecessor ===
v414 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j442 #next: v417  <|@  <|@
f <@*|@fixed>@ <|@
tid v417 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:138) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 18]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v418 
=== Predecessor ===
a415 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4603263788425269054
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a420 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:138) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 18]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
stamp: a! -
valueDescription: a -
=== Inputs ===
merge: v418 
values: a415 a416 
=== Succesors ===
=== Usages ===
v728 a344 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v418 values: a415 a416  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v418 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:138) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 18]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v417 v419 
=== Succesors ===
next: v643 
=== Usages ===
a420 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v417 v419 #next: v643  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v643 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v590 
=== Usages ===
j645 
=== Predecessor ===
v418 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v590  <|@  <|@
f <@~|@floating>@ <|@
tid v728 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a420 
index: - 
=== Succesors ===
=== Usages ===
j645 j463 j461 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a420 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j495 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: true
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.disjointUninitializedArraycopy(ArrayCopyCallNode.java:211) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:122) [bci: 37]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
resultBits: 64
stamp: i64 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
value: i710 
=== Succesors ===
=== Usages ===
v496 j686 j673 j679 j683 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i710  <|@  <|@
f <@~|@floating>@ <|@
tid v457 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:154) [bci: 1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:138) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 18]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i710 
y: i156 
=== Succesors ===
=== Usages ===
v460 v590 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i710 y: i156  <|@  <|@
f <@~|@floating>@ <|@
tid j475 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 50]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:138) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 18]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
rawvalue: -1
stableDimension: 0
stamp: i64 [-1] ⇊ffffffffffffffff
stampKind: i64
value: long[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
j476 j686 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v590 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v457 
=== Succesors ===
trueSuccessor: v588 
falseSuccessor: v589 
=== Usages ===
=== Predecessor ===
v643 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v457 #trueSuccessor: v588 #falseSuccessor: v589  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B30" 
    xhandlers
    flags 
    probability 4598760188797898558
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v588 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v608 
=== Usages ===
=== Predecessor ===
v590 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v608  <|@  <|@
f <@*|@fixed>@ <|@
tid v608 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v609 
=== Predecessor ===
v588 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4598760188797898558
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v589 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v594 
=== Usages ===
=== Predecessor ===
v590 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v594  <|@  <|@
f <@~|@floating>@ <|@
tid j645 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v643 
address: v728 
=== Succesors ===
=== Usages ===
v757 v758 v759 v760 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v643 address: v728  <|@  <|@
f <@~|@floating>@ <|@
tid j672 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -8
stableDimension: 0
stamp: i64 [-8] ⇊fffffffffffffff8 ⇈fffffffffffffff8
stampKind: i64
value: long[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j673 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j673 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-8 - 2147483639]
=== Inputs ===
x: j495 
y: j672 
=== Succesors ===
=== Usages ===
v674 v676 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j495 y: j672  <|@  <|@
f <@~|@floating>@ <|@
tid j427 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:469) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:138) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 18]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
rawvalue: 0
stableDimension: 0
stamp: i64 [0] ⇈0000000000000000
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j666 j660 v674 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v674 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j673 
y: j427 
=== Succesors ===
=== Usages ===
v594 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j673 y: j427  <|@  <|@
f <@*|@fixed>@ <|@
tid v594 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v674 
=== Succesors ===
trueSuccessor: v592 
falseSuccessor: v593 
=== Usages ===
=== Predecessor ===
v589 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v674 #trueSuccessor: v592 #falseSuccessor: v593  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B21" 
    xhandlers
    flags 
    probability 4596800873610524381
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v592 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v604 
=== Usages ===
=== Predecessor ===
v594 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v604  <|@  <|@
f <@*|@fixed>@ <|@
tid v604 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v605 
=== Predecessor ===
v592 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4589752989543157566
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v593 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v595 
=== Usages ===
=== Predecessor ===
v594 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v595  <|@  <|@
f <@~|@floating>@ <|@
tid j369 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:181) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
rawvalue: 8
stableDimension: 0
stamp: i64 [8] ⇊0000000000000008 ⇈0000000000000008
stampKind: i64
value: long[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j671 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v698 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <null,null,null,null,null,null,null,null>
stableDimension: 0
stamp: <n - NULL,n - NULL,n - NULL,n - NULL,n - NULL,n - NULL,n - NULL,n - NULL>
stampKind: <n -,n -,n -,n -,n -,n -,n -,n ->
value: SIMD<null,null,null,null,null,null,null,null>
=== Inputs ===
=== Succesors ===
=== Usages ===
v697 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v595 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v596 
=== Predecessor ===
v593 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B48" 
    successors "B20" "B48" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4598760188797898558
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j666 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v596 
values: j427 j671 
=== Succesors ===
=== Usages ===
v760 j671 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v596 values: j427 j671  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v596 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v595 
=== Succesors ===
next: v697 
=== Usages ===
j666 v600 v601 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v595 #next: v697  <|@  <|@
f <@~|@floating>@ <|@
tid v760 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j645 
index: j666 
=== Succesors ===
=== Usages ===
v697 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j645 index: j666  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v697 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v760 
value: v698 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v603 
=== Usages ===
=== Predecessor ===
v596 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v760 value: v698 stateAfter: - lastLocationAccess: - #next: v603  <|@  <|@
f <@~|@floating>@ <|@
tid j671 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j666 
y: j369 
=== Succesors ===
=== Usages ===
j660 j666 v676 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j666 y: j369  <|@  <|@
f <@~|@floating>@ <|@
tid v676 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j673 
y: j671 
=== Succesors ===
=== Usages ===
v603 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j673 y: j671  <|@  <|@
f <@*|@fixed>@ <|@
tid v603 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v676 
=== Succesors ===
trueSuccessor: v600 
falseSuccessor: v602 
=== Usages ===
=== Predecessor ===
v697 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v676 #trueSuccessor: v600 #falseSuccessor: v602  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" 
    xhandlers
    flags 
    probability 4589752989543157566
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v600 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v596 
=== Succesors ===
next: v606 
=== Usages ===
=== Predecessor ===
v603 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v596 #next: v606  <|@  <|@
f <@*|@fixed>@ <|@
tid v606 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v605 
=== Predecessor ===
v600 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B17" "B20" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4598760188797898558
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j660 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v605 
values: j427 j671 
=== Succesors ===
=== Usages ===
v759 j665 j653 v680 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v605 values: j427 j671  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v605 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v604 v606 
=== Succesors ===
next: v624 
=== Usages ===
j660 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v604 v606 #next: v624  <|@  <|@
f <@~|@floating>@ <|@
tid j678 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -4
stableDimension: 0
stamp: i64 [-4] ⇊fffffffffffffffc ⇈fffffffffffffffc
stampKind: i64
value: long[-4|0xfffffffffffffffc]
=== Inputs ===
=== Succesors ===
=== Usages ===
j679 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j679 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4 - 2147483643]
=== Inputs ===
x: j495 
y: j678 
=== Succesors ===
=== Usages ===
v680 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j495 y: j678  <|@  <|@
f <@~|@floating>@ <|@
tid v680 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j679 
y: j660 
=== Succesors ===
=== Usages ===
v624 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j679 y: j660  <|@  <|@
f <@*|@fixed>@ <|@
tid v624 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v680 
=== Succesors ===
trueSuccessor: v623 
falseSuccessor: v622 
=== Usages ===
=== Predecessor ===
v605 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v680 #trueSuccessor: v623 #falseSuccessor: v622  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4589752989543157566
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v623 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v627 
=== Usages ===
=== Predecessor ===
v624 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v627  <|@  <|@
f <@*|@fixed>@ <|@
tid v627 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v616 
=== Predecessor ===
v623 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4596800873610524381
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v622 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v696 
=== Usages ===
=== Predecessor ===
v624 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v696  <|@  <|@
f <@~|@floating>@ <|@
tid v759 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j645 
index: j660 
=== Succesors ===
=== Usages ===
v696 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j645 index: j660  <|@  <|@
f <@~|@floating>@ <|@
tid v700 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <null,null,null,null>
stableDimension: 0
stamp: <n - NULL,n - NULL,n - NULL,n - NULL>
stampKind: <n -,n -,n -,n ->
value: SIMD<null,null,null,null>
=== Inputs ===
=== Succesors ===
=== Usages ===
v696 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v696 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v759 
value: v700 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v615 
=== Usages ===
=== Predecessor ===
v622 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v759 value: v700 stateAfter: - lastLocationAccess: - #next: v615  <|@  <|@
f <@~|@floating>@ <|@
tid j648 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 4
stableDimension: 0
stamp: i64 [4] ⇊0000000000000004 ⇈0000000000000004
stampKind: i64
value: long[4|0x4]
=== Inputs ===
=== Succesors ===
=== Usages ===
j665 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j665 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j660 
y: j648 
=== Succesors ===
=== Usages ===
j653 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j660 y: j648  <|@  <|@
f <@*|@fixed>@ <|@
tid v615 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v616 
=== Predecessor ===
v696 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B22" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4598760188797898558
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j653 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v616 
values: j665 j660 
=== Succesors ===
=== Usages ===
v758 j659 j646 v684 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v616 values: j665 j660  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v616 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v615 v627 
=== Succesors ===
next: v630 
=== Usages ===
j653 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v615 v627 #next: v630  <|@  <|@
f <@~|@floating>@ <|@
tid j682 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -2
stableDimension: 0
stamp: i64 [-2] ⇊fffffffffffffffe ⇈fffffffffffffffe
stampKind: i64
value: long[-2|0xfffffffffffffffe]
=== Inputs ===
=== Succesors ===
=== Usages ===
j683 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j683 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2 - 2147483645]
=== Inputs ===
x: j495 
y: j682 
=== Succesors ===
=== Usages ===
v684 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j495 y: j682  <|@  <|@
f <@~|@floating>@ <|@
tid v684 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j683 
y: j653 
=== Succesors ===
=== Usages ===
v630 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j683 y: j653  <|@  <|@
f <@*|@fixed>@ <|@
tid v630 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v684 
=== Succesors ===
trueSuccessor: v629 
falseSuccessor: v628 
=== Usages ===
=== Predecessor ===
v616 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v684 #trueSuccessor: v629 #falseSuccessor: v628  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4589752989543157566
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v629 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v633 
=== Usages ===
=== Predecessor ===
v630 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v633  <|@  <|@
f <@*|@fixed>@ <|@
tid v633 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v619 
=== Predecessor ===
v629 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4596800873610524381
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v628 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v694 
=== Usages ===
=== Predecessor ===
v630 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v694  <|@  <|@
f <@~|@floating>@ <|@
tid v758 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j645 
index: j653 
=== Succesors ===
=== Usages ===
v694 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j645 index: j653  <|@  <|@
f <@~|@floating>@ <|@
tid v699 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <null,null>
stableDimension: 0
stamp: <n - NULL,n - NULL>
stampKind: <n -,n ->
value: SIMD<null,null>
=== Inputs ===
=== Succesors ===
=== Usages ===
v694 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v694 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v758 
value: v699 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v618 
=== Usages ===
=== Predecessor ===
v628 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v758 value: v699 stateAfter: - lastLocationAccess: - #next: v618  <|@  <|@
f <@~|@floating>@ <|@
tid j658 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 2
stableDimension: 0
stamp: i64 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i64
value: long[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
j659 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j659 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j653 
y: j658 
=== Succesors ===
=== Usages ===
j646 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j653 y: j658  <|@  <|@
f <@*|@fixed>@ <|@
tid v618 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v619 
=== Predecessor ===
v694 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4598760188797898558
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j646 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v619 
values: j659 j653 
=== Succesors ===
=== Usages ===
v757 v687 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v619 values: j659 j653  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v619 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v618 v633 
=== Succesors ===
next: v636 
=== Usages ===
j646 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v618 v633 #next: v636  <|@  <|@
f <@~|@floating>@ <|@
tid j686 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-1 - 2147483646]
=== Inputs ===
x: j495 
y: j475 
=== Succesors ===
=== Usages ===
v687 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j495 y: j475  <|@  <|@
f <@~|@floating>@ <|@
tid v687 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j686 
y: j646 
=== Succesors ===
=== Usages ===
v636 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j686 y: j646  <|@  <|@
f <@*|@fixed>@ <|@
tid v636 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v687 
=== Succesors ===
trueSuccessor: v635 
falseSuccessor: v634 
=== Usages ===
=== Predecessor ===
v619 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v687 #trueSuccessor: v635 #falseSuccessor: v634  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4589752989543157566
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v635 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v639 
=== Usages ===
=== Predecessor ===
v636 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v639  <|@  <|@
f <@*|@fixed>@ <|@
tid v639 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v609 
=== Predecessor ===
v635 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4596800873610524381
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v634 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v692 
=== Usages ===
=== Predecessor ===
v636 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v692  <|@  <|@
f <@~|@floating>@ <|@
tid v757 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j645 
index: j646 
=== Succesors ===
=== Usages ===
v692 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j645 index: j646  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v692 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v757 
value: a241 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v621 
=== Usages ===
=== Predecessor ===
v634 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v757 value: a241 stateAfter: - lastLocationAccess: - #next: v621  <|@  <|@
f <@*|@fixed>@ <|@
tid v621 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v609 
=== Predecessor ===
v692 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B15" "B29" "B28" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4603263788425269054
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v609 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v608 v621 v639 
=== Succesors ===
next: v460 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v608 v621 v639 #next: v460  <|@  <|@
f <@*|@fixed>@ <|@
tid v460 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:154) [bci: 1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:138) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 18]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v457 
=== Succesors ===
trueSuccessor: v458 
falseSuccessor: v459 
=== Usages ===
=== Predecessor ===
v609 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v457 #trueSuccessor: v458 #falseSuccessor: v459  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B35" 
    xhandlers
    flags 
    probability 4598760188797898558
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v458 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:155) [bci: 4]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:138) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 18]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v486 
=== Usages ===
=== Predecessor ===
v460 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v486  <|@  <|@
f <@*|@fixed>@ <|@
tid v486 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:138) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 18]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v485 
=== Predecessor ===
v458 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" 
    xhandlers
    flags 
    probability 4598760188797898558
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v459 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:157) [bci: 5]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:138) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 18]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: j461 
=== Usages ===
=== Predecessor ===
v460 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j461  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j461 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToFirstArrayElement(WriteBarrierSnippets.java:376) [bci: 1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:159) [bci: 20]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:138) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 18]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v728 
=== Succesors ===
next: j463 
=== Usages ===
j462 
=== Predecessor ===
v459 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: v728 #next: j463  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j463 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToLastArrayElement(WriteBarrierSnippets.java:385) [bci: 1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 30]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:138) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 18]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v728 
=== Succesors ===
next: v472 
=== Usages ===
j468 
=== Predecessor ===
j461 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: v728 #next: v472  <|@  <|@
f <@~|@floating>@ <|@
tid i464 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToLastArrayElement(WriteBarrierSnippets.java:390) [bci: 23]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 30]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:138) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 18]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1] ⇊00000000ffffffff
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i465 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i465 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToLastArrayElement(WriteBarrierSnippets.java:390) [bci: 23]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 30]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:138) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 18]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
stamp: i32 [-1 - 2147483646]
=== Inputs ===
x: i710 
y: i464 
=== Succesors ===
=== Usages ===
i466 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i710 y: i464  <|@  <|@
f <@~|@floating>@ <|@
tid i466 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToLastArrayElement(WriteBarrierSnippets.java:390) [bci: 25]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 30]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:138) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 18]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
stamp: i32 [-2147483648 - 2147483644] ⇈00000000fffffffc
=== Inputs ===
x: i465 
y: i399 
=== Succesors ===
=== Usages ===
j467 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i465 y: i399  <|@  <|@
f <@~|@floating>@ <|@
tid j467 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToLastArrayElement(WriteBarrierSnippets.java:390) [bci: 26]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 30]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:138) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 18]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
resultBits: 64
stamp: i64 [-2147483648 - 2147483644] ⇈fffffffffffffffc
=== Inputs ===
value: i466 
=== Succesors ===
=== Usages ===
j468 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i466  <|@  <|@
f <@~|@floating>@ <|@
tid j468 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToLastArrayElement(WriteBarrierSnippets.java:390) [bci: 27]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 30]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:138) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 18]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
stamp: i64
=== Inputs ===
x: j463 
y: j467 
=== Succesors ===
=== Usages ===
j469 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j463 y: j467  <|@  <|@
f <@~|@floating>@ <|@
tid j469 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 34]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:138) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 18]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j468 
y: i374 
=== Succesors ===
=== Usages ===
j470 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j468 y: i374  <|@  <|@
f <@~|@floating>@ <|@
tid j462 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:159) [bci: 24]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:138) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 18]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j461 
y: i374 
=== Succesors ===
=== Usages ===
j470 j484 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j461 y: i374  <|@  <|@
f <@~|@floating>@ <|@
tid j470 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:161) [bci: 41]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:138) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 18]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
stamp: i64 [-36028797018963967 - 36028797018963967]
=== Inputs ===
x: j469 
y: j462 
=== Succesors ===
=== Usages ===
j471 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j469 y: j462  <|@  <|@
f <@~|@floating>@ <|@
tid j471 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:161) [bci: 43]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:138) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 18]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
stamp: i64 [-36028797018963966 - 36028797018963968]
=== Inputs ===
x: j470 
y: j386 
=== Succesors ===
=== Usages ===
j474 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j470 y: j386  <|@  <|@
f <@*|@fixed>@ <|@
tid v472 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 46]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:138) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 18]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v473 
=== Predecessor ===
j463 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" "B47" 
    successors "B34" "B47" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4603263788425269054
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j474 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:138) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 18]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v473 
values: j471 j476 
=== Succesors ===
=== Usages ===
j476 v477 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v473 values: j471 j476  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v473 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 2.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 46]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:138) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 18]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v472 
=== Succesors ===
next: v480 
=== Usages ===
j474 v478 v483 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v472 #next: v480  <|@  <|@
f <@~|@floating>@ <|@
tid v477 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 55]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:138) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 18]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j474 
y: j386 
=== Succesors ===
=== Usages ===
v480 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j474 y: j386  <|@  <|@
f <@*|@fixed>@ <|@
tid v480 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 55]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:138) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 18]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v477 
=== Succesors ===
trueSuccessor: v478 
falseSuccessor: v479 
=== Usages ===
=== Predecessor ===
v473 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v477 #trueSuccessor: v478 #falseSuccessor: v479  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" 
    xhandlers
    flags 
    probability 4598760188797898558
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v478 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:165) [bci: 76]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:138) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 18]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v473 
=== Succesors ===
next: v487 
=== Usages ===
=== Predecessor ===
v480 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v473 #next: v487  <|@  <|@
f <@*|@fixed>@ <|@
tid v487 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:138) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 18]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v485 
=== Predecessor ===
v478 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B31" "B34" 
    successors "B36" "B46" 
    xhandlers
    flags 
    probability 4603263788425269054
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v485 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:138) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 18]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v486 v487 
=== Succesors ===
next: a344 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v486 v487 #next: a344  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a344 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:138) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 18]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
predefinedStamp: [null]
stamp: a! -
=== Inputs ===
object: a420 
=== Succesors ===
next: j489 
=== Usages ===
j493 ?243 a245 v743 
=== Predecessor ===
v485 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a420 #next: j489  <|@  <|@
f <@~|@floating>@ <|@
tid a337 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:187) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
op: Uncompress
stamp: a [Ljava/lang/Object;
=== Inputs ===
value: a336 
=== Succesors ===
=== Usages ===
j489 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a336  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j489 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.disjointUninitializedArraycopy(ArrayCopyCallNode.java:211) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:122) [bci: 37]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
stamp: i64
=== Inputs ===
object: a337 
=== Succesors ===
next: j493 
=== Usages ===
v741 
=== Predecessor ===
a344 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a337 #next: j493  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j493 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.disjointUninitializedArraycopy(ArrayCopyCallNode.java:211) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:122) [bci: 37]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
stamp: i64
=== Inputs ===
object: a344 
=== Succesors ===
next: v496 
=== Usages ===
v742 
=== Predecessor ===
j489 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a344 #next: v496  <|@  <|@
f <@~|@floating>@ <|@
tid v741 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j489 
index: - 
=== Succesors ===
=== Usages ===
v496 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j489 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v742 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j493 
index: - 
=== Succesors ===
=== Usages ===
v496 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j493 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v496 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: ObjectDisjointUninitArraycopy(Word,Word,Word)void
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.disjointUninitializedArraycopy(ArrayCopyCallNode.java:211) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:122) [bci: 37]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
stamp: void
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: v741 v742 j495 
=== Succesors ===
next: v712 
=== Usages ===
=== Predecessor ===
j493 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: v741 v742 j495 #next: v712  <|@  <|@
f <@~|@floating>@ <|@
tid v743 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a344 
index: - 
=== Succesors ===
=== Usages ===
v712 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a344 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v712 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 54]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v743 
=== Succesors ===
next: v290 
=== Usages ===
v580 
=== Predecessor ===
v496 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v743 #next: v290  <|@  <|@
f <@~|@floating>@ <|@
tid v579 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 54]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
rawvalue: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v580 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v580 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 54]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v712 
y: v579 
=== Succesors ===
=== Usages ===
v290 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v712 y: v579  <|@  <|@
f <@*|@fixed>@ <|@
tid v290 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 54]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v580 
=== Succesors ===
trueSuccessor: v287 
falseSuccessor: v289 
=== Usages ===
=== Predecessor ===
v712 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v580 #trueSuccessor: v287 #falseSuccessor: v289  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B37" 
    xhandlers
    flags 
    probability 4603263788425269054
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v287 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 54]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v247 
=== Usages ===
=== Predecessor ===
v290 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v247  <|@  <|@
f <@~|@floating>@ <|@
tid v727 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v247 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a245 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 57]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
op: Compress
stamp: n! -
=== Inputs ===
value: a344 
=== Succesors ===
=== Usages ===
v247 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a344  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v247 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: EconomicMapImpl.entries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 57]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v727 
value: a245 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j500 
=== Usages ===
=== Predecessor ===
v287 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v727 value: a245 stateAfter: - lastLocationAccess: - #next: j500  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j500 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 57]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1 
=== Succesors ===
next: v504 
=== Usages ===
j501 
=== Predecessor ===
v247 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a1 #next: v504  <|@  <|@
f <@~|@floating>@ <|@
tid j501 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 57]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j500 
y: i374 
=== Succesors ===
=== Usages ===
v744 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j500 y: i374  <|@  <|@
f <@~|@floating>@ <|@
tid v744 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j501 
index: j378 
=== Succesors ===
=== Usages ===
v504 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j501 index: j378  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v504 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 57]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v744 
value: i168 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v69 
=== Usages ===
=== Predecessor ===
j500 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v744 value: i168 stateAfter: - lastLocationAccess: - #next: v69  <|@  <|@
f <@*|@fixed>@ <|@
tid v69 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:190) [bci: 60]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v68 
=== Predecessor ===
v504 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B4" "B36" "B9" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v68 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:190) [bci: 60]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v67 v69 v129 
=== Succesors ===
next: a713 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v67 v69 v129 #next: a713  <|@  <|@
f <@~|@floating>@ <|@
tid v715 <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: a3 
index: - 
=== Succesors ===
=== Usages ===
a713 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a713 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.hashArray
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:190) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
nullCheck: false
stamp: n# [B
=== Inputs ===
stateBefore: - 
guard: - 
address: v715 
=== Succesors ===
next: v75 
=== Usages ===
a152 v248 v716 
=== Predecessor ===
v68 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v715 #next: v75  <|@  <|@
f <@~|@floating>@ <|@
tid v248 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:190) [bci: 64]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
stamp: void
=== Inputs ===
value: a713 
=== Succesors ===
=== Usages ===
v75 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a713  <|@  <|@
f <@*|@fixed>@ <|@
tid v75 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:190) [bci: 64]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
stamp: void
trueSuccessorProbability: 0.7916022292900703
=== Inputs ===
condition: v248 
=== Succesors ===
trueSuccessor: v73 
falseSuccessor: v74 
=== Usages ===
=== Predecessor ===
a713 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v248 #trueSuccessor: v73 #falseSuccessor: v74  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors 
    xhandlers
    flags 
    probability 4605305338554989244
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v73 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:193) [bci: 81]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v92 
=== Usages ===
=== Predecessor ===
v75 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v92  <|@  <|@
f <@*|@fixed>@ <|@
tid v92 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
result: - 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v73 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: - memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B43" 
    xhandlers
    flags 
    probability 4596676341270648075
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v74 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 67]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: i714 
=== Usages ===
=== Predecessor ===
v75 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i714  <|@  <|@
f <@~|@floating>@ <|@
tid v716 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a713 
=== Succesors ===
=== Usages ===
i714 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a713  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i714 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:71) [bci: 4]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 72]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v716 
=== Succesors ===
next: j509 
=== Usages ===
v549 j567 v515 a530 i537 
=== Predecessor ===
v74 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v716 #next: j509  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j509 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:772) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:319) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:71) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 72]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j546 
=== Usages ===
v745 v746 
=== Predecessor ===
i714 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j546  <|@  <|@
f <@~|@floating>@ <|@
tid v745 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j509 
index: - 
=== Succesors ===
=== Usages ===
j546 v548 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j509 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j546 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:245) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:320) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:71) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 72]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v745 
=== Succesors ===
next: j547 
=== Usages ===
j513 v747 v748 a529 v753 v749 v750 v751 v752 
=== Predecessor ===
j509 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v745 #next: j547  <|@  <|@
f <@~|@floating>@ <|@
tid v746 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j509 
index: - 
=== Succesors ===
=== Usages ===
j547 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j509 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j547 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:249) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:321) [bci: 25]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:71) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 72]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v746 
=== Succesors ===
next: v518 
=== Usages ===
v519 
=== Predecessor ===
j546 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v746 #next: v518  <|@  <|@
f <@~|@floating>@ <|@
tid i514 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 48]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:71) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 72]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
rawvalue: 16777215
stableDimension: 0
stamp: i32 [16777215] ⇊0000000000ffffff ⇈0000000000ffffff
stampKind: i32
value: int[16777215|0xffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v515 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v515 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.core.common.calc.UnsignedMath.belowThan(int, int) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 50]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:71) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 72]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i714 
y: i514 
=== Succesors ===
=== Usages ===
v518 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i714 y: i514  <|@  <|@
f <@*|@fixed>@ <|@
tid v518 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 64]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:71) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 72]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v515 
=== Succesors ===
trueSuccessor: v517 
falseSuccessor: v516 
=== Usages ===
=== Predecessor ===
j547 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v515 #trueSuccessor: v517 #falseSuccessor: v516  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4595925509172636810
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v517 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 67]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:71) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 72]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v525 
=== Usages ===
=== Predecessor ===
v518 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v525  <|@  <|@
f <@~|@floating>@ <|@
tid i537 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:71) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 72]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
stamp: i32
=== Inputs ===
x: i714 
y: i423 
=== Succesors ===
=== Usages ===
i508 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i714 y: i423  <|@  <|@
f <@~|@floating>@ <|@
tid i508 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:604) [bci: 30]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:71) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 72]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i537 
y: i401 
=== Succesors ===
=== Usages ===
j512 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i537 y: i401  <|@  <|@
f <@~|@floating>@ <|@
tid j512 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:71) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 72]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
resultBits: 64
stamp: i64 [-2147483648 - 2147483640] ⇈fffffffffffffff8
=== Inputs ===
value: i508 
=== Succesors ===
=== Usages ===
j513 v749 v750 v751 v752 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i508  <|@  <|@
f <@~|@floating>@ <|@
tid j513 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:71) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 72]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
stamp: i64
=== Inputs ===
x: j512 
y: j546 
=== Succesors ===
=== Usages ===
v519 v548 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j512 y: j546  <|@  <|@
f <@~|@floating>@ <|@
tid v519 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 83]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:71) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 72]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j547 
y: j513 
=== Succesors ===
=== Usages ===
v525 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j547 y: j513  <|@  <|@
f <@*|@fixed>@ <|@
tid v525 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 89]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:71) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 72]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v519 
=== Succesors ===
trueSuccessor: v524 
falseSuccessor: v523 
=== Usages ===
=== Predecessor ===
v517 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v519 #trueSuccessor: v524 #falseSuccessor: v523  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B44" 
    xhandlers
    flags 
    probability 4566292408668031734
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v524 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:71) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 72]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v522 
=== Usages ===
=== Predecessor ===
v525 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v522  <|@  <|@
f <@*|@fixed>@ <|@
tid v522 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:71) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 72]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v521 
=== Predecessor ===
v524 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B45" 
    xhandlers
    flags 
    probability 4595857934283815796
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v523 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 92]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:71) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 72]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v548 
=== Usages ===
=== Predecessor ===
v525 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v548  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v548 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:257) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 96]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:71) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 72]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v745 
value: j513 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v539 
=== Usages ===
=== Predecessor ===
v523 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v745 value: j513 stateAfter: - lastLocationAccess: - #next: v539  <|@  <|@
f <@~|@floating>@ <|@
tid v749 <|@
d <@d|@=== Debug Properties ===
displacement: 192
scale: Times1
stamp: void*
=== Inputs ===
base: j512 
index: j546 
=== Succesors ===
=== Usages ===
v539 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j512 index: j546  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v539 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:71) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 72]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
stamp: void
=== Inputs ===
address: v749 
=== Succesors ===
next: v541 
=== Usages ===
=== Predecessor ===
v548 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v749 #next: v541  <|@  <|@
f <@~|@floating>@ <|@
tid v750 <|@
d <@d|@=== Debug Properties ===
displacement: 256
scale: Times1
stamp: void*
=== Inputs ===
base: j512 
index: j546 
=== Succesors ===
=== Usages ===
v541 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j512 index: j546  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v541 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:71) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 72]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
stamp: void
=== Inputs ===
address: v750 
=== Succesors ===
next: v543 
=== Usages ===
=== Predecessor ===
v539 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v750 #next: v543  <|@  <|@
f <@~|@floating>@ <|@
tid v751 <|@
d <@d|@=== Debug Properties ===
displacement: 320
scale: Times1
stamp: void*
=== Inputs ===
base: j512 
index: j546 
=== Succesors ===
=== Usages ===
v543 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j512 index: j546  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v543 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:71) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 72]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
stamp: void
=== Inputs ===
address: v751 
=== Succesors ===
next: v545 
=== Usages ===
=== Predecessor ===
v541 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v751 #next: v545  <|@  <|@
f <@~|@floating>@ <|@
tid v752 <|@
d <@d|@=== Debug Properties ===
displacement: 384
scale: Times1
stamp: void*
=== Inputs ===
base: j512 
index: j546 
=== Succesors ===
=== Usages ===
v545 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j512 index: j546  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v545 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:71) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 72]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
stamp: void
=== Inputs ===
address: v752 
=== Succesors ===
next: v549 
=== Usages ===
=== Predecessor ===
v543 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v752 #next: v549  <|@  <|@
f <@~|@floating>@ <|@
tid v747 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j546 
index: - 
=== Succesors ===
=== Usages ===
v549 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j546 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v549 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:549) [bci: 12]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:71) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 72]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v747 
value: i714 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v550 
=== Usages ===
=== Predecessor ===
v545 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v747 value: i714 stateAfter: - lastLocationAccess: - #next: v550  <|@  <|@
f <@~|@floating>@ <|@
tid v748 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j546 
index: - 
=== Succesors ===
=== Usages ===
v550 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j546 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v550 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:469) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:71) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 72]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v748 
value: j386 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v553 
=== Usages ===
=== Predecessor ===
v549 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v748 value: j386 stateAfter: - lastLocationAccess: - #next: v553  <|@  <|@
f <@~|@floating>@ <|@
tid v753 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j546 
index: - 
=== Succesors ===
=== Usages ===
v553 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j546 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v581 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:71) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 72]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
rawvalue: meta{HotSpotType<[B, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<[B, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v553 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v553 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:71) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 72]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v753 
value: v581 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v528 
=== Usages ===
=== Predecessor ===
v550 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v753 value: v581 stateAfter: - lastLocationAccess: - #next: v528  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v528 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.MembarNode.memoryBarrier(int, LocationIdentity) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:560) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:71) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 72]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: a529 
=== Usages ===
=== Predecessor ===
v553 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a529  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a529 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:561) [bci: 71]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:71) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 72]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
stamp: a! -
trackedPointer: true
=== Inputs ===
input: j546 
=== Succesors ===
next: v531 
=== Usages ===
a534 
=== Predecessor ===
v528 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j546 #next: v531  <|@  <|@
f <@*|@fixed>@ <|@
tid v531 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:71) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 72]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v532 
=== Predecessor ===
a529 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B44" 
    xhandlers
    flags 
    probability 4581663878192514055
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v516 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:71) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 72]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v520 
=== Usages ===
=== Predecessor ===
v518 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v520  <|@  <|@
f <@*|@fixed>@ <|@
tid v520 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:71) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 72]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v521 
=== Predecessor ===
v516 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" "B41" 
    successors "B45" 
    xhandlers
    flags 
    probability 4582204477303082166
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v521 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:71) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 72]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v520 v522 
=== Succesors ===
next: a530 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v520 v522 #next: a530  <|@  <|@
tid ?70 <|@
d <@d|@=== Debug Properties ===
bci: 60
code: ResolvedJavaMethodBytecode<EconomicMapImpl.initFrom(Object)>
duringCall: false
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 190
stackSize: 0
=== Inputs ===
outerFrameState: ?87 
values: a1 - a3 
=== Succesors ===
=== Usages ===
a530 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?87 values: a1 - a3  <|@  <|@
f <@~|@floating>@ <|@
tid v507 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:71) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 72]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
rawvalue: meta{HotSpotType<[B, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[B, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a530 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a530 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.newArray(ForeignCallDescriptor, KlassPointer, int, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 155]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:71) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 72]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?70 
arguments: v507 i714 i156 
=== Succesors ===
next: v533 
=== Usages ===
a534 
=== Predecessor ===
v521 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?70 arguments: v507 i714 i156 #next: v533  <|@  <|@
f <@*|@fixed>@ <|@
tid v533 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:71) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 72]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v532 
=== Predecessor ===
a530 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B42" "B44" 
    successors 
    xhandlers
    flags 
    probability 4596676341270648075
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a534 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:71) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 72]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
stamp: a! -
valueDescription: a -
=== Inputs ===
merge: v532 
values: a529 a530 
=== Succesors ===
=== Usages ===
j565 a171 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v532 values: a529 a530  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v532 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:71) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 72]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v531 v533 
=== Succesors ===
next: j561 
=== Usages ===
a534 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v531 v533 #next: j561  <|@  <|@
f <@~|@floating>@ <|@
tid a152 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:190) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
op: Uncompress
stamp: a# [B
=== Inputs ===
value: a713 
=== Succesors ===
=== Usages ===
j561 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a713  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j561 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.disjointArraycopy(ArrayCopyCallNode.java:207) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:72) [bci: 24]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 72]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
stamp: i64
=== Inputs ===
object: a152 
=== Succesors ===
next: j565 
=== Usages ===
v754 
=== Predecessor ===
v532 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a152 #next: j565  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j565 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.disjointArraycopy(ArrayCopyCallNode.java:207) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:72) [bci: 24]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 72]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
stamp: i64
=== Inputs ===
object: a534 
=== Succesors ===
next: v568 
=== Usages ===
v755 
=== Predecessor ===
j561 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a534 #next: v568  <|@  <|@
f <@~|@floating>@ <|@
tid v754 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j561 
index: - 
=== Succesors ===
=== Usages ===
v568 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j561 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v755 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j565 
index: - 
=== Succesors ===
=== Usages ===
v568 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j565 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j567 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: true
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.disjointArraycopy(ArrayCopyCallNode.java:207) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:72) [bci: 24]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 72]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
resultBits: 64
stamp: i64 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
value: i714 
=== Succesors ===
=== Usages ===
v568 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i714  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v568 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: byteDisjointArraycopy(Word,Word,Word)void
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.disjointArraycopy(ArrayCopyCallNode.java:207) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:72) [bci: 24]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 72]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
stamp: void
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: v754 v755 j567 
=== Succesors ===
next: v173 
=== Usages ===
=== Predecessor ===
j565 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: v754 v755 j567 #next: v173  <|@  <|@
f <@~|@floating>@ <|@
tid v717 <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v173 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a171 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 78]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
op: Compress
stamp: n! -
=== Inputs ===
value: a534 
=== Succesors ===
=== Usages ===
v173 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a534  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v173 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: EconomicMapImpl.hashArray
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 78]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v717 
value: a171 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j569 
=== Usages ===
=== Predecessor ===
v568 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v717 value: a171 stateAfter: - lastLocationAccess: - #next: j569  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j569 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 78]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1 
=== Succesors ===
next: v573 
=== Usages ===
j570 
=== Predecessor ===
v173 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a1 #next: v573  <|@  <|@
f <@~|@floating>@ <|@
tid j570 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 78]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j569 
y: i374 
=== Succesors ===
=== Usages ===
v756 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j569 y: i374  <|@  <|@
f <@~|@floating>@ <|@
tid v756 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j570 
index: j378 
=== Succesors ===
=== Usages ===
v573 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j570 index: j378  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v573 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 78]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v756 
value: i168 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v93 
=== Usages ===
=== Predecessor ===
j569 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v756 value: i168 stateAfter: - lastLocationAccess: - #next: v93  <|@  <|@
f <@*|@fixed>@ <|@
tid v93 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
result: - 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v573 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: - memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v289 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 54]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v288 
=== Usages ===
=== Predecessor ===
v290 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v288  <|@  <|@
tid ?243 <|@
d <@d|@=== Debug Properties ===
bci: 54
code: ResolvedJavaMethodBytecode<EconomicMapImpl.initFrom(Object)>
duringCall: false
localsSize: 3
locksSize: 0
nodeSourcePosition: at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 188
stackSize: 2
=== Inputs ===
outerFrameState: ?87 
values: a1 - a3 a1 a344 
=== Succesors ===
=== Usages ===
v288 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?87 values: a1 - a3 a1 a344  <|@  <|@
f <@*|@fixed>@ <|@
tid v288 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 244
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 54]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
reason: TypeCheckedInliningViolated
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?243 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v289 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?243  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B33" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4598760188797898558
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v479 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:163) [bci: 58]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:138) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 18]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v482 
=== Usages ===
=== Predecessor ===
v480 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v482  <|@  <|@
f <@~|@floating>@ <|@
tid j476 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 50]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:138) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 18]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
stamp: i64
=== Inputs ===
x: j474 
y: j475 
=== Succesors ===
=== Usages ===
j474 j481 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j474 y: j475  <|@  <|@
f <@~|@floating>@ <|@
tid j484 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:163) [bci: 62]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:138) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 18]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
stamp: i64 [4682670080 - 36028801701634047] ⇈00ffffffffffffff
=== Inputs ===
x: j462 
y: j378 
=== Succesors ===
=== Usages ===
j481 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j462 y: j378  <|@  <|@
f <@~|@floating>@ <|@
tid j481 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:163) [bci: 65]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:138) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 18]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
stamp: i64
=== Inputs ===
x: j476 
y: j484 
=== Succesors ===
=== Usages ===
v482 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j476 y: j484  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v482 <|@
d <@d|@=== Debug Properties ===
kind: boolean
nodeSourcePosition: at org.graalvm.compiler.replacements.nodes.DirectStoreNode.storeBoolean(long, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:163) [bci: 70]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:138) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 18]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
stamp: void
=== Inputs ===
address: j481 
value: i156 
=== Succesors ===
next: v483 
=== Usages ===
=== Predecessor ===
v479 >@ <|@
instruction <@DirectStore|@org.graalvm.compiler.replacements.nodes.DirectStoreNode>@ address: j481 value: i156 #next: v483  <|@  <|@
f <@*|@fixed>@ <|@
tid v483 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 46]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:138) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 18]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
stamp: void
=== Inputs ===
loopBegin: v473 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v482 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v473  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B19" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4596800873610524381
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v602 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v601 
=== Usages ===
=== Predecessor ===
v603 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v601  <|@  <|@
f <@*|@fixed>@ <|@
tid v601 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v596 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v602 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v596  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v285 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:184) [bci: 20]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v353 
=== Usages ===
=== Predecessor ===
v286 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v353  <|@  <|@
f <@~|@floating>@ <|@
tid i354 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -54803
stableDimension: 0
stamp: i32 [-54803] ⇊00000000ffff29ed ⇈00000000ffff29ed
stampKind: i32
value: int[-54803|0xffffffffffff29ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i350 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v353 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v346 
=== Predecessor ===
v285 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B6" "B49" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i350 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-54803 - -48659] ⇊00000000ffff01ed ⇈00000000ffff69ed
valueDescription: i32
=== Inputs ===
merge: v346 
values: i348 i354 
=== Succesors ===
=== Usages ===
v352 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v346 values: i348 i354  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v346 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v347 v353 
=== Succesors ===
next: v352 
=== Usages ===
i350 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v347 v353 #next: v352  <|@  <|@
f <@~|@floating>@ <|@
tid a349 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v352 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
tid ?34 <|@
d <@d|@=== Debug Properties ===
bci: 3
code: ResolvedJavaMethodBytecode<EconomicMapImpl.<init>(Equivalence, UnmodifiableEconomicMap, boolean)>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 164
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - a3 - 
=== Succesors ===
=== Usages ===
?31 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - a3 -  <|@  <|@
tid ?31 <|@
d <@d|@=== Debug Properties ===
bci: 29
code: ResolvedJavaMethodBytecode<EconomicMapImpl.<init>(Equivalence, boolean)>
duringCall: false
localsSize: 3
locksSize: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:155) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:164) [bci: 3]
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 156
stackSize: 0
=== Inputs ===
outerFrameState: ?34 
values: a1 - i4 
=== Succesors ===
=== Usages ===
v352 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?34 values: a1 - i4  <|@  <|@
f <@*|@fixed>@ <|@
tid v352 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?31 
actionAndReason: i350 
speculation: a349 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v346 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?31 actionAndReason: i350 speculation: a349  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v357 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:181) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v276 
=== Usages ===
=== Predecessor ===
v360 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v276  <|@  <|@
f <@*|@fixed>@ <|@
tid v276 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 273
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:181) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
reason: UnreachedCode
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?5 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v357 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?5  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B51" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v701 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: v701  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Lorg/graalvm/collections/EconomicMapImpl;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 ?102 ?34 ?87 v717 v718 ?70 v727 ?243 v721 v719 ?31 ?243 v720 j373 j500 j569 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
result v1|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a Lorg/graalvm/collections/Equivalence;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 a204 v17 v116 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a3 <|@
result v2|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 2
stamp: a -
uncheckedStamp: a Lorg/graalvm/collections/UnmodifiableEconomicMap;
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 ?34 ?87 v715 v729 ?102 v722 v723 v724 v725 ?70 ?243 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i4 <|@
result v3|DWORD <|@
d <@d|@=== Debug Properties ===
index: 3
stamp: i32 [0 - 1] ⇈0000000000000001
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 ?31 i178 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?5 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<EconomicMapImpl.<init>(Equivalence, UnmodifiableEconomicMap, boolean)>
duringCall: false
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 164
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 a3 i4 
=== Succesors ===
=== Usages ===
v276 v701 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 a3 i4  <|@  <|@
f <@~|@floating>@ <|@
tid v729 <|@
result [v2|QWORD[.] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a3 
index: - 
=== Succesors ===
=== Usages ===
v701 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v701 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:181) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?5 
guard: - 
address: v729 
=== Succesors ===
next: v360 
=== Usages ===
v577 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?5 guard: - address: v729 #next: v360  <|@  <|@
f <@~|@floating>@ <|@
tid v576 <|@
result meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:181) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
rawvalue: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v577 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v577 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:181) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v701 
y: v576 
=== Succesors ===
=== Usages ===
v360 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v701 y: v576  <|@  <|@
f <@*|@fixed>@ <|@
tid v360 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:181) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v577 
=== Succesors ===
trueSuccessor: v358 
falseSuccessor: v357 
=== Usages ===
=== Predecessor ===
v701 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v577 #trueSuccessor: v358 #falseSuccessor: v357  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@2112be2b slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:164) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|DWORD 
>@ <|@ instruction CMP [v2|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl;, resolved>;compressed} state [bci:0] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v358 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:181) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v20 
=== Usages ===
=== Predecessor ===
v360 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v20  <|@  <|@
f <@~|@floating>@ <|@
tid j386 <|@
result long[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:138) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 18]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
rawvalue: 1
stableDimension: 0
stamp: i64 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v446 j471 v477 v550 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i156 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 2]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:71) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 72]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
a416 a530 v457 v482 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
tid ?87 <|@
d <@d|@=== Debug Properties ===
bci: 8
code: ResolvedJavaMethodBytecode<EconomicMapImpl.<init>(Equivalence, UnmodifiableEconomicMap, boolean)>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 165
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - a3 - 
=== Succesors ===
=== Usages ===
?70 ?102 ?243 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - a3 -  <|@  <|@
f <@~|@floating>@ <|@
tid i423 <|@
result int[23|0x17] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:138) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 18]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
rawvalue: 23
stableDimension: 0
stamp: i32 [23] ⇊0000000000000017 ⇈0000000000000017
stampKind: i32
value: int[23|0x17]
=== Inputs ===
=== Succesors ===
=== Usages ===
i424 i537 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i401 <|@
result int[-8|0xfffffffffffffff8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:603) [bci: 23]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:138) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 18]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
rawvalue: -8
stableDimension: 0
stamp: i32 [-8] ⇊00000000fffffff8 ⇈00000000fffffff8
stampKind: i32
value: int[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
i402 i508 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i168 <|@
result byte[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:71) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 72]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
rawvalue: 0
stableDimension: 0
stamp: i8 [0] ⇈0000000000000000
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v504 v379 v573 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i374 <|@
result int[9|0x9] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.cardTableShift(GraalHotSpotVMConfig) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:153) [bci: 21]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:164) [bci: 3]
rawvalue: 9
stableDimension: 0
stamp: i32 [9] ⇊0000000000000009 ⇈0000000000000009
stampKind: i32
value: int[9|0x9]
=== Inputs ===
=== Succesors ===
=== Usages ===
j375 j462 j469 j501 j570 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j378 <|@
result v4|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.loadLongConfigValue(int) [bci: -1]
at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.cardTableAddress(GraalHotSpotVMConfigNode.java:114) [bci: 6]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:133) [bci: 7]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:153) [bci: 21]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:164) [bci: 3]
rawvalue: 4682670080
stableDimension: 0
stamp: i64 [4682670080] ⇊00000001171be000 ⇈00000001171be000
stampKind: i64
value: long[4682670080|0x1171be000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v730 j484 v744 v756 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v725 <|@
result [v2|QWORD[.] + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a3 
index: - 
=== Succesors ===
=== Usages ===
a709 a705 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v721 <|@
result [v0|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v199 v220 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v724 <|@
result [v2|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a3 
index: - 
=== Succesors ===
=== Usages ===
i708 i704 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v720 <|@
result [v0|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v194 v217 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v723 <|@
result [v2|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a3 
index: - 
=== Succesors ===
=== Usages ===
i707 i703 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v722 <|@
result [v2|QWORD[.] + 32] <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times1
stamp: void*
=== Inputs ===
base: a3 
index: - 
=== Succesors ===
=== Usages ===
a706 a702 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid i178 <|@
result v3|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 32
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:155) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:164) [bci: 3]
resultBits: 8
stamp: i8 [0 - 1] ⇈0000000000000001
=== Inputs ===
value: i4 
=== Succesors ===
=== Usages ===
v181 v206 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i4  <|@  <|@
f <@~|@floating>@ <|@
tid v719 <|@
result [v0|QWORD[.] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v181 v206 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a241 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:138) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 18]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
rawvalue: null
stableDimension: 0
stamp: n - NULL
stampKind: n -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v177 v692 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v718 <|@
result [v0|QWORD[.] + 32] <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v177 v205 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a16 <|@
result v5|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:150) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:164) [bci: 3]
rawvalue: Equivalence$2@812065084
stableDimension: 0
stamp: a!# Lorg/graalvm/collections/Equivalence$2;
stampKind: a -
value: Object[Equivalence$2@812065084]
=== Inputs ===
=== Succesors ===
=== Usages ===
v17 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v17 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:150) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:164) [bci: 3]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a2 
y: a16 
=== Succesors ===
=== Usages ===
v20 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.ObjectEqualsNode>@ x: a2 y: a16  <|@  <|@
f <@*|@fixed>@ <|@
tid v20 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:150) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:164) [bci: 3]
stamp: void
trueSuccessorProbability: 0.28618472457813726
=== Inputs ===
condition: v17 
=== Succesors ===
trueSuccessor: v18 
falseSuccessor: v19 
=== Usages ===
=== Predecessor ===
v358 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v17 #trueSuccessor: v18 #falseSuccessor: v19  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v4|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr   -1  <|@ instruction v5|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Equivalence$2@812065084] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v5|QWORD[.], y: v1|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.28618472457813726 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B6" 
    xhandlers
    flags 
    probability 4598827065593782828
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v18 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:151) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:164) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v177 
=== Usages ===
=== Predecessor ===
v20 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v177  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v177 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: EconomicMapImpl.strategy
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:151) [bci: 13]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:164) [bci: 3]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v718 
value: a241 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v181 
=== Usages ===
=== Predecessor ===
v18 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v718 value: a241 stateAfter: - lastLocationAccess: - #next: v181  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v181 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: EconomicMapImpl.isSet
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:155) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:164) [bci: 3]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v719 
value: i178 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v182 
=== Usages ===
=== Predecessor ===
v177 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v719 value: i178 stateAfter: - lastLocationAccess: - #next: v182  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v182 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: ANY_LOCATION
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:156) [bci: 29]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:164) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: a702 
=== Usages ===
=== Predecessor ===
v181 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a702  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a702 <|@
result v6|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.strategy
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:184) [bci: 17]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
nullCheck: false
stamp: n Lorg/graalvm/collections/Equivalence;
=== Inputs ===
stateBefore: - 
guard: - 
address: v722 
=== Succesors ===
next: v282 
=== Usages ===
v250 
=== Predecessor ===
v182 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v722 #next: v282  <|@  <|@
f <@~|@floating>@ <|@
tid v250 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:184) [bci: 20]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
stamp: void
=== Inputs ===
value: a702 
=== Succesors ===
=== Usages ===
v282 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a702  <|@  <|@
f <@*|@fixed>@ <|@
tid v282 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:184) [bci: 20]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v250 
=== Succesors ===
trueSuccessor: v279 
falseSuccessor: v281 
=== Usages ===
=== Predecessor ===
a702 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v250 #trueSuccessor: v279 #falseSuccessor: v281  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 32], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v0|QWORD[.] + 20], y: v3|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v6|DWORD[.] = MOV [v2|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v6|DWORD[.], y: v6|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4598827065593782828
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v279 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:184) [bci: 20]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: i703 
=== Usages ===
=== Predecessor ===
v282 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i703  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i703 <|@
result v7|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.totalEntries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:185) [bci: 25]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v723 
=== Succesors ===
next: v194 
=== Usages ===
v194 
=== Predecessor ===
v279 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v723 #next: v194  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v194 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: EconomicMapImpl.totalEntries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:185) [bci: 28]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v720 
value: i703 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: i704 
=== Usages ===
=== Predecessor ===
i703 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v720 value: i703 stateAfter: - lastLocationAccess: - #next: i704  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i704 <|@
result v8|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.deletedEntries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:186) [bci: 33]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v724 
=== Succesors ===
next: v199 
=== Usages ===
v199 
=== Predecessor ===
v194 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v724 #next: v199  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v199 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: EconomicMapImpl.deletedEntries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:186) [bci: 36]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v721 
value: i704 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a705 
=== Usages ===
=== Predecessor ===
i704 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v721 value: i704 stateAfter: - lastLocationAccess: - #next: a705  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a705 <|@
result v9|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.entries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:187) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
nullCheck: false
stamp: n [Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v725 
=== Succesors ===
next: v54 
=== Usages ===
a336 v251 
=== Predecessor ===
v199 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v725 #next: v54  <|@  <|@
f <@~|@floating>@ <|@
tid v251 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:187) [bci: 43]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
stamp: void
=== Inputs ===
value: a705 
=== Succesors ===
=== Usages ===
v54 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a705  <|@  <|@
f <@*|@fixed>@ <|@
tid v54 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:187) [bci: 43]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
stamp: void
trueSuccessorProbability: 0.43505536670411277
=== Inputs ===
condition: v251 
=== Succesors ===
trueSuccessor: v52 
falseSuccessor: v53 
=== Usages ===
=== Predecessor ===
a705 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v251 #trueSuccessor: v52 #falseSuccessor: v53  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = MOV [v2|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v7|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = MOV [v2|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v8|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD[.] = MOV [v2|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v9|DWORD[.], y: v9|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.43505536670411277 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B37" 
    xhandlers
    flags 
    probability 4593636037899331971
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v52 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:190) [bci: 60]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v67 
=== Usages ===
=== Predecessor ===
v54 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v67  <|@  <|@
f <@*|@fixed>@ <|@
tid v67 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:190) [bci: 60]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v68 
=== Predecessor ===
v52 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B4 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B11" 
    xhandlers
    flags 
    probability 4594993103024205718
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v53 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v101 
=== Usages ===
=== Predecessor ===
v54 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v101  <|@  <|@
f <@*|@fixed>@ <|@
tid v101 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v100 
=== Predecessor ===
v53 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v9|DWORD[.]] destination: B5 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v281 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:184) [bci: 20]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v347 
=== Usages ===
=== Predecessor ===
v282 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v347  <|@  <|@
f <@~|@floating>@ <|@
tid i348 <|@
result int[-48659|0xffffffffffff41ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -48659
stableDimension: 0
stamp: i32 [-48659] ⇊00000000ffff41ed ⇈00000000ffff41ed
stampKind: i32
value: int[-48659|0xffffffffffff41ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i350 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v347 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v346 
=== Predecessor ===
v281 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-48659|0xffffffffffff41ed]] destination: B6 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B8" "B49" 
    xhandlers
    flags 
    probability 4604604695962078954
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v19 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:153) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:164) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v205 
=== Usages ===
=== Predecessor ===
v20 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v205  <|@  <|@
f <@~|@floating>@ <|@
tid a204 <|@
result v10|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:153) [bci: 21]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:164) [bci: 3]
op: Compress
stamp: n Lorg/graalvm/collections/Equivalence;
=== Inputs ===
value: a2 
=== Succesors ===
=== Usages ===
v205 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v205 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: EconomicMapImpl.strategy
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:153) [bci: 21]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:164) [bci: 3]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v718 
value: a204 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j373 
=== Usages ===
=== Predecessor ===
v19 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v718 value: a204 stateAfter: - lastLocationAccess: - #next: j373  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j373 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:153) [bci: 21]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:164) [bci: 3]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1 
=== Succesors ===
next: v379 
=== Usages ===
j375 
=== Predecessor ===
v205 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a1 #next: v379  <|@  <|@
f <@~|@floating>@ <|@
tid j375 <|@
result v11|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:153) [bci: 21]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:164) [bci: 3]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j373 
y: i374 
=== Succesors ===
=== Usages ===
v730 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j373 y: i374  <|@  <|@
f <@~|@floating>@ <|@
tid v730 <|@
result [v11|QWORD[*] + v4|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j375 
index: j378 
=== Succesors ===
=== Usages ===
v379 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j375 index: j378  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v379 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:153) [bci: 21]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:164) [bci: 3]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v730 
value: i168 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v206 
=== Usages ===
=== Predecessor ===
j373 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v730 value: i168 stateAfter: - lastLocationAccess: - #next: v206  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v206 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: EconomicMapImpl.isSet
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:155) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:164) [bci: 3]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v719 
value: i178 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v207 
=== Usages ===
=== Predecessor ===
v379 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v719 value: i178 stateAfter: - lastLocationAccess: - #next: v207  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v207 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: ANY_LOCATION
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:156) [bci: 29]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:164) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: a706 
=== Usages ===
=== Predecessor ===
v206 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a706  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a706 <|@
result v12|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.strategy
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:184) [bci: 17]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
nullCheck: false
stamp: n Lorg/graalvm/collections/Equivalence;
=== Inputs ===
stateBefore: - 
guard: - 
address: v722 
=== Succesors ===
next: v286 
=== Usages ===
a213 
=== Predecessor ===
v207 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v722 #next: v286  <|@  <|@
f <@~|@floating>@ <|@
tid a213 <|@
result v13|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:184) [bci: 17]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
op: Uncompress
stamp: a Lorg/graalvm/collections/Equivalence;
=== Inputs ===
value: a706 
=== Succesors ===
=== Usages ===
v116 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a706  <|@  <|@
f <@~|@floating>@ <|@
tid v116 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:184) [bci: 20]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a2 
y: a213 
=== Succesors ===
=== Usages ===
v286 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.ObjectEqualsNode>@ x: a2 y: a213  <|@  <|@
f <@*|@fixed>@ <|@
tid v286 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:184) [bci: 20]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v116 
=== Succesors ===
trueSuccessor: v283 
falseSuccessor: v285 
=== Usages ===
=== Predecessor ===
a706 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v116 #trueSuccessor: v283 #falseSuccessor: v285  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v10|DWORD[.] = COMPRESSPOINTER (input: v1|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@58cdd6ff encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 32], y: v10|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v11|QWORD[*] + v4|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v0|QWORD[.] + 20], y: v3|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v12|DWORD[.] = MOV [v2|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD[.] = UNCOMPRESSPOINTER (input: v12|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@58cdd6ff encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMP (x: v13|QWORD[.], y: v1|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4604604695962078954
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v283 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:184) [bci: 20]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: i707 
=== Usages ===
=== Predecessor ===
v286 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i707  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i707 <|@
result v14|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.totalEntries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:185) [bci: 25]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v723 
=== Succesors ===
next: v217 
=== Usages ===
v217 
=== Predecessor ===
v283 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v723 #next: v217  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v217 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: EconomicMapImpl.totalEntries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:185) [bci: 28]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v720 
value: i707 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: i708 
=== Usages ===
=== Predecessor ===
i707 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v720 value: i707 stateAfter: - lastLocationAccess: - #next: i708  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i708 <|@
result v15|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.deletedEntries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:186) [bci: 33]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v724 
=== Succesors ===
next: v220 
=== Usages ===
v220 
=== Predecessor ===
v217 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v724 #next: v220  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v220 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: EconomicMapImpl.deletedEntries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:186) [bci: 36]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v721 
value: i708 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a709 
=== Usages ===
=== Predecessor ===
i708 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v721 value: i708 stateAfter: - lastLocationAccess: - #next: a709  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a709 <|@
result v16|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.entries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:187) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
nullCheck: false
stamp: n [Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v725 
=== Succesors ===
next: v128 
=== Usages ===
a336 v252 
=== Predecessor ===
v220 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v725 #next: v128  <|@  <|@
f <@~|@floating>@ <|@
tid v252 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:187) [bci: 43]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
stamp: void
=== Inputs ===
value: a709 
=== Succesors ===
=== Usages ===
v128 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a709  <|@  <|@
f <@*|@fixed>@ <|@
tid v128 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:187) [bci: 43]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
stamp: void
trueSuccessorProbability: 0.43505536670411277
=== Inputs ===
condition: v252 
=== Succesors ===
trueSuccessor: v126 
falseSuccessor: v127 
=== Usages ===
=== Predecessor ===
a709 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v252 #trueSuccessor: v126 #falseSuccessor: v127  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = MOV [v2|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v14|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = MOV [v2|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v15|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v16|DWORD[.] = MOV [v2|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v16|DWORD[.], y: v16|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.43505536670411277 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B37" 
    xhandlers
    flags 
    probability 4599265976358360866
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v126 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:190) [bci: 60]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v129 
=== Usages ===
=== Predecessor ===
v128 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v129  <|@  <|@
f <@*|@fixed>@ <|@
tid v129 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v68 
=== Predecessor ===
v126 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B9 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4600936216311056049
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v127 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 46]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v103 
=== Usages ===
=== Predecessor ===
v128 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v103  <|@  <|@
f <@*|@fixed>@ <|@
tid v103 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v100 
=== Predecessor ===
v127 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v16|DWORD[.]] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B5" "B10" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4603263788425269054
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a336 <|@
result v17|DWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: n [Ljava/lang/Object;
valueDescription: n -
=== Inputs ===
merge: v100 
values: a705 a709 
=== Succesors ===
=== Usages ===
a337 v726 v731 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v100 values: a705 a709  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v100 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v101 v103 
=== Succesors ===
next: j403 
=== Usages ===
a336 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v101 v103 #next: j403  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j403 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:772) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:319) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:138) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 18]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j442 
=== Usages ===
v732 v733 
=== Predecessor ===
v100 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j442  <|@  <|@
f <@~|@floating>@ <|@
tid v732 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j403 
index: - 
=== Succesors ===
=== Usages ===
j442 v444 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j403 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j442 <|@
result v18|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:245) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:320) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:138) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 18]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v732 
=== Succesors ===
next: j443 
=== Usages ===
j407 v734 v735 a415 v740 v736 v737 v738 v739 
=== Predecessor ===
j403 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v732 #next: j443  <|@  <|@
f <@~|@floating>@ <|@
tid v733 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j403 
index: - 
=== Succesors ===
=== Usages ===
j443 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j403 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j443 <|@
result v19|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:249) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:321) [bci: 25]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:138) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 18]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v733 
=== Succesors ===
next: i710 
=== Usages ===
v408 
=== Predecessor ===
j442 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v733 #next: i710  <|@  <|@
f <@~|@floating>@ <|@
tid v726 <|@
result [v17|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a336 
=== Succesors ===
=== Usages ===
i710 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a336  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i710 <|@
result v20|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 14]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v726 
=== Succesors ===
next: v711 
=== Usages ===
a416 j495 v445 i465 v457 i400 
=== Predecessor ===
j443 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v726 #next: v711  <|@  <|@
f <@~|@floating>@ <|@
tid v731 <|@
result [v17|DWORD[.] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a336 
=== Succesors ===
=== Usages ===
v711 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a336  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v711 <|@
result v21|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.ClassGetHubNode.readClass(Class) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotClassSubstitutions.getComponentType(HotSpotClassSubstitutions.java:120) [bci: 1]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 4]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v731 
=== Succesors ===
next: v411 
=== Usages ===
v384 v449 
=== Predecessor ===
i710 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v731 #next: v411  <|@  <|@
f <@~|@floating>@ <|@
tid i399 <|@
result int[2|0x2] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:403) [bci: 191]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:138) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 18]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
rawvalue: 2
stableDimension: 0
stamp: i32 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
i400 i466 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i400 <|@
result v22|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 8]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:138) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 18]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
stamp: i32 [-2147483648 - 2147483644] ⇈00000000fffffffc
=== Inputs ===
x: i710 
y: i399 
=== Succesors ===
=== Usages ===
i424 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i710 y: i399  <|@  <|@
f <@~|@floating>@ <|@
tid i424 <|@
result v23|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:138) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 18]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
stamp: i32 [-2147483645 - 2147483647] ⇊0000000000000003
=== Inputs ===
x: i400 
y: i423 
=== Succesors ===
=== Usages ===
i402 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i400 y: i423  <|@  <|@
f <@~|@floating>@ <|@
tid i402 <|@
result v24|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:604) [bci: 30]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:138) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 18]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i424 
y: i401 
=== Succesors ===
=== Usages ===
j406 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i424 y: i401  <|@  <|@
f <@~|@floating>@ <|@
tid j406 <|@
result v25|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:138) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 18]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
resultBits: 64
stamp: i64 [-2147483648 - 2147483640] ⇈fffffffffffffff8
=== Inputs ===
value: i402 
=== Succesors ===
=== Usages ===
j407 v736 v737 v738 v739 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i402  <|@  <|@
f <@~|@floating>@ <|@
tid j407 <|@
result v26|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:138) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 18]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
stamp: i64
=== Inputs ===
x: j406 
y: j442 
=== Succesors ===
=== Usages ===
v408 v444 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j406 y: j442  <|@  <|@
f <@~|@floating>@ <|@
tid v408 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 83]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:138) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 18]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j443 
y: j407 
=== Succesors ===
=== Usages ===
v411 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j443 y: j407  <|@  <|@
f <@*|@fixed>@ <|@
tid v411 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 89]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:138) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 18]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v408 
=== Succesors ===
trueSuccessor: v409 
falseSuccessor: v410 
=== Usages ===
=== Predecessor ===
v711 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v408 #trueSuccessor: v409 #falseSuccessor: v410  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v17|DWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v18|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = MOV [v17|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = MOV [v17|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v22|DWORD = SHL v20|DWORD y: 2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v23|DWORD = LEA [v22|DWORD + 23] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v24|DWORD = AND v23|DWORD y: -8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v25|QWORD = MOVSXD v24|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = ADD (x: v25|QWORD, y: v18|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v26|QWORD, y: v19|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B11 -> B12 falseDestination: B11 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" 
    xhandlers
    flags 
    probability 4573163390320073526
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v409 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:138) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 18]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: a416 
=== Usages ===
=== Predecessor ===
v411 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a416  <|@  <|@
tid ?102 <|@
d <@d|@=== Debug Properties ===
bci: 39
code: ResolvedJavaMethodBytecode<EconomicMapImpl.initFrom(Object)>
duringCall: false
localsSize: 3
locksSize: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:186) [bci: 36]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 187
stackSize: 0
=== Inputs ===
outerFrameState: ?87 
values: a1 - a3 
=== Succesors ===
=== Usages ===
a416 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?87 values: a1 - a3  <|@  <|@
f <@~|@floating>@ <|@
tid v384 <|@
result v27|QWORD <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.ClassGetHubNode.readClass(Class) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotClassSubstitutions.getComponentType(HotSpotClassSubstitutions.java:120) [bci: 1]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 4]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
op: Uncompress
stamp: Klass*!
=== Inputs ===
value: v711 
=== Succesors ===
=== Usages ===
a416 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: v711  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a416 <|@
result v28|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.newArray(ForeignCallDescriptor, KlassPointer, int, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 155]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:138) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 18]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?102 
arguments: v384 i710 i156 
=== Succesors ===
next: v419 
=== Usages ===
a420 
=== Predecessor ===
v409 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?102 arguments: v384 i710 i156 #next: v419  <|@  <|@
f <@*|@fixed>@ <|@
tid v419 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:138) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 18]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v418 
=== Predecessor ===
a416 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = UNCOMPRESSPOINTER (input: v21|DWORD, ~baseRegister: -) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@58cdd6ff encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v27|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v20|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:187) [bci: 39]
locals: v0|QWORD[.] - v2|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
locals: v0|QWORD[.] - v2|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:39, 8] <|@ <|@
      nr   -1  <|@ instruction v28|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v28|QWORD[.]] destination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" 
    xhandlers
    flags 
    probability 4603212902736469128
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v410 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 92]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:138) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 18]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v444 
=== Usages ===
=== Predecessor ===
v411 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v444  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v444 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:257) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 96]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:138) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 18]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v732 
value: j407 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v429 
=== Usages ===
=== Predecessor ===
v410 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v732 value: j407 stateAfter: - lastLocationAccess: - #next: v429  <|@  <|@
f <@~|@floating>@ <|@
tid v736 <|@
result [v25|QWORD + v18|QWORD * 1 + 192] <|@
d <@d|@=== Debug Properties ===
displacement: 192
scale: Times1
stamp: void*
=== Inputs ===
base: j406 
index: j442 
=== Succesors ===
=== Usages ===
v429 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j406 index: j442  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v429 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:138) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 18]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
stamp: void
=== Inputs ===
address: v736 
=== Succesors ===
next: v432 
=== Usages ===
=== Predecessor ===
v444 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v736 #next: v432  <|@  <|@
f <@~|@floating>@ <|@
tid v737 <|@
result [v25|QWORD + v18|QWORD * 1 + 256] <|@
d <@d|@=== Debug Properties ===
displacement: 256
scale: Times1
stamp: void*
=== Inputs ===
base: j406 
index: j442 
=== Succesors ===
=== Usages ===
v432 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j406 index: j442  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v432 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:138) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 18]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
stamp: void
=== Inputs ===
address: v737 
=== Succesors ===
next: v435 
=== Usages ===
=== Predecessor ===
v429 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v737 #next: v435  <|@  <|@
f <@~|@floating>@ <|@
tid v738 <|@
result [v25|QWORD + v18|QWORD * 1 + 320] <|@
d <@d|@=== Debug Properties ===
displacement: 320
scale: Times1
stamp: void*
=== Inputs ===
base: j406 
index: j442 
=== Succesors ===
=== Usages ===
v435 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j406 index: j442  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v435 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:138) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 18]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
stamp: void
=== Inputs ===
address: v738 
=== Succesors ===
next: v438 
=== Usages ===
=== Predecessor ===
v432 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v738 #next: v438  <|@  <|@
f <@~|@floating>@ <|@
tid v739 <|@
result [v25|QWORD + v18|QWORD * 1 + 384] <|@
d <@d|@=== Debug Properties ===
displacement: 384
scale: Times1
stamp: void*
=== Inputs ===
base: j406 
index: j442 
=== Succesors ===
=== Usages ===
v438 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j406 index: j442  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v438 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:138) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 18]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
stamp: void
=== Inputs ===
address: v739 
=== Succesors ===
next: v445 
=== Usages ===
=== Predecessor ===
v435 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v739 #next: v445  <|@  <|@
f <@~|@floating>@ <|@
tid v734 <|@
result [v18|QWORD + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j442 
index: - 
=== Succesors ===
=== Usages ===
v445 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j442 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v445 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:549) [bci: 12]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:138) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 18]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v734 
value: i710 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v446 
=== Usages ===
=== Predecessor ===
v438 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v734 value: i710 stateAfter: - lastLocationAccess: - #next: v446  <|@  <|@
f <@~|@floating>@ <|@
tid v735 <|@
result [v18|QWORD] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j442 
index: - 
=== Succesors ===
=== Usages ===
v446 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j442 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v446 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:469) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:138) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 18]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v735 
value: j386 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v449 
=== Usages ===
=== Predecessor ===
v445 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v735 value: j386 stateAfter: - lastLocationAccess: - #next: v449  <|@  <|@
f <@~|@floating>@ <|@
tid v740 <|@
result [v18|QWORD + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j442 
index: - 
=== Succesors ===
=== Usages ===
v449 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j442 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v449 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:138) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 18]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v740 
value: v711 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v414 
=== Usages ===
=== Predecessor ===
v446 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v740 value: v711 stateAfter: - lastLocationAccess: - #next: v414  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v414 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.MembarNode.memoryBarrier(int, LocationIdentity) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:560) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:138) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 18]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: a415 
=== Usages ===
=== Predecessor ===
v449 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a415  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a415 <|@
result v29|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:561) [bci: 71]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:138) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 18]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
stamp: a! -
trackedPointer: true
=== Inputs ===
input: j442 
=== Succesors ===
next: v417 
=== Usages ===
a420 
=== Predecessor ===
v414 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j442 #next: v417  <|@  <|@
f <@*|@fixed>@ <|@
tid v417 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:138) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 18]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v418 
=== Predecessor ===
a415 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v26|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v25|QWORD + v18|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v25|QWORD + v18|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v25|QWORD + v18|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v25|QWORD + v18|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v18|QWORD + 12], y: v20|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v18|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v18|QWORD + 8], y: v21|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v29|QWORD[.] = MOVE v18|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v29|QWORD[.]] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4603263788425269054
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a420 <|@
result v30|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:138) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 18]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
stamp: a! -
valueDescription: a -
=== Inputs ===
merge: v418 
values: a415 a416 
=== Succesors ===
=== Usages ===
v728 a344 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v418 values: a415 a416  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v418 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:138) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 18]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v417 v419 
=== Succesors ===
next: v643 
=== Usages ===
a420 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v417 v419 #next: v643  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v643 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v590 
=== Usages ===
j645 
=== Predecessor ===
v418 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v590  <|@  <|@
f <@~|@floating>@ <|@
tid v728 <|@
result [v30|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a420 
index: - 
=== Succesors ===
=== Usages ===
j645 j463 j461 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a420 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j495 <|@
result v31|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: true
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.disjointUninitializedArraycopy(ArrayCopyCallNode.java:211) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:122) [bci: 37]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
resultBits: 64
stamp: i64 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
value: i710 
=== Succesors ===
=== Usages ===
v496 j686 j673 j679 j683 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i710  <|@  <|@
f <@~|@floating>@ <|@
tid v457 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:154) [bci: 1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:138) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 18]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i710 
y: i156 
=== Succesors ===
=== Usages ===
v460 v590 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i710 y: i156  <|@  <|@
f <@~|@floating>@ <|@
tid j475 <|@
result long[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 50]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:138) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 18]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
rawvalue: -1
stableDimension: 0
stamp: i64 [-1] ⇊ffffffffffffffff
stampKind: i64
value: long[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
j476 j686 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v590 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v457 
=== Succesors ===
trueSuccessor: v588 
falseSuccessor: v589 
=== Usages ===
=== Predecessor ===
v643 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v457 #trueSuccessor: v588 #falseSuccessor: v589  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v30|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v31|QWORD = MOV v20|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v20|DWORD, y: v20|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B30" 
    xhandlers
    flags 
    probability 4598760188797898558
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v588 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v608 
=== Usages ===
=== Predecessor ===
v590 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v608  <|@  <|@
f <@*|@fixed>@ <|@
tid v608 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v609 
=== Predecessor ===
v588 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B15 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4598760188797898558
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v589 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v594 
=== Usages ===
=== Predecessor ===
v590 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v594  <|@  <|@
f <@~|@floating>@ <|@
tid j645 <|@
result v32|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v643 
address: v728 
=== Succesors ===
=== Usages ===
v757 v758 v759 v760 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v643 address: v728  <|@  <|@
f <@~|@floating>@ <|@
tid j672 <|@
result long[-8|0xfffffffffffffff8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -8
stableDimension: 0
stamp: i64 [-8] ⇊fffffffffffffff8 ⇈fffffffffffffff8
stampKind: i64
value: long[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j673 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j673 <|@
result v33|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-8 - 2147483639]
=== Inputs ===
x: j495 
y: j672 
=== Succesors ===
=== Usages ===
v674 v676 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j495 y: j672  <|@  <|@
f <@~|@floating>@ <|@
tid j427 <|@
result long[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:469) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:138) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 18]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
rawvalue: 0
stableDimension: 0
stamp: i64 [0] ⇈0000000000000000
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j666 j660 v674 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v674 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j673 
y: j427 
=== Succesors ===
=== Usages ===
v594 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j673 y: j427  <|@  <|@
f <@*|@fixed>@ <|@
tid v594 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v674 
=== Succesors ===
trueSuccessor: v592 
falseSuccessor: v593 
=== Usages ===
=== Predecessor ===
v589 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v674 #trueSuccessor: v592 #falseSuccessor: v593  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v32|QWORD[.] = LEA [v30|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v33|QWORD = LEA [v31|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v33|QWORD, y: v33|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B16 -> B17 falseDestination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B21" 
    xhandlers
    flags 
    probability 4596800873610524381
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v592 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v604 
=== Usages ===
=== Predecessor ===
v594 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v604  <|@  <|@
f <@*|@fixed>@ <|@
tid v604 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v605 
=== Predecessor ===
v592 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B17 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4589752989543157566
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v593 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v595 
=== Usages ===
=== Predecessor ===
v594 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v595  <|@  <|@
f <@~|@floating>@ <|@
tid j369 <|@
result long[8|0x8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:181) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
rawvalue: 8
stableDimension: 0
stamp: i64 [8] ⇊0000000000000008 ⇈0000000000000008
stampKind: i64
value: long[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j671 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v698 <|@
result v34|V256_DWORD[........] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <null,null,null,null,null,null,null,null>
stableDimension: 0
stamp: <n - NULL,n - NULL,n - NULL,n - NULL,n - NULL,n - NULL,n - NULL,n - NULL>
stampKind: <n -,n -,n -,n -,n -,n -,n -,n ->
value: SIMD<null,null,null,null,null,null,null,null>
=== Inputs ===
=== Succesors ===
=== Usages ===
v697 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v595 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v596 
=== Predecessor ===
v593 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v34|V256_DWORD[........] = L oc: SIMD<null,null,null,null,null,null,null,null> <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B48" 
    successors "B20" "B48" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4598760188797898558
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j666 <|@
result v35|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v596 
values: j427 j671 
=== Succesors ===
=== Usages ===
v760 j671 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v596 values: j427 j671  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v596 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v595 
=== Succesors ===
next: v697 
=== Usages ===
j666 v600 v601 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v595 #next: v697  <|@  <|@
f <@~|@floating>@ <|@
tid v760 <|@
result [v32|QWORD[.] + v35|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j645 
index: j666 
=== Succesors ===
=== Usages ===
v697 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j645 index: j666  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v697 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v760 
value: v698 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v603 
=== Usages ===
=== Predecessor ===
v596 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v760 value: v698 stateAfter: - lastLocationAccess: - #next: v603  <|@  <|@
f <@~|@floating>@ <|@
tid j671 <|@
result v36|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j666 
y: j369 
=== Succesors ===
=== Usages ===
j660 j666 v676 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j666 y: j369  <|@  <|@
f <@~|@floating>@ <|@
tid v676 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j673 
y: j671 
=== Succesors ===
=== Usages ===
v603 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j673 y: j671  <|@  <|@
f <@*|@fixed>@ <|@
tid v603 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v676 
=== Succesors ===
trueSuccessor: v600 
falseSuccessor: v602 
=== Usages ===
=== Predecessor ===
v697 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v676 #trueSuccessor: v600 #falseSuccessor: v602  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v35|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v32|QWORD[.] + v35|QWORD * 4], input: v34|V256_DWORD[........]) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v36|QWORD = LEA [v35|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v36|QWORD, y: v33|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B19 -> B20 falseDestination: B19 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" 
    xhandlers
    flags 
    probability 4589752989543157566
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v600 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v596 
=== Succesors ===
next: v606 
=== Usages ===
=== Predecessor ===
v603 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v596 #next: v606  <|@  <|@
f <@*|@fixed>@ <|@
tid v606 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v605 
=== Predecessor ===
v600 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v36|QWORD] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B17" "B20" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4598760188797898558
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j660 <|@
result v37|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v605 
values: j427 j671 
=== Succesors ===
=== Usages ===
v759 j665 j653 v680 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v605 values: j427 j671  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v605 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v604 v606 
=== Succesors ===
next: v624 
=== Usages ===
j660 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v604 v606 #next: v624  <|@  <|@
f <@~|@floating>@ <|@
tid j678 <|@
result long[-4|0xfffffffffffffffc] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -4
stableDimension: 0
stamp: i64 [-4] ⇊fffffffffffffffc ⇈fffffffffffffffc
stampKind: i64
value: long[-4|0xfffffffffffffffc]
=== Inputs ===
=== Succesors ===
=== Usages ===
j679 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j679 <|@
result v38|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4 - 2147483643]
=== Inputs ===
x: j495 
y: j678 
=== Succesors ===
=== Usages ===
v680 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j495 y: j678  <|@  <|@
f <@~|@floating>@ <|@
tid v680 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j679 
y: j660 
=== Succesors ===
=== Usages ===
v624 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j679 y: j660  <|@  <|@
f <@*|@fixed>@ <|@
tid v624 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v680 
=== Succesors ===
trueSuccessor: v623 
falseSuccessor: v622 
=== Usages ===
=== Predecessor ===
v605 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v680 #trueSuccessor: v623 #falseSuccessor: v622  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v37|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = LEA [v31|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v37|QWORD, y: v38|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B21 -> B22 falseDestination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4589752989543157566
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v623 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v627 
=== Usages ===
=== Predecessor ===
v624 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v627  <|@  <|@
f <@*|@fixed>@ <|@
tid v627 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v616 
=== Predecessor ===
v623 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v37|QWORD] destination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4596800873610524381
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v622 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v696 
=== Usages ===
=== Predecessor ===
v624 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v696  <|@  <|@
f <@~|@floating>@ <|@
tid v759 <|@
result [v32|QWORD[.] + v37|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j645 
index: j660 
=== Succesors ===
=== Usages ===
v696 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j645 index: j660  <|@  <|@
f <@~|@floating>@ <|@
tid v700 <|@
result v39|V128_DWORD[....] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <null,null,null,null>
stableDimension: 0
stamp: <n - NULL,n - NULL,n - NULL,n - NULL>
stampKind: <n -,n -,n -,n ->
value: SIMD<null,null,null,null>
=== Inputs ===
=== Succesors ===
=== Usages ===
v696 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v696 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v759 
value: v700 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v615 
=== Usages ===
=== Predecessor ===
v622 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v759 value: v700 stateAfter: - lastLocationAccess: - #next: v615  <|@  <|@
f <@~|@floating>@ <|@
tid j648 <|@
result long[4|0x4] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 4
stableDimension: 0
stamp: i64 [4] ⇊0000000000000004 ⇈0000000000000004
stampKind: i64
value: long[4|0x4]
=== Inputs ===
=== Succesors ===
=== Usages ===
j665 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j665 <|@
result v40|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j660 
y: j648 
=== Succesors ===
=== Usages ===
j653 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j660 y: j648  <|@  <|@
f <@*|@fixed>@ <|@
tid v615 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v616 
=== Predecessor ===
v696 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v39|V128_DWORD[....] = L oc: SIMD<null,null,null,null> <|@ <|@
      nr   -1  <|@ instruction J (address: [v32|QWORD[.] + v37|QWORD * 4], input: v39|V128_DWORD[....]) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v40|QWORD = LEA [v37|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v40|QWORD] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B22" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4598760188797898558
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j653 <|@
result v41|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v616 
values: j665 j660 
=== Succesors ===
=== Usages ===
v758 j659 j646 v684 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v616 values: j665 j660  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v616 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v615 v627 
=== Succesors ===
next: v630 
=== Usages ===
j653 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v615 v627 #next: v630  <|@  <|@
f <@~|@floating>@ <|@
tid j682 <|@
result long[-2|0xfffffffffffffffe] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -2
stableDimension: 0
stamp: i64 [-2] ⇊fffffffffffffffe ⇈fffffffffffffffe
stampKind: i64
value: long[-2|0xfffffffffffffffe]
=== Inputs ===
=== Succesors ===
=== Usages ===
j683 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j683 <|@
result v42|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2 - 2147483645]
=== Inputs ===
x: j495 
y: j682 
=== Succesors ===
=== Usages ===
v684 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j495 y: j682  <|@  <|@
f <@~|@floating>@ <|@
tid v684 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j683 
y: j653 
=== Succesors ===
=== Usages ===
v630 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j683 y: j653  <|@  <|@
f <@*|@fixed>@ <|@
tid v630 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v684 
=== Succesors ===
trueSuccessor: v629 
falseSuccessor: v628 
=== Usages ===
=== Predecessor ===
v616 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v684 #trueSuccessor: v629 #falseSuccessor: v628  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v41|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v42|QWORD = LEA [v31|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v41|QWORD, y: v42|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B24 -> B25 falseDestination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4589752989543157566
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v629 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v633 
=== Usages ===
=== Predecessor ===
v630 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v633  <|@  <|@
f <@*|@fixed>@ <|@
tid v633 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v619 
=== Predecessor ===
v629 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v41|QWORD] destination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4596800873610524381
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v628 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v694 
=== Usages ===
=== Predecessor ===
v630 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v694  <|@  <|@
f <@~|@floating>@ <|@
tid v758 <|@
result [v32|QWORD[.] + v41|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j645 
index: j653 
=== Succesors ===
=== Usages ===
v694 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j645 index: j653  <|@  <|@
f <@~|@floating>@ <|@
tid v699 <|@
result v43|V64_DWORD[..] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <null,null>
stableDimension: 0
stamp: <n - NULL,n - NULL>
stampKind: <n -,n ->
value: SIMD<null,null>
=== Inputs ===
=== Succesors ===
=== Usages ===
v694 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v694 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v758 
value: v699 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v618 
=== Usages ===
=== Predecessor ===
v628 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v758 value: v699 stateAfter: - lastLocationAccess: - #next: v618  <|@  <|@
f <@~|@floating>@ <|@
tid j658 <|@
result long[2|0x2] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 2
stableDimension: 0
stamp: i64 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i64
value: long[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
j659 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j659 <|@
result v44|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j653 
y: j658 
=== Succesors ===
=== Usages ===
j646 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j653 y: j658  <|@  <|@
f <@*|@fixed>@ <|@
tid v618 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v619 
=== Predecessor ===
v694 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v43|V64_DWORD[..] = L oc: SIMD<null,null> <|@ <|@
      nr   -1  <|@ instruction J (address: [v32|QWORD[.] + v41|QWORD * 4], input: v43|V64_DWORD[..]) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v44|QWORD = LEA [v41|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v44|QWORD] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4598760188797898558
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j646 <|@
result v45|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v619 
values: j659 j653 
=== Succesors ===
=== Usages ===
v757 v687 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v619 values: j659 j653  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v619 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v618 v633 
=== Succesors ===
next: v636 
=== Usages ===
j646 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v618 v633 #next: v636  <|@  <|@
f <@~|@floating>@ <|@
tid j686 <|@
result v46|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-1 - 2147483646]
=== Inputs ===
x: j495 
y: j475 
=== Succesors ===
=== Usages ===
v687 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j495 y: j475  <|@  <|@
f <@~|@floating>@ <|@
tid v687 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j686 
y: j646 
=== Succesors ===
=== Usages ===
v636 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j686 y: j646  <|@  <|@
f <@*|@fixed>@ <|@
tid v636 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v687 
=== Succesors ===
trueSuccessor: v635 
falseSuccessor: v634 
=== Usages ===
=== Predecessor ===
v619 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v687 #trueSuccessor: v635 #falseSuccessor: v634  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v45|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v46|QWORD = DEC v31|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v45|QWORD, y: v46|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B27 -> B28 falseDestination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4589752989543157566
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v635 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v639 
=== Usages ===
=== Predecessor ===
v636 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v639  <|@  <|@
f <@*|@fixed>@ <|@
tid v639 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v609 
=== Predecessor ===
v635 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B28 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4596800873610524381
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v634 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v692 
=== Usages ===
=== Predecessor ===
v636 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v692  <|@  <|@
f <@~|@floating>@ <|@
tid v757 <|@
result [v32|QWORD[.] + v45|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j645 
index: j646 
=== Succesors ===
=== Usages ===
v692 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j645 index: j646  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v692 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v757 
value: a241 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v621 
=== Usages ===
=== Predecessor ===
v634 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v757 value: a241 stateAfter: - lastLocationAccess: - #next: v621  <|@  <|@
f <@*|@fixed>@ <|@
tid v621 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v609 
=== Predecessor ===
v692 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v32|QWORD[.] + v45|QWORD * 4], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B15" "B29" "B28" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4603263788425269054
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v609 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v608 v621 v639 
=== Succesors ===
next: v460 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v608 v621 v639 #next: v460  <|@  <|@
f <@*|@fixed>@ <|@
tid v460 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:154) [bci: 1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:138) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 18]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v457 
=== Succesors ===
trueSuccessor: v458 
falseSuccessor: v459 
=== Usages ===
=== Predecessor ===
v609 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v457 #trueSuccessor: v458 #falseSuccessor: v459  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v20|DWORD, y: v20|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B35" 
    xhandlers
    flags 
    probability 4598760188797898558
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v458 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:155) [bci: 4]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:138) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 18]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v486 
=== Usages ===
=== Predecessor ===
v460 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v486  <|@  <|@
f <@*|@fixed>@ <|@
tid v486 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:138) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 18]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v485 
=== Predecessor ===
v458 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B31 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" 
    xhandlers
    flags 
    probability 4598760188797898558
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v459 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:157) [bci: 5]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:138) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 18]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: j461 
=== Usages ===
=== Predecessor ===
v460 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j461  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j461 <|@
result [v30|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToFirstArrayElement(WriteBarrierSnippets.java:376) [bci: 1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:159) [bci: 20]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:138) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 18]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v728 
=== Succesors ===
next: j463 
=== Usages ===
j462 
=== Predecessor ===
v459 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: v728 #next: j463  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j463 <|@
result [v30|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToLastArrayElement(WriteBarrierSnippets.java:385) [bci: 1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 30]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:138) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 18]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v728 
=== Succesors ===
next: v472 
=== Usages ===
j468 
=== Predecessor ===
j461 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: v728 #next: v472  <|@  <|@
f <@~|@floating>@ <|@
tid i464 <|@
result int[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToLastArrayElement(WriteBarrierSnippets.java:390) [bci: 23]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 30]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:138) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 18]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1] ⇊00000000ffffffff
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i465 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i465 <|@
result v47|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToLastArrayElement(WriteBarrierSnippets.java:390) [bci: 23]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 30]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:138) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 18]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
stamp: i32 [-1 - 2147483646]
=== Inputs ===
x: i710 
y: i464 
=== Succesors ===
=== Usages ===
i466 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i710 y: i464  <|@  <|@
f <@~|@floating>@ <|@
tid i466 <|@
result v48|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToLastArrayElement(WriteBarrierSnippets.java:390) [bci: 25]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 30]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:138) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 18]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
stamp: i32 [-2147483648 - 2147483644] ⇈00000000fffffffc
=== Inputs ===
x: i465 
y: i399 
=== Succesors ===
=== Usages ===
j467 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i465 y: i399  <|@  <|@
f <@~|@floating>@ <|@
tid j467 <|@
result v49|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToLastArrayElement(WriteBarrierSnippets.java:390) [bci: 26]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 30]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:138) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 18]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
resultBits: 64
stamp: i64 [-2147483648 - 2147483644] ⇈fffffffffffffffc
=== Inputs ===
value: i466 
=== Succesors ===
=== Usages ===
j468 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i466  <|@  <|@
f <@~|@floating>@ <|@
tid j468 <|@
result v51|QWORD[.] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToLastArrayElement(WriteBarrierSnippets.java:390) [bci: 27]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 30]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:138) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 18]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
stamp: i64
=== Inputs ===
x: j463 
y: j467 
=== Succesors ===
=== Usages ===
j469 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j463 y: j467  <|@  <|@
f <@~|@floating>@ <|@
tid j469 <|@
result v52|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 34]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:138) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 18]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j468 
y: i374 
=== Succesors ===
=== Usages ===
j470 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j468 y: i374  <|@  <|@
f <@~|@floating>@ <|@
tid j462 <|@
result v53|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:159) [bci: 24]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:138) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 18]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j461 
y: i374 
=== Succesors ===
=== Usages ===
j470 j484 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j461 y: i374  <|@  <|@
f <@~|@floating>@ <|@
tid j470 <|@
result v55|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:161) [bci: 41]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:138) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 18]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
stamp: i64 [-36028797018963967 - 36028797018963967]
=== Inputs ===
x: j469 
y: j462 
=== Succesors ===
=== Usages ===
j471 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j469 y: j462  <|@  <|@
f <@~|@floating>@ <|@
tid j471 <|@
result v56|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:161) [bci: 43]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:138) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 18]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
stamp: i64 [-36028797018963966 - 36028797018963968]
=== Inputs ===
x: j470 
y: j386 
=== Succesors ===
=== Usages ===
j474 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j470 y: j386  <|@  <|@
f <@*|@fixed>@ <|@
tid v472 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 46]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:138) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 18]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v473 
=== Predecessor ===
j463 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v47|DWORD = DEC v20|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v48|DWORD = SHL v47|DWORD y: 2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v49|QWORD = MOVSXD v48|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v50|QWORD[.] = LEA [v30|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v51|QWORD[.] = ADD (x: v50|QWORD[.], y: v49|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v52|QWORD[*] = SHR v51|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v54|QWORD[.] = LEA [v30|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v53|QWORD[*] = SHR v54|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v55|QWORD[*] = SUB (x: v52|QWORD[*], ~y: v53|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v56|QWORD[*] = INC v55|QWORD[*] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v56|QWORD[*]] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" "B47" 
    successors "B34" "B47" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4603263788425269054
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j474 <|@
result v57|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:138) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 18]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v473 
values: j471 j476 
=== Succesors ===
=== Usages ===
j476 v477 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v473 values: j471 j476  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v473 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 2.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 46]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:138) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 18]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v472 
=== Succesors ===
next: v480 
=== Usages ===
j474 v478 v483 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v472 #next: v480  <|@  <|@
f <@~|@floating>@ <|@
tid v477 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 55]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:138) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 18]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j474 
y: j386 
=== Succesors ===
=== Usages ===
v480 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j474 y: j386  <|@  <|@
f <@*|@fixed>@ <|@
tid v480 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 55]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:138) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 18]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v477 
=== Succesors ===
trueSuccessor: v478 
falseSuccessor: v479 
=== Usages ===
=== Predecessor ===
v473 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v477 #trueSuccessor: v478 #falseSuccessor: v479  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v57|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v57|QWORD[*] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B33 -> B34 falseDestination: B33 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" 
    xhandlers
    flags 
    probability 4598760188797898558
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v478 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:165) [bci: 76]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:138) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 18]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v473 
=== Succesors ===
next: v487 
=== Usages ===
=== Predecessor ===
v480 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v473 #next: v487  <|@  <|@
f <@*|@fixed>@ <|@
tid v487 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:138) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 18]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v485 
=== Predecessor ===
v478 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B31" "B34" 
    successors "B36" "B46" 
    xhandlers
    flags 
    probability 4603263788425269054
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v485 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:138) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 18]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v486 v487 
=== Succesors ===
next: a344 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v486 v487 #next: a344  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a344 <|@
result v30|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:138) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 18]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
predefinedStamp: [null]
stamp: a! -
=== Inputs ===
object: a420 
=== Succesors ===
next: j489 
=== Usages ===
j493 ?243 a245 v743 
=== Predecessor ===
v485 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a420 #next: j489  <|@  <|@
f <@~|@floating>@ <|@
tid a337 <|@
result v58|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:187) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
op: Uncompress
stamp: a [Ljava/lang/Object;
=== Inputs ===
value: a336 
=== Succesors ===
=== Usages ===
j489 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a336  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j489 <|@
result v59|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.disjointUninitializedArraycopy(ArrayCopyCallNode.java:211) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:122) [bci: 37]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
stamp: i64
=== Inputs ===
object: a337 
=== Succesors ===
next: j493 
=== Usages ===
v741 
=== Predecessor ===
a344 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a337 #next: j493  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j493 <|@
result v60|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.disjointUninitializedArraycopy(ArrayCopyCallNode.java:211) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:122) [bci: 37]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
stamp: i64
=== Inputs ===
object: a344 
=== Succesors ===
next: v496 
=== Usages ===
v742 
=== Predecessor ===
j489 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a344 #next: v496  <|@  <|@
f <@~|@floating>@ <|@
tid v741 <|@
result [v59|QWORD[*] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j489 
index: - 
=== Succesors ===
=== Usages ===
v496 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j489 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v742 <|@
result [v60|QWORD[*] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j493 
index: - 
=== Succesors ===
=== Usages ===
v496 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j493 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v496 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: ObjectDisjointUninitArraycopy(Word,Word,Word)void
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.disjointUninitializedArraycopy(ArrayCopyCallNode.java:211) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:122) [bci: 37]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
stamp: void
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: v741 v742 j495 
=== Succesors ===
next: v712 
=== Usages ===
=== Predecessor ===
j493 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: v741 v742 j495 #next: v712  <|@  <|@
f <@~|@floating>@ <|@
tid v743 <|@
result [v30|QWORD[.] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a344 
index: - 
=== Succesors ===
=== Usages ===
v712 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a344 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v712 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 54]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v743 
=== Succesors ===
next: v290 
=== Usages ===
v580 
=== Predecessor ===
v496 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v743 #next: v290  <|@  <|@
f <@~|@floating>@ <|@
tid v579 <|@
result meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 54]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
rawvalue: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v580 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v580 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 54]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v712 
y: v579 
=== Succesors ===
=== Usages ===
v290 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v712 y: v579  <|@  <|@
f <@*|@fixed>@ <|@
tid v290 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 54]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v580 
=== Succesors ===
trueSuccessor: v287 
falseSuccessor: v289 
=== Usages ===
=== Predecessor ===
v712 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v580 #trueSuccessor: v287 #falseSuccessor: v289  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v58|QWORD[.] = UNCOMPRESSPOINTER (input: v17|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@58cdd6ff encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v59|QWORD[*] = MOVE v58|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v60|QWORD[*] = MOVE v30|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA [v59|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA [v60|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE v31|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: ObjectDisjointUninitArraycopy(Word,Word,Word)void@0x106813200:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction CMP [v30|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B37" 
    xhandlers
    flags 
    probability 4603263788425269054
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v287 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 54]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v247 
=== Usages ===
=== Predecessor ===
v290 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v247  <|@  <|@
f <@~|@floating>@ <|@
tid v727 <|@
result [v0|QWORD[.] + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v247 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a245 <|@
result v61|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 57]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
op: Compress
stamp: n! -
=== Inputs ===
value: a344 
=== Succesors ===
=== Usages ===
v247 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a344  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v247 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: EconomicMapImpl.entries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 57]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v727 
value: a245 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j500 
=== Usages ===
=== Predecessor ===
v287 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v727 value: a245 stateAfter: - lastLocationAccess: - #next: j500  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j500 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 57]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1 
=== Succesors ===
next: v504 
=== Usages ===
j501 
=== Predecessor ===
v247 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a1 #next: v504  <|@  <|@
f <@~|@floating>@ <|@
tid j501 <|@
result v62|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 57]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j500 
y: i374 
=== Succesors ===
=== Usages ===
v744 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j500 y: i374  <|@  <|@
f <@~|@floating>@ <|@
tid v744 <|@
result [v62|QWORD[*] + v4|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j501 
index: j378 
=== Succesors ===
=== Usages ===
v504 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j501 index: j378  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v504 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 57]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v744 
value: i168 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v69 
=== Usages ===
=== Predecessor ===
j500 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v744 value: i168 stateAfter: - lastLocationAccess: - #next: v69  <|@  <|@
f <@*|@fixed>@ <|@
tid v69 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:190) [bci: 60]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v68 
=== Predecessor ===
v504 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v61|DWORD[.] = COMPRESSPOINTER (input: v30|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@58cdd6ff encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 24], y: v61|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v62|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v62|QWORD[*] + v4|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B4" "B36" "B9" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v68 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:190) [bci: 60]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v67 v69 v129 
=== Succesors ===
next: a713 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v67 v69 v129 #next: a713  <|@  <|@
f <@~|@floating>@ <|@
tid v715 <|@
result [v2|QWORD[.] + 28] <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: a3 
index: - 
=== Succesors ===
=== Usages ===
a713 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a713 <|@
result v63|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.hashArray
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:190) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
nullCheck: false
stamp: n# [B
=== Inputs ===
stateBefore: - 
guard: - 
address: v715 
=== Succesors ===
next: v75 
=== Usages ===
a152 v248 v716 
=== Predecessor ===
v68 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v715 #next: v75  <|@  <|@
f <@~|@floating>@ <|@
tid v248 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:190) [bci: 64]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
stamp: void
=== Inputs ===
value: a713 
=== Succesors ===
=== Usages ===
v75 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a713  <|@  <|@
f <@*|@fixed>@ <|@
tid v75 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:190) [bci: 64]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
stamp: void
trueSuccessorProbability: 0.7916022292900703
=== Inputs ===
condition: v248 
=== Succesors ===
trueSuccessor: v73 
falseSuccessor: v74 
=== Usages ===
=== Predecessor ===
a713 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v248 #trueSuccessor: v73 #falseSuccessor: v74  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v63|DWORD[.] = MOV [v2|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v63|DWORD[.], y: v63|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7916022292900703 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors 
    xhandlers
    flags 
    probability 4605305338554989244
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v73 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:193) [bci: 81]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v92 
=== Usages ===
=== Predecessor ===
v75 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v92  <|@  <|@
f <@*|@fixed>@ <|@
tid v92 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
result: - 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v73 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: - memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B43" 
    xhandlers
    flags 
    probability 4596676341270648075
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v74 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 67]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: i714 
=== Usages ===
=== Predecessor ===
v75 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i714  <|@  <|@
f <@~|@floating>@ <|@
tid v716 <|@
result [v63|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a713 
=== Succesors ===
=== Usages ===
i714 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a713  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i714 <|@
result v64|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:71) [bci: 4]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 72]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v716 
=== Succesors ===
next: j509 
=== Usages ===
v549 j567 v515 a530 i537 
=== Predecessor ===
v74 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v716 #next: j509  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j509 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:772) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:319) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:71) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 72]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j546 
=== Usages ===
v745 v746 
=== Predecessor ===
i714 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j546  <|@  <|@
f <@~|@floating>@ <|@
tid v745 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j509 
index: - 
=== Succesors ===
=== Usages ===
j546 v548 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j509 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j546 <|@
result v65|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:245) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:320) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:71) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 72]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v745 
=== Succesors ===
next: j547 
=== Usages ===
j513 v747 v748 a529 v753 v749 v750 v751 v752 
=== Predecessor ===
j509 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v745 #next: j547  <|@  <|@
f <@~|@floating>@ <|@
tid v746 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j509 
index: - 
=== Succesors ===
=== Usages ===
j547 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j509 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j547 <|@
result v66|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:249) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:321) [bci: 25]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:71) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 72]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v746 
=== Succesors ===
next: v518 
=== Usages ===
v519 
=== Predecessor ===
j546 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v746 #next: v518  <|@  <|@
f <@~|@floating>@ <|@
tid i514 <|@
result int[16777215|0xffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 48]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:71) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 72]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
rawvalue: 16777215
stableDimension: 0
stamp: i32 [16777215] ⇊0000000000ffffff ⇈0000000000ffffff
stampKind: i32
value: int[16777215|0xffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v515 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v515 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.core.common.calc.UnsignedMath.belowThan(int, int) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 50]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:71) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 72]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i714 
y: i514 
=== Succesors ===
=== Usages ===
v518 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i714 y: i514  <|@  <|@
f <@*|@fixed>@ <|@
tid v518 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 64]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:71) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 72]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v515 
=== Succesors ===
trueSuccessor: v517 
falseSuccessor: v516 
=== Usages ===
=== Predecessor ===
j547 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v515 #trueSuccessor: v517 #falseSuccessor: v516  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v64|DWORD = MOV [v63|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v65|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v66|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v64|DWORD y: 16777215 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B39 -> B40 falseDestination: B39 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4595925509172636810
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v517 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 67]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:71) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 72]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v525 
=== Usages ===
=== Predecessor ===
v518 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v525  <|@  <|@
f <@~|@floating>@ <|@
tid i537 <|@
result v67|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:71) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 72]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
stamp: i32
=== Inputs ===
x: i714 
y: i423 
=== Succesors ===
=== Usages ===
i508 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i714 y: i423  <|@  <|@
f <@~|@floating>@ <|@
tid i508 <|@
result v68|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:604) [bci: 30]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:71) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 72]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i537 
y: i401 
=== Succesors ===
=== Usages ===
j512 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i537 y: i401  <|@  <|@
f <@~|@floating>@ <|@
tid j512 <|@
result v69|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:71) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 72]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
resultBits: 64
stamp: i64 [-2147483648 - 2147483640] ⇈fffffffffffffff8
=== Inputs ===
value: i508 
=== Succesors ===
=== Usages ===
j513 v749 v750 v751 v752 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i508  <|@  <|@
f <@~|@floating>@ <|@
tid j513 <|@
result v70|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:71) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 72]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
stamp: i64
=== Inputs ===
x: j512 
y: j546 
=== Succesors ===
=== Usages ===
v519 v548 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j512 y: j546  <|@  <|@
f <@~|@floating>@ <|@
tid v519 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 83]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:71) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 72]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j547 
y: j513 
=== Succesors ===
=== Usages ===
v525 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j547 y: j513  <|@  <|@
f <@*|@fixed>@ <|@
tid v525 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 89]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:71) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 72]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v519 
=== Succesors ===
trueSuccessor: v524 
falseSuccessor: v523 
=== Usages ===
=== Predecessor ===
v517 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v519 #trueSuccessor: v524 #falseSuccessor: v523  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v67|DWORD = LEA [v64|DWORD + 23] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v68|DWORD = AND v67|DWORD y: -8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v69|QWORD = MOVSXD v68|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v70|QWORD = ADD (x: v69|QWORD, y: v65|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v70|QWORD, y: v66|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B40 -> B41 falseDestination: B40 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B44" 
    xhandlers
    flags 
    probability 4566292408668031734
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v524 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:71) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 72]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v522 
=== Usages ===
=== Predecessor ===
v525 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v522  <|@  <|@
f <@*|@fixed>@ <|@
tid v522 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:71) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 72]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v521 
=== Predecessor ===
v524 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B41 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B45" 
    xhandlers
    flags 
    probability 4595857934283815796
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v523 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 92]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:71) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 72]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v548 
=== Usages ===
=== Predecessor ===
v525 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v548  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v548 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:257) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 96]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:71) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 72]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v745 
value: j513 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v539 
=== Usages ===
=== Predecessor ===
v523 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v745 value: j513 stateAfter: - lastLocationAccess: - #next: v539  <|@  <|@
f <@~|@floating>@ <|@
tid v749 <|@
result [v69|QWORD + v65|QWORD * 1 + 192] <|@
d <@d|@=== Debug Properties ===
displacement: 192
scale: Times1
stamp: void*
=== Inputs ===
base: j512 
index: j546 
=== Succesors ===
=== Usages ===
v539 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j512 index: j546  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v539 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:71) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 72]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
stamp: void
=== Inputs ===
address: v749 
=== Succesors ===
next: v541 
=== Usages ===
=== Predecessor ===
v548 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v749 #next: v541  <|@  <|@
f <@~|@floating>@ <|@
tid v750 <|@
result [v69|QWORD + v65|QWORD * 1 + 256] <|@
d <@d|@=== Debug Properties ===
displacement: 256
scale: Times1
stamp: void*
=== Inputs ===
base: j512 
index: j546 
=== Succesors ===
=== Usages ===
v541 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j512 index: j546  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v541 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:71) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 72]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
stamp: void
=== Inputs ===
address: v750 
=== Succesors ===
next: v543 
=== Usages ===
=== Predecessor ===
v539 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v750 #next: v543  <|@  <|@
f <@~|@floating>@ <|@
tid v751 <|@
result [v69|QWORD + v65|QWORD * 1 + 320] <|@
d <@d|@=== Debug Properties ===
displacement: 320
scale: Times1
stamp: void*
=== Inputs ===
base: j512 
index: j546 
=== Succesors ===
=== Usages ===
v543 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j512 index: j546  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v543 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:71) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 72]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
stamp: void
=== Inputs ===
address: v751 
=== Succesors ===
next: v545 
=== Usages ===
=== Predecessor ===
v541 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v751 #next: v545  <|@  <|@
f <@~|@floating>@ <|@
tid v752 <|@
result [v69|QWORD + v65|QWORD * 1 + 384] <|@
d <@d|@=== Debug Properties ===
displacement: 384
scale: Times1
stamp: void*
=== Inputs ===
base: j512 
index: j546 
=== Succesors ===
=== Usages ===
v545 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j512 index: j546  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v545 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:71) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 72]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
stamp: void
=== Inputs ===
address: v752 
=== Succesors ===
next: v549 
=== Usages ===
=== Predecessor ===
v543 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v752 #next: v549  <|@  <|@
f <@~|@floating>@ <|@
tid v747 <|@
result [v65|QWORD + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j546 
index: - 
=== Succesors ===
=== Usages ===
v549 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j546 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v549 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:549) [bci: 12]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:71) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 72]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v747 
value: i714 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v550 
=== Usages ===
=== Predecessor ===
v545 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v747 value: i714 stateAfter: - lastLocationAccess: - #next: v550  <|@  <|@
f <@~|@floating>@ <|@
tid v748 <|@
result [v65|QWORD] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j546 
index: - 
=== Succesors ===
=== Usages ===
v550 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j546 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v550 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:469) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:71) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 72]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v748 
value: j386 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v553 
=== Usages ===
=== Predecessor ===
v549 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v748 value: j386 stateAfter: - lastLocationAccess: - #next: v553  <|@  <|@
f <@~|@floating>@ <|@
tid v753 <|@
result [v65|QWORD + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j546 
index: - 
=== Succesors ===
=== Usages ===
v553 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j546 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v581 <|@
result meta{HotSpotType<[B, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:71) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 72]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
rawvalue: meta{HotSpotType<[B, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<[B, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v553 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v553 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:71) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 72]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v753 
value: v581 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v528 
=== Usages ===
=== Predecessor ===
v550 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v753 value: v581 stateAfter: - lastLocationAccess: - #next: v528  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v528 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.MembarNode.memoryBarrier(int, LocationIdentity) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:560) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:71) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 72]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: a529 
=== Usages ===
=== Predecessor ===
v553 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a529  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a529 <|@
result v71|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:561) [bci: 71]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:71) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 72]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
stamp: a! -
trackedPointer: true
=== Inputs ===
input: j546 
=== Succesors ===
next: v531 
=== Usages ===
a534 
=== Predecessor ===
v528 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j546 #next: v531  <|@  <|@
f <@*|@fixed>@ <|@
tid v531 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:71) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 72]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v532 
=== Predecessor ===
a529 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v70|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v69|QWORD + v65|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v69|QWORD + v65|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v69|QWORD + v65|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v69|QWORD + v65|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v65|QWORD + 12], y: v64|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v65|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v65|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v71|QWORD[.] = MOVE v65|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v71|QWORD[.]] destination: B42 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B44" 
    xhandlers
    flags 
    probability 4581663878192514055
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v516 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:71) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 72]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v520 
=== Usages ===
=== Predecessor ===
v518 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v520  <|@  <|@
f <@*|@fixed>@ <|@
tid v520 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:71) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 72]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v521 
=== Predecessor ===
v516 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" "B41" 
    successors "B45" 
    xhandlers
    flags 
    probability 4582204477303082166
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v521 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:71) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 72]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v520 v522 
=== Succesors ===
next: a530 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v520 v522 #next: a530  <|@  <|@
tid ?70 <|@
d <@d|@=== Debug Properties ===
bci: 60
code: ResolvedJavaMethodBytecode<EconomicMapImpl.initFrom(Object)>
duringCall: false
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 190
stackSize: 0
=== Inputs ===
outerFrameState: ?87 
values: a1 - a3 
=== Succesors ===
=== Usages ===
a530 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?87 values: a1 - a3  <|@  <|@
f <@~|@floating>@ <|@
tid v507 <|@
result v72|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:71) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 72]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
rawvalue: meta{HotSpotType<[B, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[B, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a530 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a530 <|@
result v73|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.newArray(ForeignCallDescriptor, KlassPointer, int, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 155]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:71) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 72]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?70 
arguments: v507 i714 i156 
=== Succesors ===
next: v533 
=== Usages ===
a534 
=== Predecessor ===
v521 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?70 arguments: v507 i714 i156 #next: v533  <|@  <|@
f <@*|@fixed>@ <|@
tid v533 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:71) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 72]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v532 
=== Predecessor ===
a530 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v72|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v72|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v64|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:190) [bci: 60]
locals: v0|QWORD[.] - v2|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
locals: v0|QWORD[.] - v2|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:60, 8] <|@ <|@
      nr   -1  <|@ instruction v73|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v73|QWORD[.]] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B42" "B44" 
    successors 
    xhandlers
    flags 
    probability 4596676341270648075
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a534 <|@
result v74|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:71) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 72]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
stamp: a! -
valueDescription: a -
=== Inputs ===
merge: v532 
values: a529 a530 
=== Succesors ===
=== Usages ===
j565 a171 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v532 values: a529 a530  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v532 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at org.graalvm.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:81) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:71) [bci: 5]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 72]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v531 v533 
=== Succesors ===
next: j561 
=== Usages ===
a534 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v531 v533 #next: j561  <|@  <|@
f <@~|@floating>@ <|@
tid a152 <|@
result v75|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:190) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
op: Uncompress
stamp: a# [B
=== Inputs ===
value: a713 
=== Succesors ===
=== Usages ===
j561 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a713  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j561 <|@
result v76|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.disjointArraycopy(ArrayCopyCallNode.java:207) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:72) [bci: 24]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 72]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
stamp: i64
=== Inputs ===
object: a152 
=== Succesors ===
next: j565 
=== Usages ===
v754 
=== Predecessor ===
v532 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a152 #next: j565  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j565 <|@
result v77|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.disjointArraycopy(ArrayCopyCallNode.java:207) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:72) [bci: 24]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 72]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
stamp: i64
=== Inputs ===
object: a534 
=== Succesors ===
next: v568 
=== Usages ===
v755 
=== Predecessor ===
j561 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a534 #next: v568  <|@  <|@
f <@~|@floating>@ <|@
tid v754 <|@
result [v76|QWORD[*] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j561 
index: - 
=== Succesors ===
=== Usages ===
v568 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j561 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v755 <|@
result [v77|QWORD[*] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j565 
index: - 
=== Succesors ===
=== Usages ===
v568 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j565 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j567 <|@
result v78|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: true
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.disjointArraycopy(ArrayCopyCallNode.java:207) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:72) [bci: 24]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 72]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
resultBits: 64
stamp: i64 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
value: i714 
=== Succesors ===
=== Usages ===
v568 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i714  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v568 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: byteDisjointArraycopy(Word,Word,Word)void
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.disjointArraycopy(ArrayCopyCallNode.java:207) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:72) [bci: 24]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 72]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
stamp: void
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: v754 v755 j567 
=== Succesors ===
next: v173 
=== Usages ===
=== Predecessor ===
j565 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: v754 v755 j567 #next: v173  <|@  <|@
f <@~|@floating>@ <|@
tid v717 <|@
result [v0|QWORD[.] + 28] <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v173 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a171 <|@
result v79|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 78]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
op: Compress
stamp: n! -
=== Inputs ===
value: a534 
=== Succesors ===
=== Usages ===
v173 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a534  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v173 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: EconomicMapImpl.hashArray
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 78]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v717 
value: a171 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j569 
=== Usages ===
=== Predecessor ===
v568 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v717 value: a171 stateAfter: - lastLocationAccess: - #next: j569  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j569 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 78]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1 
=== Succesors ===
next: v573 
=== Usages ===
j570 
=== Predecessor ===
v173 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a1 #next: v573  <|@  <|@
f <@~|@floating>@ <|@
tid j570 <|@
result v80|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 78]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j569 
y: i374 
=== Succesors ===
=== Usages ===
v756 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j569 y: i374  <|@  <|@
f <@~|@floating>@ <|@
tid v756 <|@
result [v80|QWORD[*] + v4|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j570 
index: j378 
=== Succesors ===
=== Usages ===
v573 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j570 index: j378  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v573 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:191) [bci: 78]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v756 
value: i168 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v93 
=== Usages ===
=== Predecessor ===
j569 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v756 value: i168 stateAfter: - lastLocationAccess: - #next: v93  <|@  <|@
f <@*|@fixed>@ <|@
tid v93 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
result: - 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v573 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: - memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v74|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v75|QWORD[.] = UNCOMPRESSPOINTER (input: v63|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@58cdd6ff encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v76|QWORD[*] = MOVE v75|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v77|QWORD[*] = MOVE v74|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v78|QWORD = MOV v64|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA [v76|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA [v77|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE v78|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: byteDisjointArraycopy(Word,Word,Word)void@0x106812ae0:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v79|DWORD[.] = COMPRESSPOINTER (input: v74|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@58cdd6ff encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 28], y: v79|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v80|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v80|QWORD[*] + v4|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v289 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 54]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v288 
=== Usages ===
=== Predecessor ===
v290 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v288  <|@  <|@
tid ?243 <|@
d <@d|@=== Debug Properties ===
bci: 54
code: ResolvedJavaMethodBytecode<EconomicMapImpl.initFrom(Object)>
duringCall: false
localsSize: 3
locksSize: 0
nodeSourcePosition: at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 188
stackSize: 2
=== Inputs ===
outerFrameState: ?87 
values: a1 - a3 a1 a344 
=== Succesors ===
=== Usages ===
v288 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?87 values: a1 - a3 a1 a344  <|@  <|@
f <@*|@fixed>@ <|@
tid v288 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 244
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 54]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
reason: TypeCheckedInliningViolated
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?243 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v289 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?243  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -62515 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 54]
stack: v0|QWORD[.] v30|QWORD[.] 
locals: v0|QWORD[.] - v2|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
locals: v0|QWORD[.] - v2|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:54, 8] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B33" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4598760188797898558
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v479 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:163) [bci: 58]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:138) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 18]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v482 
=== Usages ===
=== Predecessor ===
v480 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v482  <|@  <|@
f <@~|@floating>@ <|@
tid j476 <|@
result v81|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 50]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:138) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 18]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
stamp: i64
=== Inputs ===
x: j474 
y: j475 
=== Succesors ===
=== Usages ===
j474 j481 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j474 y: j475  <|@  <|@
f <@~|@floating>@ <|@
tid j484 <|@
result v82|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:163) [bci: 62]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:138) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 18]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
stamp: i64 [4682670080 - 36028801701634047] ⇈00ffffffffffffff
=== Inputs ===
x: j462 
y: j378 
=== Succesors ===
=== Usages ===
j481 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j462 y: j378  <|@  <|@
f <@~|@floating>@ <|@
tid j481 <|@
result v83|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:163) [bci: 65]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:138) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 18]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
stamp: i64
=== Inputs ===
x: j476 
y: j484 
=== Succesors ===
=== Usages ===
v482 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j476 y: j484  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v482 <|@
d <@d|@=== Debug Properties ===
kind: boolean
nodeSourcePosition: at org.graalvm.compiler.replacements.nodes.DirectStoreNode.storeBoolean(long, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:163) [bci: 70]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:138) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 18]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
stamp: void
=== Inputs ===
address: j481 
value: i156 
=== Succesors ===
next: v483 
=== Usages ===
=== Predecessor ===
v479 >@ <|@
instruction <@DirectStore|@org.graalvm.compiler.replacements.nodes.DirectStoreNode>@ address: j481 value: i156 #next: v483  <|@  <|@
f <@*|@fixed>@ <|@
tid v483 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 46]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(Class, int, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.nodes.java.DynamicNewArrayNode.newArray(DynamicNewArrayNode.java:138) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets.objectArrayClone(ObjectCloneSnippets.java:121) [bci: 18]
at java.lang.Object.clone() [bci: -1]
at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 51]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
stamp: void
=== Inputs ===
loopBegin: v473 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v482 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v473  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v81|QWORD[*] = DEC v57|QWORD[*] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v82|QWORD[*] = ADD (x: v53|QWORD[*], y: v4|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v83|QWORD[*] = ADD (x: v82|QWORD[*], y: v81|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v83|QWORD[*]], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v81|QWORD[*]] destination: B47 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B19" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4596800873610524381
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v602 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v601 
=== Usages ===
=== Predecessor ===
v603 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v601  <|@  <|@
f <@*|@fixed>@ <|@
tid v601 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v596 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v602 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v596  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v36|QWORD] destination: B48 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v285 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:184) [bci: 20]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v353 
=== Usages ===
=== Predecessor ===
v286 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v353  <|@  <|@
f <@~|@floating>@ <|@
tid i354 <|@
result int[-54803|0xffffffffffff29ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -54803
stableDimension: 0
stamp: i32 [-54803] ⇊00000000ffff29ed ⇈00000000ffff29ed
stampKind: i32
value: int[-54803|0xffffffffffff29ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i350 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v353 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v346 
=== Predecessor ===
v285 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-54803|0xffffffffffff29ed]] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B6" "B49" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i350 <|@
result v84|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-54803 - -48659] ⇊00000000ffff01ed ⇈00000000ffff69ed
valueDescription: i32
=== Inputs ===
merge: v346 
values: i348 i354 
=== Succesors ===
=== Usages ===
v352 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v346 values: i348 i354  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v346 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v347 v353 
=== Succesors ===
next: v352 
=== Usages ===
i350 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v347 v353 #next: v352  <|@  <|@
f <@~|@floating>@ <|@
tid a349 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v352 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
tid ?34 <|@
d <@d|@=== Debug Properties ===
bci: 3
code: ResolvedJavaMethodBytecode<EconomicMapImpl.<init>(Equivalence, UnmodifiableEconomicMap, boolean)>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 164
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - a3 - 
=== Succesors ===
=== Usages ===
?31 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - a3 -  <|@  <|@
tid ?31 <|@
d <@d|@=== Debug Properties ===
bci: 29
code: ResolvedJavaMethodBytecode<EconomicMapImpl.<init>(Equivalence, boolean)>
duringCall: false
localsSize: 3
locksSize: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:155) [bci: 26]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:164) [bci: 3]
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 156
stackSize: 0
=== Inputs ===
outerFrameState: ?34 
values: a1 - i4 
=== Succesors ===
=== Usages ===
v352 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?34 values: a1 - i4  <|@  <|@
f <@*|@fixed>@ <|@
tid v352 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?31 
actionAndReason: i350 
speculation: a349 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v346 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?31 actionAndReason: i350 speculation: a349  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v84|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v84|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:156) [bci: 29]
locals: v0|QWORD[.] - v3|DWORD 
org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:164) [bci: 3]
locals: v0|QWORD[.] - v2|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:29, 3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v357 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:181) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v276 
=== Usages ===
=== Predecessor ===
v360 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v276  <|@  <|@
f <@*|@fixed>@ <|@
tid v276 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 273
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:181) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
reason: UnreachedCode
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?5 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v357 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?5  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -69907 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:164) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B51" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@2112be2b slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:164) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|DWORD 
>@ <|@ instruction CMP [v2|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl;, resolved>;compressed} state [bci:0] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v4|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr   -1  <|@ instruction v5|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Equivalence$2@812065084] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v5|QWORD[.], y: v1|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.28618472457813726 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B8" "B49" 
    xhandlers
    flags 
    probability 4604604695962078954
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v10|DWORD[.] = COMPRESSPOINTER (input: v1|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@58cdd6ff encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 32], y: v10|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v11|QWORD[*] + v4|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v0|QWORD[.] + 20], y: v3|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v12|DWORD[.] = MOV [v2|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD[.] = UNCOMPRESSPOINTER (input: v12|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@58cdd6ff encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMP (x: v13|QWORD[.], y: v1|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4604604695962078954
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = MOV [v2|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v14|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = MOV [v2|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v15|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v16|DWORD[.] = MOV [v2|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v16|DWORD[.], y: v16|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.43505536670411277 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4600936216311056049
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v16|DWORD[.]] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B5" "B10" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4603263788425269054
    begin_IR
      LIR
      nr   -1  <|@ instruction [v17|DWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v18|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = MOV [v17|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = MOV [v17|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v22|DWORD = SHL v20|DWORD y: 2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v23|DWORD = LEA [v22|DWORD + 23] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v24|DWORD = AND v23|DWORD y: -8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v25|QWORD = MOVSXD v24|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = ADD (x: v25|QWORD, y: v18|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v26|QWORD, y: v19|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B11 -> B12 falseDestination: B11 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" 
    xhandlers
    flags 
    probability 4603212902736469128
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v26|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v25|QWORD + v18|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v25|QWORD + v18|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v25|QWORD + v18|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v25|QWORD + v18|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v18|QWORD + 12], y: v20|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v18|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v18|QWORD + 8], y: v21|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v29|QWORD[.] = MOVE v18|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v29|QWORD[.]] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4603263788425269054
    begin_IR
      LIR
      nr   -1  <|@ instruction [v30|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v31|QWORD = MOV v20|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v20|DWORD, y: v20|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4598760188797898558
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v32|QWORD[.] = LEA [v30|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v33|QWORD = LEA [v31|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v33|QWORD, y: v33|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B16 -> B17 falseDestination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B21" 
    xhandlers
    flags 
    probability 4596800873610524381
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B17 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B17" "B20" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4598760188797898558
    begin_IR
      LIR
      nr   -1  <|@ instruction [v37|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = LEA [v31|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v37|QWORD, y: v38|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B21 -> B22 falseDestination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4596800873610524381
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v39|V128_DWORD[....] = L oc: SIMD<null,null,null,null> <|@ <|@
      nr   -1  <|@ instruction J (address: [v32|QWORD[.] + v37|QWORD * 4], input: v39|V128_DWORD[....]) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v40|QWORD = LEA [v37|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v40|QWORD] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B22" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4598760188797898558
    begin_IR
      LIR
      nr   -1  <|@ instruction [v41|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v42|QWORD = LEA [v31|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v41|QWORD, y: v42|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B24 -> B25 falseDestination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4596800873610524381
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v43|V64_DWORD[..] = L oc: SIMD<null,null> <|@ <|@
      nr   -1  <|@ instruction J (address: [v32|QWORD[.] + v41|QWORD * 4], input: v43|V64_DWORD[..]) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v44|QWORD = LEA [v41|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v44|QWORD] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4598760188797898558
    begin_IR
      LIR
      nr   -1  <|@ instruction [v45|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v46|QWORD = DEC v31|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v45|QWORD, y: v46|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B27 -> B28 falseDestination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4596800873610524381
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v32|QWORD[.] + v45|QWORD * 4], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B15" "B29" "B28" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4603263788425269054
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v20|DWORD, y: v20|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" 
    xhandlers
    flags 
    probability 4598760188797898558
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v47|DWORD = DEC v20|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v48|DWORD = SHL v47|DWORD y: 2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v49|QWORD = MOVSXD v48|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v50|QWORD[.] = LEA [v30|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v51|QWORD[.] = ADD (x: v50|QWORD[.], y: v49|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v52|QWORD[*] = SHR v51|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v54|QWORD[.] = LEA [v30|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v53|QWORD[*] = SHR v54|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v55|QWORD[*] = SUB (x: v52|QWORD[*], ~y: v53|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v56|QWORD[*] = INC v55|QWORD[*] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v56|QWORD[*]] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B33" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4598760188797898558
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v81|QWORD[*] = DEC v57|QWORD[*] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v82|QWORD[*] = ADD (x: v53|QWORD[*], y: v4|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v83|QWORD[*] = ADD (x: v82|QWORD[*], y: v81|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v83|QWORD[*]], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v81|QWORD[*]] destination: B47 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" "B47" 
    successors "B34" "B47" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4603263788425269054
    begin_IR
      LIR
      nr   -1  <|@ instruction [v57|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v57|QWORD[*] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B33 -> B34 falseDestination: B33 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B37" 
    xhandlers
    flags 
    probability 4599265976358360866
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B9 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B4" "B36" "B9" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v63|DWORD[.] = MOV [v2|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v63|DWORD[.], y: v63|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7916022292900703 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors 
    xhandlers
    flags 
    probability 4605305338554989244
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B6" 
    xhandlers
    flags 
    probability 4598827065593782828
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 32], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v0|QWORD[.] + 20], y: v3|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v6|DWORD[.] = MOV [v2|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v6|DWORD[.], y: v6|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4598827065593782828
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = MOV [v2|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v7|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = MOV [v2|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v8|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD[.] = MOV [v2|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v9|DWORD[.], y: v9|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.43505536670411277 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B11" 
    xhandlers
    flags 
    probability 4594993103024205718
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v9|DWORD[.]] destination: B5 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B30" 
    xhandlers
    flags 
    probability 4598760188797898558
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B15 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" 
    xhandlers
    flags 
    probability 4598760188797898558
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B31" "B34" 
    successors "B36" "B46" 
    xhandlers
    flags 
    probability 4603263788425269054
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v58|QWORD[.] = UNCOMPRESSPOINTER (input: v17|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@58cdd6ff encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v59|QWORD[*] = MOVE v58|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v60|QWORD[*] = MOVE v30|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA [v59|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA [v60|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE v31|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: ObjectDisjointUninitArraycopy(Word,Word,Word)void@0x106813200:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction CMP [v30|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B37" 
    xhandlers
    flags 
    probability 4603263788425269054
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v61|DWORD[.] = COMPRESSPOINTER (input: v30|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@58cdd6ff encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 24], y: v61|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v62|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v62|QWORD[*] + v4|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B35" 
    xhandlers
    flags 
    probability 4598760188797898558
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B31 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B43" 
    xhandlers
    flags 
    probability 4596676341270648075
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v64|DWORD = MOV [v63|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v65|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v66|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v64|DWORD y: 16777215 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B39 -> B40 falseDestination: B39 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4595925509172636810
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v67|DWORD = LEA [v64|DWORD + 23] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v68|DWORD = AND v67|DWORD y: -8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v69|QWORD = MOVSXD v68|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v70|QWORD = ADD (x: v69|QWORD, y: v65|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v70|QWORD, y: v66|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B40 -> B41 falseDestination: B40 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B45" 
    xhandlers
    flags 
    probability 4595857934283815796
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v70|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v69|QWORD + v65|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v69|QWORD + v65|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v69|QWORD + v65|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v69|QWORD + v65|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v65|QWORD + 12], y: v64|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v65|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v65|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v71|QWORD[.] = MOVE v65|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v71|QWORD[.]] destination: B42 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B42" "B44" 
    successors 
    xhandlers
    flags 
    probability 4596676341270648075
    begin_IR
      LIR
      nr   -1  <|@ instruction [v74|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v75|QWORD[.] = UNCOMPRESSPOINTER (input: v63|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@58cdd6ff encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v76|QWORD[*] = MOVE v75|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v77|QWORD[*] = MOVE v74|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v78|QWORD = MOV v64|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA [v76|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA [v77|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE v78|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: byteDisjointArraycopy(Word,Word,Word)void@0x106812ae0:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v79|DWORD[.] = COMPRESSPOINTER (input: v74|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@58cdd6ff encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 28], y: v79|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v80|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v80|QWORD[*] + v4|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B37" 
    xhandlers
    flags 
    probability 4593636037899331971
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B4 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4589752989543157566
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v34|V256_DWORD[........] = L oc: SIMD<null,null,null,null,null,null,null,null> <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B19" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4596800873610524381
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v36|QWORD] destination: B48 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B48" 
    successors "B20" "B48" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4598760188797898558
    begin_IR
      LIR
      nr   -1  <|@ instruction [v35|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v32|QWORD[.] + v35|QWORD * 4], input: v34|V256_DWORD[........]) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v36|QWORD = LEA [v35|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v36|QWORD, y: v33|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B19 -> B20 falseDestination: B19 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4589752989543157566
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B28 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4589752989543157566
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v37|QWORD] destination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" 
    xhandlers
    flags 
    probability 4589752989543157566
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v36|QWORD] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4589752989543157566
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v41|QWORD] destination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B44" 
    xhandlers
    flags 
    probability 4581663878192514055
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" "B41" 
    successors "B45" 
    xhandlers
    flags 
    probability 4582204477303082166
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v72|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v72|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v64|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:190) [bci: 60]
locals: v0|QWORD[.] - v2|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
locals: v0|QWORD[.] - v2|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:60, 8] <|@ <|@
      nr   -1  <|@ instruction v73|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v73|QWORD[.]] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" 
    xhandlers
    flags 
    probability 4573163390320073526
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = UNCOMPRESSPOINTER (input: v21|DWORD, ~baseRegister: -) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@58cdd6ff encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v27|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v20|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:187) [bci: 39]
locals: v0|QWORD[.] - v2|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
locals: v0|QWORD[.] - v2|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:39, 8] <|@ <|@
      nr   -1  <|@ instruction v28|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v28|QWORD[.]] destination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B44" 
    xhandlers
    flags 
    probability 4566292408668031734
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B41 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -62515 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 54]
stack: v0|QWORD[.] v30|QWORD[.] 
locals: v0|QWORD[.] - v2|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
locals: v0|QWORD[.] - v2|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:54, 8] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-54803|0xffffffffffff29ed]] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B6" "B49" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v84|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v84|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:156) [bci: 29]
locals: v0|QWORD[.] - v3|DWORD 
org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:164) [bci: 3]
locals: v0|QWORD[.] - v2|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:29, 3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-48659|0xffffffffffff41ed]] destination: B6 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -69907 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:164) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: iload_3       
     3: invokespecial #6          // <init>:(org.graalvm.collections.Equivalence, boolean)void
     6: aload_0       
     7: aload_2       
     8: invokespecial #16         // initFrom:(java.lang.Object)boolean
    11: ifne          29
    14: aload_0       
    15: aload_2       
    16: invokeinterface#17, 1      // org.graalvm.collections.UnmodifiableEconomicMap.size:()int
    21: invokespecial #15         // init:(int)void
    24: aload_0       
    25: aload_2       
    26: invokevirtual #18         // org.graalvm.collections.EconomicMap.putAll:(org.graalvm.collections.UnmodifiableEconomicMap)void
    29: return        
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B51" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@2112be2b slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction stack:32|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction stack:40|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ st <@st|@reference-map: [rcx:0, rdx:0, rsi:0, stack:24, stack:32]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:164) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] r8|DWORD 
>@ <|@ instruction CMP [rcx|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl;, resolved>;compressed} state [bci:0] <|@ <|@
      nr   12  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   16  <|@ instruction r10|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr   18  <|@ instruction stack:48|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr   20  <|@ instruction rdi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Equivalence$2@812065084] <|@ <|@
      nr   22  <|@ instruction CMP (x: rdi|QWORD[.], y: rdx|QWORD[.]) size: QWORD <|@ <|@
      nr   24  <|@ instruction BRANCH trueDestinationProbability: 0.28618472457813726 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B8" "B49" 
    xhandlers
    flags 
    probability 4604604695962078954
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   72  <|@ instruction rdi|DWORD[.] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@58cdd6ff encoding: base: 0 shift: 3 <|@ <|@
      nr   74  <|@ instruction MOV (x: [rsi|QWORD[.] + 32], y: rdi|DWORD[.]) size: DWORD <|@ <|@
      nr   76  <|@ instruction rdi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   78  <|@ instruction MOVB (x: [rdi|QWORD[*] + r10|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   80  <|@ instruction MOVB (x: [rsi|QWORD[.] + 20], y: r8|DWORD) size: BYTE <|@ <|@
      nr   82  <|@ instruction rdi|DWORD[.] = MOV [rcx|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   84  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@58cdd6ff encoding: base: 0 shift: 3 <|@ <|@
      nr   86  <|@ instruction CMP (x: rdi|QWORD[.], y: rdx|QWORD[.]) size: QWORD <|@ <|@
      nr   88  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4604604695962078954
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   92  <|@ instruction rdi|DWORD = MOV [rcx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   94  <|@ instruction MOV (x: [rsi|QWORD[.] + 12], y: rdi|DWORD) size: DWORD <|@ <|@
      nr   96  <|@ instruction rdi|DWORD = MOV [rcx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   98  <|@ instruction MOV (x: [rsi|QWORD[.] + 16], y: rdi|DWORD) size: DWORD <|@ <|@
      nr  100  <|@ instruction rdi|DWORD[.] = MOV [rcx|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  102  <|@ instruction TEST (x: rdi|DWORD[.], y: rdi|DWORD[.]) size: DWORD <|@ <|@
      nr  104  <|@ instruction BRANCH trueDestinationProbability: 0.43505536670411277 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4600936216311056049
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  112  <|@ instruction r13|DWORD[.] = MOVE rdi|DWORD[.] moveKind: DWORD <|@ <|@
      nr  114  <|@ instruction JUMP ~[] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B5" "B10" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4603263788425269054
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  118  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  120  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr  122  <|@ instruction r14|DWORD = MOV [r13|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  124  <|@ instruction r11|DWORD = MOV [r13|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr  126  <|@ instruction r8|DWORD = SHL r14|DWORD y: 2 size: DWORD <|@ <|@
      nr  128  <|@ instruction r8|DWORD = LEA [r8|DWORD + 23] size: DWORD <|@ <|@
      nr  130  <|@ instruction r8|DWORD = AND r8|DWORD y: -8 size: DWORD <|@ <|@
      nr  132  <|@ instruction r8|QWORD = MOVSXD r8|DWORD size: QWORD <|@ <|@
      nr  134  <|@ instruction r9|QWORD = ADD (x: r8|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr  136  <|@ instruction CMP (x: r9|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  138  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B11 -> B12 falseDestination: B11 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" 
    xhandlers
    flags 
    probability 4603212902736469128
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  164  <|@ instruction MOV (x: [r15|QWORD + 96], y: r9|QWORD) size: QWORD <|@ <|@
      nr  166  <|@ instruction AMD64PREFETCH ~[r8|QWORD + rdi|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr  168  <|@ instruction AMD64PREFETCH ~[r8|QWORD + rdi|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  170  <|@ instruction AMD64PREFETCH ~[r8|QWORD + rdi|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  172  <|@ instruction AMD64PREFETCH ~[r8|QWORD + rdi|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  174  <|@ instruction MOV (x: [rdi|QWORD + 12], y: r14|DWORD) size: DWORD <|@ <|@
      nr  176  <|@ instruction MOV [rdi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  178  <|@ instruction MOV (x: [rdi|QWORD + 8], y: r11|DWORD) size: DWORD <|@ <|@
      nr  180  <|@ instruction rdi|QWORD[.] = MOVE rdi|QWORD moveKind: QWORD <|@ <|@
      nr  182  <|@ instruction r11|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  184  <|@ instruction JUMP ~[] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4603263788425269054
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  188  <|@ instruction rdx|QWORD = MOV r14|DWORD size: DWORD <|@ <|@
      nr  190  <|@ instruction TEST (x: r14|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr  192  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4598760188797898558
    begin_IR
      LIR
      nr  198  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  200  <|@ instruction rdi|QWORD[.] = LEA [r11|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  202  <|@ instruction r8|QWORD = LEA [rdx|QWORD - 8] size: QWORD <|@ <|@
      nr  204  <|@ instruction TEST (x: r8|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr  206  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B16 -> B17 falseDestination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B21" 
    xhandlers
    flags 
    probability 4596800873610524381
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  210  <|@ instruction r9|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  212  <|@ instruction JUMP ~[] destination: B17 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B17" "B20" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4598760188797898558
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  238  <|@ instruction r8|QWORD = LEA [rdx|QWORD - 4] size: QWORD <|@ <|@
      nr  240  <|@ instruction CMP (x: r9|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr  242  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B21 -> B22 falseDestination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4596800873610524381
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  250  <|@ instruction xmm0|V128_DWORD[....] = L oc: SIMD<null,null,null,null> <|@ <|@
      nr  252  <|@ instruction J (address: [rdi|QWORD[.] + r9|QWORD * 4], input: xmm0|V128_DWORD[....]) nZ: XMM oh: VMOVDQU <|@ <|@
      nr  254  <|@ instruction r8|QWORD = LEA [r9|QWORD + 4] size: QWORD <|@ <|@
      nr  256  <|@ instruction r9|QWORD = MOVE r8|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  258  <|@ instruction JUMP ~[] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B22" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4598760188797898558
    begin_IR
      LIR
      nr  260  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  262  <|@ instruction r8|QWORD = LEA [rdx|QWORD - 2] size: QWORD <|@ <|@
      nr  264  <|@ instruction CMP (x: r9|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr  266  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B24 -> B25 falseDestination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4596800873610524381
    begin_IR
      LIR
      nr  272  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  274  <|@ instruction xmm0|V64_DWORD[..] = L oc: SIMD<null,null> <|@ <|@
      nr  276  <|@ instruction J (address: [rdi|QWORD[.] + r9|QWORD * 4], input: xmm0|V64_DWORD[..]) nZ: XMM oh: VMOVQ <|@ <|@
      nr  278  <|@ instruction r8|QWORD = LEA [r9|QWORD + 2] size: QWORD <|@ <|@
      nr  280  <|@ instruction r9|QWORD = MOVE r8|QWORD moveKind: QWORD <|@ <|@
      nr  282  <|@ instruction JUMP ~[] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4598760188797898558
    begin_IR
      LIR
      nr  284  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  286  <|@ instruction r8|QWORD = DEC rdx|QWORD size: QWORD <|@ <|@
      nr  288  <|@ instruction CMP (x: r9|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr  290  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B27 -> B28 falseDestination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4596800873610524381
    begin_IR
      LIR
      nr  296  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  298  <|@ instruction MOV (x: [rdi|QWORD[.] + r9|QWORD * 4], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr  300  <|@ instruction JUMP ~[] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B15" "B29" "B28" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4603263788425269054
    begin_IR
      LIR
      nr  302  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  304  <|@ instruction TEST (x: r14|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr  306  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" 
    xhandlers
    flags 
    probability 4598760188797898558
    begin_IR
      LIR
      nr  312  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  314  <|@ instruction r14|DWORD = DEC r14|DWORD size: DWORD <|@ <|@
      nr  316  <|@ instruction r14|DWORD = SHL r14|DWORD y: 2 size: DWORD <|@ <|@
      nr  318  <|@ instruction rdi|QWORD = MOVSXD r14|DWORD size: QWORD <|@ <|@
      nr  320  <|@ instruction r8|QWORD[.] = LEA [r11|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  322  <|@ instruction r8|QWORD[.] = ADD (x: r8|QWORD[.], y: rdi|QWORD) size: QWORD <|@ <|@
      nr  324  <|@ instruction r8|QWORD[*] = SHR r8|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  326  <|@ instruction rdi|QWORD[.] = LEA [r11|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  328  <|@ instruction rdi|QWORD[*] = SHR rdi|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  330  <|@ instruction r8|QWORD[*] = SUB (x: r8|QWORD[*], ~y: rdi|QWORD[*]) size: QWORD <|@ <|@
      nr  332  <|@ instruction r8|QWORD[*] = INC r8|QWORD[*] size: QWORD <|@ <|@
      nr  334  <|@ instruction JUMP ~[] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B33" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4598760188797898558
    begin_IR
      LIR
      nr  514  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  516  <|@ instruction r8|QWORD[*] = DEC r8|QWORD[*] size: QWORD <|@ <|@
      nr  518  <|@ instruction r9|QWORD[*] = ADD (x: rdi|QWORD[*], y: r10|QWORD) size: QWORD <|@ <|@
      nr  520  <|@ instruction r9|QWORD[*] = ADD (x: r9|QWORD[*], y: r8|QWORD[*]) size: QWORD <|@ <|@
      nr  522  <|@ instruction MOVB (x: [r9|QWORD[*]], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  524  <|@ instruction JUMP ~[] destination: B47 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" "B47" 
    successors "B34" "B47" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4603263788425269054
    begin_IR
      LIR
      nr  336  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  338  <|@ instruction CMP r8|QWORD[*] y: 1 size: QWORD <|@ <|@
      nr  340  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B33 -> B34 falseDestination: B33 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B37" 
    xhandlers
    flags 
    probability 4599265976358360866
    begin_IR
      LIR
      nr  106  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  108  <|@ instruction JUMP ~[] destination: B9 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B4" "B36" "B9" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  388  <|@ instruction r13|DWORD[.] = MOV [rcx|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  390  <|@ instruction TEST (x: r13|DWORD[.], y: r13|DWORD[.]) size: DWORD <|@ <|@
      nr  392  <|@ instruction BRANCH trueDestinationProbability: 0.7916022292900703 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors 
    xhandlers
    flags 
    probability 4605305338554989244
    begin_IR
      LIR
      nr  394  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  396  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B6" 
    xhandlers
    flags 
    probability 4598827065593782828
    begin_IR
      LIR
      nr   26  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   28  <|@ instruction MOV (x: [rsi|QWORD[.] + 32], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   30  <|@ instruction MOVB (x: [rsi|QWORD[.] + 20], y: r8|DWORD) size: BYTE <|@ <|@
      nr   32  <|@ instruction rdi|DWORD[.] = MOV [rcx|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   34  <|@ instruction TEST (x: rdi|DWORD[.], y: rdi|DWORD[.]) size: DWORD <|@ <|@
      nr   36  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4598827065593782828
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   40  <|@ instruction rdi|DWORD = MOV [rcx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   42  <|@ instruction MOV (x: [rsi|QWORD[.] + 12], y: rdi|DWORD) size: DWORD <|@ <|@
      nr   44  <|@ instruction rdi|DWORD = MOV [rcx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   46  <|@ instruction MOV (x: [rsi|QWORD[.] + 16], y: rdi|DWORD) size: DWORD <|@ <|@
      nr   48  <|@ instruction rdi|DWORD[.] = MOV [rcx|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   50  <|@ instruction TEST (x: rdi|DWORD[.], y: rdi|DWORD[.]) size: DWORD <|@ <|@
      nr   52  <|@ instruction BRANCH trueDestinationProbability: 0.43505536670411277 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B11" 
    xhandlers
    flags 
    probability 4594993103024205718
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   60  <|@ instruction r13|DWORD[.] = MOVE rdi|DWORD[.] moveKind: DWORD <|@ <|@
      nr   62  <|@ instruction JUMP ~[] destination: B5 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B30" 
    xhandlers
    flags 
    probability 4598760188797898558
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  196  <|@ instruction JUMP ~[] destination: B15 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" 
    xhandlers
    flags 
    probability 4598760188797898558
    begin_IR
      LIR
      nr  342  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  344  <|@ instruction JUMP ~[] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B31" "B34" 
    successors "B36" "B46" 
    xhandlers
    flags 
    probability 4603263788425269054
    begin_IR
      LIR
      nr  346  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  348  <|@ instruction r13|QWORD[.] = UNCOMPRESSPOINTER (input: r13|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@58cdd6ff encoding: base: 0 shift: 3 <|@ <|@
      nr  350  <|@ instruction r13|QWORD[*] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  352  <|@ instruction r8|QWORD[*] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  354  <|@ instruction rdi|QWORD = LEA [r13|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  356  <|@ instruction rsi|QWORD = LEA [r8|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  358  <|@ instruction stack:56|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  360  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: ObjectDisjointUninitArraycopy(Word,Word,Word)void@0x106813200:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  362  <|@ instruction r11|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  364  <|@ instruction CMP [r11|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
      nr  366  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B37" 
    xhandlers
    flags 
    probability 4603263788425269054
    begin_IR
      LIR
      nr  368  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  370  <|@ instruction r10|QWORD = MOVE stack:48|QWORD moveKind: QWORD <|@ <|@
      nr  372  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  374  <|@ instruction r11|DWORD[.] = COMPRESSPOINTER (input: r11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@58cdd6ff encoding: base: 0 shift: 3 <|@ <|@
      nr  376  <|@ instruction MOV (x: [rsi|QWORD[.] + 24], y: r11|DWORD[.]) size: DWORD <|@ <|@
      nr  378  <|@ instruction rdx|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  380  <|@ instruction MOVB (x: [rdx|QWORD[*] + r10|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  382  <|@ instruction rcx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  384  <|@ instruction JUMP ~[] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B35" 
    xhandlers
    flags 
    probability 4598760188797898558
    begin_IR
      LIR
      nr  308  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  310  <|@ instruction JUMP ~[] destination: B31 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B43" 
    xhandlers
    flags 
    probability 4596676341270648075
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  400  <|@ instruction r14|DWORD = MOV [r13|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  402  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  404  <|@ instruction r11|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr  406  <|@ instruction CMP r14|DWORD y: 16777215 size: DWORD <|@ <|@
      nr  408  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B39 -> B40 falseDestination: B39 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4595925509172636810
    begin_IR
      LIR
      nr  410  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  412  <|@ instruction r8|DWORD = LEA [r14|DWORD + 23] size: DWORD <|@ <|@
      nr  414  <|@ instruction r8|DWORD = AND r8|DWORD y: -8 size: DWORD <|@ <|@
      nr  416  <|@ instruction r8|QWORD = MOVSXD r8|DWORD size: QWORD <|@ <|@
      nr  418  <|@ instruction r9|QWORD = ADD (x: r8|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  420  <|@ instruction CMP (x: r9|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  422  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B40 -> B41 falseDestination: B40 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B45" 
    xhandlers
    flags 
    probability 4595857934283815796
    begin_IR
      LIR
      nr  428  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  430  <|@ instruction MOV (x: [r15|QWORD + 96], y: r9|QWORD) size: QWORD <|@ <|@
      nr  432  <|@ instruction AMD64PREFETCH ~[r8|QWORD + rdx|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr  434  <|@ instruction AMD64PREFETCH ~[r8|QWORD + rdx|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  436  <|@ instruction AMD64PREFETCH ~[r8|QWORD + rdx|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  438  <|@ instruction AMD64PREFETCH ~[r8|QWORD + rdx|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  440  <|@ instruction MOV (x: [rdx|QWORD + 12], y: r14|DWORD) size: DWORD <|@ <|@
      nr  442  <|@ instruction MOV [rdx|QWORD] y: 1 size: QWORD <|@ <|@
      nr  444  <|@ instruction MOV [rdx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  446  <|@ instruction rdx|QWORD[.] = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  448  <|@ instruction rax|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  450  <|@ instruction JUMP ~[] destination: B42 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B42" "B44" 
    successors 
    xhandlers
    flags 
    probability 4596676341270648075
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  472  <|@ instruction r13|QWORD[.] = UNCOMPRESSPOINTER (input: r13|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@58cdd6ff encoding: base: 0 shift: 3 <|@ <|@
      nr  474  <|@ instruction r13|QWORD[*] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  476  <|@ instruction rdx|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  478  <|@ instruction r11|QWORD = MOV r14|DWORD size: DWORD <|@ <|@
      nr  480  <|@ instruction rdi|QWORD = LEA [r13|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  482  <|@ instruction rsi|QWORD = LEA [rdx|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  484  <|@ instruction rdx|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  486  <|@ instruction stack:56|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  488  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: byteDisjointArraycopy(Word,Word,Word)void@0x106812ae0:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  490  <|@ instruction rax|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  492  <|@ instruction rax|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@58cdd6ff encoding: base: 0 shift: 3 <|@ <|@
      nr  494  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  496  <|@ instruction MOV (x: [rsi|QWORD[.] + 28], y: rax|DWORD[.]) size: DWORD <|@ <|@
      nr  498  <|@ instruction rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  500  <|@ instruction r10|QWORD = MOVE stack:48|QWORD moveKind: QWORD <|@ <|@
      nr  502  <|@ instruction MOVB (x: [rsi|QWORD[*] + r10|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  504  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B37" 
    xhandlers
    flags 
    probability 4593636037899331971
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   56  <|@ instruction JUMP ~[] destination: B4 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4589752989543157566
    begin_IR
      LIR
      nr  214  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  216  <|@ instruction xmm0|V256_DWORD[........] = L oc: SIMD<null,null,null,null,null,null,null,null> <|@ <|@
      nr  218  <|@ instruction r9|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  220  <|@ instruction JUMP ~[] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B19" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4596800873610524381
    begin_IR
      LIR
      nr  526  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  528  <|@ instruction JUMP ~[] destination: B48 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B48" 
    successors "B20" "B48" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4598760188797898558
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  224  <|@ instruction J (address: [rdi|QWORD[.] + r9|QWORD * 4], input: xmm0|V256_DWORD[........]) nZ: YMM oh: VMOVDQU <|@ <|@
      nr  226  <|@ instruction r9|QWORD = LEA [r9|QWORD + 8] size: QWORD <|@ <|@
      nr  228  <|@ instruction CMP (x: r9|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr  230  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B19 -> B20 falseDestination: B19 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4589752989543157566
    begin_IR
      LIR
      nr  292  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  294  <|@ instruction JUMP ~[] destination: B28 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4589752989543157566
    begin_IR
      LIR
      nr  244  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  246  <|@ instruction JUMP ~[] destination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" 
    xhandlers
    flags 
    probability 4589752989543157566
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  234  <|@ instruction JUMP ~[] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4589752989543157566
    begin_IR
      LIR
      nr  268  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  270  <|@ instruction JUMP ~[] destination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B44" 
    xhandlers
    flags 
    probability 4581663878192514055
    begin_IR
      LIR
      nr  452  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  454  <|@ instruction JUMP ~[] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" "B41" 
    successors "B45" 
    xhandlers
    flags 
    probability 4582204477303082166
    begin_IR
      LIR
      nr  456  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  458  <|@ instruction rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  460  <|@ instruction rsi|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  462  <|@ instruction rdx|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  464  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  466  <|@ st <@st|@reference-map: [r13:0, stack:24, stack:32]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:190) [bci: 60]
locals: stack:32|QWORD[.] - stack:40|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
locals: stack:32|QWORD[.] - stack:40|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:60, 8] <|@ <|@
      nr  468  <|@ instruction JUMP ~[] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" 
    xhandlers
    flags 
    probability 4573163390320073526
    begin_IR
      LIR
      nr  140  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  142  <|@ instruction r11|QWORD = UNCOMPRESSPOINTER (input: r11|DWORD, ~baseRegister: -) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@58cdd6ff encoding: base: 0 shift: 3 <|@ <|@
      nr  144  <|@ instruction rsi|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  146  <|@ instruction rdx|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  148  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  150  <|@ st <@st|@reference-map: [r13:0, stack:24, stack:32]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:187) [bci: 39]
locals: stack:32|QWORD[.] - stack:40|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
locals: stack:32|QWORD[.] - stack:40|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:39, 8] <|@ <|@
      nr  152  <|@ instruction r11|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  154  <|@ instruction r10|QWORD = MOVE stack:48|QWORD moveKind: QWORD <|@ <|@
      nr  156  <|@ instruction rcx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  158  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  160  <|@ instruction JUMP ~[] destination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B44" 
    xhandlers
    flags 
    probability 4566292408668031734
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  426  <|@ instruction JUMP ~[] destination: B41 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  506  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  508  <|@ instruction MOV [r15|QWORD + 668] y: -62515 size: DWORD <|@ <|@
      nr  510  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  512  <|@ st <@st|@reference-map: [r11:0, stack:24, stack:32]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 54]
stack: stack:32|QWORD[.] r11|QWORD[.] 
locals: stack:32|QWORD[.] - stack:40|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
locals: stack:32|QWORD[.] - stack:40|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:54, 8] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  530  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  532  <|@ instruction r10|DWORD = MOVE input: int[-54803|0xffffffffffff29ed] <|@ <|@
      nr  534  <|@ instruction JUMP ~[] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B6" "B49" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  536  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  538  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  540  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  542  <|@ st <@st|@reference-map: [rcx:0, rsi:0]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:156) [bci: 29]
locals: rsi|QWORD[.] - r8|DWORD 
org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:164) [bci: 3]
locals: rsi|QWORD[.] - rcx|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:29, 3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   66  <|@ instruction r10|DWORD = MOVE input: int[-48659|0xffffffffffff41ed] <|@ <|@
      nr   68  <|@ instruction JUMP ~[] destination: B6 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  544  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  546  <|@ instruction MOV [r15|QWORD + 668] y: -69907 size: DWORD <|@ <|@
      nr  548  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  550  <|@ st <@st|@reference-map: [rdx:0, stack:24, stack:32]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:164) [bci: 0]
locals: stack:32|QWORD[.] rdx|QWORD[.] stack:40|QWORD[.] r8|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: iload_3       
     3: invokespecial #6          // <init>:(org.graalvm.collections.Equivalence, boolean)void
     6: aload_0       
     7: aload_2       
     8: invokespecial #16         // initFrom:(java.lang.Object)boolean
    11: ifne          29
    14: aload_0       
    15: aload_2       
    16: invokeinterface#17, 1      // org.graalvm.collections.UnmodifiableEconomicMap.size:()int
    21: invokespecial #15         // init:(int)void
    24: aload_0       
    25: aload_2       
    26: invokevirtual #18         // org.graalvm.collections.EconomicMap.putAll:(org.graalvm.collections.UnmodifiableEconomicMap)void
    29: return        
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B51" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@2112be2b slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction stack:32|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction stack:40|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ st <@st|@reference-map: [rcx:0, rdx:0, rsi:0, stack:24, stack:32]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:164) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] r8|DWORD 
>@ <|@ instruction CMP [rcx|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl;, resolved>;compressed} state [bci:0] <|@ <|@
      nr   12  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   16  <|@ instruction r10|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr   18  <|@ instruction stack:48|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr   20  <|@ instruction rdi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Equivalence$2@812065084] <|@ <|@
      nr   22  <|@ instruction CMP (x: rdi|QWORD[.], y: rdx|QWORD[.]) size: QWORD <|@ <|@
      nr   24  <|@ instruction BRANCH trueDestinationProbability: 0.28618472457813726 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B8" "B49" 
    xhandlers
    flags 
    probability 4604604695962078954
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   72  <|@ instruction rdi|DWORD[.] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@58cdd6ff encoding: base: 0 shift: 3 <|@ <|@
      nr   74  <|@ instruction MOV (x: [rsi|QWORD[.] + 32], y: rdi|DWORD[.]) size: DWORD <|@ <|@
      nr   76  <|@ instruction rdi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   78  <|@ instruction MOVB (x: [rdi|QWORD[*] + r10|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   80  <|@ instruction MOVB (x: [rsi|QWORD[.] + 20], y: r8|DWORD) size: BYTE <|@ <|@
      nr   82  <|@ instruction rdi|DWORD[.] = MOV [rcx|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   84  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@58cdd6ff encoding: base: 0 shift: 3 <|@ <|@
      nr   86  <|@ instruction CMP (x: rdi|QWORD[.], y: rdx|QWORD[.]) size: QWORD <|@ <|@
      nr   88  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B37" "B11" 
    xhandlers
    flags 
    probability 4604604695962078954
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   92  <|@ instruction rdi|DWORD = MOV [rcx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   94  <|@ instruction MOV (x: [rsi|QWORD[.] + 12], y: rdi|DWORD) size: DWORD <|@ <|@
      nr   96  <|@ instruction rdi|DWORD = MOV [rcx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   98  <|@ instruction MOV (x: [rsi|QWORD[.] + 16], y: rdi|DWORD) size: DWORD <|@ <|@
      nr  100  <|@ instruction rdi|DWORD[.] = MOV [rcx|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  102  <|@ instruction TEST (x: rdi|DWORD[.], y: rdi|DWORD[.]) size: DWORD <|@ <|@
      nr  104  <|@ instruction BRANCH trueDestinationProbability: 0.43505536670411277 condition: = trueDestination: B8 -> B37 falseDestination: B8 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B3" "B8" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4603263788425269054
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   60  <|@ instruction r13|DWORD[.] = MOVE rdi|DWORD[.] moveKind: DWORD <|@ <|@
      nr  118  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  120  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr  122  <|@ instruction r14|DWORD = MOV [r13|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  124  <|@ instruction r11|DWORD = MOV [r13|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr  126  <|@ instruction r8|DWORD = SHL r14|DWORD y: 2 size: DWORD <|@ <|@
      nr  128  <|@ instruction r8|DWORD = LEA [r8|DWORD + 23] size: DWORD <|@ <|@
      nr  130  <|@ instruction r8|DWORD = AND r8|DWORD y: -8 size: DWORD <|@ <|@
      nr  132  <|@ instruction r8|QWORD = MOVSXD r8|DWORD size: QWORD <|@ <|@
      nr  134  <|@ instruction r9|QWORD = ADD (x: r8|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr  136  <|@ instruction CMP (x: r9|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  138  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B11 -> B12 falseDestination: B11 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" 
    xhandlers
    flags 
    probability 4603212902736469128
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  164  <|@ instruction MOV (x: [r15|QWORD + 96], y: r9|QWORD) size: QWORD <|@ <|@
      nr  166  <|@ instruction AMD64PREFETCH ~[r8|QWORD + rdi|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr  168  <|@ instruction AMD64PREFETCH ~[r8|QWORD + rdi|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  170  <|@ instruction AMD64PREFETCH ~[r8|QWORD + rdi|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  172  <|@ instruction AMD64PREFETCH ~[r8|QWORD + rdi|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  174  <|@ instruction MOV (x: [rdi|QWORD + 12], y: r14|DWORD) size: DWORD <|@ <|@
      nr  176  <|@ instruction MOV [rdi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  178  <|@ instruction MOV (x: [rdi|QWORD + 8], y: r11|DWORD) size: DWORD <|@ <|@
      nr  180  <|@ instruction rdi|QWORD[.] = MOVE rdi|QWORD moveKind: QWORD <|@ <|@
      nr  182  <|@ instruction r11|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  184  <|@ instruction JUMP ~[] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B12" 
    successors "B30" "B16" 
    xhandlers
    flags 
    probability 4603263788425269054
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  188  <|@ instruction rdx|QWORD = MOV r14|DWORD size: DWORD <|@ <|@
      nr  190  <|@ instruction TEST (x: r14|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr  192  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B14 -> B30 falseDestination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4598760188797898558
    begin_IR
      LIR
      nr  198  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  200  <|@ instruction rdi|QWORD[.] = LEA [r11|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  202  <|@ instruction r8|QWORD = LEA [rdx|QWORD - 8] size: QWORD <|@ <|@
      nr  204  <|@ instruction TEST (x: r8|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr  206  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B16 -> B17 falseDestination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B21" 
    xhandlers
    flags 
    probability 4596800873610524381
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  210  <|@ instruction r9|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  212  <|@ instruction JUMP ~[] destination: B17 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B17" "B19" 
    successors "B24" "B23" 
    xhandlers
    flags 
    probability 4598760188797898558
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  238  <|@ instruction r8|QWORD = LEA [rdx|QWORD - 4] size: QWORD <|@ <|@
      nr  240  <|@ instruction CMP (x: r9|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr  242  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B21 -> B24 falseDestination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4596800873610524381
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  250  <|@ instruction xmm0|V128_DWORD[....] = L oc: SIMD<null,null,null,null> <|@ <|@
      nr  252  <|@ instruction J (address: [rdi|QWORD[.] + r9|QWORD * 4], input: xmm0|V128_DWORD[....]) nZ: XMM oh: VMOVDQU <|@ <|@
      nr  254  <|@ instruction r8|QWORD = LEA [r9|QWORD + 4] size: QWORD <|@ <|@
      nr  256  <|@ instruction r9|QWORD = MOVE r8|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  258  <|@ instruction JUMP ~[] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B21" 
    successors "B27" "B26" 
    xhandlers
    flags 
    probability 4598760188797898558
    begin_IR
      LIR
      nr  260  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  262  <|@ instruction r8|QWORD = LEA [rdx|QWORD - 2] size: QWORD <|@ <|@
      nr  264  <|@ instruction CMP (x: r9|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr  266  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B24 -> B27 falseDestination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4596800873610524381
    begin_IR
      LIR
      nr  272  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  274  <|@ instruction xmm0|V64_DWORD[..] = L oc: SIMD<null,null> <|@ <|@
      nr  276  <|@ instruction J (address: [rdi|QWORD[.] + r9|QWORD * 4], input: xmm0|V64_DWORD[..]) nZ: XMM oh: VMOVQ <|@ <|@
      nr  278  <|@ instruction r8|QWORD = LEA [r9|QWORD + 2] size: QWORD <|@ <|@
      nr  280  <|@ instruction r9|QWORD = MOVE r8|QWORD moveKind: QWORD <|@ <|@
      nr  282  <|@ instruction JUMP ~[] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" "B24" 
    successors "B30" "B29" 
    xhandlers
    flags 
    probability 4598760188797898558
    begin_IR
      LIR
      nr  284  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  286  <|@ instruction r8|QWORD = DEC rdx|QWORD size: QWORD <|@ <|@
      nr  288  <|@ instruction CMP (x: r9|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr  290  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B27 -> B30 falseDestination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4596800873610524381
    begin_IR
      LIR
      nr  296  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  298  <|@ instruction MOV (x: [rdi|QWORD[.] + r9|QWORD * 4], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr  300  <|@ instruction JUMP ~[] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B14" "B29" "B27" 
    successors "B35" "B32" 
    xhandlers
    flags 
    probability 4603263788425269054
    begin_IR
      LIR
      nr  302  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  304  <|@ instruction TEST (x: r14|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr  306  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B30 -> B35 falseDestination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" 
    xhandlers
    flags 
    probability 4598760188797898558
    begin_IR
      LIR
      nr  312  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  314  <|@ instruction r14|DWORD = DEC r14|DWORD size: DWORD <|@ <|@
      nr  316  <|@ instruction r14|DWORD = SHL r14|DWORD y: 2 size: DWORD <|@ <|@
      nr  318  <|@ instruction rdi|QWORD = MOVSXD r14|DWORD size: QWORD <|@ <|@
      nr  320  <|@ instruction r8|QWORD[.] = LEA [r11|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  322  <|@ instruction r8|QWORD[.] = ADD (x: r8|QWORD[.], y: rdi|QWORD) size: QWORD <|@ <|@
      nr  324  <|@ instruction r8|QWORD[*] = SHR r8|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  326  <|@ instruction rdi|QWORD[.] = LEA [r11|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  328  <|@ instruction rdi|QWORD[*] = SHR rdi|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  330  <|@ instruction r8|QWORD[*] = SUB (x: r8|QWORD[*], ~y: rdi|QWORD[*]) size: QWORD <|@ <|@
      nr  332  <|@ instruction r8|QWORD[*] = INC r8|QWORD[*] size: QWORD <|@ <|@
      nr  334  <|@ instruction JUMP ~[] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B33" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4598760188797898558
    begin_IR
      LIR
      nr  514  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  516  <|@ instruction r8|QWORD[*] = DEC r8|QWORD[*] size: QWORD <|@ <|@
      nr  518  <|@ instruction r9|QWORD[*] = ADD (x: rdi|QWORD[*], y: r10|QWORD) size: QWORD <|@ <|@
      nr  520  <|@ instruction r9|QWORD[*] = ADD (x: r9|QWORD[*], y: r8|QWORD[*]) size: QWORD <|@ <|@
      nr  522  <|@ instruction MOVB (x: [r9|QWORD[*]], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  524  <|@ instruction JUMP ~[] destination: B47 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" "B47" 
    successors "B35" "B47" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4603263788425269054
    begin_IR
      LIR
      nr  336  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  338  <|@ instruction CMP r8|QWORD[*] y: 1 size: QWORD <|@ <|@
      nr  340  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B33 -> B35 falseDestination: B33 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B3" "B36" "B8" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  388  <|@ instruction r13|DWORD[.] = MOV [rcx|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  390  <|@ instruction TEST (x: r13|DWORD[.], y: r13|DWORD[.]) size: DWORD <|@ <|@
      nr  392  <|@ instruction BRANCH trueDestinationProbability: 0.7916022292900703 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors 
    xhandlers
    flags 
    probability 4605305338554989244
    begin_IR
      LIR
      nr  394  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  396  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B6" 
    xhandlers
    flags 
    probability 4598827065593782828
    begin_IR
      LIR
      nr   26  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   28  <|@ instruction MOV (x: [rsi|QWORD[.] + 32], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   30  <|@ instruction MOVB (x: [rsi|QWORD[.] + 20], y: r8|DWORD) size: BYTE <|@ <|@
      nr   32  <|@ instruction rdi|DWORD[.] = MOV [rcx|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   34  <|@ instruction TEST (x: rdi|DWORD[.], y: rdi|DWORD[.]) size: DWORD <|@ <|@
      nr   36  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B37" "B11" 
    xhandlers
    flags 
    probability 4598827065593782828
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   40  <|@ instruction rdi|DWORD = MOV [rcx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   42  <|@ instruction MOV (x: [rsi|QWORD[.] + 12], y: rdi|DWORD) size: DWORD <|@ <|@
      nr   44  <|@ instruction rdi|DWORD = MOV [rcx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   46  <|@ instruction MOV (x: [rsi|QWORD[.] + 16], y: rdi|DWORD) size: DWORD <|@ <|@
      nr   48  <|@ instruction rdi|DWORD[.] = MOV [rcx|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   50  <|@ instruction TEST (x: rdi|DWORD[.], y: rdi|DWORD[.]) size: DWORD <|@ <|@
      nr   52  <|@ instruction BRANCH trueDestinationProbability: 0.43505536670411277 condition: = trueDestination: B3 -> B37 falseDestination: B3 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B30" "B33" 
    successors "B36" "B46" 
    xhandlers
    flags 
    probability 4603263788425269054
    begin_IR
      LIR
      nr  346  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  348  <|@ instruction r13|QWORD[.] = UNCOMPRESSPOINTER (input: r13|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@58cdd6ff encoding: base: 0 shift: 3 <|@ <|@
      nr  350  <|@ instruction r13|QWORD[*] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  352  <|@ instruction r8|QWORD[*] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  354  <|@ instruction rdi|QWORD = LEA [r13|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  356  <|@ instruction rsi|QWORD = LEA [r8|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  358  <|@ instruction stack:56|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  360  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: ObjectDisjointUninitArraycopy(Word,Word,Word)void@0x106813200:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  362  <|@ instruction r11|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  364  <|@ instruction CMP [r11|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
      nr  366  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B37" 
    xhandlers
    flags 
    probability 4603263788425269054
    begin_IR
      LIR
      nr  368  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  370  <|@ instruction r10|QWORD = MOVE stack:48|QWORD moveKind: QWORD <|@ <|@
      nr  372  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  374  <|@ instruction r11|DWORD[.] = COMPRESSPOINTER (input: r11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@58cdd6ff encoding: base: 0 shift: 3 <|@ <|@
      nr  376  <|@ instruction MOV (x: [rsi|QWORD[.] + 24], y: r11|DWORD[.]) size: DWORD <|@ <|@
      nr  378  <|@ instruction rdx|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  380  <|@ instruction MOVB (x: [rdx|QWORD[*] + r10|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  382  <|@ instruction rcx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  384  <|@ instruction JUMP ~[] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B44" 
    xhandlers
    flags 
    probability 4596676341270648075
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  400  <|@ instruction r14|DWORD = MOV [r13|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  402  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  404  <|@ instruction r11|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr  406  <|@ instruction CMP r14|DWORD y: 16777215 size: DWORD <|@ <|@
      nr  408  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B39 -> B40 falseDestination: B39 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B44" "B42" 
    xhandlers
    flags 
    probability 4595925509172636810
    begin_IR
      LIR
      nr  410  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  412  <|@ instruction r8|DWORD = LEA [r14|DWORD + 23] size: DWORD <|@ <|@
      nr  414  <|@ instruction r8|DWORD = AND r8|DWORD y: -8 size: DWORD <|@ <|@
      nr  416  <|@ instruction r8|QWORD = MOVSXD r8|DWORD size: QWORD <|@ <|@
      nr  418  <|@ instruction r9|QWORD = ADD (x: r8|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  420  <|@ instruction CMP (x: r9|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  422  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B40 -> B44 falseDestination: B40 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B45" 
    xhandlers
    flags 
    probability 4595857934283815796
    begin_IR
      LIR
      nr  428  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  430  <|@ instruction MOV (x: [r15|QWORD + 96], y: r9|QWORD) size: QWORD <|@ <|@
      nr  432  <|@ instruction AMD64PREFETCH ~[r8|QWORD + rdx|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr  434  <|@ instruction AMD64PREFETCH ~[r8|QWORD + rdx|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  436  <|@ instruction AMD64PREFETCH ~[r8|QWORD + rdx|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  438  <|@ instruction AMD64PREFETCH ~[r8|QWORD + rdx|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  440  <|@ instruction MOV (x: [rdx|QWORD + 12], y: r14|DWORD) size: DWORD <|@ <|@
      nr  442  <|@ instruction MOV [rdx|QWORD] y: 1 size: QWORD <|@ <|@
      nr  444  <|@ instruction MOV [rdx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  446  <|@ instruction rdx|QWORD[.] = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  448  <|@ instruction rax|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  450  <|@ instruction JUMP ~[] destination: B42 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B42" "B44" 
    successors 
    xhandlers
    flags 
    probability 4596676341270648075
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  472  <|@ instruction r13|QWORD[.] = UNCOMPRESSPOINTER (input: r13|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@58cdd6ff encoding: base: 0 shift: 3 <|@ <|@
      nr  474  <|@ instruction r13|QWORD[*] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  476  <|@ instruction rdx|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  478  <|@ instruction r11|QWORD = MOV r14|DWORD size: DWORD <|@ <|@
      nr  480  <|@ instruction rdi|QWORD = LEA [r13|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  482  <|@ instruction rsi|QWORD = LEA [rdx|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  484  <|@ instruction rdx|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  486  <|@ instruction stack:56|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  488  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: byteDisjointArraycopy(Word,Word,Word)void@0x106812ae0:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  490  <|@ instruction rax|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  492  <|@ instruction rax|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@58cdd6ff encoding: base: 0 shift: 3 <|@ <|@
      nr  494  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  496  <|@ instruction MOV (x: [rsi|QWORD[.] + 28], y: rax|DWORD[.]) size: DWORD <|@ <|@
      nr  498  <|@ instruction rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  500  <|@ instruction r10|QWORD = MOVE stack:48|QWORD moveKind: QWORD <|@ <|@
      nr  502  <|@ instruction MOVB (x: [rsi|QWORD[*] + r10|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  504  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4589752989543157566
    begin_IR
      LIR
      nr  214  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  216  <|@ instruction xmm0|V256_DWORD[........] = L oc: SIMD<null,null,null,null,null,null,null,null> <|@ <|@
      nr  218  <|@ instruction r9|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  220  <|@ instruction JUMP ~[] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B19" 
    successors "B21" "B19" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4598760188797898558
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  224  <|@ instruction J (address: [rdi|QWORD[.] + r9|QWORD * 4], input: xmm0|V256_DWORD[........]) nZ: YMM oh: VMOVDQU <|@ <|@
      nr  226  <|@ instruction r9|QWORD = LEA [r9|QWORD + 8] size: QWORD <|@ <|@
      nr  228  <|@ instruction CMP (x: r9|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr  230  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B19 -> B21 falseDestination: B19 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B39" "B40" 
    successors "B45" 
    xhandlers
    flags 
    probability 4582204477303082166
    begin_IR
      LIR
      nr  456  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  458  <|@ instruction rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  460  <|@ instruction rsi|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  462  <|@ instruction rdx|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  464  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  466  <|@ st <@st|@reference-map: [r13:0, stack:24, stack:32]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:190) [bci: 60]
locals: stack:32|QWORD[.] - stack:40|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
locals: stack:32|QWORD[.] - stack:40|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:60, 8] <|@ <|@
      nr  468  <|@ instruction JUMP ~[] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" 
    xhandlers
    flags 
    probability 4573163390320073526
    begin_IR
      LIR
      nr  140  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  142  <|@ instruction r11|QWORD = UNCOMPRESSPOINTER (input: r11|DWORD, ~baseRegister: -) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@58cdd6ff encoding: base: 0 shift: 3 <|@ <|@
      nr  144  <|@ instruction rsi|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  146  <|@ instruction rdx|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  148  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  150  <|@ st <@st|@reference-map: [r13:0, stack:24, stack:32]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:187) [bci: 39]
locals: stack:32|QWORD[.] - stack:40|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
locals: stack:32|QWORD[.] - stack:40|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:39, 8] <|@ <|@
      nr  152  <|@ instruction r11|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  154  <|@ instruction r10|QWORD = MOVE stack:48|QWORD moveKind: QWORD <|@ <|@
      nr  156  <|@ instruction rcx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  158  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  160  <|@ instruction JUMP ~[] destination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  506  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  508  <|@ instruction MOV [r15|QWORD + 668] y: -62515 size: DWORD <|@ <|@
      nr  510  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  512  <|@ st <@st|@reference-map: [r11:0, stack:24, stack:32]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 54]
stack: stack:32|QWORD[.] r11|QWORD[.] 
locals: stack:32|QWORD[.] - stack:40|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8]
locals: stack:32|QWORD[.] - stack:40|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:54, 8] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  530  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  532  <|@ instruction r10|DWORD = MOVE input: int[-54803|0xffffffffffff29ed] <|@ <|@
      nr  534  <|@ instruction JUMP ~[] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B6" "B49" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  536  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  538  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  540  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  542  <|@ st <@st|@reference-map: [rcx:0, rsi:0]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:156) [bci: 29]
locals: rsi|QWORD[.] - r8|DWORD 
org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:164) [bci: 3]
locals: rsi|QWORD[.] - rcx|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:29, 3] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   66  <|@ instruction r10|DWORD = MOVE input: int[-48659|0xffffffffffff41ed] <|@ <|@
      nr   68  <|@ instruction JUMP ~[] destination: B6 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  544  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  546  <|@ instruction MOV [r15|QWORD + 668] y: -69907 size: DWORD <|@ <|@
      nr  548  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  550  <|@ st <@st|@reference-map: [rdx:0, stack:24, stack:32]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:164) [bci: 0]
locals: stack:32|QWORD[.] rdx|QWORD[.] stack:40|QWORD[.] r8|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: iload_3       
     3: invokespecial #6          // <init>:(org.graalvm.collections.Equivalence, boolean)void
     6: aload_0       
     7: aload_2       
     8: invokespecial #16         // initFrom:(java.lang.Object)boolean
    11: ifne          29
    14: aload_0       
    15: aload_2       
    16: invokeinterface#17, 1      // org.graalvm.collections.UnmodifiableEconomicMap.size:()int
    21: invokespecial #15         // init:(int)void
    24: aload_0       
    25: aload_2       
    26: invokevirtual #18         // org.graalvm.collections.EconomicMap.putAll:(org.graalvm.collections.UnmodifiableEconomicMap)void
    29: return        
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849c1e203493bc20f85efffffff900f1f80000000000f1f800000000089842400c0feff4883ec3848896c2430488974242048894c2418817908addeadde0f85b303000049ba00e01b17010000004c8954241048bfaddeaddeaddeadde483bfa0f84a2010000488bfa48c1ef03897e20488bfe48c1ef0946882417448846148b792048c1e703483bfa0f85460300008b790c897e0c8b7910897e108b791885ff0f8442010000448bef498b7f60498b5770468b34ed0c000000468b1ced08000000458bc641c1e002458d40174183e0f84d63c04d8bc84c03cf4c3bca0f87af0200004d894f60410f188438c0000000410f18843800010000410f18843840010000410f188438800100004489770c48c7070100000044895f084c8bdf418bd64585f60f8467000000498d7b104c8d42f84d85c00f8d1402000049c7c1000000004c8d42fc4d3bc80f8f11000000c5f9efc0c4a17a7f048f4d8d41044d8bc84c8d42fe4d3bc80f8f11000000c5f9efc0c4a1f97e048f4d8d41024d8bc84c8bc249ffc84d3bc80f8f040000004689248f4585f60f849c00000041ffce41c1e6024963fe4d8d43104c03c749c1e809498d7b1048c1ef094c2bc749ffc0e91c0000000f1f8000000000660f1f44000049ffc84c8bcf4d03ca4d03c84588214983f8010f8c4e000000ebe5448b691c4585ed0f8593000000488b6c24304883c438850500000000c5f877c344896620448846148b792085ff0f85d40100008b790c897e0c8b7910897e108b791885ff0f8574feffffebb449c1e5034d8bc3498d7d10498d70104c895c2408e800000000904c8b5c240841817b08addeadde0f855c0100004c8b542410488b74242049c1eb0344895e18488bd648c1ea0946882412488b4c2418e960ffffff468b34ed0c000000498b57604d8b5f704181feffffff000f83cc000000458d46174183e0f84d63c04d8bc84c03ca4d3bcb0f87b20000004d894f60410f188410c0000000410f18841000010000410f18841040010000410f188410800100004489720c48c70201000000c74208addeadde488bc249c1e503488bd0458bde498d7d10488d7210498bd34889442408e80000000090488b44240848c1e803488b74242089461c48c1ee094c8b54241046882416488b6c24304883c438850500000000c5f877c3c5f9efc049c7c1000000000f1f440000c4a17e7f048f4d8d49084d3bc87ef1e9cffdffff48baaddeaddeaddeadde488bf2418bd6b900000000e80000000090e96bffffff49c1e303498bf3418bd6b900000000e800000000904c8bd84c8b542410488b4c2418488b742420e95ffdffff41c7879c020000cd0bffff4d89a7a8020000e8000000009041baed29ffff4589979c0200004d89a7a8020000e8000000009041baed41ffffebe441c7879c020000edeefeff4d89a7a8020000e80000000090e80000000090e80000000090  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@2112be2b slotKind: QWORD  <||@
  Comment 48 6 stack:32|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 53 8 stack:40|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 58 10 CMP [rcx|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl;, resolved>;compressed} state [bci:0]  <||@
  Comment 58 [rcx:0, rdx:0, rsi:0, stack:24, stack:32]at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:164) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2             |3        
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|QWORD[.]  |r8|DWORD   <||@
  Comment 58 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 58 {meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl;, resolved>;compressed}}  <||@
  Comment 65 12 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B51  <||@
  Comment 71 block B1 null  <||@
  Comment 71 14 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 71 16 r10|QWORD = MOVE input: long[4682670080|0x1171be000]  <||@
  Comment 81 18 stack:48|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 86 20 rdi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Equivalence$2@812065084]  <||@
  Comment 86 {Object[Equivalence$2@812065084]}  <||@
  Comment 96 22 CMP (x: rdi|QWORD[.], y: rdx|QWORD[.]) size: QWORD  <||@
  Comment 99 24 BRANCH trueDestinationProbability: 0.28618472457813726 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B7  <||@
  Comment 105 block B7 null  <||@
  Comment 105 70 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 105 72 rdi|DWORD[.] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@58cdd6ff encoding: base: 0 shift: 3  <||@
  Comment 112 74 MOV (x: [rsi|QWORD[.] + 32], y: rdi|DWORD[.]) size: DWORD  <||@
  Comment 115 76 rdi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD  <||@
  Comment 122 78 MOVB (x: [rdi|QWORD[*] + r10|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 126 80 MOVB (x: [rsi|QWORD[.] + 20], y: r8|DWORD) size: BYTE  <||@
  Comment 130 82 rdi|DWORD[.] = MOV [rcx|QWORD[.] + 32] size: DWORD  <||@
  Comment 133 84 rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@58cdd6ff encoding: base: 0 shift: 3  <||@
  Comment 137 86 CMP (x: rdi|QWORD[.], y: rdx|QWORD[.]) size: QWORD  <||@
  Comment 140 88 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B49  <||@
  Comment 146 block B8 null  <||@
  Comment 146 90 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 146 92 rdi|DWORD = MOV [rcx|QWORD[.] + 12] size: DWORD  <||@
  Comment 149 94 MOV (x: [rsi|QWORD[.] + 12], y: rdi|DWORD) size: DWORD  <||@
  Comment 152 96 rdi|DWORD = MOV [rcx|QWORD[.] + 16] size: DWORD  <||@
  Comment 155 98 MOV (x: [rsi|QWORD[.] + 16], y: rdi|DWORD) size: DWORD  <||@
  Comment 158 100 rdi|DWORD[.] = MOV [rcx|QWORD[.] + 24] size: DWORD  <||@
  Comment 161 102 TEST (x: rdi|DWORD[.], y: rdi|DWORD[.]) size: DWORD  <||@
  Comment 163 104 BRANCH trueDestinationProbability: 0.43505536670411277 condition: = trueDestination: B8 -> B37 falseDestination: B8 -> B11  <||@
  Comment 169 block B11 null  <||@
  Comment 169 116 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 169 60 r13|DWORD[.] = MOVE rdi|DWORD[.] moveKind: DWORD  <||@
  Comment 172 118 rdi|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 176 120 rdx|QWORD = MOV [r15|QWORD + 112] size: QWORD  <||@
  Comment 180 122 r14|DWORD = MOV [r13|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 188 124 r11|DWORD = MOV [r13|DWORD[.] * 8 + 8] size: DWORD  <||@
  Comment 196 126 r8|DWORD = SHL r14|DWORD y: 2 size: DWORD  <||@
  Comment 203 128 r8|DWORD = LEA [r8|DWORD + 23] size: DWORD  <||@
  Comment 207 130 r8|DWORD = AND r8|DWORD y: -8 size: DWORD  <||@
  Comment 211 132 r8|QWORD = MOVSXD r8|DWORD size: QWORD  <||@
  Comment 214 134 r9|QWORD = ADD (x: r8|QWORD, y: rdi|QWORD) size: QWORD  <||@
  Comment 220 136 CMP (x: r9|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 223 138 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B11 -> B12 falseDestination: B11 -> B13  <||@
  Comment 229 block B13 null  <||@
  Comment 229 162 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 229 164 MOV (x: [r15|QWORD + 96], y: r9|QWORD) size: QWORD  <||@
  Comment 233 166 AMD64PREFETCH ~[r8|QWORD + rdi|QWORD * 1 + 192] instr: 0  <||@
  Comment 242 168 AMD64PREFETCH ~[r8|QWORD + rdi|QWORD * 1 + 256] instr: 0  <||@
  Comment 251 170 AMD64PREFETCH ~[r8|QWORD + rdi|QWORD * 1 + 320] instr: 0  <||@
  Comment 260 172 AMD64PREFETCH ~[r8|QWORD + rdi|QWORD * 1 + 384] instr: 0  <||@
  Comment 269 174 MOV (x: [rdi|QWORD + 12], y: r14|DWORD) size: DWORD  <||@
  Comment 273 176 MOV [rdi|QWORD] y: 1 size: QWORD  <||@
  Comment 280 178 MOV (x: [rdi|QWORD + 8], y: r11|DWORD) size: DWORD  <||@
  Comment 284 180 rdi|QWORD[.] = MOVE rdi|QWORD moveKind: QWORD  <||@
  Comment 284 182 r11|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD  <||@
  Comment 287 184 JUMP ~[] destination: B13 -> B14  <||@
  Comment 287 block B14 null  <||@
  Comment 287 186 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 287 188 rdx|QWORD = MOV r14|DWORD size: DWORD  <||@
  Comment 290 190 TEST (x: r14|DWORD, y: r14|DWORD) size: DWORD  <||@
  Comment 293 192 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B14 -> B30 falseDestination: B14 -> B16  <||@
  Comment 299 block B16 null  <||@
  Comment 299 198 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 299 200 rdi|QWORD[.] = LEA [r11|QWORD[.] + 16] size: QWORD  <||@
  Comment 303 202 r8|QWORD = LEA [rdx|QWORD - 8] size: QWORD  <||@
  Comment 307 204 TEST (x: r8|QWORD, y: r8|QWORD) size: QWORD  <||@
  Comment 310 206 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B16 -> B17 falseDestination: B16 -> B18  <||@
  Comment 316 block B17 null  <||@
  Comment 316 208 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 316 210 r9|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 323 212 JUMP ~[] destination: B17 -> B21  <||@
  Comment 323 block B21 null  <||@
  Comment 323 236 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 323 238 r8|QWORD = LEA [rdx|QWORD - 4] size: QWORD  <||@
  Comment 327 240 CMP (x: r9|QWORD, y: r8|QWORD) size: QWORD  <||@
  Comment 330 242 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B21 -> B24 falseDestination: B21 -> B23  <||@
  Comment 336 block B23 null  <||@
  Comment 336 248 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 336 250 xmm0|V128_DWORD[....] = L oc: SIMD<null,null,null,null>  <||@
  Comment 340 252 J (address: [rdi|QWORD[.] + r9|QWORD * 4], input: xmm0|V128_DWORD[....]) nZ: XMM oh: VMOVDQU  <||@
  Comment 346 254 r8|QWORD = LEA [r9|QWORD + 4] size: QWORD  <||@
  Comment 350 256 r9|QWORD = MOVE r8|QWORD moveKind: QWORD  <||@
  Comment 353 258 JUMP ~[] destination: B23 -> B24  <||@
  Comment 353 block B24 null  <||@
  Comment 353 260 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 353 262 r8|QWORD = LEA [rdx|QWORD - 2] size: QWORD  <||@
  Comment 357 264 CMP (x: r9|QWORD, y: r8|QWORD) size: QWORD  <||@
  Comment 360 266 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B24 -> B27 falseDestination: B24 -> B26  <||@
  Comment 366 block B26 null  <||@
  Comment 366 272 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 366 274 xmm0|V64_DWORD[..] = L oc: SIMD<null,null>  <||@
  Comment 370 276 J (address: [rdi|QWORD[.] + r9|QWORD * 4], input: xmm0|V64_DWORD[..]) nZ: XMM oh: VMOVQ  <||@
  Comment 376 278 r8|QWORD = LEA [r9|QWORD + 2] size: QWORD  <||@
  Comment 380 280 r9|QWORD = MOVE r8|QWORD moveKind: QWORD  <||@
  Comment 383 282 JUMP ~[] destination: B26 -> B27  <||@
  Comment 383 block B27 null  <||@
  Comment 383 284 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 383 286 r8|QWORD = DEC rdx|QWORD size: QWORD  <||@
  Comment 389 288 CMP (x: r9|QWORD, y: r8|QWORD) size: QWORD  <||@
  Comment 392 290 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B27 -> B30 falseDestination: B27 -> B29  <||@
  Comment 398 block B29 null  <||@
  Comment 398 296 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 398 298 MOV (x: [rdi|QWORD[.] + r9|QWORD * 4], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 402 300 JUMP ~[] destination: B29 -> B30  <||@
  Comment 402 block B30 null  <||@
  Comment 402 302 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 402 304 TEST (x: r14|DWORD, y: r14|DWORD) size: DWORD  <||@
  Comment 405 306 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B30 -> B35 falseDestination: B30 -> B32  <||@
  Comment 411 block B32 null  <||@
  Comment 411 312 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 411 314 r14|DWORD = DEC r14|DWORD size: DWORD  <||@
  Comment 414 316 r14|DWORD = SHL r14|DWORD y: 2 size: DWORD  <||@
  Comment 418 318 rdi|QWORD = MOVSXD r14|DWORD size: QWORD  <||@
  Comment 421 320 r8|QWORD[.] = LEA [r11|QWORD[.] + 16] size: QWORD  <||@
  Comment 425 322 r8|QWORD[.] = ADD (x: r8|QWORD[.], y: rdi|QWORD) size: QWORD  <||@
  Comment 428 324 r8|QWORD[*] = SHR r8|QWORD[.] y: 9 size: QWORD  <||@
  Comment 432 326 rdi|QWORD[.] = LEA [r11|QWORD[.] + 16] size: QWORD  <||@
  Comment 436 328 rdi|QWORD[*] = SHR rdi|QWORD[.] y: 9 size: QWORD  <||@
  Comment 440 330 r8|QWORD[*] = SUB (x: r8|QWORD[*], ~y: rdi|QWORD[*]) size: QWORD  <||@
  Comment 443 332 r8|QWORD[*] = INC r8|QWORD[*] size: QWORD  <||@
  Comment 446 334 JUMP ~[] destination: B32 -> B33  <||@
  Comment 451 block B47 loop 1 depth 1 header:473|LoopBegin  <||@
  Comment 451 514 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 464 516 r8|QWORD[*] = DEC r8|QWORD[*] size: QWORD  <||@
  Comment 467 518 r9|QWORD[*] = ADD (x: rdi|QWORD[*], y: r10|QWORD) size: QWORD  <||@
  Comment 473 520 r9|QWORD[*] = ADD (x: r9|QWORD[*], y: r8|QWORD[*]) size: QWORD  <||@
  Comment 476 522 MOVB (x: [r9|QWORD[*]], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 479 524 JUMP ~[] destination: B47 -> B33  <||@
  Comment 479 block B33 loop 1 depth 1 header:473|LoopBegin  <||@
  Comment 479 336 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 479 338 CMP r8|QWORD[*] y: 1 size: QWORD  <||@
  Comment 483 340 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B33 -> B35 falseDestination: B33 -> B47  <||@
  Comment 491 block B37 null  <||@
  Comment 491 386 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 491 388 r13|DWORD[.] = MOV [rcx|QWORD[.] + 28] size: DWORD  <||@
  Comment 495 390 TEST (x: r13|DWORD[.], y: r13|DWORD[.]) size: DWORD  <||@
  Comment 498 392 BRANCH trueDestinationProbability: 0.7916022292900703 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B39  <||@
  Comment 504 block B38 null  <||@
  Comment 504 394 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 504 396 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 513 12  <||@
  Comment 523 block B2 null  <||@
  Comment 523 26 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 523 28 MOV (x: [rsi|QWORD[.] + 32], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 527 30 MOVB (x: [rsi|QWORD[.] + 20], y: r8|DWORD) size: BYTE  <||@
  Comment 531 32 rdi|DWORD[.] = MOV [rcx|QWORD[.] + 32] size: DWORD  <||@
  Comment 534 34 TEST (x: rdi|DWORD[.], y: rdi|DWORD[.]) size: DWORD  <||@
  Comment 536 36 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B6  <||@
  Comment 542 block B3 null  <||@
  Comment 542 38 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 542 40 rdi|DWORD = MOV [rcx|QWORD[.] + 12] size: DWORD  <||@
  Comment 545 42 MOV (x: [rsi|QWORD[.] + 12], y: rdi|DWORD) size: DWORD  <||@
  Comment 548 44 rdi|DWORD = MOV [rcx|QWORD[.] + 16] size: DWORD  <||@
  Comment 551 46 MOV (x: [rsi|QWORD[.] + 16], y: rdi|DWORD) size: DWORD  <||@
  Comment 554 48 rdi|DWORD[.] = MOV [rcx|QWORD[.] + 24] size: DWORD  <||@
  Comment 557 50 TEST (x: rdi|DWORD[.], y: rdi|DWORD[.]) size: DWORD  <||@
  Comment 559 52 BRANCH trueDestinationProbability: 0.43505536670411277 condition: = trueDestination: B3 -> B37 falseDestination: B3 -> B11  <||@
  Comment 567 block B35 null  <||@
  Comment 567 346 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 567 348 r13|QWORD[.] = UNCOMPRESSPOINTER (input: r13|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@58cdd6ff encoding: base: 0 shift: 3  <||@
  Comment 571 350 r13|QWORD[*] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 571 352 r8|QWORD[*] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 574 354 rdi|QWORD = LEA [r13|QWORD[*] + 16] size: QWORD  <||@
  Comment 578 356 rsi|QWORD = LEA [r8|QWORD[*] + 16] size: QWORD  <||@
  Comment 582 358 stack:56|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 587 360 - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: ObjectDisjointUninitArraycopy(Word,Word,Word)void@0x106813200:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL  <||@
  Comment 587 {Field[name=StubRoutines::_oop_disjoint_arraycopy_uninit, type=address, offset=0, address=0x105a7dcc8, value=0x106813200]:0x106813200}  <||@
  Comment 593 362 r11|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 598 364 CMP [r11|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}  <||@
  Comment 598 {meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}}  <||@
  Comment 606 366 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B46  <||@
  Comment 612 block B36 null  <||@
  Comment 612 368 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 612 370 r10|QWORD = MOVE stack:48|QWORD moveKind: QWORD  <||@
  Comment 617 372 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 622 374 r11|DWORD[.] = COMPRESSPOINTER (input: r11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@58cdd6ff encoding: base: 0 shift: 3  <||@
  Comment 626 376 MOV (x: [rsi|QWORD[.] + 24], y: r11|DWORD[.]) size: DWORD  <||@
  Comment 630 378 rdx|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD  <||@
  Comment 637 380 MOVB (x: [rdx|QWORD[*] + r10|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 641 382 rcx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 646 384 JUMP ~[] destination: B36 -> B37  <||@
  Comment 651 block B39 null  <||@
  Comment 651 398 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 651 400 r14|DWORD = MOV [r13|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 659 402 rdx|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 663 404 r11|QWORD = MOV [r15|QWORD + 112] size: QWORD  <||@
  Comment 667 406 CMP r14|DWORD y: 16777215 size: DWORD  <||@
  Comment 674 408 BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B39 -> B40 falseDestination: B39 -> B44  <||@
  Comment 680 block B40 null  <||@
  Comment 680 410 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 680 412 r8|DWORD = LEA [r14|DWORD + 23] size: DWORD  <||@
  Comment 684 414 r8|DWORD = AND r8|DWORD y: -8 size: DWORD  <||@
  Comment 688 416 r8|QWORD = MOVSXD r8|DWORD size: QWORD  <||@
  Comment 691 418 r9|QWORD = ADD (x: r8|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 697 420 CMP (x: r9|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 700 422 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B40 -> B44 falseDestination: B40 -> B42  <||@
  Comment 706 block B42 null  <||@
  Comment 706 428 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 706 430 MOV (x: [r15|QWORD + 96], y: r9|QWORD) size: QWORD  <||@
  Comment 710 432 AMD64PREFETCH ~[r8|QWORD + rdx|QWORD * 1 + 192] instr: 0  <||@
  Comment 719 434 AMD64PREFETCH ~[r8|QWORD + rdx|QWORD * 1 + 256] instr: 0  <||@
  Comment 728 436 AMD64PREFETCH ~[r8|QWORD + rdx|QWORD * 1 + 320] instr: 0  <||@
  Comment 737 438 AMD64PREFETCH ~[r8|QWORD + rdx|QWORD * 1 + 384] instr: 0  <||@
  Comment 746 440 MOV (x: [rdx|QWORD + 12], y: r14|DWORD) size: DWORD  <||@
  Comment 750 442 MOV [rdx|QWORD] y: 1 size: QWORD  <||@
  Comment 757 444 MOV [rdx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed}  <||@
  Comment 757 {meta{HotSpotType<[B, resolved>;compressed}}  <||@
  Comment 764 446 rdx|QWORD[.] = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 764 448 rax|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 767 450 JUMP ~[] destination: B42 -> B45  <||@
  Comment 767 block B45 null  <||@
  Comment 767 470 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 767 472 r13|QWORD[.] = UNCOMPRESSPOINTER (input: r13|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@58cdd6ff encoding: base: 0 shift: 3  <||@
  Comment 771 474 r13|QWORD[*] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 771 476 rdx|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 774 478 r11|QWORD = MOV r14|DWORD size: DWORD  <||@
  Comment 777 480 rdi|QWORD = LEA [r13|QWORD[*] + 16] size: QWORD  <||@
  Comment 781 482 rsi|QWORD = LEA [rdx|QWORD[*] + 16] size: QWORD  <||@
  Comment 785 484 rdx|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 788 486 stack:56|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 793 488 - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: byteDisjointArraycopy(Word,Word,Word)void@0x106812ae0:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL  <||@
  Comment 793 {Field[name=StubRoutines::_arrayof_jbyte_disjoint_arraycopy, type=address, offset=0, address=0x105a7dd00, value=0x106812ae0]:0x106812ae0}  <||@
  Comment 799 490 rax|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 804 492 rax|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@58cdd6ff encoding: base: 0 shift: 3  <||@
  Comment 808 494 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 813 496 MOV (x: [rsi|QWORD[.] + 28], y: rax|DWORD[.]) size: DWORD  <||@
  Comment 816 498 rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD  <||@
  Comment 820 500 r10|QWORD = MOVE stack:48|QWORD moveKind: QWORD  <||@
  Comment 825 502 MOVB (x: [rsi|QWORD[*] + r10|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 829 504 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 838 12  <||@
  Comment 848 block B18 null  <||@
  Comment 848 214 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 848 216 xmm0|V256_DWORD[........] = L oc: SIMD<null,null,null,null,null,null,null,null>  <||@
  Comment 852 218 r9|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 859 220 JUMP ~[] destination: B18 -> B19  <||@
  Comment 859 block B19 loop 0 depth 1 header:596|LoopBegin  <||@
  Comment 859 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 864 224 J (address: [rdi|QWORD[.] + r9|QWORD * 4], input: xmm0|V256_DWORD[........]) nZ: YMM oh: VMOVDQU  <||@
  Comment 870 226 r9|QWORD = LEA [r9|QWORD + 8] size: QWORD  <||@
  Comment 874 228 CMP (x: r9|QWORD, y: r8|QWORD) size: QWORD  <||@
  Comment 877 230 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B19 -> B21 falseDestination: B19 -> B19  <||@
  Comment 884 block B44 null  <||@
  Comment 884 456 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 884 458 rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>}  <||@
  Comment 884 {meta{HotSpotType<[B, resolved>}}  <||@
  Comment 894 460 rsi|QWORD = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 897 462 rdx|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 900 464 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 905 466 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:60, 8]  <||@
  Comment 905 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 910 [r13:0, stack:24, stack:32]at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:190) [bci: 60, duringCall: false, rethrow: false]
              |0                  |1  |2                 
     locals:  |stack:32|QWORD[.]  |-  |stack:40|QWORD[.] 
  at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8, duringCall: true, rethrow: false]
              |0                  |1  |2                  |3 
     locals:  |stack:32|QWORD[.]  |-  |stack:40|QWORD[.]  |-   <||@
  Comment 911 468 JUMP ~[] destination: B44 -> B45  <||@
  Comment 916 block B12 null  <||@
  Comment 916 140 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 916 142 r11|QWORD = UNCOMPRESSPOINTER (input: r11|DWORD, ~baseRegister: -) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@58cdd6ff encoding: base: 0 shift: 3  <||@
  Comment 920 144 rsi|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 923 146 rdx|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 926 148 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 931 150 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:39, 8]  <||@
  Comment 931 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 936 [r13:0, stack:24, stack:32]at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:187) [bci: 39, duringCall: false, rethrow: false]
              |0                  |1  |2                 
     locals:  |stack:32|QWORD[.]  |-  |stack:40|QWORD[.] 
  at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8, duringCall: true, rethrow: false]
              |0                  |1  |2                  |3 
     locals:  |stack:32|QWORD[.]  |-  |stack:40|QWORD[.]  |-   <||@
  Comment 937 152 r11|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 940 154 r10|QWORD = MOVE stack:48|QWORD moveKind: QWORD  <||@
  Comment 945 156 rcx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 950 158 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 955 160 JUMP ~[] destination: B12 -> B14  <||@
  Comment 960 block B46 null  <||@
  Comment 960 506 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 960 508 MOV [r15|QWORD + 668] y: -62515 size: DWORD  <||@
  Comment 971 510 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 978 512 DEOPT info [bci:54, 8]  <||@
  Comment 978 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 983 [r11:0, stack:24, stack:32]at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 54, duringCall: false, rethrow: false]
              |0                  |1             |2                 
     locals:  |stack:32|QWORD[.]  |-             |stack:40|QWORD[.] 
     stack:   |stack:32|QWORD[.]  |r11|QWORD[.]  |                  
  at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8, duringCall: true, rethrow: false]
              |0                  |1  |2                  |3 
     locals:  |stack:32|QWORD[.]  |-  |stack:40|QWORD[.]  |-   <||@
  Comment 984 block B49 null  <||@
  Comment 984 530 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 984 532 r10|DWORD = MOVE input: int[-54803|0xffffffffffff29ed]  <||@
  Comment 990 534 JUMP ~[] destination: B49 -> B50  <||@
  Comment 990 block B50 null  <||@
  Comment 990 536 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 990 538 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 997 540 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1004 542 DEOPT info [bci:29, 3]  <||@
  Comment 1004 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 1009 [rcx:0, rsi:0]at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:156) [bci: 29, duringCall: false, rethrow: false]
              |0             |1  |2        
     locals:  |rsi|QWORD[.]  |-  |r8|DWORD 
  at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:164) [bci: 3, duringCall: true, rethrow: false]
              |0             |1  |2             |3 
     locals:  |rsi|QWORD[.]  |-  |rcx|QWORD[.]  |-   <||@
  Comment 1010 block B6 null  <||@
  Comment 1010 64 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1010 66 r10|DWORD = MOVE input: int[-48659|0xffffffffffff41ed]  <||@
  Comment 1016 68 JUMP ~[] destination: B6 -> B50  <||@
  Comment 1018 block B51 null  <||@
  Comment 1018 544 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1018 546 MOV [r15|QWORD + 668] y: -69907 size: DWORD  <||@
  Comment 1029 548 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1036 550 DEOPT info [bci:0]  <||@
  Comment 1036 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 1041 [rdx:0, stack:24, stack:32]at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:164) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1             |2                  |3        
     locals:  |stack:32|QWORD[.]  |rdx|QWORD[.]  |stack:40|QWORD[.]  |r8|DWORD   <||@
  Comment 1042 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 1042 4  <||@
  Comment 1048 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 1048 5  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-9355[org.graalvm.collections.EconomicMapImpl.<init>(Equivalence, UnmodifiableEconomicMap, boolean)]"
  method "HotSpotCompilation-9355[org.graalvm.collections.EconomicMapImpl.<init>(Equivalence, UnmodifiableEconomicMap, boolean)]"
  date 1527005205779
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 107b9a3c0 448b560849c1e203493bc20f858fbac6fe900f1f80000000000f1f800000000089842400c0feff4883ec3848896c2430488974242048894c2418817908f93c01f80f85b303000049ba00e01b17010000004c8954241048bf682500c006000000483bfa0f84a2010000488bfa48c1ef03897e20488bfe48c1ef0946882417448846148b792048c1e703483bfa0f85460300008b790c897e0c8b7910897e108b791885ff0f8442010000448bef498b7f60498b5770468b34ed0c000000468b1ced08000000458bc641c1e002458d40174183e0f84d63c04d8bc84c03cf4c3bca0f87af0200004d894f60410f188438c0000000410f18843800010000410f18843840010000410f188438800100004489770c48c7070100000044895f084c8bdf418bd64585f60f8467000000498d7b104c8d42f84d85c00f8d1402000049c7c1000000004c8d42fc4d3bc80f8f11000000c5f9efc0c4a17a7f048f4d8d41044d8bc84c8d42fe4d3bc80f8f11000000c5f9efc0c4a1f97e048f4d8d41024d8bc84c8bc249ffc84d3bc80f8f040000004689248f4585f60f849c00000041ffce41c1e6024963fe4d8d43104c03c749c1e809498d7b1048c1ef094c2bc749ffc0e91c0000000f1f8000000000660f1f44000049ffc84c8bcf4d03ca4d03c84588214983f8010f8c4e000000ebe5448b691c4585ed0f8593000000488b6c24304883c43885053f4acffcc5f877c344896620448846148b792085ff0f85d40100008b790c897e0c8b7910897e108b791885ff0f8574feffffebb449c1e5034d8bc3498d7d10498d70104c895c2408e8f08bc7fe904c8b5c240841817b08f52200f80f855c0100004c8b542410488b74242049c1eb0344895e18488bd648c1ea0946882412488b4c2418e960ffffff468b34ed0c000000498b57604d8b5f704181feffffff000f83cc000000458d46174183e0f84d63c04d8bc84c03ca4d3bcb0f87b20000004d894f60410f188410c0000000410f18841000010000410f18841040010000410f188410800100004489720c48c70201000000c74208f50000f8488bc249c1e503488bd0458bde498d7d10488d7210498bd34889442408e80284c7fe90488b44240848c1e803488b74242089461c48c1ee094c8b54241046882416488b6c24304883c4388505fa48cffcc5f877c3c5f9efc049c7c1000000000f1f440000c4a17e7f048f4d8d49084d3bc87ef1e9cffdffff48baa80700c007000000488bf2418bd6b900000000e892c63fff90e96bffffff49c1e303498bf3418bd6b900000000e878c63fff904c8bd84c8b542410488b4c2418488b742420e95ffdffff41c7879c020000cd0bffff4d89a7a8020000e867cec6fe9041baed29ffff4589979c0200004d89a7a8020000e84dcec6fe9041baed41ffffebe441c7879c020000edeefeff4d89a7a8020000e82dcec6fe90e849fe0aff90e823cdc6fe90f4f4  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@2112be2b slotKind: QWORD  <||@
  Comment 48 6 stack:32|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 53 8 stack:40|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 58 10 CMP [rcx|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl;, resolved>;compressed} state [bci:0]  <||@
  Comment 58 [rcx:0, rdx:0, rsi:0, stack:24, stack:32]at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:164) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2             |3        
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|QWORD[.]  |r8|DWORD   <||@
  Comment 58 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 58 {meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl;, resolved>;compressed}}  <||@
  Comment 65 12 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B51  <||@
  Comment 71 block B1 null  <||@
  Comment 71 14 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 71 16 r10|QWORD = MOVE input: long[4682670080|0x1171be000]  <||@
  Comment 81 18 stack:48|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 86 20 rdi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Equivalence$2@812065084]  <||@
  Comment 86 {Object[Equivalence$2@812065084]}  <||@
  Comment 96 22 CMP (x: rdi|QWORD[.], y: rdx|QWORD[.]) size: QWORD  <||@
  Comment 99 24 BRANCH trueDestinationProbability: 0.28618472457813726 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B7  <||@
  Comment 105 block B7 null  <||@
  Comment 105 70 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 105 72 rdi|DWORD[.] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@58cdd6ff encoding: base: 0 shift: 3  <||@
  Comment 112 74 MOV (x: [rsi|QWORD[.] + 32], y: rdi|DWORD[.]) size: DWORD  <||@
  Comment 115 76 rdi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD  <||@
  Comment 122 78 MOVB (x: [rdi|QWORD[*] + r10|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 126 80 MOVB (x: [rsi|QWORD[.] + 20], y: r8|DWORD) size: BYTE  <||@
  Comment 130 82 rdi|DWORD[.] = MOV [rcx|QWORD[.] + 32] size: DWORD  <||@
  Comment 133 84 rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@58cdd6ff encoding: base: 0 shift: 3  <||@
  Comment 137 86 CMP (x: rdi|QWORD[.], y: rdx|QWORD[.]) size: QWORD  <||@
  Comment 140 88 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B49  <||@
  Comment 146 block B8 null  <||@
  Comment 146 90 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 146 92 rdi|DWORD = MOV [rcx|QWORD[.] + 12] size: DWORD  <||@
  Comment 149 94 MOV (x: [rsi|QWORD[.] + 12], y: rdi|DWORD) size: DWORD  <||@
  Comment 152 96 rdi|DWORD = MOV [rcx|QWORD[.] + 16] size: DWORD  <||@
  Comment 155 98 MOV (x: [rsi|QWORD[.] + 16], y: rdi|DWORD) size: DWORD  <||@
  Comment 158 100 rdi|DWORD[.] = MOV [rcx|QWORD[.] + 24] size: DWORD  <||@
  Comment 161 102 TEST (x: rdi|DWORD[.], y: rdi|DWORD[.]) size: DWORD  <||@
  Comment 163 104 BRANCH trueDestinationProbability: 0.43505536670411277 condition: = trueDestination: B8 -> B37 falseDestination: B8 -> B11  <||@
  Comment 169 block B11 null  <||@
  Comment 169 116 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 169 60 r13|DWORD[.] = MOVE rdi|DWORD[.] moveKind: DWORD  <||@
  Comment 172 118 rdi|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 176 120 rdx|QWORD = MOV [r15|QWORD + 112] size: QWORD  <||@
  Comment 180 122 r14|DWORD = MOV [r13|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 188 124 r11|DWORD = MOV [r13|DWORD[.] * 8 + 8] size: DWORD  <||@
  Comment 196 126 r8|DWORD = SHL r14|DWORD y: 2 size: DWORD  <||@
  Comment 203 128 r8|DWORD = LEA [r8|DWORD + 23] size: DWORD  <||@
  Comment 207 130 r8|DWORD = AND r8|DWORD y: -8 size: DWORD  <||@
  Comment 211 132 r8|QWORD = MOVSXD r8|DWORD size: QWORD  <||@
  Comment 214 134 r9|QWORD = ADD (x: r8|QWORD, y: rdi|QWORD) size: QWORD  <||@
  Comment 220 136 CMP (x: r9|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 223 138 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B11 -> B12 falseDestination: B11 -> B13  <||@
  Comment 229 block B13 null  <||@
  Comment 229 162 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 229 164 MOV (x: [r15|QWORD + 96], y: r9|QWORD) size: QWORD  <||@
  Comment 233 166 AMD64PREFETCH ~[r8|QWORD + rdi|QWORD * 1 + 192] instr: 0  <||@
  Comment 242 168 AMD64PREFETCH ~[r8|QWORD + rdi|QWORD * 1 + 256] instr: 0  <||@
  Comment 251 170 AMD64PREFETCH ~[r8|QWORD + rdi|QWORD * 1 + 320] instr: 0  <||@
  Comment 260 172 AMD64PREFETCH ~[r8|QWORD + rdi|QWORD * 1 + 384] instr: 0  <||@
  Comment 269 174 MOV (x: [rdi|QWORD + 12], y: r14|DWORD) size: DWORD  <||@
  Comment 273 176 MOV [rdi|QWORD] y: 1 size: QWORD  <||@
  Comment 280 178 MOV (x: [rdi|QWORD + 8], y: r11|DWORD) size: DWORD  <||@
  Comment 284 180 rdi|QWORD[.] = MOVE rdi|QWORD moveKind: QWORD  <||@
  Comment 284 182 r11|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD  <||@
  Comment 287 184 JUMP ~[] destination: B13 -> B14  <||@
  Comment 287 block B14 null  <||@
  Comment 287 186 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 287 188 rdx|QWORD = MOV r14|DWORD size: DWORD  <||@
  Comment 290 190 TEST (x: r14|DWORD, y: r14|DWORD) size: DWORD  <||@
  Comment 293 192 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B14 -> B30 falseDestination: B14 -> B16  <||@
  Comment 299 block B16 null  <||@
  Comment 299 198 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 299 200 rdi|QWORD[.] = LEA [r11|QWORD[.] + 16] size: QWORD  <||@
  Comment 303 202 r8|QWORD = LEA [rdx|QWORD - 8] size: QWORD  <||@
  Comment 307 204 TEST (x: r8|QWORD, y: r8|QWORD) size: QWORD  <||@
  Comment 310 206 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B16 -> B17 falseDestination: B16 -> B18  <||@
  Comment 316 block B17 null  <||@
  Comment 316 208 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 316 210 r9|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 323 212 JUMP ~[] destination: B17 -> B21  <||@
  Comment 323 block B21 null  <||@
  Comment 323 236 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 323 238 r8|QWORD = LEA [rdx|QWORD - 4] size: QWORD  <||@
  Comment 327 240 CMP (x: r9|QWORD, y: r8|QWORD) size: QWORD  <||@
  Comment 330 242 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B21 -> B24 falseDestination: B21 -> B23  <||@
  Comment 336 block B23 null  <||@
  Comment 336 248 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 336 250 xmm0|V128_DWORD[....] = L oc: SIMD<null,null,null,null>  <||@
  Comment 340 252 J (address: [rdi|QWORD[.] + r9|QWORD * 4], input: xmm0|V128_DWORD[....]) nZ: XMM oh: VMOVDQU  <||@
  Comment 346 254 r8|QWORD = LEA [r9|QWORD + 4] size: QWORD  <||@
  Comment 350 256 r9|QWORD = MOVE r8|QWORD moveKind: QWORD  <||@
  Comment 353 258 JUMP ~[] destination: B23 -> B24  <||@
  Comment 353 block B24 null  <||@
  Comment 353 260 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 353 262 r8|QWORD = LEA [rdx|QWORD - 2] size: QWORD  <||@
  Comment 357 264 CMP (x: r9|QWORD, y: r8|QWORD) size: QWORD  <||@
  Comment 360 266 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B24 -> B27 falseDestination: B24 -> B26  <||@
  Comment 366 block B26 null  <||@
  Comment 366 272 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 366 274 xmm0|V64_DWORD[..] = L oc: SIMD<null,null>  <||@
  Comment 370 276 J (address: [rdi|QWORD[.] + r9|QWORD * 4], input: xmm0|V64_DWORD[..]) nZ: XMM oh: VMOVQ  <||@
  Comment 376 278 r8|QWORD = LEA [r9|QWORD + 2] size: QWORD  <||@
  Comment 380 280 r9|QWORD = MOVE r8|QWORD moveKind: QWORD  <||@
  Comment 383 282 JUMP ~[] destination: B26 -> B27  <||@
  Comment 383 block B27 null  <||@
  Comment 383 284 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 383 286 r8|QWORD = DEC rdx|QWORD size: QWORD  <||@
  Comment 389 288 CMP (x: r9|QWORD, y: r8|QWORD) size: QWORD  <||@
  Comment 392 290 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B27 -> B30 falseDestination: B27 -> B29  <||@
  Comment 398 block B29 null  <||@
  Comment 398 296 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 398 298 MOV (x: [rdi|QWORD[.] + r9|QWORD * 4], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 402 300 JUMP ~[] destination: B29 -> B30  <||@
  Comment 402 block B30 null  <||@
  Comment 402 302 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 402 304 TEST (x: r14|DWORD, y: r14|DWORD) size: DWORD  <||@
  Comment 405 306 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B30 -> B35 falseDestination: B30 -> B32  <||@
  Comment 411 block B32 null  <||@
  Comment 411 312 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 411 314 r14|DWORD = DEC r14|DWORD size: DWORD  <||@
  Comment 414 316 r14|DWORD = SHL r14|DWORD y: 2 size: DWORD  <||@
  Comment 418 318 rdi|QWORD = MOVSXD r14|DWORD size: QWORD  <||@
  Comment 421 320 r8|QWORD[.] = LEA [r11|QWORD[.] + 16] size: QWORD  <||@
  Comment 425 322 r8|QWORD[.] = ADD (x: r8|QWORD[.], y: rdi|QWORD) size: QWORD  <||@
  Comment 428 324 r8|QWORD[*] = SHR r8|QWORD[.] y: 9 size: QWORD  <||@
  Comment 432 326 rdi|QWORD[.] = LEA [r11|QWORD[.] + 16] size: QWORD  <||@
  Comment 436 328 rdi|QWORD[*] = SHR rdi|QWORD[.] y: 9 size: QWORD  <||@
  Comment 440 330 r8|QWORD[*] = SUB (x: r8|QWORD[*], ~y: rdi|QWORD[*]) size: QWORD  <||@
  Comment 443 332 r8|QWORD[*] = INC r8|QWORD[*] size: QWORD  <||@
  Comment 446 334 JUMP ~[] destination: B32 -> B33  <||@
  Comment 451 block B47 loop 1 depth 1 header:473|LoopBegin  <||@
  Comment 451 514 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 464 516 r8|QWORD[*] = DEC r8|QWORD[*] size: QWORD  <||@
  Comment 467 518 r9|QWORD[*] = ADD (x: rdi|QWORD[*], y: r10|QWORD) size: QWORD  <||@
  Comment 473 520 r9|QWORD[*] = ADD (x: r9|QWORD[*], y: r8|QWORD[*]) size: QWORD  <||@
  Comment 476 522 MOVB (x: [r9|QWORD[*]], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 479 524 JUMP ~[] destination: B47 -> B33  <||@
  Comment 479 block B33 loop 1 depth 1 header:473|LoopBegin  <||@
  Comment 479 336 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 479 338 CMP r8|QWORD[*] y: 1 size: QWORD  <||@
  Comment 483 340 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B33 -> B35 falseDestination: B33 -> B47  <||@
  Comment 491 block B37 null  <||@
  Comment 491 386 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 491 388 r13|DWORD[.] = MOV [rcx|QWORD[.] + 28] size: DWORD  <||@
  Comment 495 390 TEST (x: r13|DWORD[.], y: r13|DWORD[.]) size: DWORD  <||@
  Comment 498 392 BRANCH trueDestinationProbability: 0.7916022292900703 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B39  <||@
  Comment 504 block B38 null  <||@
  Comment 504 394 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 504 396 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 513 12  <||@
  Comment 523 block B2 null  <||@
  Comment 523 26 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 523 28 MOV (x: [rsi|QWORD[.] + 32], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 527 30 MOVB (x: [rsi|QWORD[.] + 20], y: r8|DWORD) size: BYTE  <||@
  Comment 531 32 rdi|DWORD[.] = MOV [rcx|QWORD[.] + 32] size: DWORD  <||@
  Comment 534 34 TEST (x: rdi|DWORD[.], y: rdi|DWORD[.]) size: DWORD  <||@
  Comment 536 36 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B6  <||@
  Comment 542 block B3 null  <||@
  Comment 542 38 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 542 40 rdi|DWORD = MOV [rcx|QWORD[.] + 12] size: DWORD  <||@
  Comment 545 42 MOV (x: [rsi|QWORD[.] + 12], y: rdi|DWORD) size: DWORD  <||@
  Comment 548 44 rdi|DWORD = MOV [rcx|QWORD[.] + 16] size: DWORD  <||@
  Comment 551 46 MOV (x: [rsi|QWORD[.] + 16], y: rdi|DWORD) size: DWORD  <||@
  Comment 554 48 rdi|DWORD[.] = MOV [rcx|QWORD[.] + 24] size: DWORD  <||@
  Comment 557 50 TEST (x: rdi|DWORD[.], y: rdi|DWORD[.]) size: DWORD  <||@
  Comment 559 52 BRANCH trueDestinationProbability: 0.43505536670411277 condition: = trueDestination: B3 -> B37 falseDestination: B3 -> B11  <||@
  Comment 567 block B35 null  <||@
  Comment 567 346 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 567 348 r13|QWORD[.] = UNCOMPRESSPOINTER (input: r13|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@58cdd6ff encoding: base: 0 shift: 3  <||@
  Comment 571 350 r13|QWORD[*] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 571 352 r8|QWORD[*] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 574 354 rdi|QWORD = LEA [r13|QWORD[*] + 16] size: QWORD  <||@
  Comment 578 356 rsi|QWORD = LEA [r8|QWORD[*] + 16] size: QWORD  <||@
  Comment 582 358 stack:56|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 587 360 - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: ObjectDisjointUninitArraycopy(Word,Word,Word)void@0x106813200:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL  <||@
  Comment 587 {Field[name=StubRoutines::_oop_disjoint_arraycopy_uninit, type=address, offset=0, address=0x105a7dcc8, value=0x106813200]:0x106813200}  <||@
  Comment 593 362 r11|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 598 364 CMP [r11|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}  <||@
  Comment 598 {meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}}  <||@
  Comment 606 366 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B46  <||@
  Comment 612 block B36 null  <||@
  Comment 612 368 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 612 370 r10|QWORD = MOVE stack:48|QWORD moveKind: QWORD  <||@
  Comment 617 372 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 622 374 r11|DWORD[.] = COMPRESSPOINTER (input: r11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@58cdd6ff encoding: base: 0 shift: 3  <||@
  Comment 626 376 MOV (x: [rsi|QWORD[.] + 24], y: r11|DWORD[.]) size: DWORD  <||@
  Comment 630 378 rdx|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD  <||@
  Comment 637 380 MOVB (x: [rdx|QWORD[*] + r10|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 641 382 rcx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 646 384 JUMP ~[] destination: B36 -> B37  <||@
  Comment 651 block B39 null  <||@
  Comment 651 398 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 651 400 r14|DWORD = MOV [r13|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 659 402 rdx|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 663 404 r11|QWORD = MOV [r15|QWORD + 112] size: QWORD  <||@
  Comment 667 406 CMP r14|DWORD y: 16777215 size: DWORD  <||@
  Comment 674 408 BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B39 -> B40 falseDestination: B39 -> B44  <||@
  Comment 680 block B40 null  <||@
  Comment 680 410 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 680 412 r8|DWORD = LEA [r14|DWORD + 23] size: DWORD  <||@
  Comment 684 414 r8|DWORD = AND r8|DWORD y: -8 size: DWORD  <||@
  Comment 688 416 r8|QWORD = MOVSXD r8|DWORD size: QWORD  <||@
  Comment 691 418 r9|QWORD = ADD (x: r8|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 697 420 CMP (x: r9|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 700 422 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B40 -> B44 falseDestination: B40 -> B42  <||@
  Comment 706 block B42 null  <||@
  Comment 706 428 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 706 430 MOV (x: [r15|QWORD + 96], y: r9|QWORD) size: QWORD  <||@
  Comment 710 432 AMD64PREFETCH ~[r8|QWORD + rdx|QWORD * 1 + 192] instr: 0  <||@
  Comment 719 434 AMD64PREFETCH ~[r8|QWORD + rdx|QWORD * 1 + 256] instr: 0  <||@
  Comment 728 436 AMD64PREFETCH ~[r8|QWORD + rdx|QWORD * 1 + 320] instr: 0  <||@
  Comment 737 438 AMD64PREFETCH ~[r8|QWORD + rdx|QWORD * 1 + 384] instr: 0  <||@
  Comment 746 440 MOV (x: [rdx|QWORD + 12], y: r14|DWORD) size: DWORD  <||@
  Comment 750 442 MOV [rdx|QWORD] y: 1 size: QWORD  <||@
  Comment 757 444 MOV [rdx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed}  <||@
  Comment 757 {meta{HotSpotType<[B, resolved>;compressed}}  <||@
  Comment 764 446 rdx|QWORD[.] = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 764 448 rax|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 767 450 JUMP ~[] destination: B42 -> B45  <||@
  Comment 767 block B45 null  <||@
  Comment 767 470 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 767 472 r13|QWORD[.] = UNCOMPRESSPOINTER (input: r13|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@58cdd6ff encoding: base: 0 shift: 3  <||@
  Comment 771 474 r13|QWORD[*] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 771 476 rdx|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 774 478 r11|QWORD = MOV r14|DWORD size: DWORD  <||@
  Comment 777 480 rdi|QWORD = LEA [r13|QWORD[*] + 16] size: QWORD  <||@
  Comment 781 482 rsi|QWORD = LEA [rdx|QWORD[*] + 16] size: QWORD  <||@
  Comment 785 484 rdx|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 788 486 stack:56|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 793 488 - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: byteDisjointArraycopy(Word,Word,Word)void@0x106812ae0:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL  <||@
  Comment 793 {Field[name=StubRoutines::_arrayof_jbyte_disjoint_arraycopy, type=address, offset=0, address=0x105a7dd00, value=0x106812ae0]:0x106812ae0}  <||@
  Comment 799 490 rax|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 804 492 rax|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@58cdd6ff encoding: base: 0 shift: 3  <||@
  Comment 808 494 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 813 496 MOV (x: [rsi|QWORD[.] + 28], y: rax|DWORD[.]) size: DWORD  <||@
  Comment 816 498 rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD  <||@
  Comment 820 500 r10|QWORD = MOVE stack:48|QWORD moveKind: QWORD  <||@
  Comment 825 502 MOVB (x: [rsi|QWORD[*] + r10|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 829 504 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 838 12  <||@
  Comment 848 block B18 null  <||@
  Comment 848 214 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 848 216 xmm0|V256_DWORD[........] = L oc: SIMD<null,null,null,null,null,null,null,null>  <||@
  Comment 852 218 r9|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 859 220 JUMP ~[] destination: B18 -> B19  <||@
  Comment 859 block B19 loop 0 depth 1 header:596|LoopBegin  <||@
  Comment 859 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 864 224 J (address: [rdi|QWORD[.] + r9|QWORD * 4], input: xmm0|V256_DWORD[........]) nZ: YMM oh: VMOVDQU  <||@
  Comment 870 226 r9|QWORD = LEA [r9|QWORD + 8] size: QWORD  <||@
  Comment 874 228 CMP (x: r9|QWORD, y: r8|QWORD) size: QWORD  <||@
  Comment 877 230 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B19 -> B21 falseDestination: B19 -> B19  <||@
  Comment 884 block B44 null  <||@
  Comment 884 456 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 884 458 rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>}  <||@
  Comment 884 {meta{HotSpotType<[B, resolved>}}  <||@
  Comment 894 460 rsi|QWORD = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 897 462 rdx|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 900 464 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 905 466 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:60, 8]  <||@
  Comment 905 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 910 [r13:0, stack:24, stack:32]at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:190) [bci: 60, duringCall: false, rethrow: false]
              |0                  |1  |2                 
     locals:  |stack:32|QWORD[.]  |-  |stack:40|QWORD[.] 
  at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8, duringCall: true, rethrow: false]
              |0                  |1  |2                  |3 
     locals:  |stack:32|QWORD[.]  |-  |stack:40|QWORD[.]  |-   <||@
  Comment 911 468 JUMP ~[] destination: B44 -> B45  <||@
  Comment 916 block B12 null  <||@
  Comment 916 140 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 916 142 r11|QWORD = UNCOMPRESSPOINTER (input: r11|DWORD, ~baseRegister: -) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@58cdd6ff encoding: base: 0 shift: 3  <||@
  Comment 920 144 rsi|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 923 146 rdx|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 926 148 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 931 150 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:39, 8]  <||@
  Comment 931 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 936 [r13:0, stack:24, stack:32]at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:187) [bci: 39, duringCall: false, rethrow: false]
              |0                  |1  |2                 
     locals:  |stack:32|QWORD[.]  |-  |stack:40|QWORD[.] 
  at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8, duringCall: true, rethrow: false]
              |0                  |1  |2                  |3 
     locals:  |stack:32|QWORD[.]  |-  |stack:40|QWORD[.]  |-   <||@
  Comment 937 152 r11|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 940 154 r10|QWORD = MOVE stack:48|QWORD moveKind: QWORD  <||@
  Comment 945 156 rcx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 950 158 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 955 160 JUMP ~[] destination: B12 -> B14  <||@
  Comment 960 block B46 null  <||@
  Comment 960 506 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 960 508 MOV [r15|QWORD + 668] y: -62515 size: DWORD  <||@
  Comment 971 510 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 978 512 DEOPT info [bci:54, 8]  <||@
  Comment 978 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 983 [r11:0, stack:24, stack:32]at org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:188) [bci: 54, duringCall: false, rethrow: false]
              |0                  |1             |2                 
     locals:  |stack:32|QWORD[.]  |-             |stack:40|QWORD[.] 
     stack:   |stack:32|QWORD[.]  |r11|QWORD[.]  |                  
  at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:165) [bci: 8, duringCall: true, rethrow: false]
              |0                  |1  |2                  |3 
     locals:  |stack:32|QWORD[.]  |-  |stack:40|QWORD[.]  |-   <||@
  Comment 984 block B49 null  <||@
  Comment 984 530 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 984 532 r10|DWORD = MOVE input: int[-54803|0xffffffffffff29ed]  <||@
  Comment 990 534 JUMP ~[] destination: B49 -> B50  <||@
  Comment 990 block B50 null  <||@
  Comment 990 536 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 990 538 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 997 540 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1004 542 DEOPT info [bci:29, 3]  <||@
  Comment 1004 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 1009 [rcx:0, rsi:0]at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:156) [bci: 29, duringCall: false, rethrow: false]
              |0             |1  |2        
     locals:  |rsi|QWORD[.]  |-  |r8|DWORD 
  at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:164) [bci: 3, duringCall: true, rethrow: false]
              |0             |1  |2             |3 
     locals:  |rsi|QWORD[.]  |-  |rcx|QWORD[.]  |-   <||@
  Comment 1010 block B6 null  <||@
  Comment 1010 64 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1010 66 r10|DWORD = MOVE input: int[-48659|0xffffffffffff41ed]  <||@
  Comment 1016 68 JUMP ~[] destination: B6 -> B50  <||@
  Comment 1018 block B51 null  <||@
  Comment 1018 544 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1018 546 MOV [r15|QWORD + 668] y: -69907 size: DWORD  <||@
  Comment 1029 548 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1036 550 DEOPT info [bci:0]  <||@
  Comment 1036 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 1041 [rdx:0, stack:24, stack:32]at org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:164) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1             |2                  |3        
     locals:  |stack:32|QWORD[.]  |rdx|QWORD[.]  |stack:40|QWORD[.]  |r8|DWORD   <||@
  Comment 1042 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 1042 4  <||@
  Comment 1048 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 1048 5  <||@
  HexCodeFile>>> <|@
end_nmethod
