begin_compilation
  name " HotSpotCompilation-10103[java.util.ArrayList$ListItr.previous()]"
  method "HotSpotCompilation-10103[java.util.ArrayList$ListItr.previous()]"
  date 1527005237879
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a134 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: a134  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Ljava/util/ArrayList$ListItr;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?2 v142 v144 v145 v146 v149 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v142 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a134 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a134 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList$Itr.this$0
nodeSourcePosition: at java.util.ArrayList$Itr.checkForComodification(ArrayList.java:908) [bci: 1]
at java.util.ArrayList$ListItr.previous(ArrayList.java:936) [bci: 1]
nullCheck: false
stamp: n# Ljava/util/ArrayList;
=== Inputs ===
stateBefore: - 
guard: - 
address: v142 
=== Succesors ===
next: i135 
=== Usages ===
v143 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v142 #next: i135  <|@  <|@
tid ?2 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<ArrayList$ListItr.previous()>
duringCall: false
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: ArrayList.java
sourceLine: 936
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - 
=== Succesors ===
=== Usages ===
v121 i135 a139 i140 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - -  <|@  <|@
f <@~|@floating>@ <|@
tid v143 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a134 
=== Succesors ===
=== Usages ===
i135 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a134  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i135 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractList.modCount
nodeSourcePosition: at java.util.ArrayList$Itr.checkForComodification(ArrayList.java:908) [bci: 4]
at java.util.ArrayList$ListItr.previous(ArrayList.java:936) [bci: 1]
nullCheck: true
stamp: i32
=== Inputs ===
stateBefore: ?2 
guard: - 
address: v143 
=== Succesors ===
next: i136 
=== Usages ===
v27 
=== Predecessor ===
a134 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?2 guard: - address: v143 #next: i136  <|@  <|@
f <@~|@floating>@ <|@
tid v144 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i136 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i136 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList$Itr.expectedModCount
nodeSourcePosition: at java.util.ArrayList$Itr.checkForComodification(ArrayList.java:908) [bci: 8]
at java.util.ArrayList$ListItr.previous(ArrayList.java:936) [bci: 1]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v144 
=== Succesors ===
next: v94 
=== Usages ===
v27 
=== Predecessor ===
i135 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v144 #next: v94  <|@  <|@
f <@~|@floating>@ <|@
tid v27 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.ArrayList$Itr.checkForComodification(ArrayList.java:908) [bci: 11]
at java.util.ArrayList$ListItr.previous(ArrayList.java:936) [bci: 1]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i135 
y: i136 
=== Succesors ===
=== Usages ===
v94 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i135 y: i136  <|@  <|@
f <@*|@fixed>@ <|@
tid v94 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$Itr.checkForComodification(ArrayList.java:908) [bci: 11]
at java.util.ArrayList$ListItr.previous(ArrayList.java:936) [bci: 1]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v27 
=== Succesors ===
trueSuccessor: v91 
falseSuccessor: v93 
=== Usages ===
=== Predecessor ===
i136 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v27 #trueSuccessor: v91 #falseSuccessor: v93  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v91 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$Itr.checkForComodification(ArrayList.java:908) [bci: 11]
at java.util.ArrayList$ListItr.previous(ArrayList.java:936) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: i137 
=== Usages ===
=== Predecessor ===
v94 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i137  <|@  <|@
f <@~|@floating>@ <|@
tid v145 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i137 v63 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i137 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList$Itr.cursor
nodeSourcePosition: at java.util.ArrayList$ListItr.previous(ArrayList.java:937) [bci: 5]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v145 
=== Succesors ===
next: v98 
=== Usages ===
i9 
=== Predecessor ===
v91 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v145 #next: v98  <|@  <|@
f <@~|@floating>@ <|@
tid i8 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.ArrayList$ListItr.previous(ArrayList.java:937) [bci: 9]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1] ⇊00000000ffffffff
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i9 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i9 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.util.ArrayList$ListItr.previous(ArrayList.java:937) [bci: 9]
stamp: i32
=== Inputs ===
x: i137 
y: i8 
=== Succesors ===
=== Usages ===
v11 v16 v63 v68 v66 v150 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i137 y: i8  <|@  <|@
f <@~|@floating>@ <|@
tid i10 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.ArrayList$ListItr.previous(ArrayList.java:938) [bci: 12]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v11 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v11 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.ArrayList$ListItr.previous(ArrayList.java:938) [bci: 12]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i9 
y: i10 
=== Succesors ===
=== Usages ===
v98 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i9 y: i10  <|@  <|@
f <@*|@fixed>@ <|@
tid v98 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$ListItr.previous(ArrayList.java:938) [bci: 12]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v11 
=== Succesors ===
trueSuccessor: v97 
falseSuccessor: v95 
=== Usages ===
=== Predecessor ===
i137 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v11 #trueSuccessor: v97 #falseSuccessor: v95  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B9" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v97 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$ListItr.previous(ArrayList.java:938) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
next: v122 
=== Usages ===
=== Predecessor ===
v98 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v122  <|@  <|@
f <@~|@floating>@ <|@
tid i123 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -11795
stableDimension: 0
stamp: i32 [-11795] ⇊00000000ffffd1ed ⇈00000000ffffd1ed
stampKind: i32
value: int[-11795|0xffffffffffffd1ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i119 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v122 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v115 
=== Predecessor ===
v97 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v95 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$ListItr.previous(ArrayList.java:938) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
next: a138 
=== Usages ===
=== Predecessor ===
v98 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a138  <|@  <|@
f <@~|@floating>@ <|@
tid v146 <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a138 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a138 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList$ListItr.this$0
nodeSourcePosition: at java.util.ArrayList$ListItr.previous(ArrayList.java:940) [bci: 24]
nullCheck: false
stamp: n# Ljava/util/ArrayList;
=== Inputs ===
stateBefore: - 
guard: - 
address: v146 
=== Succesors ===
next: a139 
=== Usages ===
v147 
=== Predecessor ===
v95 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v146 #next: a139  <|@  <|@
f <@~|@floating>@ <|@
tid v147 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a138 
=== Succesors ===
=== Usages ===
a139 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a138  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a139 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList.elementData
nodeSourcePosition: at java.util.ArrayList$ListItr.previous(ArrayList.java:940) [bci: 27]
nullCheck: true
stamp: n [Ljava/lang/Object;
=== Inputs ===
stateBefore: ?2 
guard: - 
address: v147 
=== Succesors ===
next: i140 
=== Usages ===
a56 v148 
=== Predecessor ===
a138 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?2 guard: - address: v147 #next: i140  <|@  <|@
f <@~|@floating>@ <|@
tid v148 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a139 
=== Succesors ===
=== Usages ===
i140 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a139  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i140 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.ArrayList$ListItr.previous(ArrayList.java:941) [bci: 33]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?2 
guard: - 
address: v148 
=== Succesors ===
next: v110 
=== Usages ===
v16 v68 
=== Predecessor ===
a139 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?2 guard: - address: v148 #next: v110  <|@  <|@
f <@~|@floating>@ <|@
tid v16 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.ArrayList$ListItr.previous(ArrayList.java:941) [bci: 34]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i9 
y: i140 
=== Succesors ===
=== Usages ===
v110 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i9 y: i140  <|@  <|@
f <@*|@fixed>@ <|@
tid v110 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$ListItr.previous(ArrayList.java:941) [bci: 34]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v16 
=== Succesors ===
trueSuccessor: v107 
falseSuccessor: v109 
=== Usages ===
=== Predecessor ===
i140 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v16 #trueSuccessor: v107 #falseSuccessor: v109  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v107 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$ListItr.previous(ArrayList.java:941) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: v114 
=== Usages ===
=== Predecessor ===
v110 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v114  <|@  <|@
f <@~|@floating>@ <|@
tid v68 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.ArrayList$ListItr.previous(ArrayList.java:944) [bci: 57]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i9 
y: i140 
=== Succesors ===
=== Usages ===
v114 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i9 y: i140  <|@  <|@
f <@*|@fixed>@ <|@
tid v114 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$ListItr.previous(ArrayList.java:944) [bci: 57]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v68 
=== Succesors ===
trueSuccessor: v111 
falseSuccessor: v113 
=== Usages ===
=== Predecessor ===
v107 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v68 #trueSuccessor: v111 #falseSuccessor: v113  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v111 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$ListItr.previous(ArrayList.java:944) [bci: 57]
stamp: void
=== Inputs ===
=== Succesors ===
next: v63 
=== Usages ===
a141 
=== Predecessor ===
v114 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v63  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v63 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: ArrayList$Itr.cursor
nodeSourcePosition: at java.util.ArrayList$ListItr.previous(ArrayList.java:943) [bci: 47]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v145 
value: i9 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v66 
=== Usages ===
=== Predecessor ===
v111 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v145 value: i9 stateAfter: - lastLocationAccess: - #next: v66  <|@  <|@
f <@~|@floating>@ <|@
tid v149 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v66 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v66 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: ArrayList$Itr.lastRet
nodeSourcePosition: at java.util.ArrayList$ListItr.previous(ArrayList.java:944) [bci: 54]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v149 
value: i9 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a141 
=== Usages ===
=== Predecessor ===
v63 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v149 value: i9 stateAfter: - lastLocationAccess: - #next: a141  <|@  <|@
f <@~|@floating>@ <|@
tid a56 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.ArrayList$ListItr.previous(ArrayList.java:940) [bci: 27]
op: Uncompress
stamp: a [Ljava/lang/Object;
=== Inputs ===
value: a139 
=== Succesors ===
=== Usages ===
v150 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a139  <|@  <|@
f <@~|@floating>@ <|@
tid v150 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a56 
index: i9 
=== Succesors ===
=== Usages ===
a141 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a56 index: i9  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a141 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nodeSourcePosition: at java.util.ArrayList$ListItr.previous(ArrayList.java:944) [bci: 57]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: v111 
address: v150 
=== Succesors ===
next: v23 
=== Usages ===
a77 
=== Predecessor ===
v66 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v111 address: v150 #next: v23  <|@  <|@
f <@~|@floating>@ <|@
tid a77 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.ArrayList$ListItr.previous(ArrayList.java:944) [bci: 57]
op: Uncompress
stamp: a Ljava/lang/Object;
=== Inputs ===
value: a141 
=== Succesors ===
=== Usages ===
v23 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a141  <|@  <|@
f <@*|@fixed>@ <|@
tid v23 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$ListItr.previous(ArrayList.java:944) [bci: 58]
stamp: void
=== Inputs ===
result: a77 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
a141 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a77 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B9" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v113 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$ListItr.previous(ArrayList.java:944) [bci: 57]
stamp: void
=== Inputs ===
=== Succesors ===
next: v132 
=== Usages ===
=== Predecessor ===
v114 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v132  <|@  <|@
f <@~|@floating>@ <|@
tid i133 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -17691
stableDimension: 0
stamp: i32 [-17691] ⇊00000000ffffbae5 ⇈00000000ffffbae5
stampKind: i32
value: int[-17691|0xffffffffffffbae5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i119 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v132 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v115 
=== Predecessor ===
v113 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B9" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v109 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$ListItr.previous(ArrayList.java:941) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: v130 
=== Usages ===
=== Predecessor ===
v110 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v130  <|@  <|@
f <@~|@floating>@ <|@
tid i131 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -15891
stableDimension: 0
stamp: i32 [-15891] ⇊00000000ffffc1ed ⇈00000000ffffc1ed
stampKind: i32
value: int[-15891|0xffffffffffffc1ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i119 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v130 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v115 
=== Predecessor ===
v109 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B9" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v93 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$Itr.checkForComodification(ArrayList.java:908) [bci: 11]
at java.util.ArrayList$ListItr.previous(ArrayList.java:936) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v124 
=== Usages ===
=== Predecessor ===
v94 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v124  <|@  <|@
f <@~|@floating>@ <|@
tid i125 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -11027
stableDimension: 0
stamp: i32 [-11027] ⇊00000000ffffd4ed ⇈00000000ffffd4ed
stampKind: i32
value: int[-11027|0xffffffffffffd4ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i119 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v124 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v115 
=== Predecessor ===
v93 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B2" "B8" "B7" "B6" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i119 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-17691 - -8971] ⇊00000000ffff80e5 ⇈00000000fffffffd
valueDescription: i32
=== Inputs ===
merge: v115 
values: i123 i125 i131 i133 
=== Succesors ===
=== Usages ===
v121 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v115 values: i123 i125 i131 i133  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v115 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v122 v124 v130 v132 
=== Succesors ===
next: v121 
=== Usages ===
i119 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v122 v124 v130 v132 #next: v121  <|@  <|@
f <@~|@floating>@ <|@
tid a118 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v121 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v121 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?2 
actionAndReason: i119 
speculation: a118 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v115 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?2 actionAndReason: i119 speculation: a118  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a134 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: a134  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Ljava/util/ArrayList$ListItr;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?2 v142 v144 v145 v146 v149 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v142 <|@
result [v0|QWORD[.] + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a134 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a134 <|@
result v1|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList$Itr.this$0
nodeSourcePosition: at java.util.ArrayList$Itr.checkForComodification(ArrayList.java:908) [bci: 1]
at java.util.ArrayList$ListItr.previous(ArrayList.java:936) [bci: 1]
nullCheck: false
stamp: n# Ljava/util/ArrayList;
=== Inputs ===
stateBefore: - 
guard: - 
address: v142 
=== Succesors ===
next: i135 
=== Usages ===
v143 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v142 #next: i135  <|@  <|@
tid ?2 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<ArrayList$ListItr.previous()>
duringCall: false
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: ArrayList.java
sourceLine: 936
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - 
=== Succesors ===
=== Usages ===
v121 i135 a139 i140 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - -  <|@  <|@
f <@~|@floating>@ <|@
tid v143 <|@
result [v1|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a134 
=== Succesors ===
=== Usages ===
i135 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a134  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i135 <|@
result v2|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractList.modCount
nodeSourcePosition: at java.util.ArrayList$Itr.checkForComodification(ArrayList.java:908) [bci: 4]
at java.util.ArrayList$ListItr.previous(ArrayList.java:936) [bci: 1]
nullCheck: true
stamp: i32
=== Inputs ===
stateBefore: ?2 
guard: - 
address: v143 
=== Succesors ===
next: i136 
=== Usages ===
v27 
=== Predecessor ===
a134 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?2 guard: - address: v143 #next: i136  <|@  <|@
f <@~|@floating>@ <|@
tid v144 <|@
result [v0|QWORD[.] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i136 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i136 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList$Itr.expectedModCount
nodeSourcePosition: at java.util.ArrayList$Itr.checkForComodification(ArrayList.java:908) [bci: 8]
at java.util.ArrayList$ListItr.previous(ArrayList.java:936) [bci: 1]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v144 
=== Succesors ===
next: v94 
=== Usages ===
v27 
=== Predecessor ===
i135 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v144 #next: v94  <|@  <|@
f <@~|@floating>@ <|@
tid v27 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.ArrayList$Itr.checkForComodification(ArrayList.java:908) [bci: 11]
at java.util.ArrayList$ListItr.previous(ArrayList.java:936) [bci: 1]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i135 
y: i136 
=== Succesors ===
=== Usages ===
v94 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i135 y: i136  <|@  <|@
f <@*|@fixed>@ <|@
tid v94 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$Itr.checkForComodification(ArrayList.java:908) [bci: 11]
at java.util.ArrayList$ListItr.previous(ArrayList.java:936) [bci: 1]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v27 
=== Succesors ===
trueSuccessor: v91 
falseSuccessor: v93 
=== Usages ===
=== Predecessor ===
i136 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v27 #trueSuccessor: v91 #falseSuccessor: v93  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@3bdda54c slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD[.] = MOV [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayList$ListItr.previous(ArrayList.java:936) [bci: 0]
locals: v0|QWORD[.] - - 
>@ <|@ instruction v2|DWORD = MOV [v1|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v2|DWORD, y: [v0|QWORD[.] + 20]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v91 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$Itr.checkForComodification(ArrayList.java:908) [bci: 11]
at java.util.ArrayList$ListItr.previous(ArrayList.java:936) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: i137 
=== Usages ===
=== Predecessor ===
v94 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i137  <|@  <|@
f <@~|@floating>@ <|@
tid v145 <|@
result [v0|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i137 v63 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i137 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList$Itr.cursor
nodeSourcePosition: at java.util.ArrayList$ListItr.previous(ArrayList.java:937) [bci: 5]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v145 
=== Succesors ===
next: v98 
=== Usages ===
i9 
=== Predecessor ===
v91 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v145 #next: v98  <|@  <|@
f <@~|@floating>@ <|@
tid i8 <|@
result int[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.ArrayList$ListItr.previous(ArrayList.java:937) [bci: 9]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1] ⇊00000000ffffffff
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i9 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i9 <|@
result v4|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.util.ArrayList$ListItr.previous(ArrayList.java:937) [bci: 9]
stamp: i32
=== Inputs ===
x: i137 
y: i8 
=== Succesors ===
=== Usages ===
v11 v16 v63 v68 v66 v150 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i137 y: i8  <|@  <|@
f <@~|@floating>@ <|@
tid i10 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.ArrayList$ListItr.previous(ArrayList.java:938) [bci: 12]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v11 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v11 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.ArrayList$ListItr.previous(ArrayList.java:938) [bci: 12]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i9 
y: i10 
=== Succesors ===
=== Usages ===
v98 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i9 y: i10  <|@  <|@
f <@*|@fixed>@ <|@
tid v98 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$ListItr.previous(ArrayList.java:938) [bci: 12]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v11 
=== Succesors ===
trueSuccessor: v97 
falseSuccessor: v95 
=== Usages ===
=== Predecessor ===
i137 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v11 #trueSuccessor: v97 #falseSuccessor: v95  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = ADD (x: v3|DWORD, ~y: [v0|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v4|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B9" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v97 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$ListItr.previous(ArrayList.java:938) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
next: v122 
=== Usages ===
=== Predecessor ===
v98 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v122  <|@  <|@
f <@~|@floating>@ <|@
tid i123 <|@
result int[-11795|0xffffffffffffd1ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -11795
stableDimension: 0
stamp: i32 [-11795] ⇊00000000ffffd1ed ⇈00000000ffffd1ed
stampKind: i32
value: int[-11795|0xffffffffffffd1ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i119 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v122 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v115 
=== Predecessor ===
v97 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-11795|0xffffffffffffd1ed]] destination: B2 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v95 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$ListItr.previous(ArrayList.java:938) [bci: 12]
stamp: void
=== Inputs ===
=== Succesors ===
next: a138 
=== Usages ===
=== Predecessor ===
v98 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a138  <|@  <|@
f <@~|@floating>@ <|@
tid v146 <|@
result [v0|QWORD[.] + 28] <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a138 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a138 <|@
result v5|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList$ListItr.this$0
nodeSourcePosition: at java.util.ArrayList$ListItr.previous(ArrayList.java:940) [bci: 24]
nullCheck: false
stamp: n# Ljava/util/ArrayList;
=== Inputs ===
stateBefore: - 
guard: - 
address: v146 
=== Succesors ===
next: a139 
=== Usages ===
v147 
=== Predecessor ===
v95 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v146 #next: a139  <|@  <|@
f <@~|@floating>@ <|@
tid v147 <|@
result [v5|DWORD[.] * 8 + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a138 
=== Succesors ===
=== Usages ===
a139 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a138  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a139 <|@
result v6|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList.elementData
nodeSourcePosition: at java.util.ArrayList$ListItr.previous(ArrayList.java:940) [bci: 27]
nullCheck: true
stamp: n [Ljava/lang/Object;
=== Inputs ===
stateBefore: ?2 
guard: - 
address: v147 
=== Succesors ===
next: i140 
=== Usages ===
a56 v148 
=== Predecessor ===
a138 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?2 guard: - address: v147 #next: i140  <|@  <|@
f <@~|@floating>@ <|@
tid v148 <|@
result [v6|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a139 
=== Succesors ===
=== Usages ===
i140 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a139  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i140 <|@
result v7|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.ArrayList$ListItr.previous(ArrayList.java:941) [bci: 33]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?2 
guard: - 
address: v148 
=== Succesors ===
next: v110 
=== Usages ===
v16 v68 
=== Predecessor ===
a139 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?2 guard: - address: v148 #next: v110  <|@  <|@
f <@~|@floating>@ <|@
tid v16 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.ArrayList$ListItr.previous(ArrayList.java:941) [bci: 34]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i9 
y: i140 
=== Succesors ===
=== Usages ===
v110 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i9 y: i140  <|@  <|@
f <@*|@fixed>@ <|@
tid v110 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$ListItr.previous(ArrayList.java:941) [bci: 34]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v16 
=== Succesors ===
trueSuccessor: v107 
falseSuccessor: v109 
=== Usages ===
=== Predecessor ===
i140 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v16 #trueSuccessor: v107 #falseSuccessor: v109  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v5|DWORD[.] = MOV [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayList$ListItr.previous(ArrayList.java:936) [bci: 0]
locals: v0|QWORD[.] - - 
>@ <|@ instruction v6|DWORD[.] = MOV [v5|DWORD[.] * 8 + 20] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayList$ListItr.previous(ArrayList.java:936) [bci: 0]
locals: v0|QWORD[.] - - 
>@ <|@ instruction v7|DWORD = MOV [v6|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v7|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v107 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$ListItr.previous(ArrayList.java:941) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: v114 
=== Usages ===
=== Predecessor ===
v110 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v114  <|@  <|@
f <@~|@floating>@ <|@
tid v68 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.ArrayList$ListItr.previous(ArrayList.java:944) [bci: 57]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i9 
y: i140 
=== Succesors ===
=== Usages ===
v114 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i9 y: i140  <|@  <|@
f <@*|@fixed>@ <|@
tid v114 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$ListItr.previous(ArrayList.java:944) [bci: 57]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v68 
=== Succesors ===
trueSuccessor: v111 
falseSuccessor: v113 
=== Usages ===
=== Predecessor ===
v107 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v68 #trueSuccessor: v111 #falseSuccessor: v113  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v7|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v111 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$ListItr.previous(ArrayList.java:944) [bci: 57]
stamp: void
=== Inputs ===
=== Succesors ===
next: v63 
=== Usages ===
a141 
=== Predecessor ===
v114 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v63  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v63 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: ArrayList$Itr.cursor
nodeSourcePosition: at java.util.ArrayList$ListItr.previous(ArrayList.java:943) [bci: 47]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v145 
value: i9 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v66 
=== Usages ===
=== Predecessor ===
v111 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v145 value: i9 stateAfter: - lastLocationAccess: - #next: v66  <|@  <|@
f <@~|@floating>@ <|@
tid v149 <|@
result [v0|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v66 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v66 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: ArrayList$Itr.lastRet
nodeSourcePosition: at java.util.ArrayList$ListItr.previous(ArrayList.java:944) [bci: 54]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v149 
value: i9 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a141 
=== Usages ===
=== Predecessor ===
v63 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v149 value: i9 stateAfter: - lastLocationAccess: - #next: a141  <|@  <|@
f <@~|@floating>@ <|@
tid a56 <|@
result v8|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.ArrayList$ListItr.previous(ArrayList.java:940) [bci: 27]
op: Uncompress
stamp: a [Ljava/lang/Object;
=== Inputs ===
value: a139 
=== Succesors ===
=== Usages ===
v150 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a139  <|@  <|@
f <@~|@floating>@ <|@
tid v150 <|@
result [v8|QWORD[.] + v4|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a56 
index: i9 
=== Succesors ===
=== Usages ===
a141 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a56 index: i9  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a141 <|@
result v9|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nodeSourcePosition: at java.util.ArrayList$ListItr.previous(ArrayList.java:944) [bci: 57]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: v111 
address: v150 
=== Succesors ===
next: v23 
=== Usages ===
a77 
=== Predecessor ===
v66 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v111 address: v150 #next: v23  <|@  <|@
f <@~|@floating>@ <|@
tid a77 <|@
result v10|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.ArrayList$ListItr.previous(ArrayList.java:944) [bci: 57]
op: Uncompress
stamp: a Ljava/lang/Object;
=== Inputs ===
value: a141 
=== Succesors ===
=== Usages ===
v23 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a141  <|@  <|@
f <@*|@fixed>@ <|@
tid v23 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$ListItr.previous(ArrayList.java:944) [bci: 58]
stamp: void
=== Inputs ===
result: a77 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
a141 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a77 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|QWORD[.] = UNCOMPRESSPOINTER (input: v6|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@45885cab encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v9|DWORD[.] = MOV [v8|QWORD[.] + v4|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|QWORD[.] = UNCOMPRESSPOINTER (input: v9|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@45885cab encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B9" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v113 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$ListItr.previous(ArrayList.java:944) [bci: 57]
stamp: void
=== Inputs ===
=== Succesors ===
next: v132 
=== Usages ===
=== Predecessor ===
v114 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v132  <|@  <|@
f <@~|@floating>@ <|@
tid i133 <|@
result int[-17691|0xffffffffffffbae5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -17691
stableDimension: 0
stamp: i32 [-17691] ⇊00000000ffffbae5 ⇈00000000ffffbae5
stampKind: i32
value: int[-17691|0xffffffffffffbae5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i119 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v132 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v115 
=== Predecessor ===
v113 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-17691|0xffffffffffffbae5]] destination: B6 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B9" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v109 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$ListItr.previous(ArrayList.java:941) [bci: 34]
stamp: void
=== Inputs ===
=== Succesors ===
next: v130 
=== Usages ===
=== Predecessor ===
v110 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v130  <|@  <|@
f <@~|@floating>@ <|@
tid i131 <|@
result int[-15891|0xffffffffffffc1ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -15891
stableDimension: 0
stamp: i32 [-15891] ⇊00000000ffffc1ed ⇈00000000ffffc1ed
stampKind: i32
value: int[-15891|0xffffffffffffc1ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i119 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v130 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v115 
=== Predecessor ===
v109 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-15891|0xffffffffffffc1ed]] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B9" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v93 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$Itr.checkForComodification(ArrayList.java:908) [bci: 11]
at java.util.ArrayList$ListItr.previous(ArrayList.java:936) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v124 
=== Usages ===
=== Predecessor ===
v94 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v124  <|@  <|@
f <@~|@floating>@ <|@
tid i125 <|@
result int[-11027|0xffffffffffffd4ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -11027
stableDimension: 0
stamp: i32 [-11027] ⇊00000000ffffd4ed ⇈00000000ffffd4ed
stampKind: i32
value: int[-11027|0xffffffffffffd4ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i119 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v124 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v115 
=== Predecessor ===
v93 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-11027|0xffffffffffffd4ed]] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B2" "B8" "B7" "B6" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i119 <|@
result v11|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-17691 - -8971] ⇊00000000ffff80e5 ⇈00000000fffffffd
valueDescription: i32
=== Inputs ===
merge: v115 
values: i123 i125 i131 i133 
=== Succesors ===
=== Usages ===
v121 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v115 values: i123 i125 i131 i133  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v115 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v122 v124 v130 v132 
=== Succesors ===
next: v121 
=== Usages ===
i119 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v122 v124 v130 v132 #next: v121  <|@  <|@
f <@~|@floating>@ <|@
tid a118 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v121 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v121 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?2 
actionAndReason: i119 
speculation: a118 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v115 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?2 actionAndReason: i119 speculation: a118  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v11|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v11|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayList$ListItr.previous(ArrayList.java:936) [bci: 0]
locals: v0|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@3bdda54c slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD[.] = MOV [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayList$ListItr.previous(ArrayList.java:936) [bci: 0]
locals: v0|QWORD[.] - - 
>@ <|@ instruction v2|DWORD = MOV [v1|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v2|DWORD, y: [v0|QWORD[.] + 20]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = ADD (x: v3|DWORD, ~y: [v0|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v4|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v5|DWORD[.] = MOV [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayList$ListItr.previous(ArrayList.java:936) [bci: 0]
locals: v0|QWORD[.] - - 
>@ <|@ instruction v6|DWORD[.] = MOV [v5|DWORD[.] * 8 + 20] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayList$ListItr.previous(ArrayList.java:936) [bci: 0]
locals: v0|QWORD[.] - - 
>@ <|@ instruction v7|DWORD = MOV [v6|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v7|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v7|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|QWORD[.] = UNCOMPRESSPOINTER (input: v6|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@45885cab encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v9|DWORD[.] = MOV [v8|QWORD[.] + v4|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|QWORD[.] = UNCOMPRESSPOINTER (input: v9|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@45885cab encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B9" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-11027|0xffffffffffffd4ed]] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B2" "B8" "B7" "B6" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr   -1  <|@ instruction [v11|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v11|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayList$ListItr.previous(ArrayList.java:936) [bci: 0]
locals: v0|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B9" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-15891|0xffffffffffffc1ed]] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B9" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-11795|0xffffffffffffd1ed]] destination: B2 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B9" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-17691|0xffffffffffffbae5]] destination: B6 -> B9 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokevirtual #3          // java.util.ArrayList$Itr.checkForComodification:()void
     4: aload_0       
     5: getfield      #2          // java.util.ArrayList$Itr.cursor:int
     8: iconst_1      
     9: isub          
    10: istore_1      
    11: iload_1       
    12: ifge          23
    15: new           #5          // java.util.NoSuchElementException
    18: dup           
    19: invokespecial #4          // java.util.NoSuchElementException.<init>:()void
    22: athrow        
    23: aload_0       
    24: getfield      #0          // this$0:java.util.ArrayList
    27: getfield      #5          // java.util.ArrayList.elementData:java.lang.Object[]
    30: astore_2      
    31: iload_1       
    32: aload_2       
    33: arraylength   
    34: if_icmplt     45
    37: new           #8          // java.util.ConcurrentModificationException
    40: dup           
    41: invokespecial #6          // java.util.ConcurrentModificationException.<init>:()void
    44: athrow        
    45: aload_0       
    46: iload_1       
    47: putfield      #2          // java.util.ArrayList$Itr.cursor:int
    50: aload_2       
    51: aload_0       
    52: iload_1       
    53: dup_x1        
    54: putfield      #7          // java.util.ArrayList$Itr.lastRet:int
    57: aaload        
    58: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@3bdda54c slotKind: QWORD <|@ <|@
      nr    8  <|@ instruction rax|DWORD[.] = MOV [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   10  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
java.util.ArrayList$ListItr.previous(ArrayList.java:936) [bci: 0]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = MOV [rax|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   12  <|@ instruction CMP (x: rax|DWORD, y: [rsi|QWORD[.] + 20]) size: DWORD <|@ <|@
      nr   14  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   16  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   18  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr   20  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, ~y: [rsi|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   22  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr   24  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   26  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   28  <|@ instruction r10|DWORD[.] = MOV [rsi|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   30  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
java.util.ArrayList$ListItr.previous(ArrayList.java:936) [bci: 0]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction r10|DWORD[.] = MOV [r10|DWORD[.] * 8 + 20] size: DWORD state [bci:0] <|@ <|@
      nr   32  <|@ st <@st|@reference-map: [rsi:0, r10:0]
live-base-pointers: []
java.util.ArrayList$ListItr.previous(ArrayList.java:936) [bci: 0]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction r11|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   34  <|@ instruction CMP (x: r11|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr   36  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   40  <|@ instruction CMP (x: r11|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr   42  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   46  <|@ instruction MOV (x: [rsi|QWORD[.] + 12], y: rax|DWORD) size: DWORD <|@ <|@
      nr   48  <|@ instruction MOV (x: [rsi|QWORD[.] + 16], y: rax|DWORD) size: DWORD <|@ <|@
      nr   50  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@45885cab encoding: base: 0 shift: 3 <|@ <|@
      nr   52  <|@ instruction rax|DWORD[.] = MOV [r10|QWORD[.] + rax|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   54  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@45885cab encoding: base: 0 shift: 3 <|@ <|@
      nr   58  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B9" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-11027|0xffffffffffffd4ed] // MoveResolver resolve mapping <|@ <|@
      nr   62  <|@ instruction JUMP ~[] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B2" "B8" "B7" "B6" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   78  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr   80  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   82  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
java.util.ArrayList$ListItr.previous(ArrayList.java:936) [bci: 0]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B9" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-15891|0xffffffffffffc1ed] // MoveResolver resolve mapping <|@ <|@
      nr   66  <|@ instruction JUMP ~[] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B9" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-11795|0xffffffffffffd1ed] // MoveResolver resolve mapping <|@ <|@
      nr   70  <|@ instruction JUMP ~[] destination: B2 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B9" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-17691|0xffffffffffffbae5] // MoveResolver resolve mapping <|@ <|@
      nr   74  <|@ instruction JUMP ~[] destination: B6 -> B9 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokevirtual #3          // java.util.ArrayList$Itr.checkForComodification:()void
     4: aload_0       
     5: getfield      #2          // java.util.ArrayList$Itr.cursor:int
     8: iconst_1      
     9: isub          
    10: istore_1      
    11: iload_1       
    12: ifge          23
    15: new           #5          // java.util.NoSuchElementException
    18: dup           
    19: invokespecial #4          // java.util.NoSuchElementException.<init>:()void
    22: athrow        
    23: aload_0       
    24: getfield      #0          // this$0:java.util.ArrayList
    27: getfield      #5          // java.util.ArrayList.elementData:java.lang.Object[]
    30: astore_2      
    31: iload_1       
    32: aload_2       
    33: arraylength   
    34: if_icmplt     45
    37: new           #8          // java.util.ConcurrentModificationException
    40: dup           
    41: invokespecial #6          // java.util.ConcurrentModificationException.<init>:()void
    44: athrow        
    45: aload_0       
    46: iload_1       
    47: putfield      #2          // java.util.ArrayList$Itr.cursor:int
    50: aload_2       
    51: aload_0       
    52: iload_1       
    53: dup_x1        
    54: putfield      #7          // java.util.ArrayList$Itr.lastRet:int
    57: aaload        
    58: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@3bdda54c slotKind: QWORD <|@ <|@
      nr    8  <|@ instruction rax|DWORD[.] = MOV [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   10  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
java.util.ArrayList$ListItr.previous(ArrayList.java:936) [bci: 0]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = MOV [rax|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   12  <|@ instruction CMP (x: rax|DWORD, y: [rsi|QWORD[.] + 20]) size: DWORD <|@ <|@
      nr   14  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   16  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   18  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr   20  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, ~y: [rsi|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   22  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr   24  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   26  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   28  <|@ instruction r10|DWORD[.] = MOV [rsi|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   30  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
java.util.ArrayList$ListItr.previous(ArrayList.java:936) [bci: 0]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction r10|DWORD[.] = MOV [r10|DWORD[.] * 8 + 20] size: DWORD state [bci:0] <|@ <|@
      nr   32  <|@ st <@st|@reference-map: [rsi:0, r10:0]
live-base-pointers: []
java.util.ArrayList$ListItr.previous(ArrayList.java:936) [bci: 0]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction r11|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   34  <|@ instruction CMP (x: r11|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr   36  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   40  <|@ instruction CMP (x: r11|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr   42  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   46  <|@ instruction MOV (x: [rsi|QWORD[.] + 12], y: rax|DWORD) size: DWORD <|@ <|@
      nr   48  <|@ instruction MOV (x: [rsi|QWORD[.] + 16], y: rax|DWORD) size: DWORD <|@ <|@
      nr   50  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@45885cab encoding: base: 0 shift: 3 <|@ <|@
      nr   52  <|@ instruction rax|DWORD[.] = MOV [r10|QWORD[.] + rax|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   54  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@45885cab encoding: base: 0 shift: 3 <|@ <|@
      nr   58  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B9" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-11027|0xffffffffffffd4ed] // MoveResolver resolve mapping <|@ <|@
      nr   62  <|@ instruction JUMP ~[] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B2" "B8" "B7" "B6" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   78  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr   80  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   82  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
java.util.ArrayList$ListItr.previous(ArrayList.java:936) [bci: 0]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B9" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-15891|0xffffffffffffc1ed] // MoveResolver resolve mapping <|@ <|@
      nr   66  <|@ instruction JUMP ~[] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B9" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-11795|0xffffffffffffd1ed] // MoveResolver resolve mapping <|@ <|@
      nr   70  <|@ instruction JUMP ~[] destination: B2 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B9" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-17691|0xffffffffffffbae5] // MoveResolver resolve mapping <|@ <|@
      nr   74  <|@ instruction JUMP ~[] destination: B6 -> B9 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokevirtual #3          // java.util.ArrayList$Itr.checkForComodification:()void
     4: aload_0       
     5: getfield      #2          // java.util.ArrayList$Itr.cursor:int
     8: iconst_1      
     9: isub          
    10: istore_1      
    11: iload_1       
    12: ifge          23
    15: new           #5          // java.util.NoSuchElementException
    18: dup           
    19: invokespecial #4          // java.util.NoSuchElementException.<init>:()void
    22: athrow        
    23: aload_0       
    24: getfield      #0          // this$0:java.util.ArrayList
    27: getfield      #5          // java.util.ArrayList.elementData:java.lang.Object[]
    30: astore_2      
    31: iload_1       
    32: aload_2       
    33: arraylength   
    34: if_icmplt     45
    37: new           #8          // java.util.ConcurrentModificationException
    40: dup           
    41: invokespecial #6          // java.util.ConcurrentModificationException.<init>:()void
    44: athrow        
    45: aload_0       
    46: iload_1       
    47: putfield      #2          // java.util.ArrayList$Itr.cursor:int
    50: aload_2       
    51: aload_0       
    52: iload_1       
    53: dup_x1        
    54: putfield      #7          // java.util.ArrayList$Itr.lastRet:int
    57: aaload        
    58: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849c1e203493bc20f85efffffff900f1f80000000000f1f800000000089842400c0feff4883ec1848896c24108b46188b04c50c0000003b46140f855c000000b8ffffffff03460c85c00f8c6e000000448b561c468b14d514000000468b1cd50c000000443bd80f8e49000000443bd80f865000000089460c89461049c1e203418b44821048c1e003488b6c24104883c418850500000000c5f877c341baedd4ffff4589979c0200004d89a7a8020000e8000000009041baedc1ffffebe441baedd1ffffebdc41bae5baffffebd4e80000000090e80000000090  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@3bdda54c slotKind: QWORD  <||@
  Comment 48 8 rax|DWORD[.] = MOV [rsi|QWORD[.] + 24] size: DWORD  <||@
  Comment 51 10 rax|DWORD = MOV [rax|DWORD[.] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 51 [rsi:0]at java.util.ArrayList$ListItr.previous(ArrayList.java:936) [bci: 0, duringCall: false, rethrow: false]
              |0             |1  |2 
     locals:  |rsi|QWORD[.]  |-  |-   <||@
  Comment 51 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 58 12 CMP (x: rax|DWORD, y: [rsi|QWORD[.] + 20]) size: DWORD  <||@
  Comment 61 14 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B8  <||@
  Comment 67 block B1 null  <||@
  Comment 67 16 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 67 18 rax|DWORD = MOVE input: int[-1|0xffffffffffffffff]  <||@
  Comment 72 20 rax|DWORD = ADD (x: rax|DWORD, ~y: [rsi|QWORD[.] + 12]) size: DWORD  <||@
  Comment 75 22 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 77 24 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3  <||@
  Comment 83 block B3 null  <||@
  Comment 83 26 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 83 28 r10|DWORD[.] = MOV [rsi|QWORD[.] + 28] size: DWORD  <||@
  Comment 87 30 r10|DWORD[.] = MOV [r10|DWORD[.] * 8 + 20] size: DWORD state [bci:0]  <||@
  Comment 87 [rsi:0]at java.util.ArrayList$ListItr.previous(ArrayList.java:936) [bci: 0, duringCall: false, rethrow: false]
              |0             |1  |2 
     locals:  |rsi|QWORD[.]  |-  |-   <||@
  Comment 87 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 95 32 r11|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 95 [rsi:0, r10:0]at java.util.ArrayList$ListItr.previous(ArrayList.java:936) [bci: 0, duringCall: false, rethrow: false]
              |0             |1  |2 
     locals:  |rsi|QWORD[.]  |-  |-   <||@
  Comment 95 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 103 34 CMP (x: r11|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 106 36 BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B7  <||@
  Comment 112 block B4 null  <||@
  Comment 112 38 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 112 40 CMP (x: r11|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 115 42 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6  <||@
  Comment 121 block B5 null  <||@
  Comment 121 44 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 121 46 MOV (x: [rsi|QWORD[.] + 12], y: rax|DWORD) size: DWORD  <||@
  Comment 124 48 MOV (x: [rsi|QWORD[.] + 16], y: rax|DWORD) size: DWORD  <||@
  Comment 127 50 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@45885cab encoding: base: 0 shift: 3  <||@
  Comment 131 52 rax|DWORD[.] = MOV [r10|QWORD[.] + rax|DWORD * 4 + 16] size: DWORD  <||@
  Comment 136 54 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@45885cab encoding: base: 0 shift: 3  <||@
  Comment 140 58 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 149 12  <||@
  Comment 159 block B8 null  <||@
  Comment 159 60 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 159 -1 r10|DWORD = MOVE input: int[-11027|0xffffffffffffd4ed]  <||@
  Comment 165 62 JUMP ~[] destination: B8 -> B9  <||@
  Comment 165 block B9 null  <||@
  Comment 165 76 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 165 78 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 172 80 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 179 82 DEOPT info [bci:0]  <||@
  Comment 179 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 184 [rsi:0]at java.util.ArrayList$ListItr.previous(ArrayList.java:936) [bci: 0, duringCall: false, rethrow: false]
              |0             |1  |2 
     locals:  |rsi|QWORD[.]  |-  |-   <||@
  Comment 185 block B7 null  <||@
  Comment 185 64 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 185 -1 r10|DWORD = MOVE input: int[-15891|0xffffffffffffc1ed]  <||@
  Comment 191 66 JUMP ~[] destination: B7 -> B9  <||@
  Comment 193 block B2 null  <||@
  Comment 193 68 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 193 -1 r10|DWORD = MOVE input: int[-11795|0xffffffffffffd1ed]  <||@
  Comment 199 70 JUMP ~[] destination: B2 -> B9  <||@
  Comment 201 block B6 null  <||@
  Comment 201 72 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 201 -1 r10|DWORD = MOVE input: int[-17691|0xffffffffffffbae5]  <||@
  Comment 207 74 JUMP ~[] destination: B6 -> B9  <||@
  Comment 209 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 209 4  <||@
  Comment 215 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 215 5  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-10103[java.util.ArrayList$ListItr.previous()]"
  method "HotSpotCompilation-10103[java.util.ArrayList$ListItr.previous()]"
  date 1527005237938
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 106e1e2a0 448b560849c1e203493bc20f85af7b9eff900f1f80000000000f1f800000000089842400c0feff4883ec1848896c24108b46188b04c50c0000003b46140f855c000000b8ffffffff03460c85c00f8c6e000000448b561c468b14d514000000468b1cd50c000000443bd80f8e49000000443bd80f865000000089460c89461049c1e203418b44821048c1e003488b6c24104883c4188505cb0ca7fdc5f877c341baedd4ffff4589979c0200004d89a7a8020000e8a6929eff9041baedc1ffffebe441baedd1ffffebdc41bae5baffffebd4e8aac2e2ff90e884919eff90f4f4f4  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@3bdda54c slotKind: QWORD  <||@
  Comment 48 8 rax|DWORD[.] = MOV [rsi|QWORD[.] + 24] size: DWORD  <||@
  Comment 51 10 rax|DWORD = MOV [rax|DWORD[.] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 51 [rsi:0]at java.util.ArrayList$ListItr.previous(ArrayList.java:936) [bci: 0, duringCall: false, rethrow: false]
              |0             |1  |2 
     locals:  |rsi|QWORD[.]  |-  |-   <||@
  Comment 51 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 58 12 CMP (x: rax|DWORD, y: [rsi|QWORD[.] + 20]) size: DWORD  <||@
  Comment 61 14 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B8  <||@
  Comment 67 block B1 null  <||@
  Comment 67 16 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 67 18 rax|DWORD = MOVE input: int[-1|0xffffffffffffffff]  <||@
  Comment 72 20 rax|DWORD = ADD (x: rax|DWORD, ~y: [rsi|QWORD[.] + 12]) size: DWORD  <||@
  Comment 75 22 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 77 24 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3  <||@
  Comment 83 block B3 null  <||@
  Comment 83 26 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 83 28 r10|DWORD[.] = MOV [rsi|QWORD[.] + 28] size: DWORD  <||@
  Comment 87 30 r10|DWORD[.] = MOV [r10|DWORD[.] * 8 + 20] size: DWORD state [bci:0]  <||@
  Comment 87 [rsi:0]at java.util.ArrayList$ListItr.previous(ArrayList.java:936) [bci: 0, duringCall: false, rethrow: false]
              |0             |1  |2 
     locals:  |rsi|QWORD[.]  |-  |-   <||@
  Comment 87 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 95 32 r11|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 95 [rsi:0, r10:0]at java.util.ArrayList$ListItr.previous(ArrayList.java:936) [bci: 0, duringCall: false, rethrow: false]
              |0             |1  |2 
     locals:  |rsi|QWORD[.]  |-  |-   <||@
  Comment 95 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 103 34 CMP (x: r11|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 106 36 BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B7  <||@
  Comment 112 block B4 null  <||@
  Comment 112 38 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 112 40 CMP (x: r11|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 115 42 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6  <||@
  Comment 121 block B5 null  <||@
  Comment 121 44 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 121 46 MOV (x: [rsi|QWORD[.] + 12], y: rax|DWORD) size: DWORD  <||@
  Comment 124 48 MOV (x: [rsi|QWORD[.] + 16], y: rax|DWORD) size: DWORD  <||@
  Comment 127 50 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@45885cab encoding: base: 0 shift: 3  <||@
  Comment 131 52 rax|DWORD[.] = MOV [r10|QWORD[.] + rax|DWORD * 4 + 16] size: DWORD  <||@
  Comment 136 54 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@45885cab encoding: base: 0 shift: 3  <||@
  Comment 140 58 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 149 12  <||@
  Comment 159 block B8 null  <||@
  Comment 159 60 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 159 -1 r10|DWORD = MOVE input: int[-11027|0xffffffffffffd4ed]  <||@
  Comment 165 62 JUMP ~[] destination: B8 -> B9  <||@
  Comment 165 block B9 null  <||@
  Comment 165 76 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 165 78 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 172 80 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 179 82 DEOPT info [bci:0]  <||@
  Comment 179 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 184 [rsi:0]at java.util.ArrayList$ListItr.previous(ArrayList.java:936) [bci: 0, duringCall: false, rethrow: false]
              |0             |1  |2 
     locals:  |rsi|QWORD[.]  |-  |-   <||@
  Comment 185 block B7 null  <||@
  Comment 185 64 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 185 -1 r10|DWORD = MOVE input: int[-15891|0xffffffffffffc1ed]  <||@
  Comment 191 66 JUMP ~[] destination: B7 -> B9  <||@
  Comment 193 block B2 null  <||@
  Comment 193 68 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 193 -1 r10|DWORD = MOVE input: int[-11795|0xffffffffffffd1ed]  <||@
  Comment 199 70 JUMP ~[] destination: B2 -> B9  <||@
  Comment 201 block B6 null  <||@
  Comment 201 72 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 201 -1 r10|DWORD = MOVE input: int[-17691|0xffffffffffffbae5]  <||@
  Comment 207 74 JUMP ~[] destination: B6 -> B9  <||@
  Comment 209 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 209 4  <||@
  Comment 215 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 215 5  <||@
  HexCodeFile>>> <|@
end_nmethod
