begin_compilation
  name " HotSpotCompilation-8724[java.nio.charset.CharsetEncoder.replaceWith(byte[])]"
  method "HotSpotCompilation-8724[java.nio.charset.CharsetEncoder.replaceWith(byte[])]"
  date 1527005196597
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: i424 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: i424  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Lsun/nio/cs/UTF_8$Encoder;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v443 v447 v31 v445 j229 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a# [B
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v442 v444 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?3 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<CharsetEncoder.replaceWith(byte[])>
duringCall: false
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: CharsetEncoder.java
sourceLine: 288
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 - 
=== Succesors ===
=== Usages ===
v156 a189 i424 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 -  <|@  <|@
f <@~|@floating>@ <|@
tid v442 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i424 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i424 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.nio.charset.CharsetEncoder.replaceWith(CharsetEncoder.java:290) [bci: 15]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?3 
guard: - 
address: v442 
=== Succesors ===
next: v92 
=== Usages ===
v84 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?3 guard: - address: v442 #next: v92  <|@  <|@
f <@~|@floating>@ <|@
tid i33 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.isLegalReplacement(UTF_8.java:566) [bci: 2]
at java.nio.charset.CharsetEncoder.replaceWith(CharsetEncoder.java:299) [bci: 53]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v84 v216 a189 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v84 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.isLegalReplacement(UTF_8.java:566) [bci: 3]
at java.nio.charset.CharsetEncoder.replaceWith(CharsetEncoder.java:299) [bci: 53]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i424 
y: i33 
=== Succesors ===
=== Usages ===
v92 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i424 y: i33  <|@  <|@
f <@*|@fixed>@ <|@
tid v92 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.charset.CharsetEncoder.replaceWith(CharsetEncoder.java:291) [bci: 18]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v84 
=== Succesors ===
trueSuccessor: v89 
falseSuccessor: v91 
=== Usages ===
=== Predecessor ===
i424 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v84 #trueSuccessor: v89 #falseSuccessor: v91  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v89 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.charset.CharsetEncoder.replaceWith(CharsetEncoder.java:291) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: f425 
=== Usages ===
i426 i434 
=== Predecessor ===
v92 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: f425  <|@  <|@
f <@~|@floating>@ <|@
tid v443 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
f425 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid f425 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CharsetEncoder.maxBytesPerChar
nodeSourcePosition: at java.nio.charset.CharsetEncoder.replaceWith(CharsetEncoder.java:293) [bci: 34]
nullCheck: false
stamp: f32
=== Inputs ===
stateBefore: - 
guard: - 
address: v443 
=== Succesors ===
next: v96 
=== Usages ===
v14 
=== Predecessor ===
v89 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v443 #next: v96  <|@  <|@
f <@~|@floating>@ <|@
tid f435 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 1.0
stableDimension: 0
stamp: f32! [1.0]
stampKind: f32
value: float[1.0|0x3f800000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v14 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v14 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.nio.charset.CharsetEncoder.replaceWith(CharsetEncoder.java:293) [bci: 38]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: f425 
y: f435 
=== Succesors ===
=== Usages ===
v96 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.FloatLessThanNode>@ x: f425 y: f435  <|@  <|@
f <@*|@fixed>@ <|@
tid v96 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.charset.CharsetEncoder.replaceWith(CharsetEncoder.java:293) [bci: 38]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v14 
=== Succesors ===
trueSuccessor: v95 
falseSuccessor: v93 
=== Usages ===
=== Predecessor ===
f425 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v14 #trueSuccessor: v95 #falseSuccessor: v93  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B10" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v95 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.charset.CharsetEncoder.replaceWith(CharsetEncoder.java:293) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: v157 
=== Usages ===
=== Predecessor ===
v96 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v157  <|@  <|@
f <@~|@floating>@ <|@
tid i158 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -13075
stableDimension: 0
stamp: i32 [-13075] ⇊00000000ffffcced ⇈00000000ffffcced
stampKind: i32
value: int[-13075|0xffffffffffffcced]
=== Inputs ===
=== Succesors ===
=== Usages ===
i154 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v157 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v150 
=== Predecessor ===
v95 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v93 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.charset.CharsetEncoder.replaceWith(CharsetEncoder.java:293) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: i426 
=== Usages ===
=== Predecessor ===
v96 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i426  <|@  <|@
f <@~|@floating>@ <|@
tid v444 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i426 j325 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i426 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: byte
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.isLegalReplacement(UTF_8.java:566) [bci: 8]
at java.nio.charset.CharsetEncoder.replaceWith(CharsetEncoder.java:299) [bci: 53]
nullCheck: false
stamp: i8
=== Inputs ===
stateBefore: - 
guard: v89 
address: v444 
=== Succesors ===
next: v100 
=== Usages ===
i62 
=== Predecessor ===
v93 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v89 address: v444 #next: v100  <|@  <|@
f <@~|@floating>@ <|@
tid i62 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 8
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.isLegalReplacement(UTF_8.java:566) [bci: 8]
at java.nio.charset.CharsetEncoder.replaceWith(CharsetEncoder.java:299) [bci: 53]
resultBits: 32
stamp: i32 [-128 - 127]
=== Inputs ===
value: i426 
=== Succesors ===
=== Usages ===
v37 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i426  <|@  <|@
f <@~|@floating>@ <|@
tid i8 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.nio.charset.CharsetEncoder.replaceWith(CharsetEncoder.java:291) [bci: 18]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v37 a189 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v37 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.isLegalReplacement(UTF_8.java:566) [bci: 9]
at java.nio.charset.CharsetEncoder.replaceWith(CharsetEncoder.java:299) [bci: 53]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i62 
y: i8 
=== Succesors ===
=== Usages ===
v100 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i62 y: i8  <|@  <|@
f <@*|@fixed>@ <|@
tid v100 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.isLegalReplacement(UTF_8.java:566) [bci: 9]
at java.nio.charset.CharsetEncoder.replaceWith(CharsetEncoder.java:299) [bci: 53]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v37 
=== Succesors ===
trueSuccessor: v99 
falseSuccessor: v97 
=== Usages ===
=== Predecessor ===
i426 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v37 #trueSuccessor: v99 #falseSuccessor: v97  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B10" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v99 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.isLegalReplacement(UTF_8.java:566) [bci: 9]
at java.nio.charset.CharsetEncoder.replaceWith(CharsetEncoder.java:299) [bci: 53]
stamp: void
=== Inputs ===
=== Succesors ===
next: v161 
=== Usages ===
=== Predecessor ===
v100 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v161  <|@  <|@
f <@~|@floating>@ <|@
tid i162 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -16147
stableDimension: 0
stamp: i32 [-16147] ⇊00000000ffffc0ed ⇈00000000ffffc0ed
stampKind: i32
value: int[-16147|0xffffffffffffc0ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i154 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v161 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v150 
=== Predecessor ===
v99 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v97 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.isLegalReplacement(UTF_8.java:566) [bci: 9]
at java.nio.charset.CharsetEncoder.replaceWith(CharsetEncoder.java:299) [bci: 53]
stamp: void
=== Inputs ===
=== Succesors ===
next: j168 
=== Usages ===
=== Predecessor ===
v100 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j168  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j168 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:772) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:319) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$b, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:50) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfByte(stripped:81) [bci: 58]
at java.util.Arrays.copyOf(byte[], int) [bci: -1]
at java.nio.charset.CharsetEncoder.replaceWith(CharsetEncoder.java:301) [bci: 73]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j213 
=== Usages ===
v449 v450 
=== Predecessor ===
v97 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j213  <|@  <|@
f <@~|@floating>@ <|@
tid v449 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j168 
index: - 
=== Succesors ===
=== Usages ===
j213 v215 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j168 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j213 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:245) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:320) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$b, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:50) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfByte(stripped:81) [bci: 58]
at java.util.Arrays.copyOf(byte[], int) [bci: -1]
at java.nio.charset.CharsetEncoder.replaceWith(CharsetEncoder.java:301) [bci: 73]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v449 
=== Succesors ===
next: j214 
=== Usages ===
j461 v451 v452 a188 v457 v453 v454 v455 v456 
=== Predecessor ===
j168 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v449 #next: j214  <|@  <|@
f <@~|@floating>@ <|@
tid v450 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j168 
index: - 
=== Succesors ===
=== Usages ===
j214 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j168 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j214 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:249) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:321) [bci: 25]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$b, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:50) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfByte(stripped:81) [bci: 58]
at java.util.Arrays.copyOf(byte[], int) [bci: -1]
at java.nio.charset.CharsetEncoder.replaceWith(CharsetEncoder.java:301) [bci: 73]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v450 
=== Succesors ===
next: v184 
=== Usages ===
v178 
=== Predecessor ===
j213 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v450 #next: v184  <|@  <|@
f <@~|@floating>@ <|@
tid j437 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 24
stableDimension: 0
stamp: i64 [24] ⇊0000000000000018 ⇈0000000000000018
stampKind: i64
value: long[24|0x18]
=== Inputs ===
=== Succesors ===
=== Usages ===
j461 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j461 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$b, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:50) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfByte(stripped:81) [bci: 58]
at java.util.Arrays.copyOf(byte[], int) [bci: -1]
at java.nio.charset.CharsetEncoder.replaceWith(CharsetEncoder.java:301) [bci: 73]
stamp: i64
=== Inputs ===
x: j213 
y: j437 
=== Succesors ===
=== Usages ===
v178 v215 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j213 y: j437  <|@  <|@
f <@~|@floating>@ <|@
tid v178 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 83]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$b, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:50) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfByte(stripped:81) [bci: 58]
at java.util.Arrays.copyOf(byte[], int) [bci: -1]
at java.nio.charset.CharsetEncoder.replaceWith(CharsetEncoder.java:301) [bci: 73]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j214 
y: j461 
=== Succesors ===
=== Usages ===
v184 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j214 y: j461  <|@  <|@
f <@*|@fixed>@ <|@
tid v184 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 89]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$b, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:50) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfByte(stripped:81) [bci: 58]
at java.util.Arrays.copyOf(byte[], int) [bci: -1]
at java.nio.charset.CharsetEncoder.replaceWith(CharsetEncoder.java:301) [bci: 73]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v178 
=== Succesors ===
trueSuccessor: v183 
falseSuccessor: v182 
=== Usages ===
=== Predecessor ===
j214 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v178 #trueSuccessor: v183 #falseSuccessor: v182  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v183 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$b, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:50) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfByte(stripped:81) [bci: 58]
at java.util.Arrays.copyOf(byte[], int) [bci: -1]
at java.nio.charset.CharsetEncoder.replaceWith(CharsetEncoder.java:301) [bci: 73]
stamp: void
=== Inputs ===
=== Succesors ===
next: a189 
=== Usages ===
=== Predecessor ===
v184 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a189  <|@  <|@
f <@~|@floating>@ <|@
tid v164 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$b, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:50) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfByte(stripped:81) [bci: 58]
at java.util.Arrays.copyOf(byte[], int) [bci: -1]
at java.nio.charset.CharsetEncoder.replaceWith(CharsetEncoder.java:301) [bci: 73]
rawvalue: meta{HotSpotType<[B, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[B, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a189 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a189 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.newArray(ForeignCallDescriptor, KlassPointer, int, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 155]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$b, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:50) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfByte(stripped:81) [bci: 58]
at java.util.Arrays.copyOf(byte[], int) [bci: -1]
at java.nio.charset.CharsetEncoder.replaceWith(CharsetEncoder.java:301) [bci: 73]
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?3 
arguments: v164 i33 i8 
=== Succesors ===
next: v192 
=== Usages ===
a193 
=== Predecessor ===
v183 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?3 arguments: v164 i33 i8 #next: v192  <|@  <|@
f <@*|@fixed>@ <|@
tid v192 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$b, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:50) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfByte(stripped:81) [bci: 58]
at java.util.Arrays.copyOf(byte[], int) [bci: -1]
at java.nio.charset.CharsetEncoder.replaceWith(CharsetEncoder.java:301) [bci: 73]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v191 
=== Predecessor ===
a189 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v182 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 92]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$b, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:50) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfByte(stripped:81) [bci: 58]
at java.util.Arrays.copyOf(byte[], int) [bci: -1]
at java.nio.charset.CharsetEncoder.replaceWith(CharsetEncoder.java:301) [bci: 73]
stamp: void
=== Inputs ===
=== Succesors ===
next: v215 
=== Usages ===
=== Predecessor ===
v184 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v215  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v215 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:257) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 96]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$b, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:50) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfByte(stripped:81) [bci: 58]
at java.util.Arrays.copyOf(byte[], int) [bci: -1]
at java.nio.charset.CharsetEncoder.replaceWith(CharsetEncoder.java:301) [bci: 73]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v449 
value: j461 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v202 
=== Usages ===
=== Predecessor ===
v182 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v449 value: j461 stateAfter: - lastLocationAccess: - #next: v202  <|@  <|@
f <@~|@floating>@ <|@
tid v453 <|@
d <@d|@=== Debug Properties ===
displacement: 216
scale: Times1
stamp: void*
=== Inputs ===
base: j213 
index: - 
=== Succesors ===
=== Usages ===
v202 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j213 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v202 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$b, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:50) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfByte(stripped:81) [bci: 58]
at java.util.Arrays.copyOf(byte[], int) [bci: -1]
at java.nio.charset.CharsetEncoder.replaceWith(CharsetEncoder.java:301) [bci: 73]
stamp: void
=== Inputs ===
address: v453 
=== Succesors ===
next: v205 
=== Usages ===
=== Predecessor ===
v215 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v453 #next: v205  <|@  <|@
f <@~|@floating>@ <|@
tid v454 <|@
d <@d|@=== Debug Properties ===
displacement: 280
scale: Times1
stamp: void*
=== Inputs ===
base: j213 
index: - 
=== Succesors ===
=== Usages ===
v205 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j213 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v205 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$b, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:50) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfByte(stripped:81) [bci: 58]
at java.util.Arrays.copyOf(byte[], int) [bci: -1]
at java.nio.charset.CharsetEncoder.replaceWith(CharsetEncoder.java:301) [bci: 73]
stamp: void
=== Inputs ===
address: v454 
=== Succesors ===
next: v208 
=== Usages ===
=== Predecessor ===
v202 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v454 #next: v208  <|@  <|@
f <@~|@floating>@ <|@
tid v455 <|@
d <@d|@=== Debug Properties ===
displacement: 344
scale: Times1
stamp: void*
=== Inputs ===
base: j213 
index: - 
=== Succesors ===
=== Usages ===
v208 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j213 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v208 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$b, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:50) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfByte(stripped:81) [bci: 58]
at java.util.Arrays.copyOf(byte[], int) [bci: -1]
at java.nio.charset.CharsetEncoder.replaceWith(CharsetEncoder.java:301) [bci: 73]
stamp: void
=== Inputs ===
address: v455 
=== Succesors ===
next: v211 
=== Usages ===
=== Predecessor ===
v205 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v455 #next: v211  <|@  <|@
f <@~|@floating>@ <|@
tid v456 <|@
d <@d|@=== Debug Properties ===
displacement: 408
scale: Times1
stamp: void*
=== Inputs ===
base: j213 
index: - 
=== Succesors ===
=== Usages ===
v211 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j213 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v211 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$b, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:50) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfByte(stripped:81) [bci: 58]
at java.util.Arrays.copyOf(byte[], int) [bci: -1]
at java.nio.charset.CharsetEncoder.replaceWith(CharsetEncoder.java:301) [bci: 73]
stamp: void
=== Inputs ===
address: v456 
=== Succesors ===
next: v216 
=== Usages ===
=== Predecessor ===
v208 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v456 #next: v216  <|@  <|@
f <@~|@floating>@ <|@
tid v451 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j213 
index: - 
=== Succesors ===
=== Usages ===
v216 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j213 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v216 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:549) [bci: 12]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$b, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:50) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfByte(stripped:81) [bci: 58]
at java.util.Arrays.copyOf(byte[], int) [bci: -1]
at java.nio.charset.CharsetEncoder.replaceWith(CharsetEncoder.java:301) [bci: 73]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v451 
value: i33 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v217 
=== Usages ===
=== Predecessor ===
v211 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v451 value: i33 stateAfter: - lastLocationAccess: - #next: v217  <|@  <|@
f <@~|@floating>@ <|@
tid v452 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j213 
index: - 
=== Succesors ===
=== Usages ===
v217 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j213 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j165 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$b, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:50) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfByte(stripped:81) [bci: 58]
at java.util.Arrays.copyOf(byte[], int) [bci: -1]
at java.nio.charset.CharsetEncoder.replaceWith(CharsetEncoder.java:301) [bci: 73]
rawvalue: 1
stableDimension: 0
stamp: i64 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v217 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v217 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:469) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$b, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:50) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfByte(stripped:81) [bci: 58]
at java.util.Arrays.copyOf(byte[], int) [bci: -1]
at java.nio.charset.CharsetEncoder.replaceWith(CharsetEncoder.java:301) [bci: 73]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v452 
value: j165 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v221 
=== Usages ===
=== Predecessor ===
v216 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v452 value: j165 stateAfter: - lastLocationAccess: - #next: v221  <|@  <|@
f <@~|@floating>@ <|@
tid v457 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j213 
index: - 
=== Succesors ===
=== Usages ===
v221 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j213 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v239 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$b, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:50) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfByte(stripped:81) [bci: 58]
at java.util.Arrays.copyOf(byte[], int) [bci: -1]
at java.nio.charset.CharsetEncoder.replaceWith(CharsetEncoder.java:301) [bci: 73]
rawvalue: meta{HotSpotType<[B, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<[B, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v221 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v221 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$b, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:50) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfByte(stripped:81) [bci: 58]
at java.util.Arrays.copyOf(byte[], int) [bci: -1]
at java.nio.charset.CharsetEncoder.replaceWith(CharsetEncoder.java:301) [bci: 73]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v457 
value: v239 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v187 
=== Usages ===
=== Predecessor ===
v217 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v457 value: v239 stateAfter: - lastLocationAccess: - #next: v187  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v187 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.MembarNode.memoryBarrier(int, LocationIdentity) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:560) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$b, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:50) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfByte(stripped:81) [bci: 58]
at java.util.Arrays.copyOf(byte[], int) [bci: -1]
at java.nio.charset.CharsetEncoder.replaceWith(CharsetEncoder.java:301) [bci: 73]
stamp: void
=== Inputs ===
=== Succesors ===
next: a188 
=== Usages ===
=== Predecessor ===
v221 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a188  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a188 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:561) [bci: 71]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$b, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:50) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfByte(stripped:81) [bci: 58]
at java.util.Arrays.copyOf(byte[], int) [bci: -1]
at java.nio.charset.CharsetEncoder.replaceWith(CharsetEncoder.java:301) [bci: 73]
stamp: a! -
trackedPointer: true
=== Inputs ===
input: j213 
=== Succesors ===
next: v190 
=== Usages ===
a193 
=== Predecessor ===
v187 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j213 #next: v190  <|@  <|@
f <@*|@fixed>@ <|@
tid v190 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$b, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:50) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfByte(stripped:81) [bci: 58]
at java.util.Arrays.copyOf(byte[], int) [bci: -1]
at java.nio.charset.CharsetEncoder.replaceWith(CharsetEncoder.java:301) [bci: 73]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v191 
=== Predecessor ===
a188 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B6" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a193 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$b, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:50) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfByte(stripped:81) [bci: 58]
at java.util.Arrays.copyOf(byte[], int) [bci: -1]
at java.nio.charset.CharsetEncoder.replaceWith(CharsetEncoder.java:301) [bci: 73]
stamp: a! -
valueDescription: a -
=== Inputs ===
merge: v191 
values: a188 a189 
=== Succesors ===
=== Usages ===
v448 a146 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v191 values: a188 a189  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v191 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$b, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:50) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfByte(stripped:81) [bci: 58]
at java.util.Arrays.copyOf(byte[], int) [bci: -1]
at java.nio.charset.CharsetEncoder.replaceWith(CharsetEncoder.java:301) [bci: 73]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v190 v192 
=== Succesors ===
next: v324 
=== Usages ===
a193 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v190 v192 #next: v324  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v324 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: i431 
=== Usages ===
j325 j327 
=== Predecessor ===
v191 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: i431  <|@  <|@
f <@~|@floating>@ <|@
tid j325 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v324 
address: v444 
=== Succesors ===
=== Usages ===
v460 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v324 address: v444  <|@  <|@
f <@~|@floating>@ <|@
tid v460 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j325 
index: - 
=== Succesors ===
=== Usages ===
i431 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j325 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i431 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: byte
nullCheck: false
stamp: i8
=== Inputs ===
stateBefore: - 
guard: - 
address: v460 
=== Succesors ===
next: v411 
=== Usages ===
v411 
=== Predecessor ===
v324 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v460 #next: v411  <|@  <|@
f <@~|@floating>@ <|@
tid v448 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a193 
index: - 
=== Succesors ===
=== Usages ===
j327 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a193 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j327 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v324 
address: v448 
=== Succesors ===
=== Usages ===
v459 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v324 address: v448  <|@  <|@
f <@~|@floating>@ <|@
tid v459 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j327 
index: - 
=== Succesors ===
=== Usages ===
v411 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j327 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v411 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v459 
value: i431 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a146 
=== Usages ===
=== Predecessor ===
i431 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v459 value: i431 stateAfter: - lastLocationAccess: - #next: a146  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a146 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$b, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:50) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfByte(stripped:81) [bci: 58]
at java.util.Arrays.copyOf(byte[], int) [bci: -1]
at java.nio.charset.CharsetEncoder.replaceWith(CharsetEncoder.java:301) [bci: 73]
predefinedStamp: [null]
stamp: a! -
=== Inputs ===
object: a193 
=== Succesors ===
next: v67 
=== Usages ===
v446 a64 
=== Predecessor ===
v411 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a193 #next: v67  <|@  <|@
f <@~|@floating>@ <|@
tid v445 <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v67 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a64 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.nio.charset.CharsetEncoder.replaceWith(CharsetEncoder.java:301) [bci: 76]
op: Compress
stamp: n! -
=== Inputs ===
value: a146 
=== Succesors ===
=== Usages ===
v67 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a146  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v67 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: CharsetEncoder.replacement
nodeSourcePosition: at java.nio.charset.CharsetEncoder.replaceWith(CharsetEncoder.java:301) [bci: 76]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v445 
value: a64 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j229 
=== Usages ===
=== Predecessor ===
a146 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v445 value: a64 stateAfter: - lastLocationAccess: - #next: j229  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j229 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 1]
at java.nio.charset.CharsetEncoder.replaceWith(CharsetEncoder.java:301) [bci: 76]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1 
=== Succesors ===
next: v235 
=== Usages ===
j231 
=== Predecessor ===
v67 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a1 #next: v235  <|@  <|@
f <@~|@floating>@ <|@
tid i230 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.cardTableShift(GraalHotSpotVMConfig) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.nio.charset.CharsetEncoder.replaceWith(CharsetEncoder.java:301) [bci: 76]
rawvalue: 9
stableDimension: 0
stamp: i32 [9] ⇊0000000000000009 ⇈0000000000000009
stampKind: i32
value: int[9|0x9]
=== Inputs ===
=== Succesors ===
=== Usages ===
j231 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j231 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.nio.charset.CharsetEncoder.replaceWith(CharsetEncoder.java:301) [bci: 76]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j229 
y: i230 
=== Succesors ===
=== Usages ===
v458 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j229 y: i230  <|@  <|@
f <@~|@floating>@ <|@
tid j234 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.loadLongConfigValue(int) [bci: -1]
at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.cardTableAddress(GraalHotSpotVMConfigNode.java:114) [bci: 6]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:133) [bci: 7]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.nio.charset.CharsetEncoder.replaceWith(CharsetEncoder.java:301) [bci: 76]
rawvalue: 4682670080
stableDimension: 0
stamp: i64 [4682670080] ⇊00000001171be000 ⇈00000001171be000
stampKind: i64
value: long[4682670080|0x1171be000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v458 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v458 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j231 
index: j234 
=== Succesors ===
=== Usages ===
v235 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j231 index: j234  <|@  <|@
f <@~|@floating>@ <|@
tid i236 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.nio.charset.CharsetEncoder.replaceWith(CharsetEncoder.java:301) [bci: 76]
rawvalue: 0
stableDimension: 0
stamp: i8 [0] ⇈0000000000000000
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v235 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v235 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.nio.charset.CharsetEncoder.replaceWith(CharsetEncoder.java:301) [bci: 76]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v458 
value: i236 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: i434 
=== Usages ===
=== Predecessor ===
j229 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v458 value: i236 stateAfter: - lastLocationAccess: - #next: i434  <|@  <|@
f <@~|@floating>@ <|@
tid v446 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a146 
index: - 
=== Succesors ===
=== Usages ===
i434 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a146 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i434 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: byte
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.implReplaceWith(UTF_8.java:698) [bci: 3]
at java.nio.charset.CharsetEncoder.replaceWith(CharsetEncoder.java:303) [bci: 84]
nullCheck: false
stamp: i8
=== Inputs ===
stateBefore: - 
guard: v89 
address: v446 
=== Succesors ===
next: v76 
=== Usages ===
v76 
=== Predecessor ===
v235 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v89 address: v446 #next: v76  <|@  <|@
f <@~|@floating>@ <|@
tid v447 <|@
d <@d|@=== Debug Properties ===
displacement: 44
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v76 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v76 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: UTF_8$Encoder.repl
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.implReplaceWith(UTF_8.java:698) [bci: 4]
at java.nio.charset.CharsetEncoder.replaceWith(CharsetEncoder.java:303) [bci: 84]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v447 
value: i434 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v31 
=== Usages ===
=== Predecessor ===
i434 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v447 value: i434 stateAfter: - lastLocationAccess: - #next: v31  <|@  <|@
f <@*|@fixed>@ <|@
tid v31 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.charset.CharsetEncoder.replaceWith(CharsetEncoder.java:304) [bci: 88]
stamp: void
=== Inputs ===
result: a1 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v76 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a1 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B10" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v91 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.charset.CharsetEncoder.replaceWith(CharsetEncoder.java:291) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: v159 
=== Usages ===
=== Predecessor ===
v92 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v159  <|@  <|@
f <@~|@floating>@ <|@
tid i160 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -12051
stableDimension: 0
stamp: i32 [-12051] ⇊00000000ffffd0ed ⇈00000000ffffd0ed
stampKind: i32
value: int[-12051|0xffffffffffffd0ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i154 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v159 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v150 
=== Predecessor ===
v91 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B2" "B9" "B4" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i154 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-16147 - -10771] ⇊00000000ffffc0ed ⇈00000000ffffdded
valueDescription: i32
=== Inputs ===
merge: v150 
values: i158 i160 i162 
=== Succesors ===
=== Usages ===
v156 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v150 values: i158 i160 i162  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v150 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v157 v159 v161 
=== Succesors ===
next: v156 
=== Usages ===
i154 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v157 v159 v161 #next: v156  <|@  <|@
f <@~|@floating>@ <|@
tid a153 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v156 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v156 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?3 
actionAndReason: i154 
speculation: a153 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v150 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?3 actionAndReason: i154 speculation: a153  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: i424 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: i424  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Lsun/nio/cs/UTF_8$Encoder;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v443 v447 v31 v445 j229 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
result v1|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a# [B
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v442 v444 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?3 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<CharsetEncoder.replaceWith(byte[])>
duringCall: false
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: CharsetEncoder.java
sourceLine: 288
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 - 
=== Succesors ===
=== Usages ===
v156 a189 i424 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 -  <|@  <|@
f <@~|@floating>@ <|@
tid v442 <|@
result [v1|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i424 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i424 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.nio.charset.CharsetEncoder.replaceWith(CharsetEncoder.java:290) [bci: 15]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?3 
guard: - 
address: v442 
=== Succesors ===
next: v92 
=== Usages ===
v84 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?3 guard: - address: v442 #next: v92  <|@  <|@
f <@~|@floating>@ <|@
tid i33 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.isLegalReplacement(UTF_8.java:566) [bci: 2]
at java.nio.charset.CharsetEncoder.replaceWith(CharsetEncoder.java:299) [bci: 53]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v84 v216 a189 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v84 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.isLegalReplacement(UTF_8.java:566) [bci: 3]
at java.nio.charset.CharsetEncoder.replaceWith(CharsetEncoder.java:299) [bci: 53]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i424 
y: i33 
=== Succesors ===
=== Usages ===
v92 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i424 y: i33  <|@  <|@
f <@*|@fixed>@ <|@
tid v92 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.charset.CharsetEncoder.replaceWith(CharsetEncoder.java:291) [bci: 18]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v84 
=== Succesors ===
trueSuccessor: v89 
falseSuccessor: v91 
=== Usages ===
=== Predecessor ===
i424 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v84 #trueSuccessor: v89 #falseSuccessor: v91  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@2fea2a63 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.nio.charset.CharsetEncoder.replaceWith(CharsetEncoder.java:288) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction CMP [v1|QWORD[.] + 12] y: 1 size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v89 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.charset.CharsetEncoder.replaceWith(CharsetEncoder.java:291) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: f425 
=== Usages ===
i426 i434 
=== Predecessor ===
v92 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: f425  <|@  <|@
f <@~|@floating>@ <|@
tid v443 <|@
result [v0|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
f425 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid f425 <|@
result v2|SINGLE <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CharsetEncoder.maxBytesPerChar
nodeSourcePosition: at java.nio.charset.CharsetEncoder.replaceWith(CharsetEncoder.java:293) [bci: 34]
nullCheck: false
stamp: f32
=== Inputs ===
stateBefore: - 
guard: - 
address: v443 
=== Succesors ===
next: v96 
=== Usages ===
v14 
=== Predecessor ===
v89 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v443 #next: v96  <|@  <|@
f <@~|@floating>@ <|@
tid f435 <|@
result float[1.0|0x3f800000] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 1.0
stableDimension: 0
stamp: f32! [1.0]
stampKind: f32
value: float[1.0|0x3f800000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v14 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v14 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.nio.charset.CharsetEncoder.replaceWith(CharsetEncoder.java:293) [bci: 38]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: f425 
y: f435 
=== Succesors ===
=== Usages ===
v96 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.FloatLessThanNode>@ x: f425 y: f435  <|@  <|@
f <@*|@fixed>@ <|@
tid v96 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.charset.CharsetEncoder.replaceWith(CharsetEncoder.java:293) [bci: 38]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v14 
=== Succesors ===
trueSuccessor: v95 
falseSuccessor: v93 
=== Usages ===
=== Predecessor ===
f425 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v14 #trueSuccessor: v95 #falseSuccessor: v93  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v2|SINGLE = H [v0|QWORD[.] + 16] nZ: XMM oh: VMOVSS <|@ <|@
      nr   -1  <|@ instruction v3|SINGLE = VMOVE input: float[1.0|0x3f800000] <|@ <|@
      nr   -1  <|@ instruction VUCOMISS (x: v2|SINGLE, y: v3|SINGLE) <|@ <|@
      nr   -1  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.0 condition: |<| trueDestination: B1 -> B2 falseDestination: B1 -> B3 unorderedIsTrue: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B10" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v95 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.charset.CharsetEncoder.replaceWith(CharsetEncoder.java:293) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: v157 
=== Usages ===
=== Predecessor ===
v96 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v157  <|@  <|@
f <@~|@floating>@ <|@
tid i158 <|@
result int[-13075|0xffffffffffffcced] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -13075
stableDimension: 0
stamp: i32 [-13075] ⇊00000000ffffcced ⇈00000000ffffcced
stampKind: i32
value: int[-13075|0xffffffffffffcced]
=== Inputs ===
=== Succesors ===
=== Usages ===
i154 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v157 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v150 
=== Predecessor ===
v95 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-13075|0xffffffffffffcced]] destination: B2 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v93 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.charset.CharsetEncoder.replaceWith(CharsetEncoder.java:293) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: i426 
=== Usages ===
=== Predecessor ===
v96 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i426  <|@  <|@
f <@~|@floating>@ <|@
tid v444 <|@
result [v1|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i426 j325 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i426 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: byte
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.isLegalReplacement(UTF_8.java:566) [bci: 8]
at java.nio.charset.CharsetEncoder.replaceWith(CharsetEncoder.java:299) [bci: 53]
nullCheck: false
stamp: i8
=== Inputs ===
stateBefore: - 
guard: v89 
address: v444 
=== Succesors ===
next: v100 
=== Usages ===
i62 
=== Predecessor ===
v93 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v89 address: v444 #next: v100  <|@  <|@
f <@~|@floating>@ <|@
tid i62 <|@
result v4|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 8
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.isLegalReplacement(UTF_8.java:566) [bci: 8]
at java.nio.charset.CharsetEncoder.replaceWith(CharsetEncoder.java:299) [bci: 53]
resultBits: 32
stamp: i32 [-128 - 127]
=== Inputs ===
value: i426 
=== Succesors ===
=== Usages ===
v37 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i426  <|@  <|@
f <@~|@floating>@ <|@
tid i8 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.nio.charset.CharsetEncoder.replaceWith(CharsetEncoder.java:291) [bci: 18]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v37 a189 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v37 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.isLegalReplacement(UTF_8.java:566) [bci: 9]
at java.nio.charset.CharsetEncoder.replaceWith(CharsetEncoder.java:299) [bci: 53]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i62 
y: i8 
=== Succesors ===
=== Usages ===
v100 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i62 y: i8  <|@  <|@
f <@*|@fixed>@ <|@
tid v100 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.isLegalReplacement(UTF_8.java:566) [bci: 9]
at java.nio.charset.CharsetEncoder.replaceWith(CharsetEncoder.java:299) [bci: 53]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v37 
=== Succesors ===
trueSuccessor: v99 
falseSuccessor: v97 
=== Usages ===
=== Predecessor ===
i426 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v37 #trueSuccessor: v99 #falseSuccessor: v97  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOVSXB [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v4|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B10" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v99 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.isLegalReplacement(UTF_8.java:566) [bci: 9]
at java.nio.charset.CharsetEncoder.replaceWith(CharsetEncoder.java:299) [bci: 53]
stamp: void
=== Inputs ===
=== Succesors ===
next: v161 
=== Usages ===
=== Predecessor ===
v100 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v161  <|@  <|@
f <@~|@floating>@ <|@
tid i162 <|@
result int[-16147|0xffffffffffffc0ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -16147
stableDimension: 0
stamp: i32 [-16147] ⇊00000000ffffc0ed ⇈00000000ffffc0ed
stampKind: i32
value: int[-16147|0xffffffffffffc0ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i154 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v161 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v150 
=== Predecessor ===
v99 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-16147|0xffffffffffffc0ed]] destination: B4 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v97 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.isLegalReplacement(UTF_8.java:566) [bci: 9]
at java.nio.charset.CharsetEncoder.replaceWith(CharsetEncoder.java:299) [bci: 53]
stamp: void
=== Inputs ===
=== Succesors ===
next: j168 
=== Usages ===
=== Predecessor ===
v100 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j168  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j168 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:772) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:319) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$b, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:50) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfByte(stripped:81) [bci: 58]
at java.util.Arrays.copyOf(byte[], int) [bci: -1]
at java.nio.charset.CharsetEncoder.replaceWith(CharsetEncoder.java:301) [bci: 73]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j213 
=== Usages ===
v449 v450 
=== Predecessor ===
v97 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j213  <|@  <|@
f <@~|@floating>@ <|@
tid v449 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j168 
index: - 
=== Succesors ===
=== Usages ===
j213 v215 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j168 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j213 <|@
result v5|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:245) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:320) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$b, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:50) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfByte(stripped:81) [bci: 58]
at java.util.Arrays.copyOf(byte[], int) [bci: -1]
at java.nio.charset.CharsetEncoder.replaceWith(CharsetEncoder.java:301) [bci: 73]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v449 
=== Succesors ===
next: j214 
=== Usages ===
j461 v451 v452 a188 v457 v453 v454 v455 v456 
=== Predecessor ===
j168 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v449 #next: j214  <|@  <|@
f <@~|@floating>@ <|@
tid v450 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j168 
index: - 
=== Succesors ===
=== Usages ===
j214 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j168 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j214 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:249) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:321) [bci: 25]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$b, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:50) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfByte(stripped:81) [bci: 58]
at java.util.Arrays.copyOf(byte[], int) [bci: -1]
at java.nio.charset.CharsetEncoder.replaceWith(CharsetEncoder.java:301) [bci: 73]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v450 
=== Succesors ===
next: v184 
=== Usages ===
v178 
=== Predecessor ===
j213 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v450 #next: v184  <|@  <|@
f <@~|@floating>@ <|@
tid j437 <|@
result long[24|0x18] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 24
stableDimension: 0
stamp: i64 [24] ⇊0000000000000018 ⇈0000000000000018
stampKind: i64
value: long[24|0x18]
=== Inputs ===
=== Succesors ===
=== Usages ===
j461 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j461 <|@
result v6|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$b, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:50) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfByte(stripped:81) [bci: 58]
at java.util.Arrays.copyOf(byte[], int) [bci: -1]
at java.nio.charset.CharsetEncoder.replaceWith(CharsetEncoder.java:301) [bci: 73]
stamp: i64
=== Inputs ===
x: j213 
y: j437 
=== Succesors ===
=== Usages ===
v178 v215 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j213 y: j437  <|@  <|@
f <@~|@floating>@ <|@
tid v178 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 83]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$b, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:50) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfByte(stripped:81) [bci: 58]
at java.util.Arrays.copyOf(byte[], int) [bci: -1]
at java.nio.charset.CharsetEncoder.replaceWith(CharsetEncoder.java:301) [bci: 73]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j214 
y: j461 
=== Succesors ===
=== Usages ===
v184 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j214 y: j461  <|@  <|@
f <@*|@fixed>@ <|@
tid v184 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 89]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$b, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:50) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfByte(stripped:81) [bci: 58]
at java.util.Arrays.copyOf(byte[], int) [bci: -1]
at java.nio.charset.CharsetEncoder.replaceWith(CharsetEncoder.java:301) [bci: 73]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v178 
=== Succesors ===
trueSuccessor: v183 
falseSuccessor: v182 
=== Usages ===
=== Predecessor ===
j214 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v178 #trueSuccessor: v183 #falseSuccessor: v182  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = LEA [v5|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v6|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v183 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$b, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:50) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfByte(stripped:81) [bci: 58]
at java.util.Arrays.copyOf(byte[], int) [bci: -1]
at java.nio.charset.CharsetEncoder.replaceWith(CharsetEncoder.java:301) [bci: 73]
stamp: void
=== Inputs ===
=== Succesors ===
next: a189 
=== Usages ===
=== Predecessor ===
v184 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a189  <|@  <|@
f <@~|@floating>@ <|@
tid v164 <|@
result v7|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$b, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:50) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfByte(stripped:81) [bci: 58]
at java.util.Arrays.copyOf(byte[], int) [bci: -1]
at java.nio.charset.CharsetEncoder.replaceWith(CharsetEncoder.java:301) [bci: 73]
rawvalue: meta{HotSpotType<[B, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[B, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a189 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a189 <|@
result v8|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.newArray(ForeignCallDescriptor, KlassPointer, int, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 155]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$b, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:50) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfByte(stripped:81) [bci: 58]
at java.util.Arrays.copyOf(byte[], int) [bci: -1]
at java.nio.charset.CharsetEncoder.replaceWith(CharsetEncoder.java:301) [bci: 73]
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?3 
arguments: v164 i33 i8 
=== Succesors ===
next: v192 
=== Usages ===
a193 
=== Predecessor ===
v183 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?3 arguments: v164 i33 i8 #next: v192  <|@  <|@
f <@*|@fixed>@ <|@
tid v192 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$b, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:50) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfByte(stripped:81) [bci: 58]
at java.util.Arrays.copyOf(byte[], int) [bci: -1]
at java.nio.charset.CharsetEncoder.replaceWith(CharsetEncoder.java:301) [bci: 73]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v191 
=== Predecessor ===
a189 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v7|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@java.nio.charset.CharsetEncoder.replaceWith(CharsetEncoder.java:288) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v8|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v8|QWORD[.]] destination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v182 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 92]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$b, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:50) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfByte(stripped:81) [bci: 58]
at java.util.Arrays.copyOf(byte[], int) [bci: -1]
at java.nio.charset.CharsetEncoder.replaceWith(CharsetEncoder.java:301) [bci: 73]
stamp: void
=== Inputs ===
=== Succesors ===
next: v215 
=== Usages ===
=== Predecessor ===
v184 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v215  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v215 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:257) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 96]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$b, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:50) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfByte(stripped:81) [bci: 58]
at java.util.Arrays.copyOf(byte[], int) [bci: -1]
at java.nio.charset.CharsetEncoder.replaceWith(CharsetEncoder.java:301) [bci: 73]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v449 
value: j461 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v202 
=== Usages ===
=== Predecessor ===
v182 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v449 value: j461 stateAfter: - lastLocationAccess: - #next: v202  <|@  <|@
f <@~|@floating>@ <|@
tid v453 <|@
result [v5|QWORD + 216] <|@
d <@d|@=== Debug Properties ===
displacement: 216
scale: Times1
stamp: void*
=== Inputs ===
base: j213 
index: - 
=== Succesors ===
=== Usages ===
v202 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j213 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v202 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$b, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:50) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfByte(stripped:81) [bci: 58]
at java.util.Arrays.copyOf(byte[], int) [bci: -1]
at java.nio.charset.CharsetEncoder.replaceWith(CharsetEncoder.java:301) [bci: 73]
stamp: void
=== Inputs ===
address: v453 
=== Succesors ===
next: v205 
=== Usages ===
=== Predecessor ===
v215 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v453 #next: v205  <|@  <|@
f <@~|@floating>@ <|@
tid v454 <|@
result [v5|QWORD + 280] <|@
d <@d|@=== Debug Properties ===
displacement: 280
scale: Times1
stamp: void*
=== Inputs ===
base: j213 
index: - 
=== Succesors ===
=== Usages ===
v205 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j213 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v205 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$b, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:50) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfByte(stripped:81) [bci: 58]
at java.util.Arrays.copyOf(byte[], int) [bci: -1]
at java.nio.charset.CharsetEncoder.replaceWith(CharsetEncoder.java:301) [bci: 73]
stamp: void
=== Inputs ===
address: v454 
=== Succesors ===
next: v208 
=== Usages ===
=== Predecessor ===
v202 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v454 #next: v208  <|@  <|@
f <@~|@floating>@ <|@
tid v455 <|@
result [v5|QWORD + 344] <|@
d <@d|@=== Debug Properties ===
displacement: 344
scale: Times1
stamp: void*
=== Inputs ===
base: j213 
index: - 
=== Succesors ===
=== Usages ===
v208 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j213 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v208 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$b, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:50) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfByte(stripped:81) [bci: 58]
at java.util.Arrays.copyOf(byte[], int) [bci: -1]
at java.nio.charset.CharsetEncoder.replaceWith(CharsetEncoder.java:301) [bci: 73]
stamp: void
=== Inputs ===
address: v455 
=== Succesors ===
next: v211 
=== Usages ===
=== Predecessor ===
v205 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v455 #next: v211  <|@  <|@
f <@~|@floating>@ <|@
tid v456 <|@
result [v5|QWORD + 408] <|@
d <@d|@=== Debug Properties ===
displacement: 408
scale: Times1
stamp: void*
=== Inputs ===
base: j213 
index: - 
=== Succesors ===
=== Usages ===
v211 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j213 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v211 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$b, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:50) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfByte(stripped:81) [bci: 58]
at java.util.Arrays.copyOf(byte[], int) [bci: -1]
at java.nio.charset.CharsetEncoder.replaceWith(CharsetEncoder.java:301) [bci: 73]
stamp: void
=== Inputs ===
address: v456 
=== Succesors ===
next: v216 
=== Usages ===
=== Predecessor ===
v208 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v456 #next: v216  <|@  <|@
f <@~|@floating>@ <|@
tid v451 <|@
result [v5|QWORD + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j213 
index: - 
=== Succesors ===
=== Usages ===
v216 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j213 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v216 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:549) [bci: 12]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$b, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:50) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfByte(stripped:81) [bci: 58]
at java.util.Arrays.copyOf(byte[], int) [bci: -1]
at java.nio.charset.CharsetEncoder.replaceWith(CharsetEncoder.java:301) [bci: 73]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v451 
value: i33 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v217 
=== Usages ===
=== Predecessor ===
v211 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v451 value: i33 stateAfter: - lastLocationAccess: - #next: v217  <|@  <|@
f <@~|@floating>@ <|@
tid v452 <|@
result [v5|QWORD] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j213 
index: - 
=== Succesors ===
=== Usages ===
v217 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j213 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j165 <|@
result long[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$b, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:50) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfByte(stripped:81) [bci: 58]
at java.util.Arrays.copyOf(byte[], int) [bci: -1]
at java.nio.charset.CharsetEncoder.replaceWith(CharsetEncoder.java:301) [bci: 73]
rawvalue: 1
stableDimension: 0
stamp: i64 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v217 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v217 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:469) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$b, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:50) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfByte(stripped:81) [bci: 58]
at java.util.Arrays.copyOf(byte[], int) [bci: -1]
at java.nio.charset.CharsetEncoder.replaceWith(CharsetEncoder.java:301) [bci: 73]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v452 
value: j165 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v221 
=== Usages ===
=== Predecessor ===
v216 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v452 value: j165 stateAfter: - lastLocationAccess: - #next: v221  <|@  <|@
f <@~|@floating>@ <|@
tid v457 <|@
result [v5|QWORD + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j213 
index: - 
=== Succesors ===
=== Usages ===
v221 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j213 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v239 <|@
result meta{HotSpotType<[B, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$b, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:50) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfByte(stripped:81) [bci: 58]
at java.util.Arrays.copyOf(byte[], int) [bci: -1]
at java.nio.charset.CharsetEncoder.replaceWith(CharsetEncoder.java:301) [bci: 73]
rawvalue: meta{HotSpotType<[B, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<[B, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v221 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v221 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$b, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:50) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfByte(stripped:81) [bci: 58]
at java.util.Arrays.copyOf(byte[], int) [bci: -1]
at java.nio.charset.CharsetEncoder.replaceWith(CharsetEncoder.java:301) [bci: 73]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v457 
value: v239 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v187 
=== Usages ===
=== Predecessor ===
v217 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v457 value: v239 stateAfter: - lastLocationAccess: - #next: v187  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v187 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.MembarNode.memoryBarrier(int, LocationIdentity) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:560) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$b, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:50) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfByte(stripped:81) [bci: 58]
at java.util.Arrays.copyOf(byte[], int) [bci: -1]
at java.nio.charset.CharsetEncoder.replaceWith(CharsetEncoder.java:301) [bci: 73]
stamp: void
=== Inputs ===
=== Succesors ===
next: a188 
=== Usages ===
=== Predecessor ===
v221 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a188  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a188 <|@
result v9|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:561) [bci: 71]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$b, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:50) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfByte(stripped:81) [bci: 58]
at java.util.Arrays.copyOf(byte[], int) [bci: -1]
at java.nio.charset.CharsetEncoder.replaceWith(CharsetEncoder.java:301) [bci: 73]
stamp: a! -
trackedPointer: true
=== Inputs ===
input: j213 
=== Succesors ===
next: v190 
=== Usages ===
a193 
=== Predecessor ===
v187 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j213 #next: v190  <|@  <|@
f <@*|@fixed>@ <|@
tid v190 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$b, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:50) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfByte(stripped:81) [bci: 58]
at java.util.Arrays.copyOf(byte[], int) [bci: -1]
at java.nio.charset.CharsetEncoder.replaceWith(CharsetEncoder.java:301) [bci: 73]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v191 
=== Predecessor ===
a188 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v6|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v5|QWORD + 216] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v5|QWORD + 280] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v5|QWORD + 344] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v5|QWORD + 408] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV [v5|QWORD + 12] y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v5|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v5|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v9|QWORD[.] = MOVE v5|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v9|QWORD[.]] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B6" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a193 <|@
result v10|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$b, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:50) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfByte(stripped:81) [bci: 58]
at java.util.Arrays.copyOf(byte[], int) [bci: -1]
at java.nio.charset.CharsetEncoder.replaceWith(CharsetEncoder.java:301) [bci: 73]
stamp: a! -
valueDescription: a -
=== Inputs ===
merge: v191 
values: a188 a189 
=== Succesors ===
=== Usages ===
v448 a146 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v191 values: a188 a189  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v191 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$b, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:50) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfByte(stripped:81) [bci: 58]
at java.util.Arrays.copyOf(byte[], int) [bci: -1]
at java.nio.charset.CharsetEncoder.replaceWith(CharsetEncoder.java:301) [bci: 73]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v190 v192 
=== Succesors ===
next: v324 
=== Usages ===
a193 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v190 v192 #next: v324  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v324 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: i431 
=== Usages ===
j325 j327 
=== Predecessor ===
v191 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: i431  <|@  <|@
f <@~|@floating>@ <|@
tid j325 <|@
result v11|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v324 
address: v444 
=== Succesors ===
=== Usages ===
v460 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v324 address: v444  <|@  <|@
f <@~|@floating>@ <|@
tid v460 <|@
result [v11|QWORD[.]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j325 
index: - 
=== Succesors ===
=== Usages ===
i431 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j325 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i431 <|@
result v12|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: byte
nullCheck: false
stamp: i8
=== Inputs ===
stateBefore: - 
guard: - 
address: v460 
=== Succesors ===
next: v411 
=== Usages ===
v411 
=== Predecessor ===
v324 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v460 #next: v411  <|@  <|@
f <@~|@floating>@ <|@
tid v448 <|@
result [v10|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a193 
index: - 
=== Succesors ===
=== Usages ===
j327 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a193 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j327 <|@
result v13|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v324 
address: v448 
=== Succesors ===
=== Usages ===
v459 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v324 address: v448  <|@  <|@
f <@~|@floating>@ <|@
tid v459 <|@
result [v13|QWORD[.]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j327 
index: - 
=== Succesors ===
=== Usages ===
v411 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j327 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v411 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v459 
value: i431 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a146 
=== Usages ===
=== Predecessor ===
i431 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v459 value: i431 stateAfter: - lastLocationAccess: - #next: a146  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a146 <|@
result v10|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$b, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:50) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfByte(stripped:81) [bci: 58]
at java.util.Arrays.copyOf(byte[], int) [bci: -1]
at java.nio.charset.CharsetEncoder.replaceWith(CharsetEncoder.java:301) [bci: 73]
predefinedStamp: [null]
stamp: a! -
=== Inputs ===
object: a193 
=== Succesors ===
next: v67 
=== Usages ===
v446 a64 
=== Predecessor ===
v411 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a193 #next: v67  <|@  <|@
f <@~|@floating>@ <|@
tid v445 <|@
result [v0|QWORD[.] + 28] <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v67 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a64 <|@
result v14|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.nio.charset.CharsetEncoder.replaceWith(CharsetEncoder.java:301) [bci: 76]
op: Compress
stamp: n! -
=== Inputs ===
value: a146 
=== Succesors ===
=== Usages ===
v67 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a146  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v67 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: CharsetEncoder.replacement
nodeSourcePosition: at java.nio.charset.CharsetEncoder.replaceWith(CharsetEncoder.java:301) [bci: 76]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v445 
value: a64 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j229 
=== Usages ===
=== Predecessor ===
a146 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v445 value: a64 stateAfter: - lastLocationAccess: - #next: j229  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j229 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 1]
at java.nio.charset.CharsetEncoder.replaceWith(CharsetEncoder.java:301) [bci: 76]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1 
=== Succesors ===
next: v235 
=== Usages ===
j231 
=== Predecessor ===
v67 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a1 #next: v235  <|@  <|@
f <@~|@floating>@ <|@
tid i230 <|@
result int[9|0x9] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.cardTableShift(GraalHotSpotVMConfig) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.nio.charset.CharsetEncoder.replaceWith(CharsetEncoder.java:301) [bci: 76]
rawvalue: 9
stableDimension: 0
stamp: i32 [9] ⇊0000000000000009 ⇈0000000000000009
stampKind: i32
value: int[9|0x9]
=== Inputs ===
=== Succesors ===
=== Usages ===
j231 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j231 <|@
result v15|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.nio.charset.CharsetEncoder.replaceWith(CharsetEncoder.java:301) [bci: 76]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j229 
y: i230 
=== Succesors ===
=== Usages ===
v458 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j229 y: i230  <|@  <|@
f <@~|@floating>@ <|@
tid j234 <|@
result v16|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.loadLongConfigValue(int) [bci: -1]
at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.cardTableAddress(GraalHotSpotVMConfigNode.java:114) [bci: 6]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:133) [bci: 7]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.nio.charset.CharsetEncoder.replaceWith(CharsetEncoder.java:301) [bci: 76]
rawvalue: 4682670080
stableDimension: 0
stamp: i64 [4682670080] ⇊00000001171be000 ⇈00000001171be000
stampKind: i64
value: long[4682670080|0x1171be000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v458 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v458 <|@
result [v15|QWORD[*] + v16|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j231 
index: j234 
=== Succesors ===
=== Usages ===
v235 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j231 index: j234  <|@  <|@
f <@~|@floating>@ <|@
tid i236 <|@
result byte[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.nio.charset.CharsetEncoder.replaceWith(CharsetEncoder.java:301) [bci: 76]
rawvalue: 0
stableDimension: 0
stamp: i8 [0] ⇈0000000000000000
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v235 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v235 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.nio.charset.CharsetEncoder.replaceWith(CharsetEncoder.java:301) [bci: 76]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v458 
value: i236 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: i434 
=== Usages ===
=== Predecessor ===
j229 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v458 value: i236 stateAfter: - lastLocationAccess: - #next: i434  <|@  <|@
f <@~|@floating>@ <|@
tid v446 <|@
result [v10|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a146 
index: - 
=== Succesors ===
=== Usages ===
i434 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a146 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i434 <|@
result v17|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: byte
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.implReplaceWith(UTF_8.java:698) [bci: 3]
at java.nio.charset.CharsetEncoder.replaceWith(CharsetEncoder.java:303) [bci: 84]
nullCheck: false
stamp: i8
=== Inputs ===
stateBefore: - 
guard: v89 
address: v446 
=== Succesors ===
next: v76 
=== Usages ===
v76 
=== Predecessor ===
v235 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v89 address: v446 #next: v76  <|@  <|@
f <@~|@floating>@ <|@
tid v447 <|@
result [v0|QWORD[.] + 44] <|@
d <@d|@=== Debug Properties ===
displacement: 44
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v76 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v76 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: UTF_8$Encoder.repl
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.implReplaceWith(UTF_8.java:698) [bci: 4]
at java.nio.charset.CharsetEncoder.replaceWith(CharsetEncoder.java:303) [bci: 84]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v447 
value: i434 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v31 
=== Usages ===
=== Predecessor ===
i434 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v447 value: i434 stateAfter: - lastLocationAccess: - #next: v31  <|@  <|@
f <@*|@fixed>@ <|@
tid v31 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.charset.CharsetEncoder.replaceWith(CharsetEncoder.java:304) [bci: 88]
stamp: void
=== Inputs ===
result: a1 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v76 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a1 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v10|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v11|QWORD[.] = LEA [v1|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = MOVSXB [v11|QWORD[.]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD[.] = LEA [v10|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v13|QWORD[.]], y: v12|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v14|DWORD[.] = COMPRESSPOINTER (input: v10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@67319e64 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 28], y: v14|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v16|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v15|QWORD[*] + v16|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = MOVSXB [v10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v0|QWORD[.] + 44], y: v17|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B10" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v91 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.charset.CharsetEncoder.replaceWith(CharsetEncoder.java:291) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: v159 
=== Usages ===
=== Predecessor ===
v92 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v159  <|@  <|@
f <@~|@floating>@ <|@
tid i160 <|@
result int[-12051|0xffffffffffffd0ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -12051
stableDimension: 0
stamp: i32 [-12051] ⇊00000000ffffd0ed ⇈00000000ffffd0ed
stampKind: i32
value: int[-12051|0xffffffffffffd0ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i154 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v159 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v150 
=== Predecessor ===
v91 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-12051|0xffffffffffffd0ed]] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B2" "B9" "B4" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i154 <|@
result v18|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-16147 - -10771] ⇊00000000ffffc0ed ⇈00000000ffffdded
valueDescription: i32
=== Inputs ===
merge: v150 
values: i158 i160 i162 
=== Succesors ===
=== Usages ===
v156 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v150 values: i158 i160 i162  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v150 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v157 v159 v161 
=== Succesors ===
next: v156 
=== Usages ===
i154 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v157 v159 v161 #next: v156  <|@  <|@
f <@~|@floating>@ <|@
tid a153 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v156 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v156 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?3 
actionAndReason: i154 
speculation: a153 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v150 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?3 actionAndReason: i154 speculation: a153  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v18|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v18|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.nio.charset.CharsetEncoder.replaceWith(CharsetEncoder.java:288) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@2fea2a63 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.nio.charset.CharsetEncoder.replaceWith(CharsetEncoder.java:288) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction CMP [v1|QWORD[.] + 12] y: 1 size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v2|SINGLE = H [v0|QWORD[.] + 16] nZ: XMM oh: VMOVSS <|@ <|@
      nr   -1  <|@ instruction v3|SINGLE = VMOVE input: float[1.0|0x3f800000] <|@ <|@
      nr   -1  <|@ instruction VUCOMISS (x: v2|SINGLE, y: v3|SINGLE) <|@ <|@
      nr   -1  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.0 condition: |<| trueDestination: B1 -> B2 falseDestination: B1 -> B3 unorderedIsTrue: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOVSXB [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v4|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = LEA [v5|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v6|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v6|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v5|QWORD + 216] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v5|QWORD + 280] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v5|QWORD + 344] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v5|QWORD + 408] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV [v5|QWORD + 12] y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v5|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v5|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v9|QWORD[.] = MOVE v5|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v9|QWORD[.]] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B6" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v10|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v11|QWORD[.] = LEA [v1|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = MOVSXB [v11|QWORD[.]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD[.] = LEA [v10|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v13|QWORD[.]], y: v12|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v14|DWORD[.] = COMPRESSPOINTER (input: v10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@67319e64 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 28], y: v14|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v16|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v15|QWORD[*] + v16|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = MOVSXB [v10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v0|QWORD[.] + 44], y: v17|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v7|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@java.nio.charset.CharsetEncoder.replaceWith(CharsetEncoder.java:288) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v8|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v8|QWORD[.]] destination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B10" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-16147|0xffffffffffffc0ed]] destination: B4 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B2" "B9" "B4" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   -1  <|@ instruction [v18|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v18|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.nio.charset.CharsetEncoder.replaceWith(CharsetEncoder.java:288) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B10" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-12051|0xffffffffffffd0ed]] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B10" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-13075|0xffffffffffffcced]] destination: B2 -> B10 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: ifnonnull     14
     4: new           #9          // java.lang.IllegalArgumentException
     7: dup           
     8: ldc           #22         // "Null replacement"
    10: invokespecial #7          // java.lang.IllegalArgumentException.<init>:(java.lang.String)void
    13: athrow        
    14: aload_1       
    15: arraylength   
    16: istore_2      
    17: iload_2       
    18: ifne          31
    21: new           #9          // java.lang.IllegalArgumentException
    24: dup           
    25: ldc           #23         // "Empty replacement"
    27: invokespecial #7          // java.lang.IllegalArgumentException.<init>:(java.lang.String)void
    30: athrow        
    31: iload_2       
    32: i2f           
    33: aload_0       
    34: getfield      #11         // maxBytesPerChar:float
    37: fcmpl         
    38: ifle          51
    41: new           #9          // java.lang.IllegalArgumentException
    44: dup           
    45: ldc           #24         // "Replacement too long"
    47: invokespecial #7          // java.lang.IllegalArgumentException.<init>:(java.lang.String)void
    50: athrow        
    51: aload_0       
    52: aload_1       
    53: invokevirtual #15         // isLegalReplacement:(byte[])boolean
    56: ifne          69
    59: new           #9          // java.lang.IllegalArgumentException
    62: dup           
    63: ldc           #26         // "Illegal replacement"
    65: invokespecial #7          // java.lang.IllegalArgumentException.<init>:(java.lang.String)void
    68: athrow        
    69: aload_0       
    70: aload_1       
    71: aload_1       
    72: arraylength   
    73: invokestatic  #14         // java.util.Arrays.copyOf:(byte[], int)byte[]
    76: putfield      #9          // replacement:byte[]
    79: aload_0       
    80: aload_0       
    81: getfield      #9          // replacement:byte[]
    84: invokevirtual #16         // implReplaceWith:(byte[])void
    87: aload_0       
    88: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@2fea2a63 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction r14|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ st <@st|@reference-map: [r13:0, r14:0]
live-base-pointers: []
java.nio.charset.CharsetEncoder.replaceWith(CharsetEncoder.java:288) [bci: 0]
locals: r13|QWORD[.] r14|QWORD[.] - 
>@ <|@ instruction CMP [r14|QWORD[.] + 12] y: 1 size: DWORD state [bci:0] <|@ <|@
      nr   12  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   16  <|@ instruction xmm0|SINGLE = H [r13|QWORD[.] + 16] nZ: XMM oh: VMOVSS <|@ <|@
      nr   18  <|@ instruction xmm1|SINGLE = VMOVE input: float[1.0|0x3f800000] <|@ <|@
      nr   20  <|@ instruction VUCOMISS (x: xmm0|SINGLE, y: xmm1|SINGLE) <|@ <|@
      nr   22  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.0 condition: |<| trueDestination: B1 -> B2 falseDestination: B1 -> B3 unorderedIsTrue: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   24  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   26  <|@ instruction rax|DWORD = MOVSXB [r14|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   28  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr   30  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   34  <|@ instruction rax|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   36  <|@ instruction rsi|QWORD = LEA [rax|QWORD + 24] size: QWORD <|@ <|@
      nr   38  <|@ instruction CMP (x: rsi|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   40  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   44  <|@ instruction MOV (x: [r15|QWORD + 96], y: rsi|QWORD) size: QWORD <|@ <|@
      nr   46  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 216] instr: 0 <|@ <|@
      nr   48  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 280] instr: 0 <|@ <|@
      nr   50  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 344] instr: 0 <|@ <|@
      nr   52  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 408] instr: 0 <|@ <|@
      nr   54  <|@ instruction MOV [rax|QWORD + 12] y: 1 size: DWORD <|@ <|@
      nr   56  <|@ instruction MOV [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr   58  <|@ instruction MOV [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr   60  <|@ instruction rax|QWORD[.] = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr   62  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B6" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   66  <|@ instruction rsi|QWORD[.] = LEA [r14|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   68  <|@ instruction rsi|DWORD = MOVSXB [rsi|QWORD[.]] size: DWORD <|@ <|@
      nr   70  <|@ instruction rdx|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   72  <|@ instruction MOVB (x: [rdx|QWORD[.]], y: rsi|DWORD) size: BYTE <|@ <|@
      nr   74  <|@ instruction rsi|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@67319e64 encoding: base: 0 shift: 3 <|@ <|@
      nr   76  <|@ instruction MOV (x: [r13|QWORD[.] + 28], y: rsi|DWORD[.]) size: DWORD <|@ <|@
      nr   78  <|@ instruction rsi|QWORD[*] = SHR r13|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   80  <|@ instruction rdx|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr   82  <|@ instruction MOVB (x: [rsi|QWORD[*] + rdx|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   84  <|@ instruction rax|DWORD = MOVSXB [rax|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   86  <|@ instruction MOVB (x: [r13|QWORD[.] + 44], y: rax|DWORD) size: BYTE <|@ <|@
      nr   88  <|@ instruction rax|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr   90  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   94  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr   98  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  100  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  102  <|@ st <@st|@reference-map: [r13:0, r14:0]
live-base-pointers: []
java.nio.charset.CharsetEncoder.replaceWith(CharsetEncoder.java:288) [bci: 0]
locals: r13|QWORD[.] r14|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr  106  <|@ instruction JUMP ~[] destination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B10" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-16147|0xffffffffffffc0ed] // MoveResolver resolve mapping <|@ <|@
      nr  110  <|@ instruction JUMP ~[] destination: B4 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B2" "B9" "B4" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  120  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  122  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  124  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  126  <|@ st <@st|@reference-map: [r13:0, r14:0]
live-base-pointers: []
java.nio.charset.CharsetEncoder.replaceWith(CharsetEncoder.java:288) [bci: 0]
locals: r13|QWORD[.] r14|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B10" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-12051|0xffffffffffffd0ed] // MoveResolver resolve mapping <|@ <|@
      nr  114  <|@ instruction JUMP ~[] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B10" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-13075|0xffffffffffffcced] // MoveResolver resolve mapping <|@ <|@
      nr  118  <|@ instruction JUMP ~[] destination: B2 -> B10 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: ifnonnull     14
     4: new           #9          // java.lang.IllegalArgumentException
     7: dup           
     8: ldc           #22         // "Null replacement"
    10: invokespecial #7          // java.lang.IllegalArgumentException.<init>:(java.lang.String)void
    13: athrow        
    14: aload_1       
    15: arraylength   
    16: istore_2      
    17: iload_2       
    18: ifne          31
    21: new           #9          // java.lang.IllegalArgumentException
    24: dup           
    25: ldc           #23         // "Empty replacement"
    27: invokespecial #7          // java.lang.IllegalArgumentException.<init>:(java.lang.String)void
    30: athrow        
    31: iload_2       
    32: i2f           
    33: aload_0       
    34: getfield      #11         // maxBytesPerChar:float
    37: fcmpl         
    38: ifle          51
    41: new           #9          // java.lang.IllegalArgumentException
    44: dup           
    45: ldc           #24         // "Replacement too long"
    47: invokespecial #7          // java.lang.IllegalArgumentException.<init>:(java.lang.String)void
    50: athrow        
    51: aload_0       
    52: aload_1       
    53: invokevirtual #15         // isLegalReplacement:(byte[])boolean
    56: ifne          69
    59: new           #9          // java.lang.IllegalArgumentException
    62: dup           
    63: ldc           #26         // "Illegal replacement"
    65: invokespecial #7          // java.lang.IllegalArgumentException.<init>:(java.lang.String)void
    68: athrow        
    69: aload_0       
    70: aload_1       
    71: aload_1       
    72: arraylength   
    73: invokestatic  #14         // java.util.Arrays.copyOf:(byte[], int)byte[]
    76: putfield      #9          // replacement:byte[]
    79: aload_0       
    80: aload_0       
    81: getfield      #9          // replacement:byte[]
    84: invokevirtual #16         // implReplaceWith:(byte[])void
    87: aload_0       
    88: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@2fea2a63 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction r14|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ st <@st|@reference-map: [r13:0, r14:0]
live-base-pointers: []
java.nio.charset.CharsetEncoder.replaceWith(CharsetEncoder.java:288) [bci: 0]
locals: r13|QWORD[.] r14|QWORD[.] - 
>@ <|@ instruction CMP [r14|QWORD[.] + 12] y: 1 size: DWORD state [bci:0] <|@ <|@
      nr   12  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   16  <|@ instruction xmm0|SINGLE = H [r13|QWORD[.] + 16] nZ: XMM oh: VMOVSS <|@ <|@
      nr   18  <|@ instruction xmm1|SINGLE = VMOVE input: float[1.0|0x3f800000] <|@ <|@
      nr   20  <|@ instruction VUCOMISS (x: xmm0|SINGLE, y: xmm1|SINGLE) <|@ <|@
      nr   22  <|@ instruction FLOATBRANCH trueDestinationProbability: 0.0 condition: |<| trueDestination: B1 -> B2 falseDestination: B1 -> B3 unorderedIsTrue: false <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   24  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   26  <|@ instruction rax|DWORD = MOVSXB [r14|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   28  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr   30  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   34  <|@ instruction rax|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   36  <|@ instruction rsi|QWORD = LEA [rax|QWORD + 24] size: QWORD <|@ <|@
      nr   38  <|@ instruction CMP (x: rsi|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   40  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   44  <|@ instruction MOV (x: [r15|QWORD + 96], y: rsi|QWORD) size: QWORD <|@ <|@
      nr   46  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 216] instr: 0 <|@ <|@
      nr   48  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 280] instr: 0 <|@ <|@
      nr   50  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 344] instr: 0 <|@ <|@
      nr   52  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 408] instr: 0 <|@ <|@
      nr   54  <|@ instruction MOV [rax|QWORD + 12] y: 1 size: DWORD <|@ <|@
      nr   56  <|@ instruction MOV [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr   58  <|@ instruction MOV [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr   60  <|@ instruction rax|QWORD[.] = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr   62  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B6" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   66  <|@ instruction rsi|QWORD[.] = LEA [r14|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   68  <|@ instruction rsi|DWORD = MOVSXB [rsi|QWORD[.]] size: DWORD <|@ <|@
      nr   70  <|@ instruction rdx|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   72  <|@ instruction MOVB (x: [rdx|QWORD[.]], y: rsi|DWORD) size: BYTE <|@ <|@
      nr   74  <|@ instruction rsi|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@67319e64 encoding: base: 0 shift: 3 <|@ <|@
      nr   76  <|@ instruction MOV (x: [r13|QWORD[.] + 28], y: rsi|DWORD[.]) size: DWORD <|@ <|@
      nr   78  <|@ instruction rsi|QWORD[*] = SHR r13|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   80  <|@ instruction rdx|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr   82  <|@ instruction MOVB (x: [rsi|QWORD[*] + rdx|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   84  <|@ instruction rax|DWORD = MOVSXB [rax|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   86  <|@ instruction MOVB (x: [r13|QWORD[.] + 44], y: rax|DWORD) size: BYTE <|@ <|@
      nr   88  <|@ instruction rax|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr   90  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   94  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr   98  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  100  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  102  <|@ st <@st|@reference-map: [r13:0, r14:0]
live-base-pointers: []
java.nio.charset.CharsetEncoder.replaceWith(CharsetEncoder.java:288) [bci: 0]
locals: r13|QWORD[.] r14|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr  106  <|@ instruction JUMP ~[] destination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B10" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-16147|0xffffffffffffc0ed] // MoveResolver resolve mapping <|@ <|@
      nr  110  <|@ instruction JUMP ~[] destination: B4 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B2" "B9" "B4" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  120  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  122  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  124  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  126  <|@ st <@st|@reference-map: [r13:0, r14:0]
live-base-pointers: []
java.nio.charset.CharsetEncoder.replaceWith(CharsetEncoder.java:288) [bci: 0]
locals: r13|QWORD[.] r14|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B10" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-12051|0xffffffffffffd0ed] // MoveResolver resolve mapping <|@ <|@
      nr  114  <|@ instruction JUMP ~[] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B10" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-13075|0xffffffffffffcced] // MoveResolver resolve mapping <|@ <|@
      nr  118  <|@ instruction JUMP ~[] destination: B2 -> B10 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: ifnonnull     14
     4: new           #9          // java.lang.IllegalArgumentException
     7: dup           
     8: ldc           #22         // "Null replacement"
    10: invokespecial #7          // java.lang.IllegalArgumentException.<init>:(java.lang.String)void
    13: athrow        
    14: aload_1       
    15: arraylength   
    16: istore_2      
    17: iload_2       
    18: ifne          31
    21: new           #9          // java.lang.IllegalArgumentException
    24: dup           
    25: ldc           #23         // "Empty replacement"
    27: invokespecial #7          // java.lang.IllegalArgumentException.<init>:(java.lang.String)void
    30: athrow        
    31: iload_2       
    32: i2f           
    33: aload_0       
    34: getfield      #11         // maxBytesPerChar:float
    37: fcmpl         
    38: ifle          51
    41: new           #9          // java.lang.IllegalArgumentException
    44: dup           
    45: ldc           #24         // "Replacement too long"
    47: invokespecial #7          // java.lang.IllegalArgumentException.<init>:(java.lang.String)void
    50: athrow        
    51: aload_0       
    52: aload_1       
    53: invokevirtual #15         // isLegalReplacement:(byte[])boolean
    56: ifne          69
    59: new           #9          // java.lang.IllegalArgumentException
    62: dup           
    63: ldc           #26         // "Illegal replacement"
    65: invokespecial #7          // java.lang.IllegalArgumentException.<init>:(java.lang.String)void
    68: athrow        
    69: aload_0       
    70: aload_1       
    71: aload_1       
    72: arraylength   
    73: invokestatic  #14         // java.util.Arrays.copyOf:(byte[], int)byte[]
    76: putfield      #9          // replacement:byte[]
    79: aload_0       
    80: aload_0       
    81: getfield      #9          // replacement:byte[]
    84: invokevirtual #16         // implReplaceWith:(byte[])void
    87: aload_0       
    88: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849c1e203493bc20f85efffffff900f1f80000000000f1f800000000089842400c0feff4883ec1848896c24104c8bee4c8bf241837e0c010f85f1000000c4c17a104510c4c17a100d00000000c5f82ec17a060f82de000000410fbe461085c00f8caf000000498b4760488d7018493b77700f8781000000498977600f1880d80000000f1880180100000f1880580100000f188098010000c7400c0100000048c70001000000c74008addeadde498d76100fbe36488d5010408832488bf048c1ee034189751c498bf548c1ee0948ba00e01b1701000000448824160fbe40104188452c498bc5488b6c24104883c418850500000000c5f877c348beaddeaddeaddeaddeba01000000b900000000e80000000090eb9841baedc0ffff4589979c0200004d89a7a8020000e8000000009041baedd0ffffebe441baedccffffebdce80000000090e80000000090  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@2fea2a63 slotKind: QWORD  <||@
  Comment 48 6 r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 51 8 r14|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 54 10 CMP [r14|QWORD[.] + 12] y: 1 size: DWORD state [bci:0]  <||@
  Comment 54 [r13:0, r14:0]at java.nio.charset.CharsetEncoder.replaceWith(CharsetEncoder.java:288) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2 
     locals:  |r13|QWORD[.]  |r14|QWORD[.]  |-   <||@
  Comment 54 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 59 12 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B9  <||@
  Comment 65 block B1 null  <||@
  Comment 65 14 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 65 16 xmm0|SINGLE = H [r13|QWORD[.] + 16] nZ: XMM oh: VMOVSS  <||@
  Comment 71 18 xmm1|SINGLE = VMOVE input: float[1.0|0x3f800000]  <||@
  Comment 71 {DataSection[0x0]}  <||@
  Comment 80 20 VUCOMISS (x: xmm0|SINGLE, y: xmm1|SINGLE)  <||@
  Comment 84 22 FLOATBRANCH trueDestinationProbability: 0.0 condition: |<| trueDestination: B1 -> B2 falseDestination: B1 -> B3 unorderedIsTrue: false  <||@
  Comment 92 block B3 null  <||@
  Comment 92 24 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 92 26 rax|DWORD = MOVSXB [r14|QWORD[.] + 16] size: DWORD  <||@
  Comment 97 28 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 99 30 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B5  <||@
  Comment 105 block B5 null  <||@
  Comment 105 32 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 105 34 rax|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 109 36 rsi|QWORD = LEA [rax|QWORD + 24] size: QWORD  <||@
  Comment 113 38 CMP (x: rsi|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 117 40 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B7  <||@
  Comment 123 block B7 null  <||@
  Comment 123 42 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 123 44 MOV (x: [r15|QWORD + 96], y: rsi|QWORD) size: QWORD  <||@
  Comment 127 46 AMD64PREFETCH ~[rax|QWORD + 216] instr: 0  <||@
  Comment 134 48 AMD64PREFETCH ~[rax|QWORD + 280] instr: 0  <||@
  Comment 141 50 AMD64PREFETCH ~[rax|QWORD + 344] instr: 0  <||@
  Comment 148 52 AMD64PREFETCH ~[rax|QWORD + 408] instr: 0  <||@
  Comment 155 54 MOV [rax|QWORD + 12] y: 1 size: DWORD  <||@
  Comment 162 56 MOV [rax|QWORD] y: 1 size: QWORD  <||@
  Comment 169 58 MOV [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed}  <||@
  Comment 169 {meta{HotSpotType<[B, resolved>;compressed}}  <||@
  Comment 176 60 rax|QWORD[.] = MOVE rax|QWORD moveKind: QWORD  <||@
  Comment 176 62 JUMP ~[] destination: B7 -> B8  <||@
  Comment 176 block B8 null  <||@
  Comment 176 64 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 176 66 rsi|QWORD[.] = LEA [r14|QWORD[.] + 16] size: QWORD  <||@
  Comment 180 68 rsi|DWORD = MOVSXB [rsi|QWORD[.]] size: DWORD  <||@
  Comment 183 70 rdx|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD  <||@
  Comment 187 72 MOVB (x: [rdx|QWORD[.]], y: rsi|DWORD) size: BYTE  <||@
  Comment 190 74 rsi|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@67319e64 encoding: base: 0 shift: 3  <||@
  Comment 197 76 MOV (x: [r13|QWORD[.] + 28], y: rsi|DWORD[.]) size: DWORD  <||@
  Comment 201 78 rsi|QWORD[*] = SHR r13|QWORD[.] y: 9 size: QWORD  <||@
  Comment 208 80 rdx|QWORD = MOVE input: long[4682670080|0x1171be000]  <||@
  Comment 218 82 MOVB (x: [rsi|QWORD[*] + rdx|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 222 84 rax|DWORD = MOVSXB [rax|QWORD[.] + 16] size: DWORD  <||@
  Comment 226 86 MOVB (x: [r13|QWORD[.] + 44], y: rax|DWORD) size: BYTE  <||@
  Comment 230 88 rax|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 233 90 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 242 12  <||@
  Comment 252 block B6 null  <||@
  Comment 252 92 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 252 94 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>}  <||@
  Comment 252 {meta{HotSpotType<[B, resolved>}}  <||@
  Comment 262 98 rdx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 267 100 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 272 102 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0]  <||@
  Comment 272 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 277 [r13:0, r14:0]at java.nio.charset.CharsetEncoder.replaceWith(CharsetEncoder.java:288) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2 
     locals:  |r13|QWORD[.]  |r14|QWORD[.]  |-   <||@
  Comment 278 106 JUMP ~[] destination: B6 -> B8  <||@
  Comment 280 block B4 null  <||@
  Comment 280 108 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 280 -1 r10|DWORD = MOVE input: int[-16147|0xffffffffffffc0ed]  <||@
  Comment 286 110 JUMP ~[] destination: B4 -> B10  <||@
  Comment 286 block B10 null  <||@
  Comment 286 120 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 286 122 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 293 124 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 300 126 DEOPT info [bci:0]  <||@
  Comment 300 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 305 [r13:0, r14:0]at java.nio.charset.CharsetEncoder.replaceWith(CharsetEncoder.java:288) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2 
     locals:  |r13|QWORD[.]  |r14|QWORD[.]  |-   <||@
  Comment 306 block B9 null  <||@
  Comment 306 112 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 306 -1 r10|DWORD = MOVE input: int[-12051|0xffffffffffffd0ed]  <||@
  Comment 312 114 JUMP ~[] destination: B9 -> B10  <||@
  Comment 314 block B2 null  <||@
  Comment 314 116 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 314 -1 r10|DWORD = MOVE input: int[-13075|0xffffffffffffcced]  <||@
  Comment 320 118 JUMP ~[] destination: B2 -> B10  <||@
  Comment 322 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 322 4  <||@
  Comment 328 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 328 5  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-8724[java.nio.charset.CharsetEncoder.replaceWith(byte[])]"
  method "HotSpotCompilation-8724[java.nio.charset.CharsetEncoder.replaceWith(byte[])]"
  date 1527005196811
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 106be7bc0 448b560849c1e203493bc20f858fe2c1ff900f1f80000000000f1f800000000089842400c0feff4883ec1848896c24104c8bee4c8bf241837e0c010f85f1000000c4c17a104510c4c17a100d90ffffffc5f82ec17a060f82de000000410fbe461085c00f8caf000000498b4760488d7018493b77700f8781000000498977600f1880d80000000f1880180100000f1880580100000f188098010000c7400c0100000048c70001000000c74008f50000f8498d76100fbe36488d5010408832488bf048c1ee034189751c498bf548c1ee0948ba00e01b1701000000448824160fbe40104188452c498bc5488b6c24104883c41885054e73cafdc5f877c348bea80700c007000000ba01000000b900000000e80bf13a0090eb9841baedc0ffff4589979c0200004d89a7a8020000e80df9c1ff9041baedd0ffffebe441baedccffffebdce81929060090e8f3f7c1ff90f4f4  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@2fea2a63 slotKind: QWORD  <||@
  Comment 48 6 r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 51 8 r14|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 54 10 CMP [r14|QWORD[.] + 12] y: 1 size: DWORD state [bci:0]  <||@
  Comment 54 [r13:0, r14:0]at java.nio.charset.CharsetEncoder.replaceWith(CharsetEncoder.java:288) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2 
     locals:  |r13|QWORD[.]  |r14|QWORD[.]  |-   <||@
  Comment 54 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 59 12 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B9  <||@
  Comment 65 block B1 null  <||@
  Comment 65 14 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 65 16 xmm0|SINGLE = H [r13|QWORD[.] + 16] nZ: XMM oh: VMOVSS  <||@
  Comment 71 18 xmm1|SINGLE = VMOVE input: float[1.0|0x3f800000]  <||@
  Comment 71 {DataSection[0x0]}  <||@
  Comment 80 20 VUCOMISS (x: xmm0|SINGLE, y: xmm1|SINGLE)  <||@
  Comment 84 22 FLOATBRANCH trueDestinationProbability: 0.0 condition: |<| trueDestination: B1 -> B2 falseDestination: B1 -> B3 unorderedIsTrue: false  <||@
  Comment 92 block B3 null  <||@
  Comment 92 24 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 92 26 rax|DWORD = MOVSXB [r14|QWORD[.] + 16] size: DWORD  <||@
  Comment 97 28 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 99 30 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B5  <||@
  Comment 105 block B5 null  <||@
  Comment 105 32 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 105 34 rax|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 109 36 rsi|QWORD = LEA [rax|QWORD + 24] size: QWORD  <||@
  Comment 113 38 CMP (x: rsi|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 117 40 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B7  <||@
  Comment 123 block B7 null  <||@
  Comment 123 42 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 123 44 MOV (x: [r15|QWORD + 96], y: rsi|QWORD) size: QWORD  <||@
  Comment 127 46 AMD64PREFETCH ~[rax|QWORD + 216] instr: 0  <||@
  Comment 134 48 AMD64PREFETCH ~[rax|QWORD + 280] instr: 0  <||@
  Comment 141 50 AMD64PREFETCH ~[rax|QWORD + 344] instr: 0  <||@
  Comment 148 52 AMD64PREFETCH ~[rax|QWORD + 408] instr: 0  <||@
  Comment 155 54 MOV [rax|QWORD + 12] y: 1 size: DWORD  <||@
  Comment 162 56 MOV [rax|QWORD] y: 1 size: QWORD  <||@
  Comment 169 58 MOV [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed}  <||@
  Comment 169 {meta{HotSpotType<[B, resolved>;compressed}}  <||@
  Comment 176 60 rax|QWORD[.] = MOVE rax|QWORD moveKind: QWORD  <||@
  Comment 176 62 JUMP ~[] destination: B7 -> B8  <||@
  Comment 176 block B8 null  <||@
  Comment 176 64 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 176 66 rsi|QWORD[.] = LEA [r14|QWORD[.] + 16] size: QWORD  <||@
  Comment 180 68 rsi|DWORD = MOVSXB [rsi|QWORD[.]] size: DWORD  <||@
  Comment 183 70 rdx|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD  <||@
  Comment 187 72 MOVB (x: [rdx|QWORD[.]], y: rsi|DWORD) size: BYTE  <||@
  Comment 190 74 rsi|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@67319e64 encoding: base: 0 shift: 3  <||@
  Comment 197 76 MOV (x: [r13|QWORD[.] + 28], y: rsi|DWORD[.]) size: DWORD  <||@
  Comment 201 78 rsi|QWORD[*] = SHR r13|QWORD[.] y: 9 size: QWORD  <||@
  Comment 208 80 rdx|QWORD = MOVE input: long[4682670080|0x1171be000]  <||@
  Comment 218 82 MOVB (x: [rsi|QWORD[*] + rdx|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 222 84 rax|DWORD = MOVSXB [rax|QWORD[.] + 16] size: DWORD  <||@
  Comment 226 86 MOVB (x: [r13|QWORD[.] + 44], y: rax|DWORD) size: BYTE  <||@
  Comment 230 88 rax|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 233 90 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 242 12  <||@
  Comment 252 block B6 null  <||@
  Comment 252 92 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 252 94 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>}  <||@
  Comment 252 {meta{HotSpotType<[B, resolved>}}  <||@
  Comment 262 98 rdx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 267 100 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 272 102 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0]  <||@
  Comment 272 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 277 [r13:0, r14:0]at java.nio.charset.CharsetEncoder.replaceWith(CharsetEncoder.java:288) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2 
     locals:  |r13|QWORD[.]  |r14|QWORD[.]  |-   <||@
  Comment 278 106 JUMP ~[] destination: B6 -> B8  <||@
  Comment 280 block B4 null  <||@
  Comment 280 108 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 280 -1 r10|DWORD = MOVE input: int[-16147|0xffffffffffffc0ed]  <||@
  Comment 286 110 JUMP ~[] destination: B4 -> B10  <||@
  Comment 286 block B10 null  <||@
  Comment 286 120 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 286 122 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 293 124 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 300 126 DEOPT info [bci:0]  <||@
  Comment 300 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 305 [r13:0, r14:0]at java.nio.charset.CharsetEncoder.replaceWith(CharsetEncoder.java:288) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2 
     locals:  |r13|QWORD[.]  |r14|QWORD[.]  |-   <||@
  Comment 306 block B9 null  <||@
  Comment 306 112 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 306 -1 r10|DWORD = MOVE input: int[-12051|0xffffffffffffd0ed]  <||@
  Comment 312 114 JUMP ~[] destination: B9 -> B10  <||@
  Comment 314 block B2 null  <||@
  Comment 314 116 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 314 -1 r10|DWORD = MOVE input: int[-13075|0xffffffffffffcced]  <||@
  Comment 320 118 JUMP ~[] destination: B2 -> B10  <||@
  Comment 322 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 322 4  <||@
  Comment 328 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 328 5  <||@
  HexCodeFile>>> <|@
end_nmethod
